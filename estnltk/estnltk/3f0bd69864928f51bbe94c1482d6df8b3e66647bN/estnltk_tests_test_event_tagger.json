[{"lineNumber": 9, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "test_resolve_conflicts_MAX", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "test_resolve_conflicts_MIN", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "test_resolve_conflicts_ALL", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "test_event_tagger_tag_events", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "test_event_tagger_sort_events", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "test_event_tagger_naive_equals_ahocorasick", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "test_event_tagger_case_insensitive", "type": "Callable[[Any], Any]"}, {"lineNumber": 9, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "events", "type": "List[nothing]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "result", "type": "Optional[Union[List[Any], List[nothing]]]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "expected", "type": "List[nothing]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "events", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "result", "type": "Optional[Union[List[Any], List[Dict[unicode, int]]]]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "expected", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "result", "type": "Optional[Union[List[Any], List[Dict[unicode, int]]]]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "expected", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "result", "type": "Optional[Union[List[Any], List[Dict[unicode, int]]]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "expected", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "result", "type": "Optional[Union[List[Any], List[Dict[unicode, int]]]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "expected", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "result", "type": "Optional[Union[List[Any], List[Dict[unicode, int]]]]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "expected", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "events", "type": "List[nothing]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "result", "type": "Optional[Union[List[Any], List[nothing]]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "expected", "type": "List[nothing]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "events", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "result", "type": "Optional[Union[List[Any], List[Dict[unicode, int]]]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "expected", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "result", "type": "Optional[Union[List[Any], List[Dict[unicode, int]]]]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "expected", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "result", "type": "Optional[Union[List[Any], List[Dict[unicode, int]]]]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "expected", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "result", "type": "Optional[Union[List[Any], List[Dict[unicode, int]]]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "expected", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "result", "type": "Optional[Union[List[Any], List[Dict[unicode, int]]]]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "result", "type": "Optional[Union[List[Any], List[Dict[unicode, int]]]]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "text", "type": "estnltk.text.Text"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "text", "type": "estnltk.text.Text"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "text", "type": "estnltk.text.Text"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "naive", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "ahocorasick", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "text", "type": "estnltk.text.Text"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 12, "col_offset": 23, "nodeName": "EventTagger", "type": "Type[estnltk.taggers.event_tagger.EventTagger]"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "_resolve_conflicts", "type": "Callable"}, {"lineNumber": 15, "col_offset": 49, "nodeName": "events", "type": "List[nothing]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "expected", "type": "List[nothing]"}, {"lineNumber": 17, "col_offset": 39, "nodeName": "result", "type": "Optional[Union[List[nothing], List[Any]]]"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "_resolve_conflicts", "type": "Callable"}, {"lineNumber": 21, "col_offset": 49, "nodeName": "events", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "expected", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 23, "col_offset": 39, "nodeName": "result", "type": "Optional[Union[List[Dict[unicode, int]], List[Any]]]"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "_resolve_conflicts", "type": "Callable"}, {"lineNumber": 28, "col_offset": 49, "nodeName": "events", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "expected", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 30, "col_offset": 39, "nodeName": "result", "type": "Optional[Union[List[Any], List[Dict[unicode, int]]]]"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "_resolve_conflicts", "type": "Callable"}, {"lineNumber": 35, "col_offset": 49, "nodeName": "events", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "expected", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "result", "type": "Optional[Union[List[Dict[unicode, int]], List[Any]]]"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "_resolve_conflicts", "type": "Callable"}, {"lineNumber": 42, "col_offset": 49, "nodeName": "events", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "expected", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "result", "type": "Optional[Union[List[Any], List[Dict[unicode, int]]]]"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "_resolve_conflicts", "type": "Callable"}, {"lineNumber": 50, "col_offset": 49, "nodeName": "events", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "expected", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "result", "type": "Optional[Union[List[Any], List[Dict[unicode, int]]]]"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "EventTagger", "type": "Type[estnltk.taggers.event_tagger.EventTagger]"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "_resolve_conflicts", "type": "Callable"}, {"lineNumber": 58, "col_offset": 49, "nodeName": "events", "type": "List[nothing]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "expected", "type": "List[nothing]"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "result", "type": "Optional[Union[List[Any], List[nothing]]]"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "_resolve_conflicts", "type": "Callable"}, {"lineNumber": 64, "col_offset": 49, "nodeName": "events", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "expected", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "result", "type": "Optional[Union[List[Dict[unicode, int]], List[Any]]]"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "_resolve_conflicts", "type": "Callable"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "events", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "expected", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "result", "type": "Optional[Union[List[Any], List[Dict[unicode, int]]]]"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "_resolve_conflicts", "type": "Callable"}, {"lineNumber": 78, "col_offset": 49, "nodeName": "events", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "expected", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "result", "type": "Optional[Union[List[Dict[unicode, int]], List[Any]]]"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "_resolve_conflicts", "type": "Callable"}, {"lineNumber": 85, "col_offset": 49, "nodeName": "events", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "expected", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "result", "type": "Optional[Union[List[Any], List[Dict[unicode, int]]]]"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "_resolve_conflicts", "type": "Callable"}, {"lineNumber": 93, "col_offset": 49, "nodeName": "events", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "expected", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 96, "col_offset": 39, "nodeName": "result", "type": "Optional[Union[List[Any], List[Dict[unicode, int]]]]"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "EventTagger", "type": "Type[estnltk.taggers.event_tagger.EventTagger]"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "_resolve_conflicts", "type": "Callable"}, {"lineNumber": 104, "col_offset": 49, "nodeName": "events", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "expected", "type": "List[Dict[unicode, int]]"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "result", "type": "Optional[Union[List[Dict[unicode, int]], List[Any]]]"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "Text", "type": "Type[estnltk.text.Text]"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "EventTagger", "type": "Type[estnltk.taggers.event_tagger.EventTagger]"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "event_vocabulary", "type": "List[Dict[str, str]]"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "tag", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "text", "type": "estnltk.text.Text"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "expected", "type": "List[Dict[str, Union[str, int]]]"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "result", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "Text", "type": "Type[estnltk.text.Text]"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "EventTagger", "type": "Type[estnltk.taggers.event_tagger.EventTagger]"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "event_vocabulary", "type": "List[Dict[str, str]]"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "tag", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "text", "type": "estnltk.text.Text"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "expected", "type": "List[Dict[str, Union[str, int]]]"}, {"lineNumber": 127, "col_offset": 39, "nodeName": "result", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "Text", "type": "Type[estnltk.text.Text]"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "EventTagger", "type": "Type[estnltk.taggers.event_tagger.EventTagger]"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "event_vocabulary", "type": "List[Dict[str, str]]"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "tag", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "text", "type": "estnltk.text.Text"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "expected", "type": "List[Dict[str, Union[str, int]]]"}, {"lineNumber": 146, "col_offset": 39, "nodeName": "result", "type": "Any"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "EventTagger", "type": "Type[estnltk.taggers.event_tagger.EventTagger]"}, {"lineNumber": 156, "col_offset": 35, "nodeName": "event_vocabulary", "type": "List[Dict[str, str]]"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "_find_events_naive", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "text", "type": "str"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "_find_events_ahocorasick", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 162, "col_offset": 60, "nodeName": "text", "type": "str"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "naive", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 36, "nodeName": "ahocorasick", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "Text", "type": "Type[estnltk.text.Text]"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "EventTagger", "type": "Type[estnltk.taggers.event_tagger.EventTagger]"}, {"lineNumber": 176, "col_offset": 35, "nodeName": "event_vocabulary", "type": "List[Union[Dict[str, unicode], Dict[str, str]]]"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "tag", "type": "Callable[[Any], Any]"}, {"lineNumber": 180, "col_offset": 34, "nodeName": "text", "type": "estnltk.text.Text"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "expected", "type": "List[Union[Dict[str, Union[unicode, int]], Dict[str, Union[str, int]]]]"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "result", "type": "Any"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "EventTaggerTest"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "START", "type": "unicode"}, {"lineNumber": 22, "col_offset": 31, "nodeName": "END", "type": "unicode"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "EventTaggerTest"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "START", "type": "unicode"}, {"lineNumber": 29, "col_offset": 31, "nodeName": "END", "type": "unicode"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "EventTaggerTest"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "START", "type": "unicode"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "END", "type": "unicode"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "EventTaggerTest"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "START", "type": "unicode"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "END", "type": "unicode"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "EventTaggerTest"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "START", "type": "unicode"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "END", "type": "unicode"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "EventTaggerTest"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "EventTaggerTest"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "START", "type": "unicode"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "END", "type": "unicode"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "EventTaggerTest"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "START", "type": "unicode"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "END", "type": "unicode"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "EventTaggerTest"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "START", "type": "unicode"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "END", "type": "unicode"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "EventTaggerTest"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "START", "type": "unicode"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "END", "type": "unicode"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "EventTaggerTest"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "START", "type": "unicode"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "END", "type": "unicode"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "START", "type": "unicode"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "END", "type": "unicode"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "EventTaggerTest"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "START", "type": "unicode"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "START", "type": "unicode"}, {"lineNumber": 105, "col_offset": 31, "nodeName": "END", "type": "unicode"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "START", "type": "unicode"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "END", "type": "unicode"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "START", "type": "unicode"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "END", "type": "unicode"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "EventTaggerTest"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "EventTaggerTest"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "EventTaggerTest"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "EventTaggerTest"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "naive", "type": "List[Any]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "naive", "type": "List[Any]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "ahocorasick", "type": "List[Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "ahocorasick", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "EventTaggerTest"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "event_tagger", "type": "estnltk.taggers.event_tagger.EventTagger"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "EventTaggerTest"}, {"lineNumber": 164, "col_offset": 37, "nodeName": "event", "type": "Any"}, {"lineNumber": 165, "col_offset": 37, "nodeName": "event", "type": "Any"}, {"lineNumber": 167, "col_offset": 43, "nodeName": "event", "type": "Any"}, {"lineNumber": 168, "col_offset": 43, "nodeName": "event", "type": "Any"}]