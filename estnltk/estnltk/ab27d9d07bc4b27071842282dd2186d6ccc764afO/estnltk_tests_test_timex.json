[{"lineNumber": 103, "col_offset": 0, "nodeName": "timex_to_row", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 11, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "test_tag_separately", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "timexes", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "test_document_creation_date", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "examples", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "test_various_examples", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "toks", "type": "List[Any]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "timextagger", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "timextagger", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "timextagger", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "creation", "type": "datetime.datetime"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "example", "type": "unicode"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "examples", "type": "List[unicode]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "toks", "type": "List[Any]"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "TimexTagger", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 16, "col_offset": 29, "nodeName": "timexes", "type": "Any"}, {"lineNumber": 16, "col_offset": 43, "nodeName": "timexes", "type": "List[Dict[unicode, Union[int, bool, unicode]]]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "TimexTagger", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "TimexTagger", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "self", "type": "TimexTest"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "timex", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "timexes", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "toks", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "toks", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "toks", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "toks", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 15, "col_offset": 117, "nodeName": "timextagger", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "TimexTest"}, {"lineNumber": 16, "col_offset": 29, "nodeName": "text", "type": "Any"}, {"lineNumber": 16, "col_offset": 43, "nodeName": "self", "type": "TimexTest"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "_process", "type": "Any"}, {"lineNumber": 44, "col_offset": 101, "nodeName": "timextagger", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TimexTest"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "_process", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "datetime", "type": "module"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "Text", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "example", "type": "unicode"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "_process", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "timex", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "timex", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "timex", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "timex", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "timextagger", "type": "Any"}, {"lineNumber": 44, "col_offset": 55, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "timexes", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "timextagger", "type": "Any"}, {"lineNumber": 95, "col_offset": 47, "nodeName": "creation", "type": "datetime.datetime"}, {"lineNumber": 95, "col_offset": 70, "nodeName": "timextagger", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "timextagger", "type": "Any"}, {"lineNumber": 44, "col_offset": 55, "nodeName": "datetime", "type": "module"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "text", "type": "Any"}]