[{"lineNumber": 13, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "test_tokenize_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "empty_document", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "empty_tokenized", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "test_simple", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "simple_document", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "simple_tokenized", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "test_tokenizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "test_tokenize_fails", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "text", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "result", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "tokenizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "bad_tokenizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 127, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "tokenizer", "type": "estnltk.tokenize.Tokenizer"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "tokenized", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "tokenizer", "type": "estnltk.tokenize.Tokenizer"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "tokenized", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "result", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 17, "col_offset": 20, "nodeName": "Tokenizer", "type": "Type[estnltk.tokenize.Tokenizer]"}, {"lineNumber": 18, "col_offset": 20, "nodeName": "tokenizer", "type": "estnltk.tokenize.Tokenizer"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 29, "nodeName": "tokenized", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "TEXT", "type": "unicode"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "START", "type": "unicode"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "REL_START", "type": "unicode"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "END", "type": "unicode"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "REL_END", "type": "unicode"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "PARAGRAPHS", "type": "unicode"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "Tokenizer", "type": "Type[estnltk.tokenize.Tokenizer]"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "to_json", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "tokenized", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "END", "type": "unicode"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "REL_END", "type": "unicode"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "REL_START", "type": "unicode"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "START", "type": "unicode"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "TEXT", "type": "unicode"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "tokenize", "type": "Callable[..., List[Dict[unicode, Any]]]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "result", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 95, "col_offset": 42, "nodeName": "tokenize", "type": "Callable[..., List[Dict[unicode, Any]]]"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "RegexpTokenizer", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "RegexpTokenizer", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 18, "col_offset": 30, "nodeName": "empty_document", "type": "Callable[[], Any]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TokenizerTest"}, {"lineNumber": 19, "col_offset": 40, "nodeName": "empty_tokenized", "type": "Callable[[], Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TokenizerTest"}, {"lineNumber": 35, "col_offset": 40, "nodeName": "simple_tokenized", "type": "Callable[[], Any]"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "text", "type": "Callable[[], Any]"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "tokenizer", "type": "Callable[[], Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TokenizeTest"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "result", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TokenizeTest"}, {"lineNumber": 95, "col_offset": 52, "nodeName": "text", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 65, "nodeName": "bad_tokenizer", "type": "Callable[[], Any]"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "TEXT", "type": "unicode"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "START", "type": "unicode"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "REL_START", "type": "unicode"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "END", "type": "unicode"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "REL_END", "type": "unicode"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "TEXT", "type": "unicode"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "START", "type": "unicode"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "REL_START", "type": "unicode"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "END", "type": "unicode"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "REL_END", "type": "unicode"}, {"lineNumber": 113, "col_offset": 18, "nodeName": "TEXT", "type": "unicode"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "START", "type": "unicode"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "REL_START", "type": "unicode"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "END", "type": "unicode"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "REL_END", "type": "unicode"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "TEXT", "type": "unicode"}, {"lineNumber": 18, "col_offset": 30, "nodeName": "self", "type": "TokenizerTest"}, {"lineNumber": 19, "col_offset": 40, "nodeName": "self", "type": "TokenizerTest"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "tokenize", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 40, "nodeName": "self", "type": "TokenizerTest"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "END", "type": "unicode"}, {"lineNumber": 43, "col_offset": 32, "nodeName": "REL_END", "type": "unicode"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "REL_START", "type": "unicode"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "START", "type": "unicode"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "TEXT", "type": "unicode"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "END", "type": "unicode"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "REL_END", "type": "unicode"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "REL_START", "type": "unicode"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "START", "type": "unicode"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "TEXT", "type": "unicode"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "self", "type": "TokenizeTest"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "self", "type": "TokenizeTest"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "self", "type": "TokenizeTest"}, {"lineNumber": 95, "col_offset": 52, "nodeName": "self", "type": "TokenizeTest"}, {"lineNumber": 95, "col_offset": 65, "nodeName": "self", "type": "TokenizeTest"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "tokenizer", "type": "estnltk.tokenize.Tokenizer"}, {"lineNumber": 34, "col_offset": 39, "nodeName": "simple_document", "type": "Callable[[], Any]"}, {"lineNumber": 34, "col_offset": 39, "nodeName": "self", "type": "TokenizerTest"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "END", "type": "unicode"}, {"lineNumber": 46, "col_offset": 48, "nodeName": "REL_END", "type": "unicode"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "REL_START", "type": "unicode"}, {"lineNumber": 48, "col_offset": 48, "nodeName": "START", "type": "unicode"}, {"lineNumber": 49, "col_offset": 48, "nodeName": "TEXT", "type": "unicode"}, {"lineNumber": 65, "col_offset": 45, "nodeName": "END", "type": "unicode"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "REL_END", "type": "unicode"}, {"lineNumber": 67, "col_offset": 48, "nodeName": "REL_START", "type": "unicode"}, {"lineNumber": 68, "col_offset": 48, "nodeName": "START", "type": "unicode"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "TEXT", "type": "unicode"}, {"lineNumber": 50, "col_offset": 57, "nodeName": "END", "type": "unicode"}, {"lineNumber": 51, "col_offset": 56, "nodeName": "REL_END", "type": "unicode"}, {"lineNumber": 52, "col_offset": 56, "nodeName": "REL_START", "type": "unicode"}, {"lineNumber": 53, "col_offset": 56, "nodeName": "START", "type": "unicode"}, {"lineNumber": 54, "col_offset": 56, "nodeName": "TEXT", "type": "unicode"}, {"lineNumber": 55, "col_offset": 57, "nodeName": "END", "type": "unicode"}, {"lineNumber": 56, "col_offset": 56, "nodeName": "REL_END", "type": "unicode"}, {"lineNumber": 57, "col_offset": 56, "nodeName": "REL_START", "type": "unicode"}, {"lineNumber": 58, "col_offset": 56, "nodeName": "START", "type": "unicode"}, {"lineNumber": 59, "col_offset": 56, "nodeName": "TEXT", "type": "unicode"}, {"lineNumber": 70, "col_offset": 57, "nodeName": "END", "type": "unicode"}, {"lineNumber": 71, "col_offset": 56, "nodeName": "REL_END", "type": "unicode"}, {"lineNumber": 72, "col_offset": 56, "nodeName": "REL_START", "type": "unicode"}, {"lineNumber": 73, "col_offset": 56, "nodeName": "START", "type": "unicode"}, {"lineNumber": 74, "col_offset": 56, "nodeName": "TEXT", "type": "unicode"}]