[{"lineNumber": 7, "col_offset": 0, "nodeName": "touching_right", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "touching_left", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "hovering_right", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "hovering_left", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "right", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "left", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "nested", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "nested_aligned_right", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "nested_aligned_left", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "overlapping_left", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 0, "nodeName": "overlapping_right", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "conflict", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 0, "nodeName": "delete_left", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "delete_right", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "in_by_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 143, "col_offset": 0, "nodeName": "pop_first_by_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 153, "col_offset": 0, "nodeName": "iterate_intersecting_pairs", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 0, "nodeName": "discard", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 0, "nodeName": "merge", "type": "Callable[..., Any]"}, {"lineNumber": 179, "col_offset": 0, "nodeName": "difference", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 207, "col_offset": 0, "nodeName": "union", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 231, "col_offset": 0, "nodeName": "make_layer_nonconflicting", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "i", "type": "Any"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "lst", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "yielded", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "ri", "type": "Any"}, {"lineNumber": 202, "col_offset": 11, "nodeName": "res", "type": "List[Any]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "flip", "type": "Any"}, {"lineNumber": 209, "col_offset": 7, "nodeName": "flip", "type": "Any"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "touching_right", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "hovering_right", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "right", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "y", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 114, "col_offset": 7, "nodeName": "overlapping_right", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "elem1", "type": "Any"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "elem2", "type": "Any"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "elem1", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "elem2", "type": "Any"}, {"lineNumber": 128, "col_offset": 7, "nodeName": "overlapping_left", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "elem1", "type": "Any"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "elem2", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "elem1", "type": "Any"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "elem2", "type": "Any"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "pop", "type": "Any"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 159, "col_offset": 9, "nodeName": "layer", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "i1", "type": "int"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "elem1", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 160, "col_offset": 31, "nodeName": "ri", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "a", "type": "Any"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "nested", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 182, "col_offset": 7, "nodeName": "nested_aligned_left", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 182, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "rest", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "res", "type": "List[Any]"}, {"lineNumber": 213, "col_offset": 7, "nodeName": "nested", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "y", "type": "Any"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 12, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "touching_right", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "hovering_right", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 40, "col_offset": 53, "nodeName": "y", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 52, "col_offset": 51, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "nested", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "nested", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "nested", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "nested", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 84, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "nested", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "nested", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 96, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 96, "col_offset": 43, "nodeName": "overlapping_left", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 60, "nodeName": "x", "type": "Any"}, {"lineNumber": 96, "col_offset": 63, "nodeName": "y", "type": "Any"}, {"lineNumber": 96, "col_offset": 69, "nodeName": "overlapping_right", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 87, "nodeName": "x", "type": "Any"}, {"lineNumber": 96, "col_offset": 90, "nodeName": "y", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "elem1", "type": "Any"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "elem2", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "elem2", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "elem1", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "i", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "ob", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "lst", "type": "Any"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "ob", "type": "Any"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "lst", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "i2", "type": "int"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "elem2", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "ri", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "union", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "rest", "type": "Any"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "b", "type": "Any"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "rest", "type": "Any"}, {"lineNumber": 187, "col_offset": 9, "nodeName": "nested_aligned_right", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 187, "col_offset": 33, "nodeName": "y", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "rest", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "res", "type": "List[Any]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "res", "type": "List[Any]"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "y", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 210, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 215, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 218, "col_offset": 9, "nodeName": "overlapping_left", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 218, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "flip", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 228, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 228, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 68, "col_offset": 40, "nodeName": "y", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "y", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "nested", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "elem1", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "elem2", "type": "Any"}, {"lineNumber": 113, "col_offset": 40, "nodeName": "nested", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 47, "nodeName": "elem2", "type": "Any"}, {"lineNumber": 113, "col_offset": 54, "nodeName": "elem1", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "nested", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "elem1", "type": "Any"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "elem2", "type": "Any"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "nested", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 127, "col_offset": 47, "nodeName": "elem2", "type": "Any"}, {"lineNumber": 127, "col_offset": 54, "nodeName": "elem1", "type": "Any"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "lst", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "inds", "type": "Tuple[int, int]"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "a", "type": "Any"}, {"lineNumber": 176, "col_offset": 38, "nodeName": "a", "type": "Any"}, {"lineNumber": 176, "col_offset": 50, "nodeName": "func", "type": "Any"}, {"lineNumber": 176, "col_offset": 55, "nodeName": "a", "type": "Any"}, {"lineNumber": 176, "col_offset": 58, "nodeName": "b", "type": "Any"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 183, "col_offset": 53, "nodeName": "y", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "copy", "type": "module"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "union", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "rest", "type": "Any"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "a", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "b", "type": "Any"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "rest", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "r1", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "r2", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "middle", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "r1", "type": "Any"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "y", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "r2", "type": "Any"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "middle", "type": "Any"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "middle", "type": "Any"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "y", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "r1", "type": "Any"}, {"lineNumber": 200, "col_offset": 19, "nodeName": "r2", "type": "Any"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "middle", "type": "Any"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 222, "col_offset": 9, "nodeName": "overlapping_right", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 222, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "a", "type": "Any"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "iterate_intersecting_pairs", "type": "Callable[[Any], Any]"}, {"lineNumber": 248, "col_offset": 51, "nodeName": "layer", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "i1", "type": "int"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "i2", "type": "int"}, {"lineNumber": 176, "col_offset": 63, "nodeName": "kwargs", "type": "Dict[str, str]"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "copy", "type": "module"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "copy", "type": "module"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 188, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 188, "col_offset": 39, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 188, "col_offset": 53, "nodeName": "y", "type": "Any"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "copy", "type": "module"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 193, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 193, "col_offset": 43, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 193, "col_offset": 57, "nodeName": "x", "type": "Any"}, {"lineNumber": 193, "col_offset": 61, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 193, "col_offset": 75, "nodeName": "x", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 223, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 226, "col_offset": 14, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "a", "type": "Any"}, {"lineNumber": 249, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 251, "col_offset": 19, "nodeName": "equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 251, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "elem1", "type": "Any"}, {"lineNumber": 162, "col_offset": 46, "nodeName": "elem2", "type": "Any"}, {"lineNumber": 162, "col_offset": 63, "nodeName": "elem1", "type": "Any"}, {"lineNumber": 163, "col_offset": 35, "nodeName": "i1", "type": "int"}, {"lineNumber": 163, "col_offset": 40, "nodeName": "i2", "type": "int"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "i1", "type": "int"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "i2", "type": "int"}, {"lineNumber": 163, "col_offset": 49, "nodeName": "i2", "type": "int"}, {"lineNumber": 163, "col_offset": 53, "nodeName": "i1", "type": "int"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "inds", "type": "Tuple[int, int]"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "yielded", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 164, "col_offset": 43, "nodeName": "in_by_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 164, "col_offset": 58, "nodeName": "layer", "type": "Any"}, {"lineNumber": 164, "col_offset": 65, "nodeName": "elem1", "type": "Any"}, {"lineNumber": 164, "col_offset": 76, "nodeName": "in_by_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 164, "col_offset": 91, "nodeName": "layer", "type": "Any"}, {"lineNumber": 164, "col_offset": 98, "nodeName": "elem2", "type": "Any"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "add", "type": "Callable"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "inds", "type": "Tuple[int, int]"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "copy", "type": "module"}, {"lineNumber": 188, "col_offset": 39, "nodeName": "copy", "type": "module"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "copy", "type": "module"}, {"lineNumber": 193, "col_offset": 43, "nodeName": "copy", "type": "module"}, {"lineNumber": 193, "col_offset": 61, "nodeName": "copy", "type": "module"}, {"lineNumber": 245, "col_offset": 24, "nodeName": "iterate_intersecting_pairs", "type": "Callable[[Any], Any]"}, {"lineNumber": 245, "col_offset": 51, "nodeName": "layer", "type": "Any"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 249, "col_offset": 27, "nodeName": "b", "type": "Any"}, {"lineNumber": 249, "col_offset": 64, "nodeName": "b", "type": "Any"}, {"lineNumber": 249, "col_offset": 67, "nodeName": "a", "type": "Any"}, {"lineNumber": 252, "col_offset": 23, "nodeName": "a", "type": "Any"}, {"lineNumber": 252, "col_offset": 32, "nodeName": "b", "type": "Any"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "diff", "type": "List[Any]"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "yielded", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "elem1", "type": "Any"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "elem2", "type": "Any"}, {"lineNumber": 249, "col_offset": 33, "nodeName": "a", "type": "Any"}, {"lineNumber": 249, "col_offset": 47, "nodeName": "b", "type": "Any"}, {"lineNumber": 253, "col_offset": 24, "nodeName": "append", "type": "Any"}, {"lineNumber": 257, "col_offset": 21, "nodeName": "nested", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 257, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 257, "col_offset": 31, "nodeName": "b", "type": "Any"}, {"lineNumber": 257, "col_offset": 37, "nodeName": "nested", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 257, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 257, "col_offset": 47, "nodeName": "a", "type": "Any"}, {"lineNumber": 258, "col_offset": 23, "nodeName": "nested", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 258, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 258, "col_offset": 33, "nodeName": "a", "type": "Any"}, {"lineNumber": 261, "col_offset": 20, "nodeName": "pop_first_by_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 261, "col_offset": 42, "nodeName": "layer", "type": "Any"}, {"lineNumber": 261, "col_offset": 49, "nodeName": "b", "type": "Any"}, {"lineNumber": 262, "col_offset": 20, "nodeName": "pop_first_by_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 262, "col_offset": 42, "nodeName": "layer", "type": "Any"}, {"lineNumber": 262, "col_offset": 49, "nodeName": "a", "type": "Any"}, {"lineNumber": 263, "col_offset": 27, "nodeName": "difference", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 263, "col_offset": 38, "nodeName": "a", "type": "Any"}, {"lineNumber": 263, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "extend", "type": "Any"}, {"lineNumber": 264, "col_offset": 33, "nodeName": "diff", "type": "List[Any]"}, {"lineNumber": 267, "col_offset": 21, "nodeName": "overlapping_right", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 267, "col_offset": 39, "nodeName": "a", "type": "Any"}, {"lineNumber": 267, "col_offset": 42, "nodeName": "b", "type": "Any"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "a_m", "type": "Any"}, {"lineNumber": 253, "col_offset": 24, "nodeName": "layer", "type": "Any"}, {"lineNumber": 253, "col_offset": 37, "nodeName": "merge", "type": "Callable[..., Any]"}, {"lineNumber": 254, "col_offset": 61, "nodeName": "merge_func", "type": "Any"}, {"lineNumber": 259, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "b", "type": "Any"}, {"lineNumber": 259, "col_offset": 31, "nodeName": "b", "type": "Any"}, {"lineNumber": 259, "col_offset": 34, "nodeName": "a", "type": "Any"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "layer", "type": "Any"}, {"lineNumber": 268, "col_offset": 20, "nodeName": "mida", "type": "Any"}, {"lineNumber": 268, "col_offset": 26, "nodeName": "midb", "type": "Any"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "union", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 269, "col_offset": 20, "nodeName": "append", "type": "Any"}, {"lineNumber": 271, "col_offset": 26, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 271, "col_offset": 40, "nodeName": "a", "type": "Any"}, {"lineNumber": 272, "col_offset": 20, "nodeName": "a", "type": "Any"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 272, "col_offset": 27, "nodeName": "delete_left", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 272, "col_offset": 39, "nodeName": "a", "type": "Any"}, {"lineNumber": 272, "col_offset": 42, "nodeName": "mida", "type": "Any"}, {"lineNumber": 273, "col_offset": 20, "nodeName": "_", "type": "Any"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 273, "col_offset": 27, "nodeName": "delete_right", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 273, "col_offset": 40, "nodeName": "midb", "type": "Any"}, {"lineNumber": 273, "col_offset": 46, "nodeName": "b", "type": "Any"}, {"lineNumber": 253, "col_offset": 43, "nodeName": "pop_first_by_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 253, "col_offset": 65, "nodeName": "layer", "type": "Any"}, {"lineNumber": 253, "col_offset": 72, "nodeName": "a", "type": "Any"}, {"lineNumber": 254, "col_offset": 28, "nodeName": "pop_first_by_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 254, "col_offset": 50, "nodeName": "layer", "type": "Any"}, {"lineNumber": 254, "col_offset": 57, "nodeName": "b", "type": "Any"}, {"lineNumber": 268, "col_offset": 39, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 268, "col_offset": 53, "nodeName": "a", "type": "Any"}, {"lineNumber": 268, "col_offset": 57, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 268, "col_offset": 71, "nodeName": "b", "type": "Any"}, {"lineNumber": 269, "col_offset": 20, "nodeName": "layer", "type": "Any"}, {"lineNumber": 269, "col_offset": 33, "nodeName": "merge", "type": "Callable[..., Any]"}, {"lineNumber": 269, "col_offset": 39, "nodeName": "mida", "type": "Any"}, {"lineNumber": 269, "col_offset": 45, "nodeName": "midb", "type": "Any"}, {"lineNumber": 269, "col_offset": 51, "nodeName": "merge_func", "type": "Any"}, {"lineNumber": 271, "col_offset": 26, "nodeName": "copy", "type": "module"}, {"lineNumber": 268, "col_offset": 39, "nodeName": "copy", "type": "module"}, {"lineNumber": 268, "col_offset": 57, "nodeName": "copy", "type": "module"}]