[{"lineNumber": 12, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "test_tilde", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "test_questionmark", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "test_rbracket", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "test_lessthan", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "test_phonetics", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "get_tokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "test_simple", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "test_hyphen_grouping", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "test_underscore", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "test_plus", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "test_equalmark", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "test_ltmark", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "test_bracketclose", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "test_hyphen", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "test_verb_phonetic_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "test_verb_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "test_verb_phonetic", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "test_verb", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "test_verb_default_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "verbanalysis", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "verb_phonetic_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "verb_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "verb_phonetic", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "verb", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "substantiveanalysis", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "test_substantive_phonetic_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "test_substantive_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "test_substantive_phonetic", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "test_substantive", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "test_substantive_default_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "substantive_phonetic_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "substantive_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "substantive_phonetic", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "substantive", "type": "Callable[[Any], Any]"}, {"lineNumber": 197, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "test_same", "type": "Callable[[Any], Any]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "test_same_guess", "type": "Callable[[Any], Any]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "test_same_phonetic", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "test_same_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "test_same_heuristic_phonetic", "type": "Callable[[Any], Any]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "test_same_heuristic_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "test_same_phonetic_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "run_test", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "text", "type": "Callable[[Any], Any]"}, {"lineNumber": 12, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 197, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 246, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "reduce", "type": "Callable"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "get_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "get_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "get_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "get_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "get_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "get_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "get_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "get_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "Analysis", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "Analysis", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "run_test", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "run_test", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "run_test", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "run_test", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "run_test", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "run_test", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "run_test", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "analyze", "type": "Callable[..., Any]"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "analyze", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "text_output", "type": "Any"}, {"lineNumber": 229, "col_offset": 42, "nodeName": "list_output", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "TrimPhoneticsTest"}, {"lineNumber": 15, "col_offset": 25, "nodeName": "trim_phonetics", "type": "Callable"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TrimPhoneticsTest"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "trim_phonetics", "type": "Callable"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TrimPhoneticsTest"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "trim_phonetics", "type": "Callable"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TrimPhoneticsTest"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "trim_phonetics", "type": "Callable"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TrimPhoneticsTest"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "trim_phonetics", "type": "Callable"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "operator", "type": "module"}, {"lineNumber": 33, "col_offset": 36, "nodeName": "get_group_tokens", "type": "Callable"}, {"lineNumber": 33, "col_offset": 53, "nodeName": "root", "type": "Any"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "analysis_as_dict", "type": "Callable[..., Dict[unicode, Any]]"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "verb_phonetic_compound", "type": "Callable[[], Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "analysis_as_dict", "type": "Callable[..., Dict[unicode, Any]]"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "verb_compound", "type": "Callable[[], Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "analysis_as_dict", "type": "Callable[..., Dict[unicode, Any]]"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "verb_phonetic", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "analysis_as_dict", "type": "Callable[..., Dict[unicode, Any]]"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "verb", "type": "Callable[[], Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "analysis_as_dict", "type": "Callable[..., Dict[unicode, Any]]"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "verb_phonetic_compound", "type": "Callable[[], Any]"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 24, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "analysis_as_dict", "type": "Callable[..., Dict[unicode, Any]]"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "substantive_phonetic_compound", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "analysis_as_dict", "type": "Callable[..., Dict[unicode, Any]]"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "substantive_compound", "type": "Callable[[], Any]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "analysis_as_dict", "type": "Callable[..., Dict[unicode, Any]]"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "substantive_phonetic", "type": "Callable[[], Any]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "analysis_as_dict", "type": "Callable[..., Dict[unicode, Any]]"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "substantive", "type": "Callable[[], Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "analysis_as_dict", "type": "Callable[..., Dict[unicode, Any]]"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "substantive_phonetic_compound", "type": "Callable[[], Any]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "TextIsSameAsListTest"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "TextIsSameAsListTest"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "TextIsSameAsListTest"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "TextIsSameAsListTest"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "TextIsSameAsListTest"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "TextIsSameAsListTest"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "TextIsSameAsListTest"}, {"lineNumber": 221, "col_offset": 30, "nodeName": "text", "type": "Callable[[], Any]"}, {"lineNumber": 222, "col_offset": 36, "nodeName": "guess", "type": "Any"}, {"lineNumber": 223, "col_offset": 39, "nodeName": "phonetic", "type": "Any"}, {"lineNumber": 224, "col_offset": 39, "nodeName": "compound", "type": "Any"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "split", "type": "Callable[..., List[unicode]]"}, {"lineNumber": 226, "col_offset": 36, "nodeName": "guess", "type": "Any"}, {"lineNumber": 227, "col_offset": 39, "nodeName": "phonetic", "type": "Any"}, {"lineNumber": 228, "col_offset": 39, "nodeName": "compound", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "TextIsSameAsListTest"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "verbanalysis", "type": "Callable[[], Any]"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "verbanalysis", "type": "Callable[[], Any]"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 79, "col_offset": 46, "nodeName": "verbanalysis", "type": "Callable[[], Any]"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 83, "col_offset": 46, "nodeName": "verbanalysis", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 87, "col_offset": 46, "nodeName": "verbanalysis", "type": "Callable[[], Any]"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 141, "col_offset": 46, "nodeName": "substantiveanalysis", "type": "Callable[[], Any]"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 145, "col_offset": 46, "nodeName": "substantiveanalysis", "type": "Callable[[], Any]"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 149, "col_offset": 46, "nodeName": "substantiveanalysis", "type": "Callable[[], Any]"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 153, "col_offset": 46, "nodeName": "substantiveanalysis", "type": "Callable[[], Any]"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 157, "col_offset": 46, "nodeName": "substantiveanalysis", "type": "Callable[[], Any]"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 221, "col_offset": 30, "nodeName": "self", "type": "TextIsSameAsListTest"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 79, "col_offset": 46, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 83, "col_offset": 46, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 87, "col_offset": 46, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 141, "col_offset": 46, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 145, "col_offset": 46, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 149, "col_offset": 46, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 153, "col_offset": 46, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 157, "col_offset": 46, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "text", "type": "Callable[[], Any]"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "self", "type": "TextIsSameAsListTest"}]