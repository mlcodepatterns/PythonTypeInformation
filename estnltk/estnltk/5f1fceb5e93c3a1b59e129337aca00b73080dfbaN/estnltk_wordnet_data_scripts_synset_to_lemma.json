[{"lineNumber": 7, "col_offset": 0, "nodeName": "syn_idx_regexp", "type": "Pattern[str]"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "pos_regexp", "type": "Pattern[str]"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "literal_regexp", "type": "Pattern[str]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "sense_regexp", "type": "Pattern[str]"}, {"lineNumber": 7, "col_offset": 17, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 8, "col_offset": 13, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 9, "col_offset": 17, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 10, "col_offset": 15, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 12, "col_offset": 55, "nodeName": "fin", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 12, "col_offset": 122, "nodeName": "fout", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 13, "col_offset": 5, "nodeName": "line", "type": "Union[str, unicode]"}, {"lineNumber": 13, "col_offset": 13, "nodeName": "fin", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 7, "col_offset": 17, "nodeName": "re", "type": "module"}, {"lineNumber": 8, "col_offset": 13, "nodeName": "re", "type": "module"}, {"lineNumber": 9, "col_offset": 17, "nodeName": "re", "type": "module"}, {"lineNumber": 10, "col_offset": 15, "nodeName": "re", "type": "module"}, {"lineNumber": 12, "col_offset": 5, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 12, "col_offset": 60, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 14, "col_offset": 2, "nodeName": "result", "type": "Match[str]"}, {"lineNumber": 15, "col_offset": 5, "nodeName": "result", "type": "Match[str]"}, {"lineNumber": 19, "col_offset": 2, "nodeName": "result", "type": "Match[str]"}, {"lineNumber": 20, "col_offset": 5, "nodeName": "result", "type": "Match[str]"}, {"lineNumber": 24, "col_offset": 2, "nodeName": "result", "type": "Match[str]"}, {"lineNumber": 25, "col_offset": 5, "nodeName": "result", "type": "Match[str]"}, {"lineNumber": 29, "col_offset": 2, "nodeName": "result", "type": "Match[str]"}, {"lineNumber": 30, "col_offset": 5, "nodeName": "result", "type": "Match[str]"}, {"lineNumber": 12, "col_offset": 5, "nodeName": "codecs", "type": "module"}, {"lineNumber": 12, "col_offset": 60, "nodeName": "codecs", "type": "module"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "match", "type": "Callable"}, {"lineNumber": 14, "col_offset": 32, "nodeName": "line", "type": "Union[str, unicode]"}, {"lineNumber": 16, "col_offset": 3, "nodeName": "syn_idx", "type": "str"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "match", "type": "Callable"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "line", "type": "Union[str, unicode]"}, {"lineNumber": 21, "col_offset": 3, "nodeName": "pos", "type": "str"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "match", "type": "Callable"}, {"lineNumber": 24, "col_offset": 32, "nodeName": "line", "type": "Union[str, unicode]"}, {"lineNumber": 26, "col_offset": 3, "nodeName": "literal", "type": "str"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "match", "type": "Callable"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "line", "type": "Union[str, unicode]"}, {"lineNumber": 31, "col_offset": 3, "nodeName": "sense", "type": "str"}, {"lineNumber": 32, "col_offset": 3, "nodeName": "lemma_product", "type": "Any"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 12, "col_offset": 22, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "syn_idx_regexp", "type": "Pattern[str]"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "group", "type": "Callable"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "pos_regexp", "type": "Pattern[str]"}, {"lineNumber": 21, "col_offset": 9, "nodeName": "group", "type": "Callable"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "literal_regexp", "type": "Pattern[str]"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "group", "type": "Callable"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "sense_regexp", "type": "Pattern[str]"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "group", "type": "Callable"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "lemma_product", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "form", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "cand_pos", "type": "Any"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "result", "type": "Match[str]"}, {"lineNumber": 21, "col_offset": 9, "nodeName": "result", "type": "Match[str]"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "result", "type": "Match[str]"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "result", "type": "Match[str]"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "analyze", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "write", "type": "Callable[[Union[str, unicode]], int]"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "literal", "type": "str"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "fout", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 38, "col_offset": 43, "nodeName": "syn_idx", "type": "str"}, {"lineNumber": 38, "col_offset": 51, "nodeName": "pos", "type": "str"}, {"lineNumber": 38, "col_offset": 55, "nodeName": "literal", "type": "str"}, {"lineNumber": 38, "col_offset": 74, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 38, "col_offset": 80, "nodeName": "form", "type": "Any"}, {"lineNumber": 38, "col_offset": 85, "nodeName": "cand_pos", "type": "Any"}, {"lineNumber": 38, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 38, "col_offset": 67, "nodeName": "sense", "type": "str"}]