[{"lineNumber": 35, "col_offset": 4, "nodeName": "distributed_params", "type": "Union[Dict[Any, Any], Dict[nothing, nothing]]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "distributed_params", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 22, "col_offset": 5, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "default_collate_fn", "type": "Any"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "loader", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "Device", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "distributed_params", "type": "Dict[Any, Any]"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "distributed_params", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 37, "col_offset": 7, "nodeName": "device", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "maybe_recursive_call", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 40, "nodeName": "model", "type": "Any"}, {"lineNumber": 42, "col_offset": 7, "nodeName": "is_wrapped_with_ddp", "type": "Callable[[Any], bool]"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "model", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "maybe_recursive_call", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "model", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 85, "col_offset": 40, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 85, "col_offset": 51, "nodeName": "device", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 134, "col_offset": 14, "nodeName": "ListDataset", "type": "Type[catalyst.data.dataset.ListDataset]"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "DataLoader", "type": "Any"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "copy", "type": "module"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[], Any]"}, {"lineNumber": 40, "col_offset": 60, "nodeName": "device", "type": "Any"}, {"lineNumber": 42, "col_offset": 7, "nodeName": "utils", "type": "module"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "distributed_rank", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "syncbn", "type": "Any"}, {"lineNumber": 83, "col_offset": 53, "nodeName": "device", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "Model", "type": "Any"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "Criterion", "type": "Any"}, {"lineNumber": 22, "col_offset": 29, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 22, "col_offset": 40, "nodeName": "Scheduler", "type": "Any"}, {"lineNumber": 22, "col_offset": 51, "nodeName": "Device", "type": "Any"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "data_source", "type": "Iterable[Dict[Any, Any]]"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "open_fn", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "dict_transform", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "data", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "dataset", "type": "catalyst.data.dataset.ListDataset"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "collate_fn", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "num_workers", "type": "int"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "shuffle", "type": "bool"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "drop_last", "type": "bool"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "utils", "type": "module"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "distributed_params", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "model", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "Module", "type": "Any"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "pop", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "pop", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "distributed_rank", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "distributed_params", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "utils", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "nn", "type": "Any"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "distributed_params", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "distributed_params", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "set_device", "type": "Any"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "distributed_rank", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "init_process_group", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "assert_fp16_available", "type": "Callable[[], None]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "amp_result", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "amp_result", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "distributed_rank", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "syncbn", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "distributed_rank", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "DataParallel", "type": "Any"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 77, "col_offset": 9, "nodeName": "device_count", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "Module", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "distributed", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "utils", "type": "module"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "amp", "type": "Any"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "distributed_params", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "DistributedDataParallel", "type": "Any"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "model", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "device_count", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 77, "col_offset": 9, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "DataParallel", "type": "Any"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "convert_syncbn_model", "type": "Any"}, {"lineNumber": 73, "col_offset": 49, "nodeName": "model", "type": "Any"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 77, "col_offset": 9, "nodeName": "torch", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "DataParallel", "type": "Any"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "v", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 81, "col_offset": 53, "nodeName": "k", "type": "Any"}, {"lineNumber": 81, "col_offset": 56, "nodeName": "v", "type": "Any"}, {"lineNumber": 81, "col_offset": 61, "nodeName": "items", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 81, "col_offset": 61, "nodeName": "model", "type": "Any"}]