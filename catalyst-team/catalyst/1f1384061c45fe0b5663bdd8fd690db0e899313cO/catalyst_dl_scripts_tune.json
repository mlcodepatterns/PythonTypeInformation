[{"lineNumber": 15, "col_offset": 0, "nodeName": "build_args", "type": "Callable[[argparse.ArgumentParser], Any]"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "parse_args", "type": "Callable[[], Any]"}, {"lineNumber": 115, "col_offset": 0, "nodeName": "_process_trial_config", "type": "Callable[[Any, Dict[Any, Any]], Tuple[Any, Dict[Any, Any]]]"}, {"lineNumber": 126, "col_offset": 0, "nodeName": "main_worker", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 202, "col_offset": 0, "nodeName": "main", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 115, "col_offset": 50, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 132, "col_offset": 58, "nodeName": "apex", "type": "Any"}, {"lineNumber": 133, "col_offset": 57, "nodeName": "amp", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "expdir", "type": "pathlib.Path"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "study_params", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "sampler_params", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "optuna_sampler_type", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "pruner_params", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "optuna_pruner_type", "type": "Any"}, {"lineNumber": 210, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 23, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "boolean_flag", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "boolean_flag", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "boolean_flag", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "boolean_flag", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "boolean_flag", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "boolean_flag", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "boolean_flag", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "boolean_flag", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "build_args", "type": "Callable[[argparse.ArgumentParser], Any]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 111, "col_offset": 10, "nodeName": "unknown_args", "type": "List[str]"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "parse_known_args", "type": "Callable[..., Tuple[argparse.Namespace, List[str]]]"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "unknown_args", "type": "List[str]"}, {"lineNumber": 115, "col_offset": 41, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "maybe_recursive_call", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "_eval_trial_suggestions", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "trial", "type": "Any"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "config", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 128, "col_offset": 10, "nodeName": "config", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "parse_args_uargs", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 128, "col_offset": 42, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 128, "col_offset": 48, "nodeName": "unknown_args", "type": "List[str]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "set_global_seed", "type": "Callable[[int], None]"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "seed", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "prepare_cudnn", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "deterministic", "type": "Any"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "benchmark", "type": "Any"}, {"lineNumber": 132, "col_offset": 58, "nodeName": "args", "type": "Any"}, {"lineNumber": 133, "col_offset": 57, "nodeName": "args", "type": "Any"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "expdir", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "_trial", "type": "Any"}, {"lineNumber": 143, "col_offset": 28, "nodeName": "trial", "type": "Any"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "pop", "type": "Any"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "pop", "type": "Any"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "pop", "type": "Any"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "pop", "type": "Any"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "pop", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "create_study", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "objective", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "main_worker", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "unknown_args", "type": "List[str]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 211, "col_offset": 10, "nodeName": "unknown_args", "type": "List[str]"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "parse_args", "type": "Callable[[], Any]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "main", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 212, "col_offset": 9, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "unknown_args", "type": "List[str]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 27, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 29, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 38, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 41, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "utils", "type": "module"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "utils", "type": "module"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "utils", "type": "module"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "utils", "type": "module"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "utils", "type": "module"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "utils", "type": "module"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 95, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 96, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 98, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "utils", "type": "module"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "utils", "type": "module"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "utils", "type": "module"}, {"lineNumber": 115, "col_offset": 56, "nodeName": "Trial", "type": "Any"}, {"lineNumber": 115, "col_offset": 70, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "utils", "type": "module"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "utils", "type": "module"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "utils", "type": "module"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "args", "type": "Any"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "args", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "setdefault", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "setdefault", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "trial", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "trial", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "trial_config", "type": "Dict[Any, Any]"}, {"lineNumber": 138, "col_offset": 30, "nodeName": "_process_trial_config", "type": "Callable[[Any, Dict[Any, Any]], Tuple[Any, Dict[Any, Any]]]"}, {"lineNumber": 138, "col_offset": 52, "nodeName": "trial", "type": "Any"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "prepare_config_api_components", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "experiment", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "run_experiment", "type": "Any"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "experiment", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "best_valid_metrics", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "config", "type": "Any"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "study_params", "type": "Any"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "sampler_params", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "optuna_sampler_type", "type": "Any"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "study_params", "type": "Any"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "pruner_params", "type": "Any"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "optuna_pruner_type", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "optuna", "type": "Any"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "direction", "type": "str"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "optuna_sampler", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "optuna_pruner", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "study", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "n_trials", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "timeout", "type": "Any"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "gc_after_trial", "type": "Any"}, {"lineNumber": 198, "col_offset": 26, "nodeName": "show_progress_bar", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 118, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 115, "col_offset": 56, "nodeName": "optuna", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "optuna", "type": "Any"}, {"lineNumber": 138, "col_offset": 59, "nodeName": "copy", "type": "Any"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "utils", "type": "module"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "expdir", "type": "pathlib.Path"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "trial_config", "type": "Dict[Any, Any]"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "logdir", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "dump_environment", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "trial_config", "type": "Any"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "logdir", "type": "Any"}, {"lineNumber": 147, "col_offset": 49, "nodeName": "configs", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "dump_code", "type": "Any"}, {"lineNumber": 149, "col_offset": 28, "nodeName": "expdir", "type": "Any"}, {"lineNumber": 149, "col_offset": 41, "nodeName": "logdir", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "runner", "type": "Any"}, {"lineNumber": 153, "col_offset": 41, "nodeName": "main_metric", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "storage", "type": "Any"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "study_name", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "args", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "args", "type": "Any"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 198, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 138, "col_offset": 59, "nodeName": "config", "type": "Any"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "experiment", "type": "Any"}, {"lineNumber": 145, "col_offset": 45, "nodeName": "get_rank", "type": "Callable[[], int]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "utils", "type": "module"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "experiment", "type": "Any"}, {"lineNumber": 147, "col_offset": 49, "nodeName": "args", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "utils", "type": "module"}, {"lineNumber": 149, "col_offset": 28, "nodeName": "args", "type": "Any"}, {"lineNumber": 149, "col_offset": 41, "nodeName": "experiment", "type": "Any"}, {"lineNumber": 153, "col_offset": 41, "nodeName": "runner", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "args", "type": "Any"}, {"lineNumber": 187, "col_offset": 32, "nodeName": "pop", "type": "Any"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "pop", "type": "Any"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 145, "col_offset": 45, "nodeName": "utils", "type": "module"}, {"lineNumber": 187, "col_offset": 32, "nodeName": "study_params", "type": "Any"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "study_params", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "config", "type": "Any"}]