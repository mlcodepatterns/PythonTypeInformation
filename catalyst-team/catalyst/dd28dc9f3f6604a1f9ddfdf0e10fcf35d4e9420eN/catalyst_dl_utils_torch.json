[{"lineNumber": 14, "col_offset": 0, "nodeName": "_Model", "type": "Any"}, {"lineNumber": 14, "col_offset": 9, "nodeName": "Module", "type": "Any"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "_Criterion", "type": "Any"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "Module", "type": "Any"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "_Optimizer", "type": "Any"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "_Scheduler", "type": "Any"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "_LRScheduler", "type": "Any"}, {"lineNumber": 14, "col_offset": 9, "nodeName": "nn", "type": "Any"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "optim", "type": "Any"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "distributed_params", "type": "Union[Dict[Any, Any], Dict[nothing, nothing]]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "distributed_params", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "device", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 56, "col_offset": 5, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "default_collate_fn", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "loader", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "layerwise_params", "type": "Union[Dict[str, Dict[Any, Any]], collections.OrderedDict[nothing, nothing]]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "model_params", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "model_params", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 133, "col_offset": 5, "nodeName": "List", "type": "Any"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "optim", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 36, "col_offset": 7, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "deterministic", "type": "bool"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "deterministic", "type": "bool"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "benchmark", "type": "bool"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "benchmark", "type": "bool"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "distributed_params", "type": "Dict[Any, Any]"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "distributed_params", "type": "Union[Dict[Any, Any], Dict[nothing, nothing]]"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "get_device", "type": "Callable[[], Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "prepare_cudnn", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "to", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "device", "type": "Any"}, {"lineNumber": 64, "col_offset": 7, "nodeName": "is_wrapped_with_ddp", "type": "Callable[[Any], bool]"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "model", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "to", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "device", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 92, "col_offset": 40, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 92, "col_offset": 51, "nodeName": "device", "type": "Any"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "ListDataset", "type": "Type[catalyst.data.dataset.ListDataset]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "DataLoader", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "layerwise_params", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 36, "col_offset": 7, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "deterministic", "type": "bool"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "benchmark", "type": "bool"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "copy", "type": "module"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "utils", "type": "module"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 64, "col_offset": 7, "nodeName": "utils", "type": "module"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "distributed_rank", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "_Model", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "_Criterion", "type": "Any"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "_Optimizer", "type": "Any"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "_Scheduler", "type": "Any"}, {"lineNumber": 56, "col_offset": 55, "nodeName": "device", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "open_fn", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "dict_transform", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "dataset_cache_prob", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "data", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "dataset", "type": "catalyst.data.dataset.ListDataset"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "collate_fn", "type": "Any"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "num_workers", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "drop_last", "type": "Any"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 156, "col_offset": 43, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 161, "col_offset": 21, "nodeName": "options_", "type": "Any"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "items", "type": "Callable"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "no_bias_weight_decay", "type": "bool"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "options", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "lr_scaling", "type": "float"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 133, "col_offset": 10, "nodeName": "Union", "type": "Any"}, {"lineNumber": 36, "col_offset": 7, "nodeName": "torch", "type": "Any"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "distributed_params", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assert_fp16_available", "type": "Callable[[], None]"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "pop", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "distributed_rank", "type": "Any"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "distributed_rank", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 56, "col_offset": 55, "nodeName": "torch", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "utils", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 156, "col_offset": 43, "nodeName": "collections", "type": "module"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "layerwise_params", "type": "Union[Dict[str, Dict[Any, Any]], collections.OrderedDict[nothing, nothing]]"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "options", "type": "Dict[Any, Any]"}, {"lineNumber": 167, "col_offset": 36, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "options", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "options", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "model_params", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 174, "col_offset": 39, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 174, "col_offset": 53, "nodeName": "options", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "distributed_params", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "set_device", "type": "Any"}, {"lineNumber": 73, "col_offset": 34, "nodeName": "distributed_rank", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "init_process_group", "type": "Any"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "amp", "type": "Any"}, {"lineNumber": 79, "col_offset": 32, "nodeName": "distributed_params", "type": "Any"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "DistributedDataParallel", "type": "Any"}, {"lineNumber": 84, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 87, "col_offset": 9, "nodeName": "device_count", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "DataParallel", "type": "Any"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "model", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "match", "type": "Callable"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "merge_dicts", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 164, "col_offset": 44, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 164, "col_offset": 53, "nodeName": "options_", "type": "Any"}, {"lineNumber": 167, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "distributed", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "device_count", "type": "Any"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "DataParallel", "type": "Any"}, {"lineNumber": 86, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 87, "col_offset": 9, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "re", "type": "module"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "utils", "type": "module"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 87, "col_offset": 9, "nodeName": "torch", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "torch", "type": "Any"}]