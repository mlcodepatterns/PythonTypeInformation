[{"lineNumber": 13, "col_offset": 23, "nodeName": "Runner", "type": "Type[catalyst.dl.core.runner.Runner]"}, {"lineNumber": 186, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "_default_experiment", "type": "Type[catalyst.dl.experiment.supervised.SupervisedExperiment]"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "SupervisedExperiment", "type": "Type[catalyst.dl.experiment.supervised.SupervisedExperiment]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "input_key", "type": "str"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "input_key", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "output_key", "type": "str"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "output_key", "type": "str"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "target_key", "type": "str"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "input_target_key", "type": "str"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "batch", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "input", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "output", "type": "Dict[str, Mapping[str, Any]]"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "output", "type": "Dict[str, Mapping[str, Any]]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "output", "type": "Dict[str, str]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "output", "type": "Mapping[str, Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "output", "type": "Dict[str, Mapping[str, Any]]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "output", "type": "Dict[str, Mapping[str, Any]]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "loaders", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "callbacks", "type": "collections.OrderedDict[str, Union[catalyst.dl.callbacks.inference.InferCallback, catalyst.dl.callbacks.checkpoint.CheckpointCallback]]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 25, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "input_key", "type": "str"}, {"lineNumber": 38, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "_process_input", "type": "Callable[[Mapping[str, Any]], Any]"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "_process_input_str", "type": "Callable[[Mapping[str, Any]], Any]"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "output_key", "type": "str"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "_process_output", "type": "Callable[[Mapping[str, Any]], Any]"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "_process_output_str", "type": "Callable[[Mapping[str, Any]], Any]"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "batch", "type": "Mapping[str, Any]"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "_batch2device", "type": "Callable[[Mapping[str, Any], Any], Any]"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "batch", "type": "Mapping[str, Any]"}, {"lineNumber": 56, "col_offset": 45, "nodeName": "device", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "output_key", "type": "str"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "output", "type": "Mapping[str, Any]"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "_process_input", "type": "Callable[[Mapping[str, Any]], Any]"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "batch", "type": "Mapping[str, Any]"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "_process_output", "type": "Callable[[Mapping[str, Any]], Any]"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 109, "col_offset": 38, "nodeName": "fp16", "type": "Union[bool, Dict[Any, Any]]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "fp16", "type": "Dict[str, str]"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "_default_experiment", "type": "Type[catalyst.dl.experiment.supervised.SupervisedExperiment]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "run_experiment", "type": "Callable"}, {"lineNumber": 129, "col_offset": 28, "nodeName": "experiment", "type": "catalyst.dl.experiment.supervised.SupervisedExperiment"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "fp16", "type": "Union[Dict[Any, Any], bool]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "fp16", "type": "Dict[str, str]"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "_default_experiment", "type": "Type[catalyst.dl.experiment.supervised.SupervisedExperiment]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "run_experiment", "type": "Callable"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "experiment", "type": "catalyst.dl.experiment.supervised.SupervisedExperiment"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "resume", "type": "str"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "output_key", "type": "str"}, {"lineNumber": 180, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "model", "type": "Any"}, {"lineNumber": 33, "col_offset": 45, "nodeName": "device", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 59, "col_offset": 40, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "batch", "type": "Mapping[str, Any]"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "input", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "batch", "type": "Mapping[str, Any]"}, {"lineNumber": 72, "col_offset": 42, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 82, "col_offset": 43, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "fp16", "type": "Union[bool, Dict[Any, Any]]"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 113, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "loaders", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "callbacks", "type": "Union[collections.OrderedDict[str, catalyst.dl.core.callback.Callback], List[catalyst.dl.core.callback.Callback]]"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "logdir", "type": "str"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "num_epochs", "type": "int"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "valid_loader", "type": "str"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "main_metric", "type": "str"}, {"lineNumber": 123, "col_offset": 28, "nodeName": "minimize_metric", "type": "bool"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "verbose", "type": "bool"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "state_kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "checkpoint_data", "type": "Dict[Any, Any]"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "fp16", "type": "Union[bool, Dict[Any, Any], Dict[str, str]]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 129, "col_offset": 46, "nodeName": "check", "type": "bool"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "fp16", "type": "Union[Dict[Any, Any], bool]"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "loaders", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "callbacks", "type": "Union[List[catalyst.dl.core.callback.Callback], collections.OrderedDict[str, catalyst.dl.core.callback.Callback]]"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "verbose", "type": "bool"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "state_kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 150, "col_offset": 31, "nodeName": "fp16", "type": "Union[Dict[Any, Any], Dict[str, str], bool]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 152, "col_offset": 46, "nodeName": "check", "type": "bool"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "callbacks", "type": "collections.OrderedDict[str, Union[catalyst.dl.callbacks.inference.InferCallback, catalyst.dl.callbacks.checkpoint.CheckpointCallback]]"}, {"lineNumber": 167, "col_offset": 34, "nodeName": "CheckpointCallback", "type": "Type[catalyst.dl.callbacks.checkpoint.CheckpointCallback]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "loaders", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "callbacks", "type": "collections.OrderedDict[str, Union[catalyst.dl.callbacks.inference.InferCallback, catalyst.dl.callbacks.checkpoint.CheckpointCallback]]"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "verbose", "type": "bool"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "state_kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "fp16", "type": "Union[Dict[Any, Any], bool]"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "check", "type": "bool"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "callbacks", "type": "collections.OrderedDict[str, Union[catalyst.dl.callbacks.inference.InferCallback, catalyst.dl.callbacks.checkpoint.CheckpointCallback]]"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "input_key", "type": "str"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "key", "type": "str"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "key", "type": "str"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "input_key", "type": "str"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "key", "type": "str"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "value", "type": "str"}, {"lineNumber": 163, "col_offset": 41, "nodeName": "loader", "type": "Any"}, {"lineNumber": 167, "col_offset": 60, "nodeName": "resume", "type": "str"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "output_key", "type": "str"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 52, "col_offset": 48, "nodeName": "Any", "type": "Any"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "Any", "type": "Any"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 63, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 63, "col_offset": 54, "nodeName": "Any", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "batch", "type": "Mapping[str, Any]"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 68, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 68, "col_offset": 54, "nodeName": "Any", "type": "Any"}, {"lineNumber": 72, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 72, "col_offset": 55, "nodeName": "Any", "type": "Any"}, {"lineNumber": 76, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 76, "col_offset": 56, "nodeName": "Any", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "key", "type": "str"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "value", "type": "str"}, {"lineNumber": 78, "col_offset": 43, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 78, "col_offset": 47, "nodeName": "output_key", "type": "str"}, {"lineNumber": 78, "col_offset": 64, "nodeName": "output", "type": "Mapping[str, Any]"}, {"lineNumber": 82, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 82, "col_offset": 56, "nodeName": "Any", "type": "Any"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "Any", "type": "Any"}, {"lineNumber": 165, "col_offset": 47, "nodeName": "InferCallback", "type": "Type[catalyst.dl.callbacks.inference.InferCallback]"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "self", "type": "SupervisedRunner"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "key", "type": "str"}, {"lineNumber": 78, "col_offset": 47, "nodeName": "self", "type": "SupervisedRunner"}]