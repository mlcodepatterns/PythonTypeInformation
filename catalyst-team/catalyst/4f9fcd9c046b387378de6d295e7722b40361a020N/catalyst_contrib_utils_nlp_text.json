[{"lineNumber": 112, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "strip", "type": "bool"}, {"lineNumber": 35, "col_offset": 7, "nodeName": "lowercase", "type": "bool"}, {"lineNumber": 37, "col_offset": 7, "nodeName": "remove_punctuation", "type": "bool"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "attention_mask", "type": "List[int]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "padding_length", "type": "int"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "input_ids", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "attention_mask", "type": "List[int]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "token_type_ids", "type": "Any"}, {"lineNumber": 18, "col_offset": 5, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 105, "col_offset": 7, "nodeName": "output_hidden_states", "type": "bool"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "output", "type": "Dict[Union[str, int], Any]"}, {"lineNumber": 17, "col_offset": 24, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "text", "type": "str"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "text", "type": "str"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "text", "type": "str"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "encode_plus", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "text", "type": "str"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "input_ids", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "token_type_ids", "type": "Any"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "max_length", "type": "int"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "input_ids", "type": "Any"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "attention_mask", "type": "List[int]"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "token_type_ids", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "features", "type": "Any"}, {"lineNumber": 91, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "level", "type": "Union[str, int]"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "translate", "type": "Callable[[Union[Mapping[Any, Any], Sequence[Any]]], str]"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 42, "col_offset": 54, "nodeName": "max_length", "type": "int"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 44, "col_offset": 53, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "input_ids", "type": "Any"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "input_ids", "type": "Any"}, {"lineNumber": 48, "col_offset": 35, "nodeName": "padding_length", "type": "int"}, {"lineNumber": 49, "col_offset": 45, "nodeName": "padding_length", "type": "int"}, {"lineNumber": 50, "col_offset": 45, "nodeName": "padding_length", "type": "int"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "input_ids", "type": "Any"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "token_type_ids", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "attention_mask", "type": "List[int]"}, {"lineNumber": 18, "col_offset": 10, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "Union", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "pooling_groups", "type": "List[str]"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "pooling", "type": "catalyst.contrib.nn.modules.lama.LamaPooling"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "level", "type": "Union[str, int]"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "level", "type": "Union[str, int]"}, {"lineNumber": 97, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "level", "type": "Union[str, int]"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "_process_features", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "bert_output", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "feature", "type": "Any"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "text", "type": "str"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "text", "type": "str"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "text", "type": "str"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "maketrans", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 38, "col_offset": 52, "nodeName": "punctuation", "type": "str"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 47, "nodeName": "int64", "type": "Any"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 57, "nodeName": "int64", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 57, "nodeName": "int64", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "pooling", "type": "catalyst.contrib.nn.modules.lama.LamaPooling"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "features", "type": "Any"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "_process_features", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "bert_output", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "_process_features", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "bert_output", "type": "Any"}, {"lineNumber": 106, "col_offset": 36, "nodeName": "bert_output", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "output", "type": "Dict[Union[str, int], Any]"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "_process_features", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "feature", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 38, "col_offset": 52, "nodeName": "string", "type": "module"}, {"lineNumber": 53, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 88, "col_offset": 46, "nodeName": "mask", "type": "Any"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "bert_output", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "bert_output", "type": "Any"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "level", "type": "Union[str, int]"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "text", "type": "str"}]