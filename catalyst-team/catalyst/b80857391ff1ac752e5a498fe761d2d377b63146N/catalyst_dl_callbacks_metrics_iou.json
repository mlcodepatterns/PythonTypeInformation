[{"lineNumber": 14, "col_offset": 18, "nodeName": "MetricCallback", "type": "Type[catalyst.dl.core.callback.MetricCallback]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "JaccardCallback", "type": "Type[IouCallback]"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "IouCallback", "type": "Type[IouCallback]"}, {"lineNumber": 58, "col_offset": 5, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "Callback", "type": "Type[catalyst.dl.core.callback.Callback]"}, {"lineNumber": 142, "col_offset": 0, "nodeName": "MulticlassJaccardMetricCallback", "type": "Type[MulticlassIOUMetricCallback]"}, {"lineNumber": 142, "col_offset": 34, "nodeName": "MulticlassIOUMetricCallback", "type": "Type[MulticlassIOUMetricCallback]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "jaccard", "type": "Any"}, {"lineNumber": 58, "col_offset": 5, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "prefix", "type": "str"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "prefix", "type": "str"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "input_key", "type": "str"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "input_key", "type": "str"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "output_key", "type": "str"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "output_key", "type": "str"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "metric_params", "type": "Dict[str, Any]"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "metric_params", "type": "Dict[str, Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "confusion_matrix", "type": "None"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "class_names", "type": "Any"}, {"lineNumber": 101, "col_offset": 27, "nodeName": "class_names", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "class_prefix", "type": "Any"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "class_prefix", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "confusion_matrix", "type": "None"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "tp_fp_fn_dict", "type": "Dict[str, Any]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "batch_metrics", "type": "Dict[Any, Any]"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "true_positives", "type": "Any"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 72, "col_offset": 61, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[int], None]"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "Metric", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "MulticlassIOUMetricCallback"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "MulticlassIOUMetricCallback"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "MulticlassIOUMetricCallback"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "MulticlassIOUMetricCallback"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "MulticlassIOUMetricCallback"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "MulticlassIOUMetricCallback"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "MulticlassIOUMetricCallback"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "MulticlassIOUMetricCallback"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "RunnerState", "type": "Type[catalyst.dl.core.state.RunnerState]"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "output", "type": "Any"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "input", "type": "Any"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "calculate_confusion_matrix_from_tensors", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "targets", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "confusion_matrix", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "confusion_matrix", "type": "Any"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "confusion_matrix", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "confusion_matrix", "type": "Any"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "confusion_matrix", "type": "Any"}, {"lineNumber": 120, "col_offset": 35, "nodeName": "RunnerState", "type": "Type[catalyst.dl.core.state.RunnerState]"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "calculate_tp_fp_fn", "type": "Callable[[Any], Dict[str, Any]]"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "confusion_matrix", "type": "Any"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "calculate_jaccard", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "metric_id", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "jaccard_value", "type": "Any"}, {"lineNumber": 126, "col_offset": 40, "nodeName": "items", "type": "Callable"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "metric_name", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "jaccard_value", "type": "Any"}, {"lineNumber": 135, "col_offset": 64, "nodeName": "mean", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "_reset_stats", "type": "Callable[[], Any]"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "prefix", "type": "str"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "iou", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "input_key", "type": "str"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "output_key", "type": "str"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "eps", "type": "float"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "threshold", "type": "float"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "activation", "type": "str"}, {"lineNumber": 72, "col_offset": 43, "nodeName": "false_negatives", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "jaccard", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "jaccard", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "CallbackOrder", "type": "Type[catalyst.dl.core.callback.CallbackOrder]"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "state", "type": "catalyst.dl.core.state.RunnerState"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "output_key", "type": "str"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "state", "type": "catalyst.dl.core.state.RunnerState"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "input_key", "type": "str"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "self", "type": "MulticlassIOUMetricCallback"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "self", "type": "MulticlassIOUMetricCallback"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "self", "type": "MulticlassIOUMetricCallback"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "self", "type": "MulticlassIOUMetricCallback"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "tp_fp_fn_dict", "type": "Dict[str, Any]"}, {"lineNumber": 126, "col_offset": 40, "nodeName": "batch_metrics", "type": "Dict[Any, Any]"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "metric_id", "type": "Any"}, {"lineNumber": 127, "col_offset": 32, "nodeName": "class_names", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "class_names", "type": "Any"}, {"lineNumber": 135, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "MulticlassIOUMetricCallback"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "criterion", "type": "module"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "true_positives", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "false_positives", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "self", "type": "MulticlassIOUMetricCallback"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "self", "type": "MulticlassIOUMetricCallback"}, {"lineNumber": 127, "col_offset": 32, "nodeName": "self", "type": "MulticlassIOUMetricCallback"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "self", "type": "MulticlassIOUMetricCallback"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "metric_id", "type": "Any"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "values", "type": "Callable"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "batch_metrics", "type": "Dict[Any, Any]"}]