[{"lineNumber": 14, "col_offset": 0, "nodeName": "_pop_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "test_config1", "type": "Callable[[], Any]"}, {"lineNumber": 226, "col_offset": 0, "nodeName": "test_config2", "type": "Callable[[], Any]"}, {"lineNumber": 365, "col_offset": 0, "nodeName": "test_config3", "type": "Callable[[], Any]"}, {"lineNumber": 529, "col_offset": 0, "nodeName": "test_config4", "type": "Callable[[], Any]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "values", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "left_keys", "type": "dict_keys[Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "right_keys", "type": "dict_keys[Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "config1_copy", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "encoder_params", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "input_", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "config2_copy", "type": "Any"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "input_", "type": "Any"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "config_path", "type": "pathlib.Path"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "config3", "type": "Any"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "config3_copy", "type": "Any"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "encoder_params", "type": "Any"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "input_", "type": "Any"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 509, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 523, "col_offset": 4, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "config_path", "type": "pathlib.Path"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "config4", "type": "Any"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "config4_copy", "type": "Any"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 617, "col_offset": 4, "nodeName": "input_", "type": "Any"}, {"lineNumber": 619, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 642, "col_offset": 4, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "values", "type": "Any"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "left_keys", "type": "dict_keys[Any]"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "right_keys", "type": "dict_keys[Any]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "get_from_params", "type": "Callable[..., catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "config1", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, int]]], Dict[str, Union[Dict[str, Union[Dict[str, Union[Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[str, Dict[str, Union[bool, str]], List[int]]]]]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "_pop_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "config1_copy", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "config1_copy", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "config1_copy", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 79, "col_offset": 10, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "heads", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "embedders", "type": "Any"}, {"lineNumber": 165, "col_offset": 13, "nodeName": "rand", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 178, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 191, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 204, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 206, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 218, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "forward_tuple", "type": "Callable[[Any], Tuple[Any, ...]]"}, {"lineNumber": 220, "col_offset": 39, "nodeName": "input_", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "get_from_params", "type": "Callable[..., catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 256, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 256, "col_offset": 33, "nodeName": "config2", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Union[Dict[str, Union[Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], int]]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "_pop_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 23, "nodeName": "config2_copy", "type": "Any"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "config2_copy", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 265, "col_offset": 10, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 330, "col_offset": 28, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 331, "col_offset": 28, "nodeName": "heads", "type": "Any"}, {"lineNumber": 332, "col_offset": 11, "nodeName": "embedders", "type": "Any"}, {"lineNumber": 334, "col_offset": 13, "nodeName": "rand", "type": "Any"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 336, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 348, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 359, "col_offset": 19, "nodeName": "forward_tuple", "type": "Callable[[Any], Tuple[Any, ...]]"}, {"lineNumber": 359, "col_offset": 39, "nodeName": "input_", "type": "Any"}, {"lineNumber": 367, "col_offset": 18, "nodeName": "parent", "type": "pathlib.Path"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "get_from_params", "type": "Callable[..., catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 372, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 372, "col_offset": 33, "nodeName": "config3", "type": "Any"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "_pop_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 373, "col_offset": 23, "nodeName": "config3_copy", "type": "Any"}, {"lineNumber": 374, "col_offset": 21, "nodeName": "config3_copy", "type": "Any"}, {"lineNumber": 375, "col_offset": 19, "nodeName": "config3_copy", "type": "Any"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 382, "col_offset": 10, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 464, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 464, "col_offset": 28, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 465, "col_offset": 28, "nodeName": "heads", "type": "Any"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 466, "col_offset": 28, "nodeName": "embedders", "type": "Any"}, {"lineNumber": 468, "col_offset": 13, "nodeName": "rand", "type": "Any"}, {"lineNumber": 470, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 470, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 481, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 483, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 483, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 494, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 496, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 496, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 507, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 507, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 509, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 509, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 521, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 521, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 523, "col_offset": 19, "nodeName": "forward_tuple", "type": "Callable[[Any], Tuple[Any, ...]]"}, {"lineNumber": 523, "col_offset": 39, "nodeName": "input_", "type": "Any"}, {"lineNumber": 531, "col_offset": 18, "nodeName": "parent", "type": "pathlib.Path"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "config4", "type": "Any"}, {"lineNumber": 537, "col_offset": 12, "nodeName": "get_from_params", "type": "Callable[..., catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 539, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 539, "col_offset": 33, "nodeName": "config4", "type": "Any"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "_pop_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 540, "col_offset": 23, "nodeName": "config4_copy", "type": "Any"}, {"lineNumber": 541, "col_offset": 19, "nodeName": "config4_copy", "type": "Any"}, {"lineNumber": 542, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 544, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 546, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 548, "col_offset": 10, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 613, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 613, "col_offset": 28, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 614, "col_offset": 28, "nodeName": "heads", "type": "Any"}, {"lineNumber": 615, "col_offset": 11, "nodeName": "embedders", "type": "Any"}, {"lineNumber": 617, "col_offset": 13, "nodeName": "rand", "type": "Any"}, {"lineNumber": 619, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 619, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 631, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 631, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 642, "col_offset": 19, "nodeName": "forward_tuple", "type": "Callable[[Any], Tuple[Any, ...]]"}, {"lineNumber": 642, "col_offset": 39, "nodeName": "input_", "type": "Any"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "dct", "type": "Any"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 16, "col_offset": 22, "nodeName": "values", "type": "Any"}, {"lineNumber": 16, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "left", "type": "Any"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "right", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "Hydra", "type": "Type[catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "config1", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, int]]], Dict[str, Union[Dict[str, Union[Dict[str, Union[Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[str, Dict[str, Union[bool, str]], List[int]]]]]"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "copy", "type": "module"}, {"lineNumber": 79, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "net", "type": "Any"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 162, "col_offset": 41, "nodeName": "net", "type": "Any"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 163, "col_offset": 45, "nodeName": "net", "type": "Any"}, {"lineNumber": 165, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 218, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "Hydra", "type": "Type[catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 254, "col_offset": 36, "nodeName": "config2", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Union[Dict[str, Union[Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], int]]"}, {"lineNumber": 256, "col_offset": 19, "nodeName": "copy", "type": "module"}, {"lineNumber": 265, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 330, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 330, "col_offset": 43, "nodeName": "net", "type": "Any"}, {"lineNumber": 331, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 331, "col_offset": 41, "nodeName": "net", "type": "Any"}, {"lineNumber": 332, "col_offset": 11, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 334, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 348, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 350, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 350, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 351, "col_offset": 20, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 351, "col_offset": 26, "nodeName": "input_", "type": "Any"}, {"lineNumber": 352, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 352, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 353, "col_offset": 20, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 353, "col_offset": 26, "nodeName": "input_", "type": "Any"}, {"lineNumber": 354, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 354, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 355, "col_offset": 20, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 359, "col_offset": 19, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 360, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 360, "col_offset": 15, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 368, "col_offset": 14, "nodeName": "load_config", "type": "Callable[..., Union[Dict[Any, Any], List[Any]]]"}, {"lineNumber": 368, "col_offset": 32, "nodeName": "config_path", "type": "pathlib.Path"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "Hydra", "type": "Type[catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 370, "col_offset": 36, "nodeName": "config3", "type": "Any"}, {"lineNumber": 372, "col_offset": 19, "nodeName": "copy", "type": "module"}, {"lineNumber": 382, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 464, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 464, "col_offset": 43, "nodeName": "net", "type": "Any"}, {"lineNumber": 465, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 465, "col_offset": 41, "nodeName": "net", "type": "Any"}, {"lineNumber": 466, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 466, "col_offset": 45, "nodeName": "net", "type": "Any"}, {"lineNumber": 468, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 471, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 481, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 494, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 507, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 521, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 523, "col_offset": 19, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 524, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 524, "col_offset": 15, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 526, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 532, "col_offset": 14, "nodeName": "load_config", "type": "Callable[..., Union[Dict[Any, Any], List[Any]]]"}, {"lineNumber": 532, "col_offset": 32, "nodeName": "config_path", "type": "pathlib.Path"}, {"lineNumber": 534, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 534, "col_offset": 23, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 535, "col_offset": 16, "nodeName": "get_from_params", "type": "Callable[..., catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 537, "col_offset": 12, "nodeName": "Hydra", "type": "Type[catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 537, "col_offset": 36, "nodeName": "config4", "type": "Any"}, {"lineNumber": 539, "col_offset": 19, "nodeName": "copy", "type": "module"}, {"lineNumber": 548, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 613, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 613, "col_offset": 43, "nodeName": "net", "type": "Any"}, {"lineNumber": 614, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 614, "col_offset": 41, "nodeName": "net", "type": "Any"}, {"lineNumber": 615, "col_offset": 11, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 617, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 620, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 621, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 631, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 633, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 633, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 634, "col_offset": 20, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 634, "col_offset": 26, "nodeName": "input_", "type": "Any"}, {"lineNumber": 635, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 635, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 636, "col_offset": 20, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 636, "col_offset": 26, "nodeName": "input_", "type": "Any"}, {"lineNumber": 637, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 637, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 638, "col_offset": 20, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 639, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 642, "col_offset": 19, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 643, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 643, "col_offset": 15, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 644, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 645, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "pop", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "_pop_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "values", "type": "Any"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 180, "col_offset": 38, "nodeName": "long", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 193, "col_offset": 38, "nodeName": "long", "type": "Any"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 206, "col_offset": 38, "nodeName": "long", "type": "Any"}, {"lineNumber": 206, "col_offset": 71, "nodeName": "long", "type": "Any"}, {"lineNumber": 218, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 268, "col_offset": 21, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 348, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 350, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 352, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 354, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 367, "col_offset": 18, "nodeName": "absolute", "type": "Callable"}, {"lineNumber": 368, "col_offset": 14, "nodeName": "utils", "type": "module"}, {"lineNumber": 384, "col_offset": 23, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 385, "col_offset": 25, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 402, "col_offset": 21, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 481, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 483, "col_offset": 38, "nodeName": "long", "type": "Any"}, {"lineNumber": 494, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 496, "col_offset": 38, "nodeName": "long", "type": "Any"}, {"lineNumber": 507, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 509, "col_offset": 38, "nodeName": "long", "type": "Any"}, {"lineNumber": 509, "col_offset": 71, "nodeName": "long", "type": "Any"}, {"lineNumber": 521, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 531, "col_offset": 18, "nodeName": "absolute", "type": "Callable"}, {"lineNumber": 532, "col_offset": 14, "nodeName": "utils", "type": "module"}, {"lineNumber": 534, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 535, "col_offset": 16, "nodeName": "Hydra", "type": "Type[catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 535, "col_offset": 40, "nodeName": "config4", "type": "Any"}, {"lineNumber": 550, "col_offset": 23, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 551, "col_offset": 21, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 631, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 633, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 635, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 637, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "values", "type": "Any"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 81, "col_offset": 39, "nodeName": "encoder_params", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 268, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 351, "col_offset": 42, "nodeName": "long", "type": "Any"}, {"lineNumber": 353, "col_offset": 42, "nodeName": "long", "type": "Any"}, {"lineNumber": 356, "col_offset": 28, "nodeName": "long", "type": "Any"}, {"lineNumber": 356, "col_offset": 61, "nodeName": "long", "type": "Any"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 384, "col_offset": 39, "nodeName": "encoder_params", "type": "Any"}, {"lineNumber": 385, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 402, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 471, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 526, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 542, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 550, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 551, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 620, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 621, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 634, "col_offset": 42, "nodeName": "long", "type": "Any"}, {"lineNumber": 636, "col_offset": 42, "nodeName": "long", "type": "Any"}, {"lineNumber": 639, "col_offset": 28, "nodeName": "long", "type": "Any"}, {"lineNumber": 639, "col_offset": 61, "nodeName": "long", "type": "Any"}, {"lineNumber": 644, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 645, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "left", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "right", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 180, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 193, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 206, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 206, "col_offset": 71, "nodeName": "ones", "type": "Any"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 273, "col_offset": 30, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 367, "col_offset": 18, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 367, "col_offset": 23, "nodeName": "__file__", "type": "str"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 387, "col_offset": 31, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 395, "col_offset": 31, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 404, "col_offset": 29, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 407, "col_offset": 30, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 483, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 496, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 509, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 509, "col_offset": 71, "nodeName": "ones", "type": "Any"}, {"lineNumber": 531, "col_offset": 18, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 531, "col_offset": 23, "nodeName": "__file__", "type": "str"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 544, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 553, "col_offset": 29, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 556, "col_offset": 30, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 180, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 193, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 206, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 206, "col_offset": 71, "nodeName": "torch", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 271, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 273, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 351, "col_offset": 42, "nodeName": "ones", "type": "Any"}, {"lineNumber": 353, "col_offset": 42, "nodeName": "ones", "type": "Any"}, {"lineNumber": 356, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 356, "col_offset": 61, "nodeName": "ones", "type": "Any"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 387, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 388, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 395, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 396, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 404, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 405, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 407, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 471, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 483, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 496, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 509, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 509, "col_offset": 71, "nodeName": "torch", "type": "Any"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 546, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 553, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 554, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 556, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 620, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 621, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 634, "col_offset": 42, "nodeName": "ones", "type": "Any"}, {"lineNumber": 636, "col_offset": 42, "nodeName": "ones", "type": "Any"}, {"lineNumber": 639, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 639, "col_offset": 61, "nodeName": "ones", "type": "Any"}, {"lineNumber": 106, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 222, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 223, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 275, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 280, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 291, "col_offset": 40, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 337, "col_offset": 22, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 338, "col_offset": 22, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 351, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 353, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 356, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 356, "col_offset": 61, "nodeName": "torch", "type": "Any"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 361, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 362, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 409, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 414, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 425, "col_offset": 40, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 471, "col_offset": 22, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 525, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 526, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 526, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 558, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 563, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 574, "col_offset": 40, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 620, "col_offset": 22, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 621, "col_offset": 22, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 634, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 636, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 639, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 639, "col_offset": 61, "nodeName": "torch", "type": "Any"}, {"lineNumber": 644, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 644, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 645, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 645, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 106, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 112, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 275, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 276, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 280, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 281, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 291, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 409, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 410, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 414, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 415, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 425, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 558, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 559, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 563, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 564, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 574, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 87, "col_offset": 46, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 88, "col_offset": 46, "nodeName": "Normalize", "type": "Type[catalyst.contrib.nn.modules.common.Normalize]"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 102, "col_offset": 45, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 124, "col_offset": 47, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 138, "col_offset": 49, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 271, "col_offset": 45, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 293, "col_offset": 47, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 307, "col_offset": 49, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 390, "col_offset": 46, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 391, "col_offset": 46, "nodeName": "Normalize", "type": "Type[catalyst.contrib.nn.modules.common.Normalize]"}, {"lineNumber": 397, "col_offset": 43, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 405, "col_offset": 45, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 427, "col_offset": 47, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 441, "col_offset": 49, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 554, "col_offset": 45, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 576, "col_offset": 47, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 590, "col_offset": 49, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 87, "col_offset": 46, "nodeName": "nn", "type": "Any"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "nn", "type": "Any"}, {"lineNumber": 124, "col_offset": 47, "nodeName": "nn", "type": "Any"}, {"lineNumber": 125, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 138, "col_offset": 49, "nodeName": "nn", "type": "Any"}, {"lineNumber": 139, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 293, "col_offset": 47, "nodeName": "nn", "type": "Any"}, {"lineNumber": 294, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 307, "col_offset": 49, "nodeName": "nn", "type": "Any"}, {"lineNumber": 308, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 390, "col_offset": 46, "nodeName": "nn", "type": "Any"}, {"lineNumber": 397, "col_offset": 43, "nodeName": "nn", "type": "Any"}, {"lineNumber": 427, "col_offset": 47, "nodeName": "nn", "type": "Any"}, {"lineNumber": 428, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 441, "col_offset": 49, "nodeName": "nn", "type": "Any"}, {"lineNumber": 442, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 576, "col_offset": 47, "nodeName": "nn", "type": "Any"}, {"lineNumber": 577, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 590, "col_offset": 49, "nodeName": "nn", "type": "Any"}, {"lineNumber": 591, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 102, "col_offset": 61, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 108, "col_offset": 45, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 118, "col_offset": 54, "nodeName": "Normalize", "type": "Type[catalyst.contrib.nn.modules.common.Normalize]"}, {"lineNumber": 271, "col_offset": 61, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 277, "col_offset": 45, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 285, "col_offset": 44, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 287, "col_offset": 54, "nodeName": "Normalize", "type": "Type[catalyst.contrib.nn.modules.common.Normalize]"}, {"lineNumber": 405, "col_offset": 61, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 411, "col_offset": 45, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 419, "col_offset": 44, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 421, "col_offset": 54, "nodeName": "Normalize", "type": "Type[catalyst.contrib.nn.modules.common.Normalize]"}, {"lineNumber": 554, "col_offset": 61, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 560, "col_offset": 45, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 568, "col_offset": 44, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 570, "col_offset": 54, "nodeName": "Normalize", "type": "Type[catalyst.contrib.nn.modules.common.Normalize]"}, {"lineNumber": 129, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 143, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 298, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 312, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 432, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 446, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 581, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 595, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 108, "col_offset": 61, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 116, "col_offset": 60, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 277, "col_offset": 61, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 285, "col_offset": 60, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 411, "col_offset": 61, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 419, "col_offset": 60, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 560, "col_offset": 61, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 568, "col_offset": 60, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 130, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 144, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 299, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 313, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 433, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 447, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 582, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 596, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}]