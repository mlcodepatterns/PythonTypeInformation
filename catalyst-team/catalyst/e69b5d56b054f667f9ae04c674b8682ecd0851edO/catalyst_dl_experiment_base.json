[{"lineNumber": 12, "col_offset": 21, "nodeName": "Experiment", "type": "Any"}, {"lineNumber": 188, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 139, "col_offset": 35, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "Model", "type": "Any"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "Criterion", "type": "Any"}, {"lineNumber": 165, "col_offset": 61, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 169, "col_offset": 59, "nodeName": "Scheduler", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "_model", "type": "Any"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "_datasets", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "datasets", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "_loaders", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "loaders", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "_callbacks", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "_criterion", "type": "Any"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "_scheduler", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "_initial_seed", "type": "int"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "initial_seed", "type": "int"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "_logdir", "type": "str"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "logdir", "type": "str"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "_stage", "type": "str"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "stage", "type": "str"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "_num_epochs", "type": "int"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "num_epochs", "type": "int"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "_valid_loader", "type": "str"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "valid_loader", "type": "str"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "_main_metric", "type": "str"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "main_metric", "type": "str"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "_minimize_metric", "type": "bool"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "minimize_metric", "type": "bool"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "_verbose", "type": "bool"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "verbose", "type": "bool"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "_check_run", "type": "bool"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "check_run", "type": "bool"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "_state_kwargs", "type": "Union[Dict[Any, Any], Dict[nothing, nothing]]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "_checkpoint_data", "type": "Union[Dict[Any, Any], Dict[nothing, nothing]]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "_distributed_params", "type": "Union[Dict[Any, Any], Dict[nothing, nothing]]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "_monitoring_params", "type": "Union[Dict[Any, Any], Dict[nothing, nothing]]"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "_initial_seed", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "_logdir", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "_distributed_params", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "_monitoring_params", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "state_params", "type": "Dict[Any, Any]"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "state_params", "type": "Dict[Any, Any]"}, {"lineNumber": 143, "col_offset": 46, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "_model", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "_criterion", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "_scheduler", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "_loaders", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "_callbacks", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "datasets", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "loaders", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "sort_callbacks_by_order", "type": "Any"}, {"lineNumber": 98, "col_offset": 56, "nodeName": "callbacks", "type": "Union[List[catalyst.core.callback.Callback], collections.OrderedDict[str, catalyst.core.callback.Callback]]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "state_kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "checkpoint_data", "type": "Dict[Any, Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "distributed_params", "type": "Dict[Any, Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "monitoring_params", "type": "Dict[Any, Any]"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "_stage", "type": "Any"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "logdir", "type": "str"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "_num_epochs", "type": "int"}, {"lineNumber": 148, "col_offset": 28, "nodeName": "_valid_loader", "type": "str"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "_main_metric", "type": "str"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "_verbose", "type": "bool"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "_minimize_metric", "type": "bool"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "_checkpoint_data", "type": "Union[Dict[Any, Any], Dict[nothing, nothing]]"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "default_params", "type": "Dict[str, Union[Dict[nothing, nothing], Dict[Any, Any], bool, str, int]]"}, {"lineNumber": 154, "col_offset": 44, "nodeName": "_state_kwargs", "type": "Union[Dict[Any, Any], Dict[nothing, nothing]]"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 165, "col_offset": 47, "nodeName": "Module", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 169, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 174, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "_datasets", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "datasets", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "utils", "type": "module"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 148, "col_offset": 28, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 154, "col_offset": 44, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 143, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 143, "col_offset": 59, "nodeName": "Any", "type": "Any"}, {"lineNumber": 165, "col_offset": 47, "nodeName": "nn", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "get_loaders_from_params", "type": "Any"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "utils", "type": "module"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "initial_seed", "type": "int"}, {"lineNumber": 179, "col_offset": 50, "nodeName": "_datasets", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 179, "col_offset": 50, "nodeName": "self", "type": "BaseExperiment"}]