[{"lineNumber": 15, "col_offset": 0, "nodeName": "_pop_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "test_config1", "type": "Callable[[], Any]"}, {"lineNumber": 263, "col_offset": 0, "nodeName": "test_config2", "type": "Callable[[], Any]"}, {"lineNumber": 426, "col_offset": 0, "nodeName": "test_config3", "type": "Callable[[], Any]"}, {"lineNumber": 620, "col_offset": 0, "nodeName": "test_config4", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "values", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "left_keys", "type": "dict_keys[Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "right_keys", "type": "dict_keys[Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "config1_", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "encoder_params", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "input_", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "config2_", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "input_", "type": "Any"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "config_path", "type": "pathlib.Path"}, {"lineNumber": 428, "col_offset": 4, "nodeName": "config3", "type": "Any"}, {"lineNumber": 430, "col_offset": 4, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "config3_", "type": "Any"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "encoder_params", "type": "Any"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "input_", "type": "Any"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "config_path", "type": "pathlib.Path"}, {"lineNumber": 622, "col_offset": 4, "nodeName": "config4", "type": "Any"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 629, "col_offset": 4, "nodeName": "config4_", "type": "Any"}, {"lineNumber": 631, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 724, "col_offset": 4, "nodeName": "input_", "type": "Any"}, {"lineNumber": 726, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 751, "col_offset": 4, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "values", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "left_keys", "type": "dict_keys[Any]"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "right_keys", "type": "dict_keys[Any]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "get_from_params", "type": "Callable[..., catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "config1", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, int]]], Dict[str, Union[Dict[str, Union[Dict[str, Union[Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[str, Dict[str, Union[bool, str]], List[int]]]]]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "_pop_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "config1_", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "config1_", "type": "Any"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "config1_", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 197, "col_offset": 28, "nodeName": "heads", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 198, "col_offset": 28, "nodeName": "embedders", "type": "Any"}, {"lineNumber": 200, "col_offset": 13, "nodeName": "rand", "type": "Any"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 226, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 228, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 239, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "input_", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 255, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "forward_tuple", "type": "Callable[[Any], Tuple[Any, ...]]"}, {"lineNumber": 257, "col_offset": 39, "nodeName": "input_", "type": "Any"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "get_from_params", "type": "Callable[..., catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 298, "col_offset": 15, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 298, "col_offset": 29, "nodeName": "config2", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Union[Dict[str, Union[Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], int]]"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "_pop_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 299, "col_offset": 23, "nodeName": "config2_", "type": "Any"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "config2_", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 307, "col_offset": 10, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 389, "col_offset": 28, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 390, "col_offset": 28, "nodeName": "heads", "type": "Any"}, {"lineNumber": 391, "col_offset": 11, "nodeName": "embedders", "type": "Any"}, {"lineNumber": 393, "col_offset": 13, "nodeName": "rand", "type": "Any"}, {"lineNumber": 395, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 395, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 407, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 420, "col_offset": 19, "nodeName": "forward_tuple", "type": "Callable[[Any], Tuple[Any, ...]]"}, {"lineNumber": 420, "col_offset": 39, "nodeName": "input_", "type": "Any"}, {"lineNumber": 427, "col_offset": 18, "nodeName": "parent", "type": "pathlib.Path"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "get_from_params", "type": "Callable[..., catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 432, "col_offset": 15, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 432, "col_offset": 29, "nodeName": "config3", "type": "Any"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "_pop_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 433, "col_offset": 23, "nodeName": "config3_", "type": "Any"}, {"lineNumber": 434, "col_offset": 21, "nodeName": "config3_", "type": "Any"}, {"lineNumber": 435, "col_offset": 19, "nodeName": "config3_", "type": "Any"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 442, "col_offset": 10, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 553, "col_offset": 28, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 554, "col_offset": 28, "nodeName": "heads", "type": "Any"}, {"lineNumber": 555, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 555, "col_offset": 28, "nodeName": "embedders", "type": "Any"}, {"lineNumber": 557, "col_offset": 13, "nodeName": "rand", "type": "Any"}, {"lineNumber": 559, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 559, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 570, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 572, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 572, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 583, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 585, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 585, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 596, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 598, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "input_", "type": "Any"}, {"lineNumber": 612, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 612, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 614, "col_offset": 19, "nodeName": "forward_tuple", "type": "Callable[[Any], Tuple[Any, ...]]"}, {"lineNumber": 614, "col_offset": 39, "nodeName": "input_", "type": "Any"}, {"lineNumber": 621, "col_offset": 18, "nodeName": "parent", "type": "pathlib.Path"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "config4", "type": "Any"}, {"lineNumber": 627, "col_offset": 12, "nodeName": "get_from_params", "type": "Callable[..., catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 629, "col_offset": 15, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 629, "col_offset": 29, "nodeName": "config4", "type": "Any"}, {"lineNumber": 630, "col_offset": 4, "nodeName": "_pop_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 630, "col_offset": 23, "nodeName": "config4_", "type": "Any"}, {"lineNumber": 631, "col_offset": 19, "nodeName": "config4_", "type": "Any"}, {"lineNumber": 632, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 638, "col_offset": 10, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 720, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 720, "col_offset": 28, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 721, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 721, "col_offset": 28, "nodeName": "heads", "type": "Any"}, {"lineNumber": 722, "col_offset": 11, "nodeName": "embedders", "type": "Any"}, {"lineNumber": 724, "col_offset": 13, "nodeName": "rand", "type": "Any"}, {"lineNumber": 726, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 726, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 738, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 738, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 751, "col_offset": 19, "nodeName": "forward_tuple", "type": "Callable[[Any], Tuple[Any, ...]]"}, {"lineNumber": 751, "col_offset": 39, "nodeName": "input_", "type": "Any"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "dct", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 17, "col_offset": 22, "nodeName": "values", "type": "Any"}, {"lineNumber": 17, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "left", "type": "Any"}, {"lineNumber": 23, "col_offset": 27, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "right", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "Hydra", "type": "Type[catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "config1", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, int]]], Dict[str, Union[Dict[str, Union[Dict[str, Union[Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[str, Dict[str, Union[bool, str]], List[int]]]]]"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "copy", "type": "module"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 196, "col_offset": 43, "nodeName": "net", "type": "Any"}, {"lineNumber": 197, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 197, "col_offset": 41, "nodeName": "net", "type": "Any"}, {"lineNumber": 198, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 198, "col_offset": 45, "nodeName": "net", "type": "Any"}, {"lineNumber": 200, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 226, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "Hydra", "type": "Type[catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 296, "col_offset": 36, "nodeName": "config2", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Union[Dict[str, Union[Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], int]]"}, {"lineNumber": 298, "col_offset": 15, "nodeName": "copy", "type": "module"}, {"lineNumber": 307, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 389, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 389, "col_offset": 43, "nodeName": "net", "type": "Any"}, {"lineNumber": 390, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 390, "col_offset": 41, "nodeName": "net", "type": "Any"}, {"lineNumber": 391, "col_offset": 11, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 393, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 407, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 409, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 409, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 410, "col_offset": 20, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 410, "col_offset": 26, "nodeName": "input_", "type": "Any"}, {"lineNumber": 411, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 411, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 412, "col_offset": 20, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 412, "col_offset": 26, "nodeName": "input_", "type": "Any"}, {"lineNumber": 413, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 413, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 414, "col_offset": 20, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 420, "col_offset": 19, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 421, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 421, "col_offset": 15, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 428, "col_offset": 14, "nodeName": "load_config", "type": "Callable[..., Union[Dict[Any, Any], List[Any]]]"}, {"lineNumber": 428, "col_offset": 32, "nodeName": "config_path", "type": "pathlib.Path"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "Hydra", "type": "Type[catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 430, "col_offset": 36, "nodeName": "config3", "type": "Any"}, {"lineNumber": 432, "col_offset": 15, "nodeName": "copy", "type": "module"}, {"lineNumber": 442, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 553, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 553, "col_offset": 43, "nodeName": "net", "type": "Any"}, {"lineNumber": 554, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 554, "col_offset": 41, "nodeName": "net", "type": "Any"}, {"lineNumber": 555, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 555, "col_offset": 45, "nodeName": "net", "type": "Any"}, {"lineNumber": 557, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 560, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 570, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 583, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 596, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 612, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 614, "col_offset": 19, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 615, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 615, "col_offset": 15, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 616, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 617, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 622, "col_offset": 14, "nodeName": "load_config", "type": "Callable[..., Union[Dict[Any, Any], List[Any]]]"}, {"lineNumber": 622, "col_offset": 32, "nodeName": "config_path", "type": "pathlib.Path"}, {"lineNumber": 624, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 624, "col_offset": 23, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 625, "col_offset": 16, "nodeName": "get_from_params", "type": "Callable[..., catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 627, "col_offset": 12, "nodeName": "Hydra", "type": "Type[catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 627, "col_offset": 36, "nodeName": "config4", "type": "Any"}, {"lineNumber": 629, "col_offset": 15, "nodeName": "copy", "type": "module"}, {"lineNumber": 638, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 720, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 720, "col_offset": 43, "nodeName": "net", "type": "Any"}, {"lineNumber": 721, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 721, "col_offset": 41, "nodeName": "net", "type": "Any"}, {"lineNumber": 722, "col_offset": 11, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 724, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 727, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 728, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 738, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 740, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 740, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 741, "col_offset": 20, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 741, "col_offset": 26, "nodeName": "input_", "type": "Any"}, {"lineNumber": 742, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 742, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 743, "col_offset": 20, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 743, "col_offset": 26, "nodeName": "input_", "type": "Any"}, {"lineNumber": 744, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 744, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 745, "col_offset": 20, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 746, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 751, "col_offset": 19, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 752, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 752, "col_offset": 15, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 753, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 754, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "pop", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "_pop_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 31, "nodeName": "values", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 215, "col_offset": 38, "nodeName": "long", "type": "Any"}, {"lineNumber": 226, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 228, "col_offset": 38, "nodeName": "long", "type": "Any"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "long", "type": "Any"}, {"lineNumber": 242, "col_offset": 57, "nodeName": "long", "type": "Any"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 309, "col_offset": 23, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 310, "col_offset": 21, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 407, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 409, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 411, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 413, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 427, "col_offset": 18, "nodeName": "absolute", "type": "Callable"}, {"lineNumber": 428, "col_offset": 14, "nodeName": "utils", "type": "module"}, {"lineNumber": 444, "col_offset": 23, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 445, "col_offset": 25, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 474, "col_offset": 21, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 570, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 572, "col_offset": 38, "nodeName": "long", "type": "Any"}, {"lineNumber": 583, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 585, "col_offset": 38, "nodeName": "long", "type": "Any"}, {"lineNumber": 596, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 599, "col_offset": 24, "nodeName": "long", "type": "Any"}, {"lineNumber": 599, "col_offset": 57, "nodeName": "long", "type": "Any"}, {"lineNumber": 612, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 621, "col_offset": 18, "nodeName": "absolute", "type": "Callable"}, {"lineNumber": 622, "col_offset": 14, "nodeName": "utils", "type": "module"}, {"lineNumber": 624, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 625, "col_offset": 16, "nodeName": "Hydra", "type": "Type[catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 625, "col_offset": 40, "nodeName": "config4", "type": "Any"}, {"lineNumber": 640, "col_offset": 23, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 641, "col_offset": 21, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 738, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 740, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 742, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 744, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "values", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "encoder_params", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 309, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 310, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 410, "col_offset": 42, "nodeName": "long", "type": "Any"}, {"lineNumber": 412, "col_offset": 42, "nodeName": "long", "type": "Any"}, {"lineNumber": 416, "col_offset": 20, "nodeName": "long", "type": "Any"}, {"lineNumber": 417, "col_offset": 20, "nodeName": "long", "type": "Any"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 444, "col_offset": 39, "nodeName": "encoder_params", "type": "Any"}, {"lineNumber": 445, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 474, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 560, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 616, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 617, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 632, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 640, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 641, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 727, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 728, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 741, "col_offset": 42, "nodeName": "long", "type": "Any"}, {"lineNumber": 743, "col_offset": 42, "nodeName": "long", "type": "Any"}, {"lineNumber": 747, "col_offset": 20, "nodeName": "long", "type": "Any"}, {"lineNumber": 748, "col_offset": 20, "nodeName": "long", "type": "Any"}, {"lineNumber": 753, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 754, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "left", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "right", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 215, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 228, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 242, "col_offset": 57, "nodeName": "ones", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 312, "col_offset": 29, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 317, "col_offset": 30, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 427, "col_offset": 18, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "__file__", "type": "str"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 447, "col_offset": 31, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 460, "col_offset": 31, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 476, "col_offset": 29, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 481, "col_offset": 30, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 572, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 585, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 599, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 599, "col_offset": 57, "nodeName": "ones", "type": "Any"}, {"lineNumber": 621, "col_offset": 18, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 621, "col_offset": 23, "nodeName": "__file__", "type": "str"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 643, "col_offset": 29, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 648, "col_offset": 30, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 215, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 228, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 242, "col_offset": 57, "nodeName": "torch", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 312, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 313, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 317, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 410, "col_offset": 42, "nodeName": "ones", "type": "Any"}, {"lineNumber": 412, "col_offset": 42, "nodeName": "ones", "type": "Any"}, {"lineNumber": 416, "col_offset": 20, "nodeName": "ones", "type": "Any"}, {"lineNumber": 417, "col_offset": 20, "nodeName": "ones", "type": "Any"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 447, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 448, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 460, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 461, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 476, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 477, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 481, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 560, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 572, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 585, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 599, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 599, "col_offset": 57, "nodeName": "torch", "type": "Any"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 643, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 644, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 648, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 727, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 728, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 741, "col_offset": 42, "nodeName": "ones", "type": "Any"}, {"lineNumber": 743, "col_offset": 42, "nodeName": "ones", "type": "Any"}, {"lineNumber": 747, "col_offset": 20, "nodeName": "ones", "type": "Any"}, {"lineNumber": 748, "col_offset": 20, "nodeName": "ones", "type": "Any"}, {"lineNumber": 126, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 259, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 260, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 319, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 333, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 348, "col_offset": 40, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 396, "col_offset": 22, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 397, "col_offset": 22, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 410, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 412, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 416, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 417, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 422, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 423, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 483, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 497, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 512, "col_offset": 40, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 560, "col_offset": 22, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 616, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 616, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 617, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 617, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 650, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 664, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 679, "col_offset": 40, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 727, "col_offset": 22, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 728, "col_offset": 22, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 741, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 743, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 747, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 748, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 753, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 753, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 754, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 754, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 126, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 127, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 141, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 319, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 320, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 333, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 334, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 348, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 483, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 484, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 497, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 498, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 512, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 650, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 651, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 664, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 665, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 679, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 99, "col_offset": 46, "nodeName": "Normalize", "type": "Type[catalyst.contrib.nn.modules.common.Normalize]"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 121, "col_offset": 37, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 157, "col_offset": 47, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 171, "col_offset": 49, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 314, "col_offset": 37, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 350, "col_offset": 47, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 364, "col_offset": 49, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 452, "col_offset": 36, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 456, "col_offset": 46, "nodeName": "Normalize", "type": "Type[catalyst.contrib.nn.modules.common.Normalize]"}, {"lineNumber": 465, "col_offset": 36, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 478, "col_offset": 37, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 514, "col_offset": 47, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 528, "col_offset": 49, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 645, "col_offset": 37, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 681, "col_offset": 47, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 695, "col_offset": 49, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 157, "col_offset": 47, "nodeName": "nn", "type": "Any"}, {"lineNumber": 158, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 171, "col_offset": 49, "nodeName": "nn", "type": "Any"}, {"lineNumber": 172, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 350, "col_offset": 47, "nodeName": "nn", "type": "Any"}, {"lineNumber": 351, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 364, "col_offset": 49, "nodeName": "nn", "type": "Any"}, {"lineNumber": 365, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 452, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 465, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 514, "col_offset": 47, "nodeName": "nn", "type": "Any"}, {"lineNumber": 515, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 528, "col_offset": 49, "nodeName": "nn", "type": "Any"}, {"lineNumber": 529, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 681, "col_offset": 47, "nodeName": "nn", "type": "Any"}, {"lineNumber": 682, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 695, "col_offset": 49, "nodeName": "nn", "type": "Any"}, {"lineNumber": 696, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 121, "col_offset": 53, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 131, "col_offset": 44, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 145, "col_offset": 44, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 151, "col_offset": 54, "nodeName": "Normalize", "type": "Type[catalyst.contrib.nn.modules.common.Normalize]"}, {"lineNumber": 314, "col_offset": 53, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 324, "col_offset": 44, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 338, "col_offset": 44, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 344, "col_offset": 54, "nodeName": "Normalize", "type": "Type[catalyst.contrib.nn.modules.common.Normalize]"}, {"lineNumber": 478, "col_offset": 53, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 488, "col_offset": 44, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 502, "col_offset": 44, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 508, "col_offset": 54, "nodeName": "Normalize", "type": "Type[catalyst.contrib.nn.modules.common.Normalize]"}, {"lineNumber": 645, "col_offset": 53, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 655, "col_offset": 44, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 669, "col_offset": 44, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 675, "col_offset": 54, "nodeName": "Normalize", "type": "Type[catalyst.contrib.nn.modules.common.Normalize]"}, {"lineNumber": 162, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 176, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 355, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 369, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 519, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 533, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 686, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 700, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 132, "col_offset": 50, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 146, "col_offset": 50, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 325, "col_offset": 50, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 339, "col_offset": 50, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 489, "col_offset": 50, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 503, "col_offset": 50, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 656, "col_offset": 50, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 670, "col_offset": 50, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 163, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 177, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 356, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 370, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 520, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 534, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 687, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 701, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}]