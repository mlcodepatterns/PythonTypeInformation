[{"lineNumber": 12, "col_offset": 17, "nodeName": "ConfigExperiment", "type": "Type[catalyst.dl.experiment.config.ConfigExperiment]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "model_", "type": "Any"}, {"lineNumber": 14, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "model_", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "datasets", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "trainset", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "testset", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "datasets", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 13, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 13, "col_offset": 62, "nodeName": "Module", "type": "Any"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 15, "col_offset": 29, "nodeName": "DataParallel", "type": "Any"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "model_", "type": "Any"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "module", "type": "Any"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "stage", "type": "str"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "key", "type": "str"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 25, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "Compose", "type": "Any"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "CIFAR10", "type": "Any"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "CIFAR10", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "datasets", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "datasets", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 13, "col_offset": 62, "nodeName": "nn", "type": "Any"}, {"lineNumber": 15, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "model_", "type": "Any"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "transforms", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 15, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "model_", "type": "Any"}, {"lineNumber": 20, "col_offset": 40, "nodeName": "key", "type": "str"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "set_requires_grad", "type": "Callable[[Any, Optional[bool]], None]"}, {"lineNumber": 21, "col_offset": 40, "nodeName": "layer", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "ToTensor", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "Normalize", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "torchvision", "type": "Any"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "get_transforms", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "torchvision", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "get_transforms", "type": "Callable[..., Any]"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "utils", "type": "module"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "transforms", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "transforms", "type": "Any"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "Experiment", "type": "Type[Experiment]"}, {"lineNumber": 40, "col_offset": 54, "nodeName": "stage", "type": "str"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "Experiment", "type": "Type[Experiment]"}, {"lineNumber": 46, "col_offset": 54, "nodeName": "stage", "type": "str"}]