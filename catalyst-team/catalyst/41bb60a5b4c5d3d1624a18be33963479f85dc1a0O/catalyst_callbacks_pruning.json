[{"lineNumber": 20, "col_offset": 0, "nodeName": "_wrap_pruning_fn", "type": "Callable[..., Any]"}, {"lineNumber": 9, "col_offset": 3, "nodeName": "TYPE_CHECKING", "type": "bool"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "Callback", "type": "Type[catalyst.core.callback.Callback]"}, {"lineNumber": 169, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 13, "col_offset": 23, "nodeName": "l1_unstructured", "type": "Any"}, {"lineNumber": 14, "col_offset": 27, "nodeName": "random_unstructured", "type": "Any"}, {"lineNumber": 15, "col_offset": 21, "nodeName": "ln_structured", "type": "Any"}, {"lineNumber": 16, "col_offset": 25, "nodeName": "random_structured", "type": "Any"}, {"lineNumber": 13, "col_offset": 23, "nodeName": "prune", "type": "Any"}, {"lineNumber": 14, "col_offset": 27, "nodeName": "prune", "type": "Any"}, {"lineNumber": 15, "col_offset": 21, "nodeName": "prune", "type": "Any"}, {"lineNumber": 16, "col_offset": 25, "nodeName": "prune", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "prune_on_epoch_end", "type": "Optional[bool]"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "prune_on_epoch_end", "type": "Optional[bool]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "prune_on_stage_end", "type": "Optional[bool]"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "prune_on_stage_end", "type": "Optional[bool]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "remove_reparametrization_on_stage_end", "type": "Optional[bool]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "keys_to_prune", "type": "Optional[List[str]]"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "keys_to_prune", "type": "Optional[List[str]]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "amount", "type": "Optional[Union[int, float]]"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "amount", "type": "Optional[Union[int, float]]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "reinitialize_after_pruning", "type": "Optional[bool]"}, {"lineNumber": 120, "col_offset": 42, "nodeName": "reinitialize_after_pruning", "type": "Optional[bool]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "layers_to_prune", "type": "Optional[List[str]]"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "layers_to_prune", "type": "Optional[List[str]]"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "prune_on_stage_end", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "remove_reparametrization_on_stage_end", "type": "Any"}, {"lineNumber": 21, "col_offset": 40, "nodeName": "pruning_fn", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "amount", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "External", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "pruning_fn", "type": "Union[str, Callable[..., Any]]"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "pruning_fn", "type": "Union[str, Callable[..., Any]]"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "pruning_fn", "type": "Union[str, Callable[..., Any]]"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "keys_to_prune", "type": "Optional[List[str]]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "keys_to_prune", "type": "List[str]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "prune_on_epoch_end", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 22, "col_offset": 31, "nodeName": "args", "type": "Tuple[()]"}, {"lineNumber": 22, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, Optional[int]]"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "CallbackOrder", "type": "Type[catalyst.core.callback.CallbackOrder]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "pruning_fn", "type": "Union[str, Callable[..., Any]]"}, {"lineNumber": 82, "col_offset": 37, "nodeName": "pruning_fn", "type": "Union[str, Callable[..., Any]]"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "pruning_fn", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "prune_on_stage_end", "type": "Optional[bool]"}, {"lineNumber": 109, "col_offset": 38, "nodeName": "prune_on_epoch_end", "type": "Optional[bool]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "num_epochs", "type": "int"}, {"lineNumber": 132, "col_offset": 60, "nodeName": "epoch", "type": "int"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "prune_model", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "prune_model", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "remove_reparametrization", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "dim", "type": "Optional[int]"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "pruning_fn", "type": "Union[str, Callable[..., Any]]"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "PRUNING_FN", "type": "Dict[str, Any]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "runner", "type": "catalyst.core.runner.IRunner"}, {"lineNumber": 132, "col_offset": 60, "nodeName": "runner", "type": "catalyst.core.runner.IRunner"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "pruning_fn", "type": "Any"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "keys_to_prune", "type": "Any"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "amount", "type": "Any"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "layers_to_prune", "type": "Any"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "reinitialize_after_pruning", "type": "Any"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 155, "col_offset": 27, "nodeName": "pruning_fn", "type": "Any"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "keys_to_prune", "type": "Any"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "amount", "type": "Any"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "layers_to_prune", "type": "Any"}, {"lineNumber": 159, "col_offset": 43, "nodeName": "reinitialize_after_pruning", "type": "Any"}, {"lineNumber": 163, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "keys_to_prune", "type": "Any"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "layers_to_prune", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "PRUNING_FN", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "l_norm", "type": "Optional[int]"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "_wrap_pruning_fn", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "ln_structured", "type": "Any"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "_wrap_pruning_fn", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 45, "nodeName": "pruning_fn", "type": "Union[str, Callable[..., Any]]"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "runner", "type": "catalyst.core.runner.IRunner"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "runner", "type": "catalyst.core.runner.IRunner"}, {"lineNumber": 155, "col_offset": 27, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 159, "col_offset": 43, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 163, "col_offset": 22, "nodeName": "runner", "type": "catalyst.core.runner.IRunner"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "self", "type": "PruningCallback"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "prune", "type": "Any"}, {"lineNumber": 95, "col_offset": 49, "nodeName": "dim", "type": "Optional[int]"}, {"lineNumber": 95, "col_offset": 56, "nodeName": "l_norm", "type": "Optional[int]"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "PRUNING_FN", "type": "Dict[str, Any]"}, {"lineNumber": 99, "col_offset": 52, "nodeName": "dim", "type": "Optional[int]"}, {"lineNumber": 79, "col_offset": 53, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "pruning_fn", "type": "Union[str, Callable[..., Any]]"}, {"lineNumber": 79, "col_offset": 53, "nodeName": "PRUNING_FN", "type": "Dict[str, Any]"}]