[{"lineNumber": 44, "col_offset": 23, "nodeName": "IExperiment", "type": "Type[catalyst.core.experiment.IExperiment]"}, {"lineNumber": 594, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "Any", "type": "Any"}, {"lineNumber": 184, "col_offset": 36, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 237, "col_offset": 43, "nodeName": "Criterion", "type": "Any"}, {"lineNumber": 247, "col_offset": 9, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 394, "col_offset": 36, "nodeName": "Callable", "type": "Any"}, {"lineNumber": 432, "col_offset": 9, "nodeName": "Callable", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "_config", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "_trial", "type": "None"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "_initial_seed", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "timestamp", "type": "str"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "config_hash", "type": "str"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "logdir", "type": "str"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "logdir", "type": "str"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "exclude_tag", "type": "str"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "logdir", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "baselogdir", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "stages_defaults", "type": "Dict[str, Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "stages_config_out", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "STAGE_KEYWORDS", "type": "List[str]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "stage", "type": "Any"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "stages_config", "type": "Dict[Any, Any]"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "stages_config_out", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "_initial_seed", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "_logdir", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "_trial", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "stages_keys", "type": "List[Any]"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "stages_keys", "type": "List[Any]"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "List", "type": "Any"}, {"lineNumber": 194, "col_offset": 46, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "key_value_flag", "type": "Any"}, {"lineNumber": 202, "col_offset": 11, "nodeName": "key_value_flag", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "key_value_flag", "type": "Any"}, {"lineNumber": 223, "col_offset": 11, "nodeName": "key_value_flag", "type": "Any"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "layerwise_params", "type": "Union[Any, collections.OrderedDict[nothing, nothing]]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "no_bias_weight_decay", "type": "Union[Any, bool]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "lr_scaling_params", "type": "Optional[Any]"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "lr_scaling_params", "type": "Optional[Any]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "model_key", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "optimizer_key", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "key_value_flag", "type": "Any"}, {"lineNumber": 351, "col_offset": 11, "nodeName": "key_value_flag", "type": "Any"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 335, "col_offset": 9, "nodeName": "Union", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "optimizer_key", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 373, "col_offset": 15, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 368, "col_offset": 9, "nodeName": "Union", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "params", "type": "Union[Dict[Any, Any], Dict[nothing, nothing]]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "key_value_flag", "type": "Any"}, {"lineNumber": 382, "col_offset": 11, "nodeName": "key_value_flag", "type": "Any"}, {"lineNumber": 391, "col_offset": 15, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 377, "col_offset": 9, "nodeName": "Union", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "key_value_flag", "type": "Any"}, {"lineNumber": 397, "col_offset": 11, "nodeName": "key_value_flag", "type": "Any"}, {"lineNumber": 428, "col_offset": 15, "nodeName": "transform", "type": "Any"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "key_value_flag", "type": "Any"}, {"lineNumber": 449, "col_offset": 11, "nodeName": "key_value_flag", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "transform_fn", "type": "Callable[..., Any]"}, {"lineNumber": 464, "col_offset": 15, "nodeName": "transform_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "data_params", "type": "Dict[Any, Any]"}, {"lineNumber": 477, "col_offset": 15, "nodeName": "loaders", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "wrapper_params", "type": "Any"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "callback", "type": "Any"}, {"lineNumber": 488, "col_offset": 15, "nodeName": "callback", "type": "Any"}, {"lineNumber": 505, "col_offset": 12, "nodeName": "callback", "type": "Any"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "callbacks", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "default_callbacks", "type": "List[Union[Tuple[str, None, Type[catalyst.callbacks.logging.VerboseLogger]], Tuple[str, None, Type[catalyst.callbacks.timer.TimerCallback]], Tuple[str, None, Type[catalyst.callbacks.early_stop.CheckRunCallback]], Tuple[str, None, Type[catalyst.callbacks.batch_overfit.BatchOverfitCallback]], Tuple[str, None, Type[catalyst.callbacks.metric.MetricManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.validation.ValidationManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.ConsoleLogger]], Tuple[str, None, Type[catalyst.callbacks.checkpoint.CheckpointCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.TensorboardLogger]], Tuple[str, None, Type[catalyst.callbacks.criterion.CriterionCallback]], Tuple[str, Type[catalyst.callbacks.optimizer.IOptimizerCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback]], Tuple[str, Type[catalyst.callbacks.scheduler.ISchedulerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]], Tuple[str, None, Type[catalyst.callbacks.exception.ExceptionCallback]]]]"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "optimizer_cls", "type": "Type[catalyst.callbacks.optimizer.OptimizerCallback]"}, {"lineNumber": 534, "col_offset": 24, "nodeName": "OptimizerCallback", "type": "Type[catalyst.callbacks.optimizer.OptimizerCallback]"}, {"lineNumber": 536, "col_offset": 11, "nodeName": "_verbose", "type": "Any"}, {"lineNumber": 538, "col_offset": 11, "nodeName": "_check_time", "type": "Any"}, {"lineNumber": 540, "col_offset": 11, "nodeName": "_check_run", "type": "Any"}, {"lineNumber": 542, "col_offset": 11, "nodeName": "_overfit", "type": "Any"}, {"lineNumber": 577, "col_offset": 13, "nodeName": "default_callbacks", "type": "List[Union[Tuple[str, None, Type[catalyst.callbacks.logging.VerboseLogger]], Tuple[str, None, Type[catalyst.callbacks.timer.TimerCallback]], Tuple[str, None, Type[catalyst.callbacks.early_stop.CheckRunCallback]], Tuple[str, None, Type[catalyst.callbacks.batch_overfit.BatchOverfitCallback]], Tuple[str, None, Type[catalyst.callbacks.metric.MetricManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.validation.ValidationManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.ConsoleLogger]], Tuple[str, None, Type[catalyst.callbacks.checkpoint.CheckpointCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.TensorboardLogger]], Tuple[str, None, Type[catalyst.callbacks.criterion.CriterionCallback]], Tuple[str, Type[catalyst.callbacks.optimizer.IOptimizerCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback]], Tuple[str, Type[catalyst.callbacks.scheduler.ISchedulerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]], Tuple[str, None, Type[catalyst.callbacks.exception.ExceptionCallback]]]]"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "stage_index", "type": "int"}, {"lineNumber": 591, "col_offset": 15, "nodeName": "callbacks", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 64, "col_offset": 38, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "get", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "get", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "get", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "get", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "get", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "_prepare_logdir", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 49, "nodeName": "merge_dicts", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "_get_stages_config", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "get_utcnow_time", "type": "Callable[..., str]"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "get_short_hash", "type": "Callable[[Any], str]"}, {"lineNumber": 96, "col_offset": 37, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "get", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "_logdir", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "logdir", "type": "Any"}, {"lineNumber": 114, "col_offset": 48, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "key2", "type": "str"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "STAGE_KEYWORDS", "type": "List[str]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "_config", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 194, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "pop", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "model", "type": "Dict[Any, Any]"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "_config", "type": "Any"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "_get_model", "type": "Callable[..., Any]"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "criterion", "type": "Dict[Any, Any]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 237, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "get", "type": "Callable"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "_get_criterion", "type": "Callable[..., Any]"}, {"lineNumber": 246, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 250, "col_offset": 27, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 251, "col_offset": 31, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 254, "col_offset": 28, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "data_params", "type": "Dict[Any, Any]"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "per_gpu_scaling", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "distributed_rank", "type": "int"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "distributed", "type": "bool"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "base_lr", "type": "Any"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "base_batch_size", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "lr_scaling", "type": "Any"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "lr_scaling", "type": "float"}, {"lineNumber": 273, "col_offset": 20, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "model_key", "type": "Any"}, {"lineNumber": 301, "col_offset": 35, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 304, "col_offset": 24, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "get_from_params", "type": "Any"}, {"lineNumber": 307, "col_offset": 11, "nodeName": "load_from_previous_stage", "type": "Any"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "checkpoint_path", "type": "str"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "checkpoint", "type": "Any"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "dict2load", "type": "Any"}, {"lineNumber": 311, "col_offset": 24, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "device", "type": "Any"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 318, "col_offset": 25, "nodeName": "model_params", "type": "List[Any]"}, {"lineNumber": 334, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 346, "col_offset": 27, "nodeName": "get", "type": "Callable"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "optimizer", "type": "Dict[Any, Any]"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 367, "col_offset": 72, "nodeName": "Any", "type": "Any"}, {"lineNumber": 369, "col_offset": 24, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 370, "col_offset": 48, "nodeName": "optimizer_key", "type": "Any"}, {"lineNumber": 370, "col_offset": 67, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 371, "col_offset": 20, "nodeName": "get_from_params", "type": "Any"}, {"lineNumber": 376, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 379, "col_offset": 17, "nodeName": "get", "type": "Callable"}, {"lineNumber": 380, "col_offset": 25, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "scheduler", "type": "Dict[Any, Any]"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 395, "col_offset": 25, "nodeName": "pop", "type": "Any"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "transform", "type": "Any"}, {"lineNumber": 431, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 431, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 444, "col_offset": 27, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 448, "col_offset": 25, "nodeName": "pop", "type": "Any"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "transform_params", "type": "Any"}, {"lineNumber": 452, "col_offset": 23, "nodeName": "_get_transform", "type": "Callable[..., Callable[..., Any]]"}, {"lineNumber": 453, "col_offset": 11, "nodeName": "transform_fn", "type": "Callable[..., Any]"}, {"lineNumber": 467, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 467, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 470, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 471, "col_offset": 18, "nodeName": "get_loaders_from_params", "type": "Callable[..., collections.OrderedDict[str, Any]]"}, {"lineNumber": 481, "col_offset": 25, "nodeName": "pop", "type": "Any"}, {"lineNumber": 482, "col_offset": 19, "nodeName": "get_from_params", "type": "Any"}, {"lineNumber": 483, "col_offset": 11, "nodeName": "wrapper_params", "type": "Any"}, {"lineNumber": 484, "col_offset": 46, "nodeName": "callback", "type": "Any"}, {"lineNumber": 492, "col_offset": 19, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 492, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 503, "col_offset": 11, "nodeName": "stage_index", "type": "int"}, {"lineNumber": 505, "col_offset": 24, "nodeName": "values", "type": "Callable"}, {"lineNumber": 520, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 522, "col_offset": 27, "nodeName": "get", "type": "Callable"}, {"lineNumber": 526, "col_offset": 20, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 527, "col_offset": 17, "nodeName": "callback_params", "type": "Any"}, {"lineNumber": 527, "col_offset": 36, "nodeName": "items", "type": "Callable"}, {"lineNumber": 528, "col_offset": 12, "nodeName": "callback", "type": "Any"}, {"lineNumber": 529, "col_offset": 29, "nodeName": "callback", "type": "Any"}, {"lineNumber": 536, "col_offset": 11, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 538, "col_offset": 11, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 540, "col_offset": 11, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 542, "col_offset": 11, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 578, "col_offset": 12, "nodeName": "callback_interface", "type": "Union[Type[catalyst.callbacks.exception.ExceptionCallback], Type[catalyst.callbacks.logging.ConsoleLogger], Type[catalyst.callbacks.logging.VerboseLogger], Type[catalyst.callbacks.checkpoint.CheckpointCallback], Type[catalyst.callbacks.timer.TimerCallback], Type[catalyst.callbacks.criterion.CriterionCallback], Type[catalyst.callbacks.early_stop.CheckRunCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback], Type[catalyst.callbacks.batch_overfit.BatchOverfitCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback], Type[catalyst.callbacks.metric.MetricManagerCallback], Type[catalyst.callbacks.logging.TensorboardLogger], Type[catalyst.callbacks.validation.ValidationManagerCallback]]"}, {"lineNumber": 588, "col_offset": 22, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 588, "col_offset": 60, "nodeName": "stage", "type": "str"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "_process_callbacks", "type": "Callable[..., None]"}, {"lineNumber": 589, "col_offset": 32, "nodeName": "callbacks", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 589, "col_offset": 43, "nodeName": "stage_index", "type": "int"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "_logdir", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "_config", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "timestamp", "type": "str"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "config_hash", "type": "str"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "logdir", "type": "Any"}, {"lineNumber": 106, "col_offset": 52, "nodeName": "exclude_tag", "type": "str"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "logdir_postfix", "type": "str"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "_logdir", "type": "str"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "_logdir", "type": "None"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "key", "type": "str"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "stages_config_out", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "_config", "type": "Any"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "keys", "type": "Any"}, {"lineNumber": 194, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 194, "col_offset": 59, "nodeName": "Any", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "model_key", "type": "Any"}, {"lineNumber": 204, "col_offset": 27, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 204, "col_offset": 43, "nodeName": "items", "type": "Any"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 208, "col_offset": 34, "nodeName": "model", "type": "Dict[Any, Any]"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "get_from_params", "type": "Any"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 216, "col_offset": 34, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "params", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "key_params", "type": "Any"}, {"lineNumber": 225, "col_offset": 35, "nodeName": "items", "type": "Callable"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "get_from_params", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 242, "col_offset": 42, "nodeName": "criterion_params", "type": "Union[Dict[Any, Any], Dict[nothing, nothing]]"}, {"lineNumber": 246, "col_offset": 33, "nodeName": "Union", "type": "Any"}, {"lineNumber": 250, "col_offset": 27, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 250, "col_offset": 58, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 251, "col_offset": 31, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 254, "col_offset": 28, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 256, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "get", "type": "Callable"}, {"lineNumber": 258, "col_offset": 30, "nodeName": "get", "type": "Callable"}, {"lineNumber": 259, "col_offset": 31, "nodeName": "get_rank", "type": "Callable[[], int]"}, {"lineNumber": 260, "col_offset": 26, "nodeName": "distributed_rank", "type": "int"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "per_gpu_scaling", "type": "Any"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "num_gpus", "type": "Any"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 263, "col_offset": 30, "nodeName": "num_gpus", "type": "Any"}, {"lineNumber": 265, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 266, "col_offset": 30, "nodeName": "get", "type": "Any"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 267, "col_offset": 38, "nodeName": "base_batch_size", "type": "Any"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 268, "col_offset": 27, "nodeName": "base_lr", "type": "Any"}, {"lineNumber": 268, "col_offset": 37, "nodeName": "lr_scaling", "type": "Any"}, {"lineNumber": 273, "col_offset": 20, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 275, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 276, "col_offset": 23, "nodeName": "Module", "type": "Any"}, {"lineNumber": 278, "col_offset": 27, "nodeName": "process_model_params", "type": "Callable[..., List[Any]]"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "layerwise_params", "type": "Union[collections.OrderedDict[nothing, nothing], Any]"}, {"lineNumber": 279, "col_offset": 41, "nodeName": "no_bias_weight_decay", "type": "Union[Any, bool]"}, {"lineNumber": 279, "col_offset": 63, "nodeName": "lr_scaling", "type": "Any"}, {"lineNumber": 281, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 281, "col_offset": 24, "nodeName": "model_key", "type": "Any"}, {"lineNumber": 281, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 301, "col_offset": 35, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 304, "col_offset": 24, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "OPTIMIZERS", "type": "Any"}, {"lineNumber": 305, "col_offset": 49, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 305, "col_offset": 64, "nodeName": "model_params", "type": "List[Any]"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "load_checkpoint", "type": "Callable[[str], Any]"}, {"lineNumber": 309, "col_offset": 41, "nodeName": "checkpoint_path", "type": "str"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "optimizer_key", "type": "Any"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "dict2load", "type": "Dict[Any, Any]"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "unpack_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 314, "col_offset": 30, "nodeName": "checkpoint", "type": "Any"}, {"lineNumber": 317, "col_offset": 21, "nodeName": "get_device", "type": "Callable[[], Any]"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "optimizer_state", "type": "Any"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "key", "type": "str"}, {"lineNumber": 327, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 327, "col_offset": 30, "nodeName": "items", "type": "Callable"}, {"lineNumber": 328, "col_offset": 20, "nodeName": "optimizer_param_group", "type": "Any"}, {"lineNumber": 328, "col_offset": 45, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 334, "col_offset": 33, "nodeName": "Union", "type": "Any"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "optimizer_params", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 353, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 353, "col_offset": 21, "nodeName": "params", "type": "Any"}, {"lineNumber": 353, "col_offset": 31, "nodeName": "items", "type": "Callable"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "optimizer_key", "type": "str"}, {"lineNumber": 357, "col_offset": 40, "nodeName": "key", "type": "Any"}, {"lineNumber": 361, "col_offset": 24, "nodeName": "_get_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 361, "col_offset": 44, "nodeName": "stage", "type": "str"}, {"lineNumber": 361, "col_offset": 51, "nodeName": "model", "type": "Any"}, {"lineNumber": 335, "col_offset": 15, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 367, "col_offset": 22, "nodeName": "Union", "type": "Any"}, {"lineNumber": 369, "col_offset": 24, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 370, "col_offset": 20, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 371, "col_offset": 20, "nodeName": "SCHEDULERS", "type": "Any"}, {"lineNumber": 371, "col_offset": 49, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 371, "col_offset": 67, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 368, "col_offset": 15, "nodeName": "Scheduler", "type": "Any"}, {"lineNumber": 376, "col_offset": 37, "nodeName": "Union", "type": "Any"}, {"lineNumber": 380, "col_offset": 25, "nodeName": "params", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 384, "col_offset": 21, "nodeName": "scheduler_params", "type": "Any"}, {"lineNumber": 384, "col_offset": 41, "nodeName": "items", "type": "Callable"}, {"lineNumber": 389, "col_offset": 24, "nodeName": "_get_scheduler", "type": "Callable[..., Union[Any, Dict[str, Any]]]"}, {"lineNumber": 377, "col_offset": 15, "nodeName": "Scheduler", "type": "Any"}, {"lineNumber": 395, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 405, "col_offset": 24, "nodeName": "AugmentorCompose", "type": "Type[catalyst.contrib.data.augmentor.AugmentorCompose]"}, {"lineNumber": 417, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 426, "col_offset": 24, "nodeName": "get_from_params", "type": "Any"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 448, "col_offset": 25, "nodeName": "transform_params", "type": "Any"}, {"lineNumber": 450, "col_offset": 31, "nodeName": "get", "type": "Any"}, {"lineNumber": 450, "col_offset": 52, "nodeName": "dataset", "type": "str"}, {"lineNumber": 452, "col_offset": 23, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 452, "col_offset": 45, "nodeName": "transform_params", "type": "Any"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "transform_fn_origin", "type": "Callable[..., Any]"}, {"lineNumber": 459, "col_offset": 34, "nodeName": "transform_fn", "type": "Callable[..., Any]"}, {"lineNumber": 472, "col_offset": 28, "nodeName": "get_datasets", "type": "Callable[..., collections.OrderedDict[str, Any]]"}, {"lineNumber": 473, "col_offset": 25, "nodeName": "initial_seed", "type": "int"}, {"lineNumber": 474, "col_offset": 18, "nodeName": "stage", "type": "str"}, {"lineNumber": 475, "col_offset": 14, "nodeName": "data_params", "type": "Dict[Any, Any]"}, {"lineNumber": 481, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 482, "col_offset": 19, "nodeName": "CALLBACKS", "type": "Any"}, {"lineNumber": 482, "col_offset": 47, "nodeName": "params", "type": "Any"}, {"lineNumber": 484, "col_offset": 12, "nodeName": "wrapper_params", "type": "Any"}, {"lineNumber": 485, "col_offset": 23, "nodeName": "_get_callback", "type": "Callable[..., Any]"}, {"lineNumber": 505, "col_offset": 24, "nodeName": "callbacks", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 527, "col_offset": 36, "nodeName": "callbacks_params", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 528, "col_offset": 23, "nodeName": "_get_callback", "type": "Callable[..., Any]"}, {"lineNumber": 529, "col_offset": 12, "nodeName": "callbacks", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 537, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 539, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 541, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 543, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 546, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 547, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 550, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 552, "col_offset": 15, "nodeName": "logdir", "type": "Any"}, {"lineNumber": 558, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 562, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 566, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "default_callbacks", "type": "List[Union[Tuple[str, None, Type[catalyst.callbacks.logging.VerboseLogger]], Tuple[str, None, Type[catalyst.callbacks.timer.TimerCallback]], Tuple[str, None, Type[catalyst.callbacks.early_stop.CheckRunCallback]], Tuple[str, None, Type[catalyst.callbacks.batch_overfit.BatchOverfitCallback]], Tuple[str, None, Type[catalyst.callbacks.metric.MetricManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.validation.ValidationManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.ConsoleLogger]], Tuple[str, None, Type[catalyst.callbacks.checkpoint.CheckpointCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.TensorboardLogger]], Tuple[str, None, Type[catalyst.callbacks.criterion.CriterionCallback]], Tuple[str, Type[catalyst.callbacks.optimizer.IOptimizerCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback]], Tuple[str, Type[catalyst.callbacks.scheduler.ISchedulerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]], Tuple[str, None, Type[catalyst.callbacks.exception.ExceptionCallback]]]]"}, {"lineNumber": 571, "col_offset": 54, "nodeName": "ExceptionCallback", "type": "Type[catalyst.callbacks.exception.ExceptionCallback]"}, {"lineNumber": 578, "col_offset": 33, "nodeName": "callback_interface", "type": "None"}, {"lineNumber": 578, "col_offset": 55, "nodeName": "callback_fn", "type": "Union[Type[catalyst.callbacks.exception.ExceptionCallback], Type[catalyst.callbacks.logging.ConsoleLogger], Type[catalyst.callbacks.logging.VerboseLogger], Type[catalyst.callbacks.checkpoint.CheckpointCallback], Type[catalyst.callbacks.timer.TimerCallback], Type[catalyst.callbacks.criterion.CriterionCallback], Type[catalyst.callbacks.early_stop.CheckRunCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback], Type[catalyst.callbacks.batch_overfit.BatchOverfitCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback], Type[catalyst.callbacks.metric.MetricManagerCallback], Type[catalyst.callbacks.logging.TensorboardLogger], Type[catalyst.callbacks.validation.ValidationManagerCallback]]"}, {"lineNumber": 579, "col_offset": 33, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 583, "col_offset": 19, "nodeName": "is_already_present", "type": "bool"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "get", "type": "Any"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "get", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "get", "type": "Any"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "get", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "get", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "get", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "lower", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "baselogdir", "type": "Any"}, {"lineNumber": 108, "col_offset": 62, "nodeName": "exclude_tag", "type": "str"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "_get_logdir", "type": "Callable[[Dict[Any, Any]], str]"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "_config", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 120, "col_offset": 39, "nodeName": "merge_dicts", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "stages_defaults", "type": "Dict[str, Any]"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "stage", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "STAGE_KEYWORDS", "type": "List[str]"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "stage", "type": "Any"}, {"lineNumber": 133, "col_offset": 30, "nodeName": "stage", "type": "Any"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "key2", "type": "str"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "stages_config", "type": "Any"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "stages_config", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 204, "col_offset": 43, "nodeName": "params", "type": "Any"}, {"lineNumber": 205, "col_offset": 35, "nodeName": "_get_model", "type": "Callable[..., Any]"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "MODELS", "type": "Any"}, {"lineNumber": 210, "col_offset": 45, "nodeName": "params", "type": "Any"}, {"lineNumber": 225, "col_offset": 35, "nodeName": "params", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "_get_criterion", "type": "Callable[..., Any]"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "CRITERIONS", "type": "Any"}, {"lineNumber": 232, "col_offset": 53, "nodeName": "params", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 233, "col_offset": 41, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 234, "col_offset": 28, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "stages_config", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "data_params", "type": "Dict[Any, Any]"}, {"lineNumber": 258, "col_offset": 30, "nodeName": "data_params", "type": "Dict[Any, Any]"}, {"lineNumber": 261, "col_offset": 39, "nodeName": "distributed", "type": "bool"}, {"lineNumber": 262, "col_offset": 27, "nodeName": "max", "type": "Callable"}, {"lineNumber": 265, "col_offset": 22, "nodeName": "lr_scaling_params", "type": "Optional[Any]"}, {"lineNumber": 266, "col_offset": 30, "nodeName": "lr_scaling_params", "type": "Optional[Any]"}, {"lineNumber": 276, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 282, "col_offset": 27, "nodeName": "process_model_params", "type": "Callable[..., List[Any]]"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "layerwise_params", "type": "Union[collections.OrderedDict[nothing, nothing], Any]"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "no_bias_weight_decay", "type": "Union[Any, bool]"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "lr_scaling", "type": "Any"}, {"lineNumber": 288, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 288, "col_offset": 24, "nodeName": "model_key", "type": "Any"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "model_params", "type": "List[Any]"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "model_key_el", "type": "Any"}, {"lineNumber": 290, "col_offset": 32, "nodeName": "model_key", "type": "Any"}, {"lineNumber": 307, "col_offset": 40, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 307, "col_offset": 58, "nodeName": "stage", "type": "str"}, {"lineNumber": 308, "col_offset": 33, "nodeName": "logdir", "type": "Any"}, {"lineNumber": 313, "col_offset": 29, "nodeName": "optimizer_key", "type": "Any"}, {"lineNumber": 313, "col_offset": 44, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 314, "col_offset": 52, "nodeName": "dict2load", "type": "Any"}, {"lineNumber": 320, "col_offset": 34, "nodeName": "state", "type": "Any"}, {"lineNumber": 321, "col_offset": 20, "nodeName": "state_key", "type": "Any"}, {"lineNumber": 321, "col_offset": 31, "nodeName": "state_value", "type": "Any"}, {"lineNumber": 321, "col_offset": 46, "nodeName": "items", "type": "Any"}, {"lineNumber": 327, "col_offset": 30, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 328, "col_offset": 45, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 329, "col_offset": 49, "nodeName": "value", "type": "Any"}, {"lineNumber": 346, "col_offset": 27, "nodeName": "stages_config", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 353, "col_offset": 31, "nodeName": "optimizer_params", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 356, "col_offset": 23, "nodeName": "optimizer_key", "type": "str"}, {"lineNumber": 356, "col_offset": 44, "nodeName": "params", "type": "Any"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "params", "type": "Any"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "optimizer", "type": "Dict[Any, Any]"}, {"lineNumber": 359, "col_offset": 33, "nodeName": "_get_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 359, "col_offset": 53, "nodeName": "stage", "type": "str"}, {"lineNumber": 359, "col_offset": 60, "nodeName": "model", "type": "Any"}, {"lineNumber": 361, "col_offset": 24, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 361, "col_offset": 60, "nodeName": "optimizer_params", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 335, "col_offset": 26, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 370, "col_offset": 30, "nodeName": "optimizer_key", "type": "Any"}, {"lineNumber": 368, "col_offset": 26, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 379, "col_offset": 17, "nodeName": "stages_config", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 384, "col_offset": 41, "nodeName": "params", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 385, "col_offset": 33, "nodeName": "_get_scheduler", "type": "Callable[..., Union[Any, Dict[str, Any]]]"}, {"lineNumber": 389, "col_offset": 24, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 389, "col_offset": 54, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 389, "col_offset": 67, "nodeName": "params", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 377, "col_offset": 26, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "update", "type": "Any"}, {"lineNumber": 426, "col_offset": 24, "nodeName": "TRANSFORMS", "type": "Any"}, {"lineNumber": 426, "col_offset": 53, "nodeName": "params", "type": "Any"}, {"lineNumber": 450, "col_offset": 31, "nodeName": "transform_params", "type": "Any"}, {"lineNumber": 458, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 458, "col_offset": 28, "nodeName": "transform_fn", "type": "Callable[..., Any]"}, {"lineNumber": 458, "col_offset": 42, "nodeName": "AugmentorCompose", "type": "Type[catalyst.contrib.data.augmentor.AugmentorCompose]"}, {"lineNumber": 470, "col_offset": 27, "nodeName": "stages_config", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 472, "col_offset": 28, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 473, "col_offset": 25, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 485, "col_offset": 23, "nodeName": "ConfigExperiment", "type": "Type[ConfigExperiment]"}, {"lineNumber": 486, "col_offset": 18, "nodeName": "wrapper_params", "type": "Any"}, {"lineNumber": 511, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 511, "col_offset": 26, "nodeName": "callback", "type": "Any"}, {"lineNumber": 511, "col_offset": 36, "nodeName": "CheckpointCallback", "type": "Type[catalyst.callbacks.checkpoint.CheckpointCallback]"}, {"lineNumber": 511, "col_offset": 60, "nodeName": "stage_index", "type": "int"}, {"lineNumber": 512, "col_offset": 19, "nodeName": "load_on_stage_start", "type": "Any"}, {"lineNumber": 513, "col_offset": 20, "nodeName": "load_on_stage_start", "type": "str"}, {"lineNumber": 522, "col_offset": 27, "nodeName": "stages_config", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 528, "col_offset": 23, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 528, "col_offset": 44, "nodeName": "callback_params", "type": "Any"}, {"lineNumber": 529, "col_offset": 22, "nodeName": "key", "type": "Any"}, {"lineNumber": 537, "col_offset": 12, "nodeName": "default_callbacks", "type": "List[Union[Tuple[str, None, Type[catalyst.callbacks.logging.VerboseLogger]], Tuple[str, None, Type[catalyst.callbacks.timer.TimerCallback]], Tuple[str, None, Type[catalyst.callbacks.early_stop.CheckRunCallback]], Tuple[str, None, Type[catalyst.callbacks.batch_overfit.BatchOverfitCallback]], Tuple[str, None, Type[catalyst.callbacks.metric.MetricManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.validation.ValidationManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.ConsoleLogger]], Tuple[str, None, Type[catalyst.callbacks.checkpoint.CheckpointCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.TensorboardLogger]], Tuple[str, None, Type[catalyst.callbacks.criterion.CriterionCallback]], Tuple[str, Type[catalyst.callbacks.optimizer.IOptimizerCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback]], Tuple[str, Type[catalyst.callbacks.scheduler.ISchedulerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]], Tuple[str, None, Type[catalyst.callbacks.exception.ExceptionCallback]]]]"}, {"lineNumber": 537, "col_offset": 56, "nodeName": "VerboseLogger", "type": "Type[catalyst.callbacks.logging.VerboseLogger]"}, {"lineNumber": 539, "col_offset": 12, "nodeName": "default_callbacks", "type": "List[Union[Tuple[str, None, Type[catalyst.callbacks.logging.VerboseLogger]], Tuple[str, None, Type[catalyst.callbacks.timer.TimerCallback]], Tuple[str, None, Type[catalyst.callbacks.early_stop.CheckRunCallback]], Tuple[str, None, Type[catalyst.callbacks.batch_overfit.BatchOverfitCallback]], Tuple[str, None, Type[catalyst.callbacks.metric.MetricManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.validation.ValidationManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.ConsoleLogger]], Tuple[str, None, Type[catalyst.callbacks.checkpoint.CheckpointCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.TensorboardLogger]], Tuple[str, None, Type[catalyst.callbacks.criterion.CriterionCallback]], Tuple[str, Type[catalyst.callbacks.optimizer.IOptimizerCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback]], Tuple[str, Type[catalyst.callbacks.scheduler.ISchedulerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]], Tuple[str, None, Type[catalyst.callbacks.exception.ExceptionCallback]]]]"}, {"lineNumber": 539, "col_offset": 54, "nodeName": "TimerCallback", "type": "Type[catalyst.callbacks.timer.TimerCallback]"}, {"lineNumber": 541, "col_offset": 12, "nodeName": "default_callbacks", "type": "List[Union[Tuple[str, None, Type[catalyst.callbacks.logging.VerboseLogger]], Tuple[str, None, Type[catalyst.callbacks.timer.TimerCallback]], Tuple[str, None, Type[catalyst.callbacks.early_stop.CheckRunCallback]], Tuple[str, None, Type[catalyst.callbacks.batch_overfit.BatchOverfitCallback]], Tuple[str, None, Type[catalyst.callbacks.metric.MetricManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.validation.ValidationManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.ConsoleLogger]], Tuple[str, None, Type[catalyst.callbacks.checkpoint.CheckpointCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.TensorboardLogger]], Tuple[str, None, Type[catalyst.callbacks.criterion.CriterionCallback]], Tuple[str, Type[catalyst.callbacks.optimizer.IOptimizerCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback]], Tuple[str, Type[catalyst.callbacks.scheduler.ISchedulerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]], Tuple[str, None, Type[catalyst.callbacks.exception.ExceptionCallback]]]]"}, {"lineNumber": 541, "col_offset": 54, "nodeName": "CheckRunCallback", "type": "Type[catalyst.callbacks.early_stop.CheckRunCallback]"}, {"lineNumber": 543, "col_offset": 12, "nodeName": "default_callbacks", "type": "List[Union[Tuple[str, None, Type[catalyst.callbacks.logging.VerboseLogger]], Tuple[str, None, Type[catalyst.callbacks.timer.TimerCallback]], Tuple[str, None, Type[catalyst.callbacks.early_stop.CheckRunCallback]], Tuple[str, None, Type[catalyst.callbacks.batch_overfit.BatchOverfitCallback]], Tuple[str, None, Type[catalyst.callbacks.metric.MetricManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.validation.ValidationManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.ConsoleLogger]], Tuple[str, None, Type[catalyst.callbacks.checkpoint.CheckpointCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.TensorboardLogger]], Tuple[str, None, Type[catalyst.callbacks.criterion.CriterionCallback]], Tuple[str, Type[catalyst.callbacks.optimizer.IOptimizerCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback]], Tuple[str, Type[catalyst.callbacks.scheduler.ISchedulerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]], Tuple[str, None, Type[catalyst.callbacks.exception.ExceptionCallback]]]]"}, {"lineNumber": 543, "col_offset": 56, "nodeName": "BatchOverfitCallback", "type": "Type[catalyst.callbacks.batch_overfit.BatchOverfitCallback]"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "stage", "type": "str"}, {"lineNumber": 546, "col_offset": 12, "nodeName": "default_callbacks", "type": "List[Union[Tuple[str, None, Type[catalyst.callbacks.logging.VerboseLogger]], Tuple[str, None, Type[catalyst.callbacks.timer.TimerCallback]], Tuple[str, None, Type[catalyst.callbacks.early_stop.CheckRunCallback]], Tuple[str, None, Type[catalyst.callbacks.batch_overfit.BatchOverfitCallback]], Tuple[str, None, Type[catalyst.callbacks.metric.MetricManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.validation.ValidationManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.ConsoleLogger]], Tuple[str, None, Type[catalyst.callbacks.checkpoint.CheckpointCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.TensorboardLogger]], Tuple[str, None, Type[catalyst.callbacks.criterion.CriterionCallback]], Tuple[str, Type[catalyst.callbacks.optimizer.IOptimizerCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback]], Tuple[str, Type[catalyst.callbacks.scheduler.ISchedulerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]], Tuple[str, None, Type[catalyst.callbacks.exception.ExceptionCallback]]]]"}, {"lineNumber": 546, "col_offset": 56, "nodeName": "MetricManagerCallback", "type": "Type[catalyst.callbacks.metric.MetricManagerCallback]"}, {"lineNumber": 547, "col_offset": 12, "nodeName": "default_callbacks", "type": "List[Union[Tuple[str, None, Type[catalyst.callbacks.logging.VerboseLogger]], Tuple[str, None, Type[catalyst.callbacks.timer.TimerCallback]], Tuple[str, None, Type[catalyst.callbacks.early_stop.CheckRunCallback]], Tuple[str, None, Type[catalyst.callbacks.batch_overfit.BatchOverfitCallback]], Tuple[str, None, Type[catalyst.callbacks.metric.MetricManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.validation.ValidationManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.ConsoleLogger]], Tuple[str, None, Type[catalyst.callbacks.checkpoint.CheckpointCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.TensorboardLogger]], Tuple[str, None, Type[catalyst.callbacks.criterion.CriterionCallback]], Tuple[str, Type[catalyst.callbacks.optimizer.IOptimizerCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback]], Tuple[str, Type[catalyst.callbacks.scheduler.ISchedulerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]], Tuple[str, None, Type[catalyst.callbacks.exception.ExceptionCallback]]]]"}, {"lineNumber": 548, "col_offset": 38, "nodeName": "ValidationManagerCallback", "type": "Type[catalyst.callbacks.validation.ValidationManagerCallback]"}, {"lineNumber": 550, "col_offset": 12, "nodeName": "default_callbacks", "type": "List[Union[Tuple[str, None, Type[catalyst.callbacks.logging.VerboseLogger]], Tuple[str, None, Type[catalyst.callbacks.timer.TimerCallback]], Tuple[str, None, Type[catalyst.callbacks.early_stop.CheckRunCallback]], Tuple[str, None, Type[catalyst.callbacks.batch_overfit.BatchOverfitCallback]], Tuple[str, None, Type[catalyst.callbacks.metric.MetricManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.validation.ValidationManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.ConsoleLogger]], Tuple[str, None, Type[catalyst.callbacks.checkpoint.CheckpointCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.TensorboardLogger]], Tuple[str, None, Type[catalyst.callbacks.criterion.CriterionCallback]], Tuple[str, Type[catalyst.callbacks.optimizer.IOptimizerCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback]], Tuple[str, Type[catalyst.callbacks.scheduler.ISchedulerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]], Tuple[str, None, Type[catalyst.callbacks.exception.ExceptionCallback]]]]"}, {"lineNumber": 550, "col_offset": 56, "nodeName": "ConsoleLogger", "type": "Type[catalyst.callbacks.logging.ConsoleLogger]"}, {"lineNumber": 552, "col_offset": 15, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 553, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 554, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 559, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 563, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 567, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 584, "col_offset": 16, "nodeName": "callbacks", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 584, "col_offset": 43, "nodeName": "callback_fn", "type": "Union[Type[catalyst.callbacks.exception.ExceptionCallback], Type[catalyst.callbacks.logging.ConsoleLogger], Type[catalyst.callbacks.logging.VerboseLogger], Type[catalyst.callbacks.checkpoint.CheckpointCallback], Type[catalyst.callbacks.timer.TimerCallback], Type[catalyst.callbacks.criterion.CriterionCallback], Type[catalyst.callbacks.early_stop.CheckRunCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback], Type[catalyst.callbacks.batch_overfit.BatchOverfitCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback], Type[catalyst.callbacks.metric.MetricManagerCallback], Type[catalyst.callbacks.logging.TensorboardLogger], Type[catalyst.callbacks.validation.ValidationManagerCallback]]"}, {"lineNumber": 588, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "_config", "type": "Any"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "_config", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "_config", "type": "Any"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "_config", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "_config", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "_config", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "_config", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "_config", "type": "Any"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "logdir", "type": "Any"}, {"lineNumber": 108, "col_offset": 40, "nodeName": "lower", "type": "Any"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "baselogdir", "type": "Any"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "logdir_postfix", "type": "str"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "key", "type": "str"}, {"lineNumber": 125, "col_offset": 48, "nodeName": "get", "type": "Callable"}, {"lineNumber": 125, "col_offset": 66, "nodeName": "key", "type": "str"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 130, "col_offset": 37, "nodeName": "stage", "type": "Any"}, {"lineNumber": 137, "col_offset": 53, "nodeName": "merge_dicts", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 144, "col_offset": 53, "nodeName": "merge_dicts", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 196, "col_offset": 34, "nodeName": "stage", "type": "str"}, {"lineNumber": 205, "col_offset": 35, "nodeName": "ConfigExperiment", "type": "Type[ConfigExperiment]"}, {"lineNumber": 206, "col_offset": 22, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "ConfigExperiment", "type": "Type[ConfigExperiment]"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "key_params", "type": "Any"}, {"lineNumber": 233, "col_offset": 41, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 234, "col_offset": 28, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 239, "col_offset": 46, "nodeName": "stage", "type": "str"}, {"lineNumber": 246, "col_offset": 39, "nodeName": "Model", "type": "Any"}, {"lineNumber": 256, "col_offset": 31, "nodeName": "stages_config", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 262, "col_offset": 34, "nodeName": "device_count", "type": "Any"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 288, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 288, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 299, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 307, "col_offset": 40, "nodeName": "stages", "type": "List[str]"}, {"lineNumber": 308, "col_offset": 33, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 319, "col_offset": 24, "nodeName": "param", "type": "Any"}, {"lineNumber": 320, "col_offset": 34, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 320, "col_offset": 50, "nodeName": "param", "type": "Any"}, {"lineNumber": 321, "col_offset": 46, "nodeName": "optimizer_state", "type": "Any"}, {"lineNumber": 322, "col_offset": 49, "nodeName": "any2device", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 323, "col_offset": 24, "nodeName": "state_value", "type": "Any"}, {"lineNumber": 323, "col_offset": 37, "nodeName": "device", "type": "Any"}, {"lineNumber": 329, "col_offset": 20, "nodeName": "optimizer_param_group", "type": "Any"}, {"lineNumber": 334, "col_offset": 39, "nodeName": "Model", "type": "Any"}, {"lineNumber": 346, "col_offset": 27, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 346, "col_offset": 46, "nodeName": "stage", "type": "str"}, {"lineNumber": 357, "col_offset": 23, "nodeName": "optimizer_key", "type": "str"}, {"lineNumber": 359, "col_offset": 26, "nodeName": "key", "type": "Any"}, {"lineNumber": 359, "col_offset": 33, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 359, "col_offset": 69, "nodeName": "params", "type": "Any"}, {"lineNumber": 367, "col_offset": 28, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 376, "col_offset": 43, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 379, "col_offset": 17, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 379, "col_offset": 36, "nodeName": "stage", "type": "str"}, {"lineNumber": 385, "col_offset": 33, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 386, "col_offset": 30, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 386, "col_offset": 43, "nodeName": "scheduler_params", "type": "Any"}, {"lineNumber": 402, "col_offset": 20, "nodeName": "transform_key", "type": "Any"}, {"lineNumber": 402, "col_offset": 35, "nodeName": "transform_params", "type": "Any"}, {"lineNumber": 402, "col_offset": 55, "nodeName": "items", "type": "Any"}, {"lineNumber": 422, "col_offset": 24, "nodeName": "transform_params", "type": "Any"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "params", "type": "Any"}, {"lineNumber": 424, "col_offset": 41, "nodeName": "transforms_composition", "type": "List[Any]"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "stages_config", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 462, "col_offset": 23, "nodeName": "transform_fn_origin", "type": "Callable[..., Any]"}, {"lineNumber": 470, "col_offset": 27, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 470, "col_offset": 46, "nodeName": "stage", "type": "str"}, {"lineNumber": 512, "col_offset": 19, "nodeName": "callback", "type": "Any"}, {"lineNumber": 513, "col_offset": 20, "nodeName": "callback", "type": "Any"}, {"lineNumber": 515, "col_offset": 20, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 515, "col_offset": 31, "nodeName": "load_on_stage_start", "type": "Any"}, {"lineNumber": 515, "col_offset": 61, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 516, "col_offset": 39, "nodeName": "load_on_stage_start", "type": "Any"}, {"lineNumber": 518, "col_offset": 20, "nodeName": "load_on_stage_start", "type": "Any"}, {"lineNumber": 522, "col_offset": 27, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 522, "col_offset": 46, "nodeName": "stage", "type": "str"}, {"lineNumber": 553, "col_offset": 16, "nodeName": "default_callbacks", "type": "List[Union[Tuple[str, None, Type[catalyst.callbacks.logging.VerboseLogger]], Tuple[str, None, Type[catalyst.callbacks.timer.TimerCallback]], Tuple[str, None, Type[catalyst.callbacks.early_stop.CheckRunCallback]], Tuple[str, None, Type[catalyst.callbacks.batch_overfit.BatchOverfitCallback]], Tuple[str, None, Type[catalyst.callbacks.metric.MetricManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.validation.ValidationManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.ConsoleLogger]], Tuple[str, None, Type[catalyst.callbacks.checkpoint.CheckpointCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.TensorboardLogger]], Tuple[str, None, Type[catalyst.callbacks.criterion.CriterionCallback]], Tuple[str, Type[catalyst.callbacks.optimizer.IOptimizerCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback]], Tuple[str, Type[catalyst.callbacks.scheduler.ISchedulerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]], Tuple[str, None, Type[catalyst.callbacks.exception.ExceptionCallback]]]]"}, {"lineNumber": 553, "col_offset": 58, "nodeName": "CheckpointCallback", "type": "Type[catalyst.callbacks.checkpoint.CheckpointCallback]"}, {"lineNumber": 554, "col_offset": 16, "nodeName": "default_callbacks", "type": "List[Union[Tuple[str, None, Type[catalyst.callbacks.logging.VerboseLogger]], Tuple[str, None, Type[catalyst.callbacks.timer.TimerCallback]], Tuple[str, None, Type[catalyst.callbacks.early_stop.CheckRunCallback]], Tuple[str, None, Type[catalyst.callbacks.batch_overfit.BatchOverfitCallback]], Tuple[str, None, Type[catalyst.callbacks.metric.MetricManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.validation.ValidationManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.ConsoleLogger]], Tuple[str, None, Type[catalyst.callbacks.checkpoint.CheckpointCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.TensorboardLogger]], Tuple[str, None, Type[catalyst.callbacks.criterion.CriterionCallback]], Tuple[str, Type[catalyst.callbacks.optimizer.IOptimizerCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback]], Tuple[str, Type[catalyst.callbacks.scheduler.ISchedulerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]], Tuple[str, None, Type[catalyst.callbacks.exception.ExceptionCallback]]]]"}, {"lineNumber": 555, "col_offset": 43, "nodeName": "TensorboardLogger", "type": "Type[catalyst.callbacks.logging.TensorboardLogger]"}, {"lineNumber": 558, "col_offset": 15, "nodeName": "stages_config", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 559, "col_offset": 16, "nodeName": "default_callbacks", "type": "List[Union[Tuple[str, None, Type[catalyst.callbacks.logging.VerboseLogger]], Tuple[str, None, Type[catalyst.callbacks.timer.TimerCallback]], Tuple[str, None, Type[catalyst.callbacks.early_stop.CheckRunCallback]], Tuple[str, None, Type[catalyst.callbacks.batch_overfit.BatchOverfitCallback]], Tuple[str, None, Type[catalyst.callbacks.metric.MetricManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.validation.ValidationManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.ConsoleLogger]], Tuple[str, None, Type[catalyst.callbacks.checkpoint.CheckpointCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.TensorboardLogger]], Tuple[str, None, Type[catalyst.callbacks.criterion.CriterionCallback]], Tuple[str, Type[catalyst.callbacks.optimizer.IOptimizerCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback]], Tuple[str, Type[catalyst.callbacks.scheduler.ISchedulerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]], Tuple[str, None, Type[catalyst.callbacks.exception.ExceptionCallback]]]]"}, {"lineNumber": 560, "col_offset": 41, "nodeName": "CriterionCallback", "type": "Type[catalyst.callbacks.criterion.CriterionCallback]"}, {"lineNumber": 562, "col_offset": 15, "nodeName": "stages_config", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 563, "col_offset": 16, "nodeName": "default_callbacks", "type": "List[Union[Tuple[str, None, Type[catalyst.callbacks.logging.VerboseLogger]], Tuple[str, None, Type[catalyst.callbacks.timer.TimerCallback]], Tuple[str, None, Type[catalyst.callbacks.early_stop.CheckRunCallback]], Tuple[str, None, Type[catalyst.callbacks.batch_overfit.BatchOverfitCallback]], Tuple[str, None, Type[catalyst.callbacks.metric.MetricManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.validation.ValidationManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.ConsoleLogger]], Tuple[str, None, Type[catalyst.callbacks.checkpoint.CheckpointCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.TensorboardLogger]], Tuple[str, None, Type[catalyst.callbacks.criterion.CriterionCallback]], Tuple[str, Type[catalyst.callbacks.optimizer.IOptimizerCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback]], Tuple[str, Type[catalyst.callbacks.scheduler.ISchedulerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]], Tuple[str, None, Type[catalyst.callbacks.exception.ExceptionCallback]]]]"}, {"lineNumber": 564, "col_offset": 35, "nodeName": "IOptimizerCallback", "type": "Type[catalyst.callbacks.optimizer.IOptimizerCallback]"}, {"lineNumber": 564, "col_offset": 55, "nodeName": "optimizer_cls", "type": "Type[catalyst.callbacks.optimizer.OptimizerCallback]"}, {"lineNumber": 566, "col_offset": 15, "nodeName": "stages_config", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 567, "col_offset": 16, "nodeName": "default_callbacks", "type": "List[Union[Tuple[str, None, Type[catalyst.callbacks.logging.VerboseLogger]], Tuple[str, None, Type[catalyst.callbacks.timer.TimerCallback]], Tuple[str, None, Type[catalyst.callbacks.early_stop.CheckRunCallback]], Tuple[str, None, Type[catalyst.callbacks.batch_overfit.BatchOverfitCallback]], Tuple[str, None, Type[catalyst.callbacks.metric.MetricManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.validation.ValidationManagerCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.ConsoleLogger]], Tuple[str, None, Type[catalyst.callbacks.checkpoint.CheckpointCallback]], Tuple[str, None, Type[catalyst.callbacks.logging.TensorboardLogger]], Tuple[str, None, Type[catalyst.callbacks.criterion.CriterionCallback]], Tuple[str, Type[catalyst.callbacks.optimizer.IOptimizerCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback]], Tuple[str, Type[catalyst.callbacks.scheduler.ISchedulerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]], Tuple[str, None, Type[catalyst.callbacks.exception.ExceptionCallback]]]]"}, {"lineNumber": 568, "col_offset": 35, "nodeName": "ISchedulerCallback", "type": "Type[catalyst.callbacks.scheduler.ISchedulerCallback]"}, {"lineNumber": 568, "col_offset": 55, "nodeName": "SchedulerCallback", "type": "Type[catalyst.callbacks.scheduler.SchedulerCallback]"}, {"lineNumber": 581, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 584, "col_offset": 26, "nodeName": "callback_name", "type": "str"}, {"lineNumber": 588, "col_offset": 27, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "_config", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "_config", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 108, "col_offset": 40, "nodeName": "baselogdir", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "get", "type": "Callable"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "get", "type": "Callable"}, {"lineNumber": 122, "col_offset": 47, "nodeName": "key", "type": "str"}, {"lineNumber": 125, "col_offset": 48, "nodeName": "stages_config", "type": "Dict[Any, Any]"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "stages_config", "type": "Dict[Any, Any]"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 233, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 246, "col_offset": 46, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 256, "col_offset": 31, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 256, "col_offset": 50, "nodeName": "stage", "type": "str"}, {"lineNumber": 262, "col_offset": 34, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 283, "col_offset": 22, "nodeName": "model_key", "type": "Any"}, {"lineNumber": 291, "col_offset": 34, "nodeName": "process_model_params", "type": "Callable[..., List[Any]]"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "layerwise_params", "type": "Union[collections.OrderedDict[nothing, nothing], Any]"}, {"lineNumber": 294, "col_offset": 20, "nodeName": "no_bias_weight_decay", "type": "Union[Any, bool]"}, {"lineNumber": 295, "col_offset": 20, "nodeName": "lr_scaling", "type": "Any"}, {"lineNumber": 297, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 297, "col_offset": 36, "nodeName": "model_params_el", "type": "List[Any]"}, {"lineNumber": 307, "col_offset": 40, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 329, "col_offset": 42, "nodeName": "key", "type": "str"}, {"lineNumber": 334, "col_offset": 46, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 335, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 335, "col_offset": 36, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 367, "col_offset": 39, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 368, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 368, "col_offset": 36, "nodeName": "Scheduler", "type": "Any"}, {"lineNumber": 376, "col_offset": 54, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 377, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 377, "col_offset": 36, "nodeName": "Scheduler", "type": "Any"}, {"lineNumber": 402, "col_offset": 55, "nodeName": "params", "type": "Any"}, {"lineNumber": 413, "col_offset": 24, "nodeName": "key", "type": "Any"}, {"lineNumber": 413, "col_offset": 29, "nodeName": "transform", "type": "Any"}, {"lineNumber": 413, "col_offset": 42, "nodeName": "items", "type": "Callable"}, {"lineNumber": 422, "col_offset": 44, "nodeName": "params", "type": "Any"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 445, "col_offset": 31, "nodeName": "stage", "type": "str"}, {"lineNumber": 462, "col_offset": 45, "nodeName": "dict_", "type": "Any"}, {"lineNumber": 515, "col_offset": 31, "nodeName": "callback", "type": "Any"}, {"lineNumber": 516, "col_offset": 39, "nodeName": "callback", "type": "Any"}, {"lineNumber": 518, "col_offset": 20, "nodeName": "callback", "type": "Any"}, {"lineNumber": 558, "col_offset": 15, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 558, "col_offset": 34, "nodeName": "stage", "type": "str"}, {"lineNumber": 562, "col_offset": 15, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 562, "col_offset": 34, "nodeName": "stage", "type": "str"}, {"lineNumber": 566, "col_offset": 15, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 566, "col_offset": 34, "nodeName": "stage", "type": "str"}, {"lineNumber": 581, "col_offset": 25, "nodeName": "values", "type": "Callable"}, {"lineNumber": 588, "col_offset": 27, "nodeName": "stages_config", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "stages_config", "type": "Dict[Any, Any]"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "stages_config", "type": "Dict[Any, Any]"}, {"lineNumber": 138, "col_offset": 33, "nodeName": "get", "type": "Callable"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "get", "type": "Callable"}, {"lineNumber": 139, "col_offset": 53, "nodeName": "key2", "type": "str"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "get", "type": "Any"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "get", "type": "Any"}, {"lineNumber": 141, "col_offset": 58, "nodeName": "key2", "type": "str"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "get", "type": "Callable"}, {"lineNumber": 145, "col_offset": 53, "nodeName": "key2", "type": "str"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "get", "type": "Any"}, {"lineNumber": 146, "col_offset": 58, "nodeName": "key2", "type": "str"}, {"lineNumber": 262, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 297, "col_offset": 16, "nodeName": "model_params", "type": "List[Any]"}, {"lineNumber": 413, "col_offset": 42, "nodeName": "transforms_composition", "type": "Dict[Any, Any]"}, {"lineNumber": 581, "col_offset": 25, "nodeName": "callbacks", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 588, "col_offset": 27, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 138, "col_offset": 33, "nodeName": "stages_defaults", "type": "Dict[str, Any]"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "stages_defaults", "type": "Dict[str, Any]"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "stages_defaults", "type": "Dict[str, Any]"}, {"lineNumber": 246, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 246, "col_offset": 56, "nodeName": "Model", "type": "Any"}, {"lineNumber": 292, "col_offset": 26, "nodeName": "model_key_el", "type": "Any"}, {"lineNumber": 334, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 334, "col_offset": 56, "nodeName": "Model", "type": "Any"}, {"lineNumber": 367, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 367, "col_offset": 49, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 376, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 376, "col_offset": 64, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "stages_config", "type": "Dict[Any, Any]"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "stages_config", "type": "Dict[Any, Any]"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "stages_config", "type": "Dict[Any, Any]"}, {"lineNumber": 140, "col_offset": 47, "nodeName": "stage", "type": "Any"}, {"lineNumber": 141, "col_offset": 47, "nodeName": "stage", "type": "Any"}, {"lineNumber": 146, "col_offset": 47, "nodeName": "stage", "type": "Any"}]