[{"lineNumber": 66, "col_offset": 0, "nodeName": "_test_callbacks", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "test_defaults", "type": "Callable[[], Any]"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "test_defaults_criterion_optimizer_scheduler", "type": "Callable[[], Any]"}, {"lineNumber": 140, "col_offset": 0, "nodeName": "test_when_callback_defined", "type": "Callable[[], Any]"}, {"lineNumber": 163, "col_offset": 0, "nodeName": "test_not_implemented_datasets", "type": "Callable[[], Any]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "Module", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "Module", "type": "Any"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "Module", "type": "Any"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "add", "type": "Callable[..., Callable[..., Any]]"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "SomeModel", "type": "Type[SomeModel]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "add", "type": "Callable[..., Callable[..., Any]]"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "SomeOptimizer", "type": "Type[SomeOptimizer]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "add", "type": "Callable[..., Callable[..., Any]]"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "SomeScheduler", "type": "Type[SomeScheduler]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "exp_callbacks", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "cbs", "type": "Iterator[nothing]"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "cbs", "type": "Iterator[nothing]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "callbacks", "type": "Dict[str, Union[Type[catalyst.callbacks.exception.ExceptionCallback], Type[catalyst.callbacks.criterion.CriterionCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]]]"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "CriterionCallback", "type": "Type[catalyst.callbacks.criterion.CriterionCallback]"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "OptimizerCallback", "type": "Type[catalyst.callbacks.optimizer.OptimizerCallback]"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "SchedulerCallback", "type": "Type[catalyst.callbacks.scheduler.SchedulerCallback]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "config", "type": "Union[Dict[str, Dict[str, Union[str, Dict[str, str], Dict[str, Dict[str, str]]]]], Dict[str, Dict[str, Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str], Dict[str, Dict[str, str]]]]]]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "callbacks", "type": "Dict[str, Union[Type[catalyst.callbacks.exception.ExceptionCallback], Type[catalyst.callbacks.criterion.CriterionCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]]]"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "CriterionCallback", "type": "Type[catalyst.callbacks.criterion.CriterionCallback]"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "OptimizerCallback", "type": "Type[catalyst.callbacks.optimizer.OptimizerCallback]"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "SchedulerCallback", "type": "Type[catalyst.callbacks.scheduler.SchedulerCallback]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "config", "type": "Union[Dict[str, Dict[str, Union[str, Dict[str, str], Dict[str, Dict[str, str]]]]], Dict[str, Dict[str, Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str], Dict[str, Dict[str, str]]]]]]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "MODEL", "type": "catalyst.registry.registry.Registry"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "OPTIMIZER", "type": "catalyst.registry.registry.Registry"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "SCHEDULER", "type": "catalyst.registry.registry.Registry"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "get_callbacks", "type": "Any"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "stage", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 10, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "callback", "type": "nothing"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "klass", "type": "nothing"}, {"lineNumber": 91, "col_offset": 10, "nodeName": "ConfigExperiment", "type": "Type[catalyst.experiments.config.ConfigExperiment]"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "initial_seed", "type": "int"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "logdir", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "stages", "type": "List[str]"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "distributed_params", "type": "Dict[Any, Any]"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "SomeModel", "type": "Type[SomeModel]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "_test_callbacks", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "DEFAULT_CALLBACKS", "type": "collections.OrderedDict[str, Type[catalyst.callbacks.exception.ExceptionCallback]]"}, {"lineNumber": 105, "col_offset": 39, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "callbacks", "type": "Dict[str, Union[Type[catalyst.callbacks.exception.ExceptionCallback], Type[catalyst.callbacks.criterion.CriterionCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]]]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "callbacks", "type": "Dict[str, Union[Type[catalyst.callbacks.exception.ExceptionCallback], Type[catalyst.callbacks.criterion.CriterionCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]]]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "callbacks", "type": "Dict[str, Union[Type[catalyst.callbacks.exception.ExceptionCallback], Type[catalyst.callbacks.criterion.CriterionCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]]]"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 123, "col_offset": 10, "nodeName": "ConfigExperiment", "type": "Type[catalyst.experiments.config.ConfigExperiment]"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "initial_seed", "type": "int"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "logdir", "type": "Any"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "stages", "type": "List[str]"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "distributed_params", "type": "Dict[Any, Any]"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 132, "col_offset": 46, "nodeName": "SomeModel", "type": "Type[SomeModel]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "_test_callbacks", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "callbacks", "type": "Dict[str, Union[Type[catalyst.callbacks.exception.ExceptionCallback], Type[catalyst.callbacks.criterion.CriterionCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]]]"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "callbacks", "type": "Dict[str, Union[Type[catalyst.callbacks.exception.ExceptionCallback], Type[catalyst.callbacks.criterion.CriterionCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]]]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "callbacks", "type": "Dict[str, Union[Type[catalyst.callbacks.exception.ExceptionCallback], Type[catalyst.callbacks.criterion.CriterionCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]]]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "callbacks", "type": "Dict[str, Union[Type[catalyst.callbacks.exception.ExceptionCallback], Type[catalyst.callbacks.criterion.CriterionCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]]]"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 159, "col_offset": 10, "nodeName": "ConfigExperiment", "type": "Type[catalyst.experiments.config.ConfigExperiment]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "_test_callbacks", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "callbacks", "type": "Dict[str, Union[Type[catalyst.callbacks.exception.ExceptionCallback], Type[catalyst.callbacks.criterion.CriterionCallback], Type[catalyst.callbacks.optimizer.OptimizerCallback], Type[catalyst.callbacks.scheduler.SchedulerCallback]]]"}, {"lineNumber": 160, "col_offset": 31, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 168, "col_offset": 10, "nodeName": "ConfigExperiment", "type": "Type[catalyst.experiments.config.ConfigExperiment]"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "MetricManagerCallback", "type": "Type[catalyst.callbacks.metric.MetricManagerCallback]"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "ValidationManagerCallback", "type": "Type[catalyst.callbacks.validation.ValidationManagerCallback]"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "CheckpointCallback", "type": "Type[catalyst.callbacks.checkpoint.CheckpointCallback]"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "ConsoleLogger", "type": "Type[catalyst.callbacks.logging.ConsoleLogger]"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "TensorboardLogger", "type": "Type[catalyst.callbacks.logging.TensorboardLogger]"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "ExceptionCallback", "type": "Type[catalyst.callbacks.exception.ExceptionCallback]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "registry", "type": "module"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "registry", "type": "module"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "registry", "type": "module"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "exp", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 74, "col_offset": 10, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 75, "col_offset": 10, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "values", "type": "Callable"}, {"lineNumber": 78, "col_offset": 38, "nodeName": "values", "type": "Callable"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "callback", "type": "nothing"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "klass", "type": "nothing"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "get_stage_params", "type": "Callable[[str], Mapping[str, Any]]"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "get_model", "type": "Callable[[str], Any]"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "get_criterion", "type": "Callable[[str], Any]"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "get_optimizer", "type": "Callable[[str, Any], Any]"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "get_scheduler", "type": "Callable[[str, Any], Any]"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "DEFAULT_CALLBACKS", "type": "collections.OrderedDict[str, Type[catalyst.callbacks.exception.ExceptionCallback]]"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "DEFAULT_MINIMAL_CONFIG", "type": "Dict[str, Union[Dict[str, Union[str, Dict[str, str], Dict[str, Dict[str, str]]]], Dict[str, Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str], Dict[str, Dict[str, str]]]]]]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "config", "type": "Union[Dict[str, Dict[str, Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str], Dict[str, Dict[str, str]]]]], Dict[str, Dict[str, Union[str, Dict[str, str], Dict[str, Dict[str, str]]]]]]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "config", "type": "Union[Dict[str, Dict[str, Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str], Dict[str, Dict[str, str]]]]], Dict[str, Dict[str, Union[str, Dict[str, str], Dict[str, Dict[str, str]]]]]]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "config", "type": "Union[Dict[str, Dict[str, Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str], Dict[str, Dict[str, str]]]]], Dict[str, Dict[str, Union[str, Dict[str, str], Dict[str, Dict[str, str]]]]]]"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "config", "type": "Union[Dict[str, Dict[str, Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str], Dict[str, Dict[str, str]]]]], Dict[str, Dict[str, Union[str, Dict[str, str], Dict[str, Dict[str, str]]]]]]"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "get_stage_params", "type": "Callable[[str], Mapping[str, Any]]"}, {"lineNumber": 132, "col_offset": 22, "nodeName": "get_model", "type": "Callable[[str], Any]"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "get_criterion", "type": "Callable[[str], Any]"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "get_optimizer", "type": "Callable[[str, Any], Any]"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "get_scheduler", "type": "Callable[[str, Any], Any]"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "DEFAULT_CALLBACKS", "type": "collections.OrderedDict[str, Type[catalyst.callbacks.exception.ExceptionCallback]]"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "DEFAULT_MINIMAL_CONFIG", "type": "Dict[str, Union[Dict[str, Union[str, Dict[str, str], Dict[str, Dict[str, str]]]], Dict[str, Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str], Dict[str, Dict[str, str]]]]]]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "config", "type": "Union[Dict[str, Dict[str, Union[str, Dict[str, str], Dict[str, Dict[str, str]]]]], Dict[str, Dict[str, Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str], Dict[str, Dict[str, str]]]]]]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "config", "type": "Union[Dict[str, Dict[str, Union[str, Dict[str, str], Dict[str, Dict[str, str]]]]], Dict[str, Dict[str, Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str], Dict[str, Dict[str, str]]]]]]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "config", "type": "Union[Dict[str, Dict[str, Union[str, Dict[str, str], Dict[str, Dict[str, str]]]]], Dict[str, Dict[str, Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str], Dict[str, Dict[str, str]]]]]]"}, {"lineNumber": 159, "col_offset": 34, "nodeName": "config", "type": "Union[Dict[str, Dict[str, Union[str, Dict[str, str], Dict[str, Dict[str, str]]]]], Dict[str, Dict[str, Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str], Dict[str, Dict[str, str]]]]]]"}, {"lineNumber": 170, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "get_loaders", "type": "Callable[..., collections.OrderedDict[str, Any]]"}, {"lineNumber": 172, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "get_datasets", "type": "Callable[..., collections.OrderedDict[str, Any]]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 74, "col_offset": 10, "nodeName": "test_callbacks", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 75, "col_offset": 10, "nodeName": "exp_callbacks", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "exp_callbacks", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "test_callbacks", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "exp_callbacks", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 78, "col_offset": 38, "nodeName": "test_callbacks", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "SomeModel", "type": "Type[SomeModel]"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 132, "col_offset": 22, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "SomeModel", "type": "Type[SomeModel]"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 170, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 172, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "exp", "type": "catalyst.experiments.config.ConfigExperiment"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "exp_callbacks", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "test_callbacks", "type": "Any"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "DEFAULT_MINIMAL_CONFIG", "type": "Dict[str, Union[Dict[str, Union[str, Dict[str, str], Dict[str, Dict[str, str]]]], Dict[str, Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str], Dict[str, Dict[str, str]]]]]]"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "DEFAULT_MINIMAL_CONFIG", "type": "Dict[str, Union[Dict[str, Union[str, Dict[str, str], Dict[str, Dict[str, str]]]], Dict[str, Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str], Dict[str, Dict[str, str]]]]]]"}, {"lineNumber": 69, "col_offset": 52, "nodeName": "t", "type": "Any"}, {"lineNumber": 72, "col_offset": 53, "nodeName": "t", "type": "Any"}]