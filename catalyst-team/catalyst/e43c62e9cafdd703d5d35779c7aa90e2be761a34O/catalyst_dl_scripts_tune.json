[{"lineNumber": 23, "col_offset": 0, "nodeName": "build_args", "type": "Callable[[argparse.ArgumentParser], Any]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "parse_args", "type": "Callable[[], Any]"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "_process_trial_config", "type": "Callable[[Any, Dict[Any, Any]], Tuple[Any, Dict[Any, Any]]]"}, {"lineNumber": 132, "col_offset": 0, "nodeName": "main_worker", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 206, "col_offset": 0, "nodeName": "main", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 121, "col_offset": 50, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 138, "col_offset": 58, "nodeName": "apex", "type": "Any"}, {"lineNumber": 139, "col_offset": 57, "nodeName": "amp", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "expdir", "type": "pathlib.Path"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "study_params", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "sampler_params", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "optuna_sampler_type", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "pruner_params", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "optuna_pruner_type", "type": "Any"}, {"lineNumber": 214, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "boolean_flag", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "boolean_flag", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "boolean_flag", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "boolean_flag", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "boolean_flag", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "boolean_flag", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "boolean_flag", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "boolean_flag", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "build_args", "type": "Callable[[argparse.ArgumentParser], Any]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 117, "col_offset": 10, "nodeName": "unknown_args", "type": "List[str]"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "parse_known_args", "type": "Callable[..., Tuple[argparse.Namespace, List[str]]]"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "unknown_args", "type": "List[str]"}, {"lineNumber": 121, "col_offset": 41, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "maybe_recursive_call", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 128, "col_offset": 42, "nodeName": "_eval_trial_suggestions", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "trial", "type": "Any"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "config", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 134, "col_offset": 10, "nodeName": "config", "type": "Any"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "parse_args_uargs", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 134, "col_offset": 42, "nodeName": "unknown_args", "type": "List[str]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "set_global_seed", "type": "Callable[[int], None]"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "seed", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "prepare_cudnn", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "deterministic", "type": "Any"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "benchmark", "type": "Any"}, {"lineNumber": 138, "col_offset": 58, "nodeName": "args", "type": "Any"}, {"lineNumber": 139, "col_offset": 57, "nodeName": "args", "type": "Any"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "expdir", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "_trial", "type": "Any"}, {"lineNumber": 149, "col_offset": 28, "nodeName": "trial", "type": "Any"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "pop", "type": "Any"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "pop", "type": "Any"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "pop", "type": "Any"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "pop", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "pop", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "create_study", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "objective", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "main_worker", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 208, "col_offset": 22, "nodeName": "unknown_args", "type": "List[str]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 215, "col_offset": 10, "nodeName": "unknown_args", "type": "List[str]"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "parse_args", "type": "Callable[[], Any]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "main", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 216, "col_offset": 9, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "unknown_args", "type": "List[str]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 37, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 46, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 49, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 102, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 104, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 106, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 121, "col_offset": 56, "nodeName": "Trial", "type": "Any"}, {"lineNumber": 121, "col_offset": 70, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "args", "type": "Any"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "args", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "setdefault", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "setdefault", "type": "Any"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "trial", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "trial", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "trial_config", "type": "Dict[Any, Any]"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "_process_trial_config", "type": "Callable[[Any, Dict[Any, Any]], Tuple[Any, Dict[Any, Any]]]"}, {"lineNumber": 144, "col_offset": 52, "nodeName": "trial", "type": "Any"}, {"lineNumber": 145, "col_offset": 43, "nodeName": "prepare_config_api_components", "type": "Callable[[pathlib.Path, Dict[Any, Any]], Tuple[Any, Any, Dict[Any, Any]]]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "experiment", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "run_experiment", "type": "Any"}, {"lineNumber": 155, "col_offset": 30, "nodeName": "experiment", "type": "Any"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "best_valid_metrics", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "config", "type": "Any"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "study_params", "type": "Any"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "sampler_params", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "optuna_sampler_type", "type": "Any"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "study_params", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "pruner_params", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "optuna_pruner_type", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "optuna", "type": "Any"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "direction", "type": "str"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "optuna_sampler", "type": "Any"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "optuna_pruner", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "study", "type": "Any"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "n_trials", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "timeout", "type": "Any"}, {"lineNumber": 201, "col_offset": 23, "nodeName": "gc_after_trial", "type": "Any"}, {"lineNumber": 202, "col_offset": 26, "nodeName": "show_progress_bar", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 124, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 121, "col_offset": 56, "nodeName": "optuna", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "optuna", "type": "Any"}, {"lineNumber": 144, "col_offset": 59, "nodeName": "copy", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "expdir", "type": "pathlib.Path"}, {"lineNumber": 146, "col_offset": 34, "nodeName": "trial_config", "type": "Dict[Any, Any]"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "logdir", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "dump_environment", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "trial_config", "type": "Dict[Any, Any]"}, {"lineNumber": 152, "col_offset": 43, "nodeName": "logdir", "type": "Any"}, {"lineNumber": 152, "col_offset": 62, "nodeName": "configs", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "dump_code", "type": "Callable[[Union[str, pathlib.Path], Union[str, pathlib.Path]], None]"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "expdir", "type": "Any"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "logdir", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "runner", "type": "Any"}, {"lineNumber": 157, "col_offset": 41, "nodeName": "main_metric", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "storage", "type": "Any"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "study_name", "type": "Any"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "args", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "args", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 201, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 202, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 144, "col_offset": 59, "nodeName": "config", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "experiment", "type": "Any"}, {"lineNumber": 151, "col_offset": 45, "nodeName": "get_rank", "type": "Callable[[], int]"}, {"lineNumber": 152, "col_offset": 43, "nodeName": "experiment", "type": "Any"}, {"lineNumber": 152, "col_offset": 62, "nodeName": "args", "type": "Any"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "experiment", "type": "Any"}, {"lineNumber": 157, "col_offset": 41, "nodeName": "runner", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "args", "type": "Any"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "pop", "type": "Any"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 192, "col_offset": 38, "nodeName": "pop", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "study_params", "type": "Any"}, {"lineNumber": 192, "col_offset": 38, "nodeName": "study_params", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "config", "type": "Any"}]