[{"lineNumber": 15, "col_offset": 0, "nodeName": "_pop_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "test_config1", "type": "Callable[[], Any]"}, {"lineNumber": 268, "col_offset": 0, "nodeName": "test_config2", "type": "Callable[[], Any]"}, {"lineNumber": 434, "col_offset": 0, "nodeName": "test_config3", "type": "Callable[[], Any]"}, {"lineNumber": 633, "col_offset": 0, "nodeName": "test_config4", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "values", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "left_keys", "type": "dict_keys[Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "right_keys", "type": "dict_keys[Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "config1_copy", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "encoder_params", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "input_", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "config2_copy", "type": "Any"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "input_", "type": "Any"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 428, "col_offset": 4, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "config_path", "type": "pathlib.Path"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "config3", "type": "Any"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "config3_copy", "type": "Any"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "encoder_params", "type": "Any"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 568, "col_offset": 4, "nodeName": "input_", "type": "Any"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "config_path", "type": "pathlib.Path"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "config4", "type": "Any"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 643, "col_offset": 4, "nodeName": "config4_copy", "type": "Any"}, {"lineNumber": 645, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 740, "col_offset": 4, "nodeName": "input_", "type": "Any"}, {"lineNumber": 742, "col_offset": 4, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 767, "col_offset": 4, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "values", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "left_keys", "type": "dict_keys[Any]"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "right_keys", "type": "dict_keys[Any]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "get_from_params", "type": "Callable[..., catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "config1", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, int]]], Dict[str, Union[Dict[str, Union[Dict[str, Union[Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[str, Dict[str, Union[bool, str]], List[int]]]]]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "_pop_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "config1_copy", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "config1_copy", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "config1_copy", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "heads", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "embedders", "type": "Any"}, {"lineNumber": 203, "col_offset": 13, "nodeName": "rand", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 216, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 218, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 229, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 242, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "input_", "type": "Any"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 262, "col_offset": 19, "nodeName": "forward_tuple", "type": "Callable[[Any], Tuple[Any, ...]]"}, {"lineNumber": 262, "col_offset": 39, "nodeName": "input_", "type": "Any"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "get_from_params", "type": "Callable[..., catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 304, "col_offset": 33, "nodeName": "config2", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Union[Dict[str, Union[Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], int]]"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "_pop_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 305, "col_offset": 23, "nodeName": "config2_copy", "type": "Any"}, {"lineNumber": 306, "col_offset": 19, "nodeName": "config2_copy", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 313, "col_offset": 10, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 397, "col_offset": 28, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 398, "col_offset": 28, "nodeName": "heads", "type": "Any"}, {"lineNumber": 399, "col_offset": 11, "nodeName": "embedders", "type": "Any"}, {"lineNumber": 401, "col_offset": 13, "nodeName": "rand", "type": "Any"}, {"lineNumber": 403, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 403, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 415, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 428, "col_offset": 19, "nodeName": "forward_tuple", "type": "Callable[[Any], Tuple[Any, ...]]"}, {"lineNumber": 428, "col_offset": 39, "nodeName": "input_", "type": "Any"}, {"lineNumber": 436, "col_offset": 18, "nodeName": "parent", "type": "pathlib.Path"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "get_from_params", "type": "Callable[..., catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 441, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 441, "col_offset": 33, "nodeName": "config3", "type": "Any"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "_pop_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 442, "col_offset": 23, "nodeName": "config3_copy", "type": "Any"}, {"lineNumber": 443, "col_offset": 21, "nodeName": "config3_copy", "type": "Any"}, {"lineNumber": 444, "col_offset": 19, "nodeName": "config3_copy", "type": "Any"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 451, "col_offset": 10, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 564, "col_offset": 28, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 565, "col_offset": 28, "nodeName": "heads", "type": "Any"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 566, "col_offset": 28, "nodeName": "embedders", "type": "Any"}, {"lineNumber": 568, "col_offset": 13, "nodeName": "rand", "type": "Any"}, {"lineNumber": 570, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 570, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 581, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 581, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 583, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 583, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 594, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 594, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 596, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 596, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 607, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 609, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "input_", "type": "Any"}, {"lineNumber": 625, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 625, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 627, "col_offset": 19, "nodeName": "forward_tuple", "type": "Callable[[Any], Tuple[Any, ...]]"}, {"lineNumber": 627, "col_offset": 39, "nodeName": "input_", "type": "Any"}, {"lineNumber": 635, "col_offset": 18, "nodeName": "parent", "type": "pathlib.Path"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 640, "col_offset": 4, "nodeName": "config4", "type": "Any"}, {"lineNumber": 641, "col_offset": 12, "nodeName": "get_from_params", "type": "Callable[..., catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 643, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 643, "col_offset": 33, "nodeName": "config4", "type": "Any"}, {"lineNumber": 644, "col_offset": 4, "nodeName": "_pop_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 644, "col_offset": 23, "nodeName": "config4_copy", "type": "Any"}, {"lineNumber": 645, "col_offset": 19, "nodeName": "config4_copy", "type": "Any"}, {"lineNumber": 646, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 647, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 648, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 649, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "insert", "type": "Any"}, {"lineNumber": 652, "col_offset": 10, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 736, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 736, "col_offset": 28, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 737, "col_offset": 4, "nodeName": "_check_named_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 737, "col_offset": 28, "nodeName": "heads", "type": "Any"}, {"lineNumber": 738, "col_offset": 11, "nodeName": "embedders", "type": "Any"}, {"lineNumber": 740, "col_offset": 13, "nodeName": "rand", "type": "Any"}, {"lineNumber": 742, "col_offset": 16, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 742, "col_offset": 22, "nodeName": "input_", "type": "Any"}, {"lineNumber": 754, "col_offset": 4, "nodeName": "_check_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 754, "col_offset": 35, "nodeName": "kv_keys", "type": "List[str]"}, {"lineNumber": 757, "col_offset": 8, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 759, "col_offset": 8, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 767, "col_offset": 19, "nodeName": "forward_tuple", "type": "Callable[[Any], Tuple[Any, ...]]"}, {"lineNumber": 767, "col_offset": 39, "nodeName": "input_", "type": "Any"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "dct", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 17, "col_offset": 22, "nodeName": "values", "type": "Any"}, {"lineNumber": 17, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "left", "type": "Any"}, {"lineNumber": 23, "col_offset": 27, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "right", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "Hydra", "type": "Type[catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "config1", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, int]]], Dict[str, Union[Dict[str, Union[Dict[str, Union[Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[str, Dict[str, Union[bool, str]], List[int]]]]]"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "copy", "type": "module"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 199, "col_offset": 43, "nodeName": "net", "type": "Any"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 200, "col_offset": 41, "nodeName": "net", "type": "Any"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 201, "col_offset": 45, "nodeName": "net", "type": "Any"}, {"lineNumber": 203, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 262, "col_offset": 19, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 263, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "Hydra", "type": "Type[catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 302, "col_offset": 36, "nodeName": "config2", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Union[Dict[str, Union[Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[bool, Dict[str, Union[bool, str]], List[int]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], Dict[str, Union[Dict[str, Union[bool, str]], List[int]]]]], int]]"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "copy", "type": "module"}, {"lineNumber": 313, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 397, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 397, "col_offset": 43, "nodeName": "net", "type": "Any"}, {"lineNumber": 398, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 398, "col_offset": 41, "nodeName": "net", "type": "Any"}, {"lineNumber": 399, "col_offset": 11, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 401, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 415, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 417, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 417, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 418, "col_offset": 20, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 418, "col_offset": 26, "nodeName": "input_", "type": "Any"}, {"lineNumber": 419, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 419, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 420, "col_offset": 20, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 420, "col_offset": 26, "nodeName": "input_", "type": "Any"}, {"lineNumber": 421, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 421, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 422, "col_offset": 20, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 428, "col_offset": 19, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 429, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 429, "col_offset": 15, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 437, "col_offset": 14, "nodeName": "load_config", "type": "Callable[..., Union[Dict[Any, Any], List[Any]]]"}, {"lineNumber": 437, "col_offset": 32, "nodeName": "config_path", "type": "pathlib.Path"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "Hydra", "type": "Type[catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 439, "col_offset": 36, "nodeName": "config3", "type": "Any"}, {"lineNumber": 441, "col_offset": 19, "nodeName": "copy", "type": "module"}, {"lineNumber": 451, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 564, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 564, "col_offset": 43, "nodeName": "net", "type": "Any"}, {"lineNumber": 565, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 565, "col_offset": 41, "nodeName": "net", "type": "Any"}, {"lineNumber": 566, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 566, "col_offset": 45, "nodeName": "net", "type": "Any"}, {"lineNumber": 568, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 571, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 581, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 594, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 607, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 625, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 627, "col_offset": 19, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 628, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 628, "col_offset": 15, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 629, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 630, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 636, "col_offset": 14, "nodeName": "load_config", "type": "Callable[..., Union[Dict[Any, Any], List[Any]]]"}, {"lineNumber": 636, "col_offset": 32, "nodeName": "config_path", "type": "pathlib.Path"}, {"lineNumber": 638, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 638, "col_offset": 23, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 639, "col_offset": 16, "nodeName": "get_from_params", "type": "Callable[..., catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 641, "col_offset": 12, "nodeName": "Hydra", "type": "Type[catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 641, "col_offset": 36, "nodeName": "config4", "type": "Any"}, {"lineNumber": 643, "col_offset": 19, "nodeName": "copy", "type": "module"}, {"lineNumber": 652, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 736, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 736, "col_offset": 43, "nodeName": "net", "type": "Any"}, {"lineNumber": 737, "col_offset": 28, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 737, "col_offset": 41, "nodeName": "net", "type": "Any"}, {"lineNumber": 738, "col_offset": 11, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 740, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 743, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 744, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 754, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 756, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 756, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 757, "col_offset": 20, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 757, "col_offset": 26, "nodeName": "input_", "type": "Any"}, {"lineNumber": 758, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 758, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 759, "col_offset": 20, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 759, "col_offset": 26, "nodeName": "input_", "type": "Any"}, {"lineNumber": 760, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 760, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 761, "col_offset": 20, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 762, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 767, "col_offset": 19, "nodeName": "hydra", "type": "catalyst.contrib.models.hydra.Hydra"}, {"lineNumber": 768, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 768, "col_offset": 15, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 769, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 770, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "pop", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "_pop_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 31, "nodeName": "values", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 218, "col_offset": 38, "nodeName": "long", "type": "Any"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 231, "col_offset": 38, "nodeName": "long", "type": "Any"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "long", "type": "Any"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "long", "type": "Any"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 315, "col_offset": 23, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 415, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 417, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 419, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 421, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 436, "col_offset": 18, "nodeName": "absolute", "type": "Callable"}, {"lineNumber": 437, "col_offset": 14, "nodeName": "utils", "type": "module"}, {"lineNumber": 453, "col_offset": 23, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 454, "col_offset": 25, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 483, "col_offset": 21, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 581, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 583, "col_offset": 38, "nodeName": "long", "type": "Any"}, {"lineNumber": 594, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 596, "col_offset": 38, "nodeName": "long", "type": "Any"}, {"lineNumber": 607, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 611, "col_offset": 16, "nodeName": "long", "type": "Any"}, {"lineNumber": 612, "col_offset": 16, "nodeName": "long", "type": "Any"}, {"lineNumber": 625, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 635, "col_offset": 18, "nodeName": "absolute", "type": "Callable"}, {"lineNumber": 636, "col_offset": 14, "nodeName": "utils", "type": "module"}, {"lineNumber": 638, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 639, "col_offset": 16, "nodeName": "Hydra", "type": "Type[catalyst.contrib.models.hydra.Hydra]"}, {"lineNumber": 639, "col_offset": 40, "nodeName": "config4", "type": "Any"}, {"lineNumber": 654, "col_offset": 23, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 655, "col_offset": 21, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 754, "col_offset": 17, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 756, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 758, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 760, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "values", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "encoder_params", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 315, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 418, "col_offset": 42, "nodeName": "long", "type": "Any"}, {"lineNumber": 420, "col_offset": 42, "nodeName": "long", "type": "Any"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "long", "type": "Any"}, {"lineNumber": 425, "col_offset": 20, "nodeName": "long", "type": "Any"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 453, "col_offset": 39, "nodeName": "encoder_params", "type": "Any"}, {"lineNumber": 454, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 483, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 571, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 629, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 630, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 646, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 654, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 655, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 743, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 744, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 757, "col_offset": 42, "nodeName": "long", "type": "Any"}, {"lineNumber": 759, "col_offset": 42, "nodeName": "long", "type": "Any"}, {"lineNumber": 763, "col_offset": 20, "nodeName": "long", "type": "Any"}, {"lineNumber": 764, "col_offset": 20, "nodeName": "long", "type": "Any"}, {"lineNumber": 769, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 770, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "left", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "right", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 218, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 231, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 318, "col_offset": 29, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 323, "col_offset": 30, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 436, "col_offset": 18, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 436, "col_offset": 23, "nodeName": "__file__", "type": "str"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 456, "col_offset": 31, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 469, "col_offset": 31, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 485, "col_offset": 29, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 490, "col_offset": 30, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 583, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 596, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 611, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 612, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 635, "col_offset": 18, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 635, "col_offset": 23, "nodeName": "__file__", "type": "str"}, {"lineNumber": 647, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 648, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 657, "col_offset": 29, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 662, "col_offset": 30, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 218, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 231, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 318, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 319, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 323, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 418, "col_offset": 42, "nodeName": "ones", "type": "Any"}, {"lineNumber": 420, "col_offset": 42, "nodeName": "ones", "type": "Any"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "ones", "type": "Any"}, {"lineNumber": 425, "col_offset": 20, "nodeName": "ones", "type": "Any"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 456, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 457, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 469, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 470, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 485, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 486, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 490, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 571, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 583, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 596, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 611, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 612, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 649, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 657, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 658, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 662, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 743, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 744, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 757, "col_offset": 42, "nodeName": "ones", "type": "Any"}, {"lineNumber": 759, "col_offset": 42, "nodeName": "ones", "type": "Any"}, {"lineNumber": 763, "col_offset": 20, "nodeName": "ones", "type": "Any"}, {"lineNumber": 764, "col_offset": 20, "nodeName": "ones", "type": "Any"}, {"lineNumber": 127, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 206, "col_offset": 22, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 264, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 265, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 325, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 339, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 354, "col_offset": 40, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 404, "col_offset": 22, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 405, "col_offset": 22, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 418, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 420, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 425, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 430, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 431, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 492, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 506, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 521, "col_offset": 40, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 571, "col_offset": 22, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 629, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 629, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 630, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 630, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 664, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 678, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 693, "col_offset": 40, "nodeName": "ModuleDict", "type": "Any"}, {"lineNumber": 743, "col_offset": 22, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 744, "col_offset": 22, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 757, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 759, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 763, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 764, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 769, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 769, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 770, "col_offset": 12, "nodeName": "output_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 770, "col_offset": 31, "nodeName": "output_kv", "type": "Any"}, {"lineNumber": 127, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 325, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 326, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 339, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 340, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 354, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 492, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 493, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 506, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 507, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 521, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 664, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 665, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 678, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 679, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 693, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "Normalize", "type": "Type[catalyst.contrib.nn.modules.common.Normalize]"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 122, "col_offset": 37, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 158, "col_offset": 47, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 174, "col_offset": 49, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 320, "col_offset": 37, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 356, "col_offset": 47, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 372, "col_offset": 49, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 461, "col_offset": 36, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 465, "col_offset": 46, "nodeName": "Normalize", "type": "Type[catalyst.contrib.nn.modules.common.Normalize]"}, {"lineNumber": 474, "col_offset": 36, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 487, "col_offset": 37, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 523, "col_offset": 47, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 539, "col_offset": 49, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 659, "col_offset": 37, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 695, "col_offset": 47, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 711, "col_offset": 49, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 158, "col_offset": 47, "nodeName": "nn", "type": "Any"}, {"lineNumber": 159, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 174, "col_offset": 49, "nodeName": "nn", "type": "Any"}, {"lineNumber": 175, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 356, "col_offset": 47, "nodeName": "nn", "type": "Any"}, {"lineNumber": 357, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 372, "col_offset": 49, "nodeName": "nn", "type": "Any"}, {"lineNumber": 373, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 461, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 474, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 523, "col_offset": 47, "nodeName": "nn", "type": "Any"}, {"lineNumber": 524, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 539, "col_offset": 49, "nodeName": "nn", "type": "Any"}, {"lineNumber": 540, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 695, "col_offset": 47, "nodeName": "nn", "type": "Any"}, {"lineNumber": 696, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 711, "col_offset": 49, "nodeName": "nn", "type": "Any"}, {"lineNumber": 712, "col_offset": 40, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 122, "col_offset": 53, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 132, "col_offset": 44, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 146, "col_offset": 44, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 152, "col_offset": 54, "nodeName": "Normalize", "type": "Type[catalyst.contrib.nn.modules.common.Normalize]"}, {"lineNumber": 320, "col_offset": 53, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 330, "col_offset": 44, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 344, "col_offset": 44, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 350, "col_offset": 54, "nodeName": "Normalize", "type": "Type[catalyst.contrib.nn.modules.common.Normalize]"}, {"lineNumber": 487, "col_offset": 53, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 497, "col_offset": 44, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 511, "col_offset": 44, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 517, "col_offset": 54, "nodeName": "Normalize", "type": "Type[catalyst.contrib.nn.modules.common.Normalize]"}, {"lineNumber": 659, "col_offset": 53, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 669, "col_offset": 44, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 683, "col_offset": 44, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 689, "col_offset": 54, "nodeName": "Normalize", "type": "Type[catalyst.contrib.nn.modules.common.Normalize]"}, {"lineNumber": 163, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 179, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 361, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 377, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 528, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 544, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 700, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 716, "col_offset": 52, "nodeName": "SequentialNet", "type": "Type[catalyst.contrib.models.sequential.SequentialNet]"}, {"lineNumber": 133, "col_offset": 50, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 147, "col_offset": 50, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 331, "col_offset": 50, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 345, "col_offset": 50, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 498, "col_offset": 50, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 512, "col_offset": 50, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 670, "col_offset": 50, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 684, "col_offset": 50, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 164, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 180, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 362, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 378, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 529, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 545, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 701, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}, {"lineNumber": 717, "col_offset": 58, "nodeName": "heads_params", "type": "Any"}]