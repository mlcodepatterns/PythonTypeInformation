[{"lineNumber": 12, "col_offset": 0, "nodeName": "_process_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "Module", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "Module", "type": "Any"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "params", "type": "Union[List[Any], Dict[Any, Any], List[str], str, List[Dict[Any, Any]], List[List[Any]]]"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 13, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 13, "col_offset": 18, "nodeName": "params", "type": "Union[List[Any], str, Dict[Any, Any]]"}, {"lineNumber": 13, "col_offset": 26, "nodeName": "List", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "params", "type": "Union[List[List[Any]], List[str], List[Dict[Any, Any]]]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "net", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "layer_fn", "type": "Union[List[Any], Dict[Any, Any], List[str], str, List[Dict[Any, Any]], List[List[Any]]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "norm_fn", "type": "Union[List[List[Any]], List[str], Dict[Any, Any], List[Dict[Any, Any]], str, List[Any]]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "dropout_fn", "type": "Union[str, List[str], List[Any], List[Dict[Any, Any]], List[List[Any]], Dict[Any, Any]]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "activation_fn", "type": "Union[Dict[Any, Any], List[Dict[Any, Any]], str, List[List[Any]], List[str], List[Any]]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "layer_order", "type": "Union[List[Any], List[str]]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "net", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "ResidualWrapper"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "List", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "_process_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "layer_fn", "type": "Union[List[Any], Dict[Any, Any], str]"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "_process_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "norm_fn", "type": "Union[Dict[Any, Any], str, List[Any]]"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "_process_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 49, "col_offset": 48, "nodeName": "dropout_fn", "type": "Union[str, List[Any], Dict[Any, Any]]"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "_process_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 51, "nodeName": "activation_fn", "type": "Union[Dict[Any, Any], str, List[Any]]"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "residual", "type": "Union[bool, str]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "residual", "type": "str"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "residual", "type": "Union[List[str], str]"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "layer_order", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "layer_fn", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "layer_fn", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "layer_fn", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "normalization_fn", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "normalization_fn", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "dropout_fn", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "dropout_fn", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "activation_fn", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "activation_fn", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "_layer_fn", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "_normalization_fn", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "_dropout_fn", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "_activation_fn", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "layer_fn", "type": "Union[List[Any], List[str], str, List[Dict[Any, Any]], Dict[Any, Any], List[List[Any]]]"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "norm_fn", "type": "Union[List[List[Any]], str, List[str], Dict[Any, Any], List[Dict[Any, Any]], List[Any]]"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "dropout_fn", "type": "Union[List[Any], List[List[Any]], List[str], str, List[Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "activation_fn", "type": "Union[List[str], str, List[Dict[Any, Any]], Dict[Any, Any], List[List[Any]], List[Any]]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "block", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "layer_order", "type": "Union[List[str], List[Any]]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "block_", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "block", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "SequentialNet"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "forward", "type": "Any"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "params", "type": "Union[List[Any], str, Dict[Any, Any]]"}, {"lineNumber": 14, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 14, "col_offset": 34, "nodeName": "layers", "type": "Any"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "params", "type": "Union[List[Any], str, Dict[Any, Any]]"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 16, "col_offset": 32, "nodeName": "layers", "type": "Any"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "net", "type": "Any"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "hiddens", "type": "Any"}, {"lineNumber": 45, "col_offset": 56, "nodeName": "hiddens", "type": "Any"}, {"lineNumber": 47, "col_offset": 54, "nodeName": "hiddens", "type": "Any"}, {"lineNumber": 49, "col_offset": 60, "nodeName": "hiddens", "type": "Any"}, {"lineNumber": 51, "col_offset": 66, "nodeName": "hiddens", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "residual", "type": "Union[bool, str]"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "_process_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 50, "nodeName": "residual", "type": "str"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "get_if_str", "type": "Callable[[Union[str, Callable[..., Any]]], Any]"}, {"lineNumber": 60, "col_offset": 42, "nodeName": "layer_fn", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "layer_fn", "type": "Any"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "f_in", "type": "Any"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "f_out", "type": "Any"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "get_if_str", "type": "Callable[[Union[str, Callable[..., Any]]], Any]"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "normalization_fn", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "get_if_str", "type": "Callable[[Union[str, Callable[..., Any]]], Any]"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "dropout_fn", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "get_if_str", "type": "Callable[[Union[str, Callable[..., Any]]], Any]"}, {"lineNumber": 80, "col_offset": 47, "nodeName": "activation_fn", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "f_in", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "f_out", "type": "Any"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "pairwise", "type": "Callable[[Iterable[Any]], Iterable[Any]]"}, {"lineNumber": 100, "col_offset": 57, "nodeName": "hiddens", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "sub_fn", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "sub_params", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "sub_block", "type": "Any"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "block", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 117, "col_offset": 40, "nodeName": "block_", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "activation", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "block", "type": "ResidualWrapper"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 129, "col_offset": 39, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 129, "col_offset": 51, "nodeName": "net", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "self", "type": "ResidualWrapper"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 55, "col_offset": 60, "nodeName": "hiddens", "type": "Any"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "MODULES", "type": "catalyst.utils.tools.registry.Registry"}, {"lineNumber": 61, "col_offset": 47, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "MODULES", "type": "catalyst.utils.tools.registry.Registry"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "normalization_fn", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "MODULES", "type": "catalyst.utils.tools.registry.Registry"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "dropout_fn", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "MODULES", "type": "catalyst.utils.tools.registry.Registry"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "activation_fn", "type": "Any"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "utils", "type": "module"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "name2fn", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "sub_params", "type": "Any"}, {"lineNumber": 106, "col_offset": 42, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "sub_module", "type": "Any"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "sub_module", "type": "Any"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "sub_params", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "sub_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "sub_fn", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 35, "nodeName": "sub_module", "type": "Any"}, {"lineNumber": 112, "col_offset": 47, "nodeName": "f_in", "type": "Any"}, {"lineNumber": 112, "col_offset": 53, "nodeName": "f_out", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "sub_block", "type": "Any"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "block_", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "create_optimal_inner_init", "type": "Callable[..., Callable[[Any], None]]"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "apply", "type": "Any"}, {"lineNumber": 123, "col_offset": 28, "nodeName": "activation_init", "type": "Callable[[Any], None]"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "residual", "type": "Union[List[str], str, bool]"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "ResidualWrapper", "type": "Type[ResidualWrapper]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "net", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 127, "col_offset": 38, "nodeName": "block", "type": "Any"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "self", "type": "SequentialNet"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "key", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "pop", "type": "Any"}, {"lineNumber": 112, "col_offset": 62, "nodeName": "sub_params", "type": "Any"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "block_", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "utils", "type": "module"}, {"lineNumber": 122, "col_offset": 65, "nodeName": "activation", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "block", "type": "Any"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "residual", "type": "Union[List[str], str, bool]"}, {"lineNumber": 125, "col_offset": 61, "nodeName": "f_in", "type": "Any"}, {"lineNumber": 125, "col_offset": 69, "nodeName": "f_out", "type": "Any"}, {"lineNumber": 126, "col_offset": 44, "nodeName": "block", "type": "Any"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "name2params", "type": "Dict[str, Union[List[str], List[List[Any]], Dict[Any, Any], List[Any], str, List[Dict[Any, Any]]]]"}, {"lineNumber": 104, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "sub_params", "type": "Any"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "block", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 114, "col_offset": 44, "nodeName": "sub_block", "type": "Any"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 104, "col_offset": 50, "nodeName": "key", "type": "Any"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "key", "type": "Any"}]