[{"lineNumber": 19, "col_offset": 0, "nodeName": "_Model", "type": "Any"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "Module", "type": "Any"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "_Criterion", "type": "Any"}, {"lineNumber": 20, "col_offset": 13, "nodeName": "Module", "type": "Any"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "_Optimizer", "type": "Any"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "_Scheduler", "type": "Any"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "_LRScheduler", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "ABC", "type": "Type[abc.ABC]"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "Experiment", "type": "Type[Experiment]"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "BaseExperiment", "type": "Type[BaseExperiment]"}, {"lineNumber": 191, "col_offset": 23, "nodeName": "Experiment", "type": "Type[Experiment]"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "nn", "type": "Any"}, {"lineNumber": 20, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "optim", "type": "Any"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "_Model", "type": "Any"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "_Criterion", "type": "Any"}, {"lineNumber": 56, "col_offset": 50, "nodeName": "_Optimizer", "type": "Any"}, {"lineNumber": 60, "col_offset": 54, "nodeName": "_Scheduler", "type": "Any"}, {"lineNumber": 152, "col_offset": 39, "nodeName": "_Model", "type": "Any"}, {"lineNumber": 155, "col_offset": 43, "nodeName": "_Criterion", "type": "Any"}, {"lineNumber": 158, "col_offset": 55, "nodeName": "_Optimizer", "type": "Any"}, {"lineNumber": 161, "col_offset": 59, "nodeName": "_Scheduler", "type": "Any"}, {"lineNumber": 267, "col_offset": 39, "nodeName": "_Model", "type": "Any"}, {"lineNumber": 295, "col_offset": 43, "nodeName": "_Criterion", "type": "Any"}, {"lineNumber": 328, "col_offset": 61, "nodeName": "_Optimizer", "type": "Any"}, {"lineNumber": 354, "col_offset": 54, "nodeName": "_Scheduler", "type": "Any"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "optim", "type": "Any"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "_model", "type": "Any"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "_loaders", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "loaders", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "_callbacks", "type": "Union[List[Union[catalyst.dl.callbacks.core.Callback, catalyst.dl.callbacks.base.SchedulerCallback, catalyst.dl.callbacks.base.OptimizerCallback, catalyst.dl.callbacks.base.CheckpointCallback, catalyst.dl.callbacks.base.LossCallback]], List[nothing]]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "_criterion", "type": "Any"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "_scheduler", "type": "Any"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "_logdir", "type": "str"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "logdir", "type": "str"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "_stage", "type": "str"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "stage", "type": "str"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "_num_epochs", "type": "int"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "num_epochs", "type": "int"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "_valid_loader", "type": "str"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "valid_loader", "type": "str"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "_main_metric", "type": "str"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "main_metric", "type": "str"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "_minimize_metric", "type": "bool"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "minimize_metric", "type": "bool"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "_verbose", "type": "bool"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "verbose", "type": "bool"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "_additional_state_kwargs", "type": "Union[Dict[Any, Any], Dict[nothing, nothing]]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "_logdir", "type": "Any"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "state_params", "type": "Dict[Any, Any]"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "_model", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "_criterion", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "_scheduler", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "_callbacks", "type": "Union[List[Union[catalyst.dl.callbacks.core.Callback, catalyst.dl.callbacks.base.SchedulerCallback, catalyst.dl.callbacks.base.OptimizerCallback, catalyst.dl.callbacks.base.CheckpointCallback, catalyst.dl.callbacks.base.LossCallback]], List[nothing]]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "_loaders", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "callbacks", "type": "Union[List[Union[catalyst.dl.callbacks.core.Callback, catalyst.dl.callbacks.base.SchedulerCallback, catalyst.dl.callbacks.base.OptimizerCallback, catalyst.dl.callbacks.base.CheckpointCallback, catalyst.dl.callbacks.base.LossCallback]], List[Union[catalyst.dl.callbacks.base.SchedulerCallback, catalyst.dl.callbacks.base.CheckpointCallback, catalyst.dl.callbacks.base.OptimizerCallback, catalyst.dl.callbacks.base.LossCallback]]]"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "_callbacks", "type": "Union[List[Union[catalyst.dl.callbacks.core.Callback, catalyst.dl.callbacks.base.SchedulerCallback, catalyst.dl.callbacks.base.OptimizerCallback, catalyst.dl.callbacks.base.CheckpointCallback, catalyst.dl.callbacks.base.LossCallback]], List[Union[catalyst.dl.callbacks.base.SchedulerCallback, catalyst.dl.callbacks.base.CheckpointCallback, catalyst.dl.callbacks.base.OptimizerCallback, catalyst.dl.callbacks.base.LossCallback]]]"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "callbacks", "type": "Union[List[Union[catalyst.dl.callbacks.base.SchedulerCallback, catalyst.dl.callbacks.base.CheckpointCallback, catalyst.dl.callbacks.base.OptimizerCallback, catalyst.dl.callbacks.base.LossCallback]], List[Union[catalyst.dl.callbacks.core.Callback, catalyst.dl.callbacks.base.SchedulerCallback, catalyst.dl.callbacks.base.OptimizerCallback, catalyst.dl.callbacks.base.CheckpointCallback, catalyst.dl.callbacks.base.LossCallback]]]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "_config", "type": "Dict[Any, Any]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "stages_config", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "EXCLUDE_TAG", "type": "str"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "logdir", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "baselogdir", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "stages_defaults", "type": "Dict[str, Any]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "stages_config_out", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "STAGE_KEYWORDS", "type": "List[str]"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "stage", "type": "Any"}, {"lineNumber": 227, "col_offset": 21, "nodeName": "stages_config", "type": "Any"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "stages_config_out", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "_logdir", "type": "Any"}, {"lineNumber": 245, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "stages_keys", "type": "List[Any]"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "stages_keys", "type": "List[Any]"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "List", "type": "Any"}, {"lineNumber": 252, "col_offset": 46, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "stage_index", "type": "int"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "fp16", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 273, "col_offset": 11, "nodeName": "fp16", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "key_value_flag", "type": "Any"}, {"lineNumber": 285, "col_offset": 11, "nodeName": "key_value_flag", "type": "Any"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 299, "col_offset": 15, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "key_value_flag", "type": "Union[Any, bool]"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "key_value_flag", "type": "Union[Any, bool]"}, {"lineNumber": 326, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "fp16", "type": "bool"}, {"lineNumber": 336, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "key_value_flag", "type": "Any"}, {"lineNumber": 342, "col_offset": 11, "nodeName": "key_value_flag", "type": "Any"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 359, "col_offset": 15, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "data_params", "type": "Dict[Any, Any]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "num_workers", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "drop_last", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "per_gpu_batch_size", "type": "Any"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "per_gpu_batch_size", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "datasets", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "loaders", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 398, "col_offset": 15, "nodeName": "loaders", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "callbacks", "type": "List[Any]"}, {"lineNumber": 409, "col_offset": 15, "nodeName": "callbacks", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "get_criterion", "type": "Callable[[str], Any]"}, {"lineNumber": 64, "col_offset": 39, "nodeName": "stage", "type": "str"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "get_optimizer", "type": "Callable[[str, Any], Any]"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "stage", "type": "str"}, {"lineNumber": 65, "col_offset": 46, "nodeName": "model", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "get_scheduler", "type": "Callable[[str, Any], Any]"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "stage", "type": "str"}, {"lineNumber": 66, "col_offset": 46, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "callbacks", "type": "List[Union[catalyst.dl.callbacks.core.Callback, catalyst.dl.callbacks.base.SchedulerCallback, catalyst.dl.callbacks.base.OptimizerCallback, catalyst.dl.callbacks.base.CheckpointCallback, catalyst.dl.callbacks.base.LossCallback]]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "state_kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "_stage", "type": "Any"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 137, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "_additional_state_kwargs", "type": "Union[Dict[Any, Any], Dict[nothing, nothing]]"}, {"lineNumber": 148, "col_offset": 14, "nodeName": "default_params", "type": "Dict[Any, Any]"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 167, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "self", "type": "SupervisedExperiment"}, {"lineNumber": 183, "col_offset": 30, "nodeName": "default_callbacks", "type": "List[Union[Tuple[Any, Type[catalyst.dl.callbacks.base.LossCallback]], Tuple[Any, Type[catalyst.dl.callbacks.base.OptimizerCallback]], Tuple[Any, Type[catalyst.dl.callbacks.base.SchedulerCallback]], Tuple[str, Type[catalyst.dl.callbacks.base.CheckpointCallback]]]]"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 198, "col_offset": 23, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 201, "col_offset": 49, "nodeName": "merge_dicts", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "_prepare_stages_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "get", "type": "Any"}, {"lineNumber": 212, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "_logdir", "type": "Any"}, {"lineNumber": 215, "col_offset": 27, "nodeName": "logdir", "type": "Any"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "key", "type": "str"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "STAGE_KEYWORDS", "type": "List[str]"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 38, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 249, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 248, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 252, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 255, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 255, "col_offset": 61, "nodeName": "_Model", "type": "Any"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 256, "col_offset": 40, "nodeName": "stage", "type": "str"}, {"lineNumber": 257, "col_offset": 11, "nodeName": "stage_index", "type": "int"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "checkpoint", "type": "Any"}, {"lineNumber": 264, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 264, "col_offset": 62, "nodeName": "_Model", "type": "Any"}, {"lineNumber": 267, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "_config", "type": "Dict[Any, Any]"}, {"lineNumber": 269, "col_offset": 15, "nodeName": "pop", "type": "Any"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "get_from_params", "type": "Callable[..., Any]"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "model", "type": "catalyst.dl.fp16.Fp16Wrap"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "_preprocess_model_for_stage", "type": "Callable[[str, Any], Any]"}, {"lineNumber": 277, "col_offset": 49, "nodeName": "stage", "type": "str"}, {"lineNumber": 277, "col_offset": 56, "nodeName": "model", "type": "Any"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "_postprocess_model_for_stage", "type": "Callable[[str, Any], Any]"}, {"lineNumber": 278, "col_offset": 50, "nodeName": "stage", "type": "str"}, {"lineNumber": 278, "col_offset": 57, "nodeName": "model", "type": "Any"}, {"lineNumber": 283, "col_offset": 25, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "criterion", "type": "Dict[Any, Any]"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 295, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 298, "col_offset": 20, "nodeName": "_get_criterion", "type": "Callable[..., Any]"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "optimizer", "type": "Dict[str, Any]"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "load_from_previous_stage", "type": "Union[bool, Any]"}, {"lineNumber": 328, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 328, "col_offset": 47, "nodeName": "Module", "type": "Any"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 329, "col_offset": 26, "nodeName": "model", "type": "Any"}, {"lineNumber": 329, "col_offset": 33, "nodeName": "Fp16Wrap", "type": "Type[catalyst.dl.fp16.Fp16Wrap]"}, {"lineNumber": 330, "col_offset": 23, "nodeName": "prepare_optimizable_params", "type": "Callable[..., Any]"}, {"lineNumber": 331, "col_offset": 32, "nodeName": "fp16", "type": "bool"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 334, "col_offset": 20, "nodeName": "_get_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 340, "col_offset": 25, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "scheduler", "type": "Dict[Any, Any]"}, {"lineNumber": 354, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 357, "col_offset": 20, "nodeName": "_get_scheduler", "type": "Callable[..., Any]"}, {"lineNumber": 361, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 362, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 364, "col_offset": 21, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 365, "col_offset": 22, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 366, "col_offset": 20, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 367, "col_offset": 29, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 372, "col_offset": 19, "nodeName": "get_datasets", "type": "Callable[..., collections.OrderedDict[str, Any]]"}, {"lineNumber": 374, "col_offset": 18, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 375, "col_offset": 18, "nodeName": "ds_", "type": "Any"}, {"lineNumber": 375, "col_offset": 25, "nodeName": "items", "type": "Callable"}, {"lineNumber": 400, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 405, "col_offset": 17, "nodeName": "callback_params", "type": "Any"}, {"lineNumber": 405, "col_offset": 36, "nodeName": "items", "type": "Callable"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "callback", "type": "Any"}, {"lineNumber": 44, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 44, "col_offset": 59, "nodeName": "Any", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "self", "type": "Experiment"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "self", "type": "Experiment"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "self", "type": "Experiment"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "logdir", "type": "str"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "_num_epochs", "type": "int"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "_valid_loader", "type": "str"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "_main_metric", "type": "str"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "_verbose", "type": "bool"}, {"lineNumber": 144, "col_offset": 28, "nodeName": "_minimize_metric", "type": "bool"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 137, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 137, "col_offset": 59, "nodeName": "Any", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "value", "type": "Union[Type[catalyst.dl.callbacks.base.OptimizerCallback], Type[catalyst.dl.callbacks.base.SchedulerCallback], Type[catalyst.dl.callbacks.base.LossCallback], Type[catalyst.dl.callbacks.base.CheckpointCallback]]"}, {"lineNumber": 198, "col_offset": 23, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "copy", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "copy", "type": "Any"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "_logdir", "type": "Any"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 206, "col_offset": 57, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "logdir", "type": "Any"}, {"lineNumber": 214, "col_offset": 52, "nodeName": "EXCLUDE_TAG", "type": "str"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "_logdir", "type": "None"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "stages_defaults", "type": "Dict[str, Any]"}, {"lineNumber": 226, "col_offset": 35, "nodeName": "copy", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "stages_config_out", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 249, "col_offset": 27, "nodeName": "keys", "type": "Any"}, {"lineNumber": 252, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 252, "col_offset": 59, "nodeName": "Any", "type": "Any"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "stages", "type": "List[str]"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "load_checkpoint", "type": "Callable[[Any], Any]"}, {"lineNumber": 260, "col_offset": 54, "nodeName": "checkpoint_path", "type": "str"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "unpack_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 261, "col_offset": 43, "nodeName": "checkpoint", "type": "Any"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 269, "col_offset": 15, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "MODELS", "type": "catalyst.utils.registry.Registry"}, {"lineNumber": 271, "col_offset": 41, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "assert_fp16_available", "type": "Callable[[], None]"}, {"lineNumber": 275, "col_offset": 20, "nodeName": "Fp16Wrap", "type": "Type[catalyst.dl.fp16.Fp16Wrap]"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 283, "col_offset": 25, "nodeName": "params", "type": "Union[Dict[Any, Any], Dict[nothing, nothing]]"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 287, "col_offset": 21, "nodeName": "params_", "type": "Any"}, {"lineNumber": 287, "col_offset": 32, "nodeName": "items", "type": "Callable"}, {"lineNumber": 290, "col_offset": 24, "nodeName": "get_from_params", "type": "Callable[..., Any]"}, {"lineNumber": 292, "col_offset": 16, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 298, "col_offset": 20, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 298, "col_offset": 42, "nodeName": "criterion_params", "type": "Union[Dict[Any, Any], Dict[nothing, nothing]]"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 306, "col_offset": 16, "nodeName": "key", "type": "str"}, {"lineNumber": 306, "col_offset": 21, "nodeName": "params_", "type": "Any"}, {"lineNumber": 306, "col_offset": 32, "nodeName": "items", "type": "Callable"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 312, "col_offset": 24, "nodeName": "get_from_params", "type": "Callable[..., Any]"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "checkpoint", "type": "Any"}, {"lineNumber": 328, "col_offset": 47, "nodeName": "nn", "type": "Any"}, {"lineNumber": 330, "col_offset": 23, "nodeName": "utils", "type": "module"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 334, "col_offset": 20, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 335, "col_offset": 41, "nodeName": "optimizer_params", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 340, "col_offset": 25, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 344, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "params_", "type": "Any"}, {"lineNumber": 344, "col_offset": 32, "nodeName": "items", "type": "Callable"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "get_from_params", "type": "Callable[..., Any]"}, {"lineNumber": 357, "col_offset": 20, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 358, "col_offset": 22, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 358, "col_offset": 35, "nodeName": "scheduler_params", "type": "Union[Dict[Any, Any], Dict[nothing, nothing]]"}, {"lineNumber": 364, "col_offset": 21, "nodeName": "data_params", "type": "Dict[Any, Any]"}, {"lineNumber": 365, "col_offset": 22, "nodeName": "data_params", "type": "Dict[Any, Any]"}, {"lineNumber": 366, "col_offset": 20, "nodeName": "data_params", "type": "Dict[Any, Any]"}, {"lineNumber": 367, "col_offset": 29, "nodeName": "data_params", "type": "Dict[Any, Any]"}, {"lineNumber": 370, "col_offset": 26, "nodeName": "max", "type": "Callable"}, {"lineNumber": 372, "col_offset": 19, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 372, "col_offset": 43, "nodeName": "stage", "type": "str"}, {"lineNumber": 372, "col_offset": 52, "nodeName": "data_params", "type": "Dict[Any, Any]"}, {"lineNumber": 375, "col_offset": 25, "nodeName": "datasets", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 376, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 376, "col_offset": 30, "nodeName": "ds_", "type": "Any"}, {"lineNumber": 379, "col_offset": 30, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 380, "col_offset": 31, "nodeName": "num_workers", "type": "Any"}, {"lineNumber": 382, "col_offset": 29, "nodeName": "drop_last", "type": "Any"}, {"lineNumber": 384, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 384, "col_offset": 26, "nodeName": "ds_", "type": "Any"}, {"lineNumber": 384, "col_offset": 31, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 385, "col_offset": 43, "nodeName": "ds_", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "loaders", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 396, "col_offset": 28, "nodeName": "DataLoader", "type": "Any"}, {"lineNumber": 405, "col_offset": 36, "nodeName": "callbacks_params", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 406, "col_offset": 23, "nodeName": "get_from_params", "type": "Callable[..., Any]"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 407, "col_offset": 29, "nodeName": "callback", "type": "Any"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 144, "col_offset": 28, "nodeName": "self", "type": "BaseExperiment"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "stage", "type": "str"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "_criterion", "type": "Any"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "LossCallback", "type": "Type[catalyst.dl.callbacks.base.LossCallback]"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 178, "col_offset": 34, "nodeName": "OptimizerCallback", "type": "Type[catalyst.dl.callbacks.base.OptimizerCallback]"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "_scheduler", "type": "Any"}, {"lineNumber": 179, "col_offset": 34, "nodeName": "SchedulerCallback", "type": "Type[catalyst.dl.callbacks.base.SchedulerCallback]"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "CheckpointCallback", "type": "Type[catalyst.dl.callbacks.base.CheckpointCallback]"}, {"lineNumber": 184, "col_offset": 37, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "get", "type": "Callable"}, {"lineNumber": 212, "col_offset": 21, "nodeName": "get", "type": "Callable"}, {"lineNumber": 214, "col_offset": 34, "nodeName": "lower", "type": "Any"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "baselogdir", "type": "Any"}, {"lineNumber": 216, "col_offset": 62, "nodeName": "EXCLUDE_TAG", "type": "str"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "_prepare_logdir", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 217, "col_offset": 50, "nodeName": "_config", "type": "Dict[Any, Any]"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "key", "type": "str"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "stage", "type": "Any"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "STAGE_KEYWORDS", "type": "List[str]"}, {"lineNumber": 231, "col_offset": 30, "nodeName": "stage", "type": "Any"}, {"lineNumber": 233, "col_offset": 48, "nodeName": "merge_dicts", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 249, "col_offset": 27, "nodeName": "stages_config", "type": "Any"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "stages_config", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 259, "col_offset": 19, "nodeName": "logdir", "type": "Any"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "UtilsFactory", "type": "Type[catalyst.dl.utils.UtilsFactory]"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "UtilsFactory", "type": "Type[catalyst.dl.utils.UtilsFactory]"}, {"lineNumber": 261, "col_offset": 61, "nodeName": "model", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "utils", "type": "module"}, {"lineNumber": 287, "col_offset": 32, "nodeName": "params", "type": "Union[Dict[Any, Any], Dict[nothing, nothing]]"}, {"lineNumber": 288, "col_offset": 16, "nodeName": "criterion", "type": "Dict[Any, Any]"}, {"lineNumber": 288, "col_offset": 33, "nodeName": "_get_criterion", "type": "Callable[..., Any]"}, {"lineNumber": 290, "col_offset": 24, "nodeName": "CRITERIONS", "type": "catalyst.utils.registry.Registry"}, {"lineNumber": 290, "col_offset": 53, "nodeName": "params", "type": "Union[Dict[Any, Any], Dict[nothing, nothing]]"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 291, "col_offset": 41, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 292, "col_offset": 28, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "stages_config", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 306, "col_offset": 32, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 307, "col_offset": 33, "nodeName": "_get_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 312, "col_offset": 24, "nodeName": "OPTIMIZERS", "type": "catalyst.utils.registry.Registry"}, {"lineNumber": 313, "col_offset": 18, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 314, "col_offset": 23, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "load_checkpoint", "type": "Callable[[Any], Any]"}, {"lineNumber": 320, "col_offset": 58, "nodeName": "checkpoint_path", "type": "str"}, {"lineNumber": 321, "col_offset": 16, "nodeName": "unpack_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 321, "col_offset": 47, "nodeName": "checkpoint", "type": "Any"}, {"lineNumber": 322, "col_offset": 20, "nodeName": "key", "type": "str"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 322, "col_offset": 34, "nodeName": "items", "type": "Callable"}, {"lineNumber": 323, "col_offset": 24, "nodeName": "pg", "type": "Any"}, {"lineNumber": 323, "col_offset": 30, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "stages_config", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 344, "col_offset": 32, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 345, "col_offset": 33, "nodeName": "_get_scheduler", "type": "Callable[..., Any]"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "SCHEDULERS", "type": "catalyst.utils.registry.Registry"}, {"lineNumber": 349, "col_offset": 18, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 350, "col_offset": 26, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "stages_config", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 362, "col_offset": 27, "nodeName": "stages_config", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 370, "col_offset": 33, "nodeName": "device_count", "type": "Any"}, {"lineNumber": 376, "col_offset": 36, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 376, "col_offset": 45, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 377, "col_offset": 19, "nodeName": "ds_", "type": "Any"}, {"lineNumber": 381, "col_offset": 30, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 385, "col_offset": 16, "nodeName": "loader_params", "type": "Dict[str, Any]"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "loader_params", "type": "Dict[str, Any]"}, {"lineNumber": 386, "col_offset": 43, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 387, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 387, "col_offset": 28, "nodeName": "ds_", "type": "Any"}, {"lineNumber": 387, "col_offset": 33, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 395, "col_offset": 22, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 396, "col_offset": 20, "nodeName": "name", "type": "str"}, {"lineNumber": 396, "col_offset": 41, "nodeName": "loader_params", "type": "Dict[str, Any]"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "stages_config", "type": "collections.OrderedDict[Any, Dict[str, Dict[Any, Any]]]"}, {"lineNumber": 406, "col_offset": 23, "nodeName": "CALLBACKS", "type": "catalyst.utils.registry.Registry"}, {"lineNumber": 406, "col_offset": 51, "nodeName": "callback_params", "type": "Any"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "callbacks", "type": "List[Any]"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "self", "type": "SupervisedExperiment"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "self", "type": "SupervisedExperiment"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "self", "type": "SupervisedExperiment"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 186, "col_offset": 43, "nodeName": "is_already_present", "type": "bool"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "get", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "_config", "type": "Dict[Any, Any]"}, {"lineNumber": 212, "col_offset": 21, "nodeName": "_config", "type": "Dict[Any, Any]"}, {"lineNumber": 214, "col_offset": 34, "nodeName": "logdir", "type": "Any"}, {"lineNumber": 216, "col_offset": 40, "nodeName": "lower", "type": "Any"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 217, "col_offset": 50, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 226, "col_offset": 35, "nodeName": "get", "type": "Any"}, {"lineNumber": 226, "col_offset": 53, "nodeName": "key", "type": "str"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "get", "type": "Any"}, {"lineNumber": 229, "col_offset": 41, "nodeName": "stage", "type": "Any"}, {"lineNumber": 234, "col_offset": 20, "nodeName": "copy", "type": "Any"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "copy", "type": "Any"}, {"lineNumber": 249, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 253, "col_offset": 34, "nodeName": "stage", "type": "str"}, {"lineNumber": 259, "col_offset": 19, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 288, "col_offset": 26, "nodeName": "key", "type": "Any"}, {"lineNumber": 288, "col_offset": 33, "nodeName": "ConfigExperiment", "type": "Type[ConfigExperiment]"}, {"lineNumber": 288, "col_offset": 67, "nodeName": "params_", "type": "Any"}, {"lineNumber": 291, "col_offset": 41, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 292, "col_offset": 28, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 297, "col_offset": 31, "nodeName": "stage", "type": "str"}, {"lineNumber": 307, "col_offset": 33, "nodeName": "ConfigExperiment", "type": "Type[ConfigExperiment]"}, {"lineNumber": 308, "col_offset": 33, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 308, "col_offset": 49, "nodeName": "params_", "type": "Any"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "logdir", "type": "Any"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "UtilsFactory", "type": "Type[catalyst.dl.utils.UtilsFactory]"}, {"lineNumber": 321, "col_offset": 16, "nodeName": "UtilsFactory", "type": "Type[catalyst.dl.utils.UtilsFactory]"}, {"lineNumber": 321, "col_offset": 69, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 322, "col_offset": 34, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 323, "col_offset": 30, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 324, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 333, "col_offset": 31, "nodeName": "stage", "type": "str"}, {"lineNumber": 345, "col_offset": 33, "nodeName": "ConfigExperiment", "type": "Type[ConfigExperiment]"}, {"lineNumber": 346, "col_offset": 30, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 346, "col_offset": 43, "nodeName": "params_", "type": "Any"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 356, "col_offset": 31, "nodeName": "stage", "type": "str"}, {"lineNumber": 362, "col_offset": 27, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 362, "col_offset": 46, "nodeName": "stage", "type": "str"}, {"lineNumber": 370, "col_offset": 33, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 381, "col_offset": 30, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 386, "col_offset": 43, "nodeName": "name", "type": "str"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 402, "col_offset": 31, "nodeName": "stage", "type": "str"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "x", "type": "catalyst.dl.callbacks.core.Callback"}, {"lineNumber": 185, "col_offset": 34, "nodeName": "value", "type": "Union[Type[catalyst.dl.callbacks.base.OptimizerCallback], Type[catalyst.dl.callbacks.base.SchedulerCallback], Type[catalyst.dl.callbacks.base.LossCallback], Type[catalyst.dl.callbacks.base.CheckpointCallback]]"}, {"lineNumber": 185, "col_offset": 45, "nodeName": "x", "type": "catalyst.dl.callbacks.core.Callback"}, {"lineNumber": 185, "col_offset": 50, "nodeName": "callbacks", "type": "Union[List[Union[catalyst.dl.callbacks.base.SchedulerCallback, catalyst.dl.callbacks.base.CheckpointCallback, catalyst.dl.callbacks.base.OptimizerCallback, catalyst.dl.callbacks.base.LossCallback]], List[Union[catalyst.dl.callbacks.core.Callback, catalyst.dl.callbacks.base.SchedulerCallback, catalyst.dl.callbacks.base.OptimizerCallback, catalyst.dl.callbacks.base.CheckpointCallback, catalyst.dl.callbacks.base.LossCallback]]]"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "callbacks", "type": "Union[List[Union[catalyst.dl.callbacks.base.SchedulerCallback, catalyst.dl.callbacks.base.CheckpointCallback, catalyst.dl.callbacks.base.OptimizerCallback, catalyst.dl.callbacks.base.LossCallback]], List[Union[catalyst.dl.callbacks.core.Callback, catalyst.dl.callbacks.base.SchedulerCallback, catalyst.dl.callbacks.base.OptimizerCallback, catalyst.dl.callbacks.base.CheckpointCallback, catalyst.dl.callbacks.base.LossCallback]]]"}, {"lineNumber": 187, "col_offset": 37, "nodeName": "value", "type": "Union[Type[catalyst.dl.callbacks.base.OptimizerCallback], Type[catalyst.dl.callbacks.base.SchedulerCallback], Type[catalyst.dl.callbacks.base.LossCallback], Type[catalyst.dl.callbacks.base.CheckpointCallback]]"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "_config", "type": "Dict[Any, Any]"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 212, "col_offset": 21, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 216, "col_offset": 40, "nodeName": "baselogdir", "type": "Any"}, {"lineNumber": 226, "col_offset": 35, "nodeName": "stages_config", "type": "Any"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "stages_config", "type": "Any"}, {"lineNumber": 291, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "pg", "type": "Any"}, {"lineNumber": 370, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 381, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "_config", "type": "Dict[Any, Any]"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 234, "col_offset": 20, "nodeName": "get", "type": "Callable"}, {"lineNumber": 234, "col_offset": 40, "nodeName": "key", "type": "str"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 235, "col_offset": 45, "nodeName": "key", "type": "str"}, {"lineNumber": 324, "col_offset": 27, "nodeName": "key", "type": "str"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "self", "type": "ConfigExperiment"}, {"lineNumber": 234, "col_offset": 20, "nodeName": "stages_defaults", "type": "Dict[str, Any]"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "stages_config", "type": "Any"}, {"lineNumber": 235, "col_offset": 34, "nodeName": "stage", "type": "Any"}]