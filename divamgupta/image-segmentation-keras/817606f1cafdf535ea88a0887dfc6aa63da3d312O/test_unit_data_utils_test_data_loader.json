[{"lineNumber": 8, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "_setup_images_and_segs", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "_cleanup_folder", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "test_get_pairs_from_paths_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "test_get_pairs_from_paths_2", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "test_get_pairs_from_paths_3", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "test_get_pairs_from_paths_with_invalid_segs", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "test_get_pairs_from_paths_with_no_matching_segs", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "test_get_pairs_from_paths_with_no_matching_segs_with_escape", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "test_get_image_array_normal", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "test_get_segmentation_array_normal", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "test_verify_segmentation_dataset", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "test_image_segmentation_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 8, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "unittest", "type": "module"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 12, "col_offset": 25, "nodeName": "images", "type": "Any"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 14, "col_offset": 25, "nodeName": "segs", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "tmp_dir", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "img_path", "type": "str"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "expected", "type": "List[Tuple[str, str]]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "expected", "type": "List[Tuple[str, str]]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "expected", "type": "List[Tuple[str, str]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "expected", "type": "List[Tuple[str, str]]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "expected", "type": "List[Tuple[str, str]]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "expected", "type": "List[Tuple[str, str]]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "folder_path", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 23, "col_offset": 37, "nodeName": "tmp_dir", "type": "str"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "tmp_dir", "type": "str"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "mkdir", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "img_path", "type": "str"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "mkdir", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "tmp_dir", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "_setup_images_and_segs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 35, "col_offset": 44, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "x", "type": "str"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "y", "type": "str"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "_setup_images_and_segs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 44, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "x", "type": "str"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "y", "type": "str"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "_setup_images_and_segs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 68, "col_offset": 44, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "x", "type": "str"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "y", "type": "str"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "_setup_images_and_segs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 84, "col_offset": 44, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "x", "type": "str"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "y", "type": "str"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "_setup_images_and_segs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 99, "col_offset": 44, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "x", "type": "str"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "y", "type": "str"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "DataLoaderError", "type": "Type[keras_segmentation.data_utils.data_loader.DataLoaderError]"}, {"lineNumber": 108, "col_offset": 114, "nodeName": "get_pairs_from_paths", "type": "Callable[..., List[Tuple[Any, Any, List[Any]]]]"}, {"lineNumber": 108, "col_offset": 148, "nodeName": "img_path", "type": "str"}, {"lineNumber": 108, "col_offset": 163, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "_setup_images_and_segs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 113, "col_offset": 44, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "x", "type": "str"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "y", "type": "str"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 23, "col_offset": 37, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 45, "col_offset": 42, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 61, "col_offset": 42, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 94, "col_offset": 42, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "six", "type": "module"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 108, "col_offset": 114, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 108, "col_offset": 148, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 108, "col_offset": 163, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 122, "col_offset": 42, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 45, "col_offset": 49, "nodeName": "get_pairs_from_paths", "type": "Callable[..., List[Tuple[Any, Any, List[Any]]]]"}, {"lineNumber": 45, "col_offset": 82, "nodeName": "img_path", "type": "str"}, {"lineNumber": 45, "col_offset": 97, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 61, "col_offset": 49, "nodeName": "get_pairs_from_paths", "type": "Callable[..., List[Tuple[Any, Any, List[Any]]]]"}, {"lineNumber": 61, "col_offset": 82, "nodeName": "img_path", "type": "str"}, {"lineNumber": 61, "col_offset": 97, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 79, "col_offset": 49, "nodeName": "get_pairs_from_paths", "type": "Callable[..., List[Tuple[Any, Any, List[Any]]]]"}, {"lineNumber": 79, "col_offset": 82, "nodeName": "img_path", "type": "str"}, {"lineNumber": 79, "col_offset": 97, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 94, "col_offset": 49, "nodeName": "get_pairs_from_paths", "type": "Callable[..., List[Tuple[Any, Any, List[Any]]]]"}, {"lineNumber": 94, "col_offset": 82, "nodeName": "img_path", "type": "str"}, {"lineNumber": 94, "col_offset": 97, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 122, "col_offset": 49, "nodeName": "get_pairs_from_paths", "type": "Callable[..., List[Tuple[Any, Any, List[Any]]]]"}, {"lineNumber": 122, "col_offset": 82, "nodeName": "img_path", "type": "str"}, {"lineNumber": 122, "col_offset": 97, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 44, "col_offset": 49, "nodeName": "img_path", "type": "str"}, {"lineNumber": 44, "col_offset": 64, "nodeName": "x", "type": "str"}, {"lineNumber": 44, "col_offset": 68, "nodeName": "join", "type": "Callable"}, {"lineNumber": 44, "col_offset": 81, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 44, "col_offset": 96, "nodeName": "y", "type": "str"}, {"lineNumber": 45, "col_offset": 49, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 45, "col_offset": 82, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 45, "col_offset": 97, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 60, "col_offset": 49, "nodeName": "img_path", "type": "str"}, {"lineNumber": 60, "col_offset": 64, "nodeName": "x", "type": "str"}, {"lineNumber": 60, "col_offset": 68, "nodeName": "join", "type": "Callable"}, {"lineNumber": 60, "col_offset": 81, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 60, "col_offset": 96, "nodeName": "y", "type": "str"}, {"lineNumber": 61, "col_offset": 49, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 61, "col_offset": 82, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 61, "col_offset": 97, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 78, "col_offset": 49, "nodeName": "img_path", "type": "str"}, {"lineNumber": 78, "col_offset": 64, "nodeName": "x", "type": "str"}, {"lineNumber": 78, "col_offset": 68, "nodeName": "join", "type": "Callable"}, {"lineNumber": 78, "col_offset": 81, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 78, "col_offset": 96, "nodeName": "y", "type": "str"}, {"lineNumber": 79, "col_offset": 49, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 79, "col_offset": 82, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 79, "col_offset": 97, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 93, "col_offset": 49, "nodeName": "img_path", "type": "str"}, {"lineNumber": 93, "col_offset": 64, "nodeName": "x", "type": "str"}, {"lineNumber": 93, "col_offset": 68, "nodeName": "join", "type": "Callable"}, {"lineNumber": 93, "col_offset": 81, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 93, "col_offset": 96, "nodeName": "y", "type": "str"}, {"lineNumber": 94, "col_offset": 49, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 94, "col_offset": 82, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 94, "col_offset": 97, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 107, "col_offset": 49, "nodeName": "img_path", "type": "str"}, {"lineNumber": 107, "col_offset": 64, "nodeName": "x", "type": "str"}, {"lineNumber": 107, "col_offset": 68, "nodeName": "join", "type": "Callable"}, {"lineNumber": 107, "col_offset": 81, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 107, "col_offset": 96, "nodeName": "y", "type": "str"}, {"lineNumber": 121, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 121, "col_offset": 49, "nodeName": "img_path", "type": "str"}, {"lineNumber": 121, "col_offset": 64, "nodeName": "x", "type": "str"}, {"lineNumber": 121, "col_offset": 68, "nodeName": "join", "type": "Callable"}, {"lineNumber": 121, "col_offset": 81, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 121, "col_offset": 96, "nodeName": "y", "type": "str"}, {"lineNumber": 122, "col_offset": 49, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 122, "col_offset": 82, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 122, "col_offset": 97, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 13, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 13, "col_offset": 30, "nodeName": "img_path", "type": "str"}, {"lineNumber": 13, "col_offset": 45, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 15, "col_offset": 30, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 15, "col_offset": 45, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 44, "col_offset": 49, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 44, "col_offset": 68, "nodeName": "path", "type": "module"}, {"lineNumber": 44, "col_offset": 81, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 60, "col_offset": 49, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 60, "col_offset": 68, "nodeName": "path", "type": "module"}, {"lineNumber": 60, "col_offset": 81, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 78, "col_offset": 49, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 78, "col_offset": 68, "nodeName": "path", "type": "module"}, {"lineNumber": 78, "col_offset": 81, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 93, "col_offset": 49, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 93, "col_offset": 68, "nodeName": "path", "type": "module"}, {"lineNumber": 93, "col_offset": 81, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 107, "col_offset": 49, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 107, "col_offset": 68, "nodeName": "path", "type": "module"}, {"lineNumber": 107, "col_offset": 81, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 121, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 121, "col_offset": 49, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 121, "col_offset": 68, "nodeName": "path", "type": "module"}, {"lineNumber": 121, "col_offset": 81, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 13, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 13, "col_offset": 30, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 15, "col_offset": 30, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 44, "col_offset": 68, "nodeName": "os", "type": "module"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 60, "col_offset": 68, "nodeName": "os", "type": "module"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 78, "col_offset": 68, "nodeName": "os", "type": "module"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 93, "col_offset": 68, "nodeName": "os", "type": "module"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 107, "col_offset": 68, "nodeName": "os", "type": "module"}, {"lineNumber": 121, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 121, "col_offset": 68, "nodeName": "os", "type": "module"}, {"lineNumber": 13, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "os", "type": "module"}]