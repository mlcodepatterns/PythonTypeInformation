[{"lineNumber": 14, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "_setup_images_and_segs", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "_cleanup_folder", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "test_get_pairs_from_paths_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "test_get_pairs_from_paths_2", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "test_get_pairs_from_paths_3", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "test_get_pairs_from_paths_with_invalid_segs", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "test_get_pairs_from_paths_with_no_matching_segs", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "test_get_pairs_from_paths_with_no_matching_segs_with_escape", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "test_get_image_array_normal", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "test_get_segmentation_array_normal", "type": "Callable[[Any], Any]"}, {"lineNumber": 144, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "test_verify_segmentation_dataset", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 37, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "custom_aug", "type": "Callable[[Any], Any]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "test_image_segmentation_generator_custom_augmentation", "type": "Callable[[Any], Any]"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "test_image_segmentation_generator_custom_augmentation_with_other_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "test_image_segmentation_generator_with_other_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "test_image_segmentation_generator_preprocessing", "type": "Callable[[Any], Any]"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "test_single_image_segmentation_generator_preprocessing_with_other_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "test_multi_image_segmentation_generator_preprocessing_with_other_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 144, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 151, "col_offset": 37, "nodeName": "unittest", "type": "module"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "images", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "segs", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "tmp_dir", "type": "str"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "img_path", "type": "str"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "expected", "type": "List[Tuple[str, str]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "expected", "type": "List[Tuple[str, str]]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "expected", "type": "List[Tuple[str, str]]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "expected", "type": "List[Tuple[str, str]]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "expected", "type": "List[Tuple[str, str]]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "expected", "type": "List[Tuple[str, str]]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "train_temp_dir", "type": "str"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "test_temp_dir", "type": "str"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "other_temp_dir", "type": "str"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "other_temp_dir_2", "type": "str"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "image_size", "type": "int"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "train_image", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "train_image", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "train_file", "type": "str"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "test_file", "type": "str"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "train_image", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "train_file", "type": "str"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "test_file", "type": "str"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "num_test_images", "type": "int"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "dir", "type": "str"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "image_seg_pairs", "type": "List[Tuple[Any, Any, List[Any]]]"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "img_seg_pairs", "type": "List[Tuple[Any, Any, List[Any]]]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "zipped", "type": "itertools.cycle[nothing]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "zipped", "type": "itertools.cycle[nothing]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "zipped", "type": "itertools.cycle[nothing]"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "image_seg_pairs", "type": "List[Tuple[Any, Any, List[Any]]]"}, {"lineNumber": 319, "col_offset": 26, "nodeName": "img_seg_pairs", "type": "List[Tuple[Any, Any, List[Any]]]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "zipped", "type": "itertools.cycle[nothing]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "zipped", "type": "itertools.cycle[nothing]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "zipped", "type": "itertools.cycle[nothing]"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "folder_path", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "tmp_dir", "type": "str"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 30, "col_offset": 37, "nodeName": "tmp_dir", "type": "str"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "mkdir", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "img_path", "type": "str"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "mkdir", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "tmp_dir", "type": "str"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "_setup_images_and_segs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 41, "col_offset": 44, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "x", "type": "str"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "y", "type": "str"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "_setup_images_and_segs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 36, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 44, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "x", "type": "str"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "y", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "_setup_images_and_segs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 74, "col_offset": 44, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "x", "type": "str"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "y", "type": "str"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "_setup_images_and_segs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "x", "type": "str"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "y", "type": "str"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "_setup_images_and_segs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 36, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 105, "col_offset": 44, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "x", "type": "str"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "y", "type": "str"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "DataLoaderError", "type": "Type[keras_segmentation.data_utils.data_loader.DataLoaderError]"}, {"lineNumber": 114, "col_offset": 114, "nodeName": "get_pairs_from_paths", "type": "Callable[..., List[Tuple[Any, Any, List[Any]]]]"}, {"lineNumber": 114, "col_offset": 148, "nodeName": "img_path", "type": "str"}, {"lineNumber": 114, "col_offset": 163, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "_setup_images_and_segs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 36, "nodeName": "images", "type": "List[str]"}, {"lineNumber": 119, "col_offset": 44, "nodeName": "segs", "type": "List[str]"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "x", "type": "str"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "y", "type": "str"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 155, "col_offset": 30, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "arange", "type": "Any"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 164, "col_offset": 34, "nodeName": "train_temp_dir", "type": "str"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 165, "col_offset": 33, "nodeName": "test_temp_dir", "type": "str"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "imwrite", "type": "Any"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "train_file", "type": "str"}, {"lineNumber": 167, "col_offset": 32, "nodeName": "train_image", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "imwrite", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "test_file", "type": "str"}, {"lineNumber": 168, "col_offset": 31, "nodeName": "train_image", "type": "Any"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "arange", "type": "Any"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 175, "col_offset": 34, "nodeName": "train_temp_dir", "type": "str"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 176, "col_offset": 33, "nodeName": "test_temp_dir", "type": "str"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "imwrite", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "train_file", "type": "str"}, {"lineNumber": 180, "col_offset": 32, "nodeName": "train_image", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "imwrite", "type": "Any"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "test_file", "type": "str"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "train_image", "type": "Any"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "other_temp_dir", "type": "str"}, {"lineNumber": 186, "col_offset": 41, "nodeName": "other_temp_dir_2", "type": "str"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "extra_image", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "extra_file", "type": "str"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "extra_image", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "extra_file", "type": "str"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "train_temp_dir", "type": "str"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "test_temp_dir", "type": "str"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 22, "nodeName": "other_temp_dir", "type": "str"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "other_temp_dir_2", "type": "str"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 217, "col_offset": 42, "nodeName": "get_pairs_from_paths", "type": "Callable[..., List[Tuple[Any, Any, List[Any]]]]"}, {"lineNumber": 217, "col_offset": 75, "nodeName": "train_temp_dir", "type": "str"}, {"lineNumber": 217, "col_offset": 96, "nodeName": "test_temp_dir", "type": "str"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "image_seg_pairs", "type": "List[Tuple[Any, Any, List[Any]]]"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "cycle", "type": "Type[itertools.cycle[Any]]"}, {"lineNumber": 221, "col_offset": 33, "nodeName": "img_seg_pairs", "type": "List[Tuple[Any, Any, List[Any]]]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "image_segmentation_generator", "type": "Callable[..., Generator[Tuple[numpy.ndarray, numpy.ndarray], Any, Any]]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "train_temp_dir", "type": "str"}, {"lineNumber": 226, "col_offset": 33, "nodeName": "test_temp_dir", "type": "str"}, {"lineNumber": 227, "col_offset": 47, "nodeName": "image_size", "type": "int"}, {"lineNumber": 227, "col_offset": 64, "nodeName": "image_size", "type": "int"}, {"lineNumber": 227, "col_offset": 81, "nodeName": "image_size", "type": "int"}, {"lineNumber": 227, "col_offset": 98, "nodeName": "image_size", "type": "int"}, {"lineNumber": 232, "col_offset": 56, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 232, "col_offset": 60, "nodeName": "generator", "type": "Generator[Tuple[numpy.ndarray, numpy.ndarray], Any, Any]"}, {"lineNumber": 232, "col_offset": 71, "nodeName": "zipped", "type": "itertools.cycle[nothing]"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "expt_im", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "expt_im", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "other_temp_dir", "type": "str"}, {"lineNumber": 245, "col_offset": 37, "nodeName": "other_temp_dir_2", "type": "str"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 248, "col_offset": 42, "nodeName": "get_pairs_from_paths", "type": "Callable[..., List[Tuple[Any, Any, List[Any]]]]"}, {"lineNumber": 248, "col_offset": 75, "nodeName": "train_temp_dir", "type": "str"}, {"lineNumber": 249, "col_offset": 75, "nodeName": "test_temp_dir", "type": "str"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "image_seg_pairs", "type": "List[Tuple[Any, Any, List[Any]]]"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "cycle", "type": "Type[itertools.cycle[Any]]"}, {"lineNumber": 254, "col_offset": 33, "nodeName": "img_seg_pairs", "type": "List[Tuple[Any, Any, List[Any]]]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 257, "col_offset": 20, "nodeName": "image_segmentation_generator", "type": "Callable[..., Generator[Tuple[numpy.ndarray, numpy.ndarray], Any, Any]]"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "train_temp_dir", "type": "str"}, {"lineNumber": 258, "col_offset": 33, "nodeName": "test_temp_dir", "type": "str"}, {"lineNumber": 259, "col_offset": 47, "nodeName": "image_size", "type": "int"}, {"lineNumber": 259, "col_offset": 64, "nodeName": "image_size", "type": "int"}, {"lineNumber": 259, "col_offset": 81, "nodeName": "image_size", "type": "int"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "image_size", "type": "int"}, {"lineNumber": 265, "col_offset": 66, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 265, "col_offset": 70, "nodeName": "generator", "type": "Generator[Tuple[numpy.ndarray, numpy.ndarray], Any, Any]"}, {"lineNumber": 265, "col_offset": 81, "nodeName": "zipped", "type": "itertools.cycle[nothing]"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "ims", "type": "List[nothing]"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "other_temp_dir", "type": "str"}, {"lineNumber": 284, "col_offset": 37, "nodeName": "other_temp_dir_2", "type": "str"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 287, "col_offset": 42, "nodeName": "get_pairs_from_paths", "type": "Callable[..., List[Tuple[Any, Any, List[Any]]]]"}, {"lineNumber": 287, "col_offset": 75, "nodeName": "train_temp_dir", "type": "str"}, {"lineNumber": 288, "col_offset": 75, "nodeName": "test_temp_dir", "type": "str"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 292, "col_offset": 23, "nodeName": "image_seg_pairs", "type": "List[Tuple[Any, Any, List[Any]]]"}, {"lineNumber": 293, "col_offset": 17, "nodeName": "cycle", "type": "Type[itertools.cycle[Any]]"}, {"lineNumber": 293, "col_offset": 33, "nodeName": "img_seg_pairs", "type": "List[Tuple[Any, Any, List[Any]]]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 296, "col_offset": 20, "nodeName": "image_segmentation_generator", "type": "Callable[..., Generator[Tuple[numpy.ndarray, numpy.ndarray], Any, Any]]"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "train_temp_dir", "type": "str"}, {"lineNumber": 297, "col_offset": 33, "nodeName": "test_temp_dir", "type": "str"}, {"lineNumber": 298, "col_offset": 47, "nodeName": "image_size", "type": "int"}, {"lineNumber": 298, "col_offset": 64, "nodeName": "image_size", "type": "int"}, {"lineNumber": 298, "col_offset": 81, "nodeName": "image_size", "type": "int"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "image_size", "type": "int"}, {"lineNumber": 304, "col_offset": 66, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 304, "col_offset": 70, "nodeName": "generator", "type": "Generator[Tuple[numpy.ndarray, numpy.ndarray], Any, Any]"}, {"lineNumber": 304, "col_offset": 81, "nodeName": "zipped", "type": "itertools.cycle[nothing]"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "ims", "type": "List[nothing]"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 319, "col_offset": 42, "nodeName": "get_pairs_from_paths", "type": "Callable[..., List[Tuple[Any, Any, List[Any]]]]"}, {"lineNumber": 319, "col_offset": 75, "nodeName": "train_temp_dir", "type": "str"}, {"lineNumber": 319, "col_offset": 96, "nodeName": "test_temp_dir", "type": "str"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 322, "col_offset": 23, "nodeName": "image_seg_pairs", "type": "List[Tuple[Any, Any, List[Any]]]"}, {"lineNumber": 323, "col_offset": 17, "nodeName": "cycle", "type": "Type[itertools.cycle[Any]]"}, {"lineNumber": 323, "col_offset": 33, "nodeName": "img_seg_pairs", "type": "List[Tuple[Any, Any, List[Any]]]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 327, "col_offset": 20, "nodeName": "image_segmentation_generator", "type": "Callable[..., Generator[Tuple[numpy.ndarray, numpy.ndarray], Any, Any]]"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "train_temp_dir", "type": "str"}, {"lineNumber": 328, "col_offset": 33, "nodeName": "test_temp_dir", "type": "str"}, {"lineNumber": 329, "col_offset": 47, "nodeName": "image_size", "type": "int"}, {"lineNumber": 329, "col_offset": 64, "nodeName": "image_size", "type": "int"}, {"lineNumber": 329, "col_offset": 81, "nodeName": "image_size", "type": "int"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "image_size", "type": "int"}, {"lineNumber": 335, "col_offset": 56, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 335, "col_offset": 60, "nodeName": "generator", "type": "Generator[Tuple[numpy.ndarray, numpy.ndarray], Any, Any]"}, {"lineNumber": 335, "col_offset": 71, "nodeName": "zipped", "type": "itertools.cycle[nothing]"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "expt_im", "type": "Any"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 349, "col_offset": 16, "nodeName": "train_temp_dir", "type": "str"}, {"lineNumber": 349, "col_offset": 37, "nodeName": "test_temp_dir", "type": "str"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 352, "col_offset": 42, "nodeName": "get_pairs_from_paths", "type": "Callable[..., List[Tuple[Any, Any, List[Any]]]]"}, {"lineNumber": 352, "col_offset": 75, "nodeName": "train_temp_dir", "type": "str"}, {"lineNumber": 353, "col_offset": 75, "nodeName": "test_temp_dir", "type": "str"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 357, "col_offset": 23, "nodeName": "image_seg_pairs", "type": "List[Tuple[Any, Any, List[Any]]]"}, {"lineNumber": 358, "col_offset": 17, "nodeName": "cycle", "type": "Type[itertools.cycle[Any]]"}, {"lineNumber": 358, "col_offset": 33, "nodeName": "img_seg_pairs", "type": "List[Tuple[Any, Any, List[Any]]]"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 361, "col_offset": 20, "nodeName": "image_segmentation_generator", "type": "Callable[..., Generator[Tuple[numpy.ndarray, numpy.ndarray], Any, Any]]"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "train_temp_dir", "type": "str"}, {"lineNumber": 362, "col_offset": 33, "nodeName": "test_temp_dir", "type": "str"}, {"lineNumber": 363, "col_offset": 47, "nodeName": "image_size", "type": "int"}, {"lineNumber": 363, "col_offset": 64, "nodeName": "image_size", "type": "int"}, {"lineNumber": 363, "col_offset": 81, "nodeName": "image_size", "type": "int"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "image_size", "type": "int"}, {"lineNumber": 369, "col_offset": 66, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 369, "col_offset": 70, "nodeName": "generator", "type": "Generator[Tuple[numpy.ndarray, numpy.ndarray], Any, Any]"}, {"lineNumber": 369, "col_offset": 81, "nodeName": "zipped", "type": "itertools.cycle[nothing]"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "ims", "type": "List[nothing]"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "other_temp_dir", "type": "str"}, {"lineNumber": 386, "col_offset": 37, "nodeName": "other_temp_dir_2", "type": "str"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 389, "col_offset": 42, "nodeName": "get_pairs_from_paths", "type": "Callable[..., List[Tuple[Any, Any, List[Any]]]]"}, {"lineNumber": 389, "col_offset": 75, "nodeName": "train_temp_dir", "type": "str"}, {"lineNumber": 390, "col_offset": 75, "nodeName": "test_temp_dir", "type": "str"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 394, "col_offset": 23, "nodeName": "image_seg_pairs", "type": "List[Tuple[Any, Any, List[Any]]]"}, {"lineNumber": 395, "col_offset": 17, "nodeName": "cycle", "type": "Type[itertools.cycle[Any]]"}, {"lineNumber": 395, "col_offset": 33, "nodeName": "img_seg_pairs", "type": "List[Tuple[Any, Any, List[Any]]]"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 398, "col_offset": 20, "nodeName": "image_segmentation_generator", "type": "Callable[..., Generator[Tuple[numpy.ndarray, numpy.ndarray], Any, Any]]"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "train_temp_dir", "type": "str"}, {"lineNumber": 399, "col_offset": 33, "nodeName": "test_temp_dir", "type": "str"}, {"lineNumber": 400, "col_offset": 47, "nodeName": "image_size", "type": "int"}, {"lineNumber": 400, "col_offset": 64, "nodeName": "image_size", "type": "int"}, {"lineNumber": 400, "col_offset": 81, "nodeName": "image_size", "type": "int"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "image_size", "type": "int"}, {"lineNumber": 406, "col_offset": 66, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 406, "col_offset": 70, "nodeName": "generator", "type": "Generator[Tuple[numpy.ndarray, numpy.ndarray], Any, Any]"}, {"lineNumber": 406, "col_offset": 81, "nodeName": "zipped", "type": "itertools.cycle[nothing]"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "ims", "type": "List[nothing]"}, {"lineNumber": 413, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 30, "col_offset": 37, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 67, "col_offset": 42, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 85, "col_offset": 42, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "six", "type": "module"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 114, "col_offset": 114, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 114, "col_offset": 148, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 114, "col_offset": 163, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 128, "col_offset": 42, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 155, "col_offset": 30, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "image_size", "type": "int"}, {"lineNumber": 161, "col_offset": 50, "nodeName": "image_size", "type": "int"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "train_image", "type": "Any"}, {"lineNumber": 162, "col_offset": 43, "nodeName": "image_size", "type": "int"}, {"lineNumber": 162, "col_offset": 60, "nodeName": "image_size", "type": "int"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 164, "col_offset": 34, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 165, "col_offset": 33, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "train_image", "type": "Any"}, {"lineNumber": 173, "col_offset": 43, "nodeName": "image_size", "type": "int"}, {"lineNumber": 173, "col_offset": 59, "nodeName": "image_size", "type": "int"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 175, "col_offset": 34, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 176, "col_offset": 33, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 186, "col_offset": 41, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "arange", "type": "Any"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "dir", "type": "str"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "imwrite", "type": "Any"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "extra_file", "type": "str"}, {"lineNumber": 192, "col_offset": 36, "nodeName": "extra_image", "type": "Any"}, {"lineNumber": 195, "col_offset": 26, "nodeName": "arange", "type": "Any"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 199, "col_offset": 38, "nodeName": "dir", "type": "str"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "imwrite", "type": "Any"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "extra_file", "type": "str"}, {"lineNumber": 200, "col_offset": 36, "nodeName": "extra_image", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "shutil", "type": "module"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "shutil", "type": "module"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "shutil", "type": "module"}, {"lineNumber": 206, "col_offset": 22, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "shutil", "type": "module"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "iaa", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 217, "col_offset": 42, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 217, "col_offset": 75, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 217, "col_offset": 96, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "itertools", "type": "module"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 226, "col_offset": 33, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "image_size", "type": "int"}, {"lineNumber": 227, "col_offset": 30, "nodeName": "image_size", "type": "int"}, {"lineNumber": 227, "col_offset": 47, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 227, "col_offset": 64, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 227, "col_offset": 81, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 227, "col_offset": 98, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 228, "col_offset": 49, "nodeName": "custom_aug", "type": "Callable[[], Any]"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "aug_im", "type": "nothing"}, {"lineNumber": 232, "col_offset": 21, "nodeName": "aug_an", "type": "nothing"}, {"lineNumber": 232, "col_offset": 31, "nodeName": "expt_im_f", "type": "nothing"}, {"lineNumber": 232, "col_offset": 42, "nodeName": "expt_an_f", "type": "nothing"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "num_test_images", "type": "int"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "get_image_array", "type": "Callable[..., Any]"}, {"lineNumber": 236, "col_offset": 50, "nodeName": "expt_im_f", "type": "nothing"}, {"lineNumber": 236, "col_offset": 61, "nodeName": "image_size", "type": "int"}, {"lineNumber": 236, "col_offset": 78, "nodeName": "image_size", "type": "int"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "flip", "type": "Any"}, {"lineNumber": 238, "col_offset": 31, "nodeName": "expt_im", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 245, "col_offset": 37, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 248, "col_offset": 42, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 248, "col_offset": 75, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 249, "col_offset": 75, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 250, "col_offset": 93, "nodeName": "other_paths", "type": "List[str]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "itertools", "type": "module"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 257, "col_offset": 20, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 258, "col_offset": 33, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "image_size", "type": "int"}, {"lineNumber": 259, "col_offset": 30, "nodeName": "image_size", "type": "int"}, {"lineNumber": 259, "col_offset": 47, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 259, "col_offset": 64, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 259, "col_offset": 81, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 261, "col_offset": 49, "nodeName": "custom_aug", "type": "Callable[[], Any]"}, {"lineNumber": 261, "col_offset": 85, "nodeName": "other_paths", "type": "List[str]"}, {"lineNumber": 265, "col_offset": 13, "nodeName": "aug_im", "type": "nothing"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "aug_an", "type": "nothing"}, {"lineNumber": 265, "col_offset": 31, "nodeName": "expt_im_f", "type": "nothing"}, {"lineNumber": 265, "col_offset": 42, "nodeName": "expt_an_f", "type": "nothing"}, {"lineNumber": 265, "col_offset": 53, "nodeName": "expt_oth", "type": "nothing"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 266, "col_offset": 20, "nodeName": "num_test_images", "type": "int"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "expt_im_f", "type": "nothing"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "expt_oth", "type": "nothing"}, {"lineNumber": 272, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "expt_im", "type": "Any"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 284, "col_offset": 37, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 287, "col_offset": 42, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 287, "col_offset": 75, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 288, "col_offset": 75, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 289, "col_offset": 93, "nodeName": "other_paths", "type": "List[str]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 293, "col_offset": 17, "nodeName": "itertools", "type": "module"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 296, "col_offset": 20, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 297, "col_offset": 33, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "image_size", "type": "int"}, {"lineNumber": 298, "col_offset": 30, "nodeName": "image_size", "type": "int"}, {"lineNumber": 298, "col_offset": 47, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 298, "col_offset": 64, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 298, "col_offset": 81, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 300, "col_offset": 31, "nodeName": "other_paths", "type": "List[str]"}, {"lineNumber": 304, "col_offset": 13, "nodeName": "aug_im", "type": "nothing"}, {"lineNumber": 304, "col_offset": 21, "nodeName": "aug_an", "type": "nothing"}, {"lineNumber": 304, "col_offset": 31, "nodeName": "expt_im_f", "type": "nothing"}, {"lineNumber": 304, "col_offset": 42, "nodeName": "expt_an_f", "type": "nothing"}, {"lineNumber": 304, "col_offset": 53, "nodeName": "expt_oth", "type": "nothing"}, {"lineNumber": 305, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "num_test_images", "type": "int"}, {"lineNumber": 308, "col_offset": 19, "nodeName": "expt_im_f", "type": "nothing"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 309, "col_offset": 23, "nodeName": "expt_oth", "type": "nothing"}, {"lineNumber": 311, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 319, "col_offset": 42, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 319, "col_offset": 75, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 319, "col_offset": 96, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 323, "col_offset": 17, "nodeName": "itertools", "type": "module"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 327, "col_offset": 20, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 328, "col_offset": 33, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "image_size", "type": "int"}, {"lineNumber": 329, "col_offset": 30, "nodeName": "image_size", "type": "int"}, {"lineNumber": 329, "col_offset": 47, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 329, "col_offset": 64, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 329, "col_offset": 81, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "aug_im", "type": "nothing"}, {"lineNumber": 335, "col_offset": 21, "nodeName": "aug_an", "type": "nothing"}, {"lineNumber": 335, "col_offset": 31, "nodeName": "expt_im_f", "type": "nothing"}, {"lineNumber": 335, "col_offset": 42, "nodeName": "expt_an_f", "type": "nothing"}, {"lineNumber": 336, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "num_test_images", "type": "int"}, {"lineNumber": 339, "col_offset": 22, "nodeName": "get_image_array", "type": "Callable[..., Any]"}, {"lineNumber": 339, "col_offset": 50, "nodeName": "expt_im_f", "type": "nothing"}, {"lineNumber": 339, "col_offset": 61, "nodeName": "image_size", "type": "int"}, {"lineNumber": 339, "col_offset": 78, "nodeName": "image_size", "type": "int"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 349, "col_offset": 16, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 349, "col_offset": 37, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 352, "col_offset": 42, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 352, "col_offset": 75, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 353, "col_offset": 75, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 354, "col_offset": 93, "nodeName": "other_paths", "type": "List[str]"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 358, "col_offset": 17, "nodeName": "itertools", "type": "module"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 361, "col_offset": 20, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 362, "col_offset": 33, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "image_size", "type": "int"}, {"lineNumber": 363, "col_offset": 30, "nodeName": "image_size", "type": "int"}, {"lineNumber": 363, "col_offset": 47, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 363, "col_offset": 64, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 363, "col_offset": 81, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 365, "col_offset": 60, "nodeName": "other_paths", "type": "List[str]"}, {"lineNumber": 369, "col_offset": 13, "nodeName": "aug_im", "type": "nothing"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "aug_an", "type": "nothing"}, {"lineNumber": 369, "col_offset": 31, "nodeName": "expt_im_f", "type": "nothing"}, {"lineNumber": 369, "col_offset": 42, "nodeName": "expt_an_f", "type": "nothing"}, {"lineNumber": 369, "col_offset": 53, "nodeName": "expt_oth", "type": "nothing"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 370, "col_offset": 20, "nodeName": "num_test_images", "type": "int"}, {"lineNumber": 373, "col_offset": 19, "nodeName": "expt_im_f", "type": "nothing"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 374, "col_offset": 23, "nodeName": "expt_oth", "type": "nothing"}, {"lineNumber": 376, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 386, "col_offset": 37, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 389, "col_offset": 42, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 389, "col_offset": 75, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 390, "col_offset": 75, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 391, "col_offset": 93, "nodeName": "other_paths", "type": "List[str]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 395, "col_offset": 17, "nodeName": "itertools", "type": "module"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 398, "col_offset": 20, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 399, "col_offset": 33, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "image_size", "type": "int"}, {"lineNumber": 400, "col_offset": 30, "nodeName": "image_size", "type": "int"}, {"lineNumber": 400, "col_offset": 47, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 400, "col_offset": 64, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 400, "col_offset": 81, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 402, "col_offset": 92, "nodeName": "other_paths", "type": "List[str]"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "aug_im", "type": "nothing"}, {"lineNumber": 406, "col_offset": 21, "nodeName": "aug_an", "type": "nothing"}, {"lineNumber": 406, "col_offset": 31, "nodeName": "expt_im_f", "type": "nothing"}, {"lineNumber": 406, "col_offset": 42, "nodeName": "expt_an_f", "type": "nothing"}, {"lineNumber": 406, "col_offset": 53, "nodeName": "expt_oth", "type": "nothing"}, {"lineNumber": 407, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 407, "col_offset": 20, "nodeName": "num_test_images", "type": "int"}, {"lineNumber": 410, "col_offset": 19, "nodeName": "expt_im_f", "type": "nothing"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 411, "col_offset": 23, "nodeName": "expt_oth", "type": "nothing"}, {"lineNumber": 413, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "get_pairs_from_paths", "type": "Callable[..., List[Tuple[Any, Any, List[Any]]]]"}, {"lineNumber": 51, "col_offset": 82, "nodeName": "img_path", "type": "str"}, {"lineNumber": 51, "col_offset": 97, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 67, "col_offset": 49, "nodeName": "get_pairs_from_paths", "type": "Callable[..., List[Tuple[Any, Any, List[Any]]]]"}, {"lineNumber": 67, "col_offset": 82, "nodeName": "img_path", "type": "str"}, {"lineNumber": 67, "col_offset": 97, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 85, "col_offset": 49, "nodeName": "get_pairs_from_paths", "type": "Callable[..., List[Tuple[Any, Any, List[Any]]]]"}, {"lineNumber": 85, "col_offset": 82, "nodeName": "img_path", "type": "str"}, {"lineNumber": 85, "col_offset": 97, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 100, "col_offset": 49, "nodeName": "get_pairs_from_paths", "type": "Callable[..., List[Tuple[Any, Any, List[Any]]]]"}, {"lineNumber": 100, "col_offset": 82, "nodeName": "img_path", "type": "str"}, {"lineNumber": 100, "col_offset": 97, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "expected_values", "type": "List[Tuple[str, str]]"}, {"lineNumber": 128, "col_offset": 49, "nodeName": "get_pairs_from_paths", "type": "Callable[..., List[Tuple[Any, Any, List[Any]]]]"}, {"lineNumber": 128, "col_offset": 82, "nodeName": "img_path", "type": "str"}, {"lineNumber": 128, "col_offset": 97, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 161, "col_offset": 50, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 162, "col_offset": 43, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 162, "col_offset": 60, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 171, "col_offset": 38, "nodeName": "image_size", "type": "int"}, {"lineNumber": 171, "col_offset": 56, "nodeName": "image_size", "type": "int"}, {"lineNumber": 173, "col_offset": 43, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 173, "col_offset": 59, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "extra_image", "type": "Any"}, {"lineNumber": 189, "col_offset": 47, "nodeName": "image_size", "type": "int"}, {"lineNumber": 189, "col_offset": 64, "nodeName": "image_size", "type": "int"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 195, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "extra_image", "type": "Any"}, {"lineNumber": 197, "col_offset": 47, "nodeName": "image_size", "type": "int"}, {"lineNumber": 197, "col_offset": 64, "nodeName": "image_size", "type": "int"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "Fliplr", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 227, "col_offset": 30, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 228, "col_offset": 49, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 236, "col_offset": 61, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 236, "col_offset": 78, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 239, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 259, "col_offset": 30, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 261, "col_offset": 49, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 266, "col_offset": 20, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "ims", "type": "List[nothing]"}, {"lineNumber": 272, "col_offset": 27, "nodeName": "shape", "type": "nothing"}, {"lineNumber": 273, "col_offset": 26, "nodeName": "get_image_array", "type": "Callable[..., Any]"}, {"lineNumber": 273, "col_offset": 62, "nodeName": "image_size", "type": "int"}, {"lineNumber": 273, "col_offset": 79, "nodeName": "image_size", "type": "int"}, {"lineNumber": 276, "col_offset": 26, "nodeName": "flip", "type": "Any"}, {"lineNumber": 276, "col_offset": 35, "nodeName": "expt_im", "type": "Any"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 298, "col_offset": 30, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "ims", "type": "List[nothing]"}, {"lineNumber": 311, "col_offset": 27, "nodeName": "shape", "type": "nothing"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "get_image_array", "type": "Callable[..., Any]"}, {"lineNumber": 312, "col_offset": 62, "nodeName": "image_size", "type": "int"}, {"lineNumber": 312, "col_offset": 79, "nodeName": "image_size", "type": "int"}, {"lineNumber": 314, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 329, "col_offset": 30, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 339, "col_offset": 22, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 339, "col_offset": 61, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 339, "col_offset": 78, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 343, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 363, "col_offset": 30, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 370, "col_offset": 20, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "ims", "type": "List[nothing]"}, {"lineNumber": 376, "col_offset": 27, "nodeName": "shape", "type": "nothing"}, {"lineNumber": 377, "col_offset": 26, "nodeName": "get_image_array", "type": "Callable[..., Any]"}, {"lineNumber": 377, "col_offset": 62, "nodeName": "image_size", "type": "int"}, {"lineNumber": 377, "col_offset": 79, "nodeName": "image_size", "type": "int"}, {"lineNumber": 380, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 400, "col_offset": 30, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 407, "col_offset": 20, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "ims", "type": "List[nothing]"}, {"lineNumber": 413, "col_offset": 27, "nodeName": "shape", "type": "nothing"}, {"lineNumber": 414, "col_offset": 26, "nodeName": "get_image_array", "type": "Callable[..., Any]"}, {"lineNumber": 414, "col_offset": 62, "nodeName": "image_size", "type": "int"}, {"lineNumber": 414, "col_offset": 79, "nodeName": "image_size", "type": "int"}, {"lineNumber": 417, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 50, "col_offset": 49, "nodeName": "img_path", "type": "str"}, {"lineNumber": 50, "col_offset": 64, "nodeName": "x", "type": "str"}, {"lineNumber": 50, "col_offset": 68, "nodeName": "join", "type": "Callable"}, {"lineNumber": 50, "col_offset": 81, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 50, "col_offset": 96, "nodeName": "y", "type": "str"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 51, "col_offset": 82, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 51, "col_offset": 97, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 66, "col_offset": 49, "nodeName": "img_path", "type": "str"}, {"lineNumber": 66, "col_offset": 64, "nodeName": "x", "type": "str"}, {"lineNumber": 66, "col_offset": 68, "nodeName": "join", "type": "Callable"}, {"lineNumber": 66, "col_offset": 81, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 66, "col_offset": 96, "nodeName": "y", "type": "str"}, {"lineNumber": 67, "col_offset": 49, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 67, "col_offset": 82, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 67, "col_offset": 97, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 84, "col_offset": 49, "nodeName": "img_path", "type": "str"}, {"lineNumber": 84, "col_offset": 64, "nodeName": "x", "type": "str"}, {"lineNumber": 84, "col_offset": 68, "nodeName": "join", "type": "Callable"}, {"lineNumber": 84, "col_offset": 81, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 84, "col_offset": 96, "nodeName": "y", "type": "str"}, {"lineNumber": 85, "col_offset": 49, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 85, "col_offset": 82, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 85, "col_offset": 97, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 99, "col_offset": 49, "nodeName": "img_path", "type": "str"}, {"lineNumber": 99, "col_offset": 64, "nodeName": "x", "type": "str"}, {"lineNumber": 99, "col_offset": 68, "nodeName": "join", "type": "Callable"}, {"lineNumber": 99, "col_offset": 81, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 99, "col_offset": 96, "nodeName": "y", "type": "str"}, {"lineNumber": 100, "col_offset": 49, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 100, "col_offset": 82, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 100, "col_offset": 97, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 113, "col_offset": 49, "nodeName": "img_path", "type": "str"}, {"lineNumber": 113, "col_offset": 64, "nodeName": "x", "type": "str"}, {"lineNumber": 113, "col_offset": 68, "nodeName": "join", "type": "Callable"}, {"lineNumber": 113, "col_offset": 81, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 113, "col_offset": 96, "nodeName": "y", "type": "str"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "img_path", "type": "str"}, {"lineNumber": 127, "col_offset": 64, "nodeName": "x", "type": "str"}, {"lineNumber": 127, "col_offset": 68, "nodeName": "join", "type": "Callable"}, {"lineNumber": 127, "col_offset": 81, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 127, "col_offset": 96, "nodeName": "y", "type": "str"}, {"lineNumber": 128, "col_offset": 49, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 128, "col_offset": 82, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 128, "col_offset": 97, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 171, "col_offset": 38, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 171, "col_offset": 56, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "image_size", "type": "int"}, {"lineNumber": 172, "col_offset": 55, "nodeName": "image_size", "type": "int"}, {"lineNumber": 189, "col_offset": 47, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 189, "col_offset": 64, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 197, "col_offset": 47, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 197, "col_offset": 64, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "iaa", "type": "Any"}, {"lineNumber": 272, "col_offset": 27, "nodeName": "aug_im", "type": "nothing"}, {"lineNumber": 273, "col_offset": 26, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 273, "col_offset": 54, "nodeName": "ims", "type": "List[nothing]"}, {"lineNumber": 273, "col_offset": 62, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 273, "col_offset": 79, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 276, "col_offset": 26, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 278, "col_offset": 32, "nodeName": "all", "type": "Any"}, {"lineNumber": 311, "col_offset": 27, "nodeName": "aug_im", "type": "nothing"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 312, "col_offset": 54, "nodeName": "ims", "type": "List[nothing]"}, {"lineNumber": 312, "col_offset": 62, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 312, "col_offset": 79, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 314, "col_offset": 16, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 314, "col_offset": 32, "nodeName": "all", "type": "Any"}, {"lineNumber": 331, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 365, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 376, "col_offset": 27, "nodeName": "aug_im", "type": "nothing"}, {"lineNumber": 377, "col_offset": 26, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 377, "col_offset": 54, "nodeName": "ims", "type": "List[nothing]"}, {"lineNumber": 377, "col_offset": 62, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 377, "col_offset": 79, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 380, "col_offset": 16, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 380, "col_offset": 32, "nodeName": "all", "type": "Any"}, {"lineNumber": 413, "col_offset": 27, "nodeName": "aug_im", "type": "nothing"}, {"lineNumber": 414, "col_offset": 26, "nodeName": "data_loader", "type": "module"}, {"lineNumber": 414, "col_offset": 54, "nodeName": "ims", "type": "List[nothing]"}, {"lineNumber": 414, "col_offset": 62, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 414, "col_offset": 79, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 417, "col_offset": 16, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 417, "col_offset": 32, "nodeName": "all", "type": "Any"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 19, "col_offset": 30, "nodeName": "img_path", "type": "str"}, {"lineNumber": 19, "col_offset": 45, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 21, "col_offset": 30, "nodeName": "seg_path", "type": "str"}, {"lineNumber": 21, "col_offset": 45, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 50, "col_offset": 49, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 50, "col_offset": 68, "nodeName": "path", "type": "module"}, {"lineNumber": 50, "col_offset": 81, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 66, "col_offset": 49, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 66, "col_offset": 68, "nodeName": "path", "type": "module"}, {"lineNumber": 66, "col_offset": 81, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 84, "col_offset": 49, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 84, "col_offset": 68, "nodeName": "path", "type": "module"}, {"lineNumber": 84, "col_offset": 81, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 99, "col_offset": 49, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 99, "col_offset": 68, "nodeName": "path", "type": "module"}, {"lineNumber": 99, "col_offset": 81, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 113, "col_offset": 49, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 113, "col_offset": 68, "nodeName": "path", "type": "module"}, {"lineNumber": 113, "col_offset": 81, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 127, "col_offset": 68, "nodeName": "path", "type": "module"}, {"lineNumber": 127, "col_offset": 81, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 172, "col_offset": 55, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 187, "col_offset": 42, "nodeName": "image_size", "type": "int"}, {"lineNumber": 187, "col_offset": 60, "nodeName": "image_size", "type": "int"}, {"lineNumber": 187, "col_offset": 83, "nodeName": "i", "type": "int"}, {"lineNumber": 188, "col_offset": 41, "nodeName": "image_size", "type": "int"}, {"lineNumber": 188, "col_offset": 59, "nodeName": "image_size", "type": "int"}, {"lineNumber": 195, "col_offset": 42, "nodeName": "image_size", "type": "int"}, {"lineNumber": 195, "col_offset": 60, "nodeName": "image_size", "type": "int"}, {"lineNumber": 195, "col_offset": 83, "nodeName": "i", "type": "int"}, {"lineNumber": 196, "col_offset": 41, "nodeName": "image_size", "type": "int"}, {"lineNumber": 196, "col_offset": 59, "nodeName": "image_size", "type": "int"}, {"lineNumber": 239, "col_offset": 28, "nodeName": "equal", "type": "Any"}, {"lineNumber": 239, "col_offset": 37, "nodeName": "expt_im", "type": "Any"}, {"lineNumber": 239, "col_offset": 46, "nodeName": "aug_im", "type": "nothing"}, {"lineNumber": 273, "col_offset": 58, "nodeName": "i", "type": "int"}, {"lineNumber": 312, "col_offset": 58, "nodeName": "i", "type": "int"}, {"lineNumber": 343, "col_offset": 28, "nodeName": "equal", "type": "Any"}, {"lineNumber": 343, "col_offset": 37, "nodeName": "expt_im", "type": "Any"}, {"lineNumber": 377, "col_offset": 58, "nodeName": "i", "type": "int"}, {"lineNumber": 402, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 402, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 402, "col_offset": 67, "nodeName": "x", "type": "Any"}, {"lineNumber": 414, "col_offset": 58, "nodeName": "i", "type": "int"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 19, "col_offset": 30, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 21, "col_offset": 30, "nodeName": "self", "type": "TestGetPairsFromPaths"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 50, "col_offset": 68, "nodeName": "os", "type": "module"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 66, "col_offset": 68, "nodeName": "os", "type": "module"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 84, "col_offset": 68, "nodeName": "os", "type": "module"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 99, "col_offset": 68, "nodeName": "os", "type": "module"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 113, "col_offset": 68, "nodeName": "os", "type": "module"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 127, "col_offset": 68, "nodeName": "os", "type": "module"}, {"lineNumber": 187, "col_offset": 42, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 187, "col_offset": 60, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 188, "col_offset": 41, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 188, "col_offset": 59, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 188, "col_offset": 82, "nodeName": "i", "type": "int"}, {"lineNumber": 195, "col_offset": 42, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 195, "col_offset": 60, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 196, "col_offset": 41, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 196, "col_offset": 59, "nodeName": "self", "type": "TestImageSegmentationGenerator"}, {"lineNumber": 196, "col_offset": 82, "nodeName": "i", "type": "int"}, {"lineNumber": 239, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 278, "col_offset": 32, "nodeName": "equal", "type": "Any"}, {"lineNumber": 278, "col_offset": 41, "nodeName": "expt_im", "type": "Any"}, {"lineNumber": 314, "col_offset": 32, "nodeName": "equal", "type": "Any"}, {"lineNumber": 314, "col_offset": 41, "nodeName": "expt_im", "type": "Any"}, {"lineNumber": 343, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 343, "col_offset": 46, "nodeName": "aug_im", "type": "nothing"}, {"lineNumber": 380, "col_offset": 32, "nodeName": "equal", "type": "Any"}, {"lineNumber": 417, "col_offset": 32, "nodeName": "equal", "type": "Any"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 278, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 278, "col_offset": 50, "nodeName": "aug_im", "type": "nothing"}, {"lineNumber": 314, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 314, "col_offset": 50, "nodeName": "aug_im", "type": "nothing"}, {"lineNumber": 380, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 380, "col_offset": 41, "nodeName": "expt_im", "type": "Any"}, {"lineNumber": 380, "col_offset": 54, "nodeName": "aug_im", "type": "nothing"}, {"lineNumber": 417, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 417, "col_offset": 41, "nodeName": "expt_im", "type": "Any"}, {"lineNumber": 417, "col_offset": 60, "nodeName": "aug_im", "type": "nothing"}, {"lineNumber": 417, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 278, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 314, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 380, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 417, "col_offset": 70, "nodeName": "i", "type": "int"}]