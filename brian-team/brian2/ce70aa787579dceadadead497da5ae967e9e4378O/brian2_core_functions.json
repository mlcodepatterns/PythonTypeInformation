[{"lineNumber": 52, "col_offset": 0, "nodeName": "make_function", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 264, "col_offset": 0, "nodeName": "_get_default_functions", "type": "Callable[[], Any]"}, {"lineNumber": 13, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 208, "col_offset": 22, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "sympy_Function", "type": "Any"}, {"lineNumber": 322, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, Union[IntFunction, ClipFunction, RandnFunction, RandFunction, FunctionWrapper]]"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "do_make_user_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "nargs", "type": "int"}, {"lineNumber": 320, "col_offset": 11, "nodeName": "functions", "type": "Dict[str, Union[IntFunction, ClipFunction, RandnFunction, RandFunction, FunctionWrapper]]"}, {"lineNumber": 322, "col_offset": 20, "nodeName": "_get_default_functions", "type": "Callable[[], Any]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "pyfunc", "type": "Callable[..., Any]"}, {"lineNumber": 17, "col_offset": 22, "nodeName": "pyfunc", "type": "Callable[..., Any]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "sympy_func", "type": "Any"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "sympy_func", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "codes", "type": "Dict[str, Union[Dict[str, str], Callable[..., Any]]]"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "codes", "type": "Dict[str, Union[Dict[str, str], Callable[..., Any]]]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "py_name", "type": "str"}, {"lineNumber": 242, "col_offset": 23, "nodeName": "py_name", "type": "str"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "cpp_name", "type": "None"}, {"lineNumber": 243, "col_offset": 24, "nodeName": "cpp_name", "type": "None"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 19, "col_offset": 19, "nodeName": "pyfunc", "type": "Callable[..., Any]"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "_arg_units", "type": "Any"}, {"lineNumber": 20, "col_offset": 30, "nodeName": "_arg_units", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "_return_unit", "type": "Any"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "_return_unit", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "_arg_units", "type": "List[None]"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "arg_units", "type": "List[None]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "_return_unit", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 32, "nodeName": "return_unit", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "codes", "type": "Dict[str, Union[Dict[str, str], Callable[..., Any]]]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "codes", "type": "Dict[nothing, nothing]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "language_id", "type": "str"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "codes", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "func", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "self", "type": "RandnFunction"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "self", "type": "RandFunction"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 185, "col_offset": 26, "nodeName": "self", "type": "ClipFunction"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "self", "type": "IntFunction"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "py_name", "type": "None"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "py_name", "type": "str"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "__name__", "type": "str"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "cpp_name", "type": "None"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "hashdefine_code", "type": "str"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 252, "col_offset": 26, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 252, "col_offset": 32, "nodeName": "pyfunc", "type": "Callable[..., Any]"}, {"lineNumber": 252, "col_offset": 40, "nodeName": "sympy_func", "type": "Any"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "log", "type": "Any"}, {"lineNumber": 261, "col_offset": 58, "nodeName": "args", "type": "Any"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 268, "col_offset": 39, "nodeName": "cos", "type": "Callable[..., Any]"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 270, "col_offset": 39, "nodeName": "sin", "type": "Callable[..., Any]"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 272, "col_offset": 39, "nodeName": "tan", "type": "Callable[..., Any]"}, {"lineNumber": 274, "col_offset": 24, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 274, "col_offset": 40, "nodeName": "cosh", "type": "Callable[..., Any]"}, {"lineNumber": 276, "col_offset": 24, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 276, "col_offset": 40, "nodeName": "sinh", "type": "Callable[..., Any]"}, {"lineNumber": 278, "col_offset": 24, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 278, "col_offset": 40, "nodeName": "tanh", "type": "Callable[..., Any]"}, {"lineNumber": 280, "col_offset": 23, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 280, "col_offset": 39, "nodeName": "exp", "type": "Callable[..., Any]"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 282, "col_offset": 39, "nodeName": "log", "type": "Callable[..., Any]"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 284, "col_offset": 41, "nodeName": "log10", "type": "Callable[..., Any]"}, {"lineNumber": 286, "col_offset": 24, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 286, "col_offset": 40, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 289, "col_offset": 24, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 289, "col_offset": 40, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 292, "col_offset": 41, "nodeName": "floor", "type": "Any"}, {"lineNumber": 296, "col_offset": 26, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 296, "col_offset": 42, "nodeName": "arccos", "type": "Callable[..., Any]"}, {"lineNumber": 299, "col_offset": 26, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 299, "col_offset": 42, "nodeName": "arcsin", "type": "Callable[..., Any]"}, {"lineNumber": 302, "col_offset": 26, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 302, "col_offset": 42, "nodeName": "arctan", "type": "Callable[..., Any]"}, {"lineNumber": 305, "col_offset": 23, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 305, "col_offset": 39, "nodeName": "abs", "type": "Any"}, {"lineNumber": 309, "col_offset": 23, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 309, "col_offset": 39, "nodeName": "mod", "type": "Any"}, {"lineNumber": 314, "col_offset": 24, "nodeName": "RandFunction", "type": "Type[RandFunction]"}, {"lineNumber": 315, "col_offset": 25, "nodeName": "RandnFunction", "type": "Type[RandnFunction]"}, {"lineNumber": 316, "col_offset": 24, "nodeName": "ClipFunction", "type": "Type[ClipFunction]"}, {"lineNumber": 317, "col_offset": 24, "nodeName": "IntFunction", "type": "Type[IntFunction]"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 20, "col_offset": 30, "nodeName": "pyfunc", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "pyfunc", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "self", "type": "Function"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "codes", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "pyfunc", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "code", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "codes", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 136, "col_offset": 39, "nodeName": "randn", "type": "Any"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "codes", "type": "Dict[str, Union[Dict[str, str], Callable[[Any], Any]]]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "rand", "type": "Any"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "codes", "type": "Dict[str, Union[Dict[str, str], Callable[[Any], Any]]]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 185, "col_offset": 39, "nodeName": "clip", "type": "Any"}, {"lineNumber": 187, "col_offset": 32, "nodeName": "codes", "type": "Dict[str, Union[Dict[str, str], Callable[[Any, Any, Any], Any]]]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 204, "col_offset": 39, "nodeName": "int_", "type": "Any"}, {"lineNumber": 205, "col_offset": 47, "nodeName": "codes", "type": "Dict[str, Union[Dict[str, str], Callable[[Any], Any]]]"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "pyfunc", "type": "Callable[..., Any]"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 247, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 250, "col_offset": 44, "nodeName": "hashdefine_code", "type": "str"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 252, "col_offset": 62, "nodeName": "arg_units", "type": "None"}, {"lineNumber": 253, "col_offset": 38, "nodeName": "return_unit", "type": "None"}, {"lineNumber": 253, "col_offset": 57, "nodeName": "codes", "type": "Dict[str, Union[Dict[str, str], Callable[..., Any]]]"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "exponential", "type": "Any"}, {"lineNumber": 268, "col_offset": 39, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 269, "col_offset": 50, "nodeName": "cos", "type": "Any"}, {"lineNumber": 270, "col_offset": 39, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 271, "col_offset": 50, "nodeName": "sin", "type": "Any"}, {"lineNumber": 272, "col_offset": 39, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 273, "col_offset": 50, "nodeName": "tan", "type": "Any"}, {"lineNumber": 274, "col_offset": 40, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 275, "col_offset": 51, "nodeName": "cosh", "type": "Any"}, {"lineNumber": 276, "col_offset": 40, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 277, "col_offset": 51, "nodeName": "sinh", "type": "Any"}, {"lineNumber": 278, "col_offset": 40, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 279, "col_offset": 51, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 280, "col_offset": 39, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 281, "col_offset": 50, "nodeName": "exp", "type": "Any"}, {"lineNumber": 282, "col_offset": 39, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 283, "col_offset": 50, "nodeName": "log", "type": "Any"}, {"lineNumber": 284, "col_offset": 41, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 285, "col_offset": 52, "nodeName": "log10", "type": "Type[log10]"}, {"lineNumber": 286, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 287, "col_offset": 51, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 289, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 290, "col_offset": 51, "nodeName": "ceiling", "type": "Any"}, {"lineNumber": 292, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 293, "col_offset": 52, "nodeName": "floor", "type": "Any"}, {"lineNumber": 296, "col_offset": 42, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 298, "col_offset": 53, "nodeName": "acos", "type": "Any"}, {"lineNumber": 299, "col_offset": 42, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 301, "col_offset": 53, "nodeName": "asin", "type": "Any"}, {"lineNumber": 302, "col_offset": 42, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 304, "col_offset": 53, "nodeName": "atan", "type": "Any"}, {"lineNumber": 305, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 307, "col_offset": 50, "nodeName": "Abs", "type": "Any"}, {"lineNumber": 309, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 311, "col_offset": 50, "nodeName": "Mod", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "arg_units", "type": "None"}, {"lineNumber": 23, "col_offset": 36, "nodeName": "return_unit", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "self", "type": "Function"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "language_id", "type": "str"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "language_id", "type": "str"}, {"lineNumber": 42, "col_offset": 41, "nodeName": "pyfunc", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "self", "type": "Function"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "self", "type": "Function"}, {"lineNumber": 99, "col_offset": 53, "nodeName": "randn", "type": "Any"}, {"lineNumber": 149, "col_offset": 53, "nodeName": "rand", "type": "Any"}, {"lineNumber": 171, "col_offset": 55, "nodeName": "clip", "type": "Any"}, {"lineNumber": 171, "col_offset": 63, "nodeName": "array", "type": "Any"}, {"lineNumber": 171, "col_offset": 70, "nodeName": "a_min", "type": "Any"}, {"lineNumber": 171, "col_offset": 77, "nodeName": "a_max", "type": "Any"}, {"lineNumber": 185, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 57, "nodeName": "u1", "type": "Any"}, {"lineNumber": 195, "col_offset": 41, "nodeName": "int_", "type": "Any"}, {"lineNumber": 195, "col_offset": 49, "nodeName": "value", "type": "Any"}, {"lineNumber": 204, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 247, "col_offset": 84, "nodeName": "py_name", "type": "str"}, {"lineNumber": 248, "col_offset": 81, "nodeName": "cpp_name", "type": "str"}, {"lineNumber": 249, "col_offset": 41, "nodeName": "pyfunc", "type": "Callable[..., Any]"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 269, "col_offset": 50, "nodeName": "trigonometric", "type": "Any"}, {"lineNumber": 271, "col_offset": 50, "nodeName": "trigonometric", "type": "Any"}, {"lineNumber": 273, "col_offset": 50, "nodeName": "trigonometric", "type": "Any"}, {"lineNumber": 275, "col_offset": 51, "nodeName": "hyperbolic", "type": "Any"}, {"lineNumber": 277, "col_offset": 51, "nodeName": "hyperbolic", "type": "Any"}, {"lineNumber": 279, "col_offset": 51, "nodeName": "hyperbolic", "type": "Any"}, {"lineNumber": 281, "col_offset": 50, "nodeName": "exponential", "type": "Any"}, {"lineNumber": 283, "col_offset": 50, "nodeName": "exponential", "type": "Any"}, {"lineNumber": 287, "col_offset": 51, "nodeName": "miscellaneous", "type": "Any"}, {"lineNumber": 290, "col_offset": 51, "nodeName": "integers", "type": "Any"}, {"lineNumber": 291, "col_offset": 80, "nodeName": "u", "type": "Any"}, {"lineNumber": 293, "col_offset": 52, "nodeName": "integers", "type": "Any"}, {"lineNumber": 294, "col_offset": 81, "nodeName": "u", "type": "Any"}, {"lineNumber": 298, "col_offset": 53, "nodeName": "trigonometric", "type": "Any"}, {"lineNumber": 301, "col_offset": 53, "nodeName": "trigonometric", "type": "Any"}, {"lineNumber": 304, "col_offset": 53, "nodeName": "trigonometric", "type": "Any"}, {"lineNumber": 307, "col_offset": 50, "nodeName": "complexes", "type": "Any"}, {"lineNumber": 308, "col_offset": 79, "nodeName": "u", "type": "Any"}, {"lineNumber": 311, "col_offset": 50, "nodeName": "sympy_mod", "type": "Any"}, {"lineNumber": 312, "col_offset": 88, "nodeName": "u", "type": "Any"}, {"lineNumber": 42, "col_offset": 41, "nodeName": "self", "type": "Function"}, {"lineNumber": 46, "col_offset": 52, "nodeName": "language_id", "type": "str"}, {"lineNumber": 99, "col_offset": 59, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 99, "col_offset": 63, "nodeName": "vectorisation_idx", "type": "Any"}, {"lineNumber": 149, "col_offset": 58, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 149, "col_offset": 62, "nodeName": "vectorisation_idx", "type": "Any"}, {"lineNumber": 171, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 195, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 247, "col_offset": 84, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 248, "col_offset": 81, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 249, "col_offset": 49, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "functions", "type": "Any"}, {"lineNumber": 269, "col_offset": 50, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 271, "col_offset": 50, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 273, "col_offset": 50, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 275, "col_offset": 51, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 277, "col_offset": 51, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 279, "col_offset": 51, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 281, "col_offset": 50, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 283, "col_offset": 50, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 287, "col_offset": 51, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 288, "col_offset": 80, "nodeName": "u", "type": "Any"}, {"lineNumber": 290, "col_offset": 51, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 293, "col_offset": 52, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 298, "col_offset": 53, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 301, "col_offset": 53, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 304, "col_offset": 53, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 307, "col_offset": 50, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 269, "col_offset": 50, "nodeName": "functions", "type": "Any"}, {"lineNumber": 271, "col_offset": 50, "nodeName": "functions", "type": "Any"}, {"lineNumber": 273, "col_offset": 50, "nodeName": "functions", "type": "Any"}, {"lineNumber": 275, "col_offset": 51, "nodeName": "functions", "type": "Any"}, {"lineNumber": 277, "col_offset": 51, "nodeName": "functions", "type": "Any"}, {"lineNumber": 279, "col_offset": 51, "nodeName": "functions", "type": "Any"}, {"lineNumber": 281, "col_offset": 50, "nodeName": "functions", "type": "Any"}, {"lineNumber": 283, "col_offset": 50, "nodeName": "functions", "type": "Any"}, {"lineNumber": 287, "col_offset": 51, "nodeName": "functions", "type": "Any"}, {"lineNumber": 290, "col_offset": 51, "nodeName": "functions", "type": "Any"}, {"lineNumber": 293, "col_offset": 52, "nodeName": "functions", "type": "Any"}, {"lineNumber": 298, "col_offset": 53, "nodeName": "functions", "type": "Any"}, {"lineNumber": 301, "col_offset": 53, "nodeName": "functions", "type": "Any"}, {"lineNumber": 304, "col_offset": 53, "nodeName": "functions", "type": "Any"}, {"lineNumber": 307, "col_offset": 50, "nodeName": "functions", "type": "Any"}, {"lineNumber": 269, "col_offset": 50, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 271, "col_offset": 50, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 273, "col_offset": 50, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 275, "col_offset": 51, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 277, "col_offset": 51, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 279, "col_offset": 51, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 281, "col_offset": 50, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 283, "col_offset": 50, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 287, "col_offset": 51, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 290, "col_offset": 51, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 293, "col_offset": 52, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 298, "col_offset": 53, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 301, "col_offset": 53, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 304, "col_offset": 53, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 307, "col_offset": 50, "nodeName": "sympy", "type": "Any"}]