[{"lineNumber": 87, "col_offset": 0, "nodeName": "make_function", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 320, "col_offset": 0, "nodeName": "_get_default_functions", "type": "Callable[[], Any]"}, {"lineNumber": 13, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 239, "col_offset": 18, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 262, "col_offset": 22, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "sympy_Function", "type": "Any"}, {"lineNumber": 378, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, Union[IntFunction, ClipFunction, RandnFunction, RandFunction, FunctionWrapper]]"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "do_make_user_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "nargs", "type": "int"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "functions", "type": "Dict[str, Union[IntFunction, ClipFunction, RandnFunction, RandFunction, FunctionWrapper]]"}, {"lineNumber": 378, "col_offset": 20, "nodeName": "_get_default_functions", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "pyfunc", "type": "Callable[..., Any]"}, {"lineNumber": 16, "col_offset": 22, "nodeName": "pyfunc", "type": "Callable[..., Any]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "sympy_func", "type": "Any"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "sympy_func", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "codes", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "codes", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "namespace", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "namespace", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "py_name", "type": "Any"}, {"lineNumber": 298, "col_offset": 23, "nodeName": "py_name", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "cpp_name", "type": "None"}, {"lineNumber": 299, "col_offset": 24, "nodeName": "cpp_name", "type": "None"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "pyfunc", "type": "Callable[..., Any]"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "_arg_units", "type": "Any"}, {"lineNumber": 19, "col_offset": 30, "nodeName": "_arg_units", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "_return_unit", "type": "Any"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "_return_unit", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "_arg_units", "type": "List[None]"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "arg_units", "type": "List[None]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "_return_unit", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "return_unit", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "pyfunc", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "self", "type": "SimpleFunction"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "pyfunc", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "SimpleFunction"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "SimpleFunction"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "language_id", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "codes", "type": "Any"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "SimpleFunction", "type": "Type[SimpleFunction]"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "codes", "type": "Any"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "namespace", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "self", "type": "RandnFunction"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 177, "col_offset": 32, "nodeName": "support_code", "type": "str"}, {"lineNumber": 178, "col_offset": 35, "nodeName": "hashdefine_code", "type": "str"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "self", "type": "RandFunction"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 204, "col_offset": 32, "nodeName": "support_code", "type": "str"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "self", "type": "ClipFunction"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "clip", "type": "Any"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "array", "type": "Any"}, {"lineNumber": 220, "col_offset": 30, "nodeName": "a_min", "type": "Any"}, {"lineNumber": 220, "col_offset": 37, "nodeName": "a_max", "type": "Any"}, {"lineNumber": 235, "col_offset": 32, "nodeName": "support_code", "type": "str"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 244, "col_offset": 26, "nodeName": "self", "type": "IntFunction"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "int_", "type": "Any"}, {"lineNumber": 248, "col_offset": 23, "nodeName": "value", "type": "Any"}, {"lineNumber": 258, "col_offset": 32, "nodeName": "support_code", "type": "str"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 294, "col_offset": 26, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 294, "col_offset": 32, "nodeName": "pyfunc", "type": "Callable[..., Any]"}, {"lineNumber": 294, "col_offset": 40, "nodeName": "sympy_func", "type": "Any"}, {"lineNumber": 296, "col_offset": 11, "nodeName": "py_name", "type": "None"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "py_name", "type": "Any"}, {"lineNumber": 297, "col_offset": 22, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 302, "col_offset": 11, "nodeName": "cpp_name", "type": "Any"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "hashdefine_code", "type": "str"}, {"lineNumber": 308, "col_offset": 35, "nodeName": "hashdefine_code", "type": "str"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "log", "type": "Any"}, {"lineNumber": 317, "col_offset": 58, "nodeName": "args", "type": "Any"}, {"lineNumber": 324, "col_offset": 23, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 324, "col_offset": 39, "nodeName": "cos", "type": "Callable[..., Any]"}, {"lineNumber": 326, "col_offset": 23, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 326, "col_offset": 39, "nodeName": "sin", "type": "Callable[..., Any]"}, {"lineNumber": 328, "col_offset": 23, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 328, "col_offset": 39, "nodeName": "tan", "type": "Callable[..., Any]"}, {"lineNumber": 330, "col_offset": 24, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 330, "col_offset": 40, "nodeName": "cosh", "type": "Callable[..., Any]"}, {"lineNumber": 332, "col_offset": 24, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 332, "col_offset": 40, "nodeName": "sinh", "type": "Callable[..., Any]"}, {"lineNumber": 334, "col_offset": 24, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 334, "col_offset": 40, "nodeName": "tanh", "type": "Callable[..., Any]"}, {"lineNumber": 336, "col_offset": 23, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 336, "col_offset": 39, "nodeName": "exp", "type": "Callable[..., Any]"}, {"lineNumber": 338, "col_offset": 23, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 338, "col_offset": 39, "nodeName": "log", "type": "Callable[..., Any]"}, {"lineNumber": 340, "col_offset": 25, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 340, "col_offset": 41, "nodeName": "log10", "type": "Callable[..., Any]"}, {"lineNumber": 342, "col_offset": 24, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 342, "col_offset": 40, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 345, "col_offset": 40, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 348, "col_offset": 25, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 348, "col_offset": 41, "nodeName": "floor", "type": "Any"}, {"lineNumber": 352, "col_offset": 26, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 352, "col_offset": 42, "nodeName": "arccos", "type": "Callable[..., Any]"}, {"lineNumber": 355, "col_offset": 26, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 355, "col_offset": 42, "nodeName": "arcsin", "type": "Callable[..., Any]"}, {"lineNumber": 358, "col_offset": 26, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 358, "col_offset": 42, "nodeName": "arctan", "type": "Callable[..., Any]"}, {"lineNumber": 361, "col_offset": 23, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 361, "col_offset": 39, "nodeName": "abs", "type": "Any"}, {"lineNumber": 365, "col_offset": 23, "nodeName": "FunctionWrapper", "type": "Type[FunctionWrapper]"}, {"lineNumber": 365, "col_offset": 39, "nodeName": "mod", "type": "Any"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "RandFunction", "type": "Type[RandFunction]"}, {"lineNumber": 371, "col_offset": 25, "nodeName": "RandnFunction", "type": "Type[RandnFunction]"}, {"lineNumber": 372, "col_offset": 24, "nodeName": "ClipFunction", "type": "Type[ClipFunction]"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "IntFunction", "type": "Type[IntFunction]"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 19, "col_offset": 30, "nodeName": "pyfunc", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "pyfunc", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "self", "type": "Function"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "self", "type": "Function"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "language", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "self", "type": "SimpleFunction"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "codes", "type": "Any"}, {"lineNumber": 114, "col_offset": 55, "nodeName": "func", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "randn", "type": "Any"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "vectorisation_idx", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 190, "col_offset": 39, "nodeName": "rand", "type": "Any"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "vectorisation_idx", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 216, "col_offset": 39, "nodeName": "clip", "type": "Any"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 244, "col_offset": 39, "nodeName": "int_", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "Function", "type": "Type[Function]"}, {"lineNumber": 294, "col_offset": 62, "nodeName": "arg_units", "type": "None"}, {"lineNumber": 295, "col_offset": 38, "nodeName": "return_unit", "type": "None"}, {"lineNumber": 297, "col_offset": 22, "nodeName": "pyfunc", "type": "Any"}, {"lineNumber": 302, "col_offset": 11, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "exponential", "type": "Any"}, {"lineNumber": 324, "col_offset": 39, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 325, "col_offset": 50, "nodeName": "cos", "type": "Any"}, {"lineNumber": 326, "col_offset": 39, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 327, "col_offset": 50, "nodeName": "sin", "type": "Any"}, {"lineNumber": 328, "col_offset": 39, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 329, "col_offset": 50, "nodeName": "tan", "type": "Any"}, {"lineNumber": 330, "col_offset": 40, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 331, "col_offset": 51, "nodeName": "cosh", "type": "Any"}, {"lineNumber": 332, "col_offset": 40, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 333, "col_offset": 51, "nodeName": "sinh", "type": "Any"}, {"lineNumber": 334, "col_offset": 40, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 335, "col_offset": 51, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 336, "col_offset": 39, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 337, "col_offset": 50, "nodeName": "exp", "type": "Any"}, {"lineNumber": 338, "col_offset": 39, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 339, "col_offset": 50, "nodeName": "log", "type": "Any"}, {"lineNumber": 340, "col_offset": 41, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 341, "col_offset": 52, "nodeName": "log10", "type": "Type[log10]"}, {"lineNumber": 342, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 343, "col_offset": 51, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 345, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 346, "col_offset": 51, "nodeName": "ceiling", "type": "Any"}, {"lineNumber": 348, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 349, "col_offset": 52, "nodeName": "floor", "type": "Any"}, {"lineNumber": 352, "col_offset": 42, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 354, "col_offset": 53, "nodeName": "acos", "type": "Any"}, {"lineNumber": 355, "col_offset": 42, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 357, "col_offset": 53, "nodeName": "asin", "type": "Any"}, {"lineNumber": 358, "col_offset": 42, "nodeName": "unitsafe", "type": "module"}, {"lineNumber": 360, "col_offset": 53, "nodeName": "atan", "type": "Any"}, {"lineNumber": 361, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 363, "col_offset": 50, "nodeName": "Abs", "type": "Any"}, {"lineNumber": 365, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 367, "col_offset": 50, "nodeName": "Mod", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "arg_units", "type": "None"}, {"lineNumber": 22, "col_offset": 36, "nodeName": "return_unit", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "self", "type": "Function"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "self", "type": "SimpleFunction"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "language_id", "type": "Any"}, {"lineNumber": 216, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 217, "col_offset": 57, "nodeName": "u1", "type": "Any"}, {"lineNumber": 244, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 305, "col_offset": 84, "nodeName": "py_name", "type": "Any"}, {"lineNumber": 306, "col_offset": 81, "nodeName": "cpp_name", "type": "Any"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 325, "col_offset": 50, "nodeName": "trigonometric", "type": "Any"}, {"lineNumber": 327, "col_offset": 50, "nodeName": "trigonometric", "type": "Any"}, {"lineNumber": 329, "col_offset": 50, "nodeName": "trigonometric", "type": "Any"}, {"lineNumber": 331, "col_offset": 51, "nodeName": "hyperbolic", "type": "Any"}, {"lineNumber": 333, "col_offset": 51, "nodeName": "hyperbolic", "type": "Any"}, {"lineNumber": 335, "col_offset": 51, "nodeName": "hyperbolic", "type": "Any"}, {"lineNumber": 337, "col_offset": 50, "nodeName": "exponential", "type": "Any"}, {"lineNumber": 339, "col_offset": 50, "nodeName": "exponential", "type": "Any"}, {"lineNumber": 343, "col_offset": 51, "nodeName": "miscellaneous", "type": "Any"}, {"lineNumber": 346, "col_offset": 51, "nodeName": "integers", "type": "Any"}, {"lineNumber": 347, "col_offset": 80, "nodeName": "u", "type": "Any"}, {"lineNumber": 349, "col_offset": 52, "nodeName": "integers", "type": "Any"}, {"lineNumber": 350, "col_offset": 81, "nodeName": "u", "type": "Any"}, {"lineNumber": 354, "col_offset": 53, "nodeName": "trigonometric", "type": "Any"}, {"lineNumber": 357, "col_offset": 53, "nodeName": "trigonometric", "type": "Any"}, {"lineNumber": 360, "col_offset": 53, "nodeName": "trigonometric", "type": "Any"}, {"lineNumber": 363, "col_offset": 50, "nodeName": "complexes", "type": "Any"}, {"lineNumber": 364, "col_offset": 79, "nodeName": "u", "type": "Any"}, {"lineNumber": 367, "col_offset": 50, "nodeName": "sympy_mod", "type": "Any"}, {"lineNumber": 368, "col_offset": 88, "nodeName": "u", "type": "Any"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "language_id", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "language", "type": "Any"}, {"lineNumber": 305, "col_offset": 84, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 306, "col_offset": 81, "nodeName": "self", "type": "FunctionWrapper"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "functions", "type": "Any"}, {"lineNumber": 325, "col_offset": 50, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 327, "col_offset": 50, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 329, "col_offset": 50, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 331, "col_offset": 51, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 333, "col_offset": 51, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 335, "col_offset": 51, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 337, "col_offset": 50, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 339, "col_offset": 50, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 343, "col_offset": 51, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 344, "col_offset": 80, "nodeName": "u", "type": "Any"}, {"lineNumber": 346, "col_offset": 51, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 349, "col_offset": 52, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 354, "col_offset": 53, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 357, "col_offset": 53, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 360, "col_offset": 53, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 363, "col_offset": 50, "nodeName": "elementary", "type": "Any"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "language", "type": "Any"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 325, "col_offset": 50, "nodeName": "functions", "type": "Any"}, {"lineNumber": 327, "col_offset": 50, "nodeName": "functions", "type": "Any"}, {"lineNumber": 329, "col_offset": 50, "nodeName": "functions", "type": "Any"}, {"lineNumber": 331, "col_offset": 51, "nodeName": "functions", "type": "Any"}, {"lineNumber": 333, "col_offset": 51, "nodeName": "functions", "type": "Any"}, {"lineNumber": 335, "col_offset": 51, "nodeName": "functions", "type": "Any"}, {"lineNumber": 337, "col_offset": 50, "nodeName": "functions", "type": "Any"}, {"lineNumber": 339, "col_offset": 50, "nodeName": "functions", "type": "Any"}, {"lineNumber": 343, "col_offset": 51, "nodeName": "functions", "type": "Any"}, {"lineNumber": 346, "col_offset": 51, "nodeName": "functions", "type": "Any"}, {"lineNumber": 349, "col_offset": 52, "nodeName": "functions", "type": "Any"}, {"lineNumber": 354, "col_offset": 53, "nodeName": "functions", "type": "Any"}, {"lineNumber": 357, "col_offset": 53, "nodeName": "functions", "type": "Any"}, {"lineNumber": 360, "col_offset": 53, "nodeName": "functions", "type": "Any"}, {"lineNumber": 363, "col_offset": 50, "nodeName": "functions", "type": "Any"}, {"lineNumber": 325, "col_offset": 50, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 327, "col_offset": 50, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 329, "col_offset": 50, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 331, "col_offset": 51, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 333, "col_offset": 51, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 335, "col_offset": 51, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 337, "col_offset": 50, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 339, "col_offset": 50, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 343, "col_offset": 51, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 346, "col_offset": 51, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 349, "col_offset": 52, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 354, "col_offset": 53, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 357, "col_offset": 53, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 360, "col_offset": 53, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 363, "col_offset": 50, "nodeName": "sympy", "type": "Any"}]