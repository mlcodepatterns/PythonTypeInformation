[{"lineNumber": 17, "col_offset": 0, "nodeName": "generate_expressions", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "parse_expressions", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "numpy_evaluator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "cpp_evaluator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "test_parse_expressions_python", "type": "Callable[[], Any]"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "test_parse_expressions_numpy", "type": "Callable[[], Any]"}, {"lineNumber": 96, "col_offset": 0, "nodeName": "test_parse_expressions_cpp", "type": "Callable[[], Any]"}, {"lineNumber": 13, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "ops", "type": "List[str]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "vars", "type": "List[str]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "consts", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "varsconsts", "type": "List[str]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "exprs", "type": "List[Tuple[List[str], List[nothing], str]]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "exprs", "type": "List[Union[Tuple[List[str], List[nothing], str], Tuple[str, List[nothing], str]]]"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "exprs", "type": "List[Union[Tuple[List[str], List[nothing], str], Tuple[str, List[nothing], str]]]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "ns", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "k", "type": "str"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "weave", "type": "None"}, {"lineNumber": 22, "col_offset": 13, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "N", "type": "int"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "expr", "type": "str"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "exprs", "type": "List[Tuple[List[str], List[nothing], str]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "varids", "type": "Union[List[str], str]"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "funcids", "type": "List[nothing]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "expr", "type": "str"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "pexpr", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "expr", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "ns", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 81, "col_offset": 7, "nodeName": "weave", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "parse_expressions", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 38, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "parse_expressions", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 43, "nodeName": "numpy_evaluator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 10, "nodeName": "SkipTest", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "test_parse_expressions_python", "type": "Callable[[], Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "test_parse_expressions_numpy", "type": "Callable[[], Any]"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "chr", "type": "Callable[[int], str]"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "i", "type": "Any"}, {"lineNumber": 20, "col_offset": 49, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "depth", "type": "int"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "s", "type": "str"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "expr", "type": "str"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "generate_expressions", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "render_expr", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "expr", "type": "str"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "numvalues", "type": "int"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "ns", "type": "Dict[str, Any]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "r2", "type": "Any"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "ns", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "ns", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "inline", "type": "Any"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "SkipTest", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "NodeRenderer", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "NumpyNodeRenderer", "type": "Any"}, {"lineNumber": 98, "col_offset": 10, "nodeName": "nose", "type": "Any"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "i", "type": "Any"}, {"lineNumber": 19, "col_offset": 37, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 19, "col_offset": 44, "nodeName": "numvars", "type": "int"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "_", "type": "Any"}, {"lineNumber": 20, "col_offset": 60, "nodeName": "numints", "type": "int"}, {"lineNumber": 21, "col_offset": 34, "nodeName": "vars", "type": "List[str]"}, {"lineNumber": 21, "col_offset": 39, "nodeName": "consts", "type": "Any"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "complexity", "type": "int"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "op", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "var", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "s", "type": "str"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "ops", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "vars", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "expr", "type": "str"}, {"lineNumber": 52, "col_offset": 46, "nodeName": "l", "type": "str"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "renderer", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "r1", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "evaluator", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "pexpr", "type": "Any"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "ns", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "r1", "type": "Any"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "r2", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "ns", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "weave", "type": "Any"}, {"lineNumber": 82, "col_offset": 49, "nodeName": "expr", "type": "Any"}, {"lineNumber": 82, "col_offset": 55, "nodeName": "keys", "type": "Any"}, {"lineNumber": 82, "col_offset": 77, "nodeName": "ns", "type": "Any"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "nose", "type": "Any"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "ord", "type": "Callable[[Union[bytes, str]], int]"}, {"lineNumber": 20, "col_offset": 30, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 20, "col_offset": 37, "nodeName": "numfloats", "type": "int"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "ops", "type": "List[str]"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "vars", "type": "List[str]"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "var", "type": "Any"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "expr", "type": "str"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "op", "type": "Any"}, {"lineNumber": 31, "col_offset": 43, "nodeName": "s", "type": "str"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 52, "col_offset": 51, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 52, "col_offset": 83, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "expr", "type": "str"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "ns", "type": "Dict[str, Any]"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "ZeroDivisionError", "type": "Type[ZeroDivisionError]"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 61, "col_offset": 51, "nodeName": "OverflowError", "type": "Type[OverflowError]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "k", "type": "str"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "k", "type": "str"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 55, "nodeName": "ns", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "s", "type": "str"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "op", "type": "Any"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "randint", "type": "Any"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "l", "type": "str"}, {"lineNumber": 52, "col_offset": 51, "nodeName": "additional_exprs", "type": "str"}, {"lineNumber": 52, "col_offset": 83, "nodeName": "l", "type": "str"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "v", "type": "str"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "v", "type": "str"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "varids", "type": "Union[str, List[str]]"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "ns", "type": "Dict[str, Any]"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "randint", "type": "Any"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "randint", "type": "Any"}, {"lineNumber": 28, "col_offset": 35, "nodeName": "numvars", "type": "int"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "ops", "type": "List[str]"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "rand", "type": "Any"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "k", "type": "str"}, {"lineNumber": 27, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "ops", "type": "List[str]"}]