[{"lineNumber": 27, "col_offset": 0, "nodeName": "evaluate_expr", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "expression_complexity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "optimise_statements", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "_replace_with_zero", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 349, "col_offset": 0, "nodeName": "reduced_node", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 379, "col_offset": 0, "nodeName": "cancel_identical_terms", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 423, "col_offset": 0, "nodeName": "collect", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "defaults_ns", "type": "Dict[Any, Any]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "BrianASTRenderer", "type": "Any"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "BrianASTRenderer", "type": "Any"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "update", "type": "Callable"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "complexity", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "simplifier", "type": "Simplifier"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "new_vector_statements", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "vector_statements", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "new_scalar_statements", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "zero_node", "type": "Any"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "terms", "type": "Any"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "nr", "type": "brian2.parsing.rendering.NodeRenderer"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "expressions", "type": "Dict[Any, Any]"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "new_primary", "type": "List[Any]"}, {"lineNumber": 406, "col_offset": 4, "nodeName": "inverted_expressions", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "term", "type": "Any"}, {"lineNumber": 407, "col_offset": 16, "nodeName": "primary", "type": "List[Any]"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "collected", "type": "bool"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "orignode_dtype", "type": "Any"}, {"lineNumber": 450, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "terms_primary", "type": "List[Any]"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "terms_inverted", "type": "List[Any]"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "x", "type": "float"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "op_null", "type": "float"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "remaining_terms_primary", "type": "List[Any]"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "remaining_terms_inverted", "type": "List[Any]"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "term", "type": "Any"}, {"lineNumber": 483, "col_offset": 16, "nodeName": "terms_primary", "type": "List[Any]"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "term", "type": "Any"}, {"lineNumber": 488, "col_offset": 16, "nodeName": "terms_inverted", "type": "List[Any]"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "terms_primary", "type": "List[Any]"}, {"lineNumber": 499, "col_offset": 20, "nodeName": "remaining_terms_primary", "type": "List[Any]"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "terms_inverted", "type": "List[Any]"}, {"lineNumber": 500, "col_offset": 21, "nodeName": "remaining_terms_inverted", "type": "List[Any]"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "node", "type": "Optional[_ast.Num]"}, {"lineNumber": 501, "col_offset": 11, "nodeName": "num_node", "type": "Optional[_ast.Num]"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "scalar", "type": "bool"}, {"lineNumber": 523, "col_offset": 4, "nodeName": "collected", "type": "bool"}, {"lineNumber": 524, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "op_primary", "type": "bool"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "left_exact", "type": "Union[Any, bool]"}, {"lineNumber": 546, "col_offset": 4, "nodeName": "right_exact", "type": "Union[Any, bool]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "defaults_ns", "type": "Dict[Any, Any]"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "val", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "Simplifier", "type": "Type[Simplifier]"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "variables", "type": "Any"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "scalar_statements", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "new_expr", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "new_stmt", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "complexity_std", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "idents", "type": "Set[Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "used_boolvars", "type": "List[Any]"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "scalar_statements", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "expr", "type": "Any"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "dtype_name", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "new_stmt", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "new_scalar_statements", "type": "Any"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "new_vector_statements", "type": "List[Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "zero_node", "type": "Any"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "node", "type": "Any"}, {"lineNumber": 150, "col_offset": 7, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "n", "type": "float"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assumptions", "type": "List[nothing]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assumptions_ns", "type": "Dict[Any, Any]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "bast_renderer", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "expr", "type": "Any"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "evaluated", "type": "bool"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "left", "type": "Any"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "left", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "right", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "right", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "op", "type": "Any"}, {"lineNumber": 227, "col_offset": 13, "nodeName": "op", "type": "Any"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "loop_invariants", "type": "collections.OrderedDict[Any, str]"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "loop_invariant_dtypes", "type": "Dict[str, Any]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "node_renderer", "type": "brian2.parsing.rendering.NodeRenderer"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "arithmetic_simplifier", "type": "ArithmeticSimplifier"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "scalar_statements", "type": "Any"}, {"lineNumber": 307, "col_offset": 33, "nodeName": "scalar_statements", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "extra_lio_prefix", "type": "Any"}, {"lineNumber": 312, "col_offset": 32, "nodeName": "extra_lio_prefix", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 373, "col_offset": 13, "nodeName": "term", "type": "Any"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "reduce", "type": "Callable"}, {"lineNumber": 376, "col_offset": 68, "nodeName": "terms", "type": "Any"}, {"lineNumber": 402, "col_offset": 9, "nodeName": "NodeRenderer", "type": "Type[brian2.parsing.rendering.NodeRenderer]"}, {"lineNumber": 403, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "expr", "type": "Any"}, {"lineNumber": 420, "col_offset": 11, "nodeName": "new_primary", "type": "List[Any]"}, {"lineNumber": 420, "col_offset": 24, "nodeName": "inverted", "type": "List[Any]"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "node", "type": "Any"}, {"lineNumber": 450, "col_offset": 21, "nodeName": "node", "type": "Any"}, {"lineNumber": 452, "col_offset": 7, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 453, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 458, "col_offset": 7, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "op_primary", "type": "Type[_ast.Mult]"}, {"lineNumber": 459, "col_offset": 21, "nodeName": "Mult", "type": "Type[_ast.Mult]"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "op_inverted", "type": "Type[_ast.Div]"}, {"lineNumber": 460, "col_offset": 22, "nodeName": "Div", "type": "Type[_ast.Div]"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "op_null", "type": "float"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "op_py_primary", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "op_py_inverted", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 472, "col_offset": 7, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "op_null_with_dtype", "type": "int"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "op_null_with_dtype", "type": "float"}, {"lineNumber": 475, "col_offset": 29, "nodeName": "op_null", "type": "float"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "collect_commutative", "type": "Callable[..., Any]"}, {"lineNumber": 477, "col_offset": 24, "nodeName": "node", "type": "Any"}, {"lineNumber": 477, "col_offset": 30, "nodeName": "op_primary", "type": "Union[Type[_ast.Add], Type[_ast.Mult]]"}, {"lineNumber": 477, "col_offset": 42, "nodeName": "op_inverted", "type": "Union[Type[_ast.Sub], Type[_ast.Div]]"}, {"lineNumber": 478, "col_offset": 24, "nodeName": "terms_primary", "type": "List[Any]"}, {"lineNumber": 478, "col_offset": 39, "nodeName": "terms_inverted", "type": "List[Any]"}, {"lineNumber": 495, "col_offset": 7, "nodeName": "x", "type": "Any"}, {"lineNumber": 495, "col_offset": 12, "nodeName": "op_null", "type": "float"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "num_node", "type": "_ast.Num"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "num_node", "type": "None"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "primary_terms", "type": "List[Any]"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "inverted_terms", "type": "List[Any]"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "prod_primary", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "prod_inverted", "type": "Any"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 519, "col_offset": 7, "nodeName": "node", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "node", "type": "_ast.Num"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "node", "type": "_ast.BinOp"}, {"lineNumber": 523, "col_offset": 4, "nodeName": "node", "type": "Any"}, {"lineNumber": 531, "col_offset": 17, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 531, "col_offset": 38, "nodeName": "primary", "type": "Union[Type[_ast.Add], Type[_ast.Mult]]"}, {"lineNumber": 538, "col_offset": 62, "nodeName": "left_exact", "type": "Union[Any, bool]"}, {"lineNumber": 542, "col_offset": 11, "nodeName": "add_to_inverted", "type": "bool"}, {"lineNumber": 549, "col_offset": 63, "nodeName": "right_exact", "type": "Union[Any, bool]"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "pyfunc", "type": "Any"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "expr", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "ns", "type": "Dict[Any, Any]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "val", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "brian_ast", "type": "Any"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "expr", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "variables", "type": "Any"}, {"lineNumber": 79, "col_offset": 75, "nodeName": "blockname", "type": "Any"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "render_expr", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "expr", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "Statement", "type": "Any"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "var", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "op", "type": "Any"}, {"lineNumber": 84, "col_offset": 48, "nodeName": "new_expr", "type": "Any"}, {"lineNumber": 84, "col_offset": 58, "nodeName": "comment", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "expression_complexity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 47, "nodeName": "new_expr", "type": "Any"}, {"lineNumber": 90, "col_offset": 57, "nodeName": "variables", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "get_identifiers", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "new_expr", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "var", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "used_boolvars", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "bool_space", "type": "List[List[bool]]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "expanded_expressions", "type": "Dict[Tuple[Tuple[nothing, nothing], ...], Any]"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "complexities", "type": "Dict[Tuple[Tuple[nothing, nothing], ...], Any]"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "bool_vals", "type": "Tuple[Any, ...]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "used_boolean_variables", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "used_boolvars", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "boolean_simplified_expressions", "type": "Dict[Tuple[Tuple[nothing, nothing], ...], Any]"}, {"lineNumber": 109, "col_offset": 54, "nodeName": "expanded_expressions", "type": "Dict[Tuple[Tuple[nothing, nothing], ...], Any]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "complexity_std", "type": "Any"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "complexity_std", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "complexities", "type": "Dict[Tuple[Tuple[nothing, nothing], ...], Any]"}, {"lineNumber": 111, "col_offset": 36, "nodeName": "complexities", "type": "Dict[Tuple[Tuple[nothing, nothing], ...], Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 112, "col_offset": 37, "nodeName": "new_stmt", "type": "Any"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "copy", "type": "module"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "loop_invariants", "type": "collections.OrderedDict[Any, str]"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "loop_invariant_dtypes", "type": "Dict[str, Any]"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "dtype_name", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "dtype", "type": "Type[bool]"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "Statement", "type": "Any"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 123, "col_offset": 41, "nodeName": "expr", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 128, "col_offset": 37, "nodeName": "new_stmt", "type": "Any"}, {"lineNumber": 150, "col_offset": 7, "nodeName": "node", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "zero_node", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "zero_node", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 173, "col_offset": 34, "nodeName": "self", "type": "ArithmeticSimplifier"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "variables", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "ArithmeticSimplifier"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "ArithmeticSimplifier"}, {"lineNumber": 175, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "defaults_ns", "type": "Dict[Any, Any]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "ArithmeticSimplifier"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "BrianASTRenderer", "type": "Any"}, {"lineNumber": 176, "col_offset": 46, "nodeName": "variables", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "simplified", "type": "bool"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "node", "type": "Any"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "node", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "stateless", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "node", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "render_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 42, "nodeName": "node", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "val", "type": "Any"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "evaluated", "type": "bool"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "evaluate_expr", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 196, "col_offset": 39, "nodeName": "expr", "type": "Any"}, {"lineNumber": 196, "col_offset": 45, "nodeName": "assumptions_ns", "type": "Dict[Any, Any]"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 211, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "scalar", "type": "bool"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "stateless", "type": "Any"}, {"lineNumber": 213, "col_offset": 32, "nodeName": "stateless", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "complexity", "type": "int"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "newnode", "type": "Union[_ast.Num, _ast.NameConstant]"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 224, "col_offset": 27, "nodeName": "render_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 224, "col_offset": 44, "nodeName": "left", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "render_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 225, "col_offset": 46, "nodeName": "right", "type": "Any"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "render_BinOp", "type": "Any"}, {"lineNumber": 226, "col_offset": 62, "nodeName": "node", "type": "Any"}, {"lineNumber": 227, "col_offset": 13, "nodeName": "node", "type": "Any"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "subnode", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 301, "col_offset": 34, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 301, "col_offset": 40, "nodeName": "variables", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 302, "col_offset": 31, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "NodeRenderer", "type": "Type[brian2.parsing.rendering.NodeRenderer]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 306, "col_offset": 37, "nodeName": "ArithmeticSimplifier", "type": "Type[ArithmeticSimplifier]"}, {"lineNumber": 306, "col_offset": 58, "nodeName": "variables", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 308, "col_offset": 11, "nodeName": "extra_lio_prefix", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "extra_lio_prefix", "type": "str"}, {"lineNumber": 310, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 310, "col_offset": 15, "nodeName": "extra_lio_prefix", "type": "Union[str, Any]"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "extra_lio_prefix", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "brian_ast", "type": "Any"}, {"lineNumber": 315, "col_offset": 25, "nodeName": "expr", "type": "Any"}, {"lineNumber": 315, "col_offset": 31, "nodeName": "variables", "type": "Any"}, {"lineNumber": 316, "col_offset": 15, "nodeName": "render_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 316, "col_offset": 54, "nodeName": "node", "type": "Any"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "render_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 317, "col_offset": 32, "nodeName": "node", "type": "Any"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "render_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 318, "col_offset": 46, "nodeName": "node", "type": "Any"}, {"lineNumber": 325, "col_offset": 11, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "expr", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "newnode", "type": "_ast.Name"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "scalar", "type": "bool"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 341, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "complexity", "type": "int"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "stateless", "type": "Any"}, {"lineNumber": 343, "col_offset": 32, "nodeName": "stateless", "type": "Any"}, {"lineNumber": 344, "col_offset": 19, "nodeName": "newnode", "type": "_ast.Name"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "render_node", "type": "Any"}, {"lineNumber": 346, "col_offset": 51, "nodeName": "node", "type": "Any"}, {"lineNumber": 373, "col_offset": 22, "nodeName": "term", "type": "Any"}, {"lineNumber": 373, "col_offset": 30, "nodeName": "terms", "type": "List[Any]"}, {"lineNumber": 374, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "terms", "type": "Any"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "expressions", "type": "Dict[Any, Any]"}, {"lineNumber": 404, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 406, "col_offset": 28, "nodeName": "expressions", "type": "Dict[Any, Any]"}, {"lineNumber": 406, "col_offset": 50, "nodeName": "term", "type": "Any"}, {"lineNumber": 406, "col_offset": 58, "nodeName": "inverted", "type": "List[Any]"}, {"lineNumber": 408, "col_offset": 15, "nodeName": "expressions", "type": "Dict[Any, Any]"}, {"lineNumber": 409, "col_offset": 44, "nodeName": "stateless", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "new_inverted", "type": "List[Any]"}, {"lineNumber": 411, "col_offset": 16, "nodeName": "iterm", "type": "Any"}, {"lineNumber": 411, "col_offset": 25, "nodeName": "inverted", "type": "List[Any]"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "inverted", "type": "List[Any]"}, {"lineNumber": 416, "col_offset": 23, "nodeName": "new_inverted", "type": "List[Any]"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "inverted_expressions", "type": "Any"}, {"lineNumber": 452, "col_offset": 7, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 458, "col_offset": 7, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 459, "col_offset": 21, "nodeName": "ast", "type": "module"}, {"lineNumber": 460, "col_offset": 22, "nodeName": "ast", "type": "module"}, {"lineNumber": 464, "col_offset": 9, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "op_primary", "type": "Type[_ast.Add]"}, {"lineNumber": 465, "col_offset": 21, "nodeName": "Add", "type": "Type[_ast.Add]"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "op_inverted", "type": "Type[_ast.Sub]"}, {"lineNumber": 466, "col_offset": 22, "nodeName": "Sub", "type": "Type[_ast.Sub]"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "op_null", "type": "float"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "op_py_primary", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "op_py_inverted", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 471, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 472, "col_offset": 7, "nodeName": "node", "type": "Any"}, {"lineNumber": 473, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 473, "col_offset": 33, "nodeName": "op_null", "type": "float"}, {"lineNumber": 484, "col_offset": 11, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 489, "col_offset": 11, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 496, "col_offset": 19, "nodeName": "Num", "type": "Type[_ast.Num]"}, {"lineNumber": 496, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 503, "col_offset": 25, "nodeName": "term", "type": "Any"}, {"lineNumber": 504, "col_offset": 26, "nodeName": "term", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "primary_terms", "type": "List[Any]"}, {"lineNumber": 505, "col_offset": 23, "nodeName": "inverted_terms", "type": "List[Any]"}, {"lineNumber": 505, "col_offset": 40, "nodeName": "cancel_identical_terms", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 505, "col_offset": 63, "nodeName": "primary_terms", "type": "List[Any]"}, {"lineNumber": 506, "col_offset": 63, "nodeName": "inverted_terms", "type": "List[Any]"}, {"lineNumber": 509, "col_offset": 23, "nodeName": "reduced_node", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 509, "col_offset": 36, "nodeName": "primary_terms", "type": "List[Any]"}, {"lineNumber": 509, "col_offset": 51, "nodeName": "op_primary", "type": "Union[Type[_ast.Add], Type[_ast.Mult]]"}, {"lineNumber": 510, "col_offset": 24, "nodeName": "reduced_node", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 510, "col_offset": 37, "nodeName": "inverted_terms", "type": "List[Any]"}, {"lineNumber": 510, "col_offset": 53, "nodeName": "op_primary", "type": "Union[Type[_ast.Add], Type[_ast.Mult]]"}, {"lineNumber": 513, "col_offset": 15, "nodeName": "reduced_node", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 513, "col_offset": 50, "nodeName": "op_primary", "type": "Union[Type[_ast.Add], Type[_ast.Mult]]"}, {"lineNumber": 514, "col_offset": 11, "nodeName": "prod_inverted", "type": "Any"}, {"lineNumber": 517, "col_offset": 12, "nodeName": "node", "type": "_ast.BinOp"}, {"lineNumber": 520, "col_offset": 15, "nodeName": "Num", "type": "Type[_ast.Num]"}, {"lineNumber": 520, "col_offset": 23, "nodeName": "op_null_with_dtype", "type": "Union[float, int]"}, {"lineNumber": 521, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 521, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 522, "col_offset": 15, "nodeName": "BinOp", "type": "Type[_ast.BinOp]"}, {"lineNumber": 522, "col_offset": 68, "nodeName": "node", "type": "Any"}, {"lineNumber": 531, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 535, "col_offset": 18, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 538, "col_offset": 12, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "collect_commutative", "type": "Callable[..., Any]"}, {"lineNumber": 539, "col_offset": 28, "nodeName": "left", "type": "Any"}, {"lineNumber": 539, "col_offset": 39, "nodeName": "primary", "type": "Union[Type[_ast.Add], Type[_ast.Mult]]"}, {"lineNumber": 539, "col_offset": 48, "nodeName": "inverted", "type": "Union[Type[_ast.Sub], Type[_ast.Div]]"}, {"lineNumber": 539, "col_offset": 58, "nodeName": "terms_primary", "type": "List[Any]"}, {"lineNumber": 539, "col_offset": 73, "nodeName": "terms_inverted", "type": "List[Any]"}, {"lineNumber": 546, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 550, "col_offset": 11, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 550, "col_offset": 32, "nodeName": "primary", "type": "Union[Type[_ast.Add], Type[_ast.Mult]]"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "v", "type": "Any"}, {"lineNumber": 20, "col_offset": 37, "nodeName": "k", "type": "Any"}, {"lineNumber": 20, "col_offset": 40, "nodeName": "v", "type": "Any"}, {"lineNumber": 20, "col_offset": 45, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "value", "type": "Any"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "simplifier", "type": "Simplifier"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 84, "col_offset": 58, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "constant", "type": "Any"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "subexpression", "type": "Any"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 90, "col_offset": 57, "nodeName": "simplifier", "type": "Simplifier"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "var", "type": "Any"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "product", "type": "Callable"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "subs", "type": "Dict[nothing, str]"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "curexpr", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "curexpr", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "key", "type": "Tuple[Tuple[nothing, nothing], ...]"}, {"lineNumber": 105, "col_offset": 44, "nodeName": "curexpr", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "new_stmt", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "new_stmt", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "new_stmt", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "new_stmt", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "new_vector_statements", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "simplifier", "type": "Simplifier"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "simplifier", "type": "Simplifier"}, {"lineNumber": 116, "col_offset": 54, "nodeName": "name", "type": "Any"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "dtype_name", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "dtype", "type": "Type[int]"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "dtype", "type": "Type[float]"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 124, "col_offset": 35, "nodeName": "dtype", "type": "Union[Type[float], Type[int], Type[bool]]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "new_scalar_statements", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "BrianASTRenderer", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "node", "type": "Any"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "render_node", "type": "Any"}, {"lineNumber": 183, "col_offset": 65, "nodeName": "node", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 196, "col_offset": 45, "nodeName": "self", "type": "ArithmeticSimplifier"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "val", "type": "bool"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "newnode", "type": "_ast.Num"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "newnode", "type": "Union[_ast.Num, _ast.NameConstant]"}, {"lineNumber": 211, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "newnode", "type": "Union[_ast.Num, _ast.NameConstant]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "newnode", "type": "Union[_ast.Num, _ast.NameConstant]"}, {"lineNumber": 213, "col_offset": 32, "nodeName": "node", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "newnode", "type": "Union[_ast.Num, _ast.NameConstant]"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "newnode", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "collected", "type": "bool"}, {"lineNumber": 224, "col_offset": 27, "nodeName": "self", "type": "ArithmeticSimplifier"}, {"lineNumber": 224, "col_offset": 44, "nodeName": "node", "type": "Any"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "self", "type": "ArithmeticSimplifier"}, {"lineNumber": 225, "col_offset": 46, "nodeName": "node", "type": "Any"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 242, "col_offset": 13, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 268, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 269, "col_offset": 28, "nodeName": "left", "type": "Any"}, {"lineNumber": 269, "col_offset": 39, "nodeName": "right", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "BrianASTRenderer", "type": "Any"}, {"lineNumber": 311, "col_offset": 31, "nodeName": "extra_lio_prefix", "type": "Union[str, Any]"}, {"lineNumber": 315, "col_offset": 31, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 316, "col_offset": 15, "nodeName": "arithmetic_simplifier", "type": "ArithmeticSimplifier"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "node_renderer", "type": "brian2.parsing.rendering.NodeRenderer"}, {"lineNumber": 325, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 325, "col_offset": 27, "nodeName": "complexity", "type": "Any"}, {"lineNumber": 326, "col_offset": 19, "nodeName": "render_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 327, "col_offset": 15, "nodeName": "expr", "type": "Any"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "loop_invariants", "type": "collections.OrderedDict[Any, str]"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "name", "type": "nothing"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "n", "type": "int"}, {"lineNumber": 331, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 332, "col_offset": 45, "nodeName": "name", "type": "str"}, {"lineNumber": 333, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 334, "col_offset": 16, "nodeName": "numpy_dtype", "type": "Union[Type[bool], Type[float], Type[int]]"}, {"lineNumber": 339, "col_offset": 22, "nodeName": "Name", "type": "Type[_ast.Name]"}, {"lineNumber": 339, "col_offset": 31, "nodeName": "name", "type": "str"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "newnode", "type": "_ast.Name"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "newnode", "type": "_ast.Name"}, {"lineNumber": 341, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "newnode", "type": "_ast.Name"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "newnode", "type": "_ast.Name"}, {"lineNumber": 343, "col_offset": 32, "nodeName": "node", "type": "Any"}, {"lineNumber": 373, "col_offset": 39, "nodeName": "term", "type": "Any"}, {"lineNumber": 403, "col_offset": 24, "nodeName": "node", "type": "Any"}, {"lineNumber": 403, "col_offset": 56, "nodeName": "node", "type": "Any"}, {"lineNumber": 403, "col_offset": 64, "nodeName": "primary", "type": "List[Any]"}, {"lineNumber": 406, "col_offset": 40, "nodeName": "term", "type": "Any"}, {"lineNumber": 408, "col_offset": 27, "nodeName": "term", "type": "Any"}, {"lineNumber": 409, "col_offset": 11, "nodeName": "expr", "type": "Any"}, {"lineNumber": 409, "col_offset": 19, "nodeName": "inverted_expressions", "type": "Any"}, {"lineNumber": 409, "col_offset": 44, "nodeName": "term", "type": "Any"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 419, "col_offset": 31, "nodeName": "term", "type": "Any"}, {"lineNumber": 452, "col_offset": 7, "nodeName": "node", "type": "Any"}, {"lineNumber": 458, "col_offset": 7, "nodeName": "op", "type": "Any"}, {"lineNumber": 462, "col_offset": 37, "nodeName": "x", "type": "float"}, {"lineNumber": 462, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 463, "col_offset": 38, "nodeName": "x", "type": "Union[Any, float]"}, {"lineNumber": 463, "col_offset": 40, "nodeName": "y", "type": "Any"}, {"lineNumber": 464, "col_offset": 9, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 465, "col_offset": 21, "nodeName": "ast", "type": "module"}, {"lineNumber": 466, "col_offset": 22, "nodeName": "ast", "type": "module"}, {"lineNumber": 484, "col_offset": 11, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 485, "col_offset": 16, "nodeName": "op_py_primary", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 485, "col_offset": 30, "nodeName": "x", "type": "float"}, {"lineNumber": 485, "col_offset": 33, "nodeName": "n", "type": "Any"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 487, "col_offset": 43, "nodeName": "term", "type": "Any"}, {"lineNumber": 489, "col_offset": 11, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 490, "col_offset": 16, "nodeName": "op_py_inverted", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 490, "col_offset": 31, "nodeName": "x", "type": "Union[Any, float]"}, {"lineNumber": 490, "col_offset": 34, "nodeName": "n", "type": "Any"}, {"lineNumber": 492, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 492, "col_offset": 44, "nodeName": "term", "type": "Any"}, {"lineNumber": 496, "col_offset": 19, "nodeName": "ast", "type": "module"}, {"lineNumber": 503, "col_offset": 34, "nodeName": "term", "type": "Any"}, {"lineNumber": 503, "col_offset": 42, "nodeName": "terms_primary", "type": "List[Any]"}, {"lineNumber": 504, "col_offset": 35, "nodeName": "term", "type": "Any"}, {"lineNumber": 504, "col_offset": 43, "nodeName": "terms_inverted", "type": "List[Any]"}, {"lineNumber": 513, "col_offset": 29, "nodeName": "node", "type": "Optional[_ast.Num]"}, {"lineNumber": 513, "col_offset": 35, "nodeName": "prod_primary", "type": "Any"}, {"lineNumber": 515, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 516, "col_offset": 16, "nodeName": "node", "type": "_ast.Num"}, {"lineNumber": 517, "col_offset": 19, "nodeName": "BinOp", "type": "Type[_ast.BinOp]"}, {"lineNumber": 517, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 517, "col_offset": 50, "nodeName": "prod_inverted", "type": "Any"}, {"lineNumber": 520, "col_offset": 15, "nodeName": "ast", "type": "module"}, {"lineNumber": 521, "col_offset": 34, "nodeName": "dtype_hierarchy", "type": "Any"}, {"lineNumber": 521, "col_offset": 62, "nodeName": "dtype_hierarchy", "type": "Any"}, {"lineNumber": 522, "col_offset": 15, "nodeName": "ast", "type": "module"}, {"lineNumber": 522, "col_offset": 25, "nodeName": "Num", "type": "Type[_ast.Num]"}, {"lineNumber": 522, "col_offset": 33, "nodeName": "op_null_with_dtype", "type": "Union[float, int]"}, {"lineNumber": 522, "col_offset": 54, "nodeName": "op_primary", "type": "Union[Type[_ast.Add], Type[_ast.Mult]]"}, {"lineNumber": 531, "col_offset": 17, "nodeName": "node", "type": "Any"}, {"lineNumber": 535, "col_offset": 18, "nodeName": "left", "type": "Any"}, {"lineNumber": 536, "col_offset": 21, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 536, "col_offset": 29, "nodeName": "left", "type": "Any"}, {"lineNumber": 536, "col_offset": 50, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 538, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 538, "col_offset": 39, "nodeName": "primary", "type": "Union[Type[_ast.Add], Type[_ast.Mult]]"}, {"lineNumber": 538, "col_offset": 48, "nodeName": "inverted", "type": "Union[Type[_ast.Sub], Type[_ast.Div]]"}, {"lineNumber": 539, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 540, "col_offset": 44, "nodeName": "add_to_inverted", "type": "bool"}, {"lineNumber": 543, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 543, "col_offset": 34, "nodeName": "left", "type": "Any"}, {"lineNumber": 545, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 545, "col_offset": 33, "nodeName": "left", "type": "Any"}, {"lineNumber": 546, "col_offset": 19, "nodeName": "right", "type": "Any"}, {"lineNumber": 547, "col_offset": 21, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 547, "col_offset": 29, "nodeName": "right", "type": "Any"}, {"lineNumber": 547, "col_offset": 51, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 549, "col_offset": 40, "nodeName": "primary", "type": "Union[Type[_ast.Add], Type[_ast.Mult]]"}, {"lineNumber": 549, "col_offset": 49, "nodeName": "inverted", "type": "Union[Type[_ast.Sub], Type[_ast.Div]]"}, {"lineNumber": 550, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 551, "col_offset": 12, "nodeName": "collect_commutative", "type": "Callable[..., Any]"}, {"lineNumber": 551, "col_offset": 32, "nodeName": "right", "type": "Any"}, {"lineNumber": 551, "col_offset": 44, "nodeName": "primary", "type": "Union[Type[_ast.Add], Type[_ast.Mult]]"}, {"lineNumber": 551, "col_offset": 53, "nodeName": "inverted", "type": "Union[Type[_ast.Sub], Type[_ast.Div]]"}, {"lineNumber": 551, "col_offset": 63, "nodeName": "terms_primary", "type": "List[Any]"}, {"lineNumber": 551, "col_offset": 78, "nodeName": "terms_inverted", "type": "List[Any]"}, {"lineNumber": 554, "col_offset": 12, "nodeName": "collect_commutative", "type": "Callable[..., Any]"}, {"lineNumber": 554, "col_offset": 32, "nodeName": "right", "type": "Any"}, {"lineNumber": 554, "col_offset": 44, "nodeName": "primary", "type": "Union[Type[_ast.Add], Type[_ast.Mult]]"}, {"lineNumber": 554, "col_offset": 53, "nodeName": "inverted", "type": "Union[Type[_ast.Sub], Type[_ast.Div]]"}, {"lineNumber": 554, "col_offset": 63, "nodeName": "terms_primary", "type": "List[Any]"}, {"lineNumber": 554, "col_offset": 78, "nodeName": "terms_inverted", "type": "List[Any]"}, {"lineNumber": 557, "col_offset": 36, "nodeName": "op_primary", "type": "bool"}, {"lineNumber": 557, "col_offset": 52, "nodeName": "add_to_inverted", "type": "bool"}, {"lineNumber": 558, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 558, "col_offset": 33, "nodeName": "right", "type": "Any"}, {"lineNumber": 560, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 560, "col_offset": 34, "nodeName": "right", "type": "Any"}, {"lineNumber": 20, "col_offset": 45, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 21, "col_offset": 41, "nodeName": "k", "type": "Any"}, {"lineNumber": 21, "col_offset": 44, "nodeName": "v", "type": "Any"}, {"lineNumber": 21, "col_offset": 49, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 92, "col_offset": 40, "nodeName": "iterkeys", "type": "Any"}, {"lineNumber": 92, "col_offset": 63, "nodeName": "var", "type": "Any"}, {"lineNumber": 92, "col_offset": 70, "nodeName": "idents", "type": "Set[Any]"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "var", "type": "Any"}, {"lineNumber": 95, "col_offset": 51, "nodeName": "used_boolvars", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "itertools", "type": "module"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "bool_space", "type": "List[List[bool]]"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "word_substitute", "type": "Callable"}, {"lineNumber": 102, "col_offset": 42, "nodeName": "new_expr", "type": "Any"}, {"lineNumber": 102, "col_offset": 52, "nodeName": "subs", "type": "Dict[nothing, str]"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "render_expr", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 49, "nodeName": "curexpr", "type": "Any"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "expanded_expressions", "type": "Dict[Tuple[Tuple[nothing, nothing], ...], Any]"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "complexities", "type": "Dict[Tuple[Tuple[nothing, nothing], ...], Any]"}, {"lineNumber": 106, "col_offset": 36, "nodeName": "expression_complexity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 58, "nodeName": "curexpr", "type": "Any"}, {"lineNumber": 106, "col_offset": 67, "nodeName": "variables", "type": "Any"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "NodeRenderer", "type": "Type[brian2.parsing.rendering.NodeRenderer]"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 199, "col_offset": 27, "nodeName": "val", "type": "Any"}, {"lineNumber": 200, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 200, "col_offset": 27, "nodeName": "ast", "type": "module"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "newnode", "type": "_ast.NameConstant"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "val", "type": "int"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "val", "type": "float"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "Num", "type": "Type[_ast.Num]"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "val", "type": "Union[float, int, bool]"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "render_node", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "newnode", "type": "Any"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "render_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 40, "nodeName": "newnode", "type": "Any"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 226, "col_offset": 21, "nodeName": "ArithmeticSimplifier", "type": "Type[ArithmeticSimplifier]"}, {"lineNumber": 226, "col_offset": 43, "nodeName": "self", "type": "ArithmeticSimplifier"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 230, "col_offset": 36, "nodeName": "left", "type": "Any"}, {"lineNumber": 230, "col_offset": 42, "nodeName": "right", "type": "Any"}, {"lineNumber": 231, "col_offset": 36, "nodeName": "right", "type": "Any"}, {"lineNumber": 231, "col_offset": 43, "nodeName": "left", "type": "Any"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 242, "col_offset": 13, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 244, "col_offset": 19, "nodeName": "stateless", "type": "Any"}, {"lineNumber": 252, "col_offset": 13, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 268, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 269, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 269, "col_offset": 39, "nodeName": "node", "type": "Any"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "dtype", "type": "str"}, {"lineNumber": 272, "col_offset": 20, "nodeName": "n", "type": "Any"}, {"lineNumber": 316, "col_offset": 15, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 325, "col_offset": 27, "nodeName": "node", "type": "Any"}, {"lineNumber": 326, "col_offset": 19, "nodeName": "node_renderer", "type": "brian2.parsing.rendering.NodeRenderer"}, {"lineNumber": 326, "col_offset": 50, "nodeName": "render_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 326, "col_offset": 89, "nodeName": "node", "type": "Any"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 328, "col_offset": 23, "nodeName": "loop_invariants", "type": "collections.OrderedDict[Any, str]"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "loop_invariants", "type": "collections.OrderedDict[Any, str]"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "loop_invariant_dtypes", "type": "Dict[str, Any]"}, {"lineNumber": 333, "col_offset": 51, "nodeName": "node", "type": "Any"}, {"lineNumber": 337, "col_offset": 16, "nodeName": "variables", "type": "Any"}, {"lineNumber": 337, "col_offset": 39, "nodeName": "AuxiliaryVariable", "type": "Type[brian2.core.variables.AuxiliaryVariable]"}, {"lineNumber": 337, "col_offset": 57, "nodeName": "name", "type": "str"}, {"lineNumber": 337, "col_offset": 63, "nodeName": "DIMENSIONLESS", "type": "brian2.units.fundamentalunits.Dimension"}, {"lineNumber": 339, "col_offset": 22, "nodeName": "ast", "type": "module"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 346, "col_offset": 21, "nodeName": "Simplifier", "type": "Type[Simplifier]"}, {"lineNumber": 346, "col_offset": 33, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 403, "col_offset": 30, "nodeName": "render_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 403, "col_offset": 45, "nodeName": "node", "type": "Any"}, {"lineNumber": 404, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 404, "col_offset": 61, "nodeName": "node", "type": "Any"}, {"lineNumber": 404, "col_offset": 69, "nodeName": "inverted", "type": "List[Any]"}, {"lineNumber": 412, "col_offset": 41, "nodeName": "expr", "type": "Any"}, {"lineNumber": 413, "col_offset": 19, "nodeName": "expr", "type": "str"}, {"lineNumber": 417, "col_offset": 36, "nodeName": "expressions", "type": "Dict[Any, Any]"}, {"lineNumber": 417, "col_offset": 58, "nodeName": "term", "type": "Any"}, {"lineNumber": 417, "col_offset": 66, "nodeName": "inverted", "type": "List[Any]"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "new_primary", "type": "List[Any]"}, {"lineNumber": 458, "col_offset": 7, "nodeName": "node", "type": "Any"}, {"lineNumber": 464, "col_offset": 9, "nodeName": "op", "type": "Any"}, {"lineNumber": 468, "col_offset": 37, "nodeName": "x", "type": "float"}, {"lineNumber": 468, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 469, "col_offset": 38, "nodeName": "x", "type": "Union[Any, float]"}, {"lineNumber": 469, "col_offset": 40, "nodeName": "y", "type": "Any"}, {"lineNumber": 484, "col_offset": 11, "nodeName": "term", "type": "Any"}, {"lineNumber": 485, "col_offset": 33, "nodeName": "term", "type": "Any"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "remaining_terms_primary", "type": "List[Any]"}, {"lineNumber": 489, "col_offset": 11, "nodeName": "term", "type": "Any"}, {"lineNumber": 490, "col_offset": 34, "nodeName": "term", "type": "Any"}, {"lineNumber": 492, "col_offset": 12, "nodeName": "remaining_terms_inverted", "type": "List[Any]"}, {"lineNumber": 503, "col_offset": 59, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 503, "col_offset": 74, "nodeName": "scalar", "type": "bool"}, {"lineNumber": 504, "col_offset": 61, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 504, "col_offset": 76, "nodeName": "scalar", "type": "bool"}, {"lineNumber": 516, "col_offset": 23, "nodeName": "Num", "type": "Type[_ast.Num]"}, {"lineNumber": 516, "col_offset": 31, "nodeName": "op_null_with_dtype", "type": "Union[float, int]"}, {"lineNumber": 517, "col_offset": 19, "nodeName": "ast", "type": "module"}, {"lineNumber": 517, "col_offset": 35, "nodeName": "op_inverted", "type": "Union[Type[_ast.Sub], Type[_ast.Div]]"}, {"lineNumber": 521, "col_offset": 50, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 521, "col_offset": 78, "nodeName": "orignode_dtype", "type": "Any"}, {"lineNumber": 522, "col_offset": 25, "nodeName": "ast", "type": "module"}, {"lineNumber": 535, "col_offset": 18, "nodeName": "node", "type": "Any"}, {"lineNumber": 536, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 536, "col_offset": 50, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "left", "type": "Any"}, {"lineNumber": 538, "col_offset": 12, "nodeName": "left", "type": "Any"}, {"lineNumber": 543, "col_offset": 12, "nodeName": "terms_inverted", "type": "Any"}, {"lineNumber": 543, "col_offset": 34, "nodeName": "node", "type": "Any"}, {"lineNumber": 545, "col_offset": 12, "nodeName": "terms_primary", "type": "List[Any]"}, {"lineNumber": 545, "col_offset": 33, "nodeName": "node", "type": "Any"}, {"lineNumber": 546, "col_offset": 19, "nodeName": "node", "type": "Any"}, {"lineNumber": 547, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 547, "col_offset": 51, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "right", "type": "Any"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "right", "type": "Any"}, {"lineNumber": 550, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 551, "col_offset": 32, "nodeName": "node", "type": "Any"}, {"lineNumber": 552, "col_offset": 48, "nodeName": "add_to_inverted", "type": "bool"}, {"lineNumber": 554, "col_offset": 32, "nodeName": "node", "type": "Any"}, {"lineNumber": 557, "col_offset": 16, "nodeName": "add_to_inverted", "type": "bool"}, {"lineNumber": 557, "col_offset": 76, "nodeName": "op_primary", "type": "bool"}, {"lineNumber": 558, "col_offset": 12, "nodeName": "terms_primary", "type": "List[Any]"}, {"lineNumber": 558, "col_offset": 33, "nodeName": "node", "type": "Any"}, {"lineNumber": 560, "col_offset": 12, "nodeName": "terms_inverted", "type": "List[Any]"}, {"lineNumber": 560, "col_offset": 34, "nodeName": "node", "type": "Any"}, {"lineNumber": 21, "col_offset": 49, "nodeName": "DEFAULT_CONSTANTS", "type": "Dict[str, brian2.core.functions.SymbolicConstant]"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "variables", "type": "Any"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "v", "type": "Any"}, {"lineNumber": 92, "col_offset": 40, "nodeName": "boolvars", "type": "Dict[Any, Any]"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "simplifier", "type": "Simplifier"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "key", "type": "Tuple[Tuple[nothing, nothing], ...]"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "key", "type": "Tuple[Tuple[nothing, nothing], ...]"}, {"lineNumber": 106, "col_offset": 67, "nodeName": "simplifier", "type": "Simplifier"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "ArithmeticSimplifier", "type": "Type[ArithmeticSimplifier]"}, {"lineNumber": 183, "col_offset": 47, "nodeName": "self", "type": "ArithmeticSimplifier"}, {"lineNumber": 201, "col_offset": 30, "nodeName": "NameConstant", "type": "Type[_ast.NameConstant]"}, {"lineNumber": 201, "col_offset": 47, "nodeName": "val", "type": "bool"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "node", "type": "Any"}, {"lineNumber": 206, "col_offset": 22, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 206, "col_offset": 26, "nodeName": "val", "type": "Any"}, {"lineNumber": 208, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "val", "type": "Any"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "ast", "type": "module"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 220, "col_offset": 83, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 220, "col_offset": 91, "nodeName": "node", "type": "Any"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "bast_renderer", "type": "Any"}, {"lineNumber": 221, "col_offset": 57, "nodeName": "collect", "type": "Callable[[Any], Any]"}, {"lineNumber": 221, "col_offset": 65, "nodeName": "node", "type": "Any"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "self", "type": "ArithmeticSimplifier"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 233, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 235, "col_offset": 27, "nodeName": "stateless", "type": "Any"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 242, "col_offset": 13, "nodeName": "op", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 243, "col_offset": 52, "nodeName": "n", "type": "Any"}, {"lineNumber": 244, "col_offset": 19, "nodeName": "node", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 247, "col_offset": 53, "nodeName": "n", "type": "Any"}, {"lineNumber": 250, "col_offset": 27, "nodeName": "left", "type": "Any"}, {"lineNumber": 252, "col_offset": 13, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 260, "col_offset": 13, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "op", "type": "Any"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "subnode", "type": "Any"}, {"lineNumber": 272, "col_offset": 20, "nodeName": "subnode", "type": "Any"}, {"lineNumber": 272, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 272, "col_offset": 38, "nodeName": "n", "type": "float"}, {"lineNumber": 326, "col_offset": 19, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 326, "col_offset": 50, "nodeName": "arithmetic_simplifier", "type": "ArithmeticSimplifier"}, {"lineNumber": 328, "col_offset": 23, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 328, "col_offset": 44, "nodeName": "expr", "type": "Any"}, {"lineNumber": 331, "col_offset": 31, "nodeName": "extra_lio_prefix", "type": "Any"}, {"lineNumber": 331, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 331, "col_offset": 57, "nodeName": "n", "type": "int"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 332, "col_offset": 37, "nodeName": "expr", "type": "Any"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 333, "col_offset": 43, "nodeName": "name", "type": "str"}, {"lineNumber": 334, "col_offset": 42, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 335, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 336, "col_offset": 40, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 336, "col_offset": 47, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 337, "col_offset": 16, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 337, "col_offset": 31, "nodeName": "name", "type": "str"}, {"lineNumber": 337, "col_offset": 84, "nodeName": "numpy_dtype", "type": "Union[Type[bool], Type[float], Type[int]]"}, {"lineNumber": 403, "col_offset": 30, "nodeName": "nr", "type": "brian2.parsing.rendering.NodeRenderer"}, {"lineNumber": 404, "col_offset": 35, "nodeName": "render_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 404, "col_offset": 50, "nodeName": "node", "type": "Any"}, {"lineNumber": 412, "col_offset": 19, "nodeName": "expressions", "type": "Dict[Any, Any]"}, {"lineNumber": 415, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 415, "col_offset": 40, "nodeName": "iterm", "type": "Any"}, {"lineNumber": 417, "col_offset": 48, "nodeName": "term", "type": "Any"}, {"lineNumber": 464, "col_offset": 9, "nodeName": "node", "type": "Any"}, {"lineNumber": 503, "col_offset": 59, "nodeName": "term", "type": "Any"}, {"lineNumber": 504, "col_offset": 61, "nodeName": "term", "type": "Any"}, {"lineNumber": 516, "col_offset": 23, "nodeName": "ast", "type": "module"}, {"lineNumber": 521, "col_offset": 50, "nodeName": "node", "type": "Any"}, {"lineNumber": 536, "col_offset": 50, "nodeName": "op", "type": "Any"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 538, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 547, "col_offset": 51, "nodeName": "op", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 555, "col_offset": 52, "nodeName": "add_to_inverted", "type": "bool"}, {"lineNumber": 76, "col_offset": 47, "nodeName": "brian_dtype_from_dtype", "type": "Any"}, {"lineNumber": 76, "col_offset": 70, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "var", "type": "nothing"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "var", "type": "nothing"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "val", "type": "nothing"}, {"lineNumber": 201, "col_offset": 30, "nodeName": "ast", "type": "module"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "self", "type": "ArithmeticSimplifier"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "operand", "type": "Any"}, {"lineNumber": 233, "col_offset": 23, "nodeName": "operand", "type": "Any"}, {"lineNumber": 235, "col_offset": 27, "nodeName": "node", "type": "Any"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "operand", "type": "Any"}, {"lineNumber": 240, "col_offset": 35, "nodeName": "other", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 243, "col_offset": 52, "nodeName": "left", "type": "Any"}, {"lineNumber": 246, "col_offset": 27, "nodeName": "_replace_with_zero", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 246, "col_offset": 46, "nodeName": "left", "type": "Any"}, {"lineNumber": 246, "col_offset": 52, "nodeName": "node", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 247, "col_offset": 53, "nodeName": "right", "type": "Any"}, {"lineNumber": 249, "col_offset": 19, "nodeName": "dtype_hierarchy", "type": "Any"}, {"lineNumber": 249, "col_offset": 51, "nodeName": "dtype_hierarchy", "type": "Any"}, {"lineNumber": 252, "col_offset": 13, "nodeName": "op", "type": "Any"}, {"lineNumber": 253, "col_offset": 36, "nodeName": "left", "type": "Any"}, {"lineNumber": 253, "col_offset": 42, "nodeName": "right", "type": "Any"}, {"lineNumber": 254, "col_offset": 36, "nodeName": "right", "type": "Any"}, {"lineNumber": 254, "col_offset": 43, "nodeName": "left", "type": "Any"}, {"lineNumber": 260, "col_offset": 13, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "subnode", "type": "Any"}, {"lineNumber": 272, "col_offset": 38, "nodeName": "subnode", "type": "Any"}, {"lineNumber": 326, "col_offset": 50, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 331, "col_offset": 31, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 331, "col_offset": 57, "nodeName": "self", "type": "Simplifier"}, {"lineNumber": 336, "col_offset": 47, "nodeName": "node", "type": "Any"}, {"lineNumber": 404, "col_offset": 35, "nodeName": "nr", "type": "brian2.parsing.rendering.NodeRenderer"}, {"lineNumber": 412, "col_offset": 31, "nodeName": "iterm", "type": "Any"}, {"lineNumber": 415, "col_offset": 20, "nodeName": "new_inverted", "type": "List[Any]"}, {"lineNumber": 536, "col_offset": 50, "nodeName": "left", "type": "Any"}, {"lineNumber": 547, "col_offset": 51, "nodeName": "right", "type": "Any"}, {"lineNumber": 76, "col_offset": 70, "nodeName": "v", "type": "Any"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 101, "col_offset": 38, "nodeName": "val", "type": "nothing"}, {"lineNumber": 101, "col_offset": 48, "nodeName": "var", "type": "nothing"}, {"lineNumber": 101, "col_offset": 53, "nodeName": "val", "type": "nothing"}, {"lineNumber": 101, "col_offset": 60, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 101, "col_offset": 64, "nodeName": "used_boolvars", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 79, "nodeName": "bool_vals", "type": "Tuple[Any, ...]"}, {"lineNumber": 104, "col_offset": 43, "nodeName": "var", "type": "nothing"}, {"lineNumber": 104, "col_offset": 48, "nodeName": "val", "type": "nothing"}, {"lineNumber": 104, "col_offset": 55, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 104, "col_offset": 59, "nodeName": "used_boolvars", "type": "List[Any]"}, {"lineNumber": 104, "col_offset": 74, "nodeName": "bool_vals", "type": "Tuple[Any, ...]"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 236, "col_offset": 35, "nodeName": "_replace_with_zero", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 236, "col_offset": 54, "nodeName": "operand", "type": "Any"}, {"lineNumber": 236, "col_offset": 63, "nodeName": "node", "type": "Any"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "dtype_hierarchy", "type": "Any"}, {"lineNumber": 239, "col_offset": 61, "nodeName": "dtype_hierarchy", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "left", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "right", "type": "Any"}, {"lineNumber": 249, "col_offset": 35, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 249, "col_offset": 67, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 255, "col_offset": 19, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 255, "col_offset": 59, "nodeName": "n", "type": "Any"}, {"lineNumber": 258, "col_offset": 31, "nodeName": "other", "type": "Any"}, {"lineNumber": 260, "col_offset": 13, "nodeName": "op", "type": "Any"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 261, "col_offset": 53, "nodeName": "n", "type": "Any"}, {"lineNumber": 264, "col_offset": 27, "nodeName": "left", "type": "Any"}, {"lineNumber": 536, "col_offset": 50, "nodeName": "node", "type": "Any"}, {"lineNumber": 547, "col_offset": 51, "nodeName": "node", "type": "Any"}, {"lineNumber": 239, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 239, "col_offset": 77, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 249, "col_offset": 35, "nodeName": "right", "type": "Any"}, {"lineNumber": 249, "col_offset": 67, "nodeName": "left", "type": "Any"}, {"lineNumber": 255, "col_offset": 19, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 255, "col_offset": 59, "nodeName": "operand", "type": "Any"}, {"lineNumber": 257, "col_offset": 23, "nodeName": "dtype_hierarchy", "type": "Any"}, {"lineNumber": 257, "col_offset": 55, "nodeName": "dtype_hierarchy", "type": "Any"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 261, "col_offset": 53, "nodeName": "right", "type": "Any"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "dtype_hierarchy", "type": "Any"}, {"lineNumber": 263, "col_offset": 49, "nodeName": "dtype_hierarchy", "type": "Any"}, {"lineNumber": 239, "col_offset": 43, "nodeName": "operand", "type": "Any"}, {"lineNumber": 239, "col_offset": 77, "nodeName": "other", "type": "Any"}, {"lineNumber": 255, "col_offset": 19, "nodeName": "operand", "type": "Any"}, {"lineNumber": 257, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 257, "col_offset": 71, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "right", "type": "Any"}, {"lineNumber": 263, "col_offset": 35, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 263, "col_offset": 65, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 257, "col_offset": 39, "nodeName": "operand", "type": "Any"}, {"lineNumber": 257, "col_offset": 71, "nodeName": "other", "type": "Any"}, {"lineNumber": 263, "col_offset": 35, "nodeName": "right", "type": "Any"}, {"lineNumber": 263, "col_offset": 65, "nodeName": "left", "type": "Any"}]