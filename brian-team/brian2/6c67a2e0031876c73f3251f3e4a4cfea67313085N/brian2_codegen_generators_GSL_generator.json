[{"lineNumber": 15, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 354, "col_offset": 29, "nodeName": "GSLCodeGenerator", "type": "Type[GSLCodeGenerator]"}, {"lineNumber": 416, "col_offset": 28, "nodeName": "GSLCodeGenerator", "type": "Type[GSLCodeGenerator]"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "func_begin", "type": "str"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "func_end", "type": "str"}, {"lineNumber": 418, "col_offset": 4, "nodeName": "func_begin", "type": "str"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "func_end", "type": "str"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "libraries", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "headers", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "include_dirs", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "method_options", "type": "Any"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "method_options", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "variables", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "variables", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "names", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "names", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "diff_vars", "type": "Dict[str, str]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "expr_set", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "code", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "diff_vars", "type": "Dict[str, str]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "variables", "type": "Any"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "variables", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "start_function", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "open_function", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "end_function", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "code", "type": "str"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "code", "type": "str"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "code", "type": "str"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "code", "type": "str"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "end_function", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "code", "type": "str"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "start_function", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "open_function", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "end_function", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "open_cast", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "close_cast", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "access_pointer", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "allocate_yvector", "type": "str"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "allocate_yvector", "type": "str"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "fill_yvector", "type": "List[str]"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "open_function", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "empty_yvector", "type": "List[str]"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "open_function", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "open_struct", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "end_struct", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "code", "type": "List[str]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "code", "type": "List[Any]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "code", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "variables", "type": "Any"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "variables", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "other_variables", "type": "Dict[Any, brian2.core.variables.AuxiliaryVariable]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "statement", "type": "Any"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "statements", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "other_variables", "type": "Dict[Any, brian2.core.variables.AuxiliaryVariable]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "variables", "type": "Any"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "variables", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "used_variables", "type": "Dict[Any, Any]"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "statement", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "statements", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "used_variables", "type": "Dict[Any, Any]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "access_pointer", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "t_in_code", "type": "None"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "code", "type": "List[nothing]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "code", "type": "List[str]"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "expr_set", "type": "Any"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "code_lines", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "code", "type": "str"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "code", "type": "str"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "code", "type": "str"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "code", "type": "List[Union[Any, str]]"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "code_lines", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "scalar_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "vector_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "vs", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "function_names", "type": "List[Any]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "diff_vars", "type": "Dict[str, str]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "GSL_support_code", "type": "str"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "GSL_support_code", "type": "str"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "other_variables", "type": "Dict[Any, brian2.core.variables.AuxiliaryVariable]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "variables_in_scalar", "type": "Dict[Any, Any]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "variables_in_vector", "type": "Dict[Any, Any]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "GSL_support_code", "type": "str"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "GSL_main_code", "type": "str"}, {"lineNumber": 348, "col_offset": 29, "nodeName": "GSL_main_code", "type": "str"}, {"lineNumber": 350, "col_offset": 31, "nodeName": "method_options", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "syntax", "type": "Dict[str, str]"}, {"lineNumber": 378, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 381, "col_offset": 11, "nodeName": "in_struct", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "code", "type": "List[str]"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "syntax", "type": "Dict[str, str]"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "cpp", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "cpp", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "cpp", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "original_generator_class", "type": "Any"}, {"lineNumber": 34, "col_offset": 64, "nodeName": "variables", "type": "Any"}, {"lineNumber": 34, "col_offset": 75, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 34, "col_offset": 93, "nodeName": "owner", "type": "Any"}, {"lineNumber": 34, "col_offset": 100, "nodeName": "iterate_all", "type": "Any"}, {"lineNumber": 35, "col_offset": 64, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 35, "col_offset": 79, "nodeName": "name", "type": "Any"}, {"lineNumber": 35, "col_offset": 85, "nodeName": "template_name", "type": "Any"}, {"lineNumber": 36, "col_offset": 64, "nodeName": "override_conditional_write", "type": "Any"}, {"lineNumber": 36, "col_offset": 92, "nodeName": "allows_scalar_write", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "generator", "type": "Any"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "item", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "items", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[], Any]"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "expr", "type": "Any"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "diff_num", "type": "Any"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "items", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "idx_name", "type": "str"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "replace_what", "type": "str"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "replace_with", "type": "str"}, {"lineNumber": 96, "col_offset": 39, "nodeName": "replace_with", "type": "str"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "replace_what", "type": "str"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "replace_with", "type": "str"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "replace_with", "type": "str"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "end_function", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "fill_yvector", "type": "List[str]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "empty_yvector", "type": "List[str]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "var", "type": "str"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "diff_num", "type": "str"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "items", "type": "Callable"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "items", "type": "Callable"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "end_struct", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "code", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "var", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "read", "type": "Any"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "write", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "_", "type": "Any"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "array_read_write", "type": "Any"}, {"lineNumber": 196, "col_offset": 47, "nodeName": "statements", "type": "Any"}, {"lineNumber": 197, "col_offset": 20, "nodeName": "read", "type": "Any"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "write", "type": "Any"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "items", "type": "Any"}, {"lineNumber": 222, "col_offset": 11, "nodeName": "t_in_code", "type": "Optional[Any]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "t_declare", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "replace_what", "type": "str"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 235, "col_offset": 28, "nodeName": "items", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "in_vector", "type": "bool"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "in_scalar", "type": "bool"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 243, "col_offset": 27, "nodeName": "code", "type": "List[nothing]"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 251, "col_offset": 27, "nodeName": "code", "type": "List[str]"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "word_substitute", "type": "Callable"}, {"lineNumber": 252, "col_offset": 31, "nodeName": "code", "type": "str"}, {"lineNumber": 252, "col_offset": 37, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "from_sub", "type": "Any"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "to_sub", "type": "str"}, {"lineNumber": 255, "col_offset": 32, "nodeName": "items", "type": "Callable"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "actual_var", "type": "str"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 279, "col_offset": 27, "nodeName": "code", "type": "List[Union[Any, str]]"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "ac_name", "type": "Any"}, {"lineNumber": 287, "col_offset": 21, "nodeName": "ac_code", "type": "Any"}, {"lineNumber": 287, "col_offset": 32, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "statements", "type": "Tuple[Any, Any]"}, {"lineNumber": 293, "col_offset": 69, "nodeName": "statements", "type": "Tuple[Any, Any]"}, {"lineNumber": 294, "col_offset": 18, "nodeName": "itervalues", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 313, "col_offset": 30, "nodeName": "find_function_names", "type": "Callable[[], Any]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "scalar_code", "type": "Any"}, {"lineNumber": 315, "col_offset": 21, "nodeName": "vector_code", "type": "Any"}, {"lineNumber": 315, "col_offset": 34, "nodeName": "kwds", "type": "Any"}, {"lineNumber": 315, "col_offset": 41, "nodeName": "translate_statement_sequence", "type": "Any"}, {"lineNumber": 315, "col_offset": 85, "nodeName": "scalar_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 316, "col_offset": 49, "nodeName": "vector_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 321, "col_offset": 20, "nodeName": "find_differential_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 322, "col_offset": 21, "nodeName": "diff_var_to_replace", "type": "Callable[[Any], Any]"}, {"lineNumber": 322, "col_offset": 46, "nodeName": "diff_vars", "type": "Dict[str, str]"}, {"lineNumber": 323, "col_offset": 27, "nodeName": "get_dimension_code", "type": "Callable[[Any], Any]"}, {"lineNumber": 324, "col_offset": 28, "nodeName": "yvector_code", "type": "Callable[[Any], Any]"}, {"lineNumber": 324, "col_offset": 46, "nodeName": "diff_vars", "type": "Dict[str, str]"}, {"lineNumber": 328, "col_offset": 26, "nodeName": "find_undefined_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 329, "col_offset": 30, "nodeName": "find_used_variables", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 329, "col_offset": 80, "nodeName": "other_variables", "type": "Dict[Any, brian2.core.variables.AuxiliaryVariable]"}, {"lineNumber": 330, "col_offset": 30, "nodeName": "find_used_variables", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 330, "col_offset": 80, "nodeName": "other_variables", "type": "Dict[Any, brian2.core.variables.AuxiliaryVariable]"}, {"lineNumber": 333, "col_offset": 72, "nodeName": "GSL_support_code", "type": "str"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 337, "col_offset": 24, "nodeName": "unpack_namespace", "type": "Callable[..., Any]"}, {"lineNumber": 337, "col_offset": 46, "nodeName": "variables_in_vector", "type": "Dict[Any, Any]"}, {"lineNumber": 337, "col_offset": 67, "nodeName": "variables_in_scalar", "type": "Dict[Any, Any]"}, {"lineNumber": 341, "col_offset": 96, "nodeName": "func_end", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "scalar_code", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "kwds", "type": "Any"}, {"lineNumber": 350, "col_offset": 31, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "kwds", "type": "Any"}, {"lineNumber": 351, "col_offset": 38, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "scalar_code", "type": "Any"}, {"lineNumber": 352, "col_offset": 28, "nodeName": "vector_code", "type": "Any"}, {"lineNumber": 352, "col_offset": 41, "nodeName": "kwds", "type": "Any"}, {"lineNumber": 362, "col_offset": 15, "nodeName": "c_data_type", "type": "Any"}, {"lineNumber": 362, "col_offset": 27, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 375, "col_offset": 15, "nodeName": "syntax", "type": "Dict[str, str]"}, {"lineNumber": 387, "col_offset": 15, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 387, "col_offset": 45, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "get_array_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 390, "col_offset": 35, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 393, "col_offset": 16, "nodeName": "c_data_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 393, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 394, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 394, "col_offset": 22, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 394, "col_offset": 31, "nodeName": "ArrayVariable", "type": "Type[brian2.core.variables.ArrayVariable]"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 402, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 402, "col_offset": 22, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 402, "col_offset": 31, "nodeName": "ArrayVariable", "type": "Type[brian2.core.variables.ArrayVariable]"}, {"lineNumber": 403, "col_offset": 12, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 405, "col_offset": 15, "nodeName": "in_vector", "type": "Any"}, {"lineNumber": 407, "col_offset": 15, "nodeName": "in_scalar", "type": "Any"}, {"lineNumber": 410, "col_offset": 15, "nodeName": "in_vector", "type": "Any"}, {"lineNumber": 412, "col_offset": 15, "nodeName": "in_scalar", "type": "Any"}, {"lineNumber": 414, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 414, "col_offset": 27, "nodeName": "code", "type": "Any"}, {"lineNumber": 434, "col_offset": 15, "nodeName": "syntax", "type": "Dict[str, str]"}, {"lineNumber": 437, "col_offset": 15, "nodeName": "type", "type": "Any"}, {"lineNumber": 437, "col_offset": 22, "nodeName": "var", "type": "Any"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 443, "col_offset": 45, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 446, "col_offset": 15, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 446, "col_offset": 45, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 449, "col_offset": 16, "nodeName": "c_data_type", "type": "Any"}, {"lineNumber": 449, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 450, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 450, "col_offset": 22, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 450, "col_offset": 31, "nodeName": "ArrayVariable", "type": "Type[brian2.core.variables.ArrayVariable]"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "restrict", "type": "Any"}, {"lineNumber": 452, "col_offset": 23, "nodeName": "restrict", "type": "Any"}, {"lineNumber": 453, "col_offset": 15, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 460, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 460, "col_offset": 22, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 460, "col_offset": 31, "nodeName": "ArrayVariable", "type": "Type[brian2.core.variables.ArrayVariable]"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 462, "col_offset": 12, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 463, "col_offset": 15, "nodeName": "in_vector", "type": "Any"}, {"lineNumber": 468, "col_offset": 15, "nodeName": "in_vector", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "codegen", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "codegen", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "codegen", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "variables", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "Function", "type": "Type[brian2.core.functions.Function]"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "names", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "Constant", "type": "Type[brian2.core.variables.Constant]"}, {"lineNumber": 61, "col_offset": 49, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 61, "col_offset": 60, "nodeName": "device", "type": "Any"}, {"lineNumber": 61, "col_offset": 68, "nodeName": "CPPStandaloneDevice", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "split", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "expr", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "diff_vars", "type": "Any"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "var_init", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "variables", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 92, "col_offset": 55, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 109, "col_offset": 110, "nodeName": "start_function", "type": "Any"}, {"lineNumber": 110, "col_offset": 106, "nodeName": "open_function", "type": "Any"}, {"lineNumber": 111, "col_offset": 79, "nodeName": "diff_num", "type": "Any"}, {"lineNumber": 111, "col_offset": 103, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 112, "col_offset": 79, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 125, "col_offset": 110, "nodeName": "start_function", "type": "Any"}, {"lineNumber": 126, "col_offset": 109, "nodeName": "open_function", "type": "Any"}, {"lineNumber": 127, "col_offset": 111, "nodeName": "open_cast", "type": "Any"}, {"lineNumber": 128, "col_offset": 112, "nodeName": "close_cast", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "diff_vars", "type": "Dict[str, str]"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 152, "col_offset": 77, "nodeName": "join", "type": "Callable"}, {"lineNumber": 152, "col_offset": 88, "nodeName": "empty_yvector", "type": "List[str]"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 159, "col_offset": 60, "nodeName": "open_struct", "type": "Any"}, {"lineNumber": 160, "col_offset": 70, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "variables_in_vector", "type": "Dict[Any, Any]"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "is_constant_and_cpp_standalone", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 51, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "expr", "type": "Any"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "comment", "type": "Any"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "var", "type": "Any"}, {"lineNumber": 174, "col_offset": 53, "nodeName": "op", "type": "Any"}, {"lineNumber": 175, "col_offset": 38, "nodeName": "expr", "type": "Any"}, {"lineNumber": 175, "col_offset": 54, "nodeName": "comment", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "variables", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 184, "col_offset": 26, "nodeName": "comment", "type": "Any"}, {"lineNumber": 184, "col_offset": 37, "nodeName": "var", "type": "Any"}, {"lineNumber": 184, "col_offset": 52, "nodeName": "op", "type": "Any"}, {"lineNumber": 185, "col_offset": 38, "nodeName": "expr", "type": "Any"}, {"lineNumber": 185, "col_offset": 54, "nodeName": "comment", "type": "Any"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "get_identifiers", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 186, "col_offset": 40, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 193, "col_offset": 38, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 198, "col_offset": 26, "nodeName": "used_variables", "type": "Dict[Any, Any]"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "variables_in_vector", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "t_in_code", "type": "Any"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "is_constant_and_cpp_standalone", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 51, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 215, "col_offset": 35, "nodeName": "ArrayVariable", "type": "Type[brian2.core.variables.ArrayVariable]"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "var_init", "type": "Any"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "get_pointer_name", "type": "Any"}, {"lineNumber": 224, "col_offset": 47, "nodeName": "t_in_code", "type": "Optional[Any]"}, {"lineNumber": 225, "col_offset": 28, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 226, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 235, "col_offset": 28, "nodeName": "variables", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "ignore", "type": "List[str]"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "is_constant_and_cpp_standalone", "type": "Callable[[Any], Any]"}, {"lineNumber": 238, "col_offset": 51, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "var", "type": "Any"}, {"lineNumber": 240, "col_offset": 31, "nodeName": "variables_in_vector", "type": "Dict[Any, Any]"}, {"lineNumber": 241, "col_offset": 24, "nodeName": "var", "type": "Any"}, {"lineNumber": 241, "col_offset": 31, "nodeName": "variables_in_scalar", "type": "Dict[Any, Any]"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "split", "type": "Any"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "code", "type": "List[str]"}, {"lineNumber": 255, "col_offset": 32, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "search", "type": "Callable"}, {"lineNumber": 256, "col_offset": 42, "nodeName": "from_sub", "type": "Any"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "code", "type": "str"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "search", "type": "Callable"}, {"lineNumber": 270, "col_offset": 49, "nodeName": "var", "type": "Any"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "group", "type": "Callable"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "actual_var", "type": "str"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "code", "type": "List[Union[Any, str]]"}, {"lineNumber": 274, "col_offset": 15, "nodeName": "actual_var", "type": "str"}, {"lineNumber": 287, "col_offset": 32, "nodeName": "code", "type": "Any"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "make_statements", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 288, "col_offset": 41, "nodeName": "ac_code", "type": "Any"}, {"lineNumber": 289, "col_offset": 41, "nodeName": "variables", "type": "Any"}, {"lineNumber": 290, "col_offset": 41, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 294, "col_offset": 18, "nodeName": "vector_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 302, "col_offset": 19, "nodeName": "OrderDependenceError", "type": "Type[brian2.codegen.permutation_analysis.OrderDependenceError]"}, {"lineNumber": 313, "col_offset": 30, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 315, "col_offset": 41, "nodeName": "generator", "type": "Any"}, {"lineNumber": 321, "col_offset": 20, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 321, "col_offset": 53, "nodeName": "values", "type": "Any"}, {"lineNumber": 322, "col_offset": 21, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 323, "col_offset": 27, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 323, "col_offset": 51, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 323, "col_offset": 55, "nodeName": "diff_vars", "type": "Dict[str, str]"}, {"lineNumber": 324, "col_offset": 28, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 328, "col_offset": 26, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 329, "col_offset": 30, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 329, "col_offset": 55, "nodeName": "scalar_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 330, "col_offset": 30, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 330, "col_offset": 55, "nodeName": "vector_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 333, "col_offset": 27, "nodeName": "write_dataholder", "type": "Callable[[Any], Any]"}, {"lineNumber": 333, "col_offset": 49, "nodeName": "variables_in_vector", "type": "Dict[Any, Any]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 335, "col_offset": 26, "nodeName": "to_replace_vector_vars", "type": "Callable[..., Any]"}, {"lineNumber": 335, "col_offset": 54, "nodeName": "variables_in_vector", "type": "Dict[Any, Any]"}, {"lineNumber": 337, "col_offset": 24, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 341, "col_offset": 96, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 344, "col_offset": 32, "nodeName": "translate_scalar_code", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 345, "col_offset": 52, "nodeName": "variables_in_scalar", "type": "Dict[Any, Any]"}, {"lineNumber": 346, "col_offset": 52, "nodeName": "variables_in_vector", "type": "Dict[Any, Any]"}, {"lineNumber": 351, "col_offset": 38, "nodeName": "GSL_support_code", "type": "str"}, {"lineNumber": 375, "col_offset": 22, "nodeName": "type", "type": "Any"}, {"lineNumber": 382, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 384, "col_offset": 42, "nodeName": "name", "type": "Any"}, {"lineNumber": 387, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "self", "type": "GSLCythonCodeGenerator"}, {"lineNumber": 393, "col_offset": 16, "nodeName": "self", "type": "GSLCythonCodeGenerator"}, {"lineNumber": 393, "col_offset": 33, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 395, "col_offset": 25, "nodeName": "get_array_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 395, "col_offset": 45, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 396, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 398, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 403, "col_offset": 25, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 403, "col_offset": 55, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 404, "col_offset": 20, "nodeName": "c_data_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 404, "col_offset": 37, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 406, "col_offset": 16, "nodeName": "code", "type": "List[str]"}, {"lineNumber": 408, "col_offset": 16, "nodeName": "code", "type": "List[str]"}, {"lineNumber": 411, "col_offset": 16, "nodeName": "code", "type": "Any"}, {"lineNumber": 413, "col_offset": 16, "nodeName": "code", "type": "Any"}, {"lineNumber": 434, "col_offset": 22, "nodeName": "type", "type": "Any"}, {"lineNumber": 440, "col_offset": 24, "nodeName": "type", "type": "Any"}, {"lineNumber": 440, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 446, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 449, "col_offset": 16, "nodeName": "generator", "type": "Any"}, {"lineNumber": 449, "col_offset": 43, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 451, "col_offset": 27, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 451, "col_offset": 57, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 452, "col_offset": 23, "nodeName": "generator", "type": "Any"}, {"lineNumber": 453, "col_offset": 15, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 454, "col_offset": 16, "nodeName": "restrict", "type": "str"}, {"lineNumber": 455, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 457, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 461, "col_offset": 27, "nodeName": "get_pointer_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 461, "col_offset": 49, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 462, "col_offset": 25, "nodeName": "get_array_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 462, "col_offset": 45, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "prefs", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "prefs", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "prefs", "type": "Any"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "var", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "expr_set", "type": "Any"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "strip", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "search", "type": "Callable"}, {"lineNumber": 80, "col_offset": 55, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 90, "col_offset": 52, "nodeName": "diff_num", "type": "Any"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "generator", "type": "Any"}, {"lineNumber": 94, "col_offset": 80, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 94, "col_offset": 101, "nodeName": "idx_name", "type": "str"}, {"lineNumber": 94, "col_offset": 115, "nodeName": "var", "type": "Any"}, {"lineNumber": 95, "col_offset": 57, "nodeName": "diff_num", "type": "Any"}, {"lineNumber": 95, "col_offset": 71, "nodeName": "var", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "replace_what", "type": "str"}, {"lineNumber": 97, "col_offset": 80, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 98, "col_offset": 78, "nodeName": "idx_name", "type": "str"}, {"lineNumber": 99, "col_offset": 73, "nodeName": "var", "type": "Any"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "replace_what", "type": "str"}, {"lineNumber": 129, "col_offset": 109, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 129, "col_offset": 113, "nodeName": "diff_vars", "type": "Dict[str, str]"}, {"lineNumber": 132, "col_offset": 122, "nodeName": "start_function", "type": "Any"}, {"lineNumber": 134, "col_offset": 124, "nodeName": "start_function", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "generator", "type": "Any"}, {"lineNumber": 138, "col_offset": 55, "nodeName": "variables", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 147, "col_offset": 98, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 148, "col_offset": 97, "nodeName": "end_function", "type": "Any"}, {"lineNumber": 149, "col_offset": 99, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 150, "col_offset": 97, "nodeName": "end_function", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 162, "col_offset": 39, "nodeName": "var", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "statement", "type": "Any"}, {"lineNumber": 174, "col_offset": 53, "nodeName": "statement", "type": "Any"}, {"lineNumber": 175, "col_offset": 38, "nodeName": "statement", "type": "Any"}, {"lineNumber": 175, "col_offset": 54, "nodeName": "statement", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "other_variables", "type": "Dict[Any, brian2.core.variables.AuxiliaryVariable]"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "AuxiliaryVariable", "type": "Type[brian2.core.variables.AuxiliaryVariable]"}, {"lineNumber": 177, "col_offset": 57, "nodeName": "var", "type": "Any"}, {"lineNumber": 184, "col_offset": 37, "nodeName": "statement", "type": "Any"}, {"lineNumber": 184, "col_offset": 52, "nodeName": "statement", "type": "Any"}, {"lineNumber": 185, "col_offset": 38, "nodeName": "statement", "type": "Any"}, {"lineNumber": 185, "col_offset": 54, "nodeName": "statement", "type": "Any"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "function_names", "type": "Any"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 191, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "used_variables", "type": "Dict[Any, Any]"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "used_variables", "type": "Dict[Any, Any]"}, {"lineNumber": 199, "col_offset": 38, "nodeName": "variables", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "var", "type": "Any"}, {"lineNumber": 211, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 211, "col_offset": 39, "nodeName": "ignore", "type": "Any"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 216, "col_offset": 31, "nodeName": "get_pointer_name", "type": "Any"}, {"lineNumber": 216, "col_offset": 53, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 217, "col_offset": 66, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 219, "col_offset": 57, "nodeName": "var", "type": "Any"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 225, "col_offset": 28, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 226, "col_offset": 91, "nodeName": "t_declare", "type": "Any"}, {"lineNumber": 227, "col_offset": 92, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 228, "col_offset": 95, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "replace_what", "type": "str"}, {"lineNumber": 235, "col_offset": 28, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 242, "col_offset": 21, "nodeName": "unpack_namespace_single", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 242, "col_offset": 50, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 242, "col_offset": 59, "nodeName": "in_vector", "type": "bool"}, {"lineNumber": 242, "col_offset": 70, "nodeName": "in_scalar", "type": "bool"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "expr_set", "type": "Any"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 258, "col_offset": 23, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 258, "col_offset": 59, "nodeName": "to_sub", "type": "str"}, {"lineNumber": 258, "col_offset": 67, "nodeName": "code", "type": "str"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "var", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "op", "type": "Any"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "expr", "type": "Any"}, {"lineNumber": 266, "col_offset": 31, "nodeName": "comment", "type": "Any"}, {"lineNumber": 266, "col_offset": 41, "nodeName": "parse_statement", "type": "Callable[[Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 266, "col_offset": 57, "nodeName": "line", "type": "Any"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "code", "type": "List[Union[Any, str]]"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 272, "col_offset": 29, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "line", "type": "Any"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 275, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 289, "col_offset": 41, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 292, "col_offset": 51, "nodeName": "ac_name", "type": "Any"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "scalar_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 293, "col_offset": 40, "nodeName": "vector_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "has_repeated_indices", "type": "Any"}, {"lineNumber": 298, "col_offset": 45, "nodeName": "vs", "type": "Any"}, {"lineNumber": 315, "col_offset": 41, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 321, "col_offset": 53, "nodeName": "code", "type": "Any"}, {"lineNumber": 328, "col_offset": 56, "nodeName": "scalar_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 328, "col_offset": 80, "nodeName": "vector_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 333, "col_offset": 27, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 335, "col_offset": 26, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 344, "col_offset": 32, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 344, "col_offset": 59, "nodeName": "scalar_code", "type": "Any"}, {"lineNumber": 382, "col_offset": 19, "nodeName": "type", "type": "Any"}, {"lineNumber": 387, "col_offset": 15, "nodeName": "self", "type": "GSLCythonCodeGenerator"}, {"lineNumber": 395, "col_offset": 25, "nodeName": "self", "type": "GSLCythonCodeGenerator"}, {"lineNumber": 396, "col_offset": 49, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 396, "col_offset": 60, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 398, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 398, "col_offset": 59, "nodeName": "name", "type": "Any"}, {"lineNumber": 403, "col_offset": 25, "nodeName": "generator", "type": "Any"}, {"lineNumber": 404, "col_offset": 20, "nodeName": "self", "type": "GSLCythonCodeGenerator"}, {"lineNumber": 404, "col_offset": 37, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "self", "type": "GSLWeaveCodeGenerator"}, {"lineNumber": 446, "col_offset": 15, "nodeName": "self", "type": "GSLWeaveCodeGenerator"}, {"lineNumber": 449, "col_offset": 16, "nodeName": "self", "type": "GSLWeaveCodeGenerator"}, {"lineNumber": 451, "col_offset": 27, "nodeName": "generator", "type": "Any"}, {"lineNumber": 452, "col_offset": 23, "nodeName": "self", "type": "GSLWeaveCodeGenerator"}, {"lineNumber": 455, "col_offset": 56, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 455, "col_offset": 67, "nodeName": "restrict", "type": "Union[str, Any]"}, {"lineNumber": 455, "col_offset": 81, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 457, "col_offset": 49, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 457, "col_offset": 60, "nodeName": "name", "type": "Any"}, {"lineNumber": 461, "col_offset": 27, "nodeName": "self", "type": "GSLWeaveCodeGenerator"}, {"lineNumber": 462, "col_offset": 25, "nodeName": "self", "type": "GSLWeaveCodeGenerator"}, {"lineNumber": 464, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 469, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "expr", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "op", "type": "Any"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "comment", "type": "Any"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "parse_statement", "type": "Callable[[Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 77, "col_offset": 60, "nodeName": "expr", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "re", "type": "module"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "diff_vars", "type": "Dict[str, str]"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "group", "type": "Callable"}, {"lineNumber": 89, "col_offset": 63, "nodeName": "var", "type": "Any"}, {"lineNumber": 89, "col_offset": 71, "nodeName": "diff_num", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 138, "col_offset": 55, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 138, "col_offset": 70, "nodeName": "var", "type": "str"}, {"lineNumber": 139, "col_offset": 94, "nodeName": "access_pointer", "type": "Any"}, {"lineNumber": 140, "col_offset": 91, "nodeName": "diff_num", "type": "str"}, {"lineNumber": 141, "col_offset": 91, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 142, "col_offset": 101, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 143, "col_offset": 95, "nodeName": "access_pointer", "type": "Any"}, {"lineNumber": 144, "col_offset": 92, "nodeName": "diff_num", "type": "str"}, {"lineNumber": 145, "col_offset": 92, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 146, "col_offset": 102, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "allocate_yvector", "type": "str"}, {"lineNumber": 152, "col_offset": 42, "nodeName": "join", "type": "Callable"}, {"lineNumber": 152, "col_offset": 53, "nodeName": "fill_yvector", "type": "List[str]"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "declare", "type": "Any"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "declare", "type": "Any"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "write_dataholder_single", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 55, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 177, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 177, "col_offset": 68, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 190, "col_offset": 30, "nodeName": "variables", "type": "Any"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "var", "type": "Any"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "var", "type": "Any"}, {"lineNumber": 199, "col_offset": 48, "nodeName": "var", "type": "Any"}, {"lineNumber": 216, "col_offset": 31, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 217, "col_offset": 27, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 217, "col_offset": 49, "nodeName": "access_pointer", "type": "Any"}, {"lineNumber": 219, "col_offset": 27, "nodeName": "var", "type": "Any"}, {"lineNumber": 219, "col_offset": 40, "nodeName": "access_pointer", "type": "Any"}, {"lineNumber": 242, "col_offset": 21, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 250, "col_offset": 32, "nodeName": "line", "type": "Any"}, {"lineNumber": 258, "col_offset": 23, "nodeName": "re", "type": "module"}, {"lineNumber": 258, "col_offset": 30, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 258, "col_offset": 48, "nodeName": "from_sub", "type": "Any"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "line", "type": "Any"}, {"lineNumber": 272, "col_offset": 29, "nodeName": "variables_in_scalar", "type": "Dict[Any, Any]"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "variables_in_vector", "type": "Dict[Any, Any]"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 293, "col_offset": 30, "nodeName": "ac_name", "type": "Any"}, {"lineNumber": 293, "col_offset": 58, "nodeName": "ac_name", "type": "Any"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 299, "col_offset": 20, "nodeName": "check_for_order_independence", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 299, "col_offset": 49, "nodeName": "vs", "type": "Any"}, {"lineNumber": 300, "col_offset": 49, "nodeName": "variables", "type": "Any"}, {"lineNumber": 301, "col_offset": 49, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 307, "col_offset": 20, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 335, "col_offset": 81, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 341, "col_offset": 73, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 384, "col_offset": 29, "nodeName": "type", "type": "Any"}, {"lineNumber": 398, "col_offset": 59, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 403, "col_offset": 25, "nodeName": "self", "type": "GSLCythonCodeGenerator"}, {"lineNumber": 406, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 408, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 411, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 413, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 451, "col_offset": 27, "nodeName": "self", "type": "GSLWeaveCodeGenerator"}, {"lineNumber": 457, "col_offset": 60, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 464, "col_offset": 55, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 464, "col_offset": 75, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 469, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 177, "col_offset": 68, "nodeName": "statement", "type": "Any"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "var", "type": "Any"}, {"lineNumber": 192, "col_offset": 30, "nodeName": "other_variables", "type": "Any"}, {"lineNumber": 258, "col_offset": 30, "nodeName": "re", "type": "module"}, {"lineNumber": 278, "col_offset": 28, "nodeName": "actual_var", "type": "str"}, {"lineNumber": 278, "col_offset": 43, "nodeName": "op", "type": "Any"}, {"lineNumber": 278, "col_offset": 52, "nodeName": "expr", "type": "Any"}, {"lineNumber": 278, "col_offset": 66, "nodeName": "comment", "type": "Any"}, {"lineNumber": 300, "col_offset": 49, "nodeName": "generator", "type": "Any"}, {"lineNumber": 301, "col_offset": 49, "nodeName": "generator", "type": "Any"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "vs", "type": "Any"}, {"lineNumber": 335, "col_offset": 81, "nodeName": "diff_vars", "type": "Dict[str, str]"}, {"lineNumber": 406, "col_offset": 82, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 406, "col_offset": 100, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 408, "col_offset": 80, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 408, "col_offset": 98, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 411, "col_offset": 68, "nodeName": "name", "type": "Any"}, {"lineNumber": 413, "col_offset": 66, "nodeName": "name", "type": "Any"}, {"lineNumber": 469, "col_offset": 53, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "group", "type": "Callable"}, {"lineNumber": 192, "col_offset": 46, "nodeName": "var", "type": "Any"}, {"lineNumber": 300, "col_offset": 49, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 301, "col_offset": 49, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 305, "col_offset": 58, "nodeName": "vs", "type": "Any"}, {"lineNumber": 411, "col_offset": 68, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 413, "col_offset": 66, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 308, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 308, "col_offset": 50, "nodeName": "vs", "type": "Any"}, {"lineNumber": 308, "col_offset": 55, "nodeName": "vs", "type": "Any"}]