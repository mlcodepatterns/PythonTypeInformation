[{"lineNumber": 17, "col_offset": 0, "nodeName": "openmp_pragma", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 0, "nodeName": "generate_rand_code", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "CodeObject", "type": "Type[brian2.codegen.codeobject.CodeObject]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "__call__", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "run", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "rand_impls", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 143, "col_offset": 0, "nodeName": "randn_impls", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "nb_threads", "type": "Any"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "openmp_threads", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "openmp_on", "type": "bool"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "generator_class", "type": "Type[brian2.codegen.generators.cpp_generator.CPPCodeGenerator]"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "CPPCodeGenerator", "type": "Type[brian2.codegen.generators.cpp_generator.CPPCodeGenerator]"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "add", "type": "Callable"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "CPPStandaloneCodeObject", "type": "Type[CPPStandaloneCodeObject]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "nb_threads", "type": "Any"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "openmp_threads", "type": "Any"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "add_dynamic_implementation", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 38, "nodeName": "CPPStandaloneCodeObject", "type": "Type[CPPStandaloneCodeObject]"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "add_dynamic_implementation", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 39, "nodeName": "CPPStandaloneCodeObject", "type": "Type[CPPStandaloneCodeObject]"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "cpp_standalone", "type": "Any"}, {"lineNumber": 24, "col_offset": 7, "nodeName": "pragma_type", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "Templater", "type": "Type[brian2.codegen.templates.Templater]"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "codegen_targets", "type": "Set[Type[CPPStandaloneCodeObject]]"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "cpp_standalone", "type": "Any"}, {"lineNumber": 116, "col_offset": 7, "nodeName": "nb_threads", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "thread_number", "type": "str"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "thread_number", "type": "str"}, {"lineNumber": 120, "col_offset": 7, "nodeName": "rand_func", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "rk_call", "type": "str"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "replace", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "code", "type": "str"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "code", "type": "Any"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "rand_impls", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "randn_impls", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "devices", "type": "Any"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "nb_threads", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "openmp_on", "type": "bool"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "pragma_type", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "run", "type": "Callable[[], Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "devices", "type": "Any"}, {"lineNumber": 122, "col_offset": 9, "nodeName": "rand_func", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "rk_call", "type": "str"}, {"lineNumber": 131, "col_offset": 45, "nodeName": "thread_number", "type": "str"}, {"lineNumber": 132, "col_offset": 41, "nodeName": "rand_func", "type": "Any"}, {"lineNumber": 133, "col_offset": 39, "nodeName": "rk_call", "type": "str"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "prefs", "type": "brian2.core.preferences.BrianGlobalPreferences"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "nb_threads", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "openmp_on", "type": "bool"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "pragma_type", "type": "Any"}, {"lineNumber": 95, "col_offset": 54, "nodeName": "c_data_type", "type": "Callable[[Any], str]"}, {"lineNumber": 96, "col_offset": 56, "nodeName": "openmp_pragma", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 61, "nodeName": "constant_or_scalar", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "prefs", "type": "brian2.core.preferences.BrianGlobalPreferences"}, {"lineNumber": 99, "col_offset": 46, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "self", "type": "CPPStandaloneCodeObject"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "main_queue", "type": "Any"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "prefs", "type": "brian2.core.preferences.BrianGlobalPreferences"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "rand_func", "type": "Any"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "generate_rand_code", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 70, "nodeName": "owner", "type": "Any"}, {"lineNumber": 146, "col_offset": 45, "nodeName": "generate_rand_code", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 146, "col_offset": 73, "nodeName": "owner", "type": "Any"}, {"lineNumber": 29, "col_offset": 68, "nodeName": "nb_threads", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "openmp_on", "type": "bool"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "pragma_type", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "openmp_on", "type": "bool"}, {"lineNumber": 106, "col_offset": 60, "nodeName": "self", "type": "CPPStandaloneCodeObject"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "nb_threads", "type": "Any"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "openmp_on", "type": "bool"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "get_device", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "pragma_type", "type": "Any"}, {"lineNumber": 52, "col_offset": 9, "nodeName": "pragma_type", "type": "Any"}, {"lineNumber": 54, "col_offset": 9, "nodeName": "pragma_type", "type": "Any"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "pragma_type", "type": "Any"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "pragma_type", "type": "Any"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "pragma_type", "type": "Any"}, {"lineNumber": 62, "col_offset": 9, "nodeName": "pragma_type", "type": "Any"}, {"lineNumber": 64, "col_offset": 9, "nodeName": "pragma_type", "type": "Any"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "pragma_type", "type": "Any"}, {"lineNumber": 68, "col_offset": 9, "nodeName": "pragma_type", "type": "Any"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "pragma_type", "type": "Any"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "pragma_type", "type": "Any"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "pragma_type", "type": "Any"}, {"lineNumber": 76, "col_offset": 9, "nodeName": "pragma_type", "type": "Any"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "pragma_type", "type": "Any"}, {"lineNumber": 80, "col_offset": 9, "nodeName": "pragma_type", "type": "Any"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 83, "col_offset": 56, "nodeName": "pragma_type", "type": "Any"}]