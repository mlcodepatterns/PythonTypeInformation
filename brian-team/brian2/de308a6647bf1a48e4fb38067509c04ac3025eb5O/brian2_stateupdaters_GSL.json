[{"lineNumber": 5, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 7, "col_offset": 22, "nodeName": "StateUpdateMethod", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "get_codeobj_class", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "transfer_codeobj_class", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "__call__", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "GSL_stateupdater", "type": "GSLStateUpdater"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "__doc__", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "__doc__", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "GSLStateUpdater", "type": "Type[GSLStateUpdater]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "needed_variables", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "abstract_code", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "is_stochastic", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "diff_eqs", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "code", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "count_statevariables", "type": "int"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "counter", "type": "Dict[Any, int]"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "diff_eqs", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "abstract_code", "type": "str"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "transfer_codeobj_class", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "__call__", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "__call__", "type": "Any"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[], Any]"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "device", "type": "Any"}, {"lineNumber": 20, "col_offset": 30, "nodeName": "CPPStandaloneDevice", "type": "Type[brian2.devices.cpp_standalone.device.CPPStandaloneDevice]"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "GSLCPPStandaloneCodeObject", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "target", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 25, "col_offset": 26, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "target", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "GSLCythonCodeObject", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "self", "type": "GSLStateUpdater"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "GSL_stateupdater", "type": "GSLStateUpdater"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "equations", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "get_substituted_expressions", "type": "Any"}, {"lineNumber": 50, "col_offset": 57, "nodeName": "variables", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "diff_name", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "expr", "type": "Any"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "count_statevariables", "type": "int"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "count_statevariables", "type": "int"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "GSLStateUpdater"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 64, "col_offset": 42, "nodeName": "code", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "GSLStateUpdater"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "get_codeobj_class", "type": "Callable[[], Any]"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "self", "type": "GSLStateUpdater"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "StateUpdateMethod", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "codegen", "type": "Any"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "codegen", "type": "Any"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "GSLWeaveCodeObject", "type": "Any"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "UnsupportedEquationsException", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "equations", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "counter", "type": "Dict[Any, int]"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "self", "type": "GSLStateUpdater"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "prefs", "type": "Any"}, {"lineNumber": 25, "col_offset": 26, "nodeName": "auto_target", "type": "Any"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "prefs", "type": "Any"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "diff_name", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 58, "col_offset": 63, "nodeName": "diff_name", "type": "Any"}, {"lineNumber": 59, "col_offset": 68, "nodeName": "expr", "type": "Any"}, {"lineNumber": 60, "col_offset": 69, "nodeName": "counter", "type": "Dict[Any, int]"}, {"lineNumber": 60, "col_offset": 77, "nodeName": "diff_name", "type": "Any"}]