[{"lineNumber": 22, "col_offset": 0, "nodeName": "c_data_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "logger", "type": "brian2.utils.logger.BrianLogger"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "mod_support_code", "type": "str"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "floattypestrs", "type": "List[str]"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "CodeGenerator", "type": "Any"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "func", "type": "str"}, {"lineNumber": 15, "col_offset": 9, "nodeName": "get_logger", "type": "Callable[..., brian2.utils.logger.BrianLogger]"}, {"lineNumber": 15, "col_offset": 20, "nodeName": "__name__", "type": "str"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "dtype", "type": "str"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "register_preferences", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "ix", "type": "int"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "xtype", "type": "str"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "typestrs", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "class_name", "type": "str"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "universal_support_code", "type": "Any"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "func", "type": "str"}, {"lineNumber": 408, "col_offset": 10, "nodeName": "func_cpp", "type": "str"}, {"lineNumber": 419, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 419, "col_offset": 60, "nodeName": "CPPCodeGenerator", "type": "Type[CPPCodeGenerator]"}, {"lineNumber": 458, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 458, "col_offset": 62, "nodeName": "CPPCodeGenerator", "type": "Type[CPPCodeGenerator]"}, {"lineNumber": 468, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 468, "col_offset": 61, "nodeName": "CPPCodeGenerator", "type": "Type[CPPCodeGenerator]"}, {"lineNumber": 482, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 482, "col_offset": 61, "nodeName": "CPPCodeGenerator", "type": "Type[CPPCodeGenerator]"}, {"lineNumber": 491, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 491, "col_offset": 61, "nodeName": "CPPCodeGenerator", "type": "Type[CPPCodeGenerator]"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "type", "type": "Any"}, {"lineNumber": 31, "col_offset": 7, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "type", "type": "Any"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "float32", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "dtype", "type": "str"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "prefs", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "iy", "type": "int"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "ytype", "type": "str"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "typestrs", "type": "List[str]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "hightype", "type": "str"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "deindent", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "mod_support_code", "type": "str"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "c_data_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "c_data_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "access_data", "type": "bool"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "code", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "varname", "type": "Any"}, {"lineNumber": 231, "col_offset": 23, "nodeName": "write", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "statements", "type": "Any"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "varname", "type": "Any"}, {"lineNumber": 257, "col_offset": 23, "nodeName": "write", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "lines", "type": "Union[List[Any], List[str]]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "code", "type": "str"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "flush_denormals", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "impl", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "support_code", "type": "List[Any]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "hash_defines", "type": "List[Any]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "pointers", "type": "List[str]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "user_functions", "type": "List[Any]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "funccode", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "dep_hash_defines", "type": "List[Any]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "dep_pointers", "type": "List[Any]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "dep_support_code", "type": "List[Any]"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "pointers", "type": "List[Any]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "handled_pointers", "type": "Set[str]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "template_kwds", "type": "Dict[nothing, nothing]"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "user_functions", "type": "List[Any]"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "support_code", "type": "List[Any]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "hash_defines", "type": "List[Any]"}, {"lineNumber": 380, "col_offset": 30, "nodeName": "user_functions", "type": "List[Any]"}, {"lineNumber": 395, "col_offset": 15, "nodeName": "keywords", "type": "Dict[str, Any]"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 404, "col_offset": 63, "nodeName": "CPPCodeGenerator", "type": "Type[CPPCodeGenerator]"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 411, "col_offset": 63, "nodeName": "CPPCodeGenerator", "type": "Type[CPPCodeGenerator]"}, {"lineNumber": 419, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 420, "col_offset": 65, "nodeName": "abs_code", "type": "str"}, {"lineNumber": 458, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 459, "col_offset": 67, "nodeName": "randn_code", "type": "str"}, {"lineNumber": 468, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 469, "col_offset": 66, "nodeName": "rand_code", "type": "str"}, {"lineNumber": 482, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 483, "col_offset": 66, "nodeName": "clip_code", "type": "str"}, {"lineNumber": 491, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 492, "col_offset": 66, "nodeName": "sign_code", "type": "str"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "float64", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "dtype", "type": "str"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "BrianPreference", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "BrianPreference", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "typestrs", "type": "List[str]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "expr", "type": "str"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "expr", "type": "str"}, {"lineNumber": 109, "col_offset": -1, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "prefs", "type": "Any"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[], Any]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "varname", "type": "Any"}, {"lineNumber": 161, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "strip", "type": "Any"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "var", "type": "Any"}, {"lineNumber": 169, "col_offset": 49, "nodeName": "op", "type": "Any"}, {"lineNumber": 170, "col_offset": 34, "nodeName": "expr", "type": "Any"}, {"lineNumber": 170, "col_offset": 50, "nodeName": "comment", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "used_boolvars", "type": "Any"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "used_boolean_variables", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "bool_simp", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "boolean_simplified_expressions", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "firstline", "type": "bool"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "code", "type": "str"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "code", "type": "Any"}, {"lineNumber": 207, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "comment", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "code", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "read", "type": "Any"}, {"lineNumber": 212, "col_offset": 14, "nodeName": "write", "type": "Any"}, {"lineNumber": 212, "col_offset": 21, "nodeName": "indices", "type": "Any"}, {"lineNumber": 212, "col_offset": 30, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 212, "col_offset": 55, "nodeName": "arrays_helper", "type": "Any"}, {"lineNumber": 212, "col_offset": 74, "nodeName": "statements", "type": "Any"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 215, "col_offset": 39, "nodeName": "indices", "type": "Any"}, {"lineNumber": 215, "col_offset": 48, "nodeName": "read", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "index_var", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "read", "type": "Any"}, {"lineNumber": 228, "col_offset": 14, "nodeName": "write", "type": "Any"}, {"lineNumber": 228, "col_offset": 21, "nodeName": "indices", "type": "Any"}, {"lineNumber": 228, "col_offset": 30, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 228, "col_offset": 55, "nodeName": "arrays_helper", "type": "Any"}, {"lineNumber": 228, "col_offset": 74, "nodeName": "statements", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "read", "type": "Any"}, {"lineNumber": 239, "col_offset": 14, "nodeName": "write", "type": "Any"}, {"lineNumber": 239, "col_offset": 21, "nodeName": "indices", "type": "Any"}, {"lineNumber": 239, "col_offset": 30, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 239, "col_offset": 55, "nodeName": "arrays_helper", "type": "Any"}, {"lineNumber": 239, "col_offset": 74, "nodeName": "statements", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "read", "type": "Any"}, {"lineNumber": 254, "col_offset": 14, "nodeName": "write", "type": "Any"}, {"lineNumber": 254, "col_offset": 21, "nodeName": "indices", "type": "Any"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 254, "col_offset": 55, "nodeName": "arrays_helper", "type": "Any"}, {"lineNumber": 254, "col_offset": 74, "nodeName": "statements", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "index_var", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "translate_to_read_arrays", "type": "Callable[[Any], Any]"}, {"lineNumber": 270, "col_offset": 47, "nodeName": "statements", "type": "Any"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "translate_to_declarations", "type": "Callable[[Any], Any]"}, {"lineNumber": 272, "col_offset": 48, "nodeName": "statements", "type": "Any"}, {"lineNumber": 274, "col_offset": 17, "nodeName": "translate_to_statements", "type": "Callable[[Any], Any]"}, {"lineNumber": 274, "col_offset": 46, "nodeName": "statements", "type": "Any"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "translate_to_write_arrays", "type": "Callable[[Any], Any]"}, {"lineNumber": 276, "col_offset": 48, "nodeName": "statements", "type": "Any"}, {"lineNumber": 277, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "lines", "type": "Union[List[Any], List[str]]"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "stripped_deindented_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 278, "col_offset": 41, "nodeName": "code", "type": "str"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "implementations", "type": "Any"}, {"lineNumber": 297, "col_offset": 19, "nodeName": "get_code", "type": "Any"}, {"lineNumber": 297, "col_offset": 33, "nodeName": "owner", "type": "Any"}, {"lineNumber": 298, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 298, "col_offset": 22, "nodeName": "funccode", "type": "Any"}, {"lineNumber": 298, "col_offset": 32, "nodeName": "basestring", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "funccode", "type": "Dict[str, Any]"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "funccode", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "func_namespace", "type": "Union[Any, Dict[nothing, nothing]]"}, {"lineNumber": 323, "col_offset": 11, "nodeName": "dependencies", "type": "Any"}, {"lineNumber": 335, "col_offset": 16, "nodeName": "user_functions", "type": "List[Any]"}, {"lineNumber": 344, "col_offset": 27, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 348, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[], Any]"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "varname", "type": "Any"}, {"lineNumber": 349, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 349, "col_offset": 28, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "varname", "type": "Any"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "variable", "type": "Any"}, {"lineNumber": 369, "col_offset": 33, "nodeName": "items", "type": "Any"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "funcname", "type": "Any"}, {"lineNumber": 380, "col_offset": 22, "nodeName": "func", "type": "Any"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "func_namespace", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 386, "col_offset": 28, "nodeName": "universal_support_code", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 394, "col_offset": 24, "nodeName": "template_kwds", "type": "Dict[nothing, nothing]"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 413, "col_offset": 68, "nodeName": "func_cpp", "type": "str"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "int8", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "dtype", "type": "str"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "xtype", "type": "str"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "floattypestrs", "type": "List[str]"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "ytype", "type": "str"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "floattypestrs", "type": "List[str]"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "hightype", "type": "str"}, {"lineNumber": 109, "col_offset": 44, "nodeName": "xtype", "type": "str"}, {"lineNumber": 109, "col_offset": 57, "nodeName": "ytype", "type": "str"}, {"lineNumber": 109, "col_offset": 69, "nodeName": "expr", "type": "str"}, {"lineNumber": 139, "col_offset": 48, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 139, "col_offset": 56, "nodeName": "kwds", "type": "Dict[str, Any]"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "prefs", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "var", "type": "Any"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "variables", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "var", "type": "Any"}, {"lineNumber": 162, "col_offset": 31, "nodeName": "Function", "type": "Type[brian2.core.functions.Function]"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "impl_name", "type": "Any"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "statement", "type": "Any"}, {"lineNumber": 169, "col_offset": 49, "nodeName": "statement", "type": "Any"}, {"lineNumber": 170, "col_offset": 34, "nodeName": "statement", "type": "Any"}, {"lineNumber": 170, "col_offset": 50, "nodeName": "statement", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "statement", "type": "Any"}, {"lineNumber": 171, "col_offset": 60, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 171, "col_offset": 64, "nodeName": "used_boolean_variables", "type": "Any"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "statement", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "statement", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "codelines", "type": "List[Any]"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "op", "type": "str"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "codelines", "type": "List[str]"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "bool_assigns", "type": "Any"}, {"lineNumber": 180, "col_offset": 30, "nodeName": "simp_expr", "type": "Any"}, {"lineNumber": 180, "col_offset": 43, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "atomics", "type": "List[Union[Any, str]]"}, {"lineNumber": 182, "col_offset": 40, "nodeName": "bool_assigns", "type": "Any"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "firstline", "type": "bool"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "firstline", "type": "bool"}, {"lineNumber": 197, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "codelines", "type": "Union[List[Any], List[str]]"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "decl", "type": "Any"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "op", "type": "str"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "constant", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "decl", "type": "str"}, {"lineNumber": 208, "col_offset": 29, "nodeName": "comment", "type": "Any"}, {"lineNumber": 212, "col_offset": 55, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "itertools", "type": "module"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 217, "col_offset": 18, "nodeName": "variables", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 218, "col_offset": 30, "nodeName": "write", "type": "Any"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "line", "type": "str"}, {"lineNumber": 228, "col_offset": 55, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "var", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 239, "col_offset": 55, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 243, "col_offset": 19, "nodeName": "translate_statement", "type": "Callable[[Any], Any]"}, {"lineNumber": 243, "col_offset": 44, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 244, "col_offset": 27, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "subs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "condvar", "type": "Any"}, {"lineNumber": 254, "col_offset": 55, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 258, "col_offset": 24, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 259, "col_offset": 18, "nodeName": "variables", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "line", "type": "Any"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 274, "col_offset": 17, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "variable", "type": "Any"}, {"lineNumber": 292, "col_offset": 40, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 296, "col_offset": 27, "nodeName": "varname", "type": "Any"}, {"lineNumber": 296, "col_offset": 36, "nodeName": "variable", "type": "Any"}, {"lineNumber": 297, "col_offset": 19, "nodeName": "impl", "type": "Any"}, {"lineNumber": 297, "col_offset": 33, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 299, "col_offset": 40, "nodeName": "funccode", "type": "Any"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "ns_key", "type": "Any"}, {"lineNumber": 305, "col_offset": 24, "nodeName": "ns_value", "type": "Any"}, {"lineNumber": 305, "col_offset": 36, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 323, "col_offset": 11, "nodeName": "impl", "type": "Any"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "dep_name", "type": "Any"}, {"lineNumber": 324, "col_offset": 26, "nodeName": "dep", "type": "Any"}, {"lineNumber": 324, "col_offset": 33, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 325, "col_offset": 43, "nodeName": "dep", "type": "Any"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "dep_hash_defines", "type": "List[Any]"}, {"lineNumber": 332, "col_offset": 35, "nodeName": "hash_defines", "type": "List[Any]"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "dep_pointers", "type": "List[Any]"}, {"lineNumber": 333, "col_offset": 31, "nodeName": "pointers", "type": "List[str]"}, {"lineNumber": 334, "col_offset": 16, "nodeName": "dep_support_code", "type": "List[Any]"}, {"lineNumber": 334, "col_offset": 35, "nodeName": "support_code", "type": "List[Any]"}, {"lineNumber": 349, "col_offset": 28, "nodeName": "variables", "type": "Any"}, {"lineNumber": 350, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 350, "col_offset": 26, "nodeName": "var", "type": "Any"}, {"lineNumber": 350, "col_offset": 31, "nodeName": "ArrayVariable", "type": "Type[brian2.core.variables.ArrayVariable]"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 353, "col_offset": 16, "nodeName": "pointer_name", "type": "str"}, {"lineNumber": 369, "col_offset": 33, "nodeName": "variables", "type": "Any"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 370, "col_offset": 26, "nodeName": "variable", "type": "Any"}, {"lineNumber": 370, "col_offset": 36, "nodeName": "Function", "type": "Type[brian2.core.functions.Function]"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "variables", "type": "Any"}, {"lineNumber": 382, "col_offset": 29, "nodeName": "get_namespace", "type": "Any"}, {"lineNumber": 382, "col_offset": 84, "nodeName": "owner", "type": "Any"}, {"lineNumber": 383, "col_offset": 15, "nodeName": "func_namespace", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "support_code", "type": "List[Any]"}, {"lineNumber": 386, "col_offset": 28, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 389, "col_offset": 38, "nodeName": "stripped_deindented_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 390, "col_offset": 42, "nodeName": "stripped_deindented_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 391, "col_offset": 40, "nodeName": "stripped_deindented_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 392, "col_offset": 44, "nodeName": "stripped_deindented_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "keywords", "type": "Dict[str, Any]"}, {"lineNumber": 419, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 458, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 468, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 482, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 491, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "int16", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "dtype", "type": "str"}, {"lineNumber": 97, "col_offset": 28, "nodeName": "max", "type": "Callable"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "ix", "type": "int"}, {"lineNumber": 97, "col_offset": 36, "nodeName": "iy", "type": "int"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "CPPCodeGenerator", "type": "Type[CPPCodeGenerator]"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 156, "col_offset": 50, "nodeName": "var", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "device", "type": "Any"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "impl_name", "type": "Any"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "expr", "type": "Union[str, Any]"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "render_expr", "type": "Callable[..., Any]"}, {"lineNumber": 166, "col_offset": 45, "nodeName": "expr", "type": "Union[str, Any]"}, {"lineNumber": 171, "col_offset": 64, "nodeName": "statement", "type": "Any"}, {"lineNumber": 180, "col_offset": 43, "nodeName": "bool_simp", "type": "Any"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "boolvar", "type": "Any"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "boolval", "type": "Any"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "boolval", "type": "Any"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "line", "type": "str"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "firstline", "type": "bool"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "line", "type": "str"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 195, "col_offset": 33, "nodeName": "line", "type": "str"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "statement", "type": "Any"}, {"lineNumber": 203, "col_offset": 20, "nodeName": "decl", "type": "str"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 216, "col_offset": 46, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 217, "col_offset": 18, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 217, "col_offset": 33, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 222, "col_offset": 62, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 223, "col_offset": 75, "nodeName": "index_var", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "varname", "type": "Any"}, {"lineNumber": 232, "col_offset": 30, "nodeName": "read", "type": "Any"}, {"lineNumber": 232, "col_offset": 39, "nodeName": "varname", "type": "Any"}, {"lineNumber": 232, "col_offset": 54, "nodeName": "indices", "type": "Any"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "variables", "type": "Any"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 235, "col_offset": 29, "nodeName": "line", "type": "str"}, {"lineNumber": 243, "col_offset": 19, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 246, "col_offset": 26, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 250, "col_offset": 29, "nodeName": "line", "type": "Any"}, {"lineNumber": 258, "col_offset": 24, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 258, "col_offset": 46, "nodeName": "varname", "type": "Any"}, {"lineNumber": 259, "col_offset": 18, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 259, "col_offset": 33, "nodeName": "varname", "type": "Any"}, {"lineNumber": 260, "col_offset": 89, "nodeName": "varname", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 292, "col_offset": 40, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 304, "col_offset": 29, "nodeName": "get_namespace", "type": "Any"}, {"lineNumber": 304, "col_offset": 48, "nodeName": "owner", "type": "Any"}, {"lineNumber": 305, "col_offset": 36, "nodeName": "func_namespace", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 306, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 306, "col_offset": 27, "nodeName": "ns_value", "type": "Any"}, {"lineNumber": 311, "col_offset": 20, "nodeName": "type_str", "type": "str"}, {"lineNumber": 313, "col_offset": 20, "nodeName": "type_str", "type": "str"}, {"lineNumber": 314, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "support_code", "type": "List[Any]"}, {"lineNumber": 317, "col_offset": 32, "nodeName": "deindent", "type": "Callable[..., Any]"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "hash_defines", "type": "List[Any]"}, {"lineNumber": 318, "col_offset": 32, "nodeName": "deindent", "type": "Callable[..., Any]"}, {"lineNumber": 324, "col_offset": 33, "nodeName": "dependencies", "type": "Any"}, {"lineNumber": 325, "col_offset": 16, "nodeName": "variables", "type": "Any"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "hd", "type": "Any"}, {"lineNumber": 326, "col_offset": 20, "nodeName": "ps", "type": "Any"}, {"lineNumber": 326, "col_offset": 24, "nodeName": "sc", "type": "Any"}, {"lineNumber": 326, "col_offset": 28, "nodeName": "uf", "type": "Any"}, {"lineNumber": 326, "col_offset": 33, "nodeName": "_add_user_function", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 326, "col_offset": 57, "nodeName": "dep_name", "type": "Any"}, {"lineNumber": 326, "col_offset": 67, "nodeName": "dep", "type": "Any"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 327, "col_offset": 40, "nodeName": "hd", "type": "Any"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 328, "col_offset": 36, "nodeName": "ps", "type": "Any"}, {"lineNumber": 329, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 329, "col_offset": 40, "nodeName": "sc", "type": "Any"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 330, "col_offset": 38, "nodeName": "uf", "type": "Any"}, {"lineNumber": 349, "col_offset": 28, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 352, "col_offset": 29, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 352, "col_offset": 51, "nodeName": "var", "type": "Any"}, {"lineNumber": 353, "col_offset": 31, "nodeName": "get_array_name", "type": "Callable[..., Any]"}, {"lineNumber": 353, "col_offset": 51, "nodeName": "var", "type": "Any"}, {"lineNumber": 354, "col_offset": 19, "nodeName": "pointer_name", "type": "str"}, {"lineNumber": 354, "col_offset": 35, "nodeName": "handled_pointers", "type": "Set[str]"}, {"lineNumber": 358, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 359, "col_offset": 52, "nodeName": "restrict", "type": "Any"}, {"lineNumber": 360, "col_offset": 52, "nodeName": "pointer_name", "type": "str"}, {"lineNumber": 361, "col_offset": 52, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 362, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 362, "col_offset": 32, "nodeName": "line", "type": "str"}, {"lineNumber": 363, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 363, "col_offset": 37, "nodeName": "pointer_name", "type": "str"}, {"lineNumber": 369, "col_offset": 33, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 371, "col_offset": 16, "nodeName": "hd", "type": "List[Any]"}, {"lineNumber": 371, "col_offset": 20, "nodeName": "ps", "type": "List[Any]"}, {"lineNumber": 371, "col_offset": 24, "nodeName": "sc", "type": "List[Any]"}, {"lineNumber": 371, "col_offset": 28, "nodeName": "uf", "type": "List[Any]"}, {"lineNumber": 371, "col_offset": 33, "nodeName": "_add_user_function", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 371, "col_offset": 57, "nodeName": "varname", "type": "Any"}, {"lineNumber": 371, "col_offset": 66, "nodeName": "variable", "type": "Any"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 372, "col_offset": 38, "nodeName": "uf", "type": "List[Any]"}, {"lineNumber": 373, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 373, "col_offset": 36, "nodeName": "sc", "type": "List[Any]"}, {"lineNumber": 374, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 374, "col_offset": 32, "nodeName": "ps", "type": "List[Any]"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 375, "col_offset": 36, "nodeName": "hd", "type": "List[Any]"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 381, "col_offset": 31, "nodeName": "funcname", "type": "Any"}, {"lineNumber": 382, "col_offset": 84, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "update", "type": "Any"}, {"lineNumber": 384, "col_offset": 38, "nodeName": "func_namespace", "type": "Any"}, {"lineNumber": 389, "col_offset": 64, "nodeName": "join", "type": "Callable"}, {"lineNumber": 389, "col_offset": 74, "nodeName": "pointers", "type": "List[Any]"}, {"lineNumber": 390, "col_offset": 68, "nodeName": "join", "type": "Callable"}, {"lineNumber": 390, "col_offset": 78, "nodeName": "support_code", "type": "List[Any]"}, {"lineNumber": 391, "col_offset": 66, "nodeName": "join", "type": "Callable"}, {"lineNumber": 391, "col_offset": 76, "nodeName": "hash_defines", "type": "List[Any]"}, {"lineNumber": 392, "col_offset": 70, "nodeName": "join", "type": "Callable"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 42, "col_offset": 9, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "int32", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "dtype", "type": "str"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "device", "type": "Any"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "implementations", "type": "Any"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "word_substitute", "type": "Callable"}, {"lineNumber": 165, "col_offset": 43, "nodeName": "expr", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "codelines", "type": "Union[List[Any], List[str]]"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "c_data_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 40, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 203, "col_offset": 38, "nodeName": "decl", "type": "Any"}, {"lineNumber": 206, "col_offset": 49, "nodeName": "translate_expression", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 75, "nodeName": "expr", "type": "Any"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 233, "col_offset": 37, "nodeName": "varname", "type": "Any"}, {"lineNumber": 234, "col_offset": 59, "nodeName": "varname", "type": "Any"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 246, "col_offset": 49, "nodeName": "var", "type": "Any"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 247, "col_offset": 40, "nodeName": "condvar", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 248, "col_offset": 36, "nodeName": "line", "type": "Any"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 304, "col_offset": 29, "nodeName": "impl", "type": "Any"}, {"lineNumber": 304, "col_offset": 48, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 314, "col_offset": 16, "nodeName": "support_code", "type": "List[Any]"}, {"lineNumber": 314, "col_offset": 36, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 314, "col_offset": 71, "nodeName": "type_str", "type": "str"}, {"lineNumber": 315, "col_offset": 71, "nodeName": "ns_key", "type": "Any"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "pointers", "type": "List[str]"}, {"lineNumber": 316, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 316, "col_offset": 62, "nodeName": "ns_key", "type": "Any"}, {"lineNumber": 316, "col_offset": 70, "nodeName": "ns_key", "type": "Any"}, {"lineNumber": 317, "col_offset": 41, "nodeName": "get", "type": "Union[Any, Callable]"}, {"lineNumber": 318, "col_offset": 41, "nodeName": "get", "type": "Union[Any, Callable]"}, {"lineNumber": 324, "col_offset": 33, "nodeName": "impl", "type": "Any"}, {"lineNumber": 325, "col_offset": 16, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 325, "col_offset": 31, "nodeName": "dep_name", "type": "Any"}, {"lineNumber": 326, "col_offset": 33, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "dep_hash_defines", "type": "List[Any]"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "dep_pointers", "type": "List[Any]"}, {"lineNumber": 329, "col_offset": 16, "nodeName": "dep_support_code", "type": "List[Any]"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "user_functions", "type": "List[Any]"}, {"lineNumber": 352, "col_offset": 29, "nodeName": "device", "type": "Any"}, {"lineNumber": 353, "col_offset": 31, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 356, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 356, "col_offset": 27, "nodeName": "var", "type": "Any"}, {"lineNumber": 358, "col_offset": 52, "nodeName": "c_data_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 358, "col_offset": 69, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 359, "col_offset": 52, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 362, "col_offset": 16, "nodeName": "pointers", "type": "List[Any]"}, {"lineNumber": 363, "col_offset": 16, "nodeName": "handled_pointers", "type": "Set[str]"}, {"lineNumber": 371, "col_offset": 33, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "user_functions", "type": "List[Any]"}, {"lineNumber": 373, "col_offset": 16, "nodeName": "support_code", "type": "List[Any]"}, {"lineNumber": 374, "col_offset": 16, "nodeName": "pointers", "type": "List[Any]"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "hash_defines", "type": "List[Any]"}, {"lineNumber": 382, "col_offset": 29, "nodeName": "implementations", "type": "Any"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "variables", "type": "Any"}, {"lineNumber": 392, "col_offset": 80, "nodeName": "denormals_to_zero_code", "type": "Callable[[], Any]"}, {"lineNumber": 404, "col_offset": 22, "nodeName": "func", "type": "str"}, {"lineNumber": 411, "col_offset": 22, "nodeName": "func", "type": "str"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "int64", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "dtype", "type": "str"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "var", "type": "Any"}, {"lineNumber": 163, "col_offset": 48, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 165, "col_offset": 50, "nodeName": "varname", "type": "Any"}, {"lineNumber": 165, "col_offset": 59, "nodeName": "impl_name", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "CPPNodeRenderer", "type": "Type[brian2.parsing.rendering.CPPNodeRenderer]"}, {"lineNumber": 175, "col_offset": 71, "nodeName": "var", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 184, "col_offset": 39, "nodeName": "boolvar", "type": "Any"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 194, "col_offset": 47, "nodeName": "translate_expression", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 73, "nodeName": "simp_expr", "type": "Any"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 200, "col_offset": 40, "nodeName": "statement", "type": "Any"}, {"lineNumber": 206, "col_offset": 38, "nodeName": "op", "type": "Union[Any, str]"}, {"lineNumber": 206, "col_offset": 49, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "line", "type": "str"}, {"lineNumber": 223, "col_offset": 19, "nodeName": "line", "type": "str"}, {"lineNumber": 246, "col_offset": 49, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 260, "col_offset": 68, "nodeName": "index_var", "type": "Any"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "ns_value", "type": "Any"}, {"lineNumber": 308, "col_offset": 30, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 311, "col_offset": 31, "nodeName": "c_data_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 311, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 317, "col_offset": 41, "nodeName": "funccode", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 318, "col_offset": 41, "nodeName": "funccode", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 358, "col_offset": 52, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 358, "col_offset": 69, "nodeName": "var", "type": "Any"}, {"lineNumber": 382, "col_offset": 29, "nodeName": "func", "type": "Any"}, {"lineNumber": 382, "col_offset": 50, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 392, "col_offset": 80, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 46, "col_offset": 9, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "uint16", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "dtype", "type": "str"}, {"lineNumber": 163, "col_offset": 48, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "atomics", "type": "List[Union[Any, str]]"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "atomics", "type": "List[Union[Any, str]]"}, {"lineNumber": 186, "col_offset": 43, "nodeName": "boolvar", "type": "Any"}, {"lineNumber": 192, "col_offset": 35, "nodeName": "join", "type": "Callable"}, {"lineNumber": 192, "col_offset": 47, "nodeName": "atomics", "type": "List[Union[Any, str]]"}, {"lineNumber": 194, "col_offset": 36, "nodeName": "op", "type": "Union[Any, str]"}, {"lineNumber": 194, "col_offset": 47, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "c_data_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 222, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "get_array_name", "type": "Callable[..., Any]"}, {"lineNumber": 223, "col_offset": 46, "nodeName": "var", "type": "Any"}, {"lineNumber": 223, "col_offset": 51, "nodeName": "variables", "type": "Any"}, {"lineNumber": 234, "col_offset": 23, "nodeName": "c_data_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 234, "col_offset": 40, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 311, "col_offset": 43, "nodeName": "ns_value", "type": "Any"}, {"lineNumber": 382, "col_offset": 50, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 48, "col_offset": 9, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "dtype", "type": "str"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "c_data_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 175, "col_offset": 46, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "var", "type": "Any"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "decl", "type": "Any"}, {"lineNumber": 206, "col_offset": 26, "nodeName": "var", "type": "Any"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 222, "col_offset": 43, "nodeName": "var", "type": "Any"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 223, "col_offset": 51, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 234, "col_offset": 23, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 234, "col_offset": 40, "nodeName": "var", "type": "Any"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "get_array_name", "type": "Callable[..., Any]"}, {"lineNumber": 260, "col_offset": 39, "nodeName": "var", "type": "Any"}, {"lineNumber": 260, "col_offset": 44, "nodeName": "variables", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "uint64", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "dtype", "type": "str"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 175, "col_offset": 46, "nodeName": "statement", "type": "Any"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 260, "col_offset": 44, "nodeName": "self", "type": "CPPCodeGenerator"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "dtype", "type": "str"}, {"lineNumber": 52, "col_offset": 9, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "bool_", "type": "Any"}, {"lineNumber": 52, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 52, "col_offset": 42, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "dtype", "type": "Any"}]