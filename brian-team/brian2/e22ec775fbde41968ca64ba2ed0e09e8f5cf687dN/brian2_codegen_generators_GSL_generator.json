[{"lineNumber": 23, "col_offset": 0, "nodeName": "is_dictionary", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 325, "col_offset": 29, "nodeName": "GSLCodeGenerator", "type": "Type[GSLCodeGenerator]"}, {"lineNumber": 386, "col_offset": 28, "nodeName": "GSLCodeGenerator", "type": "Type[GSLCodeGenerator]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "register_preferences", "type": "Any"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "func_begin", "type": "str"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "func_end", "type": "str"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "func_begin", "type": "str"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "func_end", "type": "str"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "obj", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "prefs", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "libraries", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "headers", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "include_dirs", "type": "Any"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "diff_vars", "type": "Dict[str, str]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "expr_set", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "code", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "diff_vars", "type": "Dict[str, str]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "variables", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "variables", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "start_function", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "open_function", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "end_function", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "code", "type": "str"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "code", "type": "str"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "code", "type": "str"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "code", "type": "str"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "end_function", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "code", "type": "str"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "start_function", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "open_function", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "end_function", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "open_cast", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "close_cast", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "access_pointer", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "allocate_yvector", "type": "str"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "allocate_yvector", "type": "str"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "fill_yvector", "type": "List[str]"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "open_function", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "empty_yvector", "type": "List[str]"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "open_function", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "open_struct", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "end_struct", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "code", "type": "List[str]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "code", "type": "List[Any]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "variables_in_vector", "type": "Set[Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "code", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "variables", "type": "Any"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "variables", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "other_variables", "type": "Dict[Any, brian2.core.variables.AuxiliaryVariable]"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "statement", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "statements", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "other_variables", "type": "Dict[Any, brian2.core.variables.AuxiliaryVariable]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "variables", "type": "Any"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "variables", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "used_variables", "type": "Set[Any]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "statement", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "statements", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "used_variables", "type": "Set[Any]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "access_pointer", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 202, "col_offset": 23, "nodeName": "variables_in_vector", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "code", "type": "List[nothing]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "code", "type": "List[str]"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "expr_set", "type": "Any"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "code_lines", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "code", "type": "str"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "code", "type": "str"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "code", "type": "str"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "code", "type": "List[Union[Any, str]]"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 240, "col_offset": 20, "nodeName": "code_lines", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "scalar_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "vector_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "vs", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "diff_vars", "type": "Dict[str, str]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "GSL_support_code", "type": "str"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "GSL_support_code", "type": "str"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "other_variables", "type": "Dict[Any, brian2.core.variables.AuxiliaryVariable]"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "variables_in_scalar", "type": "Set[Any]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "variables_in_vector", "type": "Set[Any]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "GSL_support_code", "type": "str"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "GSL_main_code", "type": "str"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "GSL_main_code", "type": "str"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "GSL_support_code", "type": "str"}, {"lineNumber": 322, "col_offset": 31, "nodeName": "settings", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "syntax", "type": "Dict[str, str]"}, {"lineNumber": 351, "col_offset": 11, "nodeName": "in_struct", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "code", "type": "List[str]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "syntax", "type": "Dict[str, str]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "code", "type": "str"}, {"lineNumber": 407, "col_offset": 15, "nodeName": "code", "type": "str"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "BrianPreference", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "cpp", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "cpp", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "cpp", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "original_generator_class", "type": "Any"}, {"lineNumber": 59, "col_offset": 64, "nodeName": "variables", "type": "Any"}, {"lineNumber": 59, "col_offset": 75, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 59, "col_offset": 93, "nodeName": "owner", "type": "Any"}, {"lineNumber": 59, "col_offset": 100, "nodeName": "iterate_all", "type": "Any"}, {"lineNumber": 60, "col_offset": 64, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 60, "col_offset": 79, "nodeName": "name", "type": "Any"}, {"lineNumber": 60, "col_offset": 85, "nodeName": "template_name", "type": "Any"}, {"lineNumber": 61, "col_offset": 64, "nodeName": "override_conditional_write", "type": "Any"}, {"lineNumber": 61, "col_offset": 92, "nodeName": "allows_scalar_write", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "generator", "type": "Any"}, {"lineNumber": 64, "col_offset": 39, "nodeName": "item", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "expr", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "diff_num", "type": "Any"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "items", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "idx_name", "type": "str"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "replace_what", "type": "str"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "replace_with", "type": "str"}, {"lineNumber": 99, "col_offset": 39, "nodeName": "replace_with", "type": "str"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "replace_what", "type": "str"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "replace_with", "type": "str"}, {"lineNumber": 104, "col_offset": 39, "nodeName": "replace_with", "type": "str"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 133, "col_offset": 44, "nodeName": "end_function", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "fill_yvector", "type": "List[str]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "empty_yvector", "type": "List[str]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "var", "type": "str"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "diff_num", "type": "str"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "items", "type": "Callable"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "end_struct", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "code", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "var", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "get_syntax", "type": "Any"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "values", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "in_vector", "type": "bool"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "in_scalar", "type": "bool"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 219, "col_offset": 27, "nodeName": "code", "type": "List[nothing]"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 227, "col_offset": 27, "nodeName": "code", "type": "List[str]"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "word_substitute", "type": "Callable"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "code", "type": "str"}, {"lineNumber": 228, "col_offset": 37, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "from_sub", "type": "Any"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "to_sub", "type": "str"}, {"lineNumber": 231, "col_offset": 32, "nodeName": "items", "type": "Callable"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "actual_var", "type": "str"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 255, "col_offset": 27, "nodeName": "code", "type": "List[Union[Any, str]]"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "ac_name", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "ac_code", "type": "Any"}, {"lineNumber": 263, "col_offset": 32, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "statements", "type": "Tuple[Any, Any]"}, {"lineNumber": 269, "col_offset": 69, "nodeName": "statements", "type": "Tuple[Any, Any]"}, {"lineNumber": 270, "col_offset": 18, "nodeName": "itervalues", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "scalar_code", "type": "Any"}, {"lineNumber": 286, "col_offset": 21, "nodeName": "vector_code", "type": "Any"}, {"lineNumber": 286, "col_offset": 34, "nodeName": "kwds", "type": "Any"}, {"lineNumber": 286, "col_offset": 41, "nodeName": "translate_statement_sequence", "type": "Any"}, {"lineNumber": 286, "col_offset": 85, "nodeName": "scalar_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 287, "col_offset": 49, "nodeName": "vector_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "find_differential_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 293, "col_offset": 21, "nodeName": "diff_var_to_replace", "type": "Callable[[Any], Any]"}, {"lineNumber": 293, "col_offset": 46, "nodeName": "diff_vars", "type": "Dict[str, str]"}, {"lineNumber": 294, "col_offset": 27, "nodeName": "get_dimension_code", "type": "Callable[[Any], Any]"}, {"lineNumber": 295, "col_offset": 28, "nodeName": "yvector_code", "type": "Callable[[Any], Any]"}, {"lineNumber": 295, "col_offset": 46, "nodeName": "diff_vars", "type": "Dict[str, str]"}, {"lineNumber": 299, "col_offset": 26, "nodeName": "find_undefined_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 300, "col_offset": 30, "nodeName": "find_used_variables", "type": "Callable[..., Any]"}, {"lineNumber": 300, "col_offset": 80, "nodeName": "other_variables", "type": "Dict[Any, brian2.core.variables.AuxiliaryVariable]"}, {"lineNumber": 301, "col_offset": 30, "nodeName": "find_used_variables", "type": "Callable[..., Any]"}, {"lineNumber": 301, "col_offset": 80, "nodeName": "other_variables", "type": "Dict[Any, brian2.core.variables.AuxiliaryVariable]"}, {"lineNumber": 304, "col_offset": 72, "nodeName": "GSL_support_code", "type": "str"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 308, "col_offset": 24, "nodeName": "unpack_namespace", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 308, "col_offset": 46, "nodeName": "variables_in_vector", "type": "Set[Any]"}, {"lineNumber": 308, "col_offset": 67, "nodeName": "variables_in_scalar", "type": "Set[Any]"}, {"lineNumber": 313, "col_offset": 98, "nodeName": "func_end", "type": "Any"}, {"lineNumber": 316, "col_offset": 25, "nodeName": "translate_scalar_code", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 317, "col_offset": 52, "nodeName": "variables_in_scalar", "type": "Set[Any]"}, {"lineNumber": 318, "col_offset": 52, "nodeName": "variables_in_vector", "type": "Set[Any]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "scalar_code", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "vector_code", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "kwds", "type": "Any"}, {"lineNumber": 322, "col_offset": 31, "nodeName": "GSL", "type": "Any"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "scalar_code", "type": "Any"}, {"lineNumber": 323, "col_offset": 28, "nodeName": "vector_code", "type": "Any"}, {"lineNumber": 323, "col_offset": 41, "nodeName": "kwds", "type": "Any"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "c_data_type", "type": "Any"}, {"lineNumber": 333, "col_offset": 27, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 345, "col_offset": 15, "nodeName": "syntax", "type": "Dict[str, str]"}, {"lineNumber": 348, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 357, "col_offset": 15, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 357, "col_offset": 45, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 360, "col_offset": 15, "nodeName": "get_array_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 360, "col_offset": 35, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 363, "col_offset": 16, "nodeName": "c_data_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 363, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 364, "col_offset": 22, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 364, "col_offset": 31, "nodeName": "ArrayVariable", "type": "Type[brian2.core.variables.ArrayVariable]"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 372, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 372, "col_offset": 22, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 372, "col_offset": 31, "nodeName": "ArrayVariable", "type": "Type[brian2.core.variables.ArrayVariable]"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 375, "col_offset": 15, "nodeName": "in_vector", "type": "Any"}, {"lineNumber": 377, "col_offset": 15, "nodeName": "in_scalar", "type": "Any"}, {"lineNumber": 380, "col_offset": 15, "nodeName": "in_vector", "type": "Any"}, {"lineNumber": 382, "col_offset": 15, "nodeName": "in_scalar", "type": "Any"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 384, "col_offset": 27, "nodeName": "code", "type": "Any"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "syntax", "type": "Dict[str, str]"}, {"lineNumber": 410, "col_offset": 15, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 410, "col_offset": 45, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 413, "col_offset": 15, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 413, "col_offset": 45, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 416, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "c_data_type", "type": "Any"}, {"lineNumber": 419, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 420, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 420, "col_offset": 22, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 420, "col_offset": 31, "nodeName": "ArrayVariable", "type": "Type[brian2.core.variables.ArrayVariable]"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "restrict", "type": "Any"}, {"lineNumber": 422, "col_offset": 23, "nodeName": "restrict", "type": "Any"}, {"lineNumber": 423, "col_offset": 15, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 430, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 430, "col_offset": 22, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 430, "col_offset": 31, "nodeName": "ArrayVariable", "type": "Type[brian2.core.variables.ArrayVariable]"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "in_vector", "type": "Any"}, {"lineNumber": 438, "col_offset": 15, "nodeName": "in_vector", "type": "Any"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "is_dictionary", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "codegen", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "codegen", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "codegen", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "split", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "expr", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "search", "type": "Callable"}, {"lineNumber": 83, "col_offset": 51, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "diff_vars", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "diff_var_declaration", "type": "Any"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "var", "type": "Any"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "diff_num", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "variables", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 95, "col_offset": 55, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 112, "col_offset": 110, "nodeName": "start_function", "type": "Any"}, {"lineNumber": 113, "col_offset": 106, "nodeName": "open_function", "type": "Any"}, {"lineNumber": 114, "col_offset": 79, "nodeName": "diff_num", "type": "Any"}, {"lineNumber": 114, "col_offset": 103, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 115, "col_offset": 79, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 128, "col_offset": 110, "nodeName": "start_function", "type": "Any"}, {"lineNumber": 129, "col_offset": 109, "nodeName": "open_function", "type": "Any"}, {"lineNumber": 130, "col_offset": 111, "nodeName": "open_cast", "type": "Any"}, {"lineNumber": 131, "col_offset": 112, "nodeName": "close_cast", "type": "Any"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "diff_vars", "type": "Dict[str, str]"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 155, "col_offset": 77, "nodeName": "join", "type": "Callable"}, {"lineNumber": 155, "col_offset": 88, "nodeName": "empty_yvector", "type": "List[str]"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 162, "col_offset": 60, "nodeName": "open_struct", "type": "Any"}, {"lineNumber": 163, "col_offset": 70, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "expr", "type": "Any"}, {"lineNumber": 175, "col_offset": 27, "nodeName": "comment", "type": "Any"}, {"lineNumber": 175, "col_offset": 38, "nodeName": "var", "type": "Any"}, {"lineNumber": 175, "col_offset": 53, "nodeName": "op", "type": "Any"}, {"lineNumber": 176, "col_offset": 38, "nodeName": "expr", "type": "Any"}, {"lineNumber": 176, "col_offset": 54, "nodeName": "comment", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "variables", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 185, "col_offset": 21, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 185, "col_offset": 26, "nodeName": "comment", "type": "Any"}, {"lineNumber": 185, "col_offset": 37, "nodeName": "var", "type": "Any"}, {"lineNumber": 185, "col_offset": 52, "nodeName": "op", "type": "Any"}, {"lineNumber": 186, "col_offset": 38, "nodeName": "expr", "type": "Any"}, {"lineNumber": 186, "col_offset": 54, "nodeName": "comment", "type": "Any"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "get_identifiers", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 187, "col_offset": 40, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 205, "col_offset": 35, "nodeName": "ArrayVariable", "type": "Type[brian2.core.variables.ArrayVariable]"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "var", "type": "Any"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "variables", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 216, "col_offset": 35, "nodeName": "variables_in_vector", "type": "Set[Any]"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 217, "col_offset": 35, "nodeName": "variables_in_scalar", "type": "Set[Any]"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "split", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "code", "type": "List[str]"}, {"lineNumber": 231, "col_offset": 32, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "search", "type": "Callable"}, {"lineNumber": 232, "col_offset": 42, "nodeName": "from_sub", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "code", "type": "str"}, {"lineNumber": 243, "col_offset": 19, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "search", "type": "Callable"}, {"lineNumber": 246, "col_offset": 49, "nodeName": "var", "type": "Any"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "group", "type": "Callable"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "actual_var", "type": "str"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "code", "type": "List[Union[Any, str]]"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "actual_var", "type": "str"}, {"lineNumber": 263, "col_offset": 32, "nodeName": "code", "type": "Any"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "make_statements", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 264, "col_offset": 41, "nodeName": "ac_code", "type": "Any"}, {"lineNumber": 265, "col_offset": 41, "nodeName": "variables", "type": "Any"}, {"lineNumber": 266, "col_offset": 41, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 270, "col_offset": 18, "nodeName": "vector_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 278, "col_offset": 19, "nodeName": "OrderDependenceError", "type": "Type[brian2.codegen.permutation_analysis.OrderDependenceError]"}, {"lineNumber": 286, "col_offset": 41, "nodeName": "generator", "type": "Any"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 292, "col_offset": 53, "nodeName": "values", "type": "Any"}, {"lineNumber": 293, "col_offset": 21, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 294, "col_offset": 27, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 294, "col_offset": 51, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 294, "col_offset": 55, "nodeName": "diff_vars", "type": "Dict[str, str]"}, {"lineNumber": 295, "col_offset": 28, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 299, "col_offset": 26, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 300, "col_offset": 30, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 300, "col_offset": 55, "nodeName": "scalar_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 301, "col_offset": 30, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 301, "col_offset": 55, "nodeName": "vector_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 304, "col_offset": 27, "nodeName": "write_dataholder", "type": "Callable[[Any], Any]"}, {"lineNumber": 304, "col_offset": 49, "nodeName": "variables_in_vector", "type": "Set[Any]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 306, "col_offset": 26, "nodeName": "to_replace_vector_vars", "type": "Callable[..., Any]"}, {"lineNumber": 306, "col_offset": 54, "nodeName": "variables_in_vector", "type": "Set[Any]"}, {"lineNumber": 308, "col_offset": 24, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 313, "col_offset": 98, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 316, "col_offset": 25, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 316, "col_offset": 52, "nodeName": "scalar_code", "type": "Any"}, {"lineNumber": 322, "col_offset": 31, "nodeName": "prefs", "type": "Any"}, {"lineNumber": 345, "col_offset": 22, "nodeName": "type", "type": "Any"}, {"lineNumber": 348, "col_offset": 46, "nodeName": "var", "type": "Any"}, {"lineNumber": 348, "col_offset": 55, "nodeName": "diff_num", "type": "Any"}, {"lineNumber": 352, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 354, "col_offset": 42, "nodeName": "name", "type": "Any"}, {"lineNumber": 357, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 360, "col_offset": 15, "nodeName": "self", "type": "GSLCythonCodeGenerator"}, {"lineNumber": 363, "col_offset": 16, "nodeName": "self", "type": "GSLCythonCodeGenerator"}, {"lineNumber": 363, "col_offset": 33, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 365, "col_offset": 25, "nodeName": "get_array_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 365, "col_offset": 45, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 366, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 368, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 373, "col_offset": 25, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 373, "col_offset": 55, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 374, "col_offset": 20, "nodeName": "c_data_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 374, "col_offset": 37, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "code", "type": "List[str]"}, {"lineNumber": 378, "col_offset": 16, "nodeName": "code", "type": "List[str]"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "code", "type": "Any"}, {"lineNumber": 383, "col_offset": 16, "nodeName": "code", "type": "Any"}, {"lineNumber": 403, "col_offset": 22, "nodeName": "type", "type": "Any"}, {"lineNumber": 406, "col_offset": 24, "nodeName": "type", "type": "Any"}, {"lineNumber": 406, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 410, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 413, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 416, "col_offset": 59, "nodeName": "var", "type": "Any"}, {"lineNumber": 416, "col_offset": 68, "nodeName": "diff_num", "type": "Any"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "generator", "type": "Any"}, {"lineNumber": 419, "col_offset": 43, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 421, "col_offset": 27, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 421, "col_offset": 57, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 422, "col_offset": 23, "nodeName": "generator", "type": "Any"}, {"lineNumber": 423, "col_offset": 15, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "restrict", "type": "str"}, {"lineNumber": 425, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 427, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 431, "col_offset": 27, "nodeName": "get_pointer_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 431, "col_offset": 49, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 432, "col_offset": 25, "nodeName": "get_array_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 432, "col_offset": 45, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "prefs", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "prefs", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "prefs", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "expr_set", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "strip", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "op", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "comment", "type": "Any"}, {"lineNumber": 80, "col_offset": 40, "nodeName": "parse_statement", "type": "Callable[[Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 80, "col_offset": 56, "nodeName": "expr", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "diff_vars", "type": "Dict[str, str]"}, {"lineNumber": 85, "col_offset": 40, "nodeName": "group", "type": "Callable"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 93, "col_offset": 52, "nodeName": "diff_num", "type": "Any"}, {"lineNumber": 94, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "generator", "type": "Any"}, {"lineNumber": 97, "col_offset": 80, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 97, "col_offset": 101, "nodeName": "idx_name", "type": "str"}, {"lineNumber": 97, "col_offset": 115, "nodeName": "var", "type": "Any"}, {"lineNumber": 98, "col_offset": 57, "nodeName": "diff_num", "type": "Any"}, {"lineNumber": 98, "col_offset": 71, "nodeName": "var", "type": "Any"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "replace_what", "type": "str"}, {"lineNumber": 100, "col_offset": 80, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 101, "col_offset": 78, "nodeName": "idx_name", "type": "str"}, {"lineNumber": 102, "col_offset": 73, "nodeName": "var", "type": "Any"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "replace_what", "type": "str"}, {"lineNumber": 132, "col_offset": 109, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 132, "col_offset": 113, "nodeName": "diff_vars", "type": "Dict[str, str]"}, {"lineNumber": 135, "col_offset": 122, "nodeName": "start_function", "type": "Any"}, {"lineNumber": 137, "col_offset": 124, "nodeName": "start_function", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "generator", "type": "Any"}, {"lineNumber": 141, "col_offset": 55, "nodeName": "variables", "type": "Any"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 146, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 150, "col_offset": 98, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 151, "col_offset": 97, "nodeName": "end_function", "type": "Any"}, {"lineNumber": 152, "col_offset": 99, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 153, "col_offset": 97, "nodeName": "end_function", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 165, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 175, "col_offset": 38, "nodeName": "statement", "type": "Any"}, {"lineNumber": 175, "col_offset": 53, "nodeName": "statement", "type": "Any"}, {"lineNumber": 176, "col_offset": 38, "nodeName": "statement", "type": "Any"}, {"lineNumber": 176, "col_offset": 54, "nodeName": "statement", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "other_variables", "type": "Dict[Any, brian2.core.variables.AuxiliaryVariable]"}, {"lineNumber": 178, "col_offset": 39, "nodeName": "AuxiliaryVariable", "type": "Type[brian2.core.variables.AuxiliaryVariable]"}, {"lineNumber": 178, "col_offset": 57, "nodeName": "var", "type": "Any"}, {"lineNumber": 185, "col_offset": 37, "nodeName": "statement", "type": "Any"}, {"lineNumber": 185, "col_offset": 52, "nodeName": "statement", "type": "Any"}, {"lineNumber": 186, "col_offset": 38, "nodeName": "statement", "type": "Any"}, {"lineNumber": 186, "col_offset": 54, "nodeName": "statement", "type": "Any"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 194, "col_offset": 30, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 194, "col_offset": 39, "nodeName": "Function", "type": "Type[brian2.core.functions.Function]"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 196, "col_offset": 35, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 203, "col_offset": 31, "nodeName": "ignore", "type": "Any"}, {"lineNumber": 203, "col_offset": 51, "nodeName": "name", "type": "Any"}, {"lineNumber": 206, "col_offset": 31, "nodeName": "get_pointer_name", "type": "Any"}, {"lineNumber": 206, "col_offset": 53, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 207, "col_offset": 66, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "to_replace", "type": "Dict[Any, str]"}, {"lineNumber": 210, "col_offset": 57, "nodeName": "var", "type": "Any"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "unpack_namespace_single", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 218, "col_offset": 50, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 218, "col_offset": 59, "nodeName": "in_vector", "type": "bool"}, {"lineNumber": 218, "col_offset": 70, "nodeName": "in_scalar", "type": "bool"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "expr_set", "type": "Any"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 234, "col_offset": 23, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 234, "col_offset": 59, "nodeName": "to_sub", "type": "str"}, {"lineNumber": 234, "col_offset": 67, "nodeName": "code", "type": "str"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "var", "type": "Any"}, {"lineNumber": 242, "col_offset": 21, "nodeName": "op", "type": "Any"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "expr", "type": "Any"}, {"lineNumber": 242, "col_offset": 31, "nodeName": "comment", "type": "Any"}, {"lineNumber": 242, "col_offset": 41, "nodeName": "parse_statement", "type": "Callable[[Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 242, "col_offset": 57, "nodeName": "line", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "code", "type": "List[Union[Any, str]]"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 248, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "line", "type": "Any"}, {"lineNumber": 250, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 251, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 265, "col_offset": 41, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 268, "col_offset": 51, "nodeName": "ac_name", "type": "Any"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "scalar_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 269, "col_offset": 40, "nodeName": "vector_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 274, "col_offset": 19, "nodeName": "has_repeated_indices", "type": "Any"}, {"lineNumber": 274, "col_offset": 45, "nodeName": "vs", "type": "Any"}, {"lineNumber": 286, "col_offset": 41, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 292, "col_offset": 53, "nodeName": "code", "type": "Any"}, {"lineNumber": 299, "col_offset": 56, "nodeName": "scalar_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 299, "col_offset": 80, "nodeName": "vector_statements", "type": "Dict[Any, Any]"}, {"lineNumber": 304, "col_offset": 27, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 306, "col_offset": 26, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 352, "col_offset": 19, "nodeName": "type", "type": "Any"}, {"lineNumber": 357, "col_offset": 15, "nodeName": "self", "type": "GSLCythonCodeGenerator"}, {"lineNumber": 365, "col_offset": 25, "nodeName": "self", "type": "GSLCythonCodeGenerator"}, {"lineNumber": 366, "col_offset": 49, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 366, "col_offset": 60, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 368, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 368, "col_offset": 59, "nodeName": "name", "type": "Any"}, {"lineNumber": 373, "col_offset": 25, "nodeName": "generator", "type": "Any"}, {"lineNumber": 374, "col_offset": 20, "nodeName": "self", "type": "GSLCythonCodeGenerator"}, {"lineNumber": 374, "col_offset": 37, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 410, "col_offset": 15, "nodeName": "self", "type": "GSLWeaveCodeGenerator"}, {"lineNumber": 413, "col_offset": 15, "nodeName": "self", "type": "GSLWeaveCodeGenerator"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "self", "type": "GSLWeaveCodeGenerator"}, {"lineNumber": 421, "col_offset": 27, "nodeName": "generator", "type": "Any"}, {"lineNumber": 422, "col_offset": 23, "nodeName": "self", "type": "GSLWeaveCodeGenerator"}, {"lineNumber": 425, "col_offset": 56, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 425, "col_offset": 67, "nodeName": "restrict", "type": "Union[str, Any]"}, {"lineNumber": 425, "col_offset": 81, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 427, "col_offset": 49, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 427, "col_offset": 60, "nodeName": "name", "type": "Any"}, {"lineNumber": 431, "col_offset": 27, "nodeName": "self", "type": "GSLWeaveCodeGenerator"}, {"lineNumber": 432, "col_offset": 25, "nodeName": "self", "type": "GSLWeaveCodeGenerator"}, {"lineNumber": 434, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 439, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "expr", "type": "Any"}, {"lineNumber": 85, "col_offset": 40, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 141, "col_offset": 55, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 141, "col_offset": 70, "nodeName": "var", "type": "str"}, {"lineNumber": 142, "col_offset": 94, "nodeName": "access_pointer", "type": "Any"}, {"lineNumber": 143, "col_offset": 91, "nodeName": "diff_num", "type": "str"}, {"lineNumber": 144, "col_offset": 91, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 145, "col_offset": 101, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 146, "col_offset": 95, "nodeName": "access_pointer", "type": "Any"}, {"lineNumber": 147, "col_offset": 92, "nodeName": "diff_num", "type": "str"}, {"lineNumber": 148, "col_offset": 92, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 149, "col_offset": 102, "nodeName": "end_statement", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "allocate_yvector", "type": "str"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "join", "type": "Callable"}, {"lineNumber": 155, "col_offset": 53, "nodeName": "fill_yvector", "type": "List[str]"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "declare", "type": "Any"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "declare", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 165, "col_offset": 48, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "write_dataholder_single", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 55, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 178, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 178, "col_offset": 68, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 188, "col_offset": 47, "nodeName": "var", "type": "Any"}, {"lineNumber": 188, "col_offset": 54, "nodeName": "ignore", "type": "Any"}, {"lineNumber": 191, "col_offset": 30, "nodeName": "variables", "type": "Any"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "used_variables", "type": "Set[Any]"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 203, "col_offset": 51, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 206, "col_offset": 31, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 207, "col_offset": 27, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 207, "col_offset": 49, "nodeName": "access_pointer", "type": "Any"}, {"lineNumber": 210, "col_offset": 27, "nodeName": "var", "type": "Any"}, {"lineNumber": 210, "col_offset": 40, "nodeName": "access_pointer", "type": "Any"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 226, "col_offset": 32, "nodeName": "line", "type": "Any"}, {"lineNumber": 234, "col_offset": 23, "nodeName": "re", "type": "module"}, {"lineNumber": 234, "col_offset": 30, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 234, "col_offset": 48, "nodeName": "from_sub", "type": "Any"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "line", "type": "Any"}, {"lineNumber": 248, "col_offset": 30, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 248, "col_offset": 47, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 248, "col_offset": 58, "nodeName": "variables_in_scalar", "type": "Set[Any]"}, {"lineNumber": 250, "col_offset": 30, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 250, "col_offset": 47, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 250, "col_offset": 58, "nodeName": "variables_in_vector", "type": "Set[Any]"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 269, "col_offset": 30, "nodeName": "ac_name", "type": "Any"}, {"lineNumber": 269, "col_offset": 58, "nodeName": "ac_name", "type": "Any"}, {"lineNumber": 274, "col_offset": 19, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 275, "col_offset": 20, "nodeName": "check_for_order_independence", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 275, "col_offset": 49, "nodeName": "vs", "type": "Any"}, {"lineNumber": 276, "col_offset": 49, "nodeName": "variables", "type": "Any"}, {"lineNumber": 277, "col_offset": 49, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 354, "col_offset": 29, "nodeName": "type", "type": "Any"}, {"lineNumber": 368, "col_offset": 59, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 373, "col_offset": 25, "nodeName": "self", "type": "GSLCythonCodeGenerator"}, {"lineNumber": 376, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 381, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 383, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 421, "col_offset": 27, "nodeName": "self", "type": "GSLWeaveCodeGenerator"}, {"lineNumber": 427, "col_offset": 60, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 434, "col_offset": 55, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 434, "col_offset": 75, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 439, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "group", "type": "Callable"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 178, "col_offset": 68, "nodeName": "statement", "type": "Any"}, {"lineNumber": 191, "col_offset": 40, "nodeName": "var", "type": "Any"}, {"lineNumber": 193, "col_offset": 30, "nodeName": "other_variables", "type": "Any"}, {"lineNumber": 234, "col_offset": 30, "nodeName": "re", "type": "module"}, {"lineNumber": 254, "col_offset": 28, "nodeName": "actual_var", "type": "str"}, {"lineNumber": 254, "col_offset": 43, "nodeName": "op", "type": "Any"}, {"lineNumber": 254, "col_offset": 52, "nodeName": "expr", "type": "Any"}, {"lineNumber": 254, "col_offset": 66, "nodeName": "comment", "type": "Any"}, {"lineNumber": 276, "col_offset": 49, "nodeName": "generator", "type": "Any"}, {"lineNumber": 277, "col_offset": 49, "nodeName": "generator", "type": "Any"}, {"lineNumber": 280, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 280, "col_offset": 23, "nodeName": "vs", "type": "Any"}, {"lineNumber": 306, "col_offset": 87, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 376, "col_offset": 82, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 376, "col_offset": 100, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 378, "col_offset": 80, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 378, "col_offset": 98, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 381, "col_offset": 68, "nodeName": "name", "type": "Any"}, {"lineNumber": 383, "col_offset": 66, "nodeName": "name", "type": "Any"}, {"lineNumber": 439, "col_offset": 53, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 193, "col_offset": 46, "nodeName": "var", "type": "Any"}, {"lineNumber": 276, "col_offset": 49, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 277, "col_offset": 49, "nodeName": "self", "type": "GSLCodeGenerator"}, {"lineNumber": 281, "col_offset": 58, "nodeName": "vs", "type": "Any"}, {"lineNumber": 306, "col_offset": 87, "nodeName": "diff_vars", "type": "Dict[str, str]"}, {"lineNumber": 381, "col_offset": 68, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 383, "col_offset": 66, "nodeName": "var_obj", "type": "Any"}, {"lineNumber": 284, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 284, "col_offset": 50, "nodeName": "vs", "type": "Any"}, {"lineNumber": 284, "col_offset": 55, "nodeName": "vs", "type": "Any"}]