[{"lineNumber": 15, "col_offset": 0, "nodeName": "test_analyse_identifiers", "type": "Callable[[], Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "test_get_identifiers_recursively", "type": "Callable[[], Any]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "test_nested_subexpressions", "type": "Callable[[], Any]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "FakeGroup", "type": "Type[`namedtuple-FakeGroup-variables`]"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "identifiers", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "stmts", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "evalorder", "type": "str"}, {"lineNumber": 94, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "defined", "type": "Any"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "used_known", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "dependent", "type": "Any"}, {"lineNumber": 28, "col_offset": 37, "nodeName": "analyse_identifiers", "type": "Any"}, {"lineNumber": 28, "col_offset": 57, "nodeName": "code", "type": "str"}, {"lineNumber": 28, "col_offset": 63, "nodeName": "known", "type": "Dict[str, brian2.core.variables.Variable]"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "defined", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "used_known", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "dependent", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "get_identifiers_recursively", "type": "Any"}, {"lineNumber": 48, "col_offset": 63, "nodeName": "variables", "type": "Dict[str, Union[brian2.core.variables.Variable, brian2.core.variables.Subexpression]]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "identifiers", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "make_statements", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "code", "type": "str"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "variables", "type": "Dict[str, Union[brian2.core.variables.Variable, brian2.core.variables.Subexpression]]"}, {"lineNumber": 88, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "evalorder", "type": "str"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "test_analyse_identifiers", "type": "Callable[[], Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "test_get_identifiers_recursively", "type": "Callable[[], Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "test_translate_subexpression", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "test_nested_subexpressions", "type": "Callable[[], Any]"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "Variable", "type": "Type[brian2.core.variables.Variable]"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "Variable", "type": "Type[brian2.core.variables.Variable]"}, {"lineNumber": 25, "col_offset": 18, "nodeName": "Variable", "type": "Type[brian2.core.variables.Variable]"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "Variable", "type": "Type[brian2.core.variables.Variable]"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "Subexpression", "type": "Type[brian2.core.variables.Subexpression]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "Subexpression", "type": "Type[brian2.core.variables.Subexpression]"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "Variable", "type": "Type[brian2.core.variables.Variable]"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "Subexpression", "type": "Type[brian2.core.variables.Subexpression]"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "Subexpression", "type": "Type[brian2.core.variables.Subexpression]"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "Variable", "type": "Type[brian2.core.variables.Variable]"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "Variable", "type": "Type[brian2.core.variables.Variable]"}, {"lineNumber": 88, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "var", "type": "Any"}, {"lineNumber": 40, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 44, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 81, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 83, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 89, "col_offset": 45, "nodeName": "stmts", "type": "Any"}, {"lineNumber": 39, "col_offset": 57, "nodeName": "Unit", "type": "Type[brian2.units.fundamentalunits.Unit]"}, {"lineNumber": 40, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 45, "nodeName": "FakeGroup", "type": "Type[`namedtuple-FakeGroup-variables`]"}, {"lineNumber": 43, "col_offset": 57, "nodeName": "Unit", "type": "Type[brian2.units.fundamentalunits.Unit]"}, {"lineNumber": 44, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "FakeGroup", "type": "Type[`namedtuple-FakeGroup-variables`]"}, {"lineNumber": 81, "col_offset": 42, "nodeName": "Unit", "type": "Type[brian2.units.fundamentalunits.Unit]"}, {"lineNumber": 81, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 75, "nodeName": "FakeGroup", "type": "Type[`namedtuple-FakeGroup-variables`]"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "Unit", "type": "Type[brian2.units.fundamentalunits.Unit]"}, {"lineNumber": 83, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 75, "nodeName": "FakeGroup", "type": "Type[`namedtuple-FakeGroup-variables`]"}]