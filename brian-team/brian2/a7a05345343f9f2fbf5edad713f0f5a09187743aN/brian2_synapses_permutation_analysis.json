[{"lineNumber": 17, "col_offset": 0, "nodeName": "check_for_order_independence", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 13, "col_offset": 27, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "new_statements", "type": "List[Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "statement", "type": "Any"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "statements", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "statements", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "new_statements", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "non_synaptic_variables", "type": "Set[Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "variables", "type": "Set[Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "permutation_independent", "type": "Set[Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "changed_permutation_independent", "type": "bool"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "changed_permutation_independent", "type": "bool"}, {"lineNumber": 85, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "syn", "type": "Set[str]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "presyn", "type": "Set[str]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "postsyn", "type": "Set[str]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "variables", "type": "Dict[Any, brian2.core.variables.ArrayVariable]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "sympy_expr", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "collected", "type": "Any"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "union", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 48, "col_offset": 57, "nodeName": "postsynaptic_variables", "type": "Set[str]"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "union", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 49, "col_offset": 41, "nodeName": "non_synaptic_variables", "type": "Set[Any]"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "changed_permutation_independent", "type": "bool"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "statement", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "statements", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "union", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 98, "col_offset": 39, "nodeName": "postsyn", "type": "Set[str]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "scalar_statements", "type": "Any"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "vector_statements", "type": "Any"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "make_statements", "type": "Any"}, {"lineNumber": 100, "col_offset": 59, "nodeName": "code", "type": "str"}, {"lineNumber": 100, "col_offset": 65, "nodeName": "variables", "type": "Dict[Any, brian2.core.variables.ArrayVariable]"}, {"lineNumber": 100, "col_offset": 76, "nodeName": "float64", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "check_for_order_independence", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "vector_statements", "type": "Any"}, {"lineNumber": 101, "col_offset": 52, "nodeName": "syn", "type": "Set[str]"}, {"lineNumber": 101, "col_offset": 57, "nodeName": "presyn", "type": "Set[str]"}, {"lineNumber": 101, "col_offset": 65, "nodeName": "postsyn", "type": "Set[str]"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "str_to_sympy", "type": "Any"}, {"lineNumber": 26, "col_offset": 38, "nodeName": "expr", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "Symbol", "type": "Any"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "var", "type": "Any"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "collect", "type": "Any"}, {"lineNumber": 28, "col_offset": 38, "nodeName": "sympy_expr", "type": "Any"}, {"lineNumber": 28, "col_offset": 50, "nodeName": "var", "type": "Any"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "presynaptic_variables", "type": "Set[str]"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "synaptic_variables", "type": "Set[str]"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "non_synaptic_variables", "type": "Set[Any]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "vars_in_expr", "type": "Set[Any]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "nonsyn_vars_in_expr", "type": "Set[Any]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "permdep", "type": "bool"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "variables", "type": "Dict[Any, brian2.core.variables.ArrayVariable]"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "ArrayVariable", "type": "Type[brian2.core.variables.ArrayVariable]"}, {"lineNumber": 99, "col_offset": 39, "nodeName": "var", "type": "Any"}, {"lineNumber": 99, "col_offset": 57, "nodeName": "device", "type": "Any"}, {"lineNumber": 26, "col_offset": 38, "nodeName": "statement", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "statement", "type": "Any"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "intersection", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 55, "col_offset": 72, "nodeName": "variables", "type": "Set[Any]"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "intersection", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 56, "col_offset": 60, "nodeName": "non_synaptic_variables", "type": "Set[Any]"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "synaptic_variables", "type": "Set[str]"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "permdep", "type": "bool"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "union", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "presyn", "type": "Set[str]"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "var", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "collected", "type": "Any"}, {"lineNumber": 29, "col_offset": 39, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 29, "col_offset": 68, "nodeName": "var", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "new_statements", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 38, "nodeName": "Statement", "type": "Type[brian2.codegen.statements.Statement]"}, {"lineNumber": 31, "col_offset": 48, "nodeName": "var", "type": "Any"}, {"lineNumber": 34, "col_offset": 48, "nodeName": "comment", "type": "Any"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "var", "type": "Any"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "collected", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "statement", "type": "Any"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "vars_in_expr", "type": "Set[Any]"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "statement", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "non_synaptic_variables", "type": "Set[Any]"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "syn", "type": "Set[str]"}, {"lineNumber": 29, "col_offset": 43, "nodeName": "keys", "type": "Any"}, {"lineNumber": 31, "col_offset": 48, "nodeName": "statement", "type": "Any"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "sympy_to_str", "type": "Any"}, {"lineNumber": 34, "col_offset": 48, "nodeName": "statement", "type": "Any"}, {"lineNumber": 35, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "collected", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "new_statements", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 38, "nodeName": "Statement", "type": "Type[brian2.codegen.statements.Statement]"}, {"lineNumber": 38, "col_offset": 48, "nodeName": "var", "type": "Any"}, {"lineNumber": 41, "col_offset": 48, "nodeName": "comment", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "new_statements", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "get_identifiers", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "expr", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "var", "type": "Any"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "permutation_independent", "type": "Set[Any]"}, {"lineNumber": 57, "col_offset": 65, "nodeName": "var", "type": "Any"}, {"lineNumber": 57, "col_offset": 73, "nodeName": "nonsyn_vars_in_expr", "type": "Set[Any]"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "OrderDependenceError", "type": "Type[OrderDependenceError]"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "statement", "type": "Any"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "permdep", "type": "bool"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "OrderDependenceError", "type": "Type[OrderDependenceError]"}, {"lineNumber": 29, "col_offset": 43, "nodeName": "collected", "type": "Any"}, {"lineNumber": 33, "col_offset": 61, "nodeName": "collected", "type": "Any"}, {"lineNumber": 35, "col_offset": 54, "nodeName": "statement", "type": "Any"}, {"lineNumber": 38, "col_offset": 48, "nodeName": "statement", "type": "Any"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "sympy_to_str", "type": "Any"}, {"lineNumber": 41, "col_offset": 48, "nodeName": "statement", "type": "Any"}, {"lineNumber": 42, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "statement", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "op", "type": "Any"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "op", "type": "Any"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "var", "type": "Any"}, {"lineNumber": 65, "col_offset": 40, "nodeName": "permutation_independent", "type": "Set[Any]"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "changed_permutation_independent", "type": "bool"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "op", "type": "Any"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "permdep", "type": "bool"}, {"lineNumber": 40, "col_offset": 61, "nodeName": "collected", "type": "Any"}, {"lineNumber": 42, "col_offset": 54, "nodeName": "statement", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "statement", "type": "Any"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "statement", "type": "Any"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "OrderDependenceError", "type": "Type[OrderDependenceError]"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "statement", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 66, "col_offset": 55, "nodeName": "var", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "statement", "type": "Any"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "var", "type": "Any"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "presynaptic_variables", "type": "Set[str]"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "OrderDependenceError", "type": "Type[OrderDependenceError]"}, {"lineNumber": 40, "col_offset": 71, "nodeName": "var", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "permutation_independent", "type": "Set[Any]"}, {"lineNumber": 66, "col_offset": 55, "nodeName": "statement", "type": "Any"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "statement", "type": "Any"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "sameidx", "type": "Set[str]"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "otheridx", "type": "Set[str]"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "presynaptic_variables", "type": "Set[str]"}, {"lineNumber": 70, "col_offset": 67, "nodeName": "postsynaptic_variables", "type": "Set[str]"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "sameidx", "type": "Set[str]"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "otheridx", "type": "Set[str]"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "postsynaptic_variables", "type": "Set[str]"}, {"lineNumber": 72, "col_offset": 68, "nodeName": "presynaptic_variables", "type": "Set[str]"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "OrderDependenceError", "type": "Type[OrderDependenceError]"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "OrderDependenceError", "type": "Type[OrderDependenceError]"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "OrderDependenceError", "type": "Type[OrderDependenceError]"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "var", "type": "Any"}, {"lineNumber": 73, "col_offset": 34, "nodeName": "otheridx", "type": "Set[str]"}, {"lineNumber": 73, "col_offset": 47, "nodeName": "var", "type": "Any"}, {"lineNumber": 73, "col_offset": 54, "nodeName": "vars_in_expr", "type": "Set[Any]"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "var", "type": "Any"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "synaptic_variables", "type": "Set[str]"}, {"lineNumber": 77, "col_offset": 57, "nodeName": "var", "type": "Any"}, {"lineNumber": 77, "col_offset": 64, "nodeName": "vars_in_expr", "type": "Set[Any]"}]