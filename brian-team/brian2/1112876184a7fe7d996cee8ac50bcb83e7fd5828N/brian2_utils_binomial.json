[{"lineNumber": 12, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 15, "col_offset": 23, "nodeName": "Function", "type": "Type[brian2.core.functions.Function]"}, {"lineNumber": 15, "col_offset": 33, "nodeName": "Nameable", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "use_normal", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "use_normal", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "use_normal", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "use_normal", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "use_normal", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "approximate", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "loc", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "add_implementation", "type": "Any"}, {"lineNumber": 56, "col_offset": 57, "nodeName": "sample_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "loc", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "qn", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "bound", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "loc", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "dependencies", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "dependencies", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "add_implementation", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "dependencies", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "dependencies", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "add_implementation", "type": "Any"}, {"lineNumber": 167, "col_offset": 58, "nodeName": "cython_code", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "Nameable", "type": "Any"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "n", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "Function", "type": "Type[brian2.core.functions.Function]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "implementations", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "n", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "p", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "P", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "P", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "P", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "exp", "type": "Any"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "min", "type": "Callable"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "n", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "n", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "replace", "type": "Any"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "cpp_code", "type": "str"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "replace", "type": "Any"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "cpp_code", "type": "str"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "implementations", "type": "Any"}, {"lineNumber": 123, "col_offset": 72, "nodeName": "cpp_code", "type": "Any"}, {"lineNumber": 124, "col_offset": 61, "nodeName": "dependencies", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 125, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "replace", "type": "Any"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "cython_code", "type": "str"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "replace", "type": "Any"}, {"lineNumber": 158, "col_offset": 34, "nodeName": "cython_code", "type": "str"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "implementations", "type": "Any"}, {"lineNumber": 168, "col_offset": 61, "nodeName": "dependencies", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 169, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "n", "type": "Any"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 36, "col_offset": 51, "nodeName": "n", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "N", "type": "int"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "normal", "type": "Any"}, {"lineNumber": 45, "col_offset": 40, "nodeName": "loc", "type": "Any"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "scale", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "N", "type": "int"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "binomial", "type": "Any"}, {"lineNumber": 52, "col_offset": 42, "nodeName": "n", "type": "Any"}, {"lineNumber": 52, "col_offset": 45, "nodeName": "p", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "n", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 52, "nodeName": "name", "type": "Any"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 120, "col_offset": 52, "nodeName": "name", "type": "Any"}, {"lineNumber": 121, "col_offset": 37, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 58, "nodeName": "name", "type": "Any"}, {"lineNumber": 137, "col_offset": 38, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 164, "col_offset": 58, "nodeName": "name", "type": "Any"}, {"lineNumber": 165, "col_offset": 37, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 56, "nodeName": "p", "type": "Any"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "n", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "p", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "vectorisation_idx", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "N", "type": "int"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 45, "col_offset": 57, "nodeName": "N", "type": "int"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "vectorisation_idx", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "N", "type": "int"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 52, "col_offset": 53, "nodeName": "N", "type": "int"}, {"lineNumber": 54, "col_offset": 47, "nodeName": "sample_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "n", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "p", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "log", "type": "Any"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "q", "type": "Any"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "n", "type": "Any"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "P", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "n", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "p", "type": "Any"}, {"lineNumber": 83, "col_offset": 63, "nodeName": "scale", "type": "Any"}, {"lineNumber": 84, "col_offset": 61, "nodeName": "loc", "type": "Any"}, {"lineNumber": 85, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 56, "nodeName": "n", "type": "Any"}, {"lineNumber": 115, "col_offset": 59, "nodeName": "P", "type": "Any"}, {"lineNumber": 116, "col_offset": 59, "nodeName": "q", "type": "Any"}, {"lineNumber": 117, "col_offset": 60, "nodeName": "qn", "type": "Any"}, {"lineNumber": 118, "col_offset": 63, "nodeName": "bound", "type": "Any"}, {"lineNumber": 119, "col_offset": 74, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 120, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 134, "col_offset": 69, "nodeName": "scale", "type": "Any"}, {"lineNumber": 135, "col_offset": 67, "nodeName": "loc", "type": "Any"}, {"lineNumber": 136, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 62, "nodeName": "n", "type": "Any"}, {"lineNumber": 159, "col_offset": 65, "nodeName": "p", "type": "Any"}, {"lineNumber": 160, "col_offset": 65, "nodeName": "q", "type": "Any"}, {"lineNumber": 161, "col_offset": 66, "nodeName": "qn", "type": "Any"}, {"lineNumber": 162, "col_offset": 69, "nodeName": "bound", "type": "Any"}, {"lineNumber": 163, "col_offset": 80, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 164, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "vectorisation_idx", "type": "Any"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "vectorisation_idx", "type": "Any"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 119, "col_offset": 69, "nodeName": "n", "type": "Any"}, {"lineNumber": 163, "col_offset": 75, "nodeName": "n", "type": "Any"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 50, "nodeName": "q", "type": "Any"}, {"lineNumber": 70, "col_offset": 46, "nodeName": "n", "type": "Any"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "P", "type": "Any"}]