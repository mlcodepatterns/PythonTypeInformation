[{"lineNumber": 89, "col_offset": 0, "nodeName": "parse_expressions", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 0, "nodeName": "numpy_evaluator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "cpp_evaluator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 153, "col_offset": 0, "nodeName": "test_parse_expressions_python", "type": "Callable[[], Any]"}, {"lineNumber": 158, "col_offset": 0, "nodeName": "test_parse_expressions_numpy", "type": "Callable[[], Any]"}, {"lineNumber": 163, "col_offset": 0, "nodeName": "test_parse_expressions_cpp", "type": "Callable[[], Any]"}, {"lineNumber": 169, "col_offset": 0, "nodeName": "test_parse_expressions_sympy", "type": "Callable[[], Any]"}, {"lineNumber": 192, "col_offset": 0, "nodeName": "test_abstract_code_dependencies", "type": "Callable[[], Any]"}, {"lineNumber": 227, "col_offset": 0, "nodeName": "test_is_boolean_expression", "type": "Callable[[], Any]"}, {"lineNumber": 280, "col_offset": 0, "nodeName": "test_parse_expression_unit", "type": "Callable[[], Any]"}, {"lineNumber": 343, "col_offset": 0, "nodeName": "test_value_from_expression", "type": "Callable[[], Any]"}, {"lineNumber": 374, "col_offset": 0, "nodeName": "test_abstract_code_from_function", "type": "Callable[[], Any]"}, {"lineNumber": 400, "col_offset": 0, "nodeName": "test_extract_abstract_code_functions", "type": "Callable[[], Any]"}, {"lineNumber": 416, "col_offset": 0, "nodeName": "test_substitute_abstract_code_functions", "type": "Callable[[], Any]"}, {"lineNumber": 443, "col_offset": 0, "nodeName": "test_sympytools", "type": "Callable[[], Any]"}, {"lineNumber": 461, "col_offset": 0, "nodeName": "test_error_messages", "type": "Callable[[], Any]"}, {"lineNumber": 479, "col_offset": 0, "nodeName": "test_sympy_infinity", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "Group", "type": "Type[brian2.groups.group.Group]"}, {"lineNumber": 38, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "exprs", "type": "List[Tuple[List[Any], List[nothing], str]]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "ns", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "logical_not", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "userns", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "library_dirs", "type": "brian2.core.preferences.BrianGlobalPreferencesView"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "extra_link_args", "type": "brian2.core.preferences.BrianGlobalPreferencesView"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "known_vars", "type": "Set[str]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "known_funcs", "type": "Set[str]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "Var", "type": "Type[`namedtuple-Var-is_boolean`]"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "a", "type": "brian2.core.variables.Constant"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "b", "type": "brian2.core.variables.Constant"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "c", "type": "brian2.core.variables.Constant"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "g", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "s1", "type": "`namedtuple-Var-is_boolean`"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "s2", "type": "`namedtuple-Var-is_boolean`"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "variables", "type": "Dict[str, Any]"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "EVF", "type": "List[Tuple[bool, str]]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "Var", "type": "Type[`namedtuple-Var-dim-dtype`]"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "group", "type": "SimpleGroup"}, {"lineNumber": 314, "col_offset": 24, "nodeName": "EE", "type": "List[Union[Tuple[Any, str], Tuple[Type[brian2.units.fundamentalunits.DimensionMismatchError], str], Tuple[int, str], Tuple[bool, str], Tuple[Type[SyntaxError], str]]]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "expr", "type": "str"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "wrong_expressions", "type": "List[str]"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "constants", "type": "Dict[str, int]"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "scalar", "type": "bool"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "constant", "type": "bool"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "get_value", "type": "Callable[[], Any]"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "constant", "type": "bool"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "scalar", "type": "bool"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "expr", "type": "str"}, {"lineNumber": 363, "col_offset": 16, "nodeName": "expressions", "type": "List[str]"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "wrong_expressions", "type": "List[str]"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "expr", "type": "str"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "wrong_expressions", "type": "List[str]"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "ac", "type": "brian2.parsing.functions.AbstractCodeFunction"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "funcs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "subcode", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "expr", "type": "str"}, {"lineNumber": 457, "col_offset": 16, "nodeName": "expressions", "type": "List[str]"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "nr", "type": "brian2.parsing.rendering.NodeRenderer"}, {"lineNumber": 468, "col_offset": 40, "nodeName": "expr_expected", "type": "List[Tuple[str, str, str]]"}, {"lineNumber": 486, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "variables", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "variables", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "namespace", "type": "Any"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "namespace", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "i", "type": "int"}, {"lineNumber": 92, "col_offset": 7, "nodeName": "imod", "type": "int"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "varids", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "funcids", "type": "List[nothing]"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "expr", "type": "str"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "pexpr", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "ns", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 130, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "compiler", "type": "Union[str, brian2.core.preferences.BrianGlobalPreferencesView]"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "extra_compile_args", "type": "brian2.core.preferences.BrianGlobalPreferencesView"}, {"lineNumber": 137, "col_offset": 35, "nodeName": "get_compiler_and_args", "type": "Callable[[], Tuple[Union[str, brian2.core.preferences.BrianGlobalPreferencesView], brian2.core.preferences.BrianGlobalPreferencesView]]"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "prefs", "type": "brian2.core.preferences.BrianGlobalPreferences"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "prefs", "type": "brian2.core.preferences.BrianGlobalPreferences"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "update_for_cross_compilation", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "library_dirs", "type": "brian2.core.preferences.BrianGlobalPreferencesView"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "extra_compile_args", "type": "brian2.core.preferences.BrianGlobalPreferencesView"}, {"lineNumber": 142, "col_offset": 33, "nodeName": "extra_link_args", "type": "brian2.core.preferences.BrianGlobalPreferencesView"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "parse_expressions", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 38, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "parse_expressions", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 43, "nodeName": "numpy_evaluator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 164, "col_offset": 7, "nodeName": "target", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "parse_expressions", "type": "Callable[..., Any]"}, {"lineNumber": 166, "col_offset": 41, "nodeName": "cpp_evaluator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "expr", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "ns", "type": "Dict[Any, Union[int, brian2.core.functions.Function]]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "parse_expressions", "type": "Callable[..., Any]"}, {"lineNumber": 189, "col_offset": 39, "nodeName": "evaluator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 203, "col_offset": 10, "nodeName": "abstract_code_dependencies", "type": "Callable[..., Any]"}, {"lineNumber": 203, "col_offset": 37, "nodeName": "code", "type": "str"}, {"lineNumber": 203, "col_offset": 43, "nodeName": "known_vars", "type": "Set[str]"}, {"lineNumber": 203, "col_offset": 55, "nodeName": "known_funcs", "type": "Set[str]"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "items", "type": "Callable"}, {"lineNumber": 230, "col_offset": 10, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "Constant", "type": "Type[brian2.core.variables.Constant]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "Constant", "type": "Type[brian2.core.variables.Constant]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "Constant", "type": "Type[brian2.core.variables.Constant]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "Func", "type": "Type[Any]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "Func", "type": "Type[Any]"}, {"lineNumber": 243, "col_offset": 9, "nodeName": "Var", "type": "Type[`namedtuple-Var-is_boolean`]"}, {"lineNumber": 244, "col_offset": 9, "nodeName": "Var", "type": "Type[`namedtuple-Var-is_boolean`]"}, {"lineNumber": 246, "col_offset": 22, "nodeName": "a", "type": "brian2.core.variables.Constant"}, {"lineNumber": 246, "col_offset": 30, "nodeName": "b", "type": "brian2.core.variables.Constant"}, {"lineNumber": 246, "col_offset": 38, "nodeName": "c", "type": "brian2.core.variables.Constant"}, {"lineNumber": 246, "col_offset": 46, "nodeName": "f", "type": "Any"}, {"lineNumber": 246, "col_offset": 54, "nodeName": "g", "type": "Any"}, {"lineNumber": 246, "col_offset": 63, "nodeName": "s1", "type": "`namedtuple-Var-is_boolean`"}, {"lineNumber": 246, "col_offset": 73, "nodeName": "s2", "type": "`namedtuple-Var-is_boolean`"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "expect", "type": "bool"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "expr", "type": "str"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "ret_val", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 270, "col_offset": 18, "nodeName": "SyntaxError", "type": "Type[SyntaxError]"}, {"lineNumber": 270, "col_offset": 31, "nodeName": "is_boolean_expression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 271, "col_offset": 18, "nodeName": "variables", "type": "Dict[str, Any]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 272, "col_offset": 18, "nodeName": "SyntaxError", "type": "Type[SyntaxError]"}, {"lineNumber": 272, "col_offset": 31, "nodeName": "is_boolean_expression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 273, "col_offset": 18, "nodeName": "variables", "type": "Dict[str, Any]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 274, "col_offset": 18, "nodeName": "SyntaxError", "type": "Type[SyntaxError]"}, {"lineNumber": 274, "col_offset": 31, "nodeName": "is_boolean_expression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 275, "col_offset": 18, "nodeName": "variables", "type": "Dict[str, Any]"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "SyntaxError", "type": "Type[SyntaxError]"}, {"lineNumber": 276, "col_offset": 31, "nodeName": "is_boolean_expression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 277, "col_offset": 18, "nodeName": "variables", "type": "Dict[str, Any]"}, {"lineNumber": 282, "col_offset": 10, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "SimpleGroup", "type": "Type[SimpleGroup]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "expect", "type": "Any"}, {"lineNumber": 314, "col_offset": 16, "nodeName": "expr", "type": "str"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "all_variables", "type": "Dict[Any, Any]"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "all_variables", "type": "Dict[Any, `namedtuple-Var-dim-dtype`]"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "variables", "type": "Dict[str, Any]"}, {"lineNumber": 358, "col_offset": 21, "nodeName": "Constant", "type": "Type[brian2.core.variables.Constant]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "eval_expr", "type": "str"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 380, "col_offset": 9, "nodeName": "abstract_code_from_function", "type": "Callable[[Any], brian2.parsing.functions.AbstractCodeFunction]"}, {"lineNumber": 380, "col_offset": 37, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 381, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 382, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 384, "col_offset": 11, "nodeName": "return_expr", "type": "Any"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 389, "col_offset": 18, "nodeName": "SyntaxError", "type": "Type[SyntaxError]"}, {"lineNumber": 389, "col_offset": 31, "nodeName": "abstract_code_from_function", "type": "Callable[[Any], brian2.parsing.functions.AbstractCodeFunction]"}, {"lineNumber": 389, "col_offset": 60, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 393, "col_offset": 18, "nodeName": "SyntaxError", "type": "Type[SyntaxError]"}, {"lineNumber": 393, "col_offset": 31, "nodeName": "abstract_code_from_function", "type": "Callable[[Any], brian2.parsing.functions.AbstractCodeFunction]"}, {"lineNumber": 393, "col_offset": 60, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 396, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 397, "col_offset": 18, "nodeName": "SyntaxError", "type": "Type[SyntaxError]"}, {"lineNumber": 397, "col_offset": 31, "nodeName": "abstract_code_from_function", "type": "Callable[[Any], brian2.parsing.functions.AbstractCodeFunction]"}, {"lineNumber": 397, "col_offset": 60, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "extract_abstract_code_functions", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 411, "col_offset": 44, "nodeName": "code", "type": "str"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "return_expr", "type": "nothing"}, {"lineNumber": 413, "col_offset": 11, "nodeName": "args", "type": "nothing"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 420, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 433, "col_offset": 14, "nodeName": "substitute_abstract_code_functions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 433, "col_offset": 49, "nodeName": "code", "type": "str"}, {"lineNumber": 433, "col_offset": 55, "nodeName": "funcs", "type": "List[brian2.parsing.functions.AbstractCodeFunction]"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "x", "type": "Union[int, float]"}, {"lineNumber": 434, "col_offset": 11, "nodeName": "y", "type": "Union[int, float]"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "ns1", "type": "Dict[str, Union[Callable[[Any], Any], int, float]]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "ns2", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "k", "type": "str"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "expr2", "type": "Any"}, {"lineNumber": 463, "col_offset": 9, "nodeName": "NodeRenderer", "type": "Type[brian2.parsing.rendering.NodeRenderer]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "expr", "type": "str"}, {"lineNumber": 468, "col_offset": 14, "nodeName": "expected_1", "type": "str"}, {"lineNumber": 468, "col_offset": 26, "nodeName": "expected_2", "type": "str"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "test_parse_expressions_python", "type": "Any"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "test_parse_expressions_numpy", "type": "Any"}, {"lineNumber": 491, "col_offset": 11, "nodeName": "SkipTest", "type": "Any"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "test_parse_expressions_sympy", "type": "Any"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "test_abstract_code_dependencies", "type": "Any"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "test_is_boolean_expression", "type": "Any"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "test_parse_expression_unit", "type": "Any"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "test_value_from_expression", "type": "Any"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "test_abstract_code_from_function", "type": "Any"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "test_extract_abstract_code_functions", "type": "Any"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "test_substitute_abstract_code_functions", "type": "Any"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "test_sympytools", "type": "Any"}, {"lineNumber": 502, "col_offset": 4, "nodeName": "test_error_messages", "type": "Any"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "test_sympy_infinity", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "SimpleGroup"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "SimpleGroup"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "l", "type": "str"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "render_expr", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "expr", "type": "str"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "numvalues", "type": "int"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "ns", "type": "Dict[Any, int]"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "varids", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "r1", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "r2", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "ns", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "userns", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "expr", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "ns", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "std_silent", "type": "Type[brian2.utils.logger.std_silent]"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "inline", "type": "Any"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "NodeRenderer", "type": "Type[brian2.parsing.rendering.NodeRenderer]"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "NumpyNodeRenderer", "type": "Type[brian2.parsing.rendering.NumpyNodeRenderer]"}, {"lineNumber": 164, "col_offset": 7, "nodeName": "codegen", "type": "Any"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "SkipTest", "type": "Any"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "CPPNodeRenderer", "type": "Type[brian2.parsing.rendering.CPPNodeRenderer]"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "sympy_to_str", "type": "Callable[..., Any]"}, {"lineNumber": 183, "col_offset": 28, "nodeName": "expr", "type": "Any"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "ns", "type": "Dict[Any, int]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "ns", "type": "Dict[Any, Union[int, brian2.core.functions.Function]]"}, {"lineNumber": 186, "col_offset": 22, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "expr", "type": "Any"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "ns", "type": "Dict[Any, Union[int, brian2.core.functions.Function]]"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "SympyRenderer", "type": "Type[Any]"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "expected_res", "type": "Dict[Any, Any]"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "_returns_bool", "type": "bool"}, {"lineNumber": 235, "col_offset": 33, "nodeName": "returns_bool", "type": "bool"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "is_boolean_expression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 264, "col_offset": 40, "nodeName": "expr", "type": "str"}, {"lineNumber": 264, "col_offset": 46, "nodeName": "variables", "type": "Dict[str, Any]"}, {"lineNumber": 265, "col_offset": 11, "nodeName": "expect", "type": "bool"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "ret_val", "type": "Any"}, {"lineNumber": 283, "col_offset": 22, "nodeName": "Var", "type": "Type[`namedtuple-Var-dim-dtype`]"}, {"lineNumber": 284, "col_offset": 22, "nodeName": "Var", "type": "Type[`namedtuple-Var-dim-dtype`]"}, {"lineNumber": 285, "col_offset": 22, "nodeName": "Var", "type": "Type[`namedtuple-Var-dim-dtype`]"}, {"lineNumber": 286, "col_offset": 48, "nodeName": "variables", "type": "Dict[str, `namedtuple-Var-dim-dtype`]"}, {"lineNumber": 289, "col_offset": 9, "nodeName": "DimensionMismatchError", "type": "Type[brian2.units.fundamentalunits.DimensionMismatchError]"}, {"lineNumber": 290, "col_offset": 9, "nodeName": "DimensionMismatchError", "type": "Type[brian2.units.fundamentalunits.DimensionMismatchError]"}, {"lineNumber": 294, "col_offset": 9, "nodeName": "DimensionMismatchError", "type": "Type[brian2.units.fundamentalunits.DimensionMismatchError]"}, {"lineNumber": 300, "col_offset": 9, "nodeName": "volt", "type": "Any"}, {"lineNumber": 303, "col_offset": 9, "nodeName": "volt", "type": "Any"}, {"lineNumber": 305, "col_offset": 9, "nodeName": "volt", "type": "Any"}, {"lineNumber": 306, "col_offset": 9, "nodeName": "volt", "type": "Any"}, {"lineNumber": 308, "col_offset": 9, "nodeName": "DimensionMismatchError", "type": "Type[brian2.units.fundamentalunits.DimensionMismatchError]"}, {"lineNumber": 309, "col_offset": 9, "nodeName": "DimensionMismatchError", "type": "Type[brian2.units.fundamentalunits.DimensionMismatchError]"}, {"lineNumber": 310, "col_offset": 9, "nodeName": "SyntaxError", "type": "Type[SyntaxError]"}, {"lineNumber": 311, "col_offset": 9, "nodeName": "SyntaxError", "type": "Type[SyntaxError]"}, {"lineNumber": 312, "col_offset": 9, "nodeName": "SyntaxError", "type": "Type[SyntaxError]"}, {"lineNumber": 316, "col_offset": 20, "nodeName": "get_identifiers", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 316, "col_offset": 36, "nodeName": "expr", "type": "str"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "u", "type": "Any"}, {"lineNumber": 335, "col_offset": 20, "nodeName": "get_identifiers", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 335, "col_offset": 36, "nodeName": "expr", "type": "str"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 340, "col_offset": 22, "nodeName": "SyntaxError", "type": "Type[SyntaxError]"}, {"lineNumber": 340, "col_offset": 35, "nodeName": "parse_expression_dimensions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 340, "col_offset": 64, "nodeName": "expr", "type": "str"}, {"lineNumber": 340, "col_offset": 70, "nodeName": "all_variables", "type": "Dict[Any, `namedtuple-Var-dim-dtype`]"}, {"lineNumber": 351, "col_offset": 38, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 351, "col_offset": 61, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 352, "col_offset": 34, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "variables", "type": "Dict[str, Any]"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "variables", "type": "Dict[str, Any]"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "variables", "type": "Dict[str, Any]"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "variables", "type": "Dict[str, Any]"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "variables", "type": "Dict[str, Any]"}, {"lineNumber": 364, "col_offset": 20, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 370, "col_offset": 22, "nodeName": "SyntaxError", "type": "Type[SyntaxError]"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 379, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 379, "col_offset": 17, "nodeName": "y", "type": "Any"}, {"lineNumber": 381, "col_offset": 11, "nodeName": "ac", "type": "brian2.parsing.functions.AbstractCodeFunction"}, {"lineNumber": 382, "col_offset": 11, "nodeName": "ac", "type": "brian2.parsing.functions.AbstractCodeFunction"}, {"lineNumber": 383, "col_offset": 11, "nodeName": "strip", "type": "Any"}, {"lineNumber": 384, "col_offset": 11, "nodeName": "ac", "type": "brian2.parsing.functions.AbstractCodeFunction"}, {"lineNumber": 388, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 419, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 430, "col_offset": 13, "nodeName": "abstract_code_from_function", "type": "Callable[[Any], brian2.parsing.functions.AbstractCodeFunction]"}, {"lineNumber": 430, "col_offset": 41, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 431, "col_offset": 13, "nodeName": "abstract_code_from_function", "type": "Callable[[Any], brian2.parsing.functions.AbstractCodeFunction]"}, {"lineNumber": 431, "col_offset": 41, "nodeName": "g", "type": "Callable[[Any], Any]"}, {"lineNumber": 435, "col_offset": 19, "nodeName": "x", "type": "Union[int, float]"}, {"lineNumber": 435, "col_offset": 26, "nodeName": "y", "type": "Union[float, int]"}, {"lineNumber": 435, "col_offset": 33, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 435, "col_offset": 40, "nodeName": "g", "type": "Callable[[Any], Any]"}, {"lineNumber": 436, "col_offset": 19, "nodeName": "x", "type": "Union[int, float]"}, {"lineNumber": 436, "col_offset": 26, "nodeName": "y", "type": "Union[float, int]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "exec", "type": "Callable[..., None]"}, {"lineNumber": 437, "col_offset": 29, "nodeName": "ns1", "type": "Dict[str, Union[Callable[[Any], Any], int, float]]"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "exec", "type": "Callable[..., None]"}, {"lineNumber": 438, "col_offset": 13, "nodeName": "subcode", "type": "Any"}, {"lineNumber": 438, "col_offset": 22, "nodeName": "ns2", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 458, "col_offset": 16, "nodeName": "sympy_to_str", "type": "Callable[..., Any]"}, {"lineNumber": 473, "col_offset": 15, "nodeName": "SyntaxError", "type": "Type[SyntaxError]"}, {"lineNumber": 482, "col_offset": 11, "nodeName": "sympy_to_str", "type": "Callable[..., Any]"}, {"lineNumber": 483, "col_offset": 11, "nodeName": "sympy_to_str", "type": "Callable[..., Any]"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "test_parse_expressions_cpp", "type": "Callable[[], Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "weave", "type": "None"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "m", "type": "Any"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 91, "col_offset": 54, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "renderer", "type": "brian2.parsing.rendering.CPPNodeRenderer"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 71, "nodeName": "ns", "type": "Dict[Any, int]"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "evaluator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "pexpr", "type": "Any"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "ns", "type": "Dict[Any, int]"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "ns", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "weave", "type": "Any"}, {"lineNumber": 144, "col_offset": 49, "nodeName": "expr", "type": "Any"}, {"lineNumber": 144, "col_offset": 55, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 144, "col_offset": 60, "nodeName": "ns", "type": "Dict[Any, int]"}, {"lineNumber": 144, "col_offset": 76, "nodeName": "ns", "type": "Dict[Any, int]"}, {"lineNumber": 145, "col_offset": 41, "nodeName": "universal_support_code", "type": "str"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "compiler", "type": "Union[str, brian2.core.preferences.BrianGlobalPreferencesView]"}, {"lineNumber": 147, "col_offset": 47, "nodeName": "extra_compile_args", "type": "brian2.core.preferences.BrianGlobalPreferencesView"}, {"lineNumber": 148, "col_offset": 44, "nodeName": "extra_link_args", "type": "brian2.core.preferences.BrianGlobalPreferencesView"}, {"lineNumber": 149, "col_offset": 41, "nodeName": "library_dirs", "type": "brian2.core.preferences.BrianGlobalPreferencesView"}, {"lineNumber": 164, "col_offset": 7, "nodeName": "prefs", "type": "brian2.core.preferences.BrianGlobalPreferences"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "str_to_sympy", "type": "Callable[..., Any]"}, {"lineNumber": 180, "col_offset": 32, "nodeName": "expr", "type": "str"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 266, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 283, "col_offset": 31, "nodeName": "dim", "type": "Any"}, {"lineNumber": 283, "col_offset": 52, "nodeName": "float64", "type": "Any"}, {"lineNumber": 284, "col_offset": 30, "nodeName": "dim", "type": "Any"}, {"lineNumber": 284, "col_offset": 46, "nodeName": "float64", "type": "Any"}, {"lineNumber": 285, "col_offset": 30, "nodeName": "dim", "type": "Any"}, {"lineNumber": 285, "col_offset": 45, "nodeName": "float64", "type": "Any"}, {"lineNumber": 288, "col_offset": 9, "nodeName": "volt", "type": "Any"}, {"lineNumber": 288, "col_offset": 14, "nodeName": "amp", "type": "Any"}, {"lineNumber": 298, "col_offset": 9, "nodeName": "volt", "type": "Any"}, {"lineNumber": 299, "col_offset": 9, "nodeName": "volt", "type": "Any"}, {"lineNumber": 299, "col_offset": 14, "nodeName": "amp", "type": "Any"}, {"lineNumber": 304, "col_offset": 9, "nodeName": "volt", "type": "Any"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 317, "col_offset": 23, "nodeName": "variables", "type": "Dict[str, `namedtuple-Var-dim-dtype`]"}, {"lineNumber": 322, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 322, "col_offset": 22, "nodeName": "expect", "type": "Any"}, {"lineNumber": 322, "col_offset": 30, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 322, "col_offset": 40, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 322, "col_offset": 51, "nodeName": "expect", "type": "Any"}, {"lineNumber": 322, "col_offset": 59, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 323, "col_offset": 26, "nodeName": "expect", "type": "Any"}, {"lineNumber": 323, "col_offset": 34, "nodeName": "parse_expression_dimensions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 323, "col_offset": 63, "nodeName": "expr", "type": "str"}, {"lineNumber": 324, "col_offset": 26, "nodeName": "all_variables", "type": "Dict[Any, Any]"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "parse_expression_dimensions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 326, "col_offset": 44, "nodeName": "expr", "type": "str"}, {"lineNumber": 326, "col_offset": 50, "nodeName": "all_variables", "type": "Dict[Any, Any]"}, {"lineNumber": 327, "col_offset": 19, "nodeName": "have_same_dimensions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 327, "col_offset": 40, "nodeName": "u", "type": "Any"}, {"lineNumber": 327, "col_offset": 43, "nodeName": "expect", "type": "Any"}, {"lineNumber": 336, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 336, "col_offset": 23, "nodeName": "variables", "type": "Dict[str, `namedtuple-Var-dim-dtype`]"}, {"lineNumber": 364, "col_offset": 20, "nodeName": "expr", "type": "str"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 365, "col_offset": 63, "nodeName": "_get_value_from_expression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 365, "col_offset": 90, "nodeName": "expr", "type": "str"}, {"lineNumber": 366, "col_offset": 90, "nodeName": "variables", "type": "Dict[str, Any]"}, {"lineNumber": 383, "col_offset": 11, "nodeName": "code", "type": "Any"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "funcs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 413, "col_offset": 11, "nodeName": "funcs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 422, "col_offset": 15, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 422, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 437, "col_offset": 13, "nodeName": "deindent", "type": "Callable[..., Any]"}, {"lineNumber": 437, "col_offset": 22, "nodeName": "code", "type": "str"}, {"lineNumber": 458, "col_offset": 29, "nodeName": "str_to_sympy", "type": "Callable[..., Any]"}, {"lineNumber": 458, "col_offset": 42, "nodeName": "expr", "type": "str"}, {"lineNumber": 459, "col_offset": 15, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 459, "col_offset": 40, "nodeName": "replace", "type": "Any"}, {"lineNumber": 459, "col_offset": 78, "nodeName": "expr", "type": "str"}, {"lineNumber": 459, "col_offset": 84, "nodeName": "expr2", "type": "Any"}, {"lineNumber": 470, "col_offset": 12, "nodeName": "render_expr", "type": "Callable[..., Any]"}, {"lineNumber": 470, "col_offset": 27, "nodeName": "expr", "type": "str"}, {"lineNumber": 471, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "message", "type": "str"}, {"lineNumber": 482, "col_offset": 24, "nodeName": "str_to_sympy", "type": "Callable[..., Any]"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "str_to_sympy", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "m", "type": "Any"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "TEST_EXPRESSIONS", "type": "str"}, {"lineNumber": 91, "col_offset": 54, "nodeName": "l", "type": "str"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 32, "nodeName": "r1", "type": "Any"}, {"lineNumber": 111, "col_offset": 36, "nodeName": "r2", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "k", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "k", "type": "Any"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 41, "nodeName": "CPPCodeGenerator", "type": "Type[brian2.codegen.generators.cpp_generator.CPPCodeGenerator]"}, {"lineNumber": 150, "col_offset": 41, "nodeName": "prefs", "type": "brian2.core.preferences.BrianGlobalPreferences"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 222, "col_offset": 23, "nodeName": "res", "type": "Any"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "k", "type": "Any"}, {"lineNumber": 222, "col_offset": 32, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 222, "col_offset": 36, "nodeName": "v", "type": "Any"}, {"lineNumber": 283, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 284, "col_offset": 30, "nodeName": "volt", "type": "Any"}, {"lineNumber": 284, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 285, "col_offset": 30, "nodeName": "amp", "type": "Any"}, {"lineNumber": 285, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "all_variables", "type": "Dict[Any, Any]"}, {"lineNumber": 318, "col_offset": 38, "nodeName": "variables", "type": "Dict[str, `namedtuple-Var-dim-dtype`]"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "all_variables", "type": "Dict[Any, Any]"}, {"lineNumber": 320, "col_offset": 38, "nodeName": "_resolve", "type": "Callable[..., Any]"}, {"lineNumber": 320, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 337, "col_offset": 16, "nodeName": "all_variables", "type": "Dict[Any, `namedtuple-Var-dim-dtype`]"}, {"lineNumber": 337, "col_offset": 38, "nodeName": "variables", "type": "Dict[str, `namedtuple-Var-dim-dtype`]"}, {"lineNumber": 339, "col_offset": 16, "nodeName": "all_variables", "type": "Dict[Any, `namedtuple-Var-dim-dtype`]"}, {"lineNumber": 339, "col_offset": 38, "nodeName": "_resolve", "type": "Callable[..., Any]"}, {"lineNumber": 339, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 365, "col_offset": 21, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 365, "col_offset": 26, "nodeName": "eval_expr", "type": "str"}, {"lineNumber": 365, "col_offset": 37, "nodeName": "variables", "type": "Dict[str, Any]"}, {"lineNumber": 365, "col_offset": 48, "nodeName": "constants", "type": "Dict[str, int]"}, {"lineNumber": 370, "col_offset": 44, "nodeName": "_get_value_from_expression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 370, "col_offset": 71, "nodeName": "expr", "type": "str"}, {"lineNumber": 371, "col_offset": 71, "nodeName": "variables", "type": "Dict[str, Any]"}, {"lineNumber": 383, "col_offset": 11, "nodeName": "ac", "type": "brian2.parsing.functions.AbstractCodeFunction"}, {"lineNumber": 440, "col_offset": 19, "nodeName": "ns1", "type": "Dict[str, Union[Callable[[Any], Any], int, float]]"}, {"lineNumber": 440, "col_offset": 29, "nodeName": "ns2", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 459, "col_offset": 15, "nodeName": "expr", "type": "str"}, {"lineNumber": 459, "col_offset": 40, "nodeName": "expr2", "type": "Any"}, {"lineNumber": 470, "col_offset": 12, "nodeName": "nr", "type": "brian2.parsing.rendering.NodeRenderer"}, {"lineNumber": 471, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 472, "col_offset": 55, "nodeName": "expr", "type": "str"}, {"lineNumber": 474, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 474, "col_offset": 26, "nodeName": "exc", "type": "SyntaxError"}, {"lineNumber": 475, "col_offset": 19, "nodeName": "expected_1", "type": "str"}, {"lineNumber": 475, "col_offset": 33, "nodeName": "message", "type": "str"}, {"lineNumber": 476, "col_offset": 19, "nodeName": "expected_2", "type": "str"}, {"lineNumber": 476, "col_offset": 33, "nodeName": "message", "type": "str"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "ns", "type": "Dict[Any, int]"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "ns", "type": "Dict[Any, int]"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "imod", "type": "int"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "imod", "type": "int"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "userns", "type": "Any"}, {"lineNumber": 129, "col_offset": 83, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 129, "col_offset": 87, "nodeName": "e", "type": "Exception"}, {"lineNumber": 224, "col_offset": 40, "nodeName": "k", "type": "Any"}, {"lineNumber": 267, "col_offset": 70, "nodeName": "expr", "type": "str"}, {"lineNumber": 268, "col_offset": 70, "nodeName": "ret_val", "type": "Any"}, {"lineNumber": 269, "col_offset": 70, "nodeName": "expect", "type": "bool"}, {"lineNumber": 283, "col_offset": 31, "nodeName": "volt", "type": "Any"}, {"lineNumber": 283, "col_offset": 36, "nodeName": "amp", "type": "Any"}, {"lineNumber": 318, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 318, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 320, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 320, "col_offset": 38, "nodeName": "group", "type": "SimpleGroup"}, {"lineNumber": 337, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 337, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 339, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 339, "col_offset": 38, "nodeName": "group", "type": "SimpleGroup"}, {"lineNumber": 440, "col_offset": 23, "nodeName": "k", "type": "str"}, {"lineNumber": 440, "col_offset": 33, "nodeName": "k", "type": "str"}, {"lineNumber": 90, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 52, "nodeName": "m", "type": "Any"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "v", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "v", "type": "Any"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 125, "col_offset": 37, "nodeName": "k", "type": "Any"}, {"lineNumber": 129, "col_offset": 64, "nodeName": "expr", "type": "Any"}, {"lineNumber": 224, "col_offset": 43, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 224, "col_offset": 51, "nodeName": "res", "type": "Any"}, {"lineNumber": 224, "col_offset": 56, "nodeName": "k", "type": "Any"}, {"lineNumber": 224, "col_offset": 60, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 224, "col_offset": 64, "nodeName": "v", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "expr", "type": "str"}, {"lineNumber": 115, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 115, "col_offset": 47, "nodeName": "e", "type": "AssertionError"}]