[{"lineNumber": 16, "col_offset": 0, "nodeName": "test_analyse_identifiers", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "test_get_identifiers_recursively", "type": "Callable[[], Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "test_nested_subexpressions", "type": "Callable[[], Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "FakeGroup", "type": "Type[`namedtuple-FakeGroup-variables`]"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "stmts", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "evalorder", "type": "str"}, {"lineNumber": 82, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "defined", "type": "Any"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "used_known", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "dependent", "type": "Any"}, {"lineNumber": 30, "col_offset": 37, "nodeName": "analyse_identifiers", "type": "Any"}, {"lineNumber": 30, "col_offset": 57, "nodeName": "code", "type": "str"}, {"lineNumber": 30, "col_offset": 63, "nodeName": "known", "type": "Dict[str, brian2.core.variables.Variable]"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "defined", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "used_known", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "dependent", "type": "Any"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "get_identifiers_recursively", "type": "Any"}, {"lineNumber": 52, "col_offset": 46, "nodeName": "variables", "type": "Dict[str, Union[brian2.core.variables.Variable, brian2.core.variables.Subexpression]]"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "identifiers", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "make_statements", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "code", "type": "str"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "variables", "type": "Dict[str, Union[brian2.core.variables.Variable, brian2.core.variables.Subexpression]]"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "evalorder", "type": "str"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "test_analyse_identifiers", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "test_get_identifiers_recursively", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "test_nested_subexpressions", "type": "Any"}, {"lineNumber": 25, "col_offset": 18, "nodeName": "Variable", "type": "Type[brian2.core.variables.Variable]"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "Variable", "type": "Type[brian2.core.variables.Variable]"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "Variable", "type": "Type[brian2.core.variables.Variable]"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "Variable", "type": "Type[brian2.core.variables.Variable]"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "Subexpression", "type": "Type[brian2.core.variables.Subexpression]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "Subexpression", "type": "Type[brian2.core.variables.Subexpression]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "Variable", "type": "Type[brian2.core.variables.Variable]"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "Subexpression", "type": "Type[brian2.core.variables.Subexpression]"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "Subexpression", "type": "Type[brian2.core.variables.Subexpression]"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "Variable", "type": "Type[brian2.core.variables.Variable]"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "Variable", "type": "Type[brian2.core.variables.Variable]"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "var", "type": "Any"}, {"lineNumber": 43, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 69, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 71, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "stmts", "type": "Any"}, {"lineNumber": 42, "col_offset": 57, "nodeName": "Unit", "type": "Type[brian2.units.fundamentalunits.Unit]"}, {"lineNumber": 43, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 45, "nodeName": "FakeGroup", "type": "Type[`namedtuple-FakeGroup-variables`]"}, {"lineNumber": 46, "col_offset": 57, "nodeName": "Unit", "type": "Type[brian2.units.fundamentalunits.Unit]"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "FakeGroup", "type": "Type[`namedtuple-FakeGroup-variables`]"}, {"lineNumber": 69, "col_offset": 42, "nodeName": "Unit", "type": "Type[brian2.units.fundamentalunits.Unit]"}, {"lineNumber": 69, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 75, "nodeName": "FakeGroup", "type": "Type[`namedtuple-FakeGroup-variables`]"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "Unit", "type": "Type[brian2.units.fundamentalunits.Unit]"}, {"lineNumber": 71, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 75, "nodeName": "FakeGroup", "type": "Type[`namedtuple-FakeGroup-variables`]"}]