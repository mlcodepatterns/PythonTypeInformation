[{"lineNumber": 141, "col_offset": 0, "nodeName": "randn_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 0, "nodeName": "rand_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 15, "col_offset": 25, "nodeName": "CodeGenerator", "type": "Any"}, {"lineNumber": 171, "col_offset": 0, "nodeName": "clip_func", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 174, "col_offset": 0, "nodeName": "int_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 177, "col_offset": 0, "nodeName": "ceil_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 180, "col_offset": 0, "nodeName": "floor_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "class_name", "type": "str"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "numbers", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "numbers", "type": "Any"}, {"lineNumber": 167, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 62, "nodeName": "NumpyCodeGenerator", "type": "Type[NumpyCodeGenerator]"}, {"lineNumber": 169, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 61, "nodeName": "NumpyCodeGenerator", "type": "Type[NumpyCodeGenerator]"}, {"lineNumber": 172, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 61, "nodeName": "NumpyCodeGenerator", "type": "Type[NumpyCodeGenerator]"}, {"lineNumber": 175, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 60, "nodeName": "NumpyCodeGenerator", "type": "Type[NumpyCodeGenerator]"}, {"lineNumber": 178, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 61, "nodeName": "NumpyCodeGenerator", "type": "Type[NumpyCodeGenerator]"}, {"lineNumber": 181, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 62, "nodeName": "NumpyCodeGenerator", "type": "Type[NumpyCodeGenerator]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "code", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "code", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "variables", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "variables", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "created_vars", "type": "Set[Any]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "statements", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "varname", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "write", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 32, "nodeName": "sin", "type": "Any"}, {"lineNumber": 131, "col_offset": 49, "nodeName": "cos", "type": "Any"}, {"lineNumber": 131, "col_offset": 66, "nodeName": "tan", "type": "Any"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "sinh", "type": "Any"}, {"lineNumber": 132, "col_offset": 52, "nodeName": "cosh", "type": "Any"}, {"lineNumber": 132, "col_offset": 71, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "exp", "type": "Any"}, {"lineNumber": 133, "col_offset": 49, "nodeName": "log", "type": "Any"}, {"lineNumber": 133, "col_offset": 68, "nodeName": "log10", "type": "Any"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 134, "col_offset": 54, "nodeName": "arcsin", "type": "Any"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "arccos", "type": "Any"}, {"lineNumber": 135, "col_offset": 58, "nodeName": "arctan", "type": "Any"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "abs", "type": "Any"}, {"lineNumber": 136, "col_offset": 49, "nodeName": "fmod", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 68, "nodeName": "NumpyCodeGenerator", "type": "Type[NumpyCodeGenerator]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "N", "type": "int"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "N", "type": "int"}, {"lineNumber": 148, "col_offset": 7, "nodeName": "N", "type": "int"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "numbers", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "N", "type": "int"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "N", "type": "int"}, {"lineNumber": 161, "col_offset": 7, "nodeName": "N", "type": "int"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "numbers", "type": "Any"}, {"lineNumber": 167, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 168, "col_offset": 67, "nodeName": "randn_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 170, "col_offset": 66, "nodeName": "rand_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "clip", "type": "Any"}, {"lineNumber": 171, "col_offset": 48, "nodeName": "array", "type": "Any"}, {"lineNumber": 171, "col_offset": 55, "nodeName": "a_min", "type": "Any"}, {"lineNumber": 171, "col_offset": 62, "nodeName": "a_max", "type": "Any"}, {"lineNumber": 172, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 173, "col_offset": 66, "nodeName": "clip_func", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "int32", "type": "Any"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 175, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 176, "col_offset": 65, "nodeName": "int_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "int32", "type": "Any"}, {"lineNumber": 178, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 179, "col_offset": 65, "nodeName": "ceil_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "int32", "type": "Any"}, {"lineNumber": 181, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 182, "col_offset": 65, "nodeName": "floor_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "varname", "type": "Any"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "strip", "type": "Any"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "var", "type": "Any"}, {"lineNumber": 35, "col_offset": 49, "nodeName": "op", "type": "Any"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "expr", "type": "Any"}, {"lineNumber": 36, "col_offset": 50, "nodeName": "comment", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "op", "type": "str"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "comment", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "code", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "read", "type": "Any"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "write", "type": "Any"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "indices", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 47, "col_offset": 55, "nodeName": "arrays_helper", "type": "Any"}, {"lineNumber": 47, "col_offset": 74, "nodeName": "statements", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "indices", "type": "Any"}, {"lineNumber": 50, "col_offset": 48, "nodeName": "read", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "index_var", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "varname", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 131, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 71, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 138, "col_offset": 73, "nodeName": "func", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "vectorisation_idx", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "N", "type": "int"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "numbers", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "vectorisation_idx", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "N", "type": "int"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "numbers", "type": "Any"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 35, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "value", "type": "Any"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 36, "nodeName": "floor", "type": "Any"}, {"lineNumber": 180, "col_offset": 45, "nodeName": "value", "type": "Any"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "variables", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "var", "type": "Any"}, {"lineNumber": 26, "col_offset": 31, "nodeName": "Function", "type": "Type[brian2.core.functions.Function]"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "impl_name", "type": "Any"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "statement", "type": "Any"}, {"lineNumber": 35, "col_offset": 49, "nodeName": "statement", "type": "Any"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "statement", "type": "Any"}, {"lineNumber": 36, "col_offset": 50, "nodeName": "statement", "type": "Any"}, {"lineNumber": 39, "col_offset": 38, "nodeName": "translate_expression", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 64, "nodeName": "expr", "type": "Any"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "comment", "type": "Any"}, {"lineNumber": 47, "col_offset": 55, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "itertools", "type": "module"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "variables", "type": "Any"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "line", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "translate_statement", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "subs", "type": "Dict[Any, Any]"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "index", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "repl_string", "type": "str"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "varname", "type": "Any"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "created_vars", "type": "Set[Any]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "line", "type": "Any"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "variables", "type": "Any"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 91, "col_offset": 39, "nodeName": "var", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "index_var", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "iterate_all", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "varname", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "line", "type": "Any"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "variables", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "var", "type": "Any"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "Function", "type": "Type[brian2.core.functions.Function]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "vectorisation_idx", "type": "Any"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "vectorisation_idx", "type": "Any"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 169, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 172, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 175, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 177, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 180, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 181, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "impl_name", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "expr", "type": "Union[str, Any]"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "render_expr", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 47, "nodeName": "expr", "type": "Union[Any, str]"}, {"lineNumber": 30, "col_offset": 53, "nodeName": "variables", "type": "Any"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "op", "type": "Union[str, Any]"}, {"lineNumber": 39, "col_offset": 38, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 58, "col_offset": 57, "nodeName": "var", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "index", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "iterate_all", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "write", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "var", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "varname", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "var", "type": "Any"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "items", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "word_substitute", "type": "Callable"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "line", "type": "Any"}, {"lineNumber": 84, "col_offset": 45, "nodeName": "subs", "type": "Dict[Any, Any]"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "replace", "type": "Any"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "repl_string", "type": "str"}, {"lineNumber": 85, "col_offset": 49, "nodeName": "index", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "varname", "type": "Any"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "varname", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "line", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "line", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "variables", "type": "Any"}, {"lineNumber": 119, "col_offset": 37, "nodeName": "get_code", "type": "Any"}, {"lineNumber": 119, "col_offset": 86, "nodeName": "owner", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "implementations", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "word_substitute", "type": "Callable"}, {"lineNumber": 29, "col_offset": 43, "nodeName": "expr", "type": "Any"}, {"lineNumber": 30, "col_offset": 53, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "created_vars", "type": "Set[Any]"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 73, "col_offset": 47, "nodeName": "var", "type": "Any"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "variables", "type": "Any"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "var", "type": "Any"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "ArrayVariable", "type": "Type[brian2.core.variables.ArrayVariable]"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "subs", "type": "Dict[Any, Any]"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "line", "type": "Any"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "index_var", "type": "Any"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "varname", "type": "Any"}, {"lineNumber": 119, "col_offset": 86, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "func_name", "type": "str"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "var", "type": "Any"}, {"lineNumber": 27, "col_offset": 48, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 29, "col_offset": 50, "nodeName": "varname", "type": "Any"}, {"lineNumber": 29, "col_offset": 59, "nodeName": "impl_name", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "NumpyNodeRenderer", "type": "Type[brian2.parsing.rendering.NumpyNodeRenderer]"}, {"lineNumber": 73, "col_offset": 47, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "subs", "type": "Dict[Any, Any]"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "varname", "type": "Any"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "repl_string", "type": "str"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "line", "type": "Any"}, {"lineNumber": 119, "col_offset": 37, "nodeName": "implementations", "type": "Any"}, {"lineNumber": 27, "col_offset": 48, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "varname", "type": "Any"}, {"lineNumber": 80, "col_offset": 52, "nodeName": "repl_string", "type": "str"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "varname", "type": "Any"}, {"lineNumber": 119, "col_offset": 37, "nodeName": "var", "type": "Any"}, {"lineNumber": 119, "col_offset": 57, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 80, "col_offset": 40, "nodeName": "varname", "type": "Any"}, {"lineNumber": 119, "col_offset": 57, "nodeName": "self", "type": "NumpyCodeGenerator"}]