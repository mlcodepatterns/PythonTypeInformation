[{"lineNumber": 46, "col_offset": 0, "nodeName": "parse_expressions", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "numpy_evaluator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "cpp_evaluator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "test_parse_expressions_python", "type": "Callable[[], Any]"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "test_parse_expressions_numpy", "type": "Callable[[], Any]"}, {"lineNumber": 106, "col_offset": 0, "nodeName": "test_parse_expressions_cpp", "type": "Callable[[], Any]"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "test_parse_expressions_sympy", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "exprs", "type": "List[Tuple[List[Any], List[nothing], str]]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "ns", "type": "Dict[Any, Any]"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "logical_not", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 129, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "weave", "type": "None"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "i", "type": "int"}, {"lineNumber": 49, "col_offset": 7, "nodeName": "imod", "type": "int"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "varids", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "funcids", "type": "List[nothing]"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "expr", "type": "str"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "pexpr", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "ns", "type": "Dict[Any, Any]"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 84, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 91, "col_offset": 7, "nodeName": "weave", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "parse_expressions", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 38, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "parse_expressions", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "numpy_evaluator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "parse_expressions", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "cpp_evaluator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "expr", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "parse_expressions", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 39, "nodeName": "evaluator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "test_parse_expressions_python", "type": "Callable[[], Any]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "test_parse_expressions_numpy", "type": "Callable[[], Any]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "test_parse_expressions_cpp", "type": "Callable[[], Any]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "test_parse_expressions_sympy", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "l", "type": "str"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "render_expr", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "expr", "type": "str"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "numvalues", "type": "int"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "ns", "type": "Dict[Any, float]"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "varids", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "r1", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "r2", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "ns", "type": "Dict[Any, Any]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "userns", "type": "Dict[Any, float]"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "userns", "type": "Dict[Any, float]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "expr", "type": "Any"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "ns", "type": "Dict[Any, Any]"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "inline", "type": "Any"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "SkipTest", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "NodeRenderer", "type": "Type[brian2.codegen.ast_parser.NodeRenderer]"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "NumpyNodeRenderer", "type": "Type[brian2.codegen.ast_parser.NumpyNodeRenderer]"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "CPPNodeRenderer", "type": "Type[brian2.codegen.ast_parser.CPPNodeRenderer]"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "sympy_to_str", "type": "Any"}, {"lineNumber": 123, "col_offset": 28, "nodeName": "expr", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "expr", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "ns", "type": "Dict[Any, float]"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "SympyRenderer", "type": "Type[Any]"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "m", "type": "Any"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 48, "col_offset": 54, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "renderer", "type": "brian2.codegen.ast_parser.NodeRenderer"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 71, "nodeName": "ns", "type": "Dict[Any, float]"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "evaluator", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "pexpr", "type": "Any"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "ns", "type": "Dict[Any, float]"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "ns", "type": "Dict[Any, Any]"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "weave", "type": "Any"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "expr", "type": "Any"}, {"lineNumber": 92, "col_offset": 55, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 92, "col_offset": 77, "nodeName": "ns", "type": "Dict[Any, float]"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "nose", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "str_to_sympy", "type": "Any"}, {"lineNumber": 120, "col_offset": 32, "nodeName": "expr", "type": "str"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "m", "type": "Any"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "TEST_EXPRESSIONS", "type": "str"}, {"lineNumber": 48, "col_offset": 54, "nodeName": "l", "type": "str"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "ns", "type": "Dict[Any, float]"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "imod", "type": "int"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "r1", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "r2", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "k", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "k", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 55, "nodeName": "ns", "type": "Dict[Any, float]"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "imod", "type": "int"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "userns", "type": "Dict[Any, float]"}, {"lineNumber": 83, "col_offset": 83, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 83, "col_offset": 87, "nodeName": "e", "type": "Exception"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 47, "col_offset": 52, "nodeName": "m", "type": "Any"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "k", "type": "Any"}, {"lineNumber": 83, "col_offset": 64, "nodeName": "expr", "type": "Any"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "expr", "type": "str"}, {"lineNumber": 69, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 69, "col_offset": 47, "nodeName": "e", "type": "AssertionError"}]