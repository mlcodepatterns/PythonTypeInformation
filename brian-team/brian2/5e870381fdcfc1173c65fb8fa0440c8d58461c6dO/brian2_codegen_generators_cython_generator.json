[{"lineNumber": 196, "col_offset": 0, "nodeName": "randn_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 0, "nodeName": "rand_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "CodeGenerator", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "translate_expression", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "translate_statement", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "translate_one_statement_sequence", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "translate_statement_sequence", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 183, "col_offset": 0, "nodeName": "int_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 0, "nodeName": "ceil_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 0, "nodeName": "floor_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "class_name", "type": "str"}, {"lineNumber": 181, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 61, "nodeName": "CythonCodeGenerator", "type": "Type[CythonCodeGenerator]"}, {"lineNumber": 184, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 60, "nodeName": "CythonCodeGenerator", "type": "Type[CythonCodeGenerator]"}, {"lineNumber": 187, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 61, "nodeName": "CythonCodeGenerator", "type": "Type[CythonCodeGenerator]"}, {"lineNumber": 190, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 62, "nodeName": "CythonCodeGenerator", "type": "Type[CythonCodeGenerator]"}, {"lineNumber": 202, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 62, "nodeName": "CythonCodeGenerator", "type": "Type[CythonCodeGenerator]"}, {"lineNumber": 205, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 61, "nodeName": "CythonCodeGenerator", "type": "Type[CythonCodeGenerator]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "code", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "code", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "variables", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "variables", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "created_vars", "type": "Set[Any]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "statements", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "varname", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "write", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "device", "type": "brian2.devices.device.RuntimeDevice"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "load_namespace", "type": "List[str]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "support_code", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "handled_pointers", "type": "Set[Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "load_namespace", "type": "str"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "support_code", "type": "str"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "scalar_code", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "vector_code", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 63, "nodeName": "CythonCodeGenerator", "type": "Type[CythonCodeGenerator]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 63, "nodeName": "CythonCodeGenerator", "type": "Type[CythonCodeGenerator]"}, {"lineNumber": 181, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 182, "col_offset": 66, "nodeName": "clip_code", "type": "str"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "int32", "type": "Any"}, {"lineNumber": 183, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 184, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 185, "col_offset": 65, "nodeName": "int_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "int32", "type": "Any"}, {"lineNumber": 187, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 188, "col_offset": 65, "nodeName": "ceil_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "int32", "type": "Any"}, {"lineNumber": 190, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 191, "col_offset": 65, "nodeName": "floor_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "randn", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "rand", "type": "Any"}, {"lineNumber": 202, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 203, "col_offset": 67, "nodeName": "randn_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 205, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 206, "col_offset": 66, "nodeName": "rand_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "varname", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "strip", "type": "Any"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "var", "type": "Any"}, {"lineNumber": 37, "col_offset": 49, "nodeName": "op", "type": "Any"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "expr", "type": "Any"}, {"lineNumber": 38, "col_offset": 50, "nodeName": "comment", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "op", "type": "str"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "comment", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "code", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "read", "type": "Any"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "write", "type": "Any"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "indices", "type": "Any"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 49, "col_offset": 55, "nodeName": "arrays_helper", "type": "Any"}, {"lineNumber": 49, "col_offset": 74, "nodeName": "statements", "type": "Any"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "indices", "type": "Any"}, {"lineNumber": 52, "col_offset": 48, "nodeName": "read", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "index_var", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[], brian2.devices.device.RuntimeDevice]"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "varname", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "load_namespace", "type": "List[str]"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 143, "col_offset": 33, "nodeName": "support_code", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "block", "type": "Any"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "scalar_statements", "type": "List[Any]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "vector_statements", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "scalar_code", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 153, "col_offset": 28, "nodeName": "vector_code", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 170, "col_offset": 68, "nodeName": "func_cpp", "type": "str"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 35, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 186, "col_offset": 43, "nodeName": "value", "type": "Any"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 36, "nodeName": "floor", "type": "Any"}, {"lineNumber": 189, "col_offset": 45, "nodeName": "value", "type": "Any"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "variables", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "var", "type": "Any"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "Function", "type": "Type[brian2.core.functions.Function]"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "impl_name", "type": "Any"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "statement", "type": "Any"}, {"lineNumber": 37, "col_offset": 49, "nodeName": "statement", "type": "Any"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "statement", "type": "Any"}, {"lineNumber": 38, "col_offset": 50, "nodeName": "statement", "type": "Any"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "translate_expression", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 64, "nodeName": "expr", "type": "Any"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "comment", "type": "Any"}, {"lineNumber": 49, "col_offset": 55, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "itertools", "type": "module"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "variables", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "line", "type": "str"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "translate_statement", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "subs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "condvar", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "line", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "variables", "type": "Any"}, {"lineNumber": 74, "col_offset": 89, "nodeName": "varname", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "line", "type": "Any"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "variables", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "var", "type": "Any"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "DynamicArrayVariable", "type": "Type[brian2.core.variables.DynamicArrayVariable]"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "statements", "type": "Any"}, {"lineNumber": 148, "col_offset": 33, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 149, "col_offset": 33, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "scalar_code", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "translate_one_statement_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 70, "nodeName": "scalar_statements", "type": "List[Any]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "vector_code", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "translate_one_statement_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 70, "nodeName": "vector_statements", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 60, "nodeName": "load_namespace", "type": "str"}, {"lineNumber": 154, "col_offset": 58, "nodeName": "support_code", "type": "str"}, {"lineNumber": 181, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 184, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 186, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 189, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 190, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 205, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "impl_name", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "expr", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "render_expr", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 47, "nodeName": "expr", "type": "Any"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "variables", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "op", "type": "Union[str, Any]"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 55, "col_offset": 69, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 56, "col_offset": 67, "nodeName": "index", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "var", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 72, "col_offset": 46, "nodeName": "varname", "type": "Any"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "varname", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "var", "type": "Any"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "ArrayVariable", "type": "Type[brian2.core.variables.ArrayVariable]"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "line", "type": "str"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "newlines", "type": "List[str]"}, {"lineNumber": 148, "col_offset": 42, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 148, "col_offset": 50, "nodeName": "block", "type": "Any"}, {"lineNumber": 148, "col_offset": 59, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 149, "col_offset": 50, "nodeName": "block", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "implementations", "type": "Any"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "word_substitute", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 43, "nodeName": "expr", "type": "Any"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 55, "col_offset": 88, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 55, "col_offset": 108, "nodeName": "var", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "created_vars", "type": "Set[Any]"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 66, "col_offset": 49, "nodeName": "var", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 40, "nodeName": "condvar", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "line", "type": "Any"}, {"lineNumber": 74, "col_offset": 68, "nodeName": "index_var", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "load_namespace", "type": "List[str]"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "get_array_name", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 51, "nodeName": "var", "type": "Any"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 93, "col_offset": 51, "nodeName": "var", "type": "Any"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "handled_pointers", "type": "Set[Any]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "var", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "dtype_name", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 148, "col_offset": 59, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 149, "col_offset": 63, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "func", "type": "str"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "func", "type": "str"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "var", "type": "Any"}, {"lineNumber": 29, "col_offset": 48, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 31, "col_offset": 50, "nodeName": "varname", "type": "Any"}, {"lineNumber": 31, "col_offset": 59, "nodeName": "impl_name", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "NumpyNodeRenderer", "type": "Type[brian2.parsing.rendering.NumpyNodeRenderer]"}, {"lineNumber": 55, "col_offset": 88, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 66, "col_offset": 49, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 89, "col_offset": 98, "nodeName": "varname", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "device", "type": "brian2.devices.device.RuntimeDevice"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "var", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 108, "col_offset": 42, "nodeName": "line", "type": "str"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "handled_pointers", "type": "Set[Any]"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "Constant", "type": "Type[brian2.core.variables.Constant]"}, {"lineNumber": 110, "col_offset": 44, "nodeName": "SymbolicConstant", "type": "Type[brian2.core.functions.SymbolicConstant]"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "unsafe_type", "type": "Any"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "value", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "line", "type": "str"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "var", "type": "Any"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "AttributeVariable", "type": "Type[brian2.core.variables.AttributeVariable]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "dtype_name", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 149, "col_offset": 63, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 29, "col_offset": 48, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "var", "type": "Any"}, {"lineNumber": 74, "col_offset": 44, "nodeName": "variables", "type": "Any"}, {"lineNumber": 89, "col_offset": 65, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 89, "col_offset": 85, "nodeName": "var", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "line", "type": "str"}, {"lineNumber": 105, "col_offset": 52, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 105, "col_offset": 77, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 106, "col_offset": 47, "nodeName": "varname", "type": "Any"}, {"lineNumber": 106, "col_offset": 66, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "load_namespace", "type": "List[str]"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "var", "type": "Any"}, {"lineNumber": 112, "col_offset": 87, "nodeName": "dtype_name", "type": "Any"}, {"lineNumber": 112, "col_offset": 107, "nodeName": "varname", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "load_namespace", "type": "List[str]"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "unsafe_type", "type": "Any"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 117, "col_offset": 38, "nodeName": "line", "type": "str"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "var", "type": "Any"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "Function", "type": "Type[brian2.core.functions.Function]"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "func_impl", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 74, "col_offset": 44, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 89, "col_offset": 65, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 104, "col_offset": 45, "nodeName": "weave_data_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 61, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 106, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 115, "col_offset": 41, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 49, "nodeName": "obj", "type": "Any"}, {"lineNumber": 115, "col_offset": 58, "nodeName": "attribute", "type": "Any"}, {"lineNumber": 116, "col_offset": 87, "nodeName": "dtype_name", "type": "Any"}, {"lineNumber": 116, "col_offset": 107, "nodeName": "varname", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "load_namespace", "type": "List[str]"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "get_code", "type": "Any"}, {"lineNumber": 119, "col_offset": 77, "nodeName": "owner", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "func_impl", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 104, "col_offset": 61, "nodeName": "var", "type": "Any"}, {"lineNumber": 106, "col_offset": 66, "nodeName": "var", "type": "Any"}, {"lineNumber": 115, "col_offset": 49, "nodeName": "var", "type": "Any"}, {"lineNumber": 115, "col_offset": 58, "nodeName": "var", "type": "Any"}, {"lineNumber": 119, "col_offset": 77, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "func_impl", "type": "Any"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "basestring", "type": "Type[basestring]"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "load_namespace", "type": "List[str]"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "implementations", "type": "Any"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 125, "col_offset": 44, "nodeName": "func_impl", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 126, "col_offset": 34, "nodeName": "func_impl", "type": "Any"}, {"lineNumber": 127, "col_offset": 50, "nodeName": "func_impl", "type": "Any"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "line", "type": "str"}, {"lineNumber": 139, "col_offset": 65, "nodeName": "varname", "type": "Any"}, {"lineNumber": 139, "col_offset": 74, "nodeName": "varname", "type": "Any"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "var", "type": "Any"}, {"lineNumber": 119, "col_offset": 48, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "support_code", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "variables", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 129, "col_offset": 46, "nodeName": "line", "type": "str"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 119, "col_offset": 48, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 127, "col_offset": 39, "nodeName": "varname", "type": "Any"}, {"lineNumber": 128, "col_offset": 58, "nodeName": "varname", "type": "Any"}, {"lineNumber": 128, "col_offset": 67, "nodeName": "varname", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "load_namespace", "type": "List[str]"}, {"lineNumber": 133, "col_offset": 59, "nodeName": "varname", "type": "Any"}]