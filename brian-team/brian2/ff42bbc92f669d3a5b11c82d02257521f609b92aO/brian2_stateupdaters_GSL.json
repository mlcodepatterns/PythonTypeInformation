[{"lineNumber": 5, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 7, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "get_codeobj_class", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "StateUpdateMethod", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "__call__", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 0, "nodeName": "gsl_rk2", "type": "GSLStateUpdater"}, {"lineNumber": 146, "col_offset": 0, "nodeName": "gsl_rk4", "type": "GSLStateUpdater"}, {"lineNumber": 147, "col_offset": 0, "nodeName": "gsl_rkf45", "type": "GSLStateUpdater"}, {"lineNumber": 148, "col_offset": 0, "nodeName": "gsl_rkck", "type": "GSLStateUpdater"}, {"lineNumber": 149, "col_offset": 0, "nodeName": "gsl_rk8pd", "type": "GSLStateUpdater"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "__doc__", "type": "Any"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "__doc__", "type": "Any"}, {"lineNumber": 145, "col_offset": 10, "nodeName": "GSLStateUpdater", "type": "Type[GSLStateUpdater]"}, {"lineNumber": 146, "col_offset": 10, "nodeName": "GSLStateUpdater", "type": "Type[GSLStateUpdater]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "GSLStateUpdater", "type": "Type[GSLStateUpdater]"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "GSLStateUpdater", "type": "Type[GSLStateUpdater]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "GSLStateUpdater", "type": "Type[GSLStateUpdater]"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "method_options", "type": "Dict[str, Any]"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "abstract_code", "type": "Any"}, {"lineNumber": 11, "col_offset": 29, "nodeName": "abstract_code", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "needed_variables", "type": "Any"}, {"lineNumber": 12, "col_offset": 32, "nodeName": "needed_variables", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "variable_flags", "type": "Any"}, {"lineNumber": 13, "col_offset": 30, "nodeName": "variable_flags", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "variable_flags", "type": "Any"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "variable_flags", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "method_options", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "method_options", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "needed_variables", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "abstract_code", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "integrator", "type": "str"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "integrator", "type": "str"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "is_stochastic", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "diff_eqs", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "code", "type": "List[str]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "count_statevariables", "type": "int"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "counter", "type": "Dict[Any, int]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "diff_vars", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "diff_eqs", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "flags", "type": "Dict[Any, Any]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "__call__", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "__call__", "type": "Any"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "self", "type": "GSLContainer"}, {"lineNumber": 10, "col_offset": 46, "nodeName": "integrator", "type": "Any"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "self", "type": "GSLContainer"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "GSLContainer"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "GSLContainer"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[], Any]"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "device", "type": "Any"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "CPPStandaloneDevice", "type": "Type[brian2.devices.cpp_standalone.device.CPPStandaloneDevice]"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "GSLCPPStandaloneCodeObject", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "target", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "target", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "GSLCythonCodeObject", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "get_codeobj_class", "type": "Callable[[], Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "self", "type": "GSLContainer"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "self", "type": "GSLContainer"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "needed_variables", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "self", "type": "GSLContainer"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "GSLStateUpdater"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "equations", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "get_substituted_expressions", "type": "Any"}, {"lineNumber": 114, "col_offset": 57, "nodeName": "variables", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "diff_name", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "expr", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "diff_vars", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "count_statevariables", "type": "int"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "count_statevariables", "type": "int"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "eq_name", "type": "Any"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "eq_obj", "type": "Any"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "items", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "GSLContainer", "type": "Type[GSLContainer]"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "integrator", "type": "Any"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "StateUpdateMethod", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "codegen", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "codegen", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "GSLWeaveCodeObject", "type": "Any"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "self", "type": "GSLContainer"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "self", "type": "GSLContainer"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "UnsupportedEquationsException", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "equations", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "diff_name", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "counter", "type": "Dict[Any, int]"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "_equations", "type": "Any"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "flags", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "self", "type": "GSLStateUpdater"}, {"lineNumber": 139, "col_offset": 45, "nodeName": "diff_vars", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 43, "nodeName": "flags", "type": "Dict[Any, Any]"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "prefs", "type": "Any"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "auto_target", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "prefs", "type": "Any"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "diff_name", "type": "Any"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "equations", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "flags", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "flags", "type": "Dict[Any, Any]"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "eq_obj", "type": "Any"}, {"lineNumber": 138, "col_offset": 43, "nodeName": "join", "type": "Callable"}, {"lineNumber": 138, "col_offset": 54, "nodeName": "code", "type": "List[str]"}, {"lineNumber": 126, "col_offset": 63, "nodeName": "diff_name", "type": "Any"}, {"lineNumber": 127, "col_offset": 68, "nodeName": "expr", "type": "Any"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "eq_obj", "type": "Any"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "eq_name", "type": "Any"}, {"lineNumber": 128, "col_offset": 69, "nodeName": "counter", "type": "Dict[Any, int]"}, {"lineNumber": 128, "col_offset": 77, "nodeName": "diff_name", "type": "Any"}]