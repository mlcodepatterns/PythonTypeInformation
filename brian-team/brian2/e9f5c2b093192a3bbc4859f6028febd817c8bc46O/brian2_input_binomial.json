[{"lineNumber": 14, "col_offset": 0, "nodeName": "_pre_calc_constants_approximated", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "_pre_calc_constants", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "_generate_cython_code", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "_generate_cpp_code", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "Function", "type": "Type[brian2.core.functions.Function]"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "Nameable", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "loc", "type": "Any"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "scale", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 22, "col_offset": 7, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "q", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "qn", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "bound", "type": "Any"}, {"lineNumber": 35, "col_offset": 7, "nodeName": "use_normal", "type": "Any"}, {"lineNumber": 81, "col_offset": 7, "nodeName": "use_normal", "type": "Any"}, {"lineNumber": 15, "col_offset": 10, "nodeName": "n", "type": "Any"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "loc", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "scale", "type": "Any"}, {"lineNumber": 21, "col_offset": 14, "nodeName": "p", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "P", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "P", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "P", "type": "Any"}, {"lineNumber": 27, "col_offset": 9, "nodeName": "exp", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "min", "type": "Callable"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "n", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "q", "type": "Any"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "P", "type": "Any"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "qn", "type": "Any"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "bound", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "dependencies", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "dependencies", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "cython_code", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "dependencies", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "dependencies", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "dependencies", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "dependencies", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "_generate_cpp_code", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "_generate_cython_code", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "use_normal", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "use_normal", "type": "Any"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "p", "type": "Any"}, {"lineNumber": 27, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "n", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "scale", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "_pre_calc_constants_approximated", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 36, "col_offset": 54, "nodeName": "n", "type": "Any"}, {"lineNumber": 36, "col_offset": 57, "nodeName": "p", "type": "Any"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "replace", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "cython_code", "type": "str"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "q", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "P", "type": "Any"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "qn", "type": "Any"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "bound", "type": "Any"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "_pre_calc_constants", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 55, "nodeName": "n", "type": "Any"}, {"lineNumber": 46, "col_offset": 58, "nodeName": "p", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "replace", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "cython_code", "type": "str"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "scale", "type": "Any"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "_pre_calc_constants_approximated", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 54, "nodeName": "n", "type": "Any"}, {"lineNumber": 82, "col_offset": 57, "nodeName": "p", "type": "Any"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "n", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "replace", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "cpp_code", "type": "str"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "q", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "P", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "qn", "type": "Any"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "bound", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "_pre_calc_constants", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "n", "type": "Any"}, {"lineNumber": 96, "col_offset": 58, "nodeName": "p", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "replace", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "cpp_code", "type": "str"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "cpp_code", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "approximate", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "loc", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "add_implementation", "type": "Any"}, {"lineNumber": 187, "col_offset": 57, "nodeName": "sample_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "func", "type": "Any"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "n", "type": "Any"}, {"lineNumber": 16, "col_offset": 22, "nodeName": "p", "type": "Any"}, {"lineNumber": 16, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "log", "type": "Any"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "q", "type": "Any"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "n", "type": "Any"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "P", "type": "Any"}, {"lineNumber": 43, "col_offset": 54, "nodeName": "name", "type": "Any"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 72, "col_offset": 54, "nodeName": "name", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 129, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "Nameable", "type": "Any"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "n", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "Function", "type": "Type[brian2.core.functions.Function]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "implementations", "type": "Any"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "implementations", "type": "Dict[str, Callable[[Any, Any, Any, Any], Any]]"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "func", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "add_implementation", "type": "Any"}, {"lineNumber": 192, "col_offset": 52, "nodeName": "target", "type": "Any"}, {"lineNumber": 192, "col_offset": 60, "nodeName": "code", "type": "Any"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 30, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 41, "col_offset": 65, "nodeName": "scale", "type": "Any"}, {"lineNumber": 42, "col_offset": 63, "nodeName": "loc", "type": "Any"}, {"lineNumber": 66, "col_offset": 58, "nodeName": "n", "type": "Any"}, {"lineNumber": 67, "col_offset": 61, "nodeName": "p", "type": "Any"}, {"lineNumber": 68, "col_offset": 61, "nodeName": "q", "type": "Any"}, {"lineNumber": 69, "col_offset": 62, "nodeName": "qn", "type": "Any"}, {"lineNumber": 70, "col_offset": 65, "nodeName": "bound", "type": "Any"}, {"lineNumber": 71, "col_offset": 76, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "n", "type": "Any"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 91, "col_offset": 59, "nodeName": "scale", "type": "Any"}, {"lineNumber": 92, "col_offset": 57, "nodeName": "loc", "type": "Any"}, {"lineNumber": 123, "col_offset": 52, "nodeName": "n", "type": "Any"}, {"lineNumber": 124, "col_offset": 55, "nodeName": "P", "type": "Any"}, {"lineNumber": 125, "col_offset": 55, "nodeName": "q", "type": "Any"}, {"lineNumber": 126, "col_offset": 56, "nodeName": "qn", "type": "Any"}, {"lineNumber": 127, "col_offset": 59, "nodeName": "bound", "type": "Any"}, {"lineNumber": 128, "col_offset": 70, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "n", "type": "Any"}, {"lineNumber": 166, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 166, "col_offset": 51, "nodeName": "n", "type": "Any"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "N", "type": "int"}, {"lineNumber": 173, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "normal", "type": "Any"}, {"lineNumber": 175, "col_offset": 40, "nodeName": "loc", "type": "Any"}, {"lineNumber": 175, "col_offset": 45, "nodeName": "scale", "type": "Any"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "N", "type": "int"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "binomial", "type": "Any"}, {"lineNumber": 182, "col_offset": 42, "nodeName": "n", "type": "Any"}, {"lineNumber": 182, "col_offset": 45, "nodeName": "p", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "BinomialFunction", "type": "Type[BinomialFunction]"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "n", "type": "Any"}, {"lineNumber": 190, "col_offset": 45, "nodeName": "p", "type": "Any"}, {"lineNumber": 190, "col_offset": 59, "nodeName": "use_normal", "type": "Any"}, {"lineNumber": 191, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "implementations", "type": "Any"}, {"lineNumber": 193, "col_offset": 65, "nodeName": "dependencies", "type": "Any"}, {"lineNumber": 194, "col_offset": 57, "nodeName": "name", "type": "Any"}, {"lineNumber": 28, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 71, "nodeName": "n", "type": "Any"}, {"lineNumber": 128, "col_offset": 65, "nodeName": "n", "type": "Any"}, {"lineNumber": 166, "col_offset": 56, "nodeName": "p", "type": "Any"}, {"lineNumber": 169, "col_offset": 28, "nodeName": "n", "type": "Any"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 169, "col_offset": 35, "nodeName": "p", "type": "Any"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "vectorisation_idx", "type": "Any"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "N", "type": "int"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 175, "col_offset": 57, "nodeName": "N", "type": "int"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 179, "col_offset": 28, "nodeName": "vectorisation_idx", "type": "Any"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "N", "type": "int"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 182, "col_offset": 53, "nodeName": "N", "type": "int"}, {"lineNumber": 184, "col_offset": 47, "nodeName": "sample_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 194, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 42, "nodeName": "q", "type": "Any"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 174, "col_offset": 28, "nodeName": "vectorisation_idx", "type": "Any"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "vectorisation_idx", "type": "Any"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 38, "nodeName": "n", "type": "Any"}, {"lineNumber": 28, "col_offset": 40, "nodeName": "P", "type": "Any"}]