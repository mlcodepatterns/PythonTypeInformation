[{"lineNumber": 303, "col_offset": 0, "nodeName": "randn_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 312, "col_offset": 0, "nodeName": "rand_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "logger", "type": "brian2.utils.logger.BrianLogger"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "CodeGenerator", "type": "Any"}, {"lineNumber": 325, "col_offset": 0, "nodeName": "clip_func", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 328, "col_offset": 0, "nodeName": "int_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 331, "col_offset": 0, "nodeName": "ceil_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 334, "col_offset": 0, "nodeName": "floor_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "get_logger", "type": "Callable[..., brian2.utils.logger.BrianLogger]"}, {"lineNumber": 17, "col_offset": 20, "nodeName": "__name__", "type": "str"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "class_name", "type": "str"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "_use_ufunc_at_vectorisation", "type": "bool"}, {"lineNumber": 321, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 321, "col_offset": 62, "nodeName": "NumpyCodeGenerator", "type": "Type[NumpyCodeGenerator]"}, {"lineNumber": 323, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 323, "col_offset": 61, "nodeName": "NumpyCodeGenerator", "type": "Type[NumpyCodeGenerator]"}, {"lineNumber": 326, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 326, "col_offset": 61, "nodeName": "NumpyCodeGenerator", "type": "Type[NumpyCodeGenerator]"}, {"lineNumber": 329, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 329, "col_offset": 60, "nodeName": "NumpyCodeGenerator", "type": "Type[NumpyCodeGenerator]"}, {"lineNumber": 332, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 332, "col_offset": 61, "nodeName": "NumpyCodeGenerator", "type": "Type[NumpyCodeGenerator]"}, {"lineNumber": 335, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 335, "col_offset": 62, "nodeName": "NumpyCodeGenerator", "type": "Type[NumpyCodeGenerator]"}, {"lineNumber": 342, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 342, "col_offset": 65, "nodeName": "NumpyCodeGenerator", "type": "Type[NumpyCodeGenerator]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "expr", "type": "Union[str, Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "origop", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "code", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "used", "type": "Set[Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "used", "type": "Set[Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "expr", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "line", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "created_vars", "type": "Set[Any]"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "varname", "type": "Any"}, {"lineNumber": 206, "col_offset": 23, "nodeName": "write", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "line", "type": "Union[Any, str]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "variables", "type": "Any"}, {"lineNumber": 252, "col_offset": 20, "nodeName": "variables", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 253, "col_offset": 27, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "all_unique", "type": "bool"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 293, "col_offset": 32, "nodeName": "sin", "type": "Any"}, {"lineNumber": 293, "col_offset": 49, "nodeName": "cos", "type": "Any"}, {"lineNumber": 293, "col_offset": 66, "nodeName": "tan", "type": "Any"}, {"lineNumber": 294, "col_offset": 33, "nodeName": "sinh", "type": "Any"}, {"lineNumber": 294, "col_offset": 52, "nodeName": "cosh", "type": "Any"}, {"lineNumber": 294, "col_offset": 71, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 295, "col_offset": 32, "nodeName": "exp", "type": "Any"}, {"lineNumber": 295, "col_offset": 49, "nodeName": "log", "type": "Any"}, {"lineNumber": 295, "col_offset": 68, "nodeName": "log10", "type": "Any"}, {"lineNumber": 296, "col_offset": 33, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 296, "col_offset": 54, "nodeName": "arcsin", "type": "Any"}, {"lineNumber": 297, "col_offset": 35, "nodeName": "arccos", "type": "Any"}, {"lineNumber": 297, "col_offset": 58, "nodeName": "arctan", "type": "Any"}, {"lineNumber": 298, "col_offset": 32, "nodeName": "abs", "type": "Any"}, {"lineNumber": 298, "col_offset": 50, "nodeName": "sign", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 299, "col_offset": 68, "nodeName": "NumpyCodeGenerator", "type": "Type[NumpyCodeGenerator]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "N", "type": "int"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "N", "type": "int"}, {"lineNumber": 321, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 322, "col_offset": 67, "nodeName": "randn_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 323, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 324, "col_offset": 66, "nodeName": "rand_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 325, "col_offset": 40, "nodeName": "clip", "type": "Any"}, {"lineNumber": 325, "col_offset": 48, "nodeName": "array", "type": "Any"}, {"lineNumber": 325, "col_offset": 55, "nodeName": "a_min", "type": "Any"}, {"lineNumber": 325, "col_offset": 62, "nodeName": "a_max", "type": "Any"}, {"lineNumber": 326, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 327, "col_offset": 66, "nodeName": "clip_func", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 328, "col_offset": 25, "nodeName": "int32", "type": "Any"}, {"lineNumber": 328, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 329, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 330, "col_offset": 65, "nodeName": "int_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 331, "col_offset": 26, "nodeName": "int32", "type": "Any"}, {"lineNumber": 332, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 333, "col_offset": 66, "nodeName": "ceil_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 334, "col_offset": 27, "nodeName": "int32", "type": "Any"}, {"lineNumber": 335, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 336, "col_offset": 67, "nodeName": "floor_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 342, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 343, "col_offset": 70, "nodeName": "timestep", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "word_substitute", "type": "Callable"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "expr", "type": "Any"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "func_name_replacements", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "strip", "type": "Any"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "var", "type": "Any"}, {"lineNumber": 41, "col_offset": 49, "nodeName": "op", "type": "Any"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "expr", "type": "Any"}, {"lineNumber": 42, "col_offset": 50, "nodeName": "comment", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "op", "type": "str"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "used_boolvars", "type": "Any"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "used_boolean_variables", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "bool_simp", "type": "Any"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "boolean_simplified_expressions", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "boolvar", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "code", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "comment", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "code", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "_use_ufunc_at_vectorisation", "type": "bool"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "intersection", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "used", "type": "Set[Any]"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "used_variables", "type": "Set[Any]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "render_expr", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 47, "nodeName": "expr", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "inplace", "type": "Any"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "comment", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "var", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "used_variables", "type": "Set[Any]"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "statement", "type": "Any"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "statements", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "VectorisationError", "type": "Type[VectorisationError]"}, {"lineNumber": 186, "col_offset": 23, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "indices", "type": "Any"}, {"lineNumber": 186, "col_offset": 48, "nodeName": "read", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "index_var", "type": "Any"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 231, "col_offset": 23, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "subs", "type": "Dict[Union[Any, str], Any]"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "repl_string", "type": "str"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "varname", "type": "Any"}, {"lineNumber": 242, "col_offset": 27, "nodeName": "created_vars", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "line", "type": "Union[str, Any]"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "line", "type": "Union[Any, str]"}, {"lineNumber": 252, "col_offset": 20, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 253, "col_offset": 27, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "read", "type": "Any"}, {"lineNumber": 254, "col_offset": 14, "nodeName": "write", "type": "Any"}, {"lineNumber": 254, "col_offset": 21, "nodeName": "indices", "type": "Any"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 254, "col_offset": 55, "nodeName": "arrays_helper", "type": "Any"}, {"lineNumber": 254, "col_offset": 74, "nodeName": "statements", "type": "Any"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 259, "col_offset": 21, "nodeName": "all_unique", "type": "bool"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "created_vars", "type": "Set[Any]"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 264, "col_offset": 24, "nodeName": "statements", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "scipy_available", "type": "bool"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 287, "col_offset": 36, "nodeName": "scipy_available", "type": "bool"}, {"lineNumber": 293, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 293, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 293, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 71, "nodeName": "np", "type": "module"}, {"lineNumber": 295, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 295, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 295, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 296, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 296, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 297, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 297, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 298, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 298, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 300, "col_offset": 73, "nodeName": "func", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "vectorisation_idx", "type": "Any"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 306, "col_offset": 31, "nodeName": "N", "type": "int"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 314, "col_offset": 16, "nodeName": "vectorisation_idx", "type": "Any"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 315, "col_offset": 30, "nodeName": "N", "type": "int"}, {"lineNumber": 325, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 328, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 331, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 331, "col_offset": 35, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 331, "col_offset": 43, "nodeName": "value", "type": "Any"}, {"lineNumber": 334, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 334, "col_offset": 36, "nodeName": "floor", "type": "Any"}, {"lineNumber": 334, "col_offset": 45, "nodeName": "value", "type": "Any"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "statement", "type": "Any"}, {"lineNumber": 41, "col_offset": 49, "nodeName": "statement", "type": "Any"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "statement", "type": "Any"}, {"lineNumber": 42, "col_offset": 50, "nodeName": "statement", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "used_boolean_variables", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "complexity_std", "type": "Any"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "statement", "type": "Any"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "statement", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "used_boolvars", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "bool_assigns", "type": "Any"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "simp_expr", "type": "Any"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "boolval", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "comment", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "get_identifiers", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "expr", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "used", "type": "Set[Any]"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "k", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "used_variables", "type": "Set[Any]"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "statement", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "VectorisationError", "type": "Type[VectorisationError]"}, {"lineNumber": 82, "col_offset": 47, "nodeName": "statement", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 84, "col_offset": 75, "nodeName": "inplace", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "op", "type": "str"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "op", "type": "Any"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "op", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "statement", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "statement", "type": "Any"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "comment", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 119, "col_offset": 37, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 119, "col_offset": 45, "nodeName": "statements", "type": "Any"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "ufunc_lines", "type": "List[Any]"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "_use_ufunc_at_vectorisation", "type": "bool"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "statement", "type": "Any"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "statements", "type": "Any"}, {"lineNumber": 186, "col_offset": 23, "nodeName": "itertools", "type": "module"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "variables", "type": "Any"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "line", "type": "Any"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "variables", "type": "Any"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "all_inplace", "type": "bool"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "all_inplace", "type": "bool"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 215, "col_offset": 28, "nodeName": "statements", "type": "List[Any]"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "all_inplace", "type": "bool"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "varname", "type": "Any"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "var", "type": "Any"}, {"lineNumber": 238, "col_offset": 32, "nodeName": "items", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "subs", "type": "Dict[Union[Any, str], Any]"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "word_substitute", "type": "Callable"}, {"lineNumber": 247, "col_offset": 35, "nodeName": "line", "type": "Any"}, {"lineNumber": 247, "col_offset": 41, "nodeName": "subs", "type": "Dict[Union[Any, str], Any]"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "replace", "type": "Union[Any, Callable[..., str]]"}, {"lineNumber": 248, "col_offset": 32, "nodeName": "repl_string", "type": "str"}, {"lineNumber": 248, "col_offset": 45, "nodeName": "index", "type": "Any"}, {"lineNumber": 254, "col_offset": 55, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "has_repeated_indices", "type": "Any"}, {"lineNumber": 257, "col_offset": 51, "nodeName": "statements", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 263, "col_offset": 28, "nodeName": "var", "type": "Any"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "scipy_available", "type": "bool"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 321, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 323, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 326, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 329, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 331, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 332, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 334, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 335, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 342, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "render_expr", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 47, "nodeName": "expr", "type": "Union[Any, str]"}, {"lineNumber": 36, "col_offset": 53, "nodeName": "variables", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "statement", "type": "Any"}, {"lineNumber": 48, "col_offset": 61, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 65, "nodeName": "used_boolean_variables", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "brian_dtype_from_dtype", "type": "Any"}, {"lineNumber": 49, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "statement", "type": "Any"}, {"lineNumber": 50, "col_offset": 45, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "bool_simp", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "boolval", "type": "Any"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "bool_assigns", "type": "Any"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "expr_true", "type": "Any"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "simp_expr", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "expr_false", "type": "Any"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "simp_expr", "type": "Any"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "var", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "op", "type": "Union[str, Any]"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "boolvar", "type": "Any"}, {"lineNumber": 61, "col_offset": 67, "nodeName": "expr_true", "type": "Any"}, {"lineNumber": 61, "col_offset": 89, "nodeName": "expr_false", "type": "Any"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "translate_expression", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 68, "nodeName": "expr", "type": "Any"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "statement", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "k", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "NumpyNodeRenderer", "type": "Type[brian2.parsing.rendering.NumpyNodeRenderer]"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "statement", "type": "Any"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "indices", "type": "Any"}, {"lineNumber": 84, "col_offset": 75, "nodeName": "statement", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "statement", "type": "Any"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "statement", "type": "Any"}, {"lineNumber": 89, "col_offset": 50, "nodeName": "var", "type": "Any"}, {"lineNumber": 89, "col_offset": 68, "nodeName": "op", "type": "Union[Any, str]"}, {"lineNumber": 89, "col_offset": 77, "nodeName": "expr", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "ufunc_name", "type": "str"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "conditional_write", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "line", "type": "str"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "statement", "type": "Any"}, {"lineNumber": 107, "col_offset": 59, "nodeName": "variables", "type": "Any"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "VectorisationError", "type": "Type[VectorisationError]"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "statement", "type": "Any"}, {"lineNumber": 119, "col_offset": 59, "nodeName": "op", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "read", "type": "Any"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "write", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "indices", "type": "Any"}, {"lineNumber": 129, "col_offset": 38, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 129, "col_offset": 63, "nodeName": "arrays_helper", "type": "Any"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "inplace", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "read", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "inplace", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "write", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "ufunc_lines", "type": "List[Any]"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "read", "type": "Any"}, {"lineNumber": 167, "col_offset": 18, "nodeName": "write", "type": "Any"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "indices", "type": "Any"}, {"lineNumber": 167, "col_offset": 34, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 167, "col_offset": 59, "nodeName": "arrays_helper", "type": "Any"}, {"lineNumber": 167, "col_offset": 78, "nodeName": "statements", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 188, "col_offset": 37, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 194, "col_offset": 37, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 194, "col_offset": 57, "nodeName": "var", "type": "Any"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "index", "type": "Any"}, {"lineNumber": 195, "col_offset": 28, "nodeName": "iterate_all", "type": "Any"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 197, "col_offset": 28, "nodeName": "write", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "varname", "type": "Any"}, {"lineNumber": 208, "col_offset": 41, "nodeName": "varname", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "index_var", "type": "Any"}, {"lineNumber": 211, "col_offset": 32, "nodeName": "iterate_all", "type": "Any"}, {"lineNumber": 211, "col_offset": 52, "nodeName": "varname", "type": "Any"}, {"lineNumber": 211, "col_offset": 63, "nodeName": "read", "type": "Any"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 220, "col_offset": 43, "nodeName": "var", "type": "Any"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "index_var", "type": "Any"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "iterate_all", "type": "Any"}, {"lineNumber": 222, "col_offset": 20, "nodeName": "line", "type": "Any"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "line", "type": "Any"}, {"lineNumber": 225, "col_offset": 38, "nodeName": "varname", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 226, "col_offset": 29, "nodeName": "line", "type": "Any"}, {"lineNumber": 233, "col_offset": 43, "nodeName": "var", "type": "Any"}, {"lineNumber": 238, "col_offset": 32, "nodeName": "variables", "type": "Any"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "subs", "type": "Dict[Union[Any, str], Any]"}, {"lineNumber": 245, "col_offset": 70, "nodeName": "repl_string", "type": "str"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "line", "type": "Union[Any, str]"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "read_arrays", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 261, "col_offset": 42, "nodeName": "read", "type": "Any"}, {"lineNumber": 261, "col_offset": 48, "nodeName": "write", "type": "Any"}, {"lineNumber": 261, "col_offset": 55, "nodeName": "indices", "type": "Any"}, {"lineNumber": 261, "col_offset": 64, "nodeName": "variables", "type": "Any"}, {"lineNumber": 262, "col_offset": 42, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 263, "col_offset": 28, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 263, "col_offset": 41, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 263, "col_offset": 49, "nodeName": "statements", "type": "Any"}, {"lineNumber": 266, "col_offset": 23, "nodeName": "translate_statement", "type": "Callable[[Any], Any]"}, {"lineNumber": 266, "col_offset": 48, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "conditional_write", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 267, "col_offset": 46, "nodeName": "line", "type": "Any"}, {"lineNumber": 267, "col_offset": 52, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 267, "col_offset": 58, "nodeName": "variables", "type": "Any"}, {"lineNumber": 268, "col_offset": 46, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 269, "col_offset": 46, "nodeName": "created_vars", "type": "Set[Any]"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "line", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "write_arrays", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 271, "col_offset": 43, "nodeName": "statements", "type": "Any"}, {"lineNumber": 271, "col_offset": 55, "nodeName": "read", "type": "Any"}, {"lineNumber": 271, "col_offset": 61, "nodeName": "write", "type": "Any"}, {"lineNumber": 271, "col_offset": 68, "nodeName": "variables", "type": "Any"}, {"lineNumber": 272, "col_offset": 43, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "vectorise_code", "type": "Callable[..., Any]"}, {"lineNumber": 275, "col_offset": 45, "nodeName": "statements", "type": "Any"}, {"lineNumber": 275, "col_offset": 57, "nodeName": "variables", "type": "Any"}, {"lineNumber": 276, "col_offset": 45, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 53, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 48, "col_offset": 65, "nodeName": "statement", "type": "Any"}, {"lineNumber": 49, "col_offset": 43, "nodeName": "statement", "type": "Any"}, {"lineNumber": 50, "col_offset": 49, "nodeName": "values", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "op", "type": "Union[str, Any]"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "keys", "type": "Any"}, {"lineNumber": 84, "col_offset": 43, "nodeName": "var", "type": "Any"}, {"lineNumber": 89, "col_offset": 50, "nodeName": "statement", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "statement", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "ufunc_name", "type": "str"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "ufunc_name", "type": "str"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "expr", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 108, "col_offset": 65, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 109, "col_offset": 55, "nodeName": "created_vars", "type": "Set[Any]"}, {"lineNumber": 119, "col_offset": 59, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 129, "col_offset": 63, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 129, "col_offset": 83, "nodeName": "statement", "type": "Any"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "statement", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "var", "type": "Any"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "read", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "ufunc_lines", "type": "List[Any]"}, {"lineNumber": 139, "col_offset": 35, "nodeName": "read_arrays", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 52, "nodeName": "read", "type": "Any"}, {"lineNumber": 139, "col_offset": 58, "nodeName": "write", "type": "Any"}, {"lineNumber": 139, "col_offset": 65, "nodeName": "indices", "type": "Any"}, {"lineNumber": 140, "col_offset": 46, "nodeName": "variables", "type": "Any"}, {"lineNumber": 140, "col_offset": 57, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "ufunc_lines", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "ufunc_at_vectorisation", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 141, "col_offset": 63, "nodeName": "statement", "type": "Any"}, {"lineNumber": 142, "col_offset": 63, "nodeName": "variables", "type": "Any"}, {"lineNumber": 143, "col_offset": 63, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 144, "col_offset": 63, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 145, "col_offset": 63, "nodeName": "created_vars", "type": "Set[Any]"}, {"lineNumber": 146, "col_offset": 63, "nodeName": "used_variables", "type": "Set[Any]"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "statement", "type": "Any"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "write", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "ufunc_lines", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "write_arrays", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 152, "col_offset": 66, "nodeName": "read", "type": "Any"}, {"lineNumber": 152, "col_offset": 72, "nodeName": "write", "type": "Any"}, {"lineNumber": 153, "col_offset": 53, "nodeName": "variables", "type": "Any"}, {"lineNumber": 154, "col_offset": 53, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 167, "col_offset": 59, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "translate_statement", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 48, "nodeName": "statement", "type": "Any"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 173, "col_offset": 36, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 194, "col_offset": 37, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 195, "col_offset": 28, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 196, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 211, "col_offset": 32, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "all_inplace", "type": "bool"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "line", "type": "Any"}, {"lineNumber": 225, "col_offset": 23, "nodeName": "line", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 233, "col_offset": 43, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 239, "col_offset": 30, "nodeName": "var", "type": "Any"}, {"lineNumber": 239, "col_offset": 35, "nodeName": "ArrayVariable", "type": "Type[brian2.core.variables.ArrayVariable]"}, {"lineNumber": 239, "col_offset": 58, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 240, "col_offset": 20, "nodeName": "subs", "type": "Dict[Union[Any, str], Any]"}, {"lineNumber": 243, "col_offset": 21, "nodeName": "varname", "type": "Any"}, {"lineNumber": 243, "col_offset": 48, "nodeName": "repl_string", "type": "str"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 263, "col_offset": 63, "nodeName": "op", "type": "Any"}, {"lineNumber": 266, "col_offset": 23, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 299, "col_offset": 22, "nodeName": "func_name", "type": "str"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "NumpyNodeRenderer", "type": "Type[brian2.parsing.rendering.NumpyNodeRenderer]"}, {"lineNumber": 50, "col_offset": 49, "nodeName": "complexities", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "variables", "type": "Any"}, {"lineNumber": 77, "col_offset": 64, "nodeName": "k", "type": "Any"}, {"lineNumber": 77, "col_offset": 69, "nodeName": "indices", "type": "Any"}, {"lineNumber": 84, "col_offset": 43, "nodeName": "statement", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "statement", "type": "Any"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "ufunc_name", "type": "str"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "indices", "type": "Any"}, {"lineNumber": 124, "col_offset": 79, "nodeName": "var", "type": "Any"}, {"lineNumber": 125, "col_offset": 78, "nodeName": "op", "type": "Any"}, {"lineNumber": 126, "col_offset": 80, "nodeName": "expr", "type": "Any"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "statement", "type": "Any"}, {"lineNumber": 137, "col_offset": 49, "nodeName": "get_identifiers", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 137, "col_offset": 65, "nodeName": "expr", "type": "Any"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "var", "type": "Any"}, {"lineNumber": 139, "col_offset": 35, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 150, "col_offset": 41, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 151, "col_offset": 37, "nodeName": "var", "type": "Any"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 152, "col_offset": 54, "nodeName": "statement", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "logger", "type": "brian2.utils.logger.BrianLogger"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "indent", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "code", "type": "Any"}, {"lineNumber": 168, "col_offset": 42, "nodeName": "code", "type": "Any"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "statement", "type": "Any"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "indent", "type": "Callable[..., Any]"}, {"lineNumber": 178, "col_offset": 32, "nodeName": "code", "type": "Any"}, {"lineNumber": 178, "col_offset": 42, "nodeName": "code", "type": "Any"}, {"lineNumber": 216, "col_offset": 23, "nodeName": "var", "type": "Any"}, {"lineNumber": 216, "col_offset": 35, "nodeName": "varname", "type": "Any"}, {"lineNumber": 216, "col_offset": 51, "nodeName": "inplace", "type": "Any"}, {"lineNumber": 224, "col_offset": 40, "nodeName": "index_var", "type": "Any"}, {"lineNumber": 239, "col_offset": 58, "nodeName": "var", "type": "Any"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "varname", "type": "Any"}, {"lineNumber": 240, "col_offset": 52, "nodeName": "repl_string", "type": "str"}, {"lineNumber": 243, "col_offset": 32, "nodeName": "varname", "type": "Any"}, {"lineNumber": 263, "col_offset": 63, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 50, "col_offset": 49, "nodeName": "statement", "type": "Any"}, {"lineNumber": 77, "col_offset": 81, "nodeName": "indices", "type": "Any"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "statement", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "ufunc_name", "type": "str"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "device", "type": "brian2.devices.device.CurrentDeviceProxy"}, {"lineNumber": 104, "col_offset": 49, "nodeName": "variables", "type": "Any"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "var", "type": "Any"}, {"lineNumber": 124, "col_offset": 79, "nodeName": "statement", "type": "Any"}, {"lineNumber": 125, "col_offset": 78, "nodeName": "statement", "type": "Any"}, {"lineNumber": 126, "col_offset": 80, "nodeName": "statement", "type": "Any"}, {"lineNumber": 136, "col_offset": 45, "nodeName": "var", "type": "Any"}, {"lineNumber": 137, "col_offset": 65, "nodeName": "statement", "type": "Any"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "statement", "type": "Any"}, {"lineNumber": 150, "col_offset": 58, "nodeName": "var", "type": "Any"}, {"lineNumber": 151, "col_offset": 37, "nodeName": "statement", "type": "Any"}, {"lineNumber": 160, "col_offset": 87, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "read_arrays", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "read", "type": "Any"}, {"lineNumber": 169, "col_offset": 48, "nodeName": "write", "type": "Any"}, {"lineNumber": 169, "col_offset": 55, "nodeName": "indices", "type": "Any"}, {"lineNumber": 170, "col_offset": 42, "nodeName": "variables", "type": "Any"}, {"lineNumber": 170, "col_offset": 53, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 174, "col_offset": 33, "nodeName": "indent", "type": "Callable[..., Any]"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "indent", "type": "Callable[..., Any]"}, {"lineNumber": 175, "col_offset": 40, "nodeName": "line", "type": "Any"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 177, "col_offset": 33, "nodeName": "indent", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 40, "nodeName": "line", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "write_arrays", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 179, "col_offset": 43, "nodeName": "statements", "type": "Any"}, {"lineNumber": 179, "col_offset": 55, "nodeName": "read", "type": "Any"}, {"lineNumber": 179, "col_offset": 61, "nodeName": "write", "type": "Any"}, {"lineNumber": 180, "col_offset": 43, "nodeName": "variables", "type": "Any"}, {"lineNumber": 180, "col_offset": 54, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 216, "col_offset": 23, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 216, "col_offset": 51, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 224, "col_offset": 27, "nodeName": "line", "type": "Any"}, {"lineNumber": 240, "col_offset": 36, "nodeName": "varname", "type": "Any"}, {"lineNumber": 77, "col_offset": 89, "nodeName": "k", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "statement", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "VectorisationError", "type": "Type[VectorisationError]"}, {"lineNumber": 104, "col_offset": 59, "nodeName": "var", "type": "Any"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "statement", "type": "Any"}, {"lineNumber": 136, "col_offset": 45, "nodeName": "statement", "type": "Any"}, {"lineNumber": 150, "col_offset": 58, "nodeName": "statement", "type": "Any"}, {"lineNumber": 160, "col_offset": 91, "nodeName": "statements", "type": "Any"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 174, "col_offset": 40, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "self", "type": "NumpyCodeGenerator"}, {"lineNumber": 104, "col_offset": 59, "nodeName": "statement", "type": "Any"}, {"lineNumber": 174, "col_offset": 56, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 174, "col_offset": 79, "nodeName": "var", "type": "Any"}, {"lineNumber": 174, "col_offset": 79, "nodeName": "statement", "type": "Any"}]