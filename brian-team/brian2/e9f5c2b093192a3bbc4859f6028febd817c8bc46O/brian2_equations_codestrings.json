[{"lineNumber": 196, "col_offset": 0, "nodeName": "is_constant_over_dt", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "logger", "type": "brian2.utils.logger.BrianLogger"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "Hashable", "type": "Type[Hashable]"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "CodeString", "type": "Type[CodeString]"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "CodeString", "type": "Type[CodeString]"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "get_logger", "type": "Callable[..., brian2.utils.logger.BrianLogger]"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "collections", "type": "module"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "t_symbol", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "func_variable", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "arg", "type": "Any"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "_code", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "identifiers", "type": "Set[Any]"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "property", "type": "Type[property]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "code", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "property", "type": "Type[property]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "stochastic_variables", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "identifier", "type": "Any"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "identifiers", "type": "Set[Any]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "f_expr", "type": "None"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "stochastic_expressions", "type": "Dict[str, Expression]"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "cycle", "type": "Any"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "Symbol", "type": "Any"}, {"lineNumber": 223, "col_offset": 7, "nodeName": "expression", "type": "Any"}, {"lineNumber": 223, "col_offset": 21, "nodeName": "t_symbol", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "func", "type": "Any"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 226, "col_offset": 34, "nodeName": "func_name", "type": "str"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "expression", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "CodeString"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "strip", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "CodeString"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "get_identifiers", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "code", "type": "Any"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "_code", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "self", "type": "CodeString"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "NotImplemented", "type": "NotImplementedType"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "code", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "code", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "code", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "code", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "code", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "self", "type": "Expression"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "collect", "type": "Any"}, {"lineNumber": 147, "col_offset": 61, "nodeName": "stochastic_symbols", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "s_expr", "type": "Any"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "expr", "type": "Expression"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "f_expr", "type": "Optional[Expression]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "f_expr", "type": "Expression"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "f_expr", "type": "Optional[Expression]"}, {"lineNumber": 173, "col_offset": 23, "nodeName": "stochastic_expressions", "type": "Dict[str, Expression]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "pretty", "type": "Any"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "NotImplemented", "type": "NotImplementedType"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "code", "type": "Any"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "code", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "code", "type": "Any"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "sympy", "type": "Any"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "expression", "type": "Any"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "variables", "type": "Any"}, {"lineNumber": 227, "col_offset": 7, "nodeName": "func_variable", "type": "Any"}, {"lineNumber": 227, "col_offset": 41, "nodeName": "stateless", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "code", "type": "Any"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 45, "col_offset": 52, "nodeName": "code", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "CodeString", "type": "Type[CodeString]"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "self", "type": "CodeString"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "other", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "self", "type": "CodeString"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "self", "type": "CodeString"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "code", "type": "Any"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "sympy_expression", "type": "Any"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "code", "type": "Any"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "sympy_expression", "type": "Any"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "sympy_to_str", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "sympy_expression", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "str_to_sympy", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "code", "type": "Any"}, {"lineNumber": 106, "col_offset": 46, "nodeName": "code", "type": "Any"}, {"lineNumber": 108, "col_offset": 49, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "stochastic_variables", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "self", "type": "Expression"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "variable", "type": "Any"}, {"lineNumber": 144, "col_offset": 46, "nodeName": "stochastic_variables", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "collected", "type": "Any"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "f_expr", "type": "Expression"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "expr", "type": "Expression"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "str_to_sympy", "type": "Callable[..., Any]"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "code", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 185, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 185, "col_offset": 33, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "self", "type": "Expression"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "other", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "__eq__", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "other", "type": "Any"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "self", "type": "Expression"}, {"lineNumber": 227, "col_offset": 41, "nodeName": "func_variable", "type": "Any"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "arg", "type": "Any"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "t_symbol", "type": "Any"}, {"lineNumber": 230, "col_offset": 31, "nodeName": "dt_value", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "__class__", "type": "Type[CodeString]"}, {"lineNumber": 45, "col_offset": 52, "nodeName": "self", "type": "CodeString"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "Expression", "type": "Type[Expression]"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "self", "type": "Expression"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "identifier", "type": "Any"}, {"lineNumber": 136, "col_offset": 37, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 137, "col_offset": 44, "nodeName": "identifier", "type": "Any"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "expand", "type": "Any"}, {"lineNumber": 153, "col_offset": 47, "nodeName": "s_expr", "type": "Any"}, {"lineNumber": 155, "col_offset": 19, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "stochastic_symbols", "type": "List[Any]"}, {"lineNumber": 164, "col_offset": 51, "nodeName": "expr", "type": "Expression"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "self", "type": "Expression"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "self", "type": "Expression"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "is_constant_over_dt", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 237, "col_offset": 39, "nodeName": "arg", "type": "Any"}, {"lineNumber": 237, "col_offset": 44, "nodeName": "variables", "type": "Any"}, {"lineNumber": 237, "col_offset": 55, "nodeName": "dt_value", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "self", "type": "CodeString"}, {"lineNumber": 108, "col_offset": 67, "nodeName": "variable", "type": "Any"}, {"lineNumber": 108, "col_offset": 79, "nodeName": "identifiers", "type": "Any"}, {"lineNumber": 136, "col_offset": 37, "nodeName": "identifier", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "stochastic_variables", "type": "List[Any]"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "stochastic_expressions", "type": "Dict[str, Expression]"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "func_variable", "type": "Any"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "is_locally_constant", "type": "Any"}, {"lineNumber": 234, "col_offset": 58, "nodeName": "dt_value", "type": "Any"}, {"lineNumber": 108, "col_offset": 79, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "str_to_sympy", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "code", "type": "Any"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "has", "type": "Any"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "s", "type": "Any"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "s", "type": "Any"}, {"lineNumber": 155, "col_offset": 46, "nodeName": "stochastic_symbols", "type": "List[Any]"}, {"lineNumber": 168, "col_offset": 44, "nodeName": "code", "type": "Any"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "func_variable", "type": "Any"}, {"lineNumber": 109, "col_offset": 57, "nodeName": "variable", "type": "Any"}, {"lineNumber": 109, "col_offset": 76, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "self", "type": "Expression"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "s_expr", "type": "Any"}, {"lineNumber": 160, "col_offset": 77, "nodeName": "code", "type": "Any"}, {"lineNumber": 161, "col_offset": 77, "nodeName": "s_expr", "type": "Any"}, {"lineNumber": 164, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 164, "col_offset": 43, "nodeName": "var", "type": "Any"}, {"lineNumber": 168, "col_offset": 44, "nodeName": "self", "type": "Expression"}, {"lineNumber": 109, "col_offset": 76, "nodeName": "variable", "type": "Any"}, {"lineNumber": 160, "col_offset": 77, "nodeName": "self", "type": "Expression"}]