[{"lineNumber": 12, "col_offset": 0, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "test_construction", "type": "Callable[[], Any]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "test_multiplication_division", "type": "Callable[[], Any]"}, {"lineNumber": 87, "col_offset": 0, "nodeName": "test_addition_subtraction", "type": "Callable[[], Any]"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "test_binary_operations", "type": "Callable[[], Any]"}, {"lineNumber": 181, "col_offset": 0, "nodeName": "test_numpy_functions_same_dimensions", "type": "Callable[[], Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "q", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "q", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "q", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "q", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "q", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "q", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "q", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "q", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "q", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "q", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "quantities", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "q2", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "quantities", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "a", "type": "int"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "a", "type": "int"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "units", "type": "List[Any]"}, {"lineNumber": 201, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 13, "col_offset": 22, "nodeName": "q", "type": "Any"}, {"lineNumber": 13, "col_offset": 25, "nodeName": "Quantity", "type": "Any"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "have_same_dimensions", "type": "Any"}, {"lineNumber": 15, "col_offset": 32, "nodeName": "q", "type": "Any"}, {"lineNumber": 15, "col_offset": 35, "nodeName": "unit", "type": "Any"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "ms", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "q", "type": "Any"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "second", "type": "Any"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "ms", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "q", "type": "Any"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "second", "type": "Any"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "ms", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "q", "type": "Any"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "second", "type": "Any"}, {"lineNumber": 28, "col_offset": 32, "nodeName": "ms", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "q", "type": "Any"}, {"lineNumber": 29, "col_offset": 43, "nodeName": "second", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "Quantity", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "q", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "Quantity", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "q", "type": "Any"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "second", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "Quantity", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "q", "type": "Any"}, {"lineNumber": 35, "col_offset": 43, "nodeName": "second", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "Quantity", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "q", "type": "Any"}, {"lineNumber": 37, "col_offset": 43, "nodeName": "second", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "Quantity", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "q", "type": "Any"}, {"lineNumber": 39, "col_offset": 43, "nodeName": "second", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "with_dimensions", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "q", "type": "Any"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "second", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "DimensionMismatchError", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "DimensionMismatchError", "type": "Any"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "second", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "tryops", "type": "List[Callable[[Any, Any], Any]]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "op", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "tryops", "type": "List[Callable[[Any, Any], Any]]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "numpy_func", "type": "Any"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "numpy_funcs", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "second", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "volt", "type": "Any"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "second", "type": "Any"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "siemens", "type": "Any"}, {"lineNumber": 183, "col_offset": 36, "nodeName": "mV", "type": "Any"}, {"lineNumber": 183, "col_offset": 40, "nodeName": "kHz", "type": "Any"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "abs", "type": "Any"}, {"lineNumber": 185, "col_offset": 30, "nodeName": "cumsum", "type": "Any"}, {"lineNumber": 185, "col_offset": 41, "nodeName": "max", "type": "Any"}, {"lineNumber": 185, "col_offset": 49, "nodeName": "mean", "type": "Any"}, {"lineNumber": 185, "col_offset": 58, "nodeName": "min", "type": "Any"}, {"lineNumber": 185, "col_offset": 66, "nodeName": "negative", "type": "Any"}, {"lineNumber": 186, "col_offset": 22, "nodeName": "ptp", "type": "Any"}, {"lineNumber": 186, "col_offset": 30, "nodeName": "round", "type": "Any"}, {"lineNumber": 186, "col_offset": 40, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 186, "col_offset": 52, "nodeName": "std", "type": "Any"}, {"lineNumber": 186, "col_offset": 60, "nodeName": "sum", "type": "Any"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "unit", "type": "Any"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "product", "type": "Callable"}, {"lineNumber": 189, "col_offset": 41, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 189, "col_offset": 49, "nodeName": "units", "type": "List[Any]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "q_ar", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "func", "type": "Any"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "keep_dim_funcs", "type": "List[Any]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "test_construction", "type": "Callable[[], Any]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "test_multiplication_division", "type": "Callable[[], Any]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "test_addition_subtraction", "type": "Callable[[], Any]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "test_binary_operations", "type": "Callable[[], Any]"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "test_numpy_functions_same_dimensions", "type": "Callable[[], Any]"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 14, "col_offset": 35, "nodeName": "values", "type": "float"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "int32", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "dim", "type": "Any"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "dim", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "dim", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "Quantity", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "mV", "type": "Any"}, {"lineNumber": 55, "col_offset": 45, "nodeName": "mV", "type": "Any"}, {"lineNumber": 55, "col_offset": 67, "nodeName": "mV", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 50, "nodeName": "volt", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 50, "nodeName": "volt", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 63, "col_offset": 50, "nodeName": "volt", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 60, "nodeName": "volt", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 60, "nodeName": "volt", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 60, "nodeName": "volt", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 60, "nodeName": "volt", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 60, "nodeName": "volt", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 60, "nodeName": "volt", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 62, "nodeName": "volt", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 62, "nodeName": "volt", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 62, "nodeName": "volt", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assert_quantity", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "tryops", "type": "List[Callable[[Any, Any], Any]]"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "op", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "tryops", "type": "List[Callable[[Any, Any], Any]]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "numpy_func", "type": "Any"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "numpy_funcs", "type": "List[Any]"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "DimensionMismatchError", "type": "Any"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "sub", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "lt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 32, "nodeName": "le", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 36, "nodeName": "gt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 40, "nodeName": "ge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 44, "nodeName": "eq", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 48, "nodeName": "ne", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "add", "type": "Any"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "subtract", "type": "Any"}, {"lineNumber": 126, "col_offset": 44, "nodeName": "less", "type": "Any"}, {"lineNumber": 126, "col_offset": 53, "nodeName": "less_equal", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "greater", "type": "Any"}, {"lineNumber": 127, "col_offset": 35, "nodeName": "greater_equal", "type": "Any"}, {"lineNumber": 127, "col_offset": 53, "nodeName": "equal", "type": "Any"}, {"lineNumber": 127, "col_offset": 63, "nodeName": "not_equal", "type": "Any"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 138, "col_offset": 44, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assert_operations_work", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "b", "type": "Any"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 144, "col_offset": 66, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 145, "col_offset": 44, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assert_operations_work", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "a", "type": "int"}, {"lineNumber": 146, "col_offset": 34, "nodeName": "b", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 150, "col_offset": 66, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 151, "col_offset": 44, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assert_operations_work", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 152, "col_offset": 34, "nodeName": "b", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 160, "col_offset": 44, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assert_operations_do_not_work", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 162, "col_offset": 38, "nodeName": "a", "type": "Any"}, {"lineNumber": 162, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 167, "col_offset": 33, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assert_operations_do_not_work", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 168, "col_offset": 38, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 168, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 172, "col_offset": 18, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 172, "col_offset": 44, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 173, "col_offset": 33, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assert_operations_do_not_work", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "a", "type": "int"}, {"lineNumber": 174, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "ones", "type": "Any"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "itertools", "type": "module"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "unit", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "test_ar", "type": "Any"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 14, "col_offset": 29, "nodeName": "q", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "second", "type": "Any"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "second", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "second", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "ms", "type": "Any"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "second", "type": "Any"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "Quantity", "type": "Any"}, {"lineNumber": 45, "col_offset": 50, "nodeName": "Quantity", "type": "Any"}, {"lineNumber": 47, "col_offset": 50, "nodeName": "Quantity", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 55, "col_offset": 49, "nodeName": "ones", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "q", "type": "Any"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "q", "type": "Any"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "volt", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "q", "type": "Any"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "q", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "q", "type": "Any"}, {"lineNumber": 65, "col_offset": 38, "nodeName": "q", "type": "Any"}, {"lineNumber": 65, "col_offset": 64, "nodeName": "volt", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "q", "type": "Any"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "q", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "q", "type": "Any"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "q", "type": "Any"}, {"lineNumber": 69, "col_offset": 64, "nodeName": "volt", "type": "Any"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "q", "type": "Any"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "q", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "q", "type": "Any"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "q", "type": "Any"}, {"lineNumber": 75, "col_offset": 66, "nodeName": "volt", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "q", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "q", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "q", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "q", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "q", "type": "Any"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "q", "type": "Any"}, {"lineNumber": 81, "col_offset": 51, "nodeName": "volt", "type": "Any"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "q", "type": "Any"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "q2", "type": "Any"}, {"lineNumber": 82, "col_offset": 64, "nodeName": "volt", "type": "Any"}, {"lineNumber": 82, "col_offset": 71, "nodeName": "second", "type": "Any"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "q2", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "q", "type": "Any"}, {"lineNumber": 83, "col_offset": 64, "nodeName": "second", "type": "Any"}, {"lineNumber": 83, "col_offset": 73, "nodeName": "volt", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "q", "type": "Any"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "q2", "type": "Any"}, {"lineNumber": 84, "col_offset": 64, "nodeName": "volt", "type": "Any"}, {"lineNumber": 84, "col_offset": 71, "nodeName": "second", "type": "Any"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "sub", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "lt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 36, "nodeName": "le", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "gt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 44, "nodeName": "ge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 48, "nodeName": "eq", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 52, "nodeName": "ne", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "add", "type": "Any"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "subtract", "type": "Any"}, {"lineNumber": 108, "col_offset": 48, "nodeName": "less", "type": "Any"}, {"lineNumber": 108, "col_offset": 57, "nodeName": "less_equal", "type": "Any"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "greater", "type": "Any"}, {"lineNumber": 109, "col_offset": 39, "nodeName": "greater_equal", "type": "Any"}, {"lineNumber": 109, "col_offset": 57, "nodeName": "equal", "type": "Any"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "not_equal", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "DimensionMismatchError", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "DimensionMismatchError", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "DimensionMismatchError", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "DimensionMismatchError", "type": "Any"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 144, "col_offset": 55, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 150, "col_offset": 18, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 150, "col_offset": 55, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "kilogram", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 22, "nodeName": "func", "type": "Any"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "q_ar", "type": "Any"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 63, "nodeName": "dim", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 60, "col_offset": 42, "nodeName": "q", "type": "Any"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 61, "col_offset": 46, "nodeName": "q", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 42, "nodeName": "q", "type": "Any"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 63, "col_offset": 46, "nodeName": "q", "type": "Any"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "int32", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 64, "col_offset": 52, "nodeName": "q", "type": "Any"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "int32", "type": "Any"}, {"lineNumber": 65, "col_offset": 45, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 56, "nodeName": "q", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "int32", "type": "Any"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 66, "col_offset": 52, "nodeName": "q", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "int32", "type": "Any"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 67, "col_offset": 56, "nodeName": "q", "type": "Any"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 68, "col_offset": 52, "nodeName": "q", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 45, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 56, "nodeName": "q", "type": "Any"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 70, "col_offset": 52, "nodeName": "q", "type": "Any"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 71, "col_offset": 45, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 71, "col_offset": 56, "nodeName": "q", "type": "Any"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 74, "col_offset": 43, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 74, "col_offset": 54, "nodeName": "q", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 75, "col_offset": 47, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 75, "col_offset": 58, "nodeName": "q", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 76, "col_offset": 54, "nodeName": "q", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 77, "col_offset": 47, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 77, "col_offset": 58, "nodeName": "q", "type": "Any"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 80, "col_offset": 42, "nodeName": "q", "type": "Any"}, {"lineNumber": 80, "col_offset": 47, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 80, "col_offset": 58, "nodeName": "q", "type": "Any"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 81, "col_offset": 42, "nodeName": "q", "type": "Any"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 82, "col_offset": 43, "nodeName": "q", "type": "Any"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 82, "col_offset": 59, "nodeName": "q2", "type": "Any"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 83, "col_offset": 43, "nodeName": "q2", "type": "Any"}, {"lineNumber": 83, "col_offset": 49, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 83, "col_offset": 60, "nodeName": "q", "type": "Any"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 84, "col_offset": 43, "nodeName": "q", "type": "Any"}, {"lineNumber": 84, "col_offset": 48, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 84, "col_offset": 59, "nodeName": "q2", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "op", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "op", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "a", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "numpy_func", "type": "Any"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "a", "type": "Any"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "numpy_func", "type": "Any"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "b", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 151, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 46, "nodeName": "dim", "type": "Any"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 44, "col_offset": 54, "nodeName": "ms", "type": "Any"}, {"lineNumber": 45, "col_offset": 66, "nodeName": "ms", "type": "Any"}, {"lineNumber": 46, "col_offset": 64, "nodeName": "volt", "type": "Any"}, {"lineNumber": 47, "col_offset": 66, "nodeName": "ms", "type": "Any"}, {"lineNumber": 48, "col_offset": 63, "nodeName": "volt", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 51, "nodeName": "ex", "type": "Any"}, {"lineNumber": 122, "col_offset": 58, "nodeName": "op", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 61, "nodeName": "a", "type": "Any"}, {"lineNumber": 122, "col_offset": 64, "nodeName": "b", "type": "Any"}, {"lineNumber": 123, "col_offset": 58, "nodeName": "op", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 61, "nodeName": "b", "type": "Any"}, {"lineNumber": 123, "col_offset": 64, "nodeName": "a", "type": "Any"}, {"lineNumber": 129, "col_offset": 58, "nodeName": "numpy_func", "type": "Any"}, {"lineNumber": 129, "col_offset": 69, "nodeName": "a", "type": "Any"}, {"lineNumber": 129, "col_offset": 72, "nodeName": "b", "type": "Any"}, {"lineNumber": 130, "col_offset": 58, "nodeName": "numpy_func", "type": "Any"}, {"lineNumber": 130, "col_offset": 69, "nodeName": "b", "type": "Any"}, {"lineNumber": 130, "col_offset": 72, "nodeName": "a", "type": "Any"}, {"lineNumber": 144, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "get_dimensions", "type": "Any"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "test_ar", "type": "Any"}, {"lineNumber": 193, "col_offset": 46, "nodeName": "q_ar", "type": "Any"}, {"lineNumber": 195, "col_offset": 47, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 196, "col_offset": 47, "nodeName": "dim", "type": "Any"}, {"lineNumber": 195, "col_offset": 47, "nodeName": "func", "type": "Any"}, {"lineNumber": 195, "col_offset": 62, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 195, "col_offset": 67, "nodeName": "q_ar", "type": "Any"}, {"lineNumber": 196, "col_offset": 47, "nodeName": "q_ar", "type": "Any"}, {"lineNumber": 197, "col_offset": 47, "nodeName": "get_dimensions", "type": "Any"}, {"lineNumber": 197, "col_offset": 62, "nodeName": "test_ar", "type": "Any"}]