[{"lineNumber": 10, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 13, "col_offset": 20, "nodeName": "Language", "type": "Any"}, {"lineNumber": 101, "col_offset": 0, "nodeName": "randn_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 0, "nodeName": "rand_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 0, "nodeName": "clip_func", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "int_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "language_id", "type": "str"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 102, "col_offset": 54, "nodeName": "FunctionImplementation", "type": "Type[brian2.core.functions.FunctionImplementation]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 104, "col_offset": 53, "nodeName": "FunctionImplementation", "type": "Type[brian2.core.functions.FunctionImplementation]"}, {"lineNumber": 106, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 106, "col_offset": 53, "nodeName": "FunctionImplementation", "type": "Type[brian2.core.functions.FunctionImplementation]"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 108, "col_offset": 53, "nodeName": "FunctionImplementation", "type": "Type[brian2.core.functions.FunctionImplementation]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "read", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "write", "type": "Any"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "sin", "type": "Any"}, {"lineNumber": 91, "col_offset": 49, "nodeName": "cos", "type": "Any"}, {"lineNumber": 91, "col_offset": 66, "nodeName": "tan", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "sinh", "type": "Any"}, {"lineNumber": 92, "col_offset": 52, "nodeName": "cosh", "type": "Any"}, {"lineNumber": 92, "col_offset": 71, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "exp", "type": "Any"}, {"lineNumber": 93, "col_offset": 49, "nodeName": "log", "type": "Any"}, {"lineNumber": 93, "col_offset": 68, "nodeName": "log10", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 94, "col_offset": 52, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "floor", "type": "Any"}, {"lineNumber": 95, "col_offset": 56, "nodeName": "arcsin", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "arccos", "type": "Any"}, {"lineNumber": 96, "col_offset": 58, "nodeName": "arctan", "type": "Any"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "abs", "type": "Any"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "mod", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 98, "col_offset": 60, "nodeName": "FunctionImplementation", "type": "Type[brian2.core.functions.FunctionImplementation]"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "randn", "type": "Any"}, {"lineNumber": 102, "col_offset": 82, "nodeName": "randn_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "rand", "type": "Any"}, {"lineNumber": 104, "col_offset": 81, "nodeName": "rand_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "clip", "type": "Any"}, {"lineNumber": 105, "col_offset": 48, "nodeName": "array", "type": "Any"}, {"lineNumber": 105, "col_offset": 55, "nodeName": "a_min", "type": "Any"}, {"lineNumber": 105, "col_offset": 62, "nodeName": "a_max", "type": "Any"}, {"lineNumber": 106, "col_offset": 81, "nodeName": "clip_func", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "int_", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "value", "type": "Any"}, {"lineNumber": 108, "col_offset": 81, "nodeName": "int_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "varname", "type": "Any"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "strip", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "op", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "expr", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "var", "type": "Any"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "op", "type": "Any"}, {"lineNumber": 33, "col_offset": 53, "nodeName": "expr", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "op", "type": "str"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "read", "type": "Any"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "write", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "array_read_write", "type": "Any"}, {"lineNumber": 43, "col_offset": 44, "nodeName": "statements", "type": "Any"}, {"lineNumber": 43, "col_offset": 56, "nodeName": "variables", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "spec", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "index_var", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "varname", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 71, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 88, "nodeName": "func", "type": "Any"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 101, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 101, "col_offset": 59, "nodeName": "vectorisation_idx", "type": "Any"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 103, "col_offset": 53, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 103, "col_offset": 57, "nodeName": "vectorisation_idx", "type": "Any"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "namespace", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "var", "type": "Any"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "Function", "type": "Type[brian2.core.functions.Function]"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "impl_name", "type": "Any"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "statement", "type": "Any"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "statement", "type": "Any"}, {"lineNumber": 33, "col_offset": 53, "nodeName": "statement", "type": "Any"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "translate_expression", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 36, "col_offset": 64, "nodeName": "expr", "type": "Any"}, {"lineNumber": 37, "col_offset": 64, "nodeName": "namespace", "type": "Any"}, {"lineNumber": 38, "col_offset": 64, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "self", "type": "NumpyLanguage"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "variables", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "arrayname", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "line", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "all_inplace", "type": "bool"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "all_inplace", "type": "bool"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "statements", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "all_inplace", "type": "bool"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "arrayname", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "namespace", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "var", "type": "Any"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "Function", "type": "Type[brian2.core.functions.Function]"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "code", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "impl_name", "type": "Any"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "expr", "type": "Union[str, Any]"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "render_expr", "type": "Callable[..., Any]"}, {"lineNumber": 28, "col_offset": 47, "nodeName": "expr", "type": "Union[str, Any]"}, {"lineNumber": 28, "col_offset": 53, "nodeName": "namespace", "type": "Any"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "op", "type": "Union[Any, str]"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "self", "type": "NumpyLanguage"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "var", "type": "Any"}, {"lineNumber": 48, "col_offset": 37, "nodeName": "var", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "spec", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "index", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "iterate_all", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "statements", "type": "Any"}, {"lineNumber": 58, "col_offset": 41, "nodeName": "var", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "index_var", "type": "Any"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "iterate_all", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "index_var", "type": "Any"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "iterate_all", "type": "Any"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "line", "type": "Any"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "line", "type": "Any"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "var", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "line", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "namespace", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "func_name", "type": "str"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "implementations", "type": "Any"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "word_substitute", "type": "Callable"}, {"lineNumber": 27, "col_offset": 43, "nodeName": "expr", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "index", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "all_inplace", "type": "bool"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "variables", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "line", "type": "Any"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "line", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "varname", "type": "Any"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "implementations", "type": "Any"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "var", "type": "Any"}, {"lineNumber": 25, "col_offset": 48, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 27, "col_offset": 50, "nodeName": "varname", "type": "Any"}, {"lineNumber": 27, "col_offset": 59, "nodeName": "impl_name", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "NumpyNodeRenderer", "type": "Type[brian2.parsing.rendering.NumpyNodeRenderer]"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "line", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "var", "type": "Any"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "var", "type": "Any"}, {"lineNumber": 66, "col_offset": 47, "nodeName": "inplace", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "var", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "index_var", "type": "Any"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "var", "type": "Any"}, {"lineNumber": 83, "col_offset": 57, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 66, "col_offset": 47, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "line", "type": "Any"}]