[{"lineNumber": 31, "col_offset": 0, "nodeName": "get_cpp_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "get_numpy_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "data_type_conversion_table", "type": "List[Tuple[str, str, str]]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "cpp_dtype", "type": "Dict[str, str]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "numpy_dtype", "type": "Dict[str, str]"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "NodeRenderer", "type": "Type[brian2.parsing.rendering.NodeRenderer]"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "CodeGenerator", "type": "Any"}, {"lineNumber": 380, "col_offset": 0, "nodeName": "_BUFFER_SIZE", "type": "int"}, {"lineNumber": 382, "col_offset": 0, "nodeName": "rand_code", "type": "str"}, {"lineNumber": 403, "col_offset": 0, "nodeName": "randn_code", "type": "str"}, {"lineNumber": 405, "col_offset": 0, "nodeName": "device", "type": "brian2.devices.device.RuntimeDevice"}, {"lineNumber": 419, "col_offset": 0, "nodeName": "sign_code", "type": "str"}, {"lineNumber": 434, "col_offset": 0, "nodeName": "clip_code", "type": "str"}, {"lineNumber": 453, "col_offset": 0, "nodeName": "timestep_code", "type": "str"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "class_name", "type": "str"}, {"lineNumber": 401, "col_offset": -1, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 403, "col_offset": 13, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 405, "col_offset": 9, "nodeName": "all_devices", "type": "Dict[str, brian2.devices.device.RuntimeDevice]"}, {"lineNumber": 406, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 406, "col_offset": 61, "nodeName": "CythonCodeGenerator", "type": "Type[CythonCodeGenerator]"}, {"lineNumber": 412, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 412, "col_offset": 62, "nodeName": "CythonCodeGenerator", "type": "Type[CythonCodeGenerator]"}, {"lineNumber": 430, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 430, "col_offset": 61, "nodeName": "CythonCodeGenerator", "type": "Type[CythonCodeGenerator]"}, {"lineNumber": 449, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 449, "col_offset": 61, "nodeName": "CythonCodeGenerator", "type": "Type[CythonCodeGenerator]"}, {"lineNumber": 457, "col_offset": 0, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 457, "col_offset": 65, "nodeName": "CythonCodeGenerator", "type": "Type[CythonCodeGenerator]"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "cpp_dtype", "type": "Dict[str, str]"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "numpy_dtype", "type": "Dict[str, str]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "temporary_vars", "type": "Set[Tuple[Any, Any]]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "expr", "type": "Union[str, Any]"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "code", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "statements", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "varname", "type": "Any"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "write", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "sc_code", "type": "Dict[Any, str]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "ve_code", "type": "Dict[Any, str]"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "block_name", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "sc_statements", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "kwds", "type": "Dict[str, Union[List[Any], str]]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "user_functions", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "load_namespace", "type": "List[str]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "support_code", "type": "List[Any]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "impl", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "func_code", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "dep_support_code", "type": "List[Any]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "dep_load_namespace", "type": "List[Any]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "dep_user_functions", "type": "List[Any]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "load_namespace", "type": "List[Any]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "support_code", "type": "List[Any]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "handled_pointers", "type": "Set[Any]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "user_functions", "type": "List[Any]"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 369, "col_offset": 63, "nodeName": "CythonCodeGenerator", "type": "Type[CythonCodeGenerator]"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "add_implementation", "type": "Callable[..., None]"}, {"lineNumber": 376, "col_offset": 63, "nodeName": "CythonCodeGenerator", "type": "Type[CythonCodeGenerator]"}, {"lineNumber": 401, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 401, "col_offset": 32, "nodeName": "_BUFFER_SIZE", "type": "int"}, {"lineNumber": 406, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 407, "col_offset": 66, "nodeName": "rand_code", "type": "str"}, {"lineNumber": 412, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 413, "col_offset": 67, "nodeName": "randn_code", "type": "str"}, {"lineNumber": 430, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 431, "col_offset": 66, "nodeName": "sign_code", "type": "str"}, {"lineNumber": 449, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 450, "col_offset": 66, "nodeName": "clip_code", "type": "str"}, {"lineNumber": 457, "col_offset": 0, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 458, "col_offset": 70, "nodeName": "timestep_code", "type": "str"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "canonical", "type": "str"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "cpp", "type": "str"}, {"lineNumber": 28, "col_offset": 60, "nodeName": "data_type_conversion_table", "type": "List[Tuple[str, str, str]]"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "canonical", "type": "str"}, {"lineNumber": 29, "col_offset": 31, "nodeName": "np", "type": "str"}, {"lineNumber": 29, "col_offset": 61, "nodeName": "data_type_conversion_table", "type": "List[Tuple[str, str, str]]"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "value", "type": "Any"}, {"lineNumber": 41, "col_offset": 44, "nodeName": "value", "type": "Any"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "id", "type": "Any"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "id", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "word_substitute", "type": "Callable"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "expr", "type": "Any"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "func_name_replacements", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "strip", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "op", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "expr", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "comment", "type": "Any"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "var", "type": "Any"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "op", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "expr", "type": "Any"}, {"lineNumber": 72, "col_offset": 50, "nodeName": "comment", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "op", "type": "str"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "used_boolvars", "type": "Any"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "used_boolean_variables", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "bool_simp", "type": "Any"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "boolean_simplified_expressions", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "codelines", "type": "List[str]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "firstline", "type": "bool"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "code", "type": "str"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "code", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "comment", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "code", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "read", "type": "Any"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "write", "type": "Any"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "indices", "type": "Any"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 119, "col_offset": 55, "nodeName": "arrays_helper", "type": "Any"}, {"lineNumber": 119, "col_offset": 74, "nodeName": "statements", "type": "Any"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "translate_to_read_arrays", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 47, "nodeName": "read", "type": "Any"}, {"lineNumber": 122, "col_offset": 53, "nodeName": "indices", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "translate_to_statements", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 46, "nodeName": "statements", "type": "Any"}, {"lineNumber": 124, "col_offset": 58, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "translate_to_write_arrays", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 48, "nodeName": "write", "type": "Any"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "indices", "type": "Any"}, {"lineNumber": 132, "col_offset": 48, "nodeName": "read", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "index_var", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "sc_block", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "ve_block", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "varname", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "determine_keywords", "type": "Callable[[], Any]"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "sc_code", "type": "Dict[Any, str]"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "ve_code", "type": "Dict[Any, str]"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "kwds", "type": "Dict[str, Union[List[Any], str]]"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "implementations", "type": "Any"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "get_code", "type": "Any"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "owner", "type": "Any"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "func_code", "type": "Any"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "dependencies", "type": "Any"}, {"lineNumber": 285, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[], Any]"}, {"lineNumber": 289, "col_offset": 27, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "varname", "type": "Any"}, {"lineNumber": 291, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 291, "col_offset": 28, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 354, "col_offset": 21, "nodeName": "dtype", "type": "nothing"}, {"lineNumber": 354, "col_offset": 30, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 354, "col_offset": 37, "nodeName": "temporary_vars", "type": "Set[Tuple[Any, Any]]"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "cpp_dtype", "type": "str"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 361, "col_offset": 38, "nodeName": "support_code", "type": "List[Any]"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "implementations", "type": "brian2.core.functions.FunctionImplementationContainer"}, {"lineNumber": 378, "col_offset": 68, "nodeName": "func_cpp", "type": "str"}, {"lineNumber": 403, "col_offset": 13, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 409, "col_offset": 88, "nodeName": "rand_buffer", "type": "Any"}, {"lineNumber": 410, "col_offset": 94, "nodeName": "rand_buffer_index", "type": "Any"}, {"lineNumber": 416, "col_offset": 83, "nodeName": "randn_buffer", "type": "Any"}, {"lineNumber": 417, "col_offset": 89, "nodeName": "randn_buffer_index", "type": "Any"}, {"lineNumber": 28, "col_offset": 38, "nodeName": "canonical", "type": "str"}, {"lineNumber": 28, "col_offset": 49, "nodeName": "cpp", "type": "str"}, {"lineNumber": 28, "col_offset": 54, "nodeName": "np", "type": "str"}, {"lineNumber": 29, "col_offset": 39, "nodeName": "canonical", "type": "str"}, {"lineNumber": 29, "col_offset": 50, "nodeName": "cpp", "type": "str"}, {"lineNumber": 29, "col_offset": 55, "nodeName": "np", "type": "str"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "get_dtype_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "obj", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "get_dtype_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "obj", "type": "Any"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "node", "type": "Any"}, {"lineNumber": 41, "col_offset": 44, "nodeName": "node", "type": "Any"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "node", "type": "Any"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "node", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "render_BinOp", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 64, "nodeName": "node", "type": "Any"}, {"lineNumber": 64, "col_offset": 51, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 64, "col_offset": 59, "nodeName": "kwds", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "statement", "type": "Any"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "statement", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "statement", "type": "Any"}, {"lineNumber": 72, "col_offset": 50, "nodeName": "statement", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "used_boolean_variables", "type": "Any"}, {"lineNumber": 78, "col_offset": 61, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 78, "col_offset": 65, "nodeName": "used_boolean_variables", "type": "Any"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "statement", "type": "Any"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "statement", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "bool_assigns", "type": "Any"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "simp_expr", "type": "Any"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "atomics", "type": "List[Union[Any, str]]"}, {"lineNumber": 90, "col_offset": 40, "nodeName": "bool_assigns", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "firstline", "type": "bool"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "firstline", "type": "bool"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "codelines", "type": "List[str]"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "comment", "type": "Any"}, {"lineNumber": 119, "col_offset": 55, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "itertools", "type": "module"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "variables", "type": "Any"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "line", "type": "str"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "translate_statement", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 44, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "subs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "condvar", "type": "Any"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "variable_indices", "type": "Any"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "variables", "type": "Any"}, {"lineNumber": 164, "col_offset": 84, "nodeName": "varname", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "line", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 172, "col_offset": 44, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "sc_statements", "type": "Any"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "ve_statements", "type": "Any"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "sc_read", "type": "Any"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "sc_write", "type": "Any"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "sc_indices", "type": "Any"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "sc_cond_write", "type": "Any"}, {"lineNumber": 181, "col_offset": 42, "nodeName": "arrays_helper", "type": "Any"}, {"lineNumber": 181, "col_offset": 61, "nodeName": "sc_block", "type": "Any"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "ve_read", "type": "Any"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "ve_write", "type": "Any"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "ve_indices", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "ve_cond_write", "type": "Any"}, {"lineNumber": 183, "col_offset": 42, "nodeName": "arrays_helper", "type": "Any"}, {"lineNumber": 183, "col_offset": 61, "nodeName": "ve_block", "type": "Any"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 186, "col_offset": 31, "nodeName": "ve_read", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "var", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "codeobj_class", "type": "Any"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "impl", "type": "Any"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 219, "col_offset": 26, "nodeName": "func_code", "type": "Any"}, {"lineNumber": 219, "col_offset": 37, "nodeName": "basestring", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "func_namespace", "type": "Union[Any, Dict[nothing, nothing]]"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "impl", "type": "Any"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "dep_name", "type": "Any"}, {"lineNumber": 272, "col_offset": 26, "nodeName": "dep", "type": "Any"}, {"lineNumber": 272, "col_offset": 33, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 273, "col_offset": 43, "nodeName": "dep", "type": "Any"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "support_code", "type": "List[Any]"}, {"lineNumber": 279, "col_offset": 31, "nodeName": "dep_support_code", "type": "List[Any]"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "dep_load_namespace", "type": "List[Any]"}, {"lineNumber": 280, "col_offset": 37, "nodeName": "load_namespace", "type": "List[str]"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "dep_user_functions", "type": "List[Any]"}, {"lineNumber": 281, "col_offset": 37, "nodeName": "user_functions", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 291, "col_offset": 35, "nodeName": "items", "type": "Any"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 294, "col_offset": 26, "nodeName": "var", "type": "Any"}, {"lineNumber": 294, "col_offset": 31, "nodeName": "AuxiliaryVariable", "type": "Type[brian2.core.variables.AuxiliaryVariable]"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 354, "col_offset": 37, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 355, "col_offset": 24, "nodeName": "get_cpp_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 355, "col_offset": 38, "nodeName": "dtype", "type": "nothing"}, {"lineNumber": 356, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 358, "col_offset": 34, "nodeName": "line", "type": "str"}, {"lineNumber": 360, "col_offset": 34, "nodeName": "join", "type": "Callable"}, {"lineNumber": 360, "col_offset": 44, "nodeName": "load_namespace", "type": "List[Any]"}, {"lineNumber": 403, "col_offset": 13, "nodeName": "rand_code", "type": "str"}, {"lineNumber": 406, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 409, "col_offset": 88, "nodeName": "device", "type": "brian2.devices.device.RuntimeDevice"}, {"lineNumber": 410, "col_offset": 94, "nodeName": "device", "type": "brian2.devices.device.RuntimeDevice"}, {"lineNumber": 412, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 416, "col_offset": 83, "nodeName": "device", "type": "brian2.devices.device.RuntimeDevice"}, {"lineNumber": 417, "col_offset": 89, "nodeName": "device", "type": "brian2.devices.device.RuntimeDevice"}, {"lineNumber": 430, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 449, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 457, "col_offset": 0, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "CythonCodeGenerator", "type": "Type[CythonCodeGenerator]"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "render_expr", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 48, "nodeName": "expr", "type": "Union[Any, str]"}, {"lineNumber": 68, "col_offset": 54, "nodeName": "variables", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "statement", "type": "Any"}, {"lineNumber": 78, "col_offset": 65, "nodeName": "statement", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "brian_dtype_from_dtype", "type": "Any"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "bool_simp", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "boolvar", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "boolval", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "boolval", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "line", "type": "str"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "line", "type": "str"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "translate_expression", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 68, "nodeName": "expr", "type": "Any"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 134, "col_offset": 42, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 136, "col_offset": 59, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 139, "col_offset": 57, "nodeName": "index", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 151, "col_offset": 26, "nodeName": "conditional_write_vars", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "line", "type": "Any"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 161, "col_offset": 46, "nodeName": "varname", "type": "Any"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "varname", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "keys", "type": "Any"}, {"lineNumber": 172, "col_offset": 48, "nodeName": "keys", "type": "Any"}, {"lineNumber": 178, "col_offset": 37, "nodeName": "block_name", "type": "Any"}, {"lineNumber": 179, "col_offset": 37, "nodeName": "block_name", "type": "Any"}, {"lineNumber": 181, "col_offset": 42, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 183, "col_offset": 42, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "variables", "type": "Any"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "sc_code", "type": "Dict[Any, str]"}, {"lineNumber": 193, "col_offset": 43, "nodeName": "sc_block", "type": "Any"}, {"lineNumber": 193, "col_offset": 53, "nodeName": "sc_read", "type": "Any"}, {"lineNumber": 193, "col_offset": 62, "nodeName": "sc_write", "type": "Any"}, {"lineNumber": 194, "col_offset": 34, "nodeName": "sc_indices", "type": "Any"}, {"lineNumber": 194, "col_offset": 46, "nodeName": "sc_cond_write", "type": "Any"}, {"lineNumber": 195, "col_offset": 34, "nodeName": "ve_code", "type": "Dict[Any, str]"}, {"lineNumber": 195, "col_offset": 43, "nodeName": "ve_block", "type": "Any"}, {"lineNumber": 195, "col_offset": 53, "nodeName": "ve_read", "type": "Any"}, {"lineNumber": 195, "col_offset": 62, "nodeName": "ve_write", "type": "Any"}, {"lineNumber": 196, "col_offset": 34, "nodeName": "ve_indices", "type": "Any"}, {"lineNumber": 196, "col_offset": 46, "nodeName": "ve_cond_write", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "translate_to_read_arrays", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 199, "col_offset": 55, "nodeName": "read", "type": "Any"}, {"lineNumber": 199, "col_offset": 61, "nodeName": "indices", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "translate_to_statements", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 201, "col_offset": 54, "nodeName": "stmts", "type": "Any"}, {"lineNumber": 201, "col_offset": 61, "nodeName": "cond_write", "type": "Any"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "translate_to_write_arrays", "type": "Callable[[Any], Any]"}, {"lineNumber": 203, "col_offset": 56, "nodeName": "write", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "code", "type": "Dict[Any, str]"}, {"lineNumber": 204, "col_offset": 35, "nodeName": "join", "type": "Callable"}, {"lineNumber": 204, "col_offset": 45, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "ns_key", "type": "Any"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "ns_value", "type": "Any"}, {"lineNumber": 226, "col_offset": 40, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "line", "type": "str"}, {"lineNumber": 250, "col_offset": 32, "nodeName": "newlines", "type": "List[str]"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 257, "col_offset": 17, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 257, "col_offset": 26, "nodeName": "func_code", "type": "Any"}, {"lineNumber": 258, "col_offset": 42, "nodeName": "func_code", "type": "Any"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 272, "col_offset": 33, "nodeName": "dependencies", "type": "Any"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "variables", "type": "Any"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "sc", "type": "Any"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "ln", "type": "Any"}, {"lineNumber": 274, "col_offset": 24, "nodeName": "uf", "type": "Any"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "_add_user_function", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 274, "col_offset": 53, "nodeName": "dep_name", "type": "Any"}, {"lineNumber": 274, "col_offset": 63, "nodeName": "dep", "type": "Any"}, {"lineNumber": 275, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 275, "col_offset": 40, "nodeName": "sc", "type": "Any"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 276, "col_offset": 42, "nodeName": "ln", "type": "Any"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 277, "col_offset": 42, "nodeName": "uf", "type": "Any"}, {"lineNumber": 291, "col_offset": 35, "nodeName": "variables", "type": "Any"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 292, "col_offset": 26, "nodeName": "var", "type": "Any"}, {"lineNumber": 292, "col_offset": 31, "nodeName": "Variable", "type": "Type[brian2.core.variables.Variable]"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 295, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 298, "col_offset": 38, "nodeName": "line", "type": "str"}, {"lineNumber": 299, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 299, "col_offset": 28, "nodeName": "var", "type": "Any"}, {"lineNumber": 299, "col_offset": 33, "nodeName": "Subexpression", "type": "Type[brian2.core.variables.Subexpression]"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "dtype", "type": "str"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 356, "col_offset": 65, "nodeName": "cpp_dtype", "type": "str"}, {"lineNumber": 357, "col_offset": 63, "nodeName": "varname", "type": "nothing"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "load_namespace", "type": "List[Any]"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "DEFAULT_FUNCTIONS", "type": "Dict[str, brian2.core.functions.Function]"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 49, "col_offset": 76, "nodeName": "render_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 93, "nodeName": "left", "type": "Any"}, {"lineNumber": 50, "col_offset": 77, "nodeName": "render_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 94, "nodeName": "right", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "CythonNodeRenderer", "type": "Type[CythonNodeRenderer]"}, {"lineNumber": 52, "col_offset": 45, "nodeName": "self", "type": "CythonNodeRenderer"}, {"lineNumber": 68, "col_offset": 54, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "statement", "type": "Any"}, {"lineNumber": 104, "col_offset": 47, "nodeName": "translate_expression", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 73, "nodeName": "simp_expr", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "codelines", "type": "List[str]"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "op", "type": "Union[str, Any]"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 137, "col_offset": 61, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 138, "col_offset": 55, "nodeName": "var", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 146, "col_offset": 39, "nodeName": "var", "type": "Any"}, {"lineNumber": 146, "col_offset": 51, "nodeName": "variables", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "temporary_vars", "type": "Set[Tuple[Any, Any]]"}, {"lineNumber": 147, "col_offset": 41, "nodeName": "var", "type": "Any"}, {"lineNumber": 147, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 151, "col_offset": 49, "nodeName": "var", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 40, "nodeName": "condvar", "type": "Any"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "indent", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "line", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 164, "col_offset": 63, "nodeName": "index_var", "type": "Any"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "sc_statements", "type": "Any"}, {"lineNumber": 172, "col_offset": 48, "nodeName": "ve_statements", "type": "Any"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 187, "col_offset": 37, "nodeName": "varname", "type": "Any"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 188, "col_offset": 34, "nodeName": "varname", "type": "Any"}, {"lineNumber": 188, "col_offset": 49, "nodeName": "ve_write", "type": "Any"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "add", "type": "Any"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "varname", "type": "Any"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "remove", "type": "Any"}, {"lineNumber": 190, "col_offset": 35, "nodeName": "varname", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "block_name", "type": "Any"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "user_functions", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 224, "col_offset": 39, "nodeName": "varname", "type": "Any"}, {"lineNumber": 224, "col_offset": 48, "nodeName": "var", "type": "Any"}, {"lineNumber": 225, "col_offset": 33, "nodeName": "get_namespace", "type": "Any"}, {"lineNumber": 225, "col_offset": 52, "nodeName": "owner", "type": "Any"}, {"lineNumber": 226, "col_offset": 40, "nodeName": "func_namespace", "type": "Union[Any, Dict[nothing, nothing]]"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 229, "col_offset": 31, "nodeName": "ns_value", "type": "Any"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "newlines", "type": "List[str]"}, {"lineNumber": 247, "col_offset": 24, "nodeName": "newlines", "type": "List[str]"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "support_code", "type": "List[Any]"}, {"lineNumber": 256, "col_offset": 36, "nodeName": "deindent", "type": "Callable[..., Any]"}, {"lineNumber": 256, "col_offset": 45, "nodeName": "func_code", "type": "Any"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "variables", "type": "Any"}, {"lineNumber": 259, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 259, "col_offset": 56, "nodeName": "varname", "type": "Any"}, {"lineNumber": 259, "col_offset": 65, "nodeName": "varname", "type": "Any"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 260, "col_offset": 38, "nodeName": "line", "type": "str"}, {"lineNumber": 262, "col_offset": 22, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 272, "col_offset": 33, "nodeName": "impl", "type": "Any"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 273, "col_offset": 31, "nodeName": "dep_name", "type": "Any"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 275, "col_offset": 16, "nodeName": "dep_support_code", "type": "List[Any]"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "dep_load_namespace", "type": "List[Any]"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "dep_user_functions", "type": "List[Any]"}, {"lineNumber": 291, "col_offset": 35, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 292, "col_offset": 49, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 292, "col_offset": 60, "nodeName": "var", "type": "Any"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "load_namespace", "type": "List[Any]"}, {"lineNumber": 293, "col_offset": 38, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 293, "col_offset": 81, "nodeName": "varname", "type": "Any"}, {"lineNumber": 293, "col_offset": 90, "nodeName": "varname", "type": "Any"}, {"lineNumber": 297, "col_offset": 40, "nodeName": "varname", "type": "Any"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "load_namespace", "type": "List[Any]"}, {"lineNumber": 300, "col_offset": 24, "nodeName": "get_cpp_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 300, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 301, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 303, "col_offset": 38, "nodeName": "line", "type": "str"}, {"lineNumber": 304, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 304, "col_offset": 28, "nodeName": "var", "type": "Any"}, {"lineNumber": 304, "col_offset": 33, "nodeName": "Constant", "type": "Type[brian2.core.variables.Constant]"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "dtype_name", "type": "str"}, {"lineNumber": 306, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 369, "col_offset": 22, "nodeName": "func", "type": "str"}, {"lineNumber": 376, "col_offset": 22, "nodeName": "func", "type": "str"}, {"lineNumber": 49, "col_offset": 76, "nodeName": "self", "type": "CythonNodeRenderer"}, {"lineNumber": 49, "col_offset": 93, "nodeName": "node", "type": "Any"}, {"lineNumber": 50, "col_offset": 77, "nodeName": "self", "type": "CythonNodeRenderer"}, {"lineNumber": 50, "col_offset": 94, "nodeName": "node", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "CythonNodeRenderer", "type": "Type[CythonNodeRenderer]"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "boolvar", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 104, "col_offset": 36, "nodeName": "op", "type": "Union[str, Any]"}, {"lineNumber": 104, "col_offset": 47, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 137, "col_offset": 61, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 146, "col_offset": 39, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 146, "col_offset": 51, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 147, "col_offset": 41, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 147, "col_offset": 51, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 151, "col_offset": 49, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "sc_read", "type": "Any"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "ve_read", "type": "Any"}, {"lineNumber": 225, "col_offset": 33, "nodeName": "impl", "type": "Any"}, {"lineNumber": 225, "col_offset": 52, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "load_namespace", "type": "List[str]"}, {"lineNumber": 228, "col_offset": 56, "nodeName": "varname", "type": "Any"}, {"lineNumber": 230, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 241, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 258, "col_offset": 31, "nodeName": "varname", "type": "Any"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "load_namespace", "type": "List[str]"}, {"lineNumber": 292, "col_offset": 66, "nodeName": "Subexpression", "type": "Type[brian2.core.variables.Subexpression]"}, {"lineNumber": 292, "col_offset": 81, "nodeName": "AuxiliaryVariable", "type": "Type[brian2.core.variables.AuxiliaryVariable]"}, {"lineNumber": 296, "col_offset": 38, "nodeName": "get_cpp_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 296, "col_offset": 52, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 300, "col_offset": 38, "nodeName": "var", "type": "Any"}, {"lineNumber": 301, "col_offset": 61, "nodeName": "dtype", "type": "str"}, {"lineNumber": 302, "col_offset": 63, "nodeName": "varname", "type": "Any"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "load_namespace", "type": "List[Any]"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "get_cpp_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 305, "col_offset": 43, "nodeName": "value", "type": "Any"}, {"lineNumber": 306, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 307, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 307, "col_offset": 38, "nodeName": "line", "type": "str"}, {"lineNumber": 308, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 308, "col_offset": 28, "nodeName": "var", "type": "Any"}, {"lineNumber": 308, "col_offset": 33, "nodeName": "Variable", "type": "Type[brian2.core.variables.Variable]"}, {"lineNumber": 309, "col_offset": 19, "nodeName": "dynamic", "type": "Any"}, {"lineNumber": 314, "col_offset": 16, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 335, "col_offset": 20, "nodeName": "line", "type": "str"}, {"lineNumber": 335, "col_offset": 28, "nodeName": "newlines", "type": "List[str]"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "atomics", "type": "List[Union[Any, str]]"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "atomics", "type": "List[Union[Any, str]]"}, {"lineNumber": 94, "col_offset": 46, "nodeName": "boolvar", "type": "Any"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "join", "type": "Callable"}, {"lineNumber": 97, "col_offset": 47, "nodeName": "atomics", "type": "List[Union[Any, str]]"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "var", "type": "Any"}, {"lineNumber": 164, "col_offset": 39, "nodeName": "variables", "type": "Any"}, {"lineNumber": 230, "col_offset": 27, "nodeName": "ns_value", "type": "Any"}, {"lineNumber": 231, "col_offset": 34, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 241, "col_offset": 24, "nodeName": "support_code", "type": "List[Any]"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "load_namespace", "type": "List[str]"}, {"lineNumber": 252, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 265, "col_offset": 32, "nodeName": "varname", "type": "Any"}, {"lineNumber": 296, "col_offset": 52, "nodeName": "var", "type": "Any"}, {"lineNumber": 305, "col_offset": 43, "nodeName": "var", "type": "Any"}, {"lineNumber": 306, "col_offset": 87, "nodeName": "dtype_name", "type": "str"}, {"lineNumber": 306, "col_offset": 107, "nodeName": "varname", "type": "Any"}, {"lineNumber": 307, "col_offset": 16, "nodeName": "load_namespace", "type": "List[Any]"}, {"lineNumber": 309, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 314, "col_offset": 29, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 314, "col_offset": 51, "nodeName": "var", "type": "Any"}, {"lineNumber": 315, "col_offset": 31, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 315, "col_offset": 51, "nodeName": "var", "type": "Any"}, {"lineNumber": 316, "col_offset": 19, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 316, "col_offset": 35, "nodeName": "handled_pointers", "type": "Set[Any]"}, {"lineNumber": 321, "col_offset": 20, "nodeName": "newlines", "type": "List[str]"}, {"lineNumber": 324, "col_offset": 20, "nodeName": "newlines", "type": "List[str]"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 328, "col_offset": 20, "nodeName": "newlines", "type": "List[str]"}, {"lineNumber": 330, "col_offset": 19, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 330, "col_offset": 34, "nodeName": "constant", "type": "Any"}, {"lineNumber": 331, "col_offset": 20, "nodeName": "newlines", "type": "List[str]"}, {"lineNumber": 333, "col_offset": 20, "nodeName": "newlines", "type": "List[str]"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "line", "type": "str"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 343, "col_offset": 37, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 345, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 345, "col_offset": 28, "nodeName": "var", "type": "Any"}, {"lineNumber": 345, "col_offset": 33, "nodeName": "Function", "type": "Type[brian2.core.functions.Function]"}, {"lineNumber": 164, "col_offset": 39, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 244, "col_offset": 41, "nodeName": "ns_key", "type": "Any"}, {"lineNumber": 252, "col_offset": 28, "nodeName": "line", "type": "str"}, {"lineNumber": 255, "col_offset": 49, "nodeName": "ns_key", "type": "Any"}, {"lineNumber": 266, "col_offset": 32, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 266, "col_offset": 37, "nodeName": "func_code", "type": "Any"}, {"lineNumber": 310, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 314, "col_offset": 29, "nodeName": "device", "type": "Any"}, {"lineNumber": 315, "col_offset": 31, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 318, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 318, "col_offset": 27, "nodeName": "var", "type": "Any"}, {"lineNumber": 320, "col_offset": 19, "nodeName": "get_dtype_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 320, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "var", "type": "Any"}, {"lineNumber": 330, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 330, "col_offset": 34, "nodeName": "var", "type": "Any"}, {"lineNumber": 336, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 342, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 342, "col_offset": 42, "nodeName": "line", "type": "str"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "handled_pointers", "type": "Set[Any]"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "sc", "type": "List[Any]"}, {"lineNumber": 346, "col_offset": 20, "nodeName": "ln", "type": "List[Any]"}, {"lineNumber": 346, "col_offset": 24, "nodeName": "uf", "type": "List[Any]"}, {"lineNumber": 346, "col_offset": 29, "nodeName": "_add_user_function", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 346, "col_offset": 53, "nodeName": "varname", "type": "Any"}, {"lineNumber": 346, "col_offset": 62, "nodeName": "var", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 347, "col_offset": 36, "nodeName": "sc", "type": "List[Any]"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 348, "col_offset": 38, "nodeName": "ln", "type": "List[Any]"}, {"lineNumber": 349, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 349, "col_offset": 38, "nodeName": "uf", "type": "List[Any]"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 243, "col_offset": 42, "nodeName": "get_cpp_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 243, "col_offset": 56, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 252, "col_offset": 50, "nodeName": "get_cpp_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 252, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 253, "col_offset": 52, "nodeName": "get_numpy_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 254, "col_offset": 44, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 310, "col_offset": 20, "nodeName": "load_namespace", "type": "List[Any]"}, {"lineNumber": 310, "col_offset": 42, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 320, "col_offset": 33, "nodeName": "var", "type": "Any"}, {"lineNumber": 336, "col_offset": 27, "nodeName": "line", "type": "str"}, {"lineNumber": 338, "col_offset": 52, "nodeName": "pointer_name", "type": "Any"}, {"lineNumber": 339, "col_offset": 50, "nodeName": "array_name", "type": "Any"}, {"lineNumber": 340, "col_offset": 47, "nodeName": "varname", "type": "Any"}, {"lineNumber": 342, "col_offset": 20, "nodeName": "load_namespace", "type": "List[Any]"}, {"lineNumber": 346, "col_offset": 29, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "support_code", "type": "List[Any]"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "load_namespace", "type": "List[Any]"}, {"lineNumber": 349, "col_offset": 16, "nodeName": "user_functions", "type": "List[Any]"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "load_namespace", "type": "List[Any]"}, {"lineNumber": 352, "col_offset": 38, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 352, "col_offset": 71, "nodeName": "varname", "type": "Any"}, {"lineNumber": 352, "col_offset": 80, "nodeName": "varname", "type": "Any"}, {"lineNumber": 243, "col_offset": 56, "nodeName": "ns_value", "type": "Any"}, {"lineNumber": 252, "col_offset": 64, "nodeName": "ns_value", "type": "Any"}, {"lineNumber": 254, "col_offset": 44, "nodeName": "ns_value", "type": "Any"}, {"lineNumber": 310, "col_offset": 75, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 310, "col_offset": 95, "nodeName": "var", "type": "Any"}, {"lineNumber": 311, "col_offset": 75, "nodeName": "get_array_name", "type": "Any"}, {"lineNumber": 311, "col_offset": 95, "nodeName": "var", "type": "Any"}, {"lineNumber": 336, "col_offset": 49, "nodeName": "get_cpp_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 336, "col_offset": 63, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 337, "col_offset": 51, "nodeName": "get_numpy_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 337, "col_offset": 67, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 310, "col_offset": 75, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 311, "col_offset": 75, "nodeName": "self", "type": "CythonCodeGenerator"}, {"lineNumber": 336, "col_offset": 63, "nodeName": "var", "type": "Any"}, {"lineNumber": 337, "col_offset": 67, "nodeName": "var", "type": "Any"}]