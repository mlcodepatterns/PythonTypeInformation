[{"lineNumber": 104, "col_offset": 0, "nodeName": "mock_request_get", "type": "Callable[..., Any]"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "Response", "type": "Type[requests.models.Response]"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "requests", "type": "module"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "with_content_length", "type": "bool"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "zipresult", "type": "bool"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "setup", "type": "Any"}, {"lineNumber": 11, "col_offset": 21, "nodeName": "setup", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "teardown", "type": "Any"}, {"lineNumber": 12, "col_offset": 24, "nodeName": "teardown", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "with_content_length", "type": "Any"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "b", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "zipresult", "type": "Any"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "url", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "url", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "params", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "zipresult", "type": "bool"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "with_content_length", "type": "bool"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "MockResponse", "type": "Type[MockResponse]"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "url", "type": "Any"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "self", "type": "with_setup"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "with_setup"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "cls", "type": "Type[MockResponse]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "cls", "type": "Type[MockResponse]"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "raw", "type": "io.BytesIO"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "stream", "type": "bool"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "stream", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "zipresult", "type": "bool"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "iter_content", "type": "Callable[..., Iterator[Any]]"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "setup", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "BytesIO", "type": "Type[io.BytesIO]"}, {"lineNumber": 62, "col_offset": 70, "nodeName": "mf", "type": "zipfile.ZipFile"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "_content", "type": "bytes"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "raw", "type": "io.BytesIO"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "_content", "type": "str"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "content", "type": "str"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "total_length", "type": "int"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "total_length", "type": "int"}, {"lineNumber": 100, "col_offset": 65, "nodeName": "chunk_size", "type": "Any"}, {"lineNumber": 101, "col_offset": 69, "nodeName": "decode_unicode", "type": "Any"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "self", "type": "with_setup"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "teardown", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "MockResponse", "type": "Type[MockResponse]"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "ZipFile", "type": "Type[zipfile.ZipFile]"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "raw", "type": "io.BytesIO"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "writestr", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "getvalue", "type": "Callable[[], bytes]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "BytesIO", "type": "Type[io.BytesIO]"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "headers", "type": "requests.structures.CaseInsensitiveDict[str]"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "headers", "type": "requests.structures.CaseInsensitiveDict[str]"}, {"lineNumber": 79, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 53, "nodeName": "content", "type": "str"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 80, "col_offset": 40, "nodeName": "content", "type": "str"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "MockResponse", "type": "Type[MockResponse]"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 19, "col_offset": 19, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "self", "type": "with_setup"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "zipfile", "type": "module"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "ZIP_DEFLATED", "type": "int"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "mf", "type": "zipfile.ZipFile"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "raw", "type": "io.BytesIO"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 70, "col_offset": 46, "nodeName": "content", "type": "str"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 76, "col_offset": 53, "nodeName": "getvalue", "type": "Callable[[], bytes]"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "getvalue", "type": "Callable[[], bytes]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "zipfile", "type": "module"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 76, "col_offset": 53, "nodeName": "raw", "type": "io.BytesIO"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "raw", "type": "io.BytesIO"}, {"lineNumber": 76, "col_offset": 53, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "self", "type": "MockResponse"}]