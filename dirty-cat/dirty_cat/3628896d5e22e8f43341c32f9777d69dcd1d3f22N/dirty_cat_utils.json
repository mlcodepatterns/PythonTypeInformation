[{"lineNumber": 43, "col_offset": 0, "nodeName": "mock_request_get", "type": "Callable[..., Any]"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "Response", "type": "Type[requests.models.Response]"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "requests", "type": "module"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "setup", "type": "Any"}, {"lineNumber": 8, "col_offset": 21, "nodeName": "setup", "type": "Any"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "teardown", "type": "Any"}, {"lineNumber": 9, "col_offset": 24, "nodeName": "teardown", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "url", "type": "Any"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "url", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "params", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "stream", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "total_length", "type": "int"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "MockResponse", "type": "Type[MockResponse]"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "url", "type": "Any"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "self", "type": "with_setup"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "self", "type": "with_setup"}, {"lineNumber": 24, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "raw", "type": "io.BytesIO"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "_content", "type": "str"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "content", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "content", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "headers", "type": "requests.structures.CaseInsensitiveDict[str]"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 35, "col_offset": 45, "nodeName": "content", "type": "str"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "iter_content", "type": "Callable[..., Iterator[Any]]"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "setup", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "BytesIO", "type": "Type[io.BytesIO]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 39, "col_offset": 65, "nodeName": "chunk_size", "type": "Any"}, {"lineNumber": 40, "col_offset": 69, "nodeName": "decode_unicode", "type": "Any"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "self", "type": "with_setup"}, {"lineNumber": 16, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "teardown", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 25, "col_offset": 14, "nodeName": "MockResponse", "type": "Type[MockResponse]"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 31, "col_offset": 42, "nodeName": "content", "type": "str"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "MockResponse", "type": "Type[MockResponse]"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "self", "type": "MockResponse"}, {"lineNumber": 16, "col_offset": 19, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 16, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "self", "type": "with_setup"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}]