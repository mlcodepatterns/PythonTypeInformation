[{"lineNumber": 28, "col_offset": 0, "nodeName": "encoder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "data_file", "type": "str"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "method", "type": "str"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "fetch_midwest_survey", "type": "Callable[[], str]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "target_column", "type": "str"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "feature_columns", "type": "List[Tuple[str, str]]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "label_encoder", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "onehot_columns", "type": "List[str]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "X", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "SimilarityEncoder", "type": "Type[dirty_cat.similarity_encoder.SimilarityEncoder]"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "FunctionTransformer", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "datasets", "type": "module"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "astype", "type": "Any"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "LabelEncoder", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "col", "type": "str"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "apply", "type": "Any"}, {"lineNumber": 77, "col_offset": 50, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "X", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "X", "type": "Any"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "y", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "values", "type": "Any"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "method", "type": "str"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "feature_columns", "type": "List[Tuple[str, str]]"}, {"lineNumber": 77, "col_offset": 7, "nodeName": "onehot_columns", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 50, "nodeName": "label_encoder", "type": "Any"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "feature_columns", "type": "List[Tuple[str, str]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "method", "type": "str"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "data_file", "type": "str"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "col", "type": "str"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "enc", "type": "str"}, {"lineNumber": 76, "col_offset": 61, "nodeName": "enc", "type": "str"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "df", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "column", "type": "str"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "encoder", "type": "str"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "onehot_columns", "type": "List[str]"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "mean", "type": "Any"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "scores", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "std", "type": "Any"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "scores", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "target_column", "type": "str"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "np", "type": "module"}]