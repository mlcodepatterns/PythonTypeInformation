[{"lineNumber": 86, "col_offset": 0, "nodeName": "make_pipeline", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "df", "type": "Any"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "dirty_column", "type": "str"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "target_column", "type": "str"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "clean_columns", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "y", "type": "Any"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "encoder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 0, "nodeName": "cv", "type": "Any"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "all_scores", "type": "Dict[str, Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "method", "type": "str"}, {"lineNumber": 130, "col_offset": 0, "nodeName": "ax", "type": "Any"}, {"lineNumber": 20, "col_offset": 10, "nodeName": "fetch_midwest_survey", "type": "Callable[[], Any]"}, {"lineNumber": 21, "col_offset": 5, "nodeName": "astype", "type": "Any"}, {"lineNumber": 21, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "transformers", "type": "List[Tuple[str, Any, List[str]]]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 112, "col_offset": 5, "nodeName": "StratifiedKFold", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "scores", "type": "Any"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "figure", "type": "Any"}, {"lineNumber": 130, "col_offset": 5, "nodeName": "boxplot", "type": "Any"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "ylabel", "type": "Any"}, {"lineNumber": 132, "col_offset": 0, "nodeName": "xlabel", "type": "Any"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "yticks", "type": "Any"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "tight_layout", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "values", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "SimilarityEncoder", "type": "Type[dirty_cat.similarity_encoder.SimilarityEncoder]"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "MinHashEncoder", "type": "Type[dirty_cat.minhash_encoder.MinHashEncoder]"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "FunctionTransformer", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "make_pipeline", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "method", "type": "str"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 117, "col_offset": 39, "nodeName": "df", "type": "Any"}, {"lineNumber": 117, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "all_scores", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "plt", "type": "Any"}, {"lineNumber": 130, "col_offset": 5, "nodeName": "seaborn", "type": "Any"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "plt", "type": "Any"}, {"lineNumber": 132, "col_offset": 0, "nodeName": "plt", "type": "Any"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "plt", "type": "Any"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "plt", "type": "Any"}, {"lineNumber": 21, "col_offset": 5, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 27, "col_offset": 6, "nodeName": "value_counts", "type": "Any"}, {"lineNumber": 88, "col_offset": 63, "nodeName": "clean_columns", "type": "List[str]"}, {"lineNumber": 117, "col_offset": 49, "nodeName": "cv", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "method", "type": "str"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "method", "type": "str"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 130, "col_offset": 39, "nodeName": "all_scores", "type": "Dict[str, Any]"}, {"lineNumber": 21, "col_offset": 5, "nodeName": "pd", "type": "Any"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "encoder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "encoding_method", "type": "str"}, {"lineNumber": 90, "col_offset": 50, "nodeName": "encoder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "dirty_column", "type": "str"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "pd", "type": "Any"}, {"lineNumber": 27, "col_offset": 6, "nodeName": "df", "type": "Any"}, {"lineNumber": 60, "col_offset": 7, "nodeName": "target_column", "type": "str"}, {"lineNumber": 90, "col_offset": 63, "nodeName": "encoding_method", "type": "str"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "ColumnTransformer", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "StandardScaler", "type": "Any"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "mean", "type": "Any"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "std", "type": "Any"}, {"lineNumber": 27, "col_offset": 9, "nodeName": "dirty_column", "type": "str"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "transformers", "type": "List[Tuple[str, Any, List[str]]]"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "scores", "type": "Any"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "scores", "type": "Any"}]