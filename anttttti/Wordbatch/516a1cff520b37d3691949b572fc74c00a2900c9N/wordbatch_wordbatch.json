[{"lineNumber": 19, "col_offset": 0, "nodeName": "default_normalize_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "non_alphanums", "type": "Pattern[unicode]"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "reset", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "set_extractor", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "process", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "transform", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "partial_fit", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "fit_transform", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "partial_fit_transform", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "__getstate__", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "__setstate__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "re", "type": "module"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 23, "col_offset": 39, "nodeName": "default_normalize_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "freeze", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "freeze", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "dictionary", "type": "Dict[nothing, nothing]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "dft", "type": "Counter[nothing]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "raw_dft", "type": "Counter[nothing]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "preserve_raw_dft", "type": "bool"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "reset", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "freeze", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "update", "type": "bool"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "texts", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "texts", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "params", "type": "Any"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "procs", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "procs", "type": "int"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "Batcher", "type": "Type[wordbatch.batcher.Batcher]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "Dictionary", "type": "Any"}, {"lineNumber": 40, "col_offset": 47, "nodeName": "batcher", "type": "wordbatch.batcher.Batcher"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "normalize_text", "type": "Any"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "normalize_text", "type": "None"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "normalize_text", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "set_extractor", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "extractor", "type": "None"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "update", "type": "bool"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "normalize_text", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "texts", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "input_split", "type": "bool"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "update", "type": "bool"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "texts", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "input_split", "type": "bool"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "process", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "texts", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "input_split", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "use_sc", "type": "Any"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "cache_features", "type": "None"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "input_split", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "texts", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "process", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "texts", "type": "Union[List[Any], Any]"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "texts", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "texts", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "texts", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "input_split", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "transform", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "texts", "type": "Any"}, {"lineNumber": 112, "col_offset": 37, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 112, "col_offset": 48, "nodeName": "cache_features", "type": "Any"}, {"lineNumber": 112, "col_offset": 64, "nodeName": "input_split", "type": "Any"}, {"lineNumber": 112, "col_offset": 77, "nodeName": "reset", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "transform", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "texts", "type": "Any"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 115, "col_offset": 48, "nodeName": "cache_features", "type": "Any"}, {"lineNumber": 115, "col_offset": 64, "nodeName": "input_split", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 20, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "cpu_count", "type": "Callable[[], int]"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "batcher", "type": "module"}, {"lineNumber": 31, "col_offset": 44, "nodeName": "procs", "type": "Union[Any, int]"}, {"lineNumber": 31, "col_offset": 66, "nodeName": "minibatch_size", "type": "Any"}, {"lineNumber": 31, "col_offset": 90, "nodeName": "timeout", "type": "Any"}, {"lineNumber": 32, "col_offset": 52, "nodeName": "spark_context", "type": "Any"}, {"lineNumber": 32, "col_offset": 74, "nodeName": "method", "type": "Any"}, {"lineNumber": 32, "col_offset": 90, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 40, "col_offset": 68, "nodeName": "min_df", "type": "Any"}, {"lineNumber": 40, "col_offset": 83, "nodeName": "max_df", "type": "Any"}, {"lineNumber": 40, "col_offset": 102, "nodeName": "max_words", "type": "Any"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "Apply", "type": "Any"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "batcher", "type": "wordbatch.batcher.Batcher"}, {"lineNumber": 44, "col_offset": 62, "nodeName": "normalize_text", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "transform", "type": "Any"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "texts", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "spellcor_count", "type": "Any"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "stemmer", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "normalize_wordforms", "type": "Any"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "texts", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "preserve_raw_dft", "type": "bool"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "raw_dft", "type": "Counter[nothing]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "texts", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 91, "col_offset": 47, "nodeName": "reset", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "cache_features", "type": "Optional[Any]"}, {"lineNumber": 97, "col_offset": 38, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 97, "col_offset": 53, "nodeName": "cache_features", "type": "Optional[Any]"}, {"lineNumber": 97, "col_offset": 78, "nodeName": "load_features", "type": "Any"}, {"lineNumber": 97, "col_offset": 102, "nodeName": "cache_features", "type": "Optional[Any]"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "split_batches", "type": "Callable[..., List[Any]]"}, {"lineNumber": 98, "col_offset": 64, "nodeName": "texts", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 100, "col_offset": 59, "nodeName": "reset", "type": "Any"}, {"lineNumber": 100, "col_offset": 74, "nodeName": "update", "type": "bool"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "transform", "type": "Any"}, {"lineNumber": 102, "col_offset": 39, "nodeName": "texts", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "cache_features", "type": "Optional[Any]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "merge_batches", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 46, "nodeName": "texts", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "setattr", "type": "Callable[[Any, Union[bytearray, str, unicode], Any], None]"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 125, "col_offset": 42, "nodeName": "key", "type": "Any"}, {"lineNumber": 20, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "multiprocessing", "type": "module"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "apply", "type": "Any"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 55, "col_offset": 63, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "batcher", "type": "wordbatch.batcher.Batcher"}, {"lineNumber": 56, "col_offset": 57, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 57, "col_offset": 49, "nodeName": "batcher", "type": "wordbatch.batcher.Batcher"}, {"lineNumber": 57, "col_offset": 63, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "normalize_text", "type": "Any"}, {"lineNumber": 72, "col_offset": 69, "nodeName": "input_split", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "update_dictionary", "type": "Any"}, {"lineNumber": 77, "col_offset": 47, "nodeName": "texts", "type": "Any"}, {"lineNumber": 77, "col_offset": 54, "nodeName": "raw_dft", "type": "Counter[nothing]"}, {"lineNumber": 77, "col_offset": 74, "nodeName": "raw_min_df", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 79, "col_offset": 64, "nodeName": "input_split", "type": "Union[Any, bool]"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 81, "col_offset": 60, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 85, "col_offset": 51, "nodeName": "input_split", "type": "Union[Any, bool]"}, {"lineNumber": 85, "col_offset": 71, "nodeName": "reset", "type": "Any"}, {"lineNumber": 87, "col_offset": 56, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 87, "col_offset": 60, "nodeName": "raw_dft", "type": "Counter[nothing]"}, {"lineNumber": 87, "col_offset": 93, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 87, "col_offset": 97, "nodeName": "dft", "type": "Counter[nothing]"}, {"lineNumber": 97, "col_offset": 38, "nodeName": "path", "type": "module"}, {"lineNumber": 97, "col_offset": 78, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "batcher", "type": "wordbatch.batcher.Batcher"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "save_features", "type": "Any"}, {"lineNumber": 103, "col_offset": 62, "nodeName": "cache_features", "type": "Optional[Any]"}, {"lineNumber": 103, "col_offset": 78, "nodeName": "texts", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "batcher", "type": "wordbatch.batcher.Batcher"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 125, "col_offset": 47, "nodeName": "params", "type": "Any"}, {"lineNumber": 20, "col_offset": 40, "nodeName": "y", "type": "Any"}, {"lineNumber": 20, "col_offset": 105, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 20, "col_offset": 109, "nodeName": "x", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 55, "col_offset": 49, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 56, "col_offset": 57, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 57, "col_offset": 36, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 57, "col_offset": 49, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 57, "col_offset": 63, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 57, "col_offset": 80, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 77, "col_offset": 54, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 77, "col_offset": 74, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 77, "col_offset": 104, "nodeName": "input_split", "type": "Union[Any, bool]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 87, "col_offset": 60, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 87, "col_offset": 97, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 97, "col_offset": 38, "nodeName": "os", "type": "module"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 122, "col_offset": 32, "nodeName": "k", "type": "str"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "v", "type": "Any"}, {"lineNumber": 122, "col_offset": 41, "nodeName": "items", "type": "Callable"}, {"lineNumber": 125, "col_offset": 54, "nodeName": "key", "type": "Any"}, {"lineNumber": 20, "col_offset": 45, "nodeName": "split", "type": "Any"}, {"lineNumber": 122, "col_offset": 41, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 122, "col_offset": 41, "nodeName": "self", "type": "WordBatch"}, {"lineNumber": 20, "col_offset": 45, "nodeName": "strip", "type": "Any"}, {"lineNumber": 20, "col_offset": 45, "nodeName": "lower", "type": "Any"}, {"lineNumber": 20, "col_offset": 45, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 20, "col_offset": 68, "nodeName": "text", "type": "Any"}, {"lineNumber": 20, "col_offset": 45, "nodeName": "non_alphanums", "type": "Pattern[unicode]"}]