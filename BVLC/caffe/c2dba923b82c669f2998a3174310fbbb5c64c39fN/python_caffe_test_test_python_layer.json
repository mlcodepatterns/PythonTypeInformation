[{"lineNumber": 59, "col_offset": 0, "nodeName": "python_net_file", "type": "Callable[[], Any]"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "exception_net_file", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "parameter_net_file", "type": "Callable[[], Any]"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "phase_net_file", "type": "Callable[[], Any]"}, {"lineNumber": 9, "col_offset": 18, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "setup", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "reshape", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "backward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "setup", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "setup", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "reshape", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "backward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "setup", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "reshape", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "test_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "test_backward", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "test_reshape", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "test_exception", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "test_parameter", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "test_phase", "type": "Callable[[Any], Any]"}, {"lineNumber": 9, "col_offset": 18, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "phase", "type": "Any"}, {"lineNumber": 60, "col_offset": 65, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 73, "col_offset": 65, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 83, "col_offset": 65, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 92, "col_offset": 65, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "net_file", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "x", "type": "int"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "x", "type": "int"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "flat", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "x", "type": "int"}, {"lineNumber": 117, "col_offset": 44, "nodeName": "x", "type": "int"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "flat", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "s", "type": "int"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "blob", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "net_file", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "net_file", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "net2", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "net_file", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "phase", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "diff", "type": "Any"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "diff", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "add_blob", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "diff", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "self", "type": "PhaseLayer"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "NamedTemporaryFile", "type": "Callable[..., tempfile._TemporaryFileWrapper]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "write", "type": "Callable[[Union[str, unicode]], int]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "NamedTemporaryFile", "type": "Callable[..., tempfile._TemporaryFileWrapper]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "write", "type": "Callable[[Union[str, unicode]], int]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "NamedTemporaryFile", "type": "Callable[..., tempfile._TemporaryFileWrapper]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "write", "type": "Callable[[Union[str, unicode]], int]"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "NamedTemporaryFile", "type": "Callable[..., tempfile._TemporaryFileWrapper]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "write", "type": "Callable[[Union[str, unicode]], int]"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "python_net_file", "type": "Callable[[], Any]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "Net", "type": "Any"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "net_file", "type": "Any"}, {"lineNumber": 105, "col_offset": 39, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "remove", "type": "Callable[[Union[str, unicode]], None]"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "net_file", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "forward", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "diff", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "diff", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 124, "col_offset": 39, "nodeName": "s", "type": "int"}, {"lineNumber": 124, "col_offset": 42, "nodeName": "s", "type": "int"}, {"lineNumber": 124, "col_offset": 45, "nodeName": "s", "type": "int"}, {"lineNumber": 124, "col_offset": 48, "nodeName": "s", "type": "int"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "forward", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "itervalues", "type": "Callable"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "d", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "exception_net_file", "type": "Callable[[], Any]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 132, "col_offset": 40, "nodeName": "Net", "type": "Any"}, {"lineNumber": 132, "col_offset": 51, "nodeName": "net_file", "type": "Any"}, {"lineNumber": 132, "col_offset": 61, "nodeName": "TEST", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "remove", "type": "Callable[[Union[str, unicode]], None]"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "net_file", "type": "Any"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "parameter_net_file", "type": "Callable[[], Any]"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "Net", "type": "Any"}, {"lineNumber": 137, "col_offset": 24, "nodeName": "net_file", "type": "Any"}, {"lineNumber": 137, "col_offset": 34, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "forward", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "diff", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "h", "type": "int"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "caffemodel_file", "type": "str"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "mkstemp", "type": "Callable"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "caffemodel_file", "type": "str"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "copy_from", "type": "Any"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "caffemodel_file", "type": "str"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "remove", "type": "Callable[[Union[str, unicode]], None]"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "caffemodel_file", "type": "str"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "Net", "type": "Any"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "net_file", "type": "Any"}, {"lineNumber": 157, "col_offset": 35, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "share_with", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "net", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "remove", "type": "Callable[[Union[str, unicode]], None]"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "net_file", "type": "Any"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "phase_net_file", "type": "Callable[[], Any]"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 166, "col_offset": 34, "nodeName": "TEST", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 105, "col_offset": 39, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "six", "type": "module"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "net", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 40, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 132, "col_offset": 61, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 137, "col_offset": 34, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "diff", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 157, "col_offset": 35, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "net2", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 166, "col_offset": 34, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 167, "col_offset": 18, "nodeName": "Net", "type": "Any"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "net_file", "type": "Any"}, {"lineNumber": 167, "col_offset": 38, "nodeName": "phase", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 53, "nodeName": "phase", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "top", "type": "Any"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "top", "type": "Any"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "top", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "ParameterLayer"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "top", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "top", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "top", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 40, "nodeName": "x", "type": "int"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 40, "nodeName": "x", "type": "int"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "blob", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "s", "type": "int"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "d", "type": "Any"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 167, "col_offset": 18, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "ParameterLayer"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "ParameterLayer"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "layer", "type": "Any"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 168, "col_offset": 29, "nodeName": "forward", "type": "Any"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 141, "col_offset": 32, "nodeName": "_layer_names", "type": "Any"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "layer", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "layer", "type": "Any"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "layer", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "layer", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "layer", "type": "Any"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "_layer_names", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "layer", "type": "Any"}, {"lineNumber": 168, "col_offset": 29, "nodeName": "net", "type": "Any"}, {"lineNumber": 141, "col_offset": 32, "nodeName": "net", "type": "Any"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "net2", "type": "Any"}]