[{"lineNumber": 18, "col_offset": 0, "nodeName": "conv_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "crop_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "coord_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "compose", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 0, "nodeName": "inverse", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 0, "nodeName": "coord_map_from_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 171, "col_offset": 0, "nodeName": "crop", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "PASS_THROUGH_LAYERS", "type": "List[str]"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "params", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "axis", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "ks", "type": "numpy.ndarray"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "dilation", "type": "numpy.ndarray"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "params", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "axis", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "offset", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "base_map", "type": "Any"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "next_map", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "coord_map", "type": "Union[Tuple[None, int, int], Tuple[Any, Any, Any]]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "from_maps", "type": "Dict[Any, Union[Tuple[None, int, int], Tuple[Any, Any, Any]]]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "frontier", "type": "Set[Any]"}, {"lineNumber": 141, "col_offset": 10, "nodeName": "frontier", "type": "Set[Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "to_maps", "type": "Dict[Any, Union[Tuple[None, int, int], Tuple[Any, Any, Any]]]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "frontier", "type": "Set[Any]"}, {"lineNumber": 154, "col_offset": 10, "nodeName": "frontier", "type": "Set[Any]"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "get", "type": "Any"}, {"lineNumber": 28, "col_offset": 48, "nodeName": "params", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "axis", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "get", "type": "Any"}, {"lineNumber": 44, "col_offset": 41, "nodeName": "params", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "axis", "type": "Any"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "offset", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 7, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "ax1", "type": "Any"}, {"lineNumber": 94, "col_offset": 9, "nodeName": "a1", "type": "Any"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "b1", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "ax2", "type": "Any"}, {"lineNumber": 95, "col_offset": 9, "nodeName": "a2", "type": "Any"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "b2", "type": "Any"}, {"lineNumber": 96, "col_offset": 7, "nodeName": "ax1", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "ax", "type": "Any"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "ax2", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "ax", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "ax", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "ax", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "bottoms", "type": "Any"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "bottoms", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "top_from", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "top_from", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "top", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "top_to", "type": "Any"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "top_to", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "top", "type": "Any"}, {"lineNumber": 167, "col_offset": 10, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "ax", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "coord_map_from_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 177, "col_offset": 33, "nodeName": "top_from", "type": "Any"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "top_to", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "all", "type": "Any"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 178, "col_offset": 68, "nodeName": "a", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "all", "type": "Any"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 179, "col_offset": 72, "nodeName": "b", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "all", "type": "Any"}, {"lineNumber": 180, "col_offset": 37, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 181, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "Crop", "type": "Any"}, {"lineNumber": 182, "col_offset": 18, "nodeName": "top_from", "type": "Any"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "top_to", "type": "Any"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "params", "type": "Any"}, {"lineNumber": 28, "col_offset": 48, "nodeName": "fn", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "params", "type": "Any"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "params", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "get", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "params", "type": "Any"}, {"lineNumber": 44, "col_offset": 41, "nodeName": "fn", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "params", "type": "Any"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 66, "col_offset": 7, "nodeName": "fn", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "axis", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "stride", "type": "numpy.ndarray"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "ks", "type": "Any"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "pad", "type": "numpy.ndarray"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "conv_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "fn", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "axis", "type": "Any"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "ax", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "ax1", "type": "Any"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "AxisMismatchException", "type": "Type[AxisMismatchException]"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "a1", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "a2", "type": "Any"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "b1", "type": "Any"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "a", "type": "Any"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "fn", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "bottoms", "type": "Any"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "bottoms", "type": "Any"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 145, "col_offset": 26, "nodeName": "bottoms", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "UndefinedMapException", "type": "Type[UndefinedMapException]"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "top", "type": "Any"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "from_maps", "type": "Dict[Any, Union[Tuple[None, int, int], Tuple[Any, Any, Any]]]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "bottoms", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "bottoms", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "UndefinedMapException", "type": "Type[UndefinedMapException]"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "L", "type": "Any"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "fn", "type": "Any"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "params", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "get", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "dilation", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "fn", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "params", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "stride", "type": "numpy.ndarray"}, {"lineNumber": 68, "col_offset": 56, "nodeName": "stride", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "fn", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "axis", "type": "Any"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "stride", "type": "numpy.ndarray"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "ks", "type": "Any"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "pad", "type": "numpy.ndarray"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "conv_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "fn", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "axis", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "stride", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "PASS_THROUGH_LAYERS", "type": "List[str]"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "ax2", "type": "Any"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "ax1", "type": "Any"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "ax2", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "a1", "type": "Any"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "b2", "type": "Any"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "top", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "fn", "type": "Any"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "bottoms", "type": "Any"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "frontier", "type": "Set[Any]"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "collect_bottoms", "type": "Callable[[Any], Any]"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "top", "type": "Any"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "frontier", "type": "Set[Any]"}, {"lineNumber": 157, "col_offset": 19, "nodeName": "compose", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "collect_bottoms", "type": "Callable[[Any], Any]"}, {"lineNumber": 159, "col_offset": 38, "nodeName": "top", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "b", "type": "Any"}, {"lineNumber": 183, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "params", "type": "Any"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "params", "type": "Any"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "ks", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "params", "type": "Any"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "pad", "type": "numpy.ndarray"}, {"lineNumber": 71, "col_offset": 44, "nodeName": "pad", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "fn", "type": "Any"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "UndefinedMapException", "type": "Type[UndefinedMapException]"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "top", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "from_maps", "type": "Dict[Any, Union[Tuple[None, int, int], Tuple[Any, Any, Any]]]"}, {"lineNumber": 146, "col_offset": 36, "nodeName": "compose", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "to_maps", "type": "Dict[Any, Union[Tuple[None, int, int], Tuple[Any, Any, Any]]]"}, {"lineNumber": 157, "col_offset": 41, "nodeName": "inverse", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "to_maps", "type": "Dict[Any, Union[Tuple[None, int, int], Tuple[Any, Any, Any]]]"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "compose", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "round", "type": "Any"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "b", "type": "Any"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "ax", "type": "Any"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "fn", "type": "Any"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "fn", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "axis", "type": "Any"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "offset", "type": "numpy.ndarray"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "crop_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "fn", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "axis", "type": "Any"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 146, "col_offset": 44, "nodeName": "from_maps", "type": "Dict[Any, Union[Tuple[None, int, int], Tuple[Any, Any, Any]]]"}, {"lineNumber": 146, "col_offset": 60, "nodeName": "coord_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 70, "nodeName": "fn", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "frontier", "type": "Set[Any]"}, {"lineNumber": 157, "col_offset": 35, "nodeName": "top", "type": "Any"}, {"lineNumber": 157, "col_offset": 49, "nodeName": "from_maps", "type": "Dict[Any, Union[Tuple[None, int, int], Tuple[Any, Any, Any]]]"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 161, "col_offset": 42, "nodeName": "to_maps", "type": "Dict[Any, Union[Tuple[None, int, int], Tuple[Any, Any, Any]]]"}, {"lineNumber": 161, "col_offset": 56, "nodeName": "coord_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 66, "nodeName": "fn", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "frontier", "type": "Set[Any]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 184, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "ks", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "ks", "type": "Any"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "offset", "type": "numpy.ndarray"}, {"lineNumber": 146, "col_offset": 54, "nodeName": "top", "type": "Any"}, {"lineNumber": 146, "col_offset": 70, "nodeName": "top", "type": "Any"}, {"lineNumber": 157, "col_offset": 59, "nodeName": "top", "type": "Any"}, {"lineNumber": 161, "col_offset": 50, "nodeName": "top", "type": "Any"}, {"lineNumber": 161, "col_offset": 66, "nodeName": "top", "type": "Any"}, {"lineNumber": 184, "col_offset": 45, "nodeName": "astype", "type": "Any"}, {"lineNumber": 184, "col_offset": 64, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 184, "col_offset": 45, "nodeName": "round", "type": "Any"}, {"lineNumber": 184, "col_offset": 54, "nodeName": "b", "type": "Any"}, {"lineNumber": 184, "col_offset": 45, "nodeName": "np", "type": "module"}]