[{"lineNumber": 11, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "test_solve", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "test_net_memory", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "test_snapshot", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "num_output", "type": "int"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "net_f", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "solver", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "nets", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "total", "type": "int"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "nets", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "files", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "fn", "type": "str"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "files", "type": "List[str]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TestSolver"}, {"lineNumber": 14, "col_offset": 16, "nodeName": "simple_net_file", "type": "Any"}, {"lineNumber": 14, "col_offset": 32, "nodeName": "num_output", "type": "int"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "NamedTemporaryFile", "type": "Callable[..., tempfile._TemporaryFileWrapper]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "write", "type": "Callable[[Union[str, unicode]], int]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestSolver"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "SGDSolver", "type": "Any"}, {"lineNumber": 22, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "get_solver", "type": "Any"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "set_mode_cpu", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "randint", "type": "Any"}, {"lineNumber": 28, "col_offset": 34, "nodeName": "num_output", "type": "int"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "randint", "type": "Any"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "num_output", "type": "int"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "remove", "type": "Callable[[Union[str, unicode]], None]"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "remove", "type": "Callable[[Union[str, unicode]], None]"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "net_f", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "iter", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "solve", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "iter", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "TestSolver"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "ps", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "bl", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "snapshot", "type": "Any"}, {"lineNumber": 14, "col_offset": 32, "nodeName": "self", "type": "TestSolver"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 22, "col_offset": 38, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 28, "col_offset": 34, "nodeName": "self", "type": "TestSolver"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "self", "type": "TestSolver"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestSolver"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "solver", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "solver", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestSolver"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "solver", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 44, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "test_nets", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestSolver"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "nets", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "itervalues", "type": "Callable"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "params", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "ps", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "itervalues", "type": "Callable"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "total", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "solver", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "isfile", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "fn", "type": "str"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "remove", "type": "Callable[[Union[str, unicode]], None]"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "fn", "type": "str"}, {"lineNumber": 16, "col_offset": 31, "nodeName": "net_f", "type": "Any"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "self", "type": "TestSolver"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestSolver"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "self", "type": "TestSolver"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "solver", "type": "Any"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "solver", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "six", "type": "module"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "net", "type": "Any"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "total", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "six", "type": "module"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "net", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestSolver"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "self", "type": "TestSolver"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "self", "type": "TestSolver"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 54, "col_offset": 41, "nodeName": "sum", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "sum", "type": "Any"}, {"lineNumber": 52, "col_offset": 44, "nodeName": "sum", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 54, "col_offset": 41, "nodeName": "diff", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestSolver"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "net", "type": "Any"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 52, "col_offset": 44, "nodeName": "diff", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "bl", "type": "Any"}, {"lineNumber": 54, "col_offset": 41, "nodeName": "bl", "type": "Any"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "solver", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestSolver"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "test_nets", "type": "Any"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 52, "col_offset": 44, "nodeName": "p", "type": "Any"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "self", "type": "TestSolver"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "solver", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "self", "type": "TestSolver"}]