[{"lineNumber": 22, "col_offset": 15, "nodeName": "Net", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "mean_file", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "input_scale", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "channel_swap", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "window_inputs", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "images_windows", "type": "Iterator[Tuple[Any, Any]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "caffe_in", "type": "numpy.ndarray"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "detections", "type": "List[Dict[str, Any]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "ix", "type": "int"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "images_windows", "type": "Iterator[Tuple[Any, Any]]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "detections", "type": "List[Dict[str, Any]]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "image_fnames", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "windows_list", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "crop", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "context_pad", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "crop", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "context_pad", "type": "Any"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "context_pad", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "context_pad", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "self", "type": "Detector"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "model_file", "type": "Any"}, {"lineNumber": 37, "col_offset": 45, "nodeName": "pretrained_file", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "set_phase_test", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "configure_crop", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "context_pad", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "image_fname", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "windows", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "image", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "window", "type": "Any"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "windows", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "forward_all", "type": "Any"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "image_fname", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "windows", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "window", "type": "Any"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "windows", "type": "Any"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "get_windows", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "image_fnames", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "detect_windows", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "im", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "self", "type": "Detector"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "box", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "crop_size", "type": "Any"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "width", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "half_h", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "half_w", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "center", "type": "Tuple[Any, Any]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "scaled_dims", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "box", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "full_h", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "full_w", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "scale_h", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "scale_w", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "pad_y", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "pad_x", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "box", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "clip_h", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "clip_w", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "crop_h", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "crop_w", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "context_crop", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "context_crop", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "crop", "type": "Any"}, {"lineNumber": 168, "col_offset": 67, "nodeName": "context_crop", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "Detector"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "self", "type": "Detector"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "input_scale", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "channel_order", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "crop_mean", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "crop_mean", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "channel_order_inverse", "type": "List[Any]"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "crop_mean", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "crop_mean", "type": "Any"}, {"lineNumber": 191, "col_offset": 30, "nodeName": "input_scale", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "Net", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Detector"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "set_mode_gpu", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "set_mode_cpu", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "set_mean", "type": "Any"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "mean_file", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "set_input_scale", "type": "Any"}, {"lineNumber": 48, "col_offset": 49, "nodeName": "input_scale", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "set_channel_swap", "type": "Any"}, {"lineNumber": 50, "col_offset": 50, "nodeName": "channel_swap", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "Detector"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 71, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "self", "type": "Detector"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "ix", "type": "int"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 109, "col_offset": 40, "nodeName": "f", "type": "Any"}, {"lineNumber": 109, "col_offset": 47, "nodeName": "f", "type": "Any"}, {"lineNumber": 109, "col_offset": 52, "nodeName": "image_fnames", "type": "Any"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "selective_search", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "self", "type": "Detector"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 115, "col_offset": 39, "nodeName": "image_fnames", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 53, "nodeName": "windows_list", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "crop_size", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "round", "type": "Any"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "crop_size", "type": "Any"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "full_h", "type": "Any"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "crop_size", "type": "Any"}, {"lineNumber": 146, "col_offset": 34, "nodeName": "full_w", "type": "Any"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "round", "type": "Callable"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "round", "type": "Callable"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "im_h", "type": "Any"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "im_w", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "clip", "type": "Any"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "box", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "round", "type": "Callable"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "round", "type": "Callable"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "crop_size", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "crop_h", "type": "Any"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "crop_size", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "crop_w", "type": "Any"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "im", "type": "Any"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "resize_image", "type": "Any"}, {"lineNumber": 166, "col_offset": 49, "nodeName": "context_crop", "type": "Any"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "copy", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "crop", "type": "Any"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "get", "type": "Any"}, {"lineNumber": 184, "col_offset": 28, "nodeName": "get", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "self", "type": "Detector"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "copy", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "self", "type": "Detector"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "self", "type": "Detector"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "crop_mean", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "self", "type": "Detector"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "Detector"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "Detector"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "Detector"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "self", "type": "Detector"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "Detector"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 71, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "window_in", "type": "Any"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "window_inputs", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 50, "nodeName": "caffe_in", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "window", "type": "Any"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "half_h", "type": "Any"}, {"lineNumber": 140, "col_offset": 48, "nodeName": "half_w", "type": "Any"}, {"lineNumber": 141, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 48, "nodeName": "scaled_dims", "type": "Any"}, {"lineNumber": 147, "col_offset": 44, "nodeName": "scale_h", "type": "Any"}, {"lineNumber": 148, "col_offset": 44, "nodeName": "scale_w", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "im", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 36, "nodeName": "im_h", "type": "Any"}, {"lineNumber": 152, "col_offset": 42, "nodeName": "im_w", "type": "Any"}, {"lineNumber": 152, "col_offset": 48, "nodeName": "im_h", "type": "Any"}, {"lineNumber": 152, "col_offset": 54, "nodeName": "im_w", "type": "Any"}, {"lineNumber": 155, "col_offset": 19, "nodeName": "clip_h", "type": "Any"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "clip_w", "type": "Any"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "clip_h", "type": "Any"}, {"lineNumber": 156, "col_offset": 36, "nodeName": "scale_h", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "clip_w", "type": "Any"}, {"lineNumber": 157, "col_offset": 36, "nodeName": "scale_w", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "pad_y", "type": "Any"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "crop_h", "type": "Any"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "crop_size", "type": "Any"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "pad_y", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "pad_x", "type": "Any"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "crop_w", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "crop_size", "type": "Any"}, {"lineNumber": 161, "col_offset": 37, "nodeName": "pad_x", "type": "Any"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "io", "type": "Any"}, {"lineNumber": 166, "col_offset": 64, "nodeName": "crop_h", "type": "Any"}, {"lineNumber": 166, "col_offset": 72, "nodeName": "crop_w", "type": "Any"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "crop_mean", "type": "Any"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "input_scale", "type": "Any"}, {"lineNumber": 183, "col_offset": 47, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 184, "col_offset": 28, "nodeName": "channel_swap", "type": "Any"}, {"lineNumber": 184, "col_offset": 50, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "crop_mean", "type": "Any"}, {"lineNumber": 189, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "self", "type": "Detector"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "self", "type": "Detector"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "self", "type": "Detector"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "self", "type": "Detector"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "load_image", "type": "Any"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "image_fname", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "window_inputs", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "crop", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 47, "nodeName": "image", "type": "Any"}, {"lineNumber": 73, "col_offset": 54, "nodeName": "window", "type": "Any"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "detections", "type": "List[Dict[str, Any]]"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "window", "type": "Any"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "image_fname", "type": "Any"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "window", "type": "Any"}, {"lineNumber": 131, "col_offset": 28, "nodeName": "window", "type": "Any"}, {"lineNumber": 131, "col_offset": 39, "nodeName": "window", "type": "Any"}, {"lineNumber": 131, "col_offset": 49, "nodeName": "window", "type": "Any"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "self", "type": "Detector"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "crop_size", "type": "Any"}, {"lineNumber": 136, "col_offset": 50, "nodeName": "context_pad", "type": "Any"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "box", "type": "Any"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "box", "type": "Any"}, {"lineNumber": 141, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 62, "nodeName": "half_h", "type": "Any"}, {"lineNumber": 141, "col_offset": 70, "nodeName": "half_w", "type": "Any"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "tile", "type": "Any"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "center", "type": "Tuple[Any, Any]"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "box", "type": "Any"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "box", "type": "Any"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "box", "type": "Any"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "box", "type": "Any"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "max", "type": "Callable"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "max", "type": "Callable"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "box", "type": "Any"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "box", "type": "Any"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "box", "type": "Any"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "box", "type": "Any"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "self", "type": "Detector"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "pad_y", "type": "Any"}, {"lineNumber": 168, "col_offset": 41, "nodeName": "pad_x", "type": "Any"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "self", "type": "Detector"}, {"lineNumber": 183, "col_offset": 47, "nodeName": "self", "type": "Detector"}, {"lineNumber": 184, "col_offset": 28, "nodeName": "self", "type": "Detector"}, {"lineNumber": 184, "col_offset": 50, "nodeName": "self", "type": "Detector"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "mean", "type": "Any"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "self", "type": "Detector"}, {"lineNumber": 189, "col_offset": 46, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 190, "col_offset": 49, "nodeName": "channel_order_inverse", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "io", "type": "Any"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "self", "type": "Detector"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "self", "type": "Detector"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 136, "col_offset": 50, "nodeName": "self", "type": "Detector"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "box", "type": "Any"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "box", "type": "Any"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "box", "type": "Any"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "box", "type": "Any"}, {"lineNumber": 141, "col_offset": 45, "nodeName": "half_h", "type": "Any"}, {"lineNumber": 141, "col_offset": 54, "nodeName": "half_w", "type": "Any"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 30, "nodeName": "box", "type": "Any"}, {"lineNumber": 165, "col_offset": 37, "nodeName": "box", "type": "Any"}, {"lineNumber": 165, "col_offset": 45, "nodeName": "box", "type": "Any"}, {"lineNumber": 165, "col_offset": 52, "nodeName": "box", "type": "Any"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "pad_y", "type": "Any"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "crop_h", "type": "Any"}, {"lineNumber": 168, "col_offset": 48, "nodeName": "pad_x", "type": "Any"}, {"lineNumber": 168, "col_offset": 56, "nodeName": "crop_w", "type": "Any"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "self", "type": "Detector"}, {"lineNumber": 189, "col_offset": 52, "nodeName": "shape", "type": "Any"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "caffe", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "self", "type": "Detector"}, {"lineNumber": 88, "col_offset": 46, "nodeName": "ix", "type": "int"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "self", "type": "Detector"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "box", "type": "Any"}, {"lineNumber": 148, "col_offset": 34, "nodeName": "box", "type": "Any"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 189, "col_offset": 52, "nodeName": "crop_mean", "type": "Any"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "self", "type": "Detector"}, {"lineNumber": 189, "col_offset": 52, "nodeName": "self", "type": "Detector"}]