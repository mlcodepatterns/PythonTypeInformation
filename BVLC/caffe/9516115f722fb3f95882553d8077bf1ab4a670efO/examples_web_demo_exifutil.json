[{"lineNumber": 19, "col_offset": 0, "nodeName": "open_oriented_im", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "apply_orientation", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "ORIENTATIONS", "type": "Dict[int, Union[Tuple[Any], Tuple[Any, Any]]]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "im", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "im", "type": "Any"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "FLIP_LEFT_RIGHT", "type": "Any"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "ROTATE_180", "type": "Any"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "FLIP_TOP_BOTTOM", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "FLIP_LEFT_RIGHT", "type": "Any"}, {"lineNumber": 12, "col_offset": 31, "nodeName": "ROTATE_90", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "ROTATE_270", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "FLIP_LEFT_RIGHT", "type": "Any"}, {"lineNumber": 14, "col_offset": 31, "nodeName": "ROTATE_270", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "ROTATE_90", "type": "Any"}, {"lineNumber": 20, "col_offset": 9, "nodeName": "open", "type": "Any"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "im_path", "type": "Any"}, {"lineNumber": 21, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "im", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "exif", "type": "Any"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "orientation", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "ORIENTATIONS", "type": "Dict[int, Union[Tuple[Any], Tuple[Any, Any]]]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "method", "type": "Any"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "Image", "type": "Any"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "Image", "type": "Any"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "Image", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "Image", "type": "Any"}, {"lineNumber": 12, "col_offset": 31, "nodeName": "Image", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "Image", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "Image", "type": "Any"}, {"lineNumber": 14, "col_offset": 31, "nodeName": "Image", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "Image", "type": "Any"}, {"lineNumber": 20, "col_offset": 9, "nodeName": "Image", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "_getexif", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "orientation", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "im", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "astype", "type": "Any"}, {"lineNumber": 26, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "ORIENTATIONS", "type": "Dict[int, Union[Tuple[Any], Tuple[Any, Any]]]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "im", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "im", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "exif", "type": "Any"}, {"lineNumber": 23, "col_offset": 39, "nodeName": "exif", "type": "Any"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "exif", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "apply_orientation", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "im", "type": "Any"}, {"lineNumber": 25, "col_offset": 39, "nodeName": "orientation", "type": "Any"}, {"lineNumber": 26, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "orientation", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 32, "col_offset": 30, "nodeName": "method", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "im", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "im", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "np", "type": "module"}]