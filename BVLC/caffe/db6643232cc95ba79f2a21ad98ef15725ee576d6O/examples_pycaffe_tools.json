[{"lineNumber": 11, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "set_mean", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "set_scale", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "preprocess", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "deprocess", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "add_from_file", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "write", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "mean", "type": "numpy.ndarray"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "scale", "type": "float"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "mean", "type": "Any"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "mean", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "im", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "im", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "im", "type": "Any"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "mean", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "im", "type": "Any"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "scale", "type": "float"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "im", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "im", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "im", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "im", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "scale", "type": "float"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "im", "type": "Any"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "mean", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "im", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "debug", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "f", "type": "file"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "SimpleTransformer"}, {"lineNumber": 12, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 12, "col_offset": 29, "nodeName": "mean", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "SimpleTransformer"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "SimpleTransformer"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "SimpleTransformer"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "float32", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "im", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "im", "type": "Any"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "self", "type": "SimpleTransformer"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "self", "type": "SimpleTransformer"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "self", "type": "SimpleTransformer"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "self", "type": "SimpleTransformer"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "im", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "im", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 106, "col_offset": 36, "nodeName": "f", "type": "file"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "f", "type": "file"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "filepath", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "value", "type": "Any"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 12, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 12, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "im", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "im", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "trainnet_prototxt_path", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "testnet_prototxt_path", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "filepath", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "splitLine", "type": "List[str]"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "items", "type": "Callable"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 12, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 48, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "sp", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "f", "type": "file"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "line", "type": "str"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "line", "type": "str"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "self", "type": "CaffeSolver"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "key", "type": "str"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "value", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 111, "col_offset": 48, "nodeName": "splitLine", "type": "List[str]"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "splitLine", "type": "List[str]"}]