[{"lineNumber": 27, "col_offset": 26, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "test_integration", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "test_optimization", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "test_future_values", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 3, "nodeName": "major", "type": "int"}, {"lineNumber": 23, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 179, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "cvxpy", "type": "None"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "q", "type": "numpy.ndarray"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "r", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "true_value", "type": "safe_learning.functions.QuadraticFunction"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "discretization", "type": "safe_learning.functions.GridWorld"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "dynamics", "type": "safe_learning.functions.LinearSystem"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "policy_discretization", "type": "safe_learning.functions.GridWorld"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "reward_function", "type": "safe_learning.functions.QuadraticFunction"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "value_iter", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "dynamics", "type": "mock.Mock"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "rewards", "type": "mock.Mock"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "value_function", "type": "mock.Mock"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "return_value", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 63, "nodeName": "trans_probs", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "nindex", "type": "int"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "states", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "all_points", "type": "Any"}, {"lineNumber": 105, "col_offset": 51, "nodeName": "states", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "policy", "type": "mock.Mock"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "dynamics", "type": "mock.Mock"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "rewards", "type": "mock.Mock"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "value_function", "type": "mock.Mock"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "policy", "type": "mock.Mock"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "true_values", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "future_values", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 16, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "dlqr", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "q", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "r", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "QuadraticFunction", "type": "Type[safe_learning.functions.QuadraticFunction]"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "GridWorld", "type": "Type[safe_learning.functions.GridWorld]"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "Triangulation", "type": "Type[safe_learning.functions.Triangulation]"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "discretization", "type": "safe_learning.functions.GridWorld"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "LinearSystem", "type": "Type[safe_learning.functions.LinearSystem]"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 45, "col_offset": 35, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "GridWorld", "type": "Type[safe_learning.functions.GridWorld]"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "Triangulation", "type": "Type[safe_learning.functions.Triangulation]"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "policy_discretization", "type": "safe_learning.functions.GridWorld"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "QuadraticFunction", "type": "Type[safe_learning.functions.QuadraticFunction]"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "PolicyIteration", "type": "Type[safe_learning.reinforcement_learning.PolicyIteration]"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "policy", "type": "safe_learning.functions.Triangulation"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "dynamics", "type": "safe_learning.functions.LinearSystem"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "reward_function", "type": "safe_learning.functions.QuadraticFunction"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "value_function", "type": "safe_learning.functions.Triangulation"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "value_iteration", "type": "Any"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "sess", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "values", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "true_values", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "policy_values", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "values", "type": "Any"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "true_values", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "policy_values", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "dynamics", "type": "mock.Mock"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "rewards", "type": "mock.Mock"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "arange", "type": "Any"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "parameter_derivative", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "value_function", "type": "mock.Mock"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "discretizaiton", "type": "Any"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "policy", "type": "mock.Mock"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "PolicyIteration", "type": "Type[safe_learning.reinforcement_learning.PolicyIteration]"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "policy", "type": "mock.Mock"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "dynamics", "type": "mock.Mock"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "rewards", "type": "mock.Mock"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "value_function", "type": "mock.Mock"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "sess", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "state_space", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "state_space", "type": "Any"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "dynamics", "type": "mock.Mock"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "rewards", "type": "mock.Mock"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "value_function", "type": "mock.Mock"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "policy", "type": "mock.Mock"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "PolicyIteration", "type": "Type[safe_learning.reinforcement_learning.PolicyIteration]"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "policy", "type": "mock.Mock"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "dynamics", "type": "mock.Mock"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "rewards", "type": "mock.Mock"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "value_function", "type": "mock.Mock"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "future_values", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "future_values", "type": "Any"}, {"lineNumber": 170, "col_offset": 39, "nodeName": "true_values", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 42, "col_offset": 44, "nodeName": "all_points", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "all_points", "type": "Any"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "Session", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "_", "type": "int"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "all_points", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "arange", "type": "Any"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "mock", "type": "module"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 50, "nodeName": "float", "type": "Any"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 37, "nodeName": "float", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "mock", "type": "module"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "tri", "type": "Any"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 101, "col_offset": 48, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "value_function", "type": "mock.Mock"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "mock", "type": "module"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "solve", "type": "Any"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "Session", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 122, "col_offset": 65, "nodeName": "true_values", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "dynamics", "type": "mock.Mock"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "rewards", "type": "mock.Mock"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "mock", "type": "module"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "arange", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "mock", "type": "module"}, {"lineNumber": 152, "col_offset": 38, "nodeName": "arange", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "mock", "type": "module"}, {"lineNumber": 164, "col_offset": 67, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "dynamics", "type": "mock.Mock"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "rewards", "type": "mock.Mock"}, {"lineNumber": 42, "col_offset": 44, "nodeName": "discretization", "type": "safe_learning.functions.GridWorld"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "policy_discretization", "type": "safe_learning.functions.GridWorld"}, {"lineNumber": 50, "col_offset": 45, "nodeName": "block_diag", "type": "Any"}, {"lineNumber": 50, "col_offset": 69, "nodeName": "q", "type": "numpy.ndarray"}, {"lineNumber": 50, "col_offset": 72, "nodeName": "r", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "GradientDescentOptimizer", "type": "Any"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "run", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "value_iter", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 76, "col_offset": 40, "nodeName": "k", "type": "Any"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "policy_discretization", "type": "safe_learning.functions.GridWorld"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 51, "nodeName": "float", "type": "Any"}, {"lineNumber": 89, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "value_function", "type": "mock.Mock"}, {"lineNumber": 101, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 63, "nodeName": "float", "type": "Any"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 36, "nodeName": "float", "type": "Any"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "rewards", "type": "mock.Mock"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "optimize_value_function", "type": "Any"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 50, "nodeName": "float", "type": "Any"}, {"lineNumber": 152, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 57, "nodeName": "float", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "float", "type": "Any"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "arange", "type": "Any"}, {"lineNumber": 164, "col_offset": 67, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "k", "type": "Any"}, {"lineNumber": 50, "col_offset": 45, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "train", "type": "Any"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "future_values", "type": "Any"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "state_space", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "policy", "type": "Any"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "sess", "type": "Any"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "run", "type": "Any"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "adapt_policy", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "value_function", "type": "Any"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "true_value", "type": "safe_learning.functions.QuadraticFunction"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "state_space", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "policy", "type": "Any"}, {"lineNumber": 86, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "eye", "type": "Any"}, {"lineNumber": 115, "col_offset": 50, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 115, "col_offset": 61, "nodeName": "trans_probs", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 149, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "float", "type": "Any"}, {"lineNumber": 50, "col_offset": 45, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "sess", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 50, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "value_function", "type": "Any"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}]