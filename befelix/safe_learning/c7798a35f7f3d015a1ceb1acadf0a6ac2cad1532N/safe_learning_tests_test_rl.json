[{"lineNumber": 24, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "integration_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "test_optimization", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "test_future_values", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "test_policy_update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 13, "col_offset": 3, "nodeName": "major", "type": "int"}, {"lineNumber": 20, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "constraint", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 13, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "cvxpy", "type": "None"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "q", "type": "numpy.ndarray"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "r", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "value_function", "type": "safe_learning.functions.Triangulation"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "u_max", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "optimal_policy", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "max_error", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "disc_error", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "dynamics", "type": "mock.Mock"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "rewards", "type": "mock.Mock"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "value_function", "type": "mock.Mock"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "states", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "actions", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "future_values", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "true_values", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "dynamics", "type": "mock.Mock"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "rewards", "type": "mock.Mock"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "value_function", "type": "mock.Mock"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "states", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "actions", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 13, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "dlqr", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "q", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "r", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "Triangulation", "type": "Type[safe_learning.functions.Triangulation]"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "PolicyIteration", "type": "Type[safe_learning.reinforcement_learning.PolicyIteration]"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "all_points", "type": "Any"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "dynamics", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "reward_function", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "value_function", "type": "safe_learning.functions.Triangulation"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "max", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "max", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "max_error", "type": "Any"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "disc_error", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "values", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "dynamics", "type": "mock.Mock"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "rewards", "type": "mock.Mock"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "arange", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "value_function", "type": "mock.Mock"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "arange", "type": "Any"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "PolicyIteration", "type": "Type[safe_learning.reinforcement_learning.PolicyIteration]"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "states", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "actions", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "dynamics", "type": "mock.Mock"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "rewards", "type": "mock.Mock"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "value_function", "type": "mock.Mock"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "get_future_values", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "policy", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "state_space", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 52, "nodeName": "policy", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "state_space", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 51, "nodeName": "policy", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "future_values", "type": "Any"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "true_values", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "PolicyIteration", "type": "Type[safe_learning.reinforcement_learning.PolicyIteration]"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "states", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "actions", "type": "Any"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "dynamics", "type": "mock.Mock"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "rewards", "type": "mock.Mock"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "value_function", "type": "mock.Mock"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "future_value_mock", "type": "Any"}, {"lineNumber": 117, "col_offset": 41, "nodeName": "arange", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "update_policy", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "policy", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "update_policy", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "policy", "type": "Any"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "T", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "sum", "type": "Any"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "value_function", "type": "safe_learning.functions.Triangulation"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "update_value_function", "type": "Callable[[], None]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "update_policy", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "dot", "type": "Any"}, {"lineNumber": 55, "col_offset": 45, "nodeName": "T", "type": "Any"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "abs", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "diff", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "vertex_values", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "mock", "type": "module"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "float", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "mock", "type": "module"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 57, "nodeName": "float", "type": "Any"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "arange", "type": "Any"}, {"lineNumber": 88, "col_offset": 58, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "dynamics", "type": "mock.Mock"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 90, "col_offset": 52, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "rewards", "type": "mock.Mock"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 91, "col_offset": 51, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "mock", "type": "module"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "mock", "type": "module"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 117, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 60, "nodeName": "float", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "constraint", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "dot", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "T", "type": "numpy.ndarray"}, {"lineNumber": 35, "col_offset": 32, "nodeName": "dot", "type": "Any"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "T", "type": "numpy.ndarray"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "abs", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "k", "type": "Any"}, {"lineNumber": 42, "col_offset": 58, "nodeName": "sum", "type": "Any"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 46, "col_offset": 49, "nodeName": "u_max", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "state_space", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 45, "nodeName": "k", "type": "Any"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "policy", "type": "Any"}, {"lineNumber": 57, "col_offset": 46, "nodeName": "optimal_policy", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "action_space", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "value_function", "type": "safe_learning.functions.Triangulation"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 41, "nodeName": "float", "type": "Any"}, {"lineNumber": 88, "col_offset": 58, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "base", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "ones", "type": "Any"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 35, "col_offset": 32, "nodeName": "u", "type": "Any"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "sum", "type": "Any"}, {"lineNumber": 42, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "u_max", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "rl", "type": "safe_learning.reinforcement_learning.PolicyIteration"}, {"lineNumber": 88, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "action", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 52, "nodeName": "bool", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 40, "nodeName": "bool", "type": "Any"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 66, "nodeName": "float", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "a", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "diag", "type": "Any"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "r", "type": "numpy.ndarray"}, {"lineNumber": 124, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "diag", "type": "Any"}, {"lineNumber": 42, "col_offset": 44, "nodeName": "q", "type": "numpy.ndarray"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "np", "type": "module"}]