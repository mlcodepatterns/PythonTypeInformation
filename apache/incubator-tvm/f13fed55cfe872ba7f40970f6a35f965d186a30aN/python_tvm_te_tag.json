[{"lineNumber": 61, "col_offset": 0, "nodeName": "tag_scope", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "get_current", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "__enter__", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "__exit__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "_current", "type": "None"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "_current", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "_current", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "_old_scope", "type": "None"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "tag", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "tag", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "accessed", "type": "bool"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "_old_scope", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "_current", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "_current", "type": "TagScope"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "self", "type": "TagScope"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "self", "type": "TagScope"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "_current", "type": "Any"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "_old_scope", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "TagScope", "type": "Type[TagScope]"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "tag", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "cls", "type": "Type[TagScope]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "accessed", "type": "bool"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "cls", "type": "Type[TagScope]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TagScope"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TagScope"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TagScope"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "_current", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TagScope"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "TagScope", "type": "Type[TagScope]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "TagScope", "type": "Type[TagScope]"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "_old_scope", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "accessed", "type": "bool"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "TagScope", "type": "Type[TagScope]"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "self", "type": "TagScope"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "decorate", "type": "Any"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "fdecl", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "tagged_fdecl", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "_current", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "TagScope", "type": "Type[TagScope]"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "self", "type": "TagScope"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "self", "type": "TagScope"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "self", "type": "TagScope"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "cls", "type": "Type[TagScope]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "func", "type": "Any"}, {"lineNumber": 50, "col_offset": 76, "nodeName": "tag", "type": "Any"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 76, "nodeName": "self", "type": "TagScope"}]