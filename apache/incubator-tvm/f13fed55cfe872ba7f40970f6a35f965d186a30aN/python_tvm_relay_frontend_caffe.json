[{"lineNumber": 704, "col_offset": 0, "nodeName": "_rebuild_layers", "type": "Callable[[Any], Any]"}, {"lineNumber": 735, "col_offset": 0, "nodeName": "_get_inputs_outputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 758, "col_offset": 0, "nodeName": "from_caffe", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "convert_flatten", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "convert_eltwise", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "_parse_conv_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "convert_batch_norm", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "convert_scale", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "convert_concat", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "convert_reshape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "convert_softmax", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "convert_conv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "convert_pooling", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "convert_lrn", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 418, "col_offset": 4, "nodeName": "convert_innerproduct", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "convert_dropout", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "convert_relu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "convert_prelu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "convert_deconv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "convert_slice", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "convert_sigmoid", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "convert_tanh", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "convert_crop", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "check_unsupported_ops", "type": "Callable[[Any], Any]"}, {"lineNumber": 617, "col_offset": 4, "nodeName": "fuse_op", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 643, "col_offset": 4, "nodeName": "op_fuse", "type": "Callable[[Any], Any]"}, {"lineNumber": 687, "col_offset": 4, "nodeName": "convert_op_to_relay", "type": "Callable[[Any], Any]"}, {"lineNumber": 709, "col_offset": 4, "nodeName": "changed_top_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "pl", "type": "Any"}, {"lineNumber": 711, "col_offset": 14, "nodeName": "predict_layer", "type": "Any"}, {"lineNumber": 738, "col_offset": 4, "nodeName": "model_inputs", "type": "List[Any]"}, {"lineNumber": 739, "col_offset": 4, "nodeName": "model_outputs", "type": "List[Any]"}, {"lineNumber": 742, "col_offset": 4, "nodeName": "not_outputs", "type": "Set[Any]"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "pl", "type": "Any"}, {"lineNumber": 743, "col_offset": 14, "nodeName": "predict_layer", "type": "Any"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "pl", "type": "Any"}, {"lineNumber": 750, "col_offset": 14, "nodeName": "predict_layer", "type": "Any"}, {"lineNumber": 780, "col_offset": 4, "nodeName": "old_caffe", "type": "bool"}, {"lineNumber": 785, "col_offset": 4, "nodeName": "predict_layer", "type": "Any"}, {"lineNumber": 785, "col_offset": 20, "nodeName": "layer", "type": "Any"}, {"lineNumber": 790, "col_offset": 7, "nodeName": "old_caffe", "type": "bool"}, {"lineNumber": 795, "col_offset": 4, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "in_name", "type": "Any"}, {"lineNumber": 796, "col_offset": 19, "nodeName": "model_inputs", "type": "List[Any]"}, {"lineNumber": 804, "col_offset": 4, "nodeName": "init_layer_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 806, "col_offset": 4, "nodeName": "op_converter", "type": "OperatorConverter"}, {"lineNumber": 812, "col_offset": 4, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 814, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 814, "col_offset": 13, "nodeName": "model_outputs", "type": "List[Any]"}, {"lineNumber": 818, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 819, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 820, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "init_layer_dict", "type": "Any"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "init_layer_dict", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "predict_layer", "type": "Any"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "predict_layer", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "new_bn", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "changed_layers", "type": "None"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "flatten_params", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "axis", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "lhs_expr", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "rhs_expr", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "lhs_shape", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "rhs_shape", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "eltwise_params", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "eltwise_param", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "eltwise_type_dict", "type": "List[str]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "eltwise_type", "type": "Any"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "operation", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "coeff", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "nonzone", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "convolution_param", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], Tuple[Union[Any, int], Union[Any, int]], Tuple[int, ...], Tuple[int, int], str, Any]]"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "group", "type": "Any"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "num_output", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], Tuple[Union[Any, int], Union[Any, int]], Tuple[int, ...], Tuple[int, int], str, Any]]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "bias_term", "type": "Any"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "axis", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "gamma", "type": "numpy.ndarray"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "gamma_expr", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "gamma_expr", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "beta_expr", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 247, "col_offset": 17, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "in_expr", "type": "Generator[Any, Any, None]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "c_params", "type": "Dict[str, Any]"}, {"lineNumber": 251, "col_offset": 27, "nodeName": "axis", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 258, "col_offset": 17, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "reshape_param", "type": "Any"}, {"lineNumber": 261, "col_offset": 24, "nodeName": "reshape_param", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "dims", "type": "List[Any]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "input_shape", "type": "List[Any]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "start_axis", "type": "int"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "num_axes", "type": "int"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "end_axis", "type": "int"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "left_shape", "type": "List[Any]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "center_shape", "type": "List[Any]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "newshape", "type": "List[Any]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 298, "col_offset": 17, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "softmax_param", "type": "Any"}, {"lineNumber": 304, "col_offset": 24, "nodeName": "softmax_param", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "parmas", "type": "Dict[str, Any]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], Tuple[Union[Any, int], Union[Any, int]], Tuple[int, ...], Tuple[int, int], str, Any]]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 314, "col_offset": 28, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 315, "col_offset": 22, "nodeName": "convolution_param", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 316, "col_offset": 17, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 324, "col_offset": 11, "nodeName": "weight", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "weight_expr", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 335, "col_offset": 11, "nodeName": "bias", "type": "Any"}, {"lineNumber": 339, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 343, "col_offset": 17, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 346, "col_offset": 22, "nodeName": "pooling_param", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "pool_type_dict", "type": "List[str]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], bool, Any]]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "pool_type", "type": "Any"}, {"lineNumber": 351, "col_offset": 20, "nodeName": "pool", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 400, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 404, "col_offset": 17, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "lrn_params", "type": "Any"}, {"lineNumber": 408, "col_offset": 21, "nodeName": "lrn_param", "type": "Any"}, {"lineNumber": 409, "col_offset": 25, "nodeName": "local_size", "type": "Any"}, {"lineNumber": 410, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 411, "col_offset": 26, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 412, "col_offset": 25, "nodeName": "beta", "type": "Any"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 416, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 420, "col_offset": 17, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 421, "col_offset": 28, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "dense_params", "type": "Any"}, {"lineNumber": 422, "col_offset": 23, "nodeName": "inner_product_param", "type": "Any"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 425, "col_offset": 31, "nodeName": "num_output", "type": "Any"}, {"lineNumber": 426, "col_offset": 25, "nodeName": "bias_term", "type": "Any"}, {"lineNumber": 427, "col_offset": 25, "nodeName": "axis", "type": "Any"}, {"lineNumber": 439, "col_offset": 11, "nodeName": "weight", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "weight_expr", "type": "Any"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "in_reshape", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 453, "col_offset": 11, "nodeName": "bias", "type": "Any"}, {"lineNumber": 457, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 461, "col_offset": 17, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "dropout_params", "type": "Any"}, {"lineNumber": 465, "col_offset": 25, "nodeName": "dropout_param", "type": "Any"}, {"lineNumber": 467, "col_offset": 25, "nodeName": "dropout_ratio", "type": "Any"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 471, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 475, "col_offset": 17, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "negative_slope", "type": "Any"}, {"lineNumber": 477, "col_offset": 25, "nodeName": "negative_slope", "type": "Any"}, {"lineNumber": 478, "col_offset": 11, "nodeName": "negative_slope", "type": "Any"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 487, "col_offset": 17, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 490, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "axis", "type": "int"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 495, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], Tuple[Union[Any, int], Union[Any, int]], Tuple[int, ...], Tuple[int, int], str, Any]]"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 500, "col_offset": 28, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 501, "col_offset": 22, "nodeName": "convolution_param", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 502, "col_offset": 17, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 511, "col_offset": 11, "nodeName": "weight", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "weight_expr", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 522, "col_offset": 11, "nodeName": "bias", "type": "Any"}, {"lineNumber": 527, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 531, "col_offset": 17, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "output_num", "type": "int"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "slice_params", "type": "Any"}, {"lineNumber": 536, "col_offset": 23, "nodeName": "slice_param", "type": "Any"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "axis", "type": "int"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "indices_or_sections", "type": "List[int]"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 549, "col_offset": 17, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 552, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 556, "col_offset": 17, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 559, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 563, "col_offset": 17, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "in_expr_a", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "in_expr_b", "type": "Any"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "crop_params", "type": "Any"}, {"lineNumber": 569, "col_offset": 22, "nodeName": "crop_param", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "axis", "type": "int"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "offset", "type": "List[Any]"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "in_a_shape", "type": "Any"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "num_to_crop", "type": "int"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "slice_end", "type": "Any"}, {"lineNumber": 583, "col_offset": 20, "nodeName": "in_a_shape", "type": "Any"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "slice_start", "type": "List[Any]"}, {"lineNumber": 585, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "to_crop_axis", "type": "List[int]"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "to_crop_axis", "type": "List[int]"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "in_expr_a_stride", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 594, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "unsupported_ops_set", "type": "Set[Any]"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "include_layer", "type": "Dict[Any, int]"}, {"lineNumber": 601, "col_offset": 12, "nodeName": "pl", "type": "Any"}, {"lineNumber": 601, "col_offset": 18, "nodeName": "predict_layer", "type": "Any"}, {"lineNumber": 607, "col_offset": 12, "nodeName": "pl", "type": "Any"}, {"lineNumber": 607, "col_offset": 18, "nodeName": "predict_layer", "type": "Any"}, {"lineNumber": 612, "col_offset": 11, "nodeName": "unsupported_ops_set", "type": "Set[Any]"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "bn_weight_bias_blobs", "type": "Any"}, {"lineNumber": 622, "col_offset": 31, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "bn_scale", "type": "numpy.ndarray"}, {"lineNumber": 624, "col_offset": 11, "nodeName": "bn_scale", "type": "numpy.ndarray"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "bn_mean", "type": "Any"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "bn_var", "type": "Any"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "bn_eps", "type": "Any"}, {"lineNumber": 628, "col_offset": 17, "nodeName": "eps", "type": "Any"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "scale_weight_bias_blobs", "type": "Any"}, {"lineNumber": 631, "col_offset": 34, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "scale_gamma", "type": "numpy.ndarray"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "scale_bias", "type": "Any"}, {"lineNumber": 633, "col_offset": 21, "nodeName": "bias_term", "type": "Any"}, {"lineNumber": 634, "col_offset": 11, "nodeName": "scale_bias", "type": "Any"}, {"lineNumber": 641, "col_offset": 15, "nodeName": "bn", "type": "Any"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "new_layers", "type": "List[Any]"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "temp_layers", "type": "Dict[str, Any]"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "changed_layers", "type": "Dict[Any, Any]"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "predict_layer", "type": "List[Any]"}, {"lineNumber": 684, "col_offset": 29, "nodeName": "new_layers", "type": "List[Any]"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "changed_layers", "type": "Dict[Any, Any]"}, {"lineNumber": 685, "col_offset": 30, "nodeName": "changed_layers", "type": "Dict[Any, Any]"}, {"lineNumber": 689, "col_offset": 12, "nodeName": "pl", "type": "Any"}, {"lineNumber": 689, "col_offset": 18, "nodeName": "predict_layer", "type": "Any"}, {"lineNumber": 709, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 738, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 739, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 742, "col_offset": 18, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 747, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 747, "col_offset": 17, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 755, "col_offset": 11, "nodeName": "model_inputs", "type": "List[Any]"}, {"lineNumber": 755, "col_offset": 25, "nodeName": "model_outputs", "type": "List[Any]"}, {"lineNumber": 782, "col_offset": 8, "nodeName": "old_caffe", "type": "bool"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "model_inputs", "type": "List[Any]"}, {"lineNumber": 785, "col_offset": 20, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 788, "col_offset": 4, "nodeName": "_rebuild_layers", "type": "Callable[[Any], Any]"}, {"lineNumber": 788, "col_offset": 20, "nodeName": "predict_layer", "type": "Any"}, {"lineNumber": 795, "col_offset": 14, "nodeName": "ExprTable", "type": "Any"}, {"lineNumber": 797, "col_offset": 8, "nodeName": "shape", "type": "Optional[Any]"}, {"lineNumber": 798, "col_offset": 8, "nodeName": "dtype", "type": "Union[Any, str]"}, {"lineNumber": 800, "col_offset": 7, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 800, "col_offset": 12, "nodeName": "layer", "type": "Any"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "init_layer", "type": "Any"}, {"lineNumber": 801, "col_offset": 21, "nodeName": "layer", "type": "Any"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "init_layer", "type": "Any"}, {"lineNumber": 803, "col_offset": 21, "nodeName": "layers", "type": "Any"}, {"lineNumber": 804, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 804, "col_offset": 32, "nodeName": "il", "type": "Any"}, {"lineNumber": 806, "col_offset": 19, "nodeName": "OperatorConverter", "type": "Type[OperatorConverter]"}, {"lineNumber": 806, "col_offset": 37, "nodeName": "init_layer_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 806, "col_offset": 54, "nodeName": "predict_layer", "type": "Any"}, {"lineNumber": 806, "col_offset": 69, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 807, "col_offset": 4, "nodeName": "check_unsupported_ops", "type": "Callable[[], Any]"}, {"lineNumber": 808, "col_offset": 4, "nodeName": "op_fuse", "type": "Callable[[], Any]"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "convert_op_to_relay", "type": "Callable[[], Any]"}, {"lineNumber": 812, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 813, "col_offset": 14, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 819, "col_offset": 11, "nodeName": "Function", "type": "Any"}, {"lineNumber": 819, "col_offset": 59, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 820, "col_offset": 10, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 820, "col_offset": 29, "nodeName": "func", "type": "Any"}, {"lineNumber": 822, "col_offset": 11, "nodeName": "mod", "type": "Any"}, {"lineNumber": 822, "col_offset": 16, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "convert_batch_norm", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "convert_concat", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "convert_conv", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "convert_crop", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "convert_deconv", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "convert_dropout", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "convert_eltwise", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "convert_flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "convert_innerproduct", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "convert_lrn", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "convert_pooling", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "convert_prelu", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "convert_relu", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "convert_reshape", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "convert_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "convert_sigmoid", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "convert_slice", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "convert_softmax", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "convert_tanh", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "flatten_param", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "flatten_params", "type": "Any"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "batch_flatten", "type": "Any"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "_infer_shape", "type": "Any"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "lhs_expr", "type": "Any"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "_infer_shape", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "rhs_expr", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "lhs_shape", "type": "Any"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "rhs_shape", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "op", "type": "Any"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "eltwise_params", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "coeff", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "op", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "ksize_h", "type": "Union[Any, int]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "ksize_w", "type": "Union[Any, int]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "pad_h", "type": "Union[Any, int]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "pad_w", "type": "Union[Any, int]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "stride_h", "type": "Union[Any, int]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "stride_w", "type": "Union[Any, int]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "dilation", "type": "str"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "dilation", "type": "Tuple[int, ...]"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "dilation", "type": "Tuple[int, ...]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], Tuple[Union[Any, int], Union[Any, int]], Tuple[int, ...], Tuple[int, int], str, Any]]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], Tuple[Union[Any, int], Union[Any, int]], Tuple[int, ...], Tuple[int, int], str, Any]]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], Tuple[Union[Any, int], Union[Any, int]], Tuple[int, ...], Tuple[int, int], str, Any]]"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], Tuple[Union[Any, int], Union[Any, int]], Tuple[int, ...], Tuple[int, int], str, Any]]"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "c", "type": "Any"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "h", "type": "Any"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "w", "type": "Any"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "_infer_shape", "type": "Any"}, {"lineNumber": 166, "col_offset": 34, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "new_bn", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "mean_expr", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "var_expr", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "gamma_expr", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "beta_expr", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 179, "col_offset": 32, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "mean", "type": "numpy.ndarray"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "var", "type": "numpy.ndarray"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "mean_expr", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "var_expr", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "bn_params", "type": "Any"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "eps", "type": "Any"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 220, "col_offset": 18, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 223, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "scale_param", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "scale_param", "type": "Any"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 227, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 227, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 228, "col_offset": 21, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 228, "col_offset": 44, "nodeName": "gamma", "type": "numpy.ndarray"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "beta", "type": "numpy.ndarray"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "beta_expr", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "c", "type": "Any"}, {"lineNumber": 237, "col_offset": 14, "nodeName": "_", "type": "Any"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "_", "type": "Any"}, {"lineNumber": 237, "col_offset": 21, "nodeName": "_infer_shape", "type": "Any"}, {"lineNumber": 237, "col_offset": 34, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 238, "col_offset": 33, "nodeName": "gamma_expr", "type": "Any"}, {"lineNumber": 239, "col_offset": 20, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 239, "col_offset": 32, "nodeName": "beta_expr", "type": "Any"}, {"lineNumber": 240, "col_offset": 14, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 240, "col_offset": 27, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 240, "col_offset": 36, "nodeName": "gamma_expr", "type": "Any"}, {"lineNumber": 241, "col_offset": 14, "nodeName": "add", "type": "Any"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 241, "col_offset": 27, "nodeName": "beta_expr", "type": "Any"}, {"lineNumber": 247, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 250, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "c_params", "type": "Dict[str, Any]"}, {"lineNumber": 251, "col_offset": 27, "nodeName": "concat_param", "type": "Any"}, {"lineNumber": 252, "col_offset": 14, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 252, "col_offset": 30, "nodeName": "in_expr", "type": "Generator[Any, Any, None]"}, {"lineNumber": 258, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 259, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 261, "col_offset": 24, "nodeName": "op", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 262, "col_offset": 20, "nodeName": "dim", "type": "Any"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 264, "col_offset": 40, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 265, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 267, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "axis", "type": "Any"}, {"lineNumber": 268, "col_offset": 11, "nodeName": "start_axis", "type": "int"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "start_axis", "type": "int"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "num_axes", "type": "Any"}, {"lineNumber": 271, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 271, "col_offset": 23, "nodeName": "input_shape", "type": "List[Any]"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "num_axes", "type": "int"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "end_axis", "type": "int"}, {"lineNumber": 275, "col_offset": 21, "nodeName": "input_shape", "type": "List[Any]"}, {"lineNumber": 276, "col_offset": 11, "nodeName": "end_axis", "type": "int"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "center_shape", "type": "List[Any]"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "right_shape", "type": "List[nothing]"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "center_shape", "type": "List[Any]"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "right_shape", "type": "List[Any]"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "idx", "type": "int"}, {"lineNumber": 283, "col_offset": 17, "nodeName": "dim", "type": "Any"}, {"lineNumber": 283, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 283, "col_offset": 34, "nodeName": "dims", "type": "List[Any]"}, {"lineNumber": 287, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 288, "col_offset": 14, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 288, "col_offset": 30, "nodeName": "dims", "type": "List[Any]"}, {"lineNumber": 289, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 289, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 291, "col_offset": 47, "nodeName": "right_shape", "type": "Union[List[Any], List[nothing]]"}, {"lineNumber": 293, "col_offset": 14, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 293, "col_offset": 26, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 298, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 301, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 302, "col_offset": 18, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 302, "col_offset": 40, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 304, "col_offset": 24, "nodeName": "op", "type": "Any"}, {"lineNumber": 305, "col_offset": 26, "nodeName": "axis", "type": "Any"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 307, "col_offset": 29, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 313, "col_offset": 17, "nodeName": "_parse_conv_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 313, "col_offset": 41, "nodeName": "op", "type": "Any"}, {"lineNumber": 315, "col_offset": 22, "nodeName": "op", "type": "Any"}, {"lineNumber": 316, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "weight", "type": "None"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "bias", "type": "None"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "bias", "type": "Any"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "weight_shape", "type": "List[Union[Any, int, str]]"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "weight_value", "type": "numpy.ndarray"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "weight_value", "type": "Any"}, {"lineNumber": 332, "col_offset": 22, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 332, "col_offset": 45, "nodeName": "weight_value", "type": "Any"}, {"lineNumber": 333, "col_offset": 18, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 334, "col_offset": 14, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "bias_value", "type": "numpy.ndarray"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "bias_expr", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 343, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 346, "col_offset": 22, "nodeName": "op", "type": "Any"}, {"lineNumber": 349, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 351, "col_offset": 20, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], bool, Any]]"}, {"lineNumber": 371, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 371, "col_offset": 19, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 372, "col_offset": 34, "nodeName": "ceil_mode", "type": "Any"}, {"lineNumber": 374, "col_offset": 18, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 374, "col_offset": 40, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 377, "col_offset": 15, "nodeName": "global_pooling", "type": "Any"}, {"lineNumber": 404, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 405, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 407, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 408, "col_offset": 21, "nodeName": "op", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 409, "col_offset": 25, "nodeName": "lrn_params", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 410, "col_offset": 25, "nodeName": "lrn_params", "type": "Any"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 411, "col_offset": 26, "nodeName": "lrn_params", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 412, "col_offset": 25, "nodeName": "lrn_params", "type": "Any"}, {"lineNumber": 414, "col_offset": 18, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 414, "col_offset": 40, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 415, "col_offset": 14, "nodeName": "lrn", "type": "Any"}, {"lineNumber": 415, "col_offset": 25, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 420, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 422, "col_offset": 23, "nodeName": "op", "type": "Any"}, {"lineNumber": 424, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 425, "col_offset": 31, "nodeName": "dense_params", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 426, "col_offset": 25, "nodeName": "dense_params", "type": "Any"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 427, "col_offset": 25, "nodeName": "dense_params", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "weight", "type": "None"}, {"lineNumber": 432, "col_offset": 16, "nodeName": "bias", "type": "None"}, {"lineNumber": 433, "col_offset": 11, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 434, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "bias", "type": "Any"}, {"lineNumber": 437, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "weight_value", "type": "numpy.ndarray"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "weight_value", "type": "Any"}, {"lineNumber": 442, "col_offset": 12, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 442, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 446, "col_offset": 22, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 446, "col_offset": 45, "nodeName": "weight_value", "type": "Any"}, {"lineNumber": 448, "col_offset": 18, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 449, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 451, "col_offset": 14, "nodeName": "dense", "type": "Any"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "bias_value", "type": "numpy.ndarray"}, {"lineNumber": 455, "col_offset": 12, "nodeName": "bias_expr", "type": "Any"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 461, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 462, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 464, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 465, "col_offset": 25, "nodeName": "op", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 467, "col_offset": 25, "nodeName": "dropout_params", "type": "Any"}, {"lineNumber": 469, "col_offset": 18, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 469, "col_offset": 40, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 470, "col_offset": 14, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 470, "col_offset": 29, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 475, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 476, "col_offset": 18, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 477, "col_offset": 25, "nodeName": "relu_param", "type": "Any"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 480, "col_offset": 19, "nodeName": "out", "type": "Any"}, {"lineNumber": 482, "col_offset": 14, "nodeName": "relu", "type": "Any"}, {"lineNumber": 482, "col_offset": 26, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 487, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 488, "col_offset": 18, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 491, "col_offset": 16, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 491, "col_offset": 27, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 491, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 492, "col_offset": 16, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 492, "col_offset": 39, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 494, "col_offset": 14, "nodeName": "prelu", "type": "Any"}, {"lineNumber": 494, "col_offset": 27, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 494, "col_offset": 36, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 499, "col_offset": 17, "nodeName": "_parse_conv_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 499, "col_offset": 41, "nodeName": "op", "type": "Any"}, {"lineNumber": 501, "col_offset": 22, "nodeName": "op", "type": "Any"}, {"lineNumber": 502, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "weight", "type": "None"}, {"lineNumber": 505, "col_offset": 16, "nodeName": "bias", "type": "None"}, {"lineNumber": 507, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "bias", "type": "Any"}, {"lineNumber": 510, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "weight_shape", "type": "List[Union[int, Any, str]]"}, {"lineNumber": 514, "col_offset": 12, "nodeName": "weight_value", "type": "numpy.ndarray"}, {"lineNumber": 515, "col_offset": 12, "nodeName": "weight_value", "type": "Any"}, {"lineNumber": 519, "col_offset": 22, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 519, "col_offset": 45, "nodeName": "weight_value", "type": "Any"}, {"lineNumber": 520, "col_offset": 18, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 521, "col_offset": 14, "nodeName": "conv2d_transpose", "type": "Any"}, {"lineNumber": 524, "col_offset": 12, "nodeName": "bias_value", "type": "numpy.ndarray"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "bias_expr", "type": "Any"}, {"lineNumber": 526, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 531, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 532, "col_offset": 18, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 534, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 534, "col_offset": 25, "nodeName": "top", "type": "Any"}, {"lineNumber": 536, "col_offset": 23, "nodeName": "op", "type": "Any"}, {"lineNumber": 537, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 537, "col_offset": 19, "nodeName": "axis", "type": "Any"}, {"lineNumber": 538, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 540, "col_offset": 12, "nodeName": "indices_or_sections", "type": "int"}, {"lineNumber": 540, "col_offset": 34, "nodeName": "output_num", "type": "int"}, {"lineNumber": 542, "col_offset": 12, "nodeName": "indices_or_sections", "type": "List[int]"}, {"lineNumber": 544, "col_offset": 14, "nodeName": "split", "type": "Any"}, {"lineNumber": 544, "col_offset": 24, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 549, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 550, "col_offset": 18, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 551, "col_offset": 14, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 551, "col_offset": 26, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 556, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 557, "col_offset": 18, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 558, "col_offset": 14, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 558, "col_offset": 23, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 563, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 565, "col_offset": 20, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 566, "col_offset": 20, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 569, "col_offset": 22, "nodeName": "op", "type": "Any"}, {"lineNumber": 570, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 571, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 574, "col_offset": 21, "nodeName": "_infer_shape", "type": "Any"}, {"lineNumber": 574, "col_offset": 34, "nodeName": "in_expr_a", "type": "Any"}, {"lineNumber": 575, "col_offset": 40, "nodeName": "axis", "type": "int"}, {"lineNumber": 576, "col_offset": 15, "nodeName": "offset", "type": "List[Any]"}, {"lineNumber": 577, "col_offset": 12, "nodeName": "offset", "type": "List[int]"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "offset", "type": "Union[List[int], List[Any]]"}, {"lineNumber": 585, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 585, "col_offset": 23, "nodeName": "num_to_crop", "type": "int"}, {"lineNumber": 588, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 589, "col_offset": 23, "nodeName": "to_crop_axis", "type": "List[int]"}, {"lineNumber": 592, "col_offset": 27, "nodeName": "strided_slice", "type": "Any"}, {"lineNumber": 592, "col_offset": 45, "nodeName": "in_expr_a", "type": "Any"}, {"lineNumber": 592, "col_offset": 56, "nodeName": "slice_start", "type": "List[Any]"}, {"lineNumber": 592, "col_offset": 69, "nodeName": "slice_end", "type": "Any"}, {"lineNumber": 593, "col_offset": 14, "nodeName": "slice_like", "type": "Any"}, {"lineNumber": 593, "col_offset": 29, "nodeName": "in_expr_a_stride", "type": "Any"}, {"lineNumber": 593, "col_offset": 47, "nodeName": "in_expr_b", "type": "Any"}, {"lineNumber": 598, "col_offset": 30, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 600, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 601, "col_offset": 18, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 607, "col_offset": 18, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 608, "col_offset": 22, "nodeName": "type", "type": "Any"}, {"lineNumber": 613, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 614, "col_offset": 12, "nodeName": "ops", "type": "str"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "bn", "type": "Any"}, {"lineNumber": 619, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 623, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 623, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 623, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 625, "col_offset": 12, "nodeName": "bn_scale", "type": "Any"}, {"lineNumber": 626, "col_offset": 73, "nodeName": "bn_scale", "type": "Any"}, {"lineNumber": 627, "col_offset": 72, "nodeName": "bn_scale", "type": "Any"}, {"lineNumber": 628, "col_offset": 17, "nodeName": "batch_norm_param", "type": "Any"}, {"lineNumber": 632, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 632, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 632, "col_offset": 66, "nodeName": "float32", "type": "Any"}, {"lineNumber": 633, "col_offset": 21, "nodeName": "scale_param", "type": "Any"}, {"lineNumber": 635, "col_offset": 12, "nodeName": "scale_beta", "type": "numpy.ndarray"}, {"lineNumber": 637, "col_offset": 12, "nodeName": "scale_beta", "type": "Any"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "new_bn", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 640, "col_offset": 32, "nodeName": "bn_mean", "type": "Any"}, {"lineNumber": 640, "col_offset": 41, "nodeName": "bn_var", "type": "Any"}, {"lineNumber": 640, "col_offset": 49, "nodeName": "bn_eps", "type": "Any"}, {"lineNumber": 640, "col_offset": 57, "nodeName": "scale_gamma", "type": "numpy.ndarray"}, {"lineNumber": 640, "col_offset": 70, "nodeName": "scale_beta", "type": "Any"}, {"lineNumber": 649, "col_offset": 12, "nodeName": "index", "type": "int"}, {"lineNumber": 649, "col_offset": 19, "nodeName": "pl", "type": "Any"}, {"lineNumber": 649, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 649, "col_offset": 35, "nodeName": "predict_layer", "type": "Any"}, {"lineNumber": 650, "col_offset": 12, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 650, "col_offset": 22, "nodeName": "type", "type": "Any"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 689, "col_offset": 18, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 690, "col_offset": 12, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 690, "col_offset": 22, "nodeName": "type", "type": "Any"}, {"lineNumber": 693, "col_offset": 12, "nodeName": "output_tensors", "type": "Any"}, {"lineNumber": 693, "col_offset": 29, "nodeName": "top", "type": "Any"}, {"lineNumber": 695, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 712, "col_offset": 11, "nodeName": "type", "type": "Any"}, {"lineNumber": 744, "col_offset": 11, "nodeName": "type", "type": "Any"}, {"lineNumber": 747, "col_offset": 17, "nodeName": "pl", "type": "Any"}, {"lineNumber": 752, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 752, "col_offset": 21, "nodeName": "top", "type": "Any"}, {"lineNumber": 781, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 781, "col_offset": 11, "nodeName": "input", "type": "Any"}, {"lineNumber": 783, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 783, "col_offset": 28, "nodeName": "input", "type": "Any"}, {"lineNumber": 791, "col_offset": 8, "nodeName": "_", "type": "List[Any]"}, {"lineNumber": 791, "col_offset": 11, "nodeName": "model_outputs", "type": "List[Any]"}, {"lineNumber": 791, "col_offset": 27, "nodeName": "_get_inputs_outputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 791, "col_offset": 47, "nodeName": "predict_layer", "type": "Any"}, {"lineNumber": 793, "col_offset": 8, "nodeName": "model_inputs", "type": "List[Any]"}, {"lineNumber": 793, "col_offset": 22, "nodeName": "model_outputs", "type": "List[Any]"}, {"lineNumber": 793, "col_offset": 38, "nodeName": "_get_inputs_outputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 793, "col_offset": 58, "nodeName": "predict_layer", "type": "Any"}, {"lineNumber": 799, "col_offset": 8, "nodeName": "set_expr", "type": "Any"}, {"lineNumber": 799, "col_offset": 25, "nodeName": "in_name", "type": "Any"}, {"lineNumber": 800, "col_offset": 12, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 801, "col_offset": 21, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 803, "col_offset": 21, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 804, "col_offset": 23, "nodeName": "il", "type": "Any"}, {"lineNumber": 804, "col_offset": 39, "nodeName": "il", "type": "Any"}, {"lineNumber": 804, "col_offset": 45, "nodeName": "init_layer", "type": "Any"}, {"lineNumber": 807, "col_offset": 4, "nodeName": "op_converter", "type": "OperatorConverter"}, {"lineNumber": 808, "col_offset": 4, "nodeName": "op_converter", "type": "OperatorConverter"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "op_converter", "type": "OperatorConverter"}, {"lineNumber": 812, "col_offset": 17, "nodeName": "array", "type": "Any"}, {"lineNumber": 815, "col_offset": 11, "nodeName": "n", "type": "Any"}, {"lineNumber": 815, "col_offset": 16, "nodeName": "changed_layers", "type": "Dict[Any, Any]"}, {"lineNumber": 816, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 817, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 818, "col_offset": 14, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 818, "col_offset": 51, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 818, "col_offset": 63, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 819, "col_offset": 11, "nodeName": "_function", "type": "Any"}, {"lineNumber": 819, "col_offset": 30, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 819, "col_offset": 49, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 820, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "op", "type": "Any"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "eltwise_params", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "eltwise_type_dict", "type": "List[str]"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "lhs_expr", "type": "Any"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "rhs_expr", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "coeff", "type": "List[Any]"}, {"lineNumber": 119, "col_offset": 73, "nodeName": "dflt", "type": "int"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], Tuple[Union[Any, int], Union[Any, int]], Tuple[int, ...], Tuple[int, int], str, Any]]"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 126, "col_offset": 59, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "nonzone", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "nonzone", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 129, "col_offset": 58, "nodeName": "ksize_h", "type": "Union[int, Any]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], Tuple[Union[Any, int], Union[Any, int]], Tuple[int, ...], Tuple[int, int], str, Any]]"}, {"lineNumber": 130, "col_offset": 37, "nodeName": "ksize_h", "type": "Union[int, Any]"}, {"lineNumber": 130, "col_offset": 46, "nodeName": "ksize_w", "type": "Union[int, Any]"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "pad_h", "type": "Any"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "pad_w", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], Tuple[Union[Any, int], Union[Any, int]], Tuple[int, ...], Tuple[int, int], str, Any]]"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "pad_h", "type": "Any"}, {"lineNumber": 134, "col_offset": 52, "nodeName": "pad_w", "type": "Any"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "nonzone", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "pad", "type": "Any"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "nonzone", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "pad", "type": "Any"}, {"lineNumber": 137, "col_offset": 48, "nodeName": "pad_h", "type": "Union[Any, int]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], Tuple[Union[Any, int], Union[Any, int]], Tuple[int, ...], Tuple[int, int], str, Any]]"}, {"lineNumber": 138, "col_offset": 33, "nodeName": "pad_h", "type": "Union[Any, int]"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "pad_w", "type": "Union[Any, int]"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "stride_h", "type": "Any"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "stride_w", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], Tuple[Union[Any, int], Union[Any, int]], Tuple[int, ...], Tuple[int, int], str, Any]]"}, {"lineNumber": 142, "col_offset": 33, "nodeName": "stride_h", "type": "Any"}, {"lineNumber": 142, "col_offset": 55, "nodeName": "stride_w", "type": "Any"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "nonzone", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "stride", "type": "Any"}, {"lineNumber": 145, "col_offset": 23, "nodeName": "nonzone", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "stride", "type": "Any"}, {"lineNumber": 145, "col_offset": 54, "nodeName": "stride_h", "type": "Union[Any, int]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], Tuple[Union[Any, int], Union[Any, int]], Tuple[int, ...], Tuple[int, int], str, Any]]"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "stride_h", "type": "Union[Any, int]"}, {"lineNumber": 146, "col_offset": 43, "nodeName": "stride_w", "type": "Union[int, Any]"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], Tuple[Union[Any, int], Union[Any, int]], Tuple[int, ...], Tuple[int, int], str, Any]]"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 165, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "mean", "type": "nothing"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "var", "type": "nothing"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "eps", "type": "nothing"}, {"lineNumber": 169, "col_offset": 28, "nodeName": "gamma", "type": "nothing"}, {"lineNumber": 169, "col_offset": 35, "nodeName": "beta", "type": "nothing"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "new_bn", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 170, "col_offset": 47, "nodeName": "mean", "type": "nothing"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 171, "col_offset": 46, "nodeName": "var", "type": "nothing"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 172, "col_offset": 48, "nodeName": "gamma", "type": "nothing"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 173, "col_offset": 47, "nodeName": "beta", "type": "nothing"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "batch_norm", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "gamma_expr", "type": "Any"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "beta_expr", "type": "Any"}, {"lineNumber": 175, "col_offset": 48, "nodeName": "mean_expr", "type": "Any"}, {"lineNumber": 175, "col_offset": 59, "nodeName": "var_expr", "type": "Any"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 180, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 180, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 181, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "mean_expr", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "var", "type": "Any"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "var", "type": "Any"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "var_expr", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "tmp_out", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "out", "type": "Any"}, {"lineNumber": 194, "col_offset": 23, "nodeName": "out", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "scale", "type": "numpy.ndarray"}, {"lineNumber": 197, "col_offset": 19, "nodeName": "scale", "type": "numpy.ndarray"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "batch_norm_param", "type": "Any"}, {"lineNumber": 211, "col_offset": 18, "nodeName": "batch_norm", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "gamma_expr", "type": "Any"}, {"lineNumber": 212, "col_offset": 37, "nodeName": "beta_expr", "type": "Any"}, {"lineNumber": 212, "col_offset": 48, "nodeName": "mean_expr", "type": "Any"}, {"lineNumber": 212, "col_offset": 59, "nodeName": "var_expr", "type": "Any"}, {"lineNumber": 220, "col_offset": 18, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 220, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "init_layer_dict", "type": "Any"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "op", "type": "Any"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "op", "type": "Any"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 228, "col_offset": 21, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 230, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 230, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 230, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 231, "col_offset": 47, "nodeName": "beta", "type": "numpy.ndarray"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "_op", "type": "Any"}, {"lineNumber": 239, "col_offset": 20, "nodeName": "_op", "type": "Any"}, {"lineNumber": 240, "col_offset": 14, "nodeName": "_op", "type": "Any"}, {"lineNumber": 241, "col_offset": 14, "nodeName": "_op", "type": "Any"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 248, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 251, "col_offset": 27, "nodeName": "op", "type": "Any"}, {"lineNumber": 252, "col_offset": 14, "nodeName": "_op", "type": "Any"}, {"lineNumber": 262, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 265, "col_offset": 27, "nodeName": "_infer_shape", "type": "Any"}, {"lineNumber": 265, "col_offset": 40, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "reshape_param", "type": "Any"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "reshape_param", "type": "Any"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "start_axis", "type": "int"}, {"lineNumber": 273, "col_offset": 36, "nodeName": "num_axes", "type": "int"}, {"lineNumber": 275, "col_offset": 34, "nodeName": "start_axis", "type": "int"}, {"lineNumber": 276, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 276, "col_offset": 27, "nodeName": "input_shape", "type": "List[Any]"}, {"lineNumber": 277, "col_offset": 27, "nodeName": "input_shape", "type": "List[Any]"}, {"lineNumber": 280, "col_offset": 27, "nodeName": "input_shape", "type": "List[Any]"}, {"lineNumber": 281, "col_offset": 26, "nodeName": "input_shape", "type": "List[Any]"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "dim", "type": "Any"}, {"lineNumber": 287, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 287, "col_offset": 30, "nodeName": "center_shape", "type": "List[Any]"}, {"lineNumber": 288, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 289, "col_offset": 28, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 291, "col_offset": 19, "nodeName": "left_shape", "type": "List[Any]"}, {"lineNumber": 291, "col_offset": 32, "nodeName": "center_shape", "type": "List[Any]"}, {"lineNumber": 293, "col_offset": 14, "nodeName": "_op", "type": "Any"}, {"lineNumber": 293, "col_offset": 44, "nodeName": "newshape", "type": "List[Any]"}, {"lineNumber": 299, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 299, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 302, "col_offset": 18, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 305, "col_offset": 26, "nodeName": "softmax_param", "type": "Any"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 307, "col_offset": 40, "nodeName": "parmas", "type": "Dict[str, Any]"}, {"lineNumber": 313, "col_offset": 17, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 314, "col_offset": 28, "nodeName": "init_layer_dict", "type": "Any"}, {"lineNumber": 319, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 319, "col_offset": 15, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 321, "col_offset": 19, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 323, "col_offset": 21, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "kh", "type": "Union[Any, int, str]"}, {"lineNumber": 325, "col_offset": 16, "nodeName": "kw", "type": "Union[Any, int, str]"}, {"lineNumber": 325, "col_offset": 21, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], Tuple[Union[Any, int], Union[Any, int]], Tuple[int, ...], Tuple[int, int], str, Any]]"}, {"lineNumber": 326, "col_offset": 28, "nodeName": "num_output", "type": "Any"}, {"lineNumber": 326, "col_offset": 56, "nodeName": "kh", "type": "Union[int, Any, str]"}, {"lineNumber": 326, "col_offset": 60, "nodeName": "kw", "type": "Union[Any, int, str]"}, {"lineNumber": 327, "col_offset": 27, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 327, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 327, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 328, "col_offset": 27, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 328, "col_offset": 38, "nodeName": "weight_value", "type": "numpy.ndarray"}, {"lineNumber": 328, "col_offset": 52, "nodeName": "weight_shape", "type": "List[Union[Any, int, str]]"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 332, "col_offset": 22, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 333, "col_offset": 18, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 333, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 334, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 334, "col_offset": 33, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 334, "col_offset": 49, "nodeName": "weight_expr", "type": "Any"}, {"lineNumber": 334, "col_offset": 64, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], Tuple[Union[Any, int], Union[Any, int]], Tuple[int, ...], Tuple[int, int], str, Any]]"}, {"lineNumber": 336, "col_offset": 25, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 336, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 336, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 337, "col_offset": 24, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 337, "col_offset": 47, "nodeName": "bias_value", "type": "numpy.ndarray"}, {"lineNumber": 338, "col_offset": 18, "nodeName": "bias_add", "type": "Any"}, {"lineNumber": 338, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 338, "col_offset": 39, "nodeName": "bias_expr", "type": "Any"}, {"lineNumber": 353, "col_offset": 11, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 353, "col_offset": 39, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], bool, Any]]"}, {"lineNumber": 354, "col_offset": 35, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 354, "col_offset": 57, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], bool, Any]]"}, {"lineNumber": 356, "col_offset": 35, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 356, "col_offset": 60, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 359, "col_offset": 11, "nodeName": "pad_h", "type": "Any"}, {"lineNumber": 359, "col_offset": 36, "nodeName": "pad_w", "type": "Any"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], bool, Any]]"}, {"lineNumber": 360, "col_offset": 33, "nodeName": "pad_h", "type": "Any"}, {"lineNumber": 360, "col_offset": 52, "nodeName": "pad_w", "type": "Any"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], bool, Any]]"}, {"lineNumber": 362, "col_offset": 33, "nodeName": "pad", "type": "Any"}, {"lineNumber": 362, "col_offset": 50, "nodeName": "pad", "type": "Any"}, {"lineNumber": 365, "col_offset": 11, "nodeName": "stride_h", "type": "Any"}, {"lineNumber": 365, "col_offset": 39, "nodeName": "stride_w", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], bool, Any]]"}, {"lineNumber": 366, "col_offset": 33, "nodeName": "stride_h", "type": "Any"}, {"lineNumber": 366, "col_offset": 55, "nodeName": "stride_w", "type": "Any"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], bool, Any]]"}, {"lineNumber": 368, "col_offset": 33, "nodeName": "stride", "type": "Any"}, {"lineNumber": 368, "col_offset": 53, "nodeName": "stride", "type": "Any"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], bool, Any]]"}, {"lineNumber": 372, "col_offset": 34, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 374, "col_offset": 18, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "pool_type_dict", "type": "List[str]"}, {"lineNumber": 377, "col_offset": 15, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 378, "col_offset": 16, "nodeName": "out", "type": "Any"}, {"lineNumber": 388, "col_offset": 15, "nodeName": "global_pooling", "type": "Any"}, {"lineNumber": 414, "col_offset": 18, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 415, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 415, "col_offset": 36, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 421, "col_offset": 28, "nodeName": "init_layer_dict", "type": "Any"}, {"lineNumber": 428, "col_offset": 11, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 429, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 434, "col_offset": 21, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 435, "col_offset": 19, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 437, "col_offset": 21, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 440, "col_offset": 27, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 440, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 440, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 441, "col_offset": 27, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 441, "col_offset": 38, "nodeName": "weight_value", "type": "numpy.ndarray"}, {"lineNumber": 442, "col_offset": 27, "nodeName": "weight_value", "type": "Any"}, {"lineNumber": 444, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 446, "col_offset": 22, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 448, "col_offset": 18, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 448, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 449, "col_offset": 21, "nodeName": "_op", "type": "Any"}, {"lineNumber": 449, "col_offset": 38, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 451, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 451, "col_offset": 32, "nodeName": "in_reshape", "type": "Any"}, {"lineNumber": 451, "col_offset": 51, "nodeName": "weight_expr", "type": "Any"}, {"lineNumber": 454, "col_offset": 25, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 454, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 454, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 455, "col_offset": 24, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 455, "col_offset": 47, "nodeName": "bias_value", "type": "numpy.ndarray"}, {"lineNumber": 456, "col_offset": 18, "nodeName": "bias_add", "type": "Any"}, {"lineNumber": 456, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 456, "col_offset": 39, "nodeName": "bias_expr", "type": "Any"}, {"lineNumber": 469, "col_offset": 18, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 470, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 470, "col_offset": 40, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 476, "col_offset": 18, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 476, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 477, "col_offset": 25, "nodeName": "op", "type": "Any"}, {"lineNumber": 479, "col_offset": 18, "nodeName": "leaky_relu", "type": "Any"}, {"lineNumber": 479, "col_offset": 36, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 479, "col_offset": 45, "nodeName": "negative_slope", "type": "Any"}, {"lineNumber": 482, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 488, "col_offset": 18, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 488, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 490, "col_offset": 16, "nodeName": "blobs", "type": "Any"}, {"lineNumber": 491, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 491, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 492, "col_offset": 16, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 494, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 494, "col_offset": 48, "nodeName": "axis", "type": "int"}, {"lineNumber": 499, "col_offset": 17, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 500, "col_offset": 28, "nodeName": "init_layer_dict", "type": "Any"}, {"lineNumber": 506, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 506, "col_offset": 15, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 507, "col_offset": 21, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 508, "col_offset": 19, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 510, "col_offset": 21, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "kh", "type": "Union[Any, int, str]"}, {"lineNumber": 512, "col_offset": 16, "nodeName": "kw", "type": "Union[Any, int, str]"}, {"lineNumber": 512, "col_offset": 21, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], Tuple[Union[Any, int], Union[Any, int]], Tuple[int, ...], Tuple[int, int], str, Any]]"}, {"lineNumber": 513, "col_offset": 32, "nodeName": "num_output", "type": "Any"}, {"lineNumber": 513, "col_offset": 56, "nodeName": "kh", "type": "Union[Any, int, str]"}, {"lineNumber": 513, "col_offset": 60, "nodeName": "kw", "type": "Union[Any, int, str]"}, {"lineNumber": 514, "col_offset": 27, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 514, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 514, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 515, "col_offset": 27, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 515, "col_offset": 38, "nodeName": "weight_value", "type": "numpy.ndarray"}, {"lineNumber": 515, "col_offset": 52, "nodeName": "weight_shape", "type": "List[Union[int, Any, str]]"}, {"lineNumber": 517, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 519, "col_offset": 22, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 520, "col_offset": 18, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 520, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 521, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 521, "col_offset": 43, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 521, "col_offset": 59, "nodeName": "weight_expr", "type": "Any"}, {"lineNumber": 521, "col_offset": 74, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], Tuple[Union[Any, int], Union[Any, int]], Tuple[int, ...], Tuple[int, int], str, Any]]"}, {"lineNumber": 524, "col_offset": 25, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 524, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 524, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 525, "col_offset": 24, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 525, "col_offset": 47, "nodeName": "bias_value", "type": "numpy.ndarray"}, {"lineNumber": 526, "col_offset": 18, "nodeName": "bias_add", "type": "Any"}, {"lineNumber": 526, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 526, "col_offset": 39, "nodeName": "bias_expr", "type": "Any"}, {"lineNumber": 532, "col_offset": 18, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 532, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 534, "col_offset": 25, "nodeName": "op", "type": "Any"}, {"lineNumber": 537, "col_offset": 19, "nodeName": "slice_params", "type": "Any"}, {"lineNumber": 539, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 539, "col_offset": 15, "nodeName": "indices_or_sections", "type": "List[int]"}, {"lineNumber": 542, "col_offset": 34, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 542, "col_offset": 41, "nodeName": "indices_or_sections", "type": "List[int]"}, {"lineNumber": 544, "col_offset": 14, "nodeName": "_op", "type": "Any"}, {"lineNumber": 544, "col_offset": 53, "nodeName": "indices_or_sections", "type": "Union[List[int], int]"}, {"lineNumber": 544, "col_offset": 79, "nodeName": "axis", "type": "int"}, {"lineNumber": 550, "col_offset": 18, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 550, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 551, "col_offset": 14, "nodeName": "_op", "type": "Any"}, {"lineNumber": 557, "col_offset": 18, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 557, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 558, "col_offset": 14, "nodeName": "_op", "type": "Any"}, {"lineNumber": 564, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 564, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 565, "col_offset": 20, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 565, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 566, "col_offset": 20, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 566, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 570, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 570, "col_offset": 27, "nodeName": "crop_params", "type": "Any"}, {"lineNumber": 571, "col_offset": 22, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 571, "col_offset": 30, "nodeName": "crop_params", "type": "Any"}, {"lineNumber": 575, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 575, "col_offset": 26, "nodeName": "in_a_shape", "type": "Any"}, {"lineNumber": 577, "col_offset": 27, "nodeName": "num_to_crop", "type": "int"}, {"lineNumber": 578, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 578, "col_offset": 15, "nodeName": "offset", "type": "Union[List[int], List[Any]]"}, {"lineNumber": 579, "col_offset": 21, "nodeName": "offset", "type": "Union[List[int], List[Any]]"}, {"lineNumber": 579, "col_offset": 30, "nodeName": "num_to_crop", "type": "int"}, {"lineNumber": 580, "col_offset": 28, "nodeName": "num_to_crop", "type": "int"}, {"lineNumber": 584, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 584, "col_offset": 32, "nodeName": "in_a_shape", "type": "Any"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "slice_start", "type": "List[Any]"}, {"lineNumber": 586, "col_offset": 36, "nodeName": "offset", "type": "Union[List[int], List[Any]]"}, {"lineNumber": 588, "col_offset": 28, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 589, "col_offset": 36, "nodeName": "axis", "type": "int"}, {"lineNumber": 592, "col_offset": 27, "nodeName": "_op", "type": "Any"}, {"lineNumber": 593, "col_offset": 14, "nodeName": "_op", "type": "Any"}, {"lineNumber": 593, "col_offset": 63, "nodeName": "to_crop_axis", "type": "List[int]"}, {"lineNumber": 602, "col_offset": 15, "nodeName": "type", "type": "Any"}, {"lineNumber": 602, "col_offset": 30, "nodeName": "include_layer", "type": "Dict[Any, int]"}, {"lineNumber": 608, "col_offset": 22, "nodeName": "pl", "type": "Any"}, {"lineNumber": 609, "col_offset": 15, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 609, "col_offset": 30, "nodeName": "convert_map", "type": "Dict[str, Optional[Callable[[Any], Any]]]"}, {"lineNumber": 614, "col_offset": 18, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 615, "col_offset": 18, "nodeName": "OpNotImplemented", "type": "Any"}, {"lineNumber": 619, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 619, "col_offset": 34, "nodeName": "layers", "type": "Any"}, {"lineNumber": 622, "col_offset": 31, "nodeName": "init_layer_dict", "type": "Any"}, {"lineNumber": 623, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 623, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 625, "col_offset": 27, "nodeName": "bn_scale", "type": "numpy.ndarray"}, {"lineNumber": 626, "col_offset": 18, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 626, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 626, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 627, "col_offset": 17, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 627, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 627, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 628, "col_offset": 17, "nodeName": "bn", "type": "Any"}, {"lineNumber": 631, "col_offset": 34, "nodeName": "init_layer_dict", "type": "Any"}, {"lineNumber": 632, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 632, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 633, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 635, "col_offset": 25, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 635, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 635, "col_offset": 69, "nodeName": "float32", "type": "Any"}, {"lineNumber": 637, "col_offset": 25, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 637, "col_offset": 34, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 640, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 649, "col_offset": 35, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 650, "col_offset": 22, "nodeName": "pl", "type": "Any"}, {"lineNumber": 651, "col_offset": 15, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 673, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 675, "col_offset": 60, "nodeName": "name", "type": "Any"}, {"lineNumber": 677, "col_offset": 16, "nodeName": "idx", "type": "int"}, {"lineNumber": 677, "col_offset": 21, "nodeName": "plt", "type": "Any"}, {"lineNumber": 677, "col_offset": 28, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 677, "col_offset": 38, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 681, "col_offset": 15, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 690, "col_offset": 22, "nodeName": "pl", "type": "Any"}, {"lineNumber": 691, "col_offset": 15, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 693, "col_offset": 29, "nodeName": "pl", "type": "Any"}, {"lineNumber": 695, "col_offset": 44, "nodeName": "pl", "type": "Any"}, {"lineNumber": 712, "col_offset": 11, "nodeName": "pl", "type": "Any"}, {"lineNumber": 722, "col_offset": 46, "nodeName": "name", "type": "Any"}, {"lineNumber": 724, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 730, "col_offset": 16, "nodeName": "index", "type": "int"}, {"lineNumber": 730, "col_offset": 23, "nodeName": "plt", "type": "Any"}, {"lineNumber": 730, "col_offset": 30, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 730, "col_offset": 40, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 744, "col_offset": 11, "nodeName": "pl", "type": "Any"}, {"lineNumber": 746, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 748, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 748, "col_offset": 28, "nodeName": "i", "type": "Any"}, {"lineNumber": 751, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 751, "col_offset": 15, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 752, "col_offset": 21, "nodeName": "pl", "type": "Any"}, {"lineNumber": 781, "col_offset": 11, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 783, "col_offset": 28, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 797, "col_offset": 39, "nodeName": "in_name", "type": "Any"}, {"lineNumber": 797, "col_offset": 50, "nodeName": "shape_dict", "type": "Any"}, {"lineNumber": 797, "col_offset": 16, "nodeName": "shape_dict", "type": "Any"}, {"lineNumber": 798, "col_offset": 39, "nodeName": "in_name", "type": "Any"}, {"lineNumber": 798, "col_offset": 50, "nodeName": "dtype_dict", "type": "Any"}, {"lineNumber": 798, "col_offset": 16, "nodeName": "dtype_dict", "type": "Any"}, {"lineNumber": 799, "col_offset": 8, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 799, "col_offset": 34, "nodeName": "var", "type": "Any"}, {"lineNumber": 799, "col_offset": 44, "nodeName": "in_name", "type": "Any"}, {"lineNumber": 812, "col_offset": 17, "nodeName": "_nd", "type": "Any"}, {"lineNumber": 812, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 812, "col_offset": 36, "nodeName": "v", "type": "Any"}, {"lineNumber": 812, "col_offset": 44, "nodeName": "k", "type": "Any"}, {"lineNumber": 812, "col_offset": 47, "nodeName": "v", "type": "Any"}, {"lineNumber": 812, "col_offset": 52, "nodeName": "items", "type": "Any"}, {"lineNumber": 815, "col_offset": 16, "nodeName": "op_converter", "type": "OperatorConverter"}, {"lineNumber": 816, "col_offset": 16, "nodeName": "changed_layers", "type": "Dict[Any, Any]"}, {"lineNumber": 817, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 817, "col_offset": 23, "nodeName": "get_expr", "type": "Any"}, {"lineNumber": 817, "col_offset": 40, "nodeName": "n", "type": "Any"}, {"lineNumber": 818, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 818, "col_offset": 32, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 818, "col_offset": 51, "nodeName": "_expr", "type": "Any"}, {"lineNumber": 819, "col_offset": 30, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "_op", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "eltwise_type", "type": "Any"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "_op", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "eltwise_type_dict", "type": "List[str]"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "left_coeff_expr", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "right_coeff_expr", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "lhs_expr_scale", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "rhs_expr_scale", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "out", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "out", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 119, "col_offset": 53, "nodeName": "pos", "type": "int"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "val", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 126, "col_offset": 59, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 134, "col_offset": 52, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 142, "col_offset": 33, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 142, "col_offset": 55, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 149, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 149, "col_offset": 52, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "map", "type": "Callable"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "dilation", "type": "Tuple[int, ...]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], Tuple[Union[Any, int], Union[Any, int]], Tuple[int, ...], Tuple[int, int], str, Any]]"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 169, "col_offset": 54, "nodeName": "name", "type": "Any"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 175, "col_offset": 77, "nodeName": "eps", "type": "nothing"}, {"lineNumber": 179, "col_offset": 32, "nodeName": "init_layer_dict", "type": "Any"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 181, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 184, "col_offset": 54, "nodeName": "n", "type": "Any"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 185, "col_offset": 51, "nodeName": "mean", "type": "Any"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 188, "col_offset": 22, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 188, "col_offset": 52, "nodeName": "n", "type": "Any"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 189, "col_offset": 50, "nodeName": "var", "type": "Any"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 191, "col_offset": 39, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 191, "col_offset": 48, "nodeName": "mean_expr", "type": "Any"}, {"lineNumber": 192, "col_offset": 22, "nodeName": "add", "type": "Any"}, {"lineNumber": 192, "col_offset": 30, "nodeName": "tmp_out", "type": "Any"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "var_expr", "type": "Any"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 196, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 196, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "scale", "type": "Any"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 199, "col_offset": 47, "nodeName": "mean", "type": "numpy.ndarray"}, {"lineNumber": 199, "col_offset": 54, "nodeName": "scale", "type": "Any"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 200, "col_offset": 46, "nodeName": "var", "type": "numpy.ndarray"}, {"lineNumber": 200, "col_offset": 52, "nodeName": "scale", "type": "Any"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 204, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "op", "type": "Any"}, {"lineNumber": 211, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 212, "col_offset": 77, "nodeName": "bn_params", "type": "Any"}, {"lineNumber": 220, "col_offset": 18, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 221, "col_offset": 49, "nodeName": "name", "type": "Any"}, {"lineNumber": 227, "col_offset": 27, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 228, "col_offset": 21, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 230, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 230, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 238, "col_offset": 58, "nodeName": "c", "type": "Any"}, {"lineNumber": 239, "col_offset": 56, "nodeName": "c", "type": "Any"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 248, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 248, "col_offset": 61, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 252, "col_offset": 44, "nodeName": "c_params", "type": "Dict[str, Any]"}, {"lineNumber": 262, "col_offset": 20, "nodeName": "reshape_param", "type": "Any"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 269, "col_offset": 44, "nodeName": "start_axis", "type": "int"}, {"lineNumber": 277, "col_offset": 39, "nodeName": "start_axis", "type": "int"}, {"lineNumber": 280, "col_offset": 39, "nodeName": "start_axis", "type": "int"}, {"lineNumber": 280, "col_offset": 50, "nodeName": "end_axis", "type": "int"}, {"lineNumber": 281, "col_offset": 38, "nodeName": "end_axis", "type": "int"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "dims", "type": "List[Any]"}, {"lineNumber": 285, "col_offset": 28, "nodeName": "center_shape", "type": "List[Any]"}, {"lineNumber": 287, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 302, "col_offset": 18, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "_op", "type": "Any"}, {"lineNumber": 314, "col_offset": 28, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 314, "col_offset": 49, "nodeName": "name", "type": "Any"}, {"lineNumber": 326, "col_offset": 28, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 327, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 327, "col_offset": 38, "nodeName": "weight", "type": "Any"}, {"lineNumber": 327, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 328, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 330, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 330, "col_offset": 79, "nodeName": "name", "type": "Any"}, {"lineNumber": 332, "col_offset": 22, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 333, "col_offset": 18, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 334, "col_offset": 14, "nodeName": "_op", "type": "Any"}, {"lineNumber": 336, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 336, "col_offset": 36, "nodeName": "bias", "type": "Any"}, {"lineNumber": 336, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 337, "col_offset": 24, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 338, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 353, "col_offset": 11, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 353, "col_offset": 39, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 354, "col_offset": 35, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 354, "col_offset": 57, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 356, "col_offset": 35, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 356, "col_offset": 60, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 359, "col_offset": 11, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 359, "col_offset": 36, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 360, "col_offset": 33, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 360, "col_offset": 52, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 362, "col_offset": 33, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 362, "col_offset": 50, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 365, "col_offset": 11, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 365, "col_offset": 39, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 366, "col_offset": 33, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 366, "col_offset": 55, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 368, "col_offset": 33, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 368, "col_offset": 53, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 374, "col_offset": 18, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 376, "col_offset": 26, "nodeName": "pool_type", "type": "Any"}, {"lineNumber": 378, "col_offset": 22, "nodeName": "global_max_pool2d", "type": "Any"}, {"lineNumber": 378, "col_offset": 47, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 381, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 387, "col_offset": 13, "nodeName": "pool_type_dict", "type": "List[str]"}, {"lineNumber": 388, "col_offset": 15, "nodeName": "pool_params", "type": "Any"}, {"lineNumber": 389, "col_offset": 16, "nodeName": "out", "type": "Any"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "out", "type": "Any"}, {"lineNumber": 394, "col_offset": 18, "nodeName": "OpNotImplemented", "type": "Any"}, {"lineNumber": 414, "col_offset": 18, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 415, "col_offset": 14, "nodeName": "_op", "type": "Any"}, {"lineNumber": 421, "col_offset": 28, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 421, "col_offset": 49, "nodeName": "name", "type": "Any"}, {"lineNumber": 440, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 440, "col_offset": 38, "nodeName": "weight", "type": "Any"}, {"lineNumber": 440, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 441, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 444, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 444, "col_offset": 79, "nodeName": "name", "type": "Any"}, {"lineNumber": 446, "col_offset": 22, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 448, "col_offset": 18, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 451, "col_offset": 14, "nodeName": "_op", "type": "Any"}, {"lineNumber": 454, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 454, "col_offset": 36, "nodeName": "bias", "type": "Any"}, {"lineNumber": 454, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 455, "col_offset": 24, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 456, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 469, "col_offset": 18, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 470, "col_offset": 14, "nodeName": "_op", "type": "Any"}, {"lineNumber": 476, "col_offset": 18, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 479, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 482, "col_offset": 14, "nodeName": "_op", "type": "Any"}, {"lineNumber": 488, "col_offset": 18, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 492, "col_offset": 16, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 494, "col_offset": 14, "nodeName": "_op", "type": "Any"}, {"lineNumber": 500, "col_offset": 28, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 500, "col_offset": 49, "nodeName": "name", "type": "Any"}, {"lineNumber": 513, "col_offset": 32, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 514, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 514, "col_offset": 38, "nodeName": "weight", "type": "Any"}, {"lineNumber": 514, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 515, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 517, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 517, "col_offset": 79, "nodeName": "name", "type": "Any"}, {"lineNumber": 519, "col_offset": 22, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 520, "col_offset": 18, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 521, "col_offset": 14, "nodeName": "_op", "type": "Any"}, {"lineNumber": 524, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 524, "col_offset": 36, "nodeName": "bias", "type": "Any"}, {"lineNumber": 524, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 525, "col_offset": 24, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 526, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 532, "col_offset": 18, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 538, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 538, "col_offset": 40, "nodeName": "s", "type": "Any"}, {"lineNumber": 538, "col_offset": 47, "nodeName": "s", "type": "Any"}, {"lineNumber": 538, "col_offset": 52, "nodeName": "slice_point", "type": "Any"}, {"lineNumber": 550, "col_offset": 18, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 557, "col_offset": 18, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 565, "col_offset": 20, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 566, "col_offset": 20, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 580, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 580, "col_offset": 17, "nodeName": "offset", "type": "Union[List[int], List[Any]]"}, {"lineNumber": 581, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 586, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 588, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 588, "col_offset": 38, "nodeName": "in_a_shape", "type": "Any"}, {"lineNumber": 602, "col_offset": 15, "nodeName": "pl", "type": "Any"}, {"lineNumber": 603, "col_offset": 16, "nodeName": "include_layer", "type": "Dict[Any, int]"}, {"lineNumber": 605, "col_offset": 16, "nodeName": "include_layer", "type": "Dict[Any, int]"}, {"lineNumber": 609, "col_offset": 30, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 610, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 610, "col_offset": 40, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 615, "col_offset": 18, "nodeName": "error", "type": "Any"}, {"lineNumber": 615, "col_offset": 45, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 615, "col_offset": 56, "nodeName": "ops", "type": "str"}, {"lineNumber": 622, "col_offset": 31, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 622, "col_offset": 52, "nodeName": "name", "type": "Any"}, {"lineNumber": 623, "col_offset": 30, "nodeName": "bn_weight_bias_blobs", "type": "Any"}, {"lineNumber": 626, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 626, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 627, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 627, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 631, "col_offset": 34, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 631, "col_offset": 55, "nodeName": "name", "type": "Any"}, {"lineNumber": 632, "col_offset": 33, "nodeName": "scale_weight_bias_blobs", "type": "Any"}, {"lineNumber": 635, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 635, "col_offset": 69, "nodeName": "np", "type": "module"}, {"lineNumber": 637, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 637, "col_offset": 34, "nodeName": "scale_gamma", "type": "numpy.ndarray"}, {"lineNumber": 637, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 640, "col_offset": 20, "nodeName": "bn", "type": "Any"}, {"lineNumber": 652, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 652, "col_offset": 34, "nodeName": "pl", "type": "Any"}, {"lineNumber": 654, "col_offset": 17, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 672, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 672, "col_offset": 19, "nodeName": "temp_layers", "type": "Dict[str, Any]"}, {"lineNumber": 673, "col_offset": 24, "nodeName": "fuse_op", "type": "Callable[[Any], Any]"}, {"lineNumber": 673, "col_offset": 37, "nodeName": "temp_layers", "type": "Dict[str, Any]"}, {"lineNumber": 674, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 674, "col_offset": 34, "nodeName": "layer", "type": "Any"}, {"lineNumber": 675, "col_offset": 16, "nodeName": "changed_layers", "type": "Dict[Any, Any]"}, {"lineNumber": 677, "col_offset": 38, "nodeName": "pl", "type": "Any"}, {"lineNumber": 678, "col_offset": 19, "nodeName": "plt", "type": "Any"}, {"lineNumber": 678, "col_offset": 26, "nodeName": "changed_layers", "type": "Dict[Any, Any]"}, {"lineNumber": 682, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 682, "col_offset": 34, "nodeName": "pl", "type": "Any"}, {"lineNumber": 695, "col_offset": 18, "nodeName": "convert_map", "type": "Dict[str, Optional[Callable[[Any], Any]]]"}, {"lineNumber": 697, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 697, "col_offset": 19, "nodeName": "output_tensors", "type": "Any"}, {"lineNumber": 698, "col_offset": 16, "nodeName": "set_expr", "type": "Any"}, {"lineNumber": 698, "col_offset": 57, "nodeName": "ret", "type": "Any"}, {"lineNumber": 700, "col_offset": 20, "nodeName": "idx", "type": "int"}, {"lineNumber": 700, "col_offset": 25, "nodeName": "output_tensor", "type": "Any"}, {"lineNumber": 700, "col_offset": 42, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 700, "col_offset": 52, "nodeName": "output_tensors", "type": "Any"}, {"lineNumber": 716, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 716, "col_offset": 15, "nodeName": "top", "type": "Any"}, {"lineNumber": 716, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 716, "col_offset": 36, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 717, "col_offset": 15, "nodeName": "top", "type": "Any"}, {"lineNumber": 717, "col_offset": 28, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 719, "col_offset": 35, "nodeName": "changed_top_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 722, "col_offset": 16, "nodeName": "changed_top_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 722, "col_offset": 46, "nodeName": "pl", "type": "Any"}, {"lineNumber": 724, "col_offset": 16, "nodeName": "top", "type": "Any"}, {"lineNumber": 724, "col_offset": 28, "nodeName": "pl", "type": "Any"}, {"lineNumber": 726, "col_offset": 35, "nodeName": "changed_top_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 730, "col_offset": 40, "nodeName": "pl", "type": "Any"}, {"lineNumber": 731, "col_offset": 19, "nodeName": "plt", "type": "Any"}, {"lineNumber": 731, "col_offset": 26, "nodeName": "changed_top_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 745, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 745, "col_offset": 23, "nodeName": "top", "type": "Any"}, {"lineNumber": 746, "col_offset": 12, "nodeName": "model_inputs", "type": "List[Any]"}, {"lineNumber": 746, "col_offset": 32, "nodeName": "top", "type": "Any"}, {"lineNumber": 748, "col_offset": 12, "nodeName": "not_outputs", "type": "Set[Any]"}, {"lineNumber": 751, "col_offset": 15, "nodeName": "pl", "type": "Any"}, {"lineNumber": 753, "col_offset": 19, "nodeName": "t", "type": "Any"}, {"lineNumber": 753, "col_offset": 28, "nodeName": "not_outputs", "type": "Set[Any]"}, {"lineNumber": 797, "col_offset": 27, "nodeName": "in_name", "type": "Any"}, {"lineNumber": 798, "col_offset": 27, "nodeName": "in_name", "type": "Any"}, {"lineNumber": 799, "col_offset": 34, "nodeName": "_expr", "type": "Any"}, {"lineNumber": 799, "col_offset": 59, "nodeName": "shape", "type": "Optional[Any]"}, {"lineNumber": 799, "col_offset": 72, "nodeName": "dtype", "type": "Union[str, Any]"}, {"lineNumber": 812, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 812, "col_offset": 52, "nodeName": "params", "type": "Any"}, {"lineNumber": 816, "col_offset": 16, "nodeName": "op_converter", "type": "OperatorConverter"}, {"lineNumber": 816, "col_offset": 44, "nodeName": "n", "type": "Any"}, {"lineNumber": 817, "col_offset": 23, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "eltwise_type", "type": "Any"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "new_const", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "lhs_expr", "type": "Any"}, {"lineNumber": 103, "col_offset": 56, "nodeName": "left_coeff_expr", "type": "Any"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 104, "col_offset": 46, "nodeName": "rhs_expr", "type": "Any"}, {"lineNumber": 104, "col_offset": 56, "nodeName": "right_coeff_expr", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "add", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "lhs_expr_scale", "type": "Any"}, {"lineNumber": 105, "col_offset": 46, "nodeName": "rhs_expr_scale", "type": "Any"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "add", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "lhs_expr", "type": "Any"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "rhs_expr", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "eltwise_type_dict", "type": "List[str]"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "lhs_expr", "type": "Any"}, {"lineNumber": 109, "col_offset": 40, "nodeName": "rhs_expr", "type": "Any"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "OpNotImplemented", "type": "Any"}, {"lineNumber": 119, "col_offset": 59, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 119, "col_offset": 63, "nodeName": "val", "type": "Any"}, {"lineNumber": 119, "col_offset": 45, "nodeName": "pos", "type": "int"}, {"lineNumber": 149, "col_offset": 52, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 150, "col_offset": 36, "nodeName": "d", "type": "Any"}, {"lineNumber": 150, "col_offset": 43, "nodeName": "d", "type": "Any"}, {"lineNumber": 150, "col_offset": 48, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 151, "col_offset": 38, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 154, "col_offset": 38, "nodeName": "dilation", "type": "Tuple[int, ...]"}, {"lineNumber": 154, "col_offset": 51, "nodeName": "dilation", "type": "Tuple[int, ...]"}, {"lineNumber": 169, "col_offset": 54, "nodeName": "op", "type": "Any"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "_op", "type": "Any"}, {"lineNumber": 179, "col_offset": 32, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 179, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 180, "col_offset": 30, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 183, "col_offset": 55, "nodeName": "c", "type": "Any"}, {"lineNumber": 183, "col_offset": 58, "nodeName": "h", "type": "Any"}, {"lineNumber": 183, "col_offset": 61, "nodeName": "w", "type": "Any"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 187, "col_offset": 53, "nodeName": "c", "type": "Any"}, {"lineNumber": 187, "col_offset": 56, "nodeName": "h", "type": "Any"}, {"lineNumber": 187, "col_offset": 59, "nodeName": "w", "type": "Any"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "_op", "type": "Any"}, {"lineNumber": 192, "col_offset": 22, "nodeName": "_op", "type": "Any"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "scale", "type": "numpy.ndarray"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 204, "col_offset": 24, "nodeName": "mean", "type": "numpy.ndarray"}, {"lineNumber": 204, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "mean", "type": "numpy.ndarray"}, {"lineNumber": 207, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 211, "col_offset": 18, "nodeName": "_op", "type": "Any"}, {"lineNumber": 221, "col_offset": 49, "nodeName": "op", "type": "Any"}, {"lineNumber": 230, "col_offset": 30, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "gamma", "type": "numpy.ndarray"}, {"lineNumber": 234, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 248, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 248, "col_offset": 67, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 248, "col_offset": 71, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 269, "col_offset": 29, "nodeName": "input_shape", "type": "List[Any]"}, {"lineNumber": 285, "col_offset": 21, "nodeName": "idx", "type": "int"}, {"lineNumber": 285, "col_offset": 41, "nodeName": "idx", "type": "int"}, {"lineNumber": 314, "col_offset": 49, "nodeName": "op", "type": "Any"}, {"lineNumber": 330, "col_offset": 79, "nodeName": "op", "type": "Any"}, {"lineNumber": 337, "col_offset": 24, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 338, "col_offset": 18, "nodeName": "_op", "type": "Any"}, {"lineNumber": 378, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 380, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "top", "type": "Any"}, {"lineNumber": 381, "col_offset": 26, "nodeName": "max_pool2d", "type": "Any"}, {"lineNumber": 381, "col_offset": 44, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 383, "col_offset": 20, "nodeName": "out1", "type": "Any"}, {"lineNumber": 384, "col_offset": 20, "nodeName": "out2", "type": "Any"}, {"lineNumber": 387, "col_offset": 28, "nodeName": "pool_type", "type": "Any"}, {"lineNumber": 389, "col_offset": 22, "nodeName": "global_avg_pool2d", "type": "Any"}, {"lineNumber": 389, "col_offset": 47, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 391, "col_offset": 16, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], bool, Any]]"}, {"lineNumber": 392, "col_offset": 22, "nodeName": "avg_pool2d", "type": "Any"}, {"lineNumber": 392, "col_offset": 40, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 394, "col_offset": 18, "nodeName": "error", "type": "Any"}, {"lineNumber": 395, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 421, "col_offset": 49, "nodeName": "op", "type": "Any"}, {"lineNumber": 441, "col_offset": 53, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 444, "col_offset": 79, "nodeName": "op", "type": "Any"}, {"lineNumber": 449, "col_offset": 61, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 455, "col_offset": 24, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 456, "col_offset": 18, "nodeName": "_op", "type": "Any"}, {"lineNumber": 456, "col_offset": 55, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 479, "col_offset": 18, "nodeName": "_op", "type": "Any"}, {"lineNumber": 490, "col_offset": 16, "nodeName": "init_layer_dict", "type": "Any"}, {"lineNumber": 500, "col_offset": 49, "nodeName": "op", "type": "Any"}, {"lineNumber": 517, "col_offset": 79, "nodeName": "op", "type": "Any"}, {"lineNumber": 525, "col_offset": 24, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 526, "col_offset": 18, "nodeName": "_op", "type": "Any"}, {"lineNumber": 538, "col_offset": 52, "nodeName": "slice_params", "type": "Any"}, {"lineNumber": 586, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 586, "col_offset": 28, "nodeName": "axis", "type": "int"}, {"lineNumber": 603, "col_offset": 30, "nodeName": "type", "type": "Any"}, {"lineNumber": 605, "col_offset": 30, "nodeName": "type", "type": "Any"}, {"lineNumber": 605, "col_offset": 41, "nodeName": "include_layer", "type": "Dict[Any, int]"}, {"lineNumber": 610, "col_offset": 16, "nodeName": "unsupported_ops_set", "type": "Set[Any]"}, {"lineNumber": 614, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 615, "col_offset": 18, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 615, "col_offset": 45, "nodeName": "msg", "type": "str"}, {"lineNumber": 622, "col_offset": 52, "nodeName": "bn", "type": "Any"}, {"lineNumber": 626, "col_offset": 29, "nodeName": "bn_weight_bias_blobs", "type": "Any"}, {"lineNumber": 627, "col_offset": 28, "nodeName": "bn_weight_bias_blobs", "type": "Any"}, {"lineNumber": 631, "col_offset": 55, "nodeName": "scale", "type": "Any"}, {"lineNumber": 635, "col_offset": 36, "nodeName": "scale_weight_bias_blobs", "type": "Any"}, {"lineNumber": 637, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 652, "col_offset": 16, "nodeName": "new_layers", "type": "List[Any]"}, {"lineNumber": 658, "col_offset": 40, "nodeName": "pl", "type": "Any"}, {"lineNumber": 663, "col_offset": 17, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 673, "col_offset": 24, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 674, "col_offset": 16, "nodeName": "new_layers", "type": "List[Any]"}, {"lineNumber": 675, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 675, "col_offset": 60, "nodeName": "temp_layers", "type": "Dict[str, Any]"}, {"lineNumber": 679, "col_offset": 20, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 679, "col_offset": 37, "nodeName": "changed_layers", "type": "Dict[Any, Any]"}, {"lineNumber": 682, "col_offset": 16, "nodeName": "new_layers", "type": "List[Any]"}, {"lineNumber": 695, "col_offset": 18, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 695, "col_offset": 35, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 698, "col_offset": 16, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 698, "col_offset": 38, "nodeName": "output_tensors", "type": "Any"}, {"lineNumber": 701, "col_offset": 20, "nodeName": "set_expr", "type": "Any"}, {"lineNumber": 701, "col_offset": 42, "nodeName": "output_tensor", "type": "Any"}, {"lineNumber": 716, "col_offset": 15, "nodeName": "pl", "type": "Any"}, {"lineNumber": 716, "col_offset": 36, "nodeName": "pl", "type": "Any"}, {"lineNumber": 717, "col_offset": 15, "nodeName": "pl", "type": "Any"}, {"lineNumber": 717, "col_offset": 28, "nodeName": "pl", "type": "Any"}, {"lineNumber": 719, "col_offset": 19, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 720, "col_offset": 20, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 720, "col_offset": 35, "nodeName": "changed_top_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 724, "col_offset": 16, "nodeName": "pl", "type": "Any"}, {"lineNumber": 726, "col_offset": 19, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 727, "col_offset": 20, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 727, "col_offset": 35, "nodeName": "changed_top_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 732, "col_offset": 20, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 732, "col_offset": 39, "nodeName": "changed_top_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 745, "col_offset": 23, "nodeName": "pl", "type": "Any"}, {"lineNumber": 746, "col_offset": 32, "nodeName": "pl", "type": "Any"}, {"lineNumber": 754, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 754, "col_offset": 41, "nodeName": "t", "type": "Any"}, {"lineNumber": 812, "col_offset": 52, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 101, "col_offset": 57, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 101, "col_offset": 78, "nodeName": "float32", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 102, "col_offset": 58, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 102, "col_offset": 79, "nodeName": "float32", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "_op", "type": "Any"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "_op", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "_op", "type": "Any"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "_op", "type": "Any"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "eltwise_type", "type": "Any"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "_op", "type": "Any"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "error", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 112, "col_offset": 78, "nodeName": "eltwise_type", "type": "Any"}, {"lineNumber": 150, "col_offset": 48, "nodeName": "conv_params", "type": "Any"}, {"lineNumber": 151, "col_offset": 38, "nodeName": "dilation", "type": "str"}, {"lineNumber": 179, "col_offset": 53, "nodeName": "op", "type": "Any"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 183, "col_offset": 33, "nodeName": "mean", "type": "numpy.ndarray"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 184, "col_offset": 38, "nodeName": "mean", "type": "Any"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 187, "col_offset": 32, "nodeName": "var", "type": "numpy.ndarray"}, {"lineNumber": 188, "col_offset": 22, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 188, "col_offset": 37, "nodeName": "var", "type": "Any"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 196, "col_offset": 35, "nodeName": "weight_bias_blobs", "type": "Any"}, {"lineNumber": 204, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 234, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 378, "col_offset": 22, "nodeName": "_op", "type": "Any"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "op", "type": "Any"}, {"lineNumber": 381, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 381, "col_offset": 55, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], bool, Any]]"}, {"lineNumber": 382, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 382, "col_offset": 25, "nodeName": "top", "type": "Any"}, {"lineNumber": 383, "col_offset": 27, "nodeName": "max_pool2d_with_argmax", "type": "Any"}, {"lineNumber": 383, "col_offset": 57, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 384, "col_offset": 27, "nodeName": "max_pool2d_location", "type": "Any"}, {"lineNumber": 384, "col_offset": 58, "nodeName": "in_expr", "type": "Any"}, {"lineNumber": 385, "col_offset": 27, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 389, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 392, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 392, "col_offset": 51, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], bool, Any]]"}, {"lineNumber": 394, "col_offset": 18, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 490, "col_offset": 16, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 490, "col_offset": 37, "nodeName": "name", "type": "Any"}, {"lineNumber": 603, "col_offset": 30, "nodeName": "pl", "type": "Any"}, {"lineNumber": 605, "col_offset": 30, "nodeName": "pl", "type": "Any"}, {"lineNumber": 605, "col_offset": 55, "nodeName": "type", "type": "Any"}, {"lineNumber": 614, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 614, "col_offset": 27, "nodeName": "unsupported_ops_set", "type": "Set[Any]"}, {"lineNumber": 655, "col_offset": 20, "nodeName": "index", "type": "int"}, {"lineNumber": 656, "col_offset": 20, "nodeName": "type", "type": "Any"}, {"lineNumber": 658, "col_offset": 20, "nodeName": "temp_layers", "type": "Dict[str, Any]"}, {"lineNumber": 661, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 661, "col_offset": 38, "nodeName": "pl", "type": "Any"}, {"lineNumber": 662, "col_offset": 20, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 664, "col_offset": 19, "nodeName": "type", "type": "Any"}, {"lineNumber": 665, "col_offset": 43, "nodeName": "pl", "type": "Any"}, {"lineNumber": 670, "col_offset": 16, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 679, "col_offset": 20, "nodeName": "pl", "type": "Any"}, {"lineNumber": 679, "col_offset": 30, "nodeName": "idx", "type": "int"}, {"lineNumber": 679, "col_offset": 52, "nodeName": "plt", "type": "Any"}, {"lineNumber": 698, "col_offset": 16, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 701, "col_offset": 20, "nodeName": "exp_tab", "type": "Any"}, {"lineNumber": 701, "col_offset": 57, "nodeName": "ret", "type": "Any"}, {"lineNumber": 719, "col_offset": 19, "nodeName": "pl", "type": "Any"}, {"lineNumber": 720, "col_offset": 20, "nodeName": "pl", "type": "Any"}, {"lineNumber": 722, "col_offset": 33, "nodeName": "top", "type": "Any"}, {"lineNumber": 726, "col_offset": 19, "nodeName": "pl", "type": "Any"}, {"lineNumber": 727, "col_offset": 20, "nodeName": "pl", "type": "Any"}, {"lineNumber": 732, "col_offset": 20, "nodeName": "pl", "type": "Any"}, {"lineNumber": 732, "col_offset": 30, "nodeName": "index", "type": "int"}, {"lineNumber": 732, "col_offset": 56, "nodeName": "plt", "type": "Any"}, {"lineNumber": 754, "col_offset": 20, "nodeName": "model_outputs", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 101, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 68, "nodeName": "coeff", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 78, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 102, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 69, "nodeName": "coeff", "type": "List[Any]"}, {"lineNumber": 102, "col_offset": 79, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "h", "type": "Any"}, {"lineNumber": 183, "col_offset": 43, "nodeName": "w", "type": "Any"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 37, "nodeName": "h", "type": "Any"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 188, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 381, "col_offset": 26, "nodeName": "_op", "type": "Any"}, {"lineNumber": 382, "col_offset": 25, "nodeName": "op", "type": "Any"}, {"lineNumber": 383, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 383, "col_offset": 68, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], bool, Any]]"}, {"lineNumber": 384, "col_offset": 27, "nodeName": "vision", "type": "Any"}, {"lineNumber": 384, "col_offset": 69, "nodeName": "params", "type": "Dict[str, Union[Tuple[Any, Any], bool, Any]]"}, {"lineNumber": 385, "col_offset": 27, "nodeName": "_expr", "type": "Any"}, {"lineNumber": 385, "col_offset": 40, "nodeName": "out1", "type": "Any"}, {"lineNumber": 385, "col_offset": 46, "nodeName": "out2", "type": "Any"}, {"lineNumber": 389, "col_offset": 22, "nodeName": "_op", "type": "Any"}, {"lineNumber": 392, "col_offset": 22, "nodeName": "_op", "type": "Any"}, {"lineNumber": 396, "col_offset": 20, "nodeName": "pool_type_dict", "type": "List[str]"}, {"lineNumber": 490, "col_offset": 37, "nodeName": "op", "type": "Any"}, {"lineNumber": 605, "col_offset": 55, "nodeName": "pl", "type": "Any"}, {"lineNumber": 661, "col_offset": 20, "nodeName": "new_layers", "type": "List[Any]"}, {"lineNumber": 662, "col_offset": 20, "nodeName": "temp_layers", "type": "Dict[str, Any]"}, {"lineNumber": 665, "col_offset": 20, "nodeName": "temp_layers", "type": "Dict[str, Any]"}, {"lineNumber": 667, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 667, "col_offset": 38, "nodeName": "pl", "type": "Any"}, {"lineNumber": 668, "col_offset": 20, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 670, "col_offset": 16, "nodeName": "temp_layers", "type": "Dict[str, Any]"}, {"lineNumber": 675, "col_offset": 31, "nodeName": "temp_layers", "type": "Dict[str, Any]"}, {"lineNumber": 701, "col_offset": 20, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 701, "col_offset": 61, "nodeName": "idx", "type": "int"}, {"lineNumber": 720, "col_offset": 52, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 722, "col_offset": 33, "nodeName": "pl", "type": "Any"}, {"lineNumber": 727, "col_offset": 52, "nodeName": "bottom", "type": "Any"}, {"lineNumber": 383, "col_offset": 27, "nodeName": "_op", "type": "Any"}, {"lineNumber": 384, "col_offset": 27, "nodeName": "_op", "type": "Any"}, {"lineNumber": 396, "col_offset": 35, "nodeName": "pool_type", "type": "Any"}, {"lineNumber": 655, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 655, "col_offset": 33, "nodeName": "predict_layer", "type": "Any"}, {"lineNumber": 656, "col_offset": 20, "nodeName": "predict_layer", "type": "Any"}, {"lineNumber": 664, "col_offset": 19, "nodeName": "predict_layer", "type": "Any"}, {"lineNumber": 667, "col_offset": 20, "nodeName": "new_layers", "type": "List[Any]"}, {"lineNumber": 668, "col_offset": 20, "nodeName": "temp_layers", "type": "Dict[str, Any]"}, {"lineNumber": 720, "col_offset": 52, "nodeName": "pl", "type": "Any"}, {"lineNumber": 727, "col_offset": 52, "nodeName": "pl", "type": "Any"}, {"lineNumber": 655, "col_offset": 33, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 656, "col_offset": 20, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 664, "col_offset": 19, "nodeName": "self", "type": "OperatorConverter"}, {"lineNumber": 656, "col_offset": 39, "nodeName": "index", "type": "int"}, {"lineNumber": 664, "col_offset": 38, "nodeName": "index", "type": "int"}]