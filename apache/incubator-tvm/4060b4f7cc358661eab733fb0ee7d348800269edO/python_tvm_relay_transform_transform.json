[{"lineNumber": 34, "col_offset": 0, "nodeName": "build_config", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "InferType", "type": "Callable[[], Any]"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "FoldScaleAxis", "type": "Callable[[], Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "BackwardFoldScaleAxis", "type": "Callable[[], Any]"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "RemoveUnusedFunctions", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 0, "nodeName": "ForwardFoldScaleAxis", "type": "Callable[[], Any]"}, {"lineNumber": 172, "col_offset": 0, "nodeName": "SimplifyInference", "type": "Callable[[], Any]"}, {"lineNumber": 188, "col_offset": 0, "nodeName": "FastMath", "type": "Callable[[], Any]"}, {"lineNumber": 199, "col_offset": 0, "nodeName": "CanonicalizeOps", "type": "Callable[[], Any]"}, {"lineNumber": 212, "col_offset": 0, "nodeName": "DeadCodeElimination", "type": "Callable[..., Any]"}, {"lineNumber": 228, "col_offset": 0, "nodeName": "LazyGradientInit", "type": "Callable[[], Any]"}, {"lineNumber": 243, "col_offset": 0, "nodeName": "FoldConstant", "type": "Callable[[], Any]"}, {"lineNumber": 254, "col_offset": 0, "nodeName": "FuseOps", "type": "Callable[..., Any]"}, {"lineNumber": 271, "col_offset": 0, "nodeName": "DefuseOps", "type": "Callable[[], Any]"}, {"lineNumber": 283, "col_offset": 0, "nodeName": "CombineParallelConv2D", "type": "Callable[..., Any]"}, {"lineNumber": 300, "col_offset": 0, "nodeName": "CombineParallelDense", "type": "Callable[..., Any]"}, {"lineNumber": 344, "col_offset": 0, "nodeName": "CombineParallelBatchMatmul", "type": "Callable[..., Any]"}, {"lineNumber": 378, "col_offset": 0, "nodeName": "BatchingOps", "type": "Callable[[], Any]"}, {"lineNumber": 391, "col_offset": 0, "nodeName": "AlterOpLayout", "type": "Callable[[], Any]"}, {"lineNumber": 432, "col_offset": 0, "nodeName": "ConvertLayout", "type": "Callable[[Any], Any]"}, {"lineNumber": 463, "col_offset": 0, "nodeName": "Legalize", "type": "Callable[..., Any]"}, {"lineNumber": 483, "col_offset": 0, "nodeName": "MergeComposite", "type": "Callable[[Any], Any]"}, {"lineNumber": 519, "col_offset": 0, "nodeName": "MergeCompilerRegions", "type": "Callable[[], Any]"}, {"lineNumber": 530, "col_offset": 0, "nodeName": "RewriteAnnotatedOps", "type": "Callable[[Any], Any]"}, {"lineNumber": 551, "col_offset": 0, "nodeName": "ToANormalForm", "type": "Callable[[], Any]"}, {"lineNumber": 565, "col_offset": 0, "nodeName": "ToANormalFormExpr", "type": "Callable[[Any], Any]"}, {"lineNumber": 581, "col_offset": 0, "nodeName": "ToBasicBlockNormalForm", "type": "Callable[[], Any]"}, {"lineNumber": 597, "col_offset": 0, "nodeName": "ToCPS", "type": "Callable[..., Any]"}, {"lineNumber": 611, "col_offset": 0, "nodeName": "EtaExpand", "type": "Callable[..., Any]"}, {"lineNumber": 630, "col_offset": 0, "nodeName": "ToGraphNormalForm", "type": "Callable[[], Any]"}, {"lineNumber": 641, "col_offset": 0, "nodeName": "EliminateCommonSubexpr", "type": "Callable[..., Any]"}, {"lineNumber": 658, "col_offset": 0, "nodeName": "PartialEvaluate", "type": "Callable[[], Any]"}, {"lineNumber": 676, "col_offset": 0, "nodeName": "CanonicalizeCast", "type": "Callable[[], Any]"}, {"lineNumber": 688, "col_offset": 0, "nodeName": "LambdaLift", "type": "Callable[[], Any]"}, {"lineNumber": 700, "col_offset": 0, "nodeName": "PartitionGraph", "type": "Callable[[], Any]"}, {"lineNumber": 712, "col_offset": 0, "nodeName": "AnnotateTarget", "type": "Callable[[Any], Any]"}, {"lineNumber": 732, "col_offset": 0, "nodeName": "DynamicToStatic", "type": "Callable[[], Any]"}, {"lineNumber": 743, "col_offset": 0, "nodeName": "Inline", "type": "Callable[[], Any]"}, {"lineNumber": 756, "col_offset": 0, "nodeName": "gradient", "type": "Callable[..., Any]"}, {"lineNumber": 787, "col_offset": 0, "nodeName": "Defunctionalization", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 815, "col_offset": 0, "nodeName": "to_cps", "type": "Callable[..., Any]"}, {"lineNumber": 838, "col_offset": 0, "nodeName": "un_cps", "type": "Callable[[Any], Any]"}, {"lineNumber": 858, "col_offset": 0, "nodeName": "_wrap_class_function_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 887, "col_offset": 0, "nodeName": "function_pass", "type": "Callable[..., Any]"}, {"lineNumber": 1027, "col_offset": 0, "nodeName": "DenseToSparse", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1049, "col_offset": 0, "nodeName": "SimplifyFCTranspose", "type": "Callable[[Any], Any]"}, {"lineNumber": 1068, "col_offset": 0, "nodeName": "SimplifyExpr", "type": "Callable[[], Any]"}, {"lineNumber": 1080, "col_offset": 0, "nodeName": "AnnotateSpans", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "Pass", "type": "Any"}, {"lineNumber": 405, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "transform", "type": "Any"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "current", "type": "None"}, {"lineNumber": 502, "col_offset": 4, "nodeName": "pattern_names", "type": "List[Any]"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "patterns", "type": "List[Any]"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "checks", "type": "List[Union[Any, Callable[[Any], Any]]]"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "tup", "type": "Any"}, {"lineNumber": 505, "col_offset": 15, "nodeName": "pattern_table", "type": "Any"}, {"lineNumber": 834, "col_offset": 4, "nodeName": "use_mod", "type": "Any"}, {"lineNumber": 861, "col_offset": 25, "nodeName": "FunctionPass", "type": "Any"}, {"lineNumber": 881, "col_offset": 4, "nodeName": "__name__", "type": "str"}, {"lineNumber": 881, "col_offset": 30, "nodeName": "__name__", "type": "str"}, {"lineNumber": 882, "col_offset": 4, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 882, "col_offset": 29, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 883, "col_offset": 4, "nodeName": "__module__", "type": "str"}, {"lineNumber": 883, "col_offset": 32, "nodeName": "__module__", "type": "str"}, {"lineNumber": 884, "col_offset": 11, "nodeName": "PyFunctionPass", "type": "Type[Any]"}, {"lineNumber": 968, "col_offset": 4, "nodeName": "required", "type": "List[nothing]"}, {"lineNumber": 982, "col_offset": 7, "nodeName": "pass_func", "type": "None"}, {"lineNumber": 984, "col_offset": 11, "nodeName": "create_function_pass", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "PassContext", "type": "Any"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "opt_level", "type": "Any"}, {"lineNumber": 81, "col_offset": 48, "nodeName": "required_pass", "type": "Any"}, {"lineNumber": 81, "col_offset": 63, "nodeName": "disabled_pass", "type": "Any"}, {"lineNumber": 81, "col_offset": 78, "nodeName": "trace", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "ir", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "FoldScaleAxis", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "BackwardFoldScaleAxis", "type": "Any"}, {"lineNumber": 150, "col_offset": 7, "nodeName": "entry_functions", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "entry_functions", "type": "List[str]"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "RemoveUnusedFunctions", "type": "Any"}, {"lineNumber": 152, "col_offset": 42, "nodeName": "entry_functions", "type": "Union[Any, List[str]]"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "ForwardFoldScaleAxis", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "SimplifyInference", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "FastMath", "type": "Any"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "CanonicalizeOps", "type": "Any"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "DeadCodeElimination", "type": "Any"}, {"lineNumber": 225, "col_offset": 40, "nodeName": "inline_once", "type": "Any"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "LazyGradientInit", "type": "Any"}, {"lineNumber": 251, "col_offset": 11, "nodeName": "FoldConstant", "type": "Any"}, {"lineNumber": 268, "col_offset": 11, "nodeName": "FuseOps", "type": "Any"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "fuse_opt_level", "type": "Any"}, {"lineNumber": 280, "col_offset": 11, "nodeName": "DefuseOps", "type": "Any"}, {"lineNumber": 297, "col_offset": 11, "nodeName": "CombineParallelConv2D", "type": "Any"}, {"lineNumber": 297, "col_offset": 42, "nodeName": "min_num_branches", "type": "int"}, {"lineNumber": 341, "col_offset": 11, "nodeName": "CombineParallelDense", "type": "Any"}, {"lineNumber": 341, "col_offset": 41, "nodeName": "min_num_branches", "type": "int"}, {"lineNumber": 341, "col_offset": 59, "nodeName": "to_batch", "type": "bool"}, {"lineNumber": 375, "col_offset": 11, "nodeName": "CombineParallelBatchMatmul", "type": "Any"}, {"lineNumber": 375, "col_offset": 47, "nodeName": "min_num_branches", "type": "int"}, {"lineNumber": 386, "col_offset": 11, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 402, "col_offset": 11, "nodeName": "AlterOpLayout", "type": "Any"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "skip_counter", "type": "int"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "skip_layers", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "skip", "type": "bool"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "skip_counter", "type": "int"}, {"lineNumber": 417, "col_offset": 15, "nodeName": "skip", "type": "bool"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "skip_counter", "type": "int"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "skip_layers", "type": "List[nothing]"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "_old_manager", "type": "Any"}, {"lineNumber": 424, "col_offset": 28, "nodeName": "current", "type": "Any"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "current", "type": "LayoutConfig"}, {"lineNumber": 425, "col_offset": 31, "nodeName": "self", "type": "LayoutConfig"}, {"lineNumber": 426, "col_offset": 15, "nodeName": "self", "type": "LayoutConfig"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "current", "type": "Any"}, {"lineNumber": 429, "col_offset": 31, "nodeName": "_old_manager", "type": "Any"}, {"lineNumber": 460, "col_offset": 11, "nodeName": "ConvertLayout", "type": "Any"}, {"lineNumber": 460, "col_offset": 34, "nodeName": "desired_layouts", "type": "Any"}, {"lineNumber": 480, "col_offset": 11, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 480, "col_offset": 29, "nodeName": "legalize_map_attr_name", "type": "Any"}, {"lineNumber": 516, "col_offset": 11, "nodeName": "MergeComposite", "type": "Any"}, {"lineNumber": 516, "col_offset": 35, "nodeName": "pattern_names", "type": "List[Any]"}, {"lineNumber": 516, "col_offset": 50, "nodeName": "patterns", "type": "List[Any]"}, {"lineNumber": 527, "col_offset": 11, "nodeName": "MergeCompilerRegions", "type": "Any"}, {"lineNumber": 548, "col_offset": 11, "nodeName": "RewriteDeviceAnnotation", "type": "Any"}, {"lineNumber": 548, "col_offset": 44, "nodeName": "fallback_device", "type": "Any"}, {"lineNumber": 562, "col_offset": 11, "nodeName": "ToANormalForm", "type": "Any"}, {"lineNumber": 578, "col_offset": 11, "nodeName": "ToANormalFormExpr", "type": "Any"}, {"lineNumber": 578, "col_offset": 38, "nodeName": "e", "type": "Any"}, {"lineNumber": 594, "col_offset": 11, "nodeName": "ToBasicBlockNormalForm", "type": "Any"}, {"lineNumber": 608, "col_offset": 11, "nodeName": "to_cps", "type": "Any"}, {"lineNumber": 608, "col_offset": 27, "nodeName": "expr", "type": "Any"}, {"lineNumber": 608, "col_offset": 33, "nodeName": "mod", "type": "Any"}, {"lineNumber": 627, "col_offset": 11, "nodeName": "EtaExpand", "type": "Any"}, {"lineNumber": 627, "col_offset": 30, "nodeName": "expand_constructor", "type": "Any"}, {"lineNumber": 627, "col_offset": 50, "nodeName": "expand_global_var", "type": "Any"}, {"lineNumber": 638, "col_offset": 11, "nodeName": "ToGraphNormalForm", "type": "Any"}, {"lineNumber": 655, "col_offset": 11, "nodeName": "EliminateCommonSubexpr", "type": "Any"}, {"lineNumber": 655, "col_offset": 43, "nodeName": "fskip", "type": "Any"}, {"lineNumber": 673, "col_offset": 11, "nodeName": "PartialEvaluate", "type": "Any"}, {"lineNumber": 685, "col_offset": 11, "nodeName": "CanonicalizeCast", "type": "Any"}, {"lineNumber": 697, "col_offset": 11, "nodeName": "LambdaLift", "type": "Any"}, {"lineNumber": 709, "col_offset": 11, "nodeName": "PartitionGraph", "type": "Any"}, {"lineNumber": 727, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 727, "col_offset": 18, "nodeName": "targets", "type": "Any"}, {"lineNumber": 727, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 729, "col_offset": 11, "nodeName": "AnnotateTarget", "type": "Any"}, {"lineNumber": 740, "col_offset": 11, "nodeName": "DynamicToStatic", "type": "Any"}, {"lineNumber": 753, "col_offset": 11, "nodeName": "Inline", "type": "Any"}, {"lineNumber": 780, "col_offset": 7, "nodeName": "mode", "type": "Any"}, {"lineNumber": 782, "col_offset": 7, "nodeName": "mode", "type": "Any"}, {"lineNumber": 784, "col_offset": 10, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 812, "col_offset": 11, "nodeName": "Defunctionalization", "type": "Any"}, {"lineNumber": 812, "col_offset": 40, "nodeName": "func", "type": "Any"}, {"lineNumber": 812, "col_offset": 46, "nodeName": "mod", "type": "Any"}, {"lineNumber": 834, "col_offset": 14, "nodeName": "mod", "type": "Any"}, {"lineNumber": 835, "col_offset": 11, "nodeName": "to_cps", "type": "Any"}, {"lineNumber": 835, "col_offset": 27, "nodeName": "func", "type": "Any"}, {"lineNumber": 835, "col_offset": 33, "nodeName": "use_mod", "type": "Any"}, {"lineNumber": 855, "col_offset": 11, "nodeName": "un_cps", "type": "Any"}, {"lineNumber": 855, "col_offset": 27, "nodeName": "func", "type": "Any"}, {"lineNumber": 880, "col_offset": 4, "nodeName": "update_wrapper", "type": "Callable[..., Callable[..., Any]]"}, {"lineNumber": 880, "col_offset": 29, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 880, "col_offset": 54, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 881, "col_offset": 4, "nodeName": "PyFunctionPass", "type": "Type[Any]"}, {"lineNumber": 881, "col_offset": 30, "nodeName": "pass_cls", "type": "Type[Any]"}, {"lineNumber": 882, "col_offset": 4, "nodeName": "PyFunctionPass", "type": "Type[Any]"}, {"lineNumber": 882, "col_offset": 29, "nodeName": "pass_cls", "type": "Type[Any]"}, {"lineNumber": 883, "col_offset": 4, "nodeName": "PyFunctionPass", "type": "Type[Any]"}, {"lineNumber": 883, "col_offset": 32, "nodeName": "pass_cls", "type": "Type[Any]"}, {"lineNumber": 965, "col_offset": 7, "nodeName": "opt_level", "type": "int"}, {"lineNumber": 968, "col_offset": 27, "nodeName": "required", "type": "None"}, {"lineNumber": 968, "col_offset": 15, "nodeName": "required", "type": "Any"}, {"lineNumber": 974, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 975, "col_offset": 8, "nodeName": "info", "type": "Any"}, {"lineNumber": 1008, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 1008, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 1009, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1009, "col_offset": 26, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1012, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 1013, "col_offset": 8, "nodeName": "change_batch", "type": "Any"}, {"lineNumber": 1013, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 1015, "col_offset": 33, "nodeName": "ExprMutator", "type": "Any"}, {"lineNumber": 1046, "col_offset": 11, "nodeName": "DenseToSparse", "type": "Any"}, {"lineNumber": 1046, "col_offset": 34, "nodeName": "weight_name", "type": "Any"}, {"lineNumber": 1046, "col_offset": 47, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 1065, "col_offset": 11, "nodeName": "SimplifyFCTranspose", "type": "Any"}, {"lineNumber": 1065, "col_offset": 40, "nodeName": "target_weight_name", "type": "Any"}, {"lineNumber": 1077, "col_offset": 11, "nodeName": "SimplifyExpr", "type": "Any"}, {"lineNumber": 1091, "col_offset": 11, "nodeName": "AnnotateSpans", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "warnings", "type": "module"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "transform", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 251, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 268, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 280, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 297, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 341, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 375, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 386, "col_offset": 11, "nodeName": "transform", "type": "Any"}, {"lineNumber": 402, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "self", "type": "LayoutConfig"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "self", "type": "LayoutConfig"}, {"lineNumber": 412, "col_offset": 27, "nodeName": "skip_layers", "type": "Any"}, {"lineNumber": 415, "col_offset": 15, "nodeName": "skip_counter", "type": "int"}, {"lineNumber": 415, "col_offset": 36, "nodeName": "skip_layers", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "self", "type": "LayoutConfig"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "self", "type": "LayoutConfig"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "self", "type": "LayoutConfig"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "self", "type": "LayoutConfig"}, {"lineNumber": 424, "col_offset": 28, "nodeName": "LayoutConfig", "type": "Type[LayoutConfig]"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "LayoutConfig", "type": "Type[LayoutConfig]"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "LayoutConfig", "type": "Type[LayoutConfig]"}, {"lineNumber": 429, "col_offset": 31, "nodeName": "self", "type": "LayoutConfig"}, {"lineNumber": 460, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 480, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 507, "col_offset": 36, "nodeName": "tup", "type": "Any"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "check", "type": "Callable[[Any], Any]"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 512, "col_offset": 29, "nodeName": "pattern_name", "type": "Any"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 513, "col_offset": 24, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 514, "col_offset": 22, "nodeName": "check", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 516, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 516, "col_offset": 61, "nodeName": "checks", "type": "List[Union[Any, Callable[[Any], Any]]]"}, {"lineNumber": 527, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 548, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 562, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 578, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 594, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 608, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 627, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 638, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 655, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 673, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 685, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 697, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 709, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 728, "col_offset": 19, "nodeName": "targets", "type": "Any"}, {"lineNumber": 729, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 740, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 753, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 781, "col_offset": 15, "nodeName": "first_order_gradient", "type": "Any"}, {"lineNumber": 781, "col_offset": 45, "nodeName": "expr", "type": "Any"}, {"lineNumber": 781, "col_offset": 51, "nodeName": "mod", "type": "Any"}, {"lineNumber": 783, "col_offset": 15, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 783, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 783, "col_offset": 39, "nodeName": "mod", "type": "Any"}, {"lineNumber": 812, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 834, "col_offset": 21, "nodeName": "mod", "type": "Any"}, {"lineNumber": 834, "col_offset": 42, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 835, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 855, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 866, "col_offset": 12, "nodeName": "handle", "type": "None"}, {"lineNumber": 867, "col_offset": 12, "nodeName": "inst", "type": "Any"}, {"lineNumber": 874, "col_offset": 12, "nodeName": "_inst", "type": "Any"}, {"lineNumber": 874, "col_offset": 25, "nodeName": "inst", "type": "Any"}, {"lineNumber": 880, "col_offset": 4, "nodeName": "functools", "type": "module"}, {"lineNumber": 880, "col_offset": 29, "nodeName": "PyFunctionPass", "type": "Type[Any]"}, {"lineNumber": 880, "col_offset": 54, "nodeName": "pass_cls", "type": "Type[Any]"}, {"lineNumber": 966, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 969, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 969, "col_offset": 22, "nodeName": "required", "type": "List[nothing]"}, {"lineNumber": 970, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 974, "col_offset": 24, "nodeName": "name", "type": "None"}, {"lineNumber": 974, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 974, "col_offset": 34, "nodeName": "__name__", "type": "str"}, {"lineNumber": 975, "col_offset": 15, "nodeName": "PassInfo", "type": "Any"}, {"lineNumber": 975, "col_offset": 38, "nodeName": "opt_level", "type": "int"}, {"lineNumber": 975, "col_offset": 49, "nodeName": "fname", "type": "str"}, {"lineNumber": 975, "col_offset": 56, "nodeName": "required", "type": "List[nothing]"}, {"lineNumber": 976, "col_offset": 11, "nodeName": "isclass", "type": "Callable[[object], bool]"}, {"lineNumber": 976, "col_offset": 27, "nodeName": "pass_arg", "type": "Type[Any]"}, {"lineNumber": 980, "col_offset": 15, "nodeName": "MakeFunctionPass", "type": "Any"}, {"lineNumber": 980, "col_offset": 41, "nodeName": "pass_arg", "type": "Type[Any]"}, {"lineNumber": 980, "col_offset": 51, "nodeName": "info", "type": "Any"}, {"lineNumber": 983, "col_offset": 15, "nodeName": "create_function_pass", "type": "Callable[[Any], Any]"}, {"lineNumber": 983, "col_offset": 36, "nodeName": "pass_func", "type": "Any"}, {"lineNumber": 1008, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1009, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1012, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 1012, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 1012, "col_offset": 43, "nodeName": "body", "type": "Any"}, {"lineNumber": 1012, "col_offset": 60, "nodeName": "type_params", "type": "Any"}, {"lineNumber": 1012, "col_offset": 78, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 1015, "col_offset": 33, "nodeName": "relay", "type": "Any"}, {"lineNumber": 1024, "col_offset": 15, "nodeName": "visit", "type": "Any"}, {"lineNumber": 1024, "col_offset": 42, "nodeName": "func", "type": "Any"}, {"lineNumber": 1046, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 1065, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 1077, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 1091, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 386, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 387, "col_offset": 9, "nodeName": "CombineParallelConv2D", "type": "Callable[..., Any]"}, {"lineNumber": 387, "col_offset": 34, "nodeName": "CombineParallelDense", "type": "Callable[..., Any]"}, {"lineNumber": 387, "col_offset": 58, "nodeName": "CombineParallelBatchMatmul", "type": "Callable[..., Any]"}, {"lineNumber": 412, "col_offset": 42, "nodeName": "skip_layers", "type": "Any"}, {"lineNumber": 415, "col_offset": 15, "nodeName": "self", "type": "LayoutConfig"}, {"lineNumber": 415, "col_offset": 36, "nodeName": "self", "type": "LayoutConfig"}, {"lineNumber": 506, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 506, "col_offset": 15, "nodeName": "tup", "type": "Any"}, {"lineNumber": 507, "col_offset": 12, "nodeName": "pattern_name", "type": "Any"}, {"lineNumber": 507, "col_offset": 26, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 510, "col_offset": 43, "nodeName": "tup", "type": "Any"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "pattern_names", "type": "List[Any]"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "patterns", "type": "List[Any]"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "checks", "type": "List[Union[Any, Callable[[Any], Any]]]"}, {"lineNumber": 729, "col_offset": 36, "nodeName": "String", "type": "Any"}, {"lineNumber": 729, "col_offset": 65, "nodeName": "t", "type": "Any"}, {"lineNumber": 729, "col_offset": 72, "nodeName": "t", "type": "Any"}, {"lineNumber": 729, "col_offset": 77, "nodeName": "targets", "type": "Union[Any, List[Any]]"}, {"lineNumber": 781, "col_offset": 15, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 783, "col_offset": 15, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 834, "col_offset": 42, "nodeName": "ir", "type": "Any"}, {"lineNumber": 866, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 867, "col_offset": 19, "nodeName": "pass_cls", "type": "Type[Any]"}, {"lineNumber": 873, "col_offset": 12, "nodeName": "__init_handle_by_constructor__", "type": "Any"}, {"lineNumber": 873, "col_offset": 48, "nodeName": "MakeFunctionPass", "type": "Any"}, {"lineNumber": 873, "col_offset": 75, "nodeName": "_pass_func", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 873, "col_offset": 87, "nodeName": "pass_info", "type": "Any"}, {"lineNumber": 874, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 878, "col_offset": 19, "nodeName": "__getattribute__", "type": "Callable[[Any], Any]"}, {"lineNumber": 878, "col_offset": 47, "nodeName": "name", "type": "Any"}, {"lineNumber": 969, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 969, "col_offset": 39, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 974, "col_offset": 34, "nodeName": "pass_arg", "type": "Type[Any]"}, {"lineNumber": 975, "col_offset": 15, "nodeName": "transform", "type": "Any"}, {"lineNumber": 976, "col_offset": 11, "nodeName": "inspect", "type": "module"}, {"lineNumber": 977, "col_offset": 19, "nodeName": "_wrap_class_function_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 977, "col_offset": 45, "nodeName": "pass_arg", "type": "Type[Any]"}, {"lineNumber": 977, "col_offset": 55, "nodeName": "info", "type": "Any"}, {"lineNumber": 978, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 978, "col_offset": 26, "nodeName": "pass_arg", "type": "Type[Any]"}, {"lineNumber": 979, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 980, "col_offset": 15, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 1012, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 1012, "col_offset": 30, "nodeName": "func", "type": "Any"}, {"lineNumber": 1012, "col_offset": 43, "nodeName": "func", "type": "Any"}, {"lineNumber": 1012, "col_offset": 60, "nodeName": "func", "type": "Any"}, {"lineNumber": 1012, "col_offset": 78, "nodeName": "func", "type": "Any"}, {"lineNumber": 1015, "col_offset": 33, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 1022, "col_offset": 23, "nodeName": "var", "type": "Any"}, {"lineNumber": 509, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 509, "col_offset": 17, "nodeName": "tup", "type": "Any"}, {"lineNumber": 510, "col_offset": 12, "nodeName": "pattern_name", "type": "Any"}, {"lineNumber": 510, "col_offset": 26, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 510, "col_offset": 35, "nodeName": "check", "type": "Any"}, {"lineNumber": 729, "col_offset": 36, "nodeName": "container", "type": "Any"}, {"lineNumber": 834, "col_offset": 42, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 867, "col_offset": 29, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 867, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 871, "col_offset": 23, "nodeName": "transform_function", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 871, "col_offset": 47, "nodeName": "func", "type": "Any"}, {"lineNumber": 871, "col_offset": 53, "nodeName": "mod", "type": "Any"}, {"lineNumber": 871, "col_offset": 58, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 873, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 873, "col_offset": 48, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 878, "col_offset": 19, "nodeName": "_inst", "type": "Any"}, {"lineNumber": 975, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 978, "col_offset": 37, "nodeName": "FunctionType", "type": "Type[Callable[..., Any]]"}, {"lineNumber": 978, "col_offset": 57, "nodeName": "LambdaType", "type": "Type[Callable[..., Any]]"}, {"lineNumber": 1017, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 1017, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 1018, "col_offset": 20, "nodeName": "ty", "type": "Any"}, {"lineNumber": 1018, "col_offset": 25, "nodeName": "type_annotation", "type": "Any"}, {"lineNumber": 1019, "col_offset": 20, "nodeName": "new_shape", "type": "List[Any]"}, {"lineNumber": 1020, "col_offset": 56, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1024, "col_offset": 15, "nodeName": "ChangeBatchMutator", "type": "Type[Any]"}, {"lineNumber": 729, "col_offset": 36, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 871, "col_offset": 23, "nodeName": "inst", "type": "Any"}, {"lineNumber": 878, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 978, "col_offset": 37, "nodeName": "types", "type": "module"}, {"lineNumber": 978, "col_offset": 57, "nodeName": "types", "type": "module"}, {"lineNumber": 1017, "col_offset": 26, "nodeName": "change_batch", "type": "Any"}, {"lineNumber": 1018, "col_offset": 25, "nodeName": "var", "type": "Any"}, {"lineNumber": 1019, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1019, "col_offset": 37, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1020, "col_offset": 20, "nodeName": "new_shape", "type": "List[Any]"}, {"lineNumber": 1020, "col_offset": 56, "nodeName": "change_batch", "type": "Any"}, {"lineNumber": 1021, "col_offset": 27, "nodeName": "Var", "type": "Any"}, {"lineNumber": 1021, "col_offset": 37, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 729, "col_offset": 36, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 1019, "col_offset": 37, "nodeName": "ty", "type": "Any"}, {"lineNumber": 1021, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 1021, "col_offset": 37, "nodeName": "var", "type": "Any"}, {"lineNumber": 1021, "col_offset": 52, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 1021, "col_offset": 69, "nodeName": "new_shape", "type": "List[Any]"}, {"lineNumber": 1021, "col_offset": 80, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1020, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 1021, "col_offset": 52, "nodeName": "relay", "type": "Any"}, {"lineNumber": 1021, "col_offset": 80, "nodeName": "ty", "type": "Any"}, {"lineNumber": 1020, "col_offset": 30, "nodeName": "change_batch", "type": "Any"}, {"lineNumber": 1020, "col_offset": 48, "nodeName": "var", "type": "Any"}]