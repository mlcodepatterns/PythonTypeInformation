[{"lineNumber": 87, "col_offset": 0, "nodeName": "_get_qnn_params", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 269, "col_offset": 0, "nodeName": "test_conv2d", "type": "Callable[[], Any]"}, {"lineNumber": 337, "col_offset": 0, "nodeName": "test_codegen_conv2d", "type": "Callable[[], Any]"}, {"lineNumber": 383, "col_offset": 0, "nodeName": "test_qnn_conv2d", "type": "Callable[[], Any]"}, {"lineNumber": 469, "col_offset": 0, "nodeName": "test_codegen_qnn_conv2d", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 52, "col_offset": 7, "nodeName": "has_pad", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "weight_shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "weights", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 7, "nodeName": "has_bias", "type": "Any"}, {"lineNumber": 82, "col_offset": 7, "nodeName": "has_activation", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "input_max", "type": "float"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "input_min", "type": "float"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "kernel_max", "type": "float"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "kernel_min", "type": "float"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "output_max", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "output_min", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "output_sc", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "output_zp", "type": "int"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 129, "col_offset": 7, "nodeName": "has_pad", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "weight_shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "weights", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 158, "col_offset": 7, "nodeName": "has_bias", "type": "Any"}, {"lineNumber": 163, "col_offset": 7, "nodeName": "has_activation", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "weight_shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "output_height", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "output_width", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "output_shape", "type": "Tuple[int, int, int, Any]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "out_dtype", "type": "str"}, {"lineNumber": 218, "col_offset": 7, "nodeName": "has_activation", "type": "Any"}, {"lineNumber": 243, "col_offset": 7, "nodeName": "has_bias", "type": "Any"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "input_idx", "type": "int"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "inputs", "type": "List[Union[Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]]]], str]], Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]], str]], List[List[int]], str]]]]"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "device", "type": "Any"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "kernel_hs", "type": "List[int]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "kernel_ws", "type": "List[int]"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "pad", "type": "List[Tuple[int, int]]"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "strides", "type": "List[Tuple[int, int]]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "dilation", "type": "List[Tuple[int, int]]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "input_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "dtype", "type": "str"}, {"lineNumber": 298, "col_offset": 92, "nodeName": "trials", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "kernel_hs", "type": "List[int]"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "kernel_ws", "type": "List[int]"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "pad", "type": "List[Tuple[int, int]]"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "strides", "type": "List[Tuple[int, int]]"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "dilation", "type": "List[Tuple[int, int]]"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "input_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "dtype", "type": "str"}, {"lineNumber": 363, "col_offset": 92, "nodeName": "trials", "type": "Any"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "device", "type": "Any"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "kernel_hs", "type": "List[int]"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "kernel_ws", "type": "List[int]"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "pad", "type": "List[Tuple[int, int]]"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "strides", "type": "List[Tuple[int, int]]"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "dilation", "type": "List[Tuple[int, int]]"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "input_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "dtype", "type": "str"}, {"lineNumber": 412, "col_offset": 92, "nodeName": "trials", "type": "Any"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "kernel_hs", "type": "List[int]"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "kernel_ws", "type": "List[int]"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "pad", "type": "List[Tuple[int, int]]"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "strides", "type": "List[Tuple[int, int]]"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "dilation", "type": "List[Tuple[int, int]]"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "input_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "dtype", "type": "str"}, {"lineNumber": 493, "col_offset": 92, "nodeName": "trials", "type": "Any"}, {"lineNumber": 527, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "p", "type": "Tuple[Tuple[bool, bool], Tuple[Any, Any], Tuple[Any, Any], Tuple[bool, bool]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "padding", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, Any, Any, Any]"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 60, "col_offset": 60, "nodeName": "channels", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "const", "type": "Any"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "w", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "dtype", "type": "str"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "w", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "biasc", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "input_sc", "type": "float"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "input_zp", "type": "int"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "kernel_sc", "type": "float"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "kernel_zp", "type": "int"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "max", "type": "Callable"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "output_limits", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "min", "type": "Callable"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "output_limits", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "output_zp", "type": "int"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "output_sc", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "p", "type": "Tuple[Tuple[bool, bool], Tuple[Any, Any], Tuple[Any, Any], Tuple[bool, bool]]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "padding", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, Any, Any, Any]"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 137, "col_offset": 60, "nodeName": "channels", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "const", "type": "Any"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "w", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "dtype", "type": "str"}, {"lineNumber": 140, "col_offset": 10, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 157, "col_offset": 19, "nodeName": "w", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "biasc", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 165, "col_offset": 10, "nodeName": "requantize", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "req", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "padding", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "channels", "type": "Any"}, {"lineNumber": 191, "col_offset": 30, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 191, "col_offset": 40, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 194, "col_offset": 62, "nodeName": "channels", "type": "Any"}, {"lineNumber": 231, "col_offset": 7, "nodeName": "dtype", "type": "str"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "param_dtype", "type": "str"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "bias_dtype", "type": "str"}, {"lineNumber": 254, "col_offset": 7, "nodeName": "dtype", "type": "str"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "param_dtype", "type": "str"}, {"lineNumber": 261, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "input_idx", "type": "int"}, {"lineNumber": 264, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "node", "type": "Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]], str]], List[List[int]], str]]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "load", "type": "Any"}, {"lineNumber": 272, "col_offset": 7, "nodeName": "skip_runtime_test", "type": "Any"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "Device", "type": "Any"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 294, "col_offset": 13, "nodeName": "generate_trials", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 298, "col_offset": 18, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 298, "col_offset": 28, "nodeName": "pad", "type": "Any"}, {"lineNumber": 298, "col_offset": 33, "nodeName": "stride", "type": "Any"}, {"lineNumber": 298, "col_offset": 41, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 298, "col_offset": 51, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 298, "col_offset": 65, "nodeName": "input_shapes", "type": "Any"}, {"lineNumber": 298, "col_offset": 79, "nodeName": "composite", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "groups", "type": "int"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "acl", "type": "bool"}, {"lineNumber": 338, "col_offset": 7, "nodeName": "skip_codegen_test", "type": "Any"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "generate_trials", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 363, "col_offset": 18, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 363, "col_offset": 28, "nodeName": "pad", "type": "Any"}, {"lineNumber": 363, "col_offset": 33, "nodeName": "stride", "type": "Any"}, {"lineNumber": 363, "col_offset": 41, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 363, "col_offset": 51, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 363, "col_offset": 65, "nodeName": "input_shapes", "type": "Any"}, {"lineNumber": 363, "col_offset": 79, "nodeName": "composite", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "groups", "type": "int"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "inputs", "type": "Set[str]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "args", "type": "Tuple[Tuple[int, Any], Any, Any, Any, Any, Any, int, str, Any]"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "load", "type": "Any"}, {"lineNumber": 386, "col_offset": 7, "nodeName": "skip_runtime_test", "type": "Any"}, {"lineNumber": 389, "col_offset": 13, "nodeName": "Device", "type": "Any"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 408, "col_offset": 13, "nodeName": "generate_trials", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 412, "col_offset": 18, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 412, "col_offset": 28, "nodeName": "pad", "type": "Any"}, {"lineNumber": 412, "col_offset": 33, "nodeName": "stride", "type": "Any"}, {"lineNumber": 412, "col_offset": 41, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 412, "col_offset": 51, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 412, "col_offset": 65, "nodeName": "input_shapes", "type": "Any"}, {"lineNumber": 412, "col_offset": 79, "nodeName": "composite", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "groups", "type": "int"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "input_zp", "type": "int"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "input_sc", "type": "float"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "kernel_zp", "type": "int"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "kernel_sc", "type": "float"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "acl", "type": "bool"}, {"lineNumber": 470, "col_offset": 7, "nodeName": "skip_codegen_test", "type": "Any"}, {"lineNumber": 489, "col_offset": 13, "nodeName": "generate_trials", "type": "Any"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 493, "col_offset": 18, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 493, "col_offset": 28, "nodeName": "pad", "type": "Any"}, {"lineNumber": 493, "col_offset": 33, "nodeName": "stride", "type": "Any"}, {"lineNumber": 493, "col_offset": 41, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 493, "col_offset": 51, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 493, "col_offset": 65, "nodeName": "input_shapes", "type": "Any"}, {"lineNumber": 493, "col_offset": 79, "nodeName": "composite", "type": "Any"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "groups", "type": "int"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "inputs", "type": "Set[str]"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "input_zp", "type": "int"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "input_sc", "type": "float"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "kernel_zp", "type": "int"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "kernel_sc", "type": "float"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "args", "type": "Tuple[Tuple[int, Any], Any, Any, Any, Any, Any, int, str, Any]"}, {"lineNumber": 528, "col_offset": 4, "nodeName": "test_conv2d", "type": "Callable[[], Any]"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "test_qnn_conv2d", "type": "Callable[[], Any]"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "test_codegen_conv2d", "type": "Callable[[], Any]"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "test_codegen_qnn_conv2d", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "next", "type": "Callable"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "var_names", "type": "Iterator[str]"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 51, "col_offset": 54, "nodeName": "dtype", "type": "str"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "pad", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "padding", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "groups", "type": "int"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "nd", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "astype", "type": "Any"}, {"lineNumber": 61, "col_offset": 71, "nodeName": "dtype", "type": "str"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "strides", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "groups", "type": "int"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "channels", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "dtype", "type": "str"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "const", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "dtype", "type": "str"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "bias_add", "type": "Any"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "out", "type": "Any"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "biasc", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "relu", "type": "Any"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "input_zp", "type": "int"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "input_sc", "type": "float"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "kernel_zp", "type": "int"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "kernel_sc", "type": "float"}, {"lineNumber": 94, "col_offset": 54, "nodeName": "input_max", "type": "float"}, {"lineNumber": 95, "col_offset": 54, "nodeName": "input_max", "type": "float"}, {"lineNumber": 96, "col_offset": 54, "nodeName": "input_min", "type": "float"}, {"lineNumber": 97, "col_offset": 54, "nodeName": "input_min", "type": "float"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "output_max", "type": "Any"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "output_min", "type": "Any"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "next", "type": "Callable"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "var_names", "type": "Iterator[str]"}, {"lineNumber": 128, "col_offset": 41, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 128, "col_offset": 54, "nodeName": "dtype", "type": "str"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "pad", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "padding", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 137, "col_offset": 52, "nodeName": "groups", "type": "int"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "nd", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "astype", "type": "Any"}, {"lineNumber": 138, "col_offset": 68, "nodeName": "dtype", "type": "str"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 140, "col_offset": 10, "nodeName": "op", "type": "Any"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "strides", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "groups", "type": "int"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "channels", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "const", "type": "Any"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "bias_add", "type": "Any"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "out", "type": "Any"}, {"lineNumber": 161, "col_offset": 37, "nodeName": "biasc", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "relu", "type": "Any"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 165, "col_offset": 10, "nodeName": "op", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "const", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "const", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "const", "type": "Any"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "output_sc", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "const", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "output_zp", "type": "int"}, {"lineNumber": 189, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "padding", "type": "Any"}, {"lineNumber": 191, "col_offset": 62, "nodeName": "groups", "type": "int"}, {"lineNumber": 194, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "output_height", "type": "Any"}, {"lineNumber": 194, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 194, "col_offset": 47, "nodeName": "output_width", "type": "Any"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "dtype", "type": "str"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "node", "type": "Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]], str]], List[List[int]], str]]"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 261, "col_offset": 23, "nodeName": "inputs", "type": "List[Union[Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]]]], str]], Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]], str]], List[List[int]], str]]]]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "node", "type": "Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]], str]], List[List[int]], str]]"}, {"lineNumber": 264, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 264, "col_offset": 42, "nodeName": "inputs", "type": "List[Union[Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]]]], str]], Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]], str]], List[List[int]], str]]]]"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "inputs", "type": "List[Union[Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]]]], str]], Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]], str]], List[List[int]], str]]]]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "Device", "type": "Any"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 295, "col_offset": 9, "nodeName": "kernel_hs", "type": "List[int]"}, {"lineNumber": 295, "col_offset": 20, "nodeName": "kernel_ws", "type": "List[int]"}, {"lineNumber": 295, "col_offset": 31, "nodeName": "pad", "type": "List[Tuple[int, int]]"}, {"lineNumber": 295, "col_offset": 36, "nodeName": "strides", "type": "List[Tuple[int, int]]"}, {"lineNumber": 295, "col_offset": 45, "nodeName": "dilation", "type": "List[Tuple[int, int]]"}, {"lineNumber": 295, "col_offset": 55, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 295, "col_offset": 69, "nodeName": "input_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 295, "col_offset": 83, "nodeName": "composite", "type": "List[Tuple[bool, bool, bool]]"}, {"lineNumber": 306, "col_offset": 23, "nodeName": "_get_model", "type": "Callable[..., Any]"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "pad", "type": "Any"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "stride", "type": "Any"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "groups", "type": "int"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "dtype", "type": "str"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 325, "col_offset": 21, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "groups", "type": "int"}, {"lineNumber": 328, "col_offset": 23, "nodeName": "pad", "type": "Any"}, {"lineNumber": 329, "col_offset": 22, "nodeName": "stride", "type": "Any"}, {"lineNumber": 330, "col_offset": 24, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 331, "col_offset": 28, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 332, "col_offset": 59, "nodeName": "composite", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "verify", "type": "Any"}, {"lineNumber": 334, "col_offset": 15, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 360, "col_offset": 9, "nodeName": "kernel_hs", "type": "List[int]"}, {"lineNumber": 360, "col_offset": 20, "nodeName": "kernel_ws", "type": "List[int]"}, {"lineNumber": 360, "col_offset": 31, "nodeName": "pad", "type": "List[Tuple[int, int]]"}, {"lineNumber": 360, "col_offset": 36, "nodeName": "strides", "type": "List[Tuple[int, int]]"}, {"lineNumber": 360, "col_offset": 45, "nodeName": "dilation", "type": "List[Tuple[int, int]]"}, {"lineNumber": 360, "col_offset": 55, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 360, "col_offset": 69, "nodeName": "input_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 360, "col_offset": 83, "nodeName": "composite", "type": "List[Tuple[bool, bool, bool]]"}, {"lineNumber": 368, "col_offset": 16, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 368, "col_offset": 23, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 368, "col_offset": 33, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 368, "col_offset": 43, "nodeName": "pad", "type": "Any"}, {"lineNumber": 368, "col_offset": 48, "nodeName": "stride", "type": "Any"}, {"lineNumber": 368, "col_offset": 56, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 368, "col_offset": 66, "nodeName": "groups", "type": "int"}, {"lineNumber": 368, "col_offset": 74, "nodeName": "dtype", "type": "str"}, {"lineNumber": 368, "col_offset": 81, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 370, "col_offset": 23, "nodeName": "_get_model", "type": "Callable[..., Any]"}, {"lineNumber": 377, "col_offset": 22, "nodeName": "_get_expected_codegen", "type": "Callable[..., Any]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "verify_codegen", "type": "Any"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "func", "type": "Any"}, {"lineNumber": 380, "col_offset": 29, "nodeName": "exp_codegen", "type": "List[Union[Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]]]], str]], Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]], str]], List[List[int]], str]]]]"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "Device", "type": "Any"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 409, "col_offset": 9, "nodeName": "kernel_hs", "type": "List[int]"}, {"lineNumber": 409, "col_offset": 20, "nodeName": "kernel_ws", "type": "List[int]"}, {"lineNumber": 409, "col_offset": 31, "nodeName": "pad", "type": "List[Tuple[int, int]]"}, {"lineNumber": 409, "col_offset": 36, "nodeName": "strides", "type": "List[Tuple[int, int]]"}, {"lineNumber": 409, "col_offset": 45, "nodeName": "dilation", "type": "List[Tuple[int, int]]"}, {"lineNumber": 409, "col_offset": 55, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 409, "col_offset": 69, "nodeName": "input_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 409, "col_offset": 83, "nodeName": "composite", "type": "List[Tuple[bool, bool, bool]]"}, {"lineNumber": 422, "col_offset": 31, "nodeName": "_get_qnn_params", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "input_zp", "type": "int"}, {"lineNumber": 423, "col_offset": 22, "nodeName": "input_sc", "type": "float"}, {"lineNumber": 423, "col_offset": 32, "nodeName": "kernel_zp", "type": "int"}, {"lineNumber": 423, "col_offset": 43, "nodeName": "kernel_sc", "type": "float"}, {"lineNumber": 423, "col_offset": 54, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 423, "col_offset": 64, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 426, "col_offset": 23, "nodeName": "_get_qnn_model", "type": "Callable[..., Any]"}, {"lineNumber": 427, "col_offset": 12, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "pad", "type": "Any"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "stride", "type": "Any"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 433, "col_offset": 12, "nodeName": "groups", "type": "int"}, {"lineNumber": 434, "col_offset": 12, "nodeName": "dtype", "type": "str"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 436, "col_offset": 12, "nodeName": "input_zp", "type": "int"}, {"lineNumber": 437, "col_offset": 12, "nodeName": "input_sc", "type": "float"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "kernel_zp", "type": "int"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "kernel_sc", "type": "float"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "output_zp", "type": "int"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "output_sc", "type": "Any"}, {"lineNumber": 451, "col_offset": 21, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 452, "col_offset": 22, "nodeName": "groups", "type": "int"}, {"lineNumber": 454, "col_offset": 23, "nodeName": "pad", "type": "Any"}, {"lineNumber": 455, "col_offset": 22, "nodeName": "stride", "type": "Any"}, {"lineNumber": 456, "col_offset": 24, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 457, "col_offset": 28, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 458, "col_offset": 59, "nodeName": "composite", "type": "Any"}, {"lineNumber": 459, "col_offset": 27, "nodeName": "input_sc", "type": "float"}, {"lineNumber": 460, "col_offset": 32, "nodeName": "input_zp", "type": "int"}, {"lineNumber": 461, "col_offset": 28, "nodeName": "kernel_sc", "type": "float"}, {"lineNumber": 462, "col_offset": 33, "nodeName": "kernel_zp", "type": "int"}, {"lineNumber": 463, "col_offset": 28, "nodeName": "output_sc", "type": "Any"}, {"lineNumber": 464, "col_offset": 33, "nodeName": "output_zp", "type": "int"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "verify", "type": "Any"}, {"lineNumber": 466, "col_offset": 15, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 490, "col_offset": 9, "nodeName": "kernel_hs", "type": "List[int]"}, {"lineNumber": 490, "col_offset": 20, "nodeName": "kernel_ws", "type": "List[int]"}, {"lineNumber": 490, "col_offset": 31, "nodeName": "pad", "type": "List[Tuple[int, int]]"}, {"lineNumber": 490, "col_offset": 36, "nodeName": "strides", "type": "List[Tuple[int, int]]"}, {"lineNumber": 490, "col_offset": 45, "nodeName": "dilation", "type": "List[Tuple[int, int]]"}, {"lineNumber": 490, "col_offset": 55, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 490, "col_offset": 69, "nodeName": "input_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 490, "col_offset": 83, "nodeName": "composite", "type": "List[Tuple[bool, bool, bool]]"}, {"lineNumber": 502, "col_offset": 31, "nodeName": "_get_qnn_params", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "input_zp", "type": "int"}, {"lineNumber": 503, "col_offset": 22, "nodeName": "input_sc", "type": "float"}, {"lineNumber": 503, "col_offset": 32, "nodeName": "kernel_zp", "type": "int"}, {"lineNumber": 503, "col_offset": 43, "nodeName": "kernel_sc", "type": "float"}, {"lineNumber": 503, "col_offset": 54, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 503, "col_offset": 64, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 506, "col_offset": 16, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 506, "col_offset": 23, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 506, "col_offset": 33, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 506, "col_offset": 43, "nodeName": "pad", "type": "Any"}, {"lineNumber": 506, "col_offset": 48, "nodeName": "stride", "type": "Any"}, {"lineNumber": 506, "col_offset": 56, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 506, "col_offset": 66, "nodeName": "groups", "type": "int"}, {"lineNumber": 506, "col_offset": 74, "nodeName": "dtype", "type": "str"}, {"lineNumber": 506, "col_offset": 81, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 508, "col_offset": 23, "nodeName": "_get_qnn_model", "type": "Callable[..., Any]"}, {"lineNumber": 521, "col_offset": 22, "nodeName": "_get_expected_codegen", "type": "Callable[..., Any]"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "verify_codegen", "type": "Any"}, {"lineNumber": 524, "col_offset": 23, "nodeName": "func", "type": "Any"}, {"lineNumber": 524, "col_offset": 29, "nodeName": "exp_codegen", "type": "List[Union[Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]]]], str]], Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[nothing]]]]], str]], Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]], str]], List[List[int]], str]]]]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "p", "type": "Tuple[Tuple[bool, bool], Tuple[Any, Any], Tuple[Any, Any], Tuple[bool, bool]]"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "padding", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 59, "col_offset": 81, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 60, "col_offset": 40, "nodeName": "shape", "type": "Union[Tuple[int, Any, Any, Any], Tuple[int, Any]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "nd", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 78, "col_offset": 78, "nodeName": "dtype", "type": "str"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "channels", "type": "Any"}, {"lineNumber": 95, "col_offset": 43, "nodeName": "channels", "type": "Any"}, {"lineNumber": 96, "col_offset": 43, "nodeName": "channels", "type": "Any"}, {"lineNumber": 97, "col_offset": 43, "nodeName": "channels", "type": "Any"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "output_min", "type": "Any"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "output_sc", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 131, "col_offset": 38, "nodeName": "p", "type": "Tuple[Tuple[bool, bool], Tuple[Any, Any], Tuple[Any, Any], Tuple[bool, bool]]"}, {"lineNumber": 131, "col_offset": 51, "nodeName": "input_zp", "type": "int"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "padding", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 136, "col_offset": 81, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 137, "col_offset": 40, "nodeName": "shape", "type": "Union[Tuple[int, Any], Tuple[int, Any, Any, Any]]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 140, "col_offset": 10, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "const", "type": "Any"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "input_zp", "type": "int"}, {"lineNumber": 144, "col_offset": 26, "nodeName": "const", "type": "Any"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "kernel_zp", "type": "int"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "const", "type": "Any"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "input_sc", "type": "float"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "const", "type": "Any"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "kernel_sc", "type": "float"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 147, "col_offset": 31, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "nd", "type": "Any"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 165, "col_offset": 10, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "input_sc", "type": "float"}, {"lineNumber": 167, "col_offset": 31, "nodeName": "kernel_sc", "type": "float"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "padding", "type": "Any"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "padding", "type": "Any"}, {"lineNumber": 190, "col_offset": 43, "nodeName": "padding", "type": "Any"}, {"lineNumber": 190, "col_offset": 55, "nodeName": "padding", "type": "Any"}, {"lineNumber": 191, "col_offset": 50, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 192, "col_offset": 71, "nodeName": "strides", "type": "Any"}, {"lineNumber": 193, "col_offset": 70, "nodeName": "strides", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "node", "type": "Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]], str]], List[List[int]], str]]"}, {"lineNumber": 234, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 244, "col_offset": 32, "nodeName": "dtype", "type": "str"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "inputs", "type": "List[Union[Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]]]], str]], Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]], str]], List[List[int]], str]]]]"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 262, "col_offset": 31, "nodeName": "input_idx", "type": "int"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 300, "col_offset": 21, "nodeName": "input_shapes", "type": "Any"}, {"lineNumber": 303, "col_offset": 17, "nodeName": "array", "type": "Any"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 316, "col_offset": 17, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 327, "col_offset": 28, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 327, "col_offset": 38, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 334, "col_offset": 54, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 365, "col_offset": 21, "nodeName": "input_shapes", "type": "Any"}, {"lineNumber": 371, "col_offset": 13, "nodeName": "args", "type": "Tuple[Tuple[int, Any], Any, Any, Any, Any, Any, int, str, Any]"}, {"lineNumber": 378, "col_offset": 13, "nodeName": "args", "type": "Tuple[Tuple[int, Any], Any, Any, Any, Any, Any, int, str, Any]"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 414, "col_offset": 21, "nodeName": "input_shapes", "type": "Any"}, {"lineNumber": 416, "col_offset": 23, "nodeName": "array", "type": "Any"}, {"lineNumber": 423, "col_offset": 74, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 442, "col_offset": 12, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 442, "col_offset": 17, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 453, "col_offset": 28, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 453, "col_offset": 38, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 466, "col_offset": 47, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 495, "col_offset": 21, "nodeName": "input_shapes", "type": "Any"}, {"lineNumber": 503, "col_offset": 74, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 509, "col_offset": 13, "nodeName": "args", "type": "Tuple[Tuple[int, Any], Any, Any, Any, Any, Any, int, str, Any]"}, {"lineNumber": 510, "col_offset": 21, "nodeName": "input_zp", "type": "int"}, {"lineNumber": 511, "col_offset": 21, "nodeName": "input_sc", "type": "float"}, {"lineNumber": 512, "col_offset": 22, "nodeName": "kernel_zp", "type": "int"}, {"lineNumber": 513, "col_offset": 22, "nodeName": "kernel_sc", "type": "float"}, {"lineNumber": 514, "col_offset": 22, "nodeName": "output_zp", "type": "int"}, {"lineNumber": 515, "col_offset": 22, "nodeName": "output_sc", "type": "Any"}, {"lineNumber": 522, "col_offset": 13, "nodeName": "args", "type": "Tuple[Tuple[int, Any], Any, Any, Any, Any, Any, int, str, Any]"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "padding", "type": "Any"}, {"lineNumber": 53, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "padding", "type": "Any"}, {"lineNumber": 53, "col_offset": 60, "nodeName": "padding", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "padding", "type": "Any"}, {"lineNumber": 58, "col_offset": 35, "nodeName": "padding", "type": "Any"}, {"lineNumber": 58, "col_offset": 47, "nodeName": "padding", "type": "Any"}, {"lineNumber": 58, "col_offset": 59, "nodeName": "padding", "type": "Any"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 59, "col_offset": 54, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 61, "col_offset": 50, "nodeName": "weight_shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 94, "col_offset": 32, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "padding", "type": "Any"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 130, "col_offset": 48, "nodeName": "padding", "type": "Any"}, {"lineNumber": 130, "col_offset": 60, "nodeName": "padding", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "padding", "type": "Any"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "padding", "type": "Any"}, {"lineNumber": 135, "col_offset": 47, "nodeName": "padding", "type": "Any"}, {"lineNumber": 135, "col_offset": 59, "nodeName": "padding", "type": "Any"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 136, "col_offset": 54, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 138, "col_offset": 47, "nodeName": "weight_shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 140, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 144, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 165, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 192, "col_offset": 57, "nodeName": "padding", "type": "Any"}, {"lineNumber": 193, "col_offset": 56, "nodeName": "padding", "type": "Any"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "out_dtype", "type": "str"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "dtype", "type": "str"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "inputs", "type": "List[Union[Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]]]], str]], Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[nothing]]]]], str]], Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]], str]], List[List[int]], str]]]]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "node", "type": "Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]], str]], List[List[int]], str]]"}, {"lineNumber": 303, "col_offset": 17, "nodeName": "nd", "type": "Any"}, {"lineNumber": 303, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 303, "col_offset": 73, "nodeName": "dtype", "type": "str"}, {"lineNumber": 317, "col_offset": 20, "nodeName": "composite", "type": "Any"}, {"lineNumber": 318, "col_offset": 21, "nodeName": "composite", "type": "Any"}, {"lineNumber": 319, "col_offset": 27, "nodeName": "composite", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 372, "col_offset": 22, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 372, "col_offset": 27, "nodeName": "inputs", "type": "Set[str]"}, {"lineNumber": 373, "col_offset": 20, "nodeName": "composite", "type": "Any"}, {"lineNumber": 374, "col_offset": 21, "nodeName": "composite", "type": "Any"}, {"lineNumber": 375, "col_offset": 27, "nodeName": "composite", "type": "Any"}, {"lineNumber": 378, "col_offset": 28, "nodeName": "composite", "type": "Any"}, {"lineNumber": 378, "col_offset": 57, "nodeName": "composite", "type": "Any"}, {"lineNumber": 416, "col_offset": 23, "nodeName": "nd", "type": "Any"}, {"lineNumber": 416, "col_offset": 36, "nodeName": "astype", "type": "Any"}, {"lineNumber": 416, "col_offset": 76, "nodeName": "dtype", "type": "str"}, {"lineNumber": 443, "col_offset": 20, "nodeName": "composite", "type": "Any"}, {"lineNumber": 444, "col_offset": 21, "nodeName": "composite", "type": "Any"}, {"lineNumber": 445, "col_offset": 27, "nodeName": "composite", "type": "Any"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 516, "col_offset": 22, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 516, "col_offset": 27, "nodeName": "inputs", "type": "Set[str]"}, {"lineNumber": 517, "col_offset": 20, "nodeName": "composite", "type": "Any"}, {"lineNumber": 518, "col_offset": 21, "nodeName": "composite", "type": "Any"}, {"lineNumber": 519, "col_offset": 27, "nodeName": "composite", "type": "Any"}, {"lineNumber": 522, "col_offset": 28, "nodeName": "composite", "type": "Any"}, {"lineNumber": 522, "col_offset": 57, "nodeName": "composite", "type": "Any"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 59, "col_offset": 65, "nodeName": "padding", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "kernel_max", "type": "float"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "kernel_min", "type": "float"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "kernel_min", "type": "float"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "kernel_max", "type": "float"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 136, "col_offset": 65, "nodeName": "padding", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 192, "col_offset": 33, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 192, "col_offset": 44, "nodeName": "padding", "type": "Any"}, {"lineNumber": 193, "col_offset": 32, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 193, "col_offset": 43, "nodeName": "padding", "type": "Any"}, {"lineNumber": 206, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 206, "col_offset": 30, "nodeName": "channels", "type": "Any"}, {"lineNumber": 207, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 207, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 210, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 210, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 210, "col_offset": 48, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 211, "col_offset": 28, "nodeName": "output_shape", "type": "Tuple[int, int, int, Any]"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 213, "col_offset": 36, "nodeName": "p", "type": "Any"}, {"lineNumber": 213, "col_offset": 41, "nodeName": "padding", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 214, "col_offset": 29, "nodeName": "s", "type": "Any"}, {"lineNumber": 214, "col_offset": 36, "nodeName": "s", "type": "Any"}, {"lineNumber": 214, "col_offset": 41, "nodeName": "strides", "type": "Any"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "inputs", "type": "List[Union[Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]]]], str]], Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[nothing]]]]], str]], Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[Any]]], str]], List[List[int]], str]]]]"}, {"lineNumber": 303, "col_offset": 17, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 322, "col_offset": 27, "nodeName": "build_and_run", "type": "Any"}, {"lineNumber": 322, "col_offset": 41, "nodeName": "func", "type": "Any"}, {"lineNumber": 322, "col_offset": 47, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 322, "col_offset": 58, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 322, "col_offset": 66, "nodeName": "device", "type": "Any"}, {"lineNumber": 416, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 448, "col_offset": 27, "nodeName": "build_and_run", "type": "Any"}, {"lineNumber": 448, "col_offset": 41, "nodeName": "func", "type": "Any"}, {"lineNumber": 448, "col_offset": 47, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 448, "col_offset": 58, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 448, "col_offset": 66, "nodeName": "device", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "random", "type": "Any"}, {"lineNumber": 78, "col_offset": 54, "nodeName": "weight_shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "random", "type": "Any"}, {"lineNumber": 159, "col_offset": 51, "nodeName": "weight_shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 192, "col_offset": 22, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 207, "col_offset": 30, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 207, "col_offset": 48, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 222, "col_offset": 57, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 222, "col_offset": 62, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 222, "col_offset": 83, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 222, "col_offset": 87, "nodeName": "dtype", "type": "str"}, {"lineNumber": 226, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 226, "col_offset": 38, "nodeName": "weight_shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 226, "col_offset": 66, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 226, "col_offset": 70, "nodeName": "dtype", "type": "str"}, {"lineNumber": 249, "col_offset": 69, "nodeName": "bias_dtype", "type": "str"}, {"lineNumber": 303, "col_offset": 30, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 303, "col_offset": 59, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 322, "col_offset": 85, "nodeName": "acl", "type": "bool"}, {"lineNumber": 416, "col_offset": 36, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 416, "col_offset": 62, "nodeName": "shape", "type": "Tuple[int, Any]"}, {"lineNumber": 448, "col_offset": 85, "nodeName": "acl", "type": "bool"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 257, "col_offset": 82, "nodeName": "param_dtype", "type": "str"}, {"lineNumber": 303, "col_offset": 30, "nodeName": "random", "type": "Any"}, {"lineNumber": 416, "col_offset": 36, "nodeName": "random", "type": "Any"}, {"lineNumber": 239, "col_offset": 62, "nodeName": "param_dtype", "type": "str"}, {"lineNumber": 249, "col_offset": 38, "nodeName": "weight_shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 303, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 416, "col_offset": 36, "nodeName": "np", "type": "module"}]