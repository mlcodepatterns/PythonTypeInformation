[{"lineNumber": 28, "col_offset": 0, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "test_legalize_conv2d", "type": "Callable[[], Any]"}, {"lineNumber": 117, "col_offset": 0, "nodeName": "test_legalize_dense", "type": "Callable[[], Any]"}, {"lineNumber": 177, "col_offset": 0, "nodeName": "test_legalize_batch_matmul", "type": "Callable[[], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "_test_legalize_conv2d", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "_test_legalize_dense", "type": "Callable[..., Any]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "_test_legalize_batch_matmul", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "passes", "type": "Union[Any, List[Any]]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "seq", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "entry", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "legalize_conv2d", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "legalize_dense", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "legalize_batch_matmul", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 236, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "passes", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "passes", "type": "Union[Any, List[Any]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "entry", "type": "Any"}, {"lineNumber": 35, "col_offset": 58, "nodeName": "body", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "out_channel", "type": "int"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "out_shape", "type": "List[int]"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "out_channel", "type": "int"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "pad_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "_test_legalize_conv2d", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "_test_legalize_conv2d", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "_test_legalize_conv2d", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "_test_legalize_conv2d", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "_test_legalize_conv2d", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "_test_legalize_conv2d", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "_test_legalize_conv2d", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "_test_legalize_conv2d", "type": "Callable[..., Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "_test_legalize_conv2d", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "_test_legalize_conv2d", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "data_shape", "type": "Tuple[int, int]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "out_shape", "type": "Tuple[int, int]"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "pad_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "_test_legalize_dense", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "_test_legalize_dense", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "_test_legalize_dense", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "_test_legalize_dense", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "_test_legalize_dense", "type": "Callable[..., Any]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "_test_legalize_dense", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "_test_legalize_dense", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "data_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 182, "col_offset": 18, "nodeName": "kernel_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "out_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "pad_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "_test_legalize_batch_matmul", "type": "Callable[..., Any]"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "_test_legalize_batch_matmul", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "_test_legalize_batch_matmul", "type": "Callable[..., Any]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "_test_legalize_batch_matmul", "type": "Callable[..., Any]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "_test_legalize_batch_matmul", "type": "Callable[..., Any]"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "_test_legalize_batch_matmul", "type": "Callable[..., Any]"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "_test_legalize_batch_matmul", "type": "Callable[..., Any]"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "test_legalize_conv2d", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "test_legalize_dense", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "test_legalize_batch_matmul", "type": "Any"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "passes", "type": "Any"}, {"lineNumber": 29, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 29, "col_offset": 54, "nodeName": "passes", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "transform", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "PassContext", "type": "Any"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "seq", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "mod", "type": "Any"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "expr", "type": "Any"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "Function", "type": "Any"}, {"lineNumber": 35, "col_offset": 58, "nodeName": "entry", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "kernel_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "out_shape", "type": "List[int]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "db", "type": "int"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "di", "type": "int"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "do", "type": "int"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "a", "type": "Any"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "b", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "M", "type": "int"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "K", "type": "int"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "N", "type": "int"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "_", "type": "int"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "M", "type": "int"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "N", "type": "int"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "dm", "type": "int"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "dk", "type": "int"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "dn", "type": "int"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 165, "col_offset": 39, "nodeName": "a", "type": "Any"}, {"lineNumber": 165, "col_offset": 42, "nodeName": "b", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "B", "type": "int"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "M", "type": "int"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "_", "type": "int"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "N", "type": "int"}, {"lineNumber": 182, "col_offset": 14, "nodeName": "_", "type": "int"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "B", "type": "int"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "M", "type": "int"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "N", "type": "int"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "dm", "type": "int"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "dk", "type": "int"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "dn", "type": "int"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 225, "col_offset": 39, "nodeName": "a", "type": "Any"}, {"lineNumber": 225, "col_offset": 42, "nodeName": "b", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "transform", "type": "Any"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "relay", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "var", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "weight", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "Function", "type": "Any"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "y", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "do_pad", "type": "bool"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "var", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "db", "type": "int"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "di", "type": "int"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "x_pad", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "x_pad", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "di", "type": "int"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "do", "type": "int"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "weight_pad", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "weight_pad", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "weight", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "x_pad", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "db", "type": "int"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "do", "type": "int"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "y_pad", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "Function", "type": "Any"}, {"lineNumber": 93, "col_offset": 44, "nodeName": "y", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "TempOpAttr", "type": "Any"}, {"lineNumber": 96, "col_offset": 53, "nodeName": "legalize_conv2d", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "ir", "type": "Any"}, {"lineNumber": 100, "col_offset": 89, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 100, "col_offset": 93, "nodeName": "b", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "var", "type": "Any"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "dense", "type": "Any"}, {"lineNumber": 129, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "Function", "type": "Any"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "y", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "do_pad", "type": "bool"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "var", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "dm", "type": "int"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "dk", "type": "int"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "x_pad", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "x_pad", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "dn", "type": "int"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "dk", "type": "int"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "weight_pad", "type": "Any"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "weight_pad", "type": "Any"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "weight", "type": "Any"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "dense", "type": "Any"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "x_pad", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "weight_pad", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "dm", "type": "int"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "dn", "type": "int"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "y_pad", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "Function", "type": "Any"}, {"lineNumber": 158, "col_offset": 44, "nodeName": "y", "type": "Any"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "TempOpAttr", "type": "Any"}, {"lineNumber": 161, "col_offset": 52, "nodeName": "legalize_dense", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "ir", "type": "Any"}, {"lineNumber": 165, "col_offset": 89, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 165, "col_offset": 93, "nodeName": "b", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "var", "type": "Any"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "batch_matmul", "type": "Any"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 189, "col_offset": 41, "nodeName": "weight", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "Function", "type": "Any"}, {"lineNumber": 190, "col_offset": 44, "nodeName": "y", "type": "Any"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "do_pad", "type": "bool"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "var", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "dm", "type": "int"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "dk", "type": "int"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "x_pad", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "x_pad", "type": "Any"}, {"lineNumber": 204, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 205, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "dn", "type": "int"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "dk", "type": "int"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "weight_pad", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "weight_pad", "type": "Any"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "weight", "type": "Any"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "batch_matmul", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "x_pad", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "weight_pad", "type": "Any"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "dm", "type": "int"}, {"lineNumber": 214, "col_offset": 21, "nodeName": "dn", "type": "int"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "y_pad", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "Function", "type": "Any"}, {"lineNumber": 218, "col_offset": 44, "nodeName": "y", "type": "Any"}, {"lineNumber": 221, "col_offset": 13, "nodeName": "TempOpAttr", "type": "Any"}, {"lineNumber": 221, "col_offset": 59, "nodeName": "legalize_batch_matmul", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "ir", "type": "Any"}, {"lineNumber": 225, "col_offset": 89, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 225, "col_offset": 93, "nodeName": "b", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 49, "col_offset": 37, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 50, "col_offset": 47, "nodeName": "kernel_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "out_channel", "type": "int"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "weight", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "Target", "type": "Any"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "conv2d_legalize", "type": "Any"}, {"lineNumber": 65, "col_offset": 47, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 65, "col_offset": 54, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 65, "col_offset": 62, "nodeName": "types", "type": "Any"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 70, "col_offset": 37, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "pad", "type": "Any"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 75, "col_offset": 48, "nodeName": "kernel_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "pad", "type": "Any"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "weight", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "weight_pad", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "strided_slice", "type": "Any"}, {"lineNumber": 90, "col_offset": 40, "nodeName": "y_pad", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "weight", "type": "Any"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 99, "col_offset": 41, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 127, "col_offset": 37, "nodeName": "data_shape", "type": "Tuple[int, int]"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 128, "col_offset": 47, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 130, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "weight", "type": "Any"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "Target", "type": "Any"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "dense_legalize", "type": "Any"}, {"lineNumber": 135, "col_offset": 46, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 135, "col_offset": 53, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 135, "col_offset": 61, "nodeName": "types", "type": "Any"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 140, "col_offset": 37, "nodeName": "data_shape", "type": "Tuple[int, int]"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "pad", "type": "Any"}, {"lineNumber": 142, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 145, "col_offset": 48, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "pad", "type": "Any"}, {"lineNumber": 147, "col_offset": 42, "nodeName": "weight", "type": "Any"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "strided_slice", "type": "Any"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "y_pad", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "weight", "type": "Any"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 187, "col_offset": 37, "nodeName": "data_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 188, "col_offset": 47, "nodeName": "kernel_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 190, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 190, "col_offset": 35, "nodeName": "weight", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "Target", "type": "Any"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "batch_matmul_legalize", "type": "Any"}, {"lineNumber": 195, "col_offset": 53, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 195, "col_offset": 60, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 195, "col_offset": 68, "nodeName": "types", "type": "Any"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 200, "col_offset": 37, "nodeName": "data_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "pad", "type": "Any"}, {"lineNumber": 202, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 205, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 205, "col_offset": 48, "nodeName": "kernel_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "pad", "type": "Any"}, {"lineNumber": 207, "col_offset": 42, "nodeName": "weight", "type": "Any"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "strided_slice", "type": "Any"}, {"lineNumber": 215, "col_offset": 40, "nodeName": "y_pad", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 218, "col_offset": 35, "nodeName": "weight", "type": "Any"}, {"lineNumber": 223, "col_offset": 32, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 224, "col_offset": 41, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "target", "type": "Any"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "out_channel", "type": "int"}, {"lineNumber": 83, "col_offset": 39, "nodeName": "do", "type": "int"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 90, "col_offset": 71, "nodeName": "out_shape", "type": "List[int]"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "transform", "type": "Any"}, {"lineNumber": 99, "col_offset": 41, "nodeName": "transform", "type": "Any"}, {"lineNumber": 100, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 100, "col_offset": 66, "nodeName": "a", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "target", "type": "Any"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 155, "col_offset": 65, "nodeName": "out_shape", "type": "Tuple[int, int]"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "transform", "type": "Any"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "transform", "type": "Any"}, {"lineNumber": 165, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 165, "col_offset": 66, "nodeName": "a", "type": "Any"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "target", "type": "Any"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 215, "col_offset": 68, "nodeName": "out_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 223, "col_offset": 32, "nodeName": "transform", "type": "Any"}, {"lineNumber": 224, "col_offset": 41, "nodeName": "transform", "type": "Any"}, {"lineNumber": 225, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 225, "col_offset": 66, "nodeName": "a", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "topi", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "topi", "type": "Any"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "topi", "type": "Any"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 72, "col_offset": 55, "nodeName": "db", "type": "int"}, {"lineNumber": 72, "col_offset": 80, "nodeName": "di", "type": "int"}, {"lineNumber": 77, "col_offset": 81, "nodeName": "di", "type": "int"}, {"lineNumber": 77, "col_offset": 90, "nodeName": "do", "type": "int"}, {"lineNumber": 142, "col_offset": 55, "nodeName": "dm", "type": "int"}, {"lineNumber": 142, "col_offset": 64, "nodeName": "dk", "type": "int"}, {"lineNumber": 147, "col_offset": 65, "nodeName": "dn", "type": "int"}, {"lineNumber": 147, "col_offset": 74, "nodeName": "dk", "type": "int"}, {"lineNumber": 202, "col_offset": 63, "nodeName": "dm", "type": "int"}, {"lineNumber": 202, "col_offset": 72, "nodeName": "dk", "type": "int"}, {"lineNumber": 207, "col_offset": 73, "nodeName": "dn", "type": "int"}, {"lineNumber": 207, "col_offset": 82, "nodeName": "dk", "type": "int"}]