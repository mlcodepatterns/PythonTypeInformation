[{"lineNumber": 71, "col_offset": 0, "nodeName": "get_caffe2_output", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "verify_caffe2_forward_impl", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "test_forward_squeezenet1_1", "type": "Callable[[], Any]"}, {"lineNumber": 96, "col_offset": 0, "nodeName": "test_forward_resnet50", "type": "Callable[[], Any]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "test_forward_vgg19", "type": "Callable[[], Any]"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "test_elementwise_add", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 0, "nodeName": "test_elementwise_add_with_broadcast", "type": "Callable[[], Any]"}, {"lineNumber": 184, "col_offset": 0, "nodeName": "test_normalize_yuv", "type": "Callable[[], Any]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "Model", "type": "Type[`namedtuple-Model-init_net-predict_net`]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "input_names", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "shape_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "dtype_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "input_blob", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "output_blob", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "c2_output", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "c2_output", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "dtype", "type": "str"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "c2_out", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "model", "type": "`namedtuple-Model-init_net-predict_net`"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "model", "type": "`namedtuple-Model-init_net-predict_net`"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "model", "type": "`namedtuple-Model-init_net-predict_net`"}, {"lineNumber": 229, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "input", "type": "Any"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "input_names", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "input_names", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "from_caffe2", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "shape_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 45, "col_offset": 55, "nodeName": "dtype_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "create", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "graph", "type": "Any"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "lib", "type": "Any"}, {"lineNumber": 49, "col_offset": 41, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "set_input", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "input_names", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "set_input", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "run", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "tvm_output_list", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "tvm_output_list", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "RunNetOnce", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "input", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "FeedBlob", "type": "Any"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "input_blob", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "RunNetOnce", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "external_output", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "FetchBlob", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "output_blob", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "astype", "type": "Any"}, {"lineNumber": 85, "col_offset": 53, "nodeName": "dtype", "type": "str"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "get_caffe2_output", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "model", "type": "Any"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "dtype", "type": "str"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "ctx_list", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "tvm_out", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "verify_caffe2_forward_impl", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "c2_squeezenet", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "verify_caffe2_forward_impl", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "c2_resnet50", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "verify_caffe2_forward_impl", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "c2_vgg19", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "NetDef", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "external_output", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "extend", "type": "Any"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "NetDef", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "external_input", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "external_output", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "extend", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "Model", "type": "Type[`namedtuple-Model-init_net-predict_net`]"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "verify_caffe2_forward_impl", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "model", "type": "`namedtuple-Model-init_net-predict_net`"}, {"lineNumber": 142, "col_offset": 38, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 142, "col_offset": 50, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "NetDef", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "external_output", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "extend", "type": "Any"}, {"lineNumber": 167, "col_offset": 18, "nodeName": "NetDef", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "external_input", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "external_output", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "extend", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "Model", "type": "Type[`namedtuple-Model-init_net-predict_net`]"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 180, "col_offset": 28, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "verify_caffe2_forward_impl", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "model", "type": "`namedtuple-Model-init_net-predict_net`"}, {"lineNumber": 181, "col_offset": 38, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 181, "col_offset": 50, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "NetDef", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "external_output", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "extend", "type": "Any"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "NetDef", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "external_input", "type": "Any"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "external_output", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "extend", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "Model", "type": "Type[`namedtuple-Model-init_net-predict_net`]"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 225, "col_offset": 28, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "verify_caffe2_forward_impl", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 226, "col_offset": 31, "nodeName": "model", "type": "`namedtuple-Model-init_net-predict_net`"}, {"lineNumber": 226, "col_offset": 38, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 226, "col_offset": 50, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "test_forward_squeezenet1_1", "type": "Callable[[], Any]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "test_forward_resnet50", "type": "Callable[[], Any]"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "test_forward_vgg19", "type": "Callable[[], Any]"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "test_elementwise_add", "type": "Callable[[], Any]"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "test_elementwise_add_with_broadcast", "type": "Callable[[], Any]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "test_normalize_yuv", "type": "Callable[[], Any]"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "frontend", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 46, "col_offset": 9, "nodeName": "build_config", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "graph", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "lib", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "build", "type": "Any"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "mod", "type": "Any"}, {"lineNumber": 47, "col_offset": 46, "nodeName": "target", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "graph_runtime", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "array", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "params", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 59, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "output_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "output_dtype", "type": "Any"}, {"lineNumber": 59, "col_offset": 67, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "tvm_output", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "get_output", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "astype", "type": "Any"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "dtype", "type": "str"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "get_tvm_output", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "model", "type": "Any"}, {"lineNumber": 88, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 88, "col_offset": 46, "nodeName": "target", "type": "Any"}, {"lineNumber": 88, "col_offset": 54, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 88, "col_offset": 59, "nodeName": "out_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 88, "col_offset": 70, "nodeName": "dtype", "type": "str"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "c2_out", "type": "Any"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "tvm_out", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "caffe2_pb2", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "op", "type": "Any"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "caffe2_pb2", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "op", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "caffe2_pb2", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "op", "type": "Any"}, {"lineNumber": 167, "col_offset": 18, "nodeName": "caffe2_pb2", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "op", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "caffe2_pb2", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "op", "type": "Any"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "caffe2_pb2", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "op", "type": "Any"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "op", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 46, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 47, "col_offset": 61, "nodeName": "params", "type": "Any"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "nd", "type": "Any"}, {"lineNumber": 52, "col_offset": 42, "nodeName": "astype", "type": "Any"}, {"lineNumber": 52, "col_offset": 60, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "get_output", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "m", "type": "Any"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "empty", "type": "Any"}, {"lineNumber": 66, "col_offset": 51, "nodeName": "output_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 67, "col_offset": 50, "nodeName": "output_dtype", "type": "str"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "tvm_output", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "CreateOperator", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "CreateOperator", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "CreateOperator", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "CreateOperator", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "CreateOperator", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "CreateOperator", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "CreateOperator", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "CreateOperator", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "CreateOperator", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "CreateOperator", "type": "Any"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 52, "col_offset": 42, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 52, "col_offset": 60, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "empty", "type": "Any"}, {"lineNumber": 62, "col_offset": 55, "nodeName": "s", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "tvm_output_list", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "nd", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "core", "type": "Any"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "core", "type": "Any"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "core", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "core", "type": "Any"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "core", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "core", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "core", "type": "Any"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "core", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "core", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "core", "type": "Any"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "nd", "type": "Any"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "output_dtype", "type": "Any"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "tvm_output", "type": "Any"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 62, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 118, "col_offset": 42, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 125, "col_offset": 42, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 156, "col_offset": 42, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 195, "col_offset": 42, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "np", "type": "module"}]