[{"lineNumber": 27, "col_offset": 0, "nodeName": "_get_model", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "test_reshape", "type": "Callable[[], Any]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "test_reshape_failure", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "req", "type": "Any"}, {"lineNumber": 48, "col_offset": 37, "nodeName": "trials", "type": "List[Union[Tuple[Tuple[int, int, int, int], Tuple[int]], Tuple[Tuple[int, int, int, int], Tuple[int, int]], Tuple[Tuple[int, int, int, int], Tuple[int, int, int, int]]]]"}, {"lineNumber": 75, "col_offset": 53, "nodeName": "trials", "type": "List[Tuple[Tuple[int, int, int, int], Tuple[int, int, int], str, str]]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "conv", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "params", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "get_conv2d", "type": "Any"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "a", "type": "Any"}, {"lineNumber": 30, "col_offset": 37, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "conv", "type": "Any"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "req", "type": "Any"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "params", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "output_shape", "type": "Union[Tuple[int], Tuple[int, int], Tuple[int, int, int, int]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "npu", "type": "bool"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "output_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "dtype", "type": "str"}, {"lineNumber": 75, "col_offset": 42, "nodeName": "err_msg", "type": "str"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 29, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "tei", "type": "Any"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "ethosn_available", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "verify", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "ethosn_available", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "params", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "_get_model", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 76, "col_offset": 48, "nodeName": "output_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 76, "col_offset": 62, "nodeName": "dtype", "type": "str"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "make_module", "type": "Any"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "params", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "get_pattern_table", "type": "Any"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "make_module", "type": "Any"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "params", "type": "Any"}, {"lineNumber": 80, "col_offset": 54, "nodeName": "mod", "type": "Any"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "make_ethosn_partition", "type": "Any"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "body", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "test_error", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "mod", "type": "Any"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "err_msg", "type": "str"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "array", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "params", "type": "Any"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "_get_model", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 54, "col_offset": 52, "nodeName": "output_shape", "type": "Union[Tuple[int], Tuple[int, int, int, int], Tuple[int, int]]"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "make_module", "type": "Any"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "model", "type": "Any"}, {"lineNumber": 55, "col_offset": 41, "nodeName": "params", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "tei", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "tei", "type": "Any"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "tei", "type": "Any"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "MergeComposite", "type": "Any"}, {"lineNumber": 80, "col_offset": 45, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "tei", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "tei", "type": "Any"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "nd", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "randint", "type": "Any"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "tei", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "build_and_run", "type": "Any"}, {"lineNumber": 56, "col_offset": 45, "nodeName": "mod", "type": "Any"}, {"lineNumber": 56, "col_offset": 50, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 56, "col_offset": 61, "nodeName": "params", "type": "Any"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "transform", "type": "Any"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "mod", "type": "Any"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "random", "type": "Any"}, {"lineNumber": 50, "col_offset": 66, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "tei", "type": "Any"}, {"lineNumber": 56, "col_offset": 73, "nodeName": "npu", "type": "bool"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "np", "type": "module"}]