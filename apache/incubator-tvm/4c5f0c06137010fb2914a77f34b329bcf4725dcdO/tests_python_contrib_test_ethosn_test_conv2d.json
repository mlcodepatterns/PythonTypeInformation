[{"lineNumber": 28, "col_offset": 0, "nodeName": "_get_same_padding", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "_get_model", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 0, "nodeName": "_get_conv2d_qnn_params", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "test_conv2d", "type": "Callable[[], Any]"}, {"lineNumber": 202, "col_offset": 0, "nodeName": "test_conv2d_failure", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "dilated_kernel_h", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "dilated_kernel_w", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "out", "type": "int"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "pad", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "pad_top", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "pad_bottom", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "out", "type": "int"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "pad", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "pad_left", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "pad_right", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "weights", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "biasc", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "bias", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "input_max", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "input_min", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "kernel_max", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "kernel_min", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "output_max", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "output_min", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "output_sc", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "output_zp", "type": "int"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "depthwise", "type": "bool"}, {"lineNumber": 342, "col_offset": 9, "nodeName": "trials", "type": "List[Union[Tuple[Tuple[int, int, int, int], int, int, int, int, int, int, int, int, str, Tuple[int, int], Tuple[int, int], int, str, int, str, str], Tuple[Tuple[int, int, int, int], int, int, int, int, int, int, int, int, str, Tuple[int, int, int], Tuple[int, int], int, str, int, str, str]]]"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "max", "type": "Callable"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "pad", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "pad", "type": "Any"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "pad_top", "type": "Any"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "max", "type": "Callable"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "pad", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "pad", "type": "Any"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "pad_left", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "pad_top", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "pad_left", "type": "Any"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "pad_bottom", "type": "Any"}, {"lineNumber": 40, "col_offset": 43, "nodeName": "pad_right", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "_get_same_padding", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 70, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 73, "col_offset": 80, "nodeName": "strides", "type": "Any"}, {"lineNumber": 74, "col_offset": 7, "nodeName": "weight_format", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "weight_shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "weight_shape", "type": "Tuple[Any, Any, Any, int]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "const", "type": "Any"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "w", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "bias_add", "type": "Any"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "conv", "type": "Any"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "biasc", "type": "Any"}, {"lineNumber": 104, "col_offset": 10, "nodeName": "requantize", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "bias", "type": "Any"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "w", "type": "Any"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "b", "type": "Any"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "req", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "input_sc", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "input_zp", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "kernel_sc", "type": "Any"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "kernel_zp", "type": "Any"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "max", "type": "Callable"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "output_limits", "type": "List[Any]"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "min", "type": "Callable"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "output_limits", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "output_zp", "type": "int"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "output_sc", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 155, "col_offset": 78, "nodeName": "trials", "type": "List[List[Union[Tuple[int, int, int, int], int, str, Tuple[int, int]]]]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "ceil", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "ceil", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 62, "col_offset": 42, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 63, "col_offset": 7, "nodeName": "pad", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "pad", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "_get_same_padding", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 74, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 64, "col_offset": 84, "nodeName": "strides", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "pad", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 73, "col_offset": 49, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 73, "col_offset": 59, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 75, "col_offset": 64, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "nd", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "min", "type": "Any"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "weight_format", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "strides", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "groups", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "nd", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "randint", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "nn", "type": "Any"}, {"lineNumber": 104, "col_offset": 10, "nodeName": "op", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "const", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "const", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "const", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "output_sc", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "const", "type": "Any"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "output_zp", "type": "Any"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "input_zp", "type": "Any"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "input_sc", "type": "Any"}, {"lineNumber": 119, "col_offset": 36, "nodeName": "kernel_zp", "type": "Any"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "kernel_sc", "type": "Any"}, {"lineNumber": 122, "col_offset": 54, "nodeName": "input_max", "type": "Any"}, {"lineNumber": 123, "col_offset": 54, "nodeName": "input_max", "type": "Any"}, {"lineNumber": 124, "col_offset": 54, "nodeName": "input_min", "type": "Any"}, {"lineNumber": 125, "col_offset": 54, "nodeName": "input_min", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "output_max", "type": "Any"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "output_min", "type": "Any"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "ethosn_available", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 155, "col_offset": 19, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "kernel_h", "type": "int"}, {"lineNumber": 155, "col_offset": 43, "nodeName": "kernel_w", "type": "int"}, {"lineNumber": 155, "col_offset": 53, "nodeName": "pad", "type": "str"}, {"lineNumber": 155, "col_offset": 58, "nodeName": "stride", "type": "Tuple[int, int]"}, {"lineNumber": 155, "col_offset": 66, "nodeName": "dilation", "type": "Tuple[int, int]"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "depthwise", "type": "bool"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "input_zp", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "input_sc", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "kernel_zp", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "kernel_sc", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "npu", "type": "bool"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "ethosn_available", "type": "Any"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 343, "col_offset": 24, "nodeName": "_get_model", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "kernel_h", "type": "int"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "kernel_w", "type": "int"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "input_zp", "type": "int"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "input_sc", "type": "int"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "kernel_zp", "type": "int"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "kernel_sc", "type": "int"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "output_zp", "type": "int"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "output_sc", "type": "int"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "pad", "type": "str"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "stride", "type": "Union[Tuple[int, int, int], Tuple[int, int]]"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "dilation", "type": "Tuple[int, int]"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "groups", "type": "int"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "dtype", "type": "str"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "weight_format", "type": "str"}, {"lineNumber": 361, "col_offset": 16, "nodeName": "make_ethosn_composite", "type": "Any"}, {"lineNumber": 361, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 362, "col_offset": 14, "nodeName": "make_ethosn_partition", "type": "Any"}, {"lineNumber": 362, "col_offset": 40, "nodeName": "model", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "test_error", "type": "Any"}, {"lineNumber": 363, "col_offset": 23, "nodeName": "mod", "type": "Any"}, {"lineNumber": 363, "col_offset": 32, "nodeName": "err_msg", "type": "str"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "math", "type": "module"}, {"lineNumber": 32, "col_offset": 41, "nodeName": "dilated_kernel_h", "type": "Any"}, {"lineNumber": 32, "col_offset": 60, "nodeName": "data", "type": "Tuple[Any, Any]"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "math", "type": "module"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "dilated_kernel_w", "type": "Any"}, {"lineNumber": 37, "col_offset": 60, "nodeName": "data", "type": "Tuple[Any, Any]"}, {"lineNumber": 64, "col_offset": 53, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 64, "col_offset": 63, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "input_zp", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 71, "col_offset": 75, "nodeName": "shape", "type": "Any"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "shape", "type": "Union[Tuple[Any, Any, Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "shape", "type": "Union[Tuple[Any, Any, Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 56, "nodeName": "groups", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "max", "type": "Any"}, {"lineNumber": 80, "col_offset": 64, "nodeName": "weight_shape", "type": "Union[Tuple[Any, Any, Any, int], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 80, "col_offset": 84, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "const", "type": "Any"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "input_zp", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "const", "type": "Any"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "kernel_zp", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "const", "type": "Any"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "input_sc", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "const", "type": "Any"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "kernel_sc", "type": "Any"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 104, "col_offset": 10, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "input_sc", "type": "Any"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "kernel_sc", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "channels", "type": "Any"}, {"lineNumber": 123, "col_offset": 43, "nodeName": "channels", "type": "Any"}, {"lineNumber": 124, "col_offset": 43, "nodeName": "channels", "type": "Any"}, {"lineNumber": 125, "col_offset": 43, "nodeName": "channels", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "output_min", "type": "Any"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "output_sc", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "groups", "type": "int"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "kernel_w", "type": "int"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "kernel_h", "type": "int"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "weight_format", "type": "str"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "stride", "type": "Tuple[int, int]"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "groups", "type": "int"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "weight_format", "type": "str"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "randint", "type": "Any"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "randint", "type": "Any"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "_get_conv2d_qnn_params", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "input_zp", "type": "Any"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "input_sc", "type": "Any"}, {"lineNumber": 175, "col_offset": 36, "nodeName": "kernel_zp", "type": "Any"}, {"lineNumber": 175, "col_offset": 47, "nodeName": "kernel_sc", "type": "Any"}, {"lineNumber": 175, "col_offset": 58, "nodeName": "kernel_h", "type": "int"}, {"lineNumber": 175, "col_offset": 68, "nodeName": "kernel_w", "type": "int"}, {"lineNumber": 177, "col_offset": 28, "nodeName": "_get_model", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "kernel_h", "type": "int"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "kernel_w", "type": "int"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "input_zp", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "input_sc", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "kernel_zp", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "kernel_sc", "type": "Any"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "output_zp", "type": "int"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "output_sc", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "pad", "type": "str"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "stride", "type": "Tuple[int, int]"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "dilation", "type": "Tuple[int, int]"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "groups", "type": "int"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "weight_format", "type": "str"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "verify", "type": "Any"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 361, "col_offset": 16, "nodeName": "tei", "type": "Any"}, {"lineNumber": 362, "col_offset": 14, "nodeName": "tei", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "tei", "type": "Any"}, {"lineNumber": 29, "col_offset": 38, "nodeName": "kernel", "type": "Tuple[Any, Any]"}, {"lineNumber": 30, "col_offset": 38, "nodeName": "kernel", "type": "Tuple[Any, Any]"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 31, "col_offset": 41, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 71, "col_offset": 45, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 69, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[Any, Any, Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "iinfo", "type": "Any"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 57, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 104, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 122, "col_offset": 32, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "kernel_w", "type": "Any"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "array", "type": "Any"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 175, "col_offset": 78, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "make_module", "type": "Any"}, {"lineNumber": 196, "col_offset": 38, "nodeName": "model", "type": "Any"}, {"lineNumber": 196, "col_offset": 45, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "tei", "type": "Any"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "data", "type": "Tuple[Any, Any]"}, {"lineNumber": 31, "col_offset": 47, "nodeName": "stride", "type": "Any"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "out", "type": "int"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "stride", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "data", "type": "Tuple[Any, Any]"}, {"lineNumber": 36, "col_offset": 47, "nodeName": "stride", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "out", "type": "int"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "stride", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 51, "nodeName": "shape", "type": "Any"}, {"lineNumber": 71, "col_offset": 62, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "iinfo", "type": "Any"}, {"lineNumber": 80, "col_offset": 47, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "pad", "type": "Any"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "pad", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "kernel_max", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "kernel_min", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "kernel_min", "type": "Any"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "kernel_max", "type": "Any"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "kernel_w", "type": "int"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "nd", "type": "Any"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "randint", "type": "Any"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "tei", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "build_and_run", "type": "Any"}, {"lineNumber": 197, "col_offset": 49, "nodeName": "mod", "type": "Any"}, {"lineNumber": 197, "col_offset": 54, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 197, "col_offset": 65, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 46, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 52, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "random", "type": "Any"}, {"lineNumber": 168, "col_offset": 70, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "tei", "type": "Any"}, {"lineNumber": 197, "col_offset": 77, "nodeName": "npu", "type": "bool"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "np", "type": "module"}]