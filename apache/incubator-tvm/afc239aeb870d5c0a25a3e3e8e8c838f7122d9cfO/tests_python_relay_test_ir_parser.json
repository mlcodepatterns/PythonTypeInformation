[{"lineNumber": 70, "col_offset": 0, "nodeName": "assert_graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 0, "nodeName": "roundtrip", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "parses_as", "type": "Callable[[str, Any], bool]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 115, "col_offset": 0, "nodeName": "test_comments", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 0, "nodeName": "test_int_literal", "type": "Callable[[], Any]"}, {"lineNumber": 156, "col_offset": 0, "nodeName": "test_float_literal", "type": "Callable[[], Any]"}, {"lineNumber": 173, "col_offset": 0, "nodeName": "test_bool_literal", "type": "Callable[[], Any]"}, {"lineNumber": 178, "col_offset": 0, "nodeName": "test_negative", "type": "Callable[[], Any]"}, {"lineNumber": 184, "col_offset": 0, "nodeName": "test_bin_op", "type": "Callable[[], Any]"}, {"lineNumber": 192, "col_offset": 0, "nodeName": "test_parens", "type": "Callable[[], Any]"}, {"lineNumber": 197, "col_offset": 0, "nodeName": "test_op_assoc", "type": "Callable[[], Any]"}, {"lineNumber": 202, "col_offset": 0, "nodeName": "test_vars", "type": "Callable[[], Any]"}, {"lineNumber": 226, "col_offset": 0, "nodeName": "test_let", "type": "Callable[[], Any]"}, {"lineNumber": 254, "col_offset": 0, "nodeName": "test_seq", "type": "Callable[[], Any]"}, {"lineNumber": 273, "col_offset": 0, "nodeName": "test_graph", "type": "Callable[[], Any]"}, {"lineNumber": 281, "col_offset": 0, "nodeName": "test_graph_wrong_order", "type": "Callable[[], Any]"}, {"lineNumber": 286, "col_offset": 0, "nodeName": "test_let_global_var", "type": "Callable[[], Any]"}, {"lineNumber": 291, "col_offset": 0, "nodeName": "test_let_op", "type": "Callable[[], Any]"}, {"lineNumber": 296, "col_offset": 0, "nodeName": "test_tuple", "type": "Callable[[], Any]"}, {"lineNumber": 306, "col_offset": 0, "nodeName": "test_func", "type": "Callable[[], Any]"}, {"lineNumber": 359, "col_offset": 0, "nodeName": "test_defn", "type": "Callable[[], Any]"}, {"lineNumber": 369, "col_offset": 0, "nodeName": "test_recursive_call", "type": "Callable[[], Any]"}, {"lineNumber": 379, "col_offset": 0, "nodeName": "test_ifelse", "type": "Callable[[], Any]"}, {"lineNumber": 396, "col_offset": 0, "nodeName": "test_ifelse_scope", "type": "Callable[[], Any]"}, {"lineNumber": 410, "col_offset": 0, "nodeName": "test_call", "type": "Callable[[], Any]"}, {"lineNumber": 534, "col_offset": 0, "nodeName": "test_incomplete_type", "type": "Callable[[], Any]"}, {"lineNumber": 545, "col_offset": 0, "nodeName": "test_builtin_types", "type": "Callable[[], Any]"}, {"lineNumber": 550, "col_offset": 0, "nodeName": "test_tensor_type", "type": "Callable[[], Any]"}, {"lineNumber": 579, "col_offset": 0, "nodeName": "test_function_type", "type": "Callable[[], Any]"}, {"lineNumber": 614, "col_offset": 0, "nodeName": "test_tuple_type", "type": "Callable[[], Any]"}, {"lineNumber": 649, "col_offset": 0, "nodeName": "test_adt_defn", "type": "Callable[[], Any]"}, {"lineNumber": 666, "col_offset": 0, "nodeName": "test_empty_adt_defn", "type": "Callable[[], Any]"}, {"lineNumber": 680, "col_offset": 0, "nodeName": "test_multiple_cons_defn", "type": "Callable[[], Any]"}, {"lineNumber": 696, "col_offset": 0, "nodeName": "test_multiple_type_param_defn", "type": "Callable[[], Any]"}, {"lineNumber": 720, "col_offset": 0, "nodeName": "test_match", "type": "Callable[[], Any]"}, {"lineNumber": 783, "col_offset": 0, "nodeName": "test_adt_cons_expr", "type": "Callable[[], Any]"}, {"lineNumber": 818, "col_offset": 0, "nodeName": "test_duplicate_adt_defn", "type": "Callable[[], Any]"}, {"lineNumber": 832, "col_offset": 0, "nodeName": "test_duplicate_adt_cons", "type": "Callable[[], Any]"}, {"lineNumber": 842, "col_offset": 0, "nodeName": "test_duplicate_adt_cons_defn", "type": "Callable[[], Any]"}, {"lineNumber": 852, "col_offset": 0, "nodeName": "test_duplicate_global_var", "type": "Callable[[], Any]"}, {"lineNumber": 862, "col_offset": 0, "nodeName": "test_extern_adt_defn", "type": "Callable[[], Any]"}, {"lineNumber": 877, "col_offset": 0, "nodeName": "test_import_grad", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "raises_parse_error", "type": "Any"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "SEMVER", "type": "str"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "int32", "type": "Any"}, {"lineNumber": 106, "col_offset": 0, "nodeName": "_", "type": "Any"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "X", "type": "Any"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "Y", "type": "Any"}, {"lineNumber": 109, "col_offset": 0, "nodeName": "X_ANNO", "type": "Any"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "Y_ANNO", "type": "Any"}, {"lineNumber": 112, "col_offset": 0, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "xfail", "type": "Any"}, {"lineNumber": 29, "col_offset": 9, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "divide", "type": "Any"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "add", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "subtract", "type": "Any"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "less", "type": "Any"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "greater", "type": "Any"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "less_equal", "type": "Any"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "greater_equal", "type": "Any"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "equal", "type": "Any"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "not_equal", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "expr", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "expr", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "scalar_type", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "Var", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "Var", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "Var", "type": "Any"}, {"lineNumber": 109, "col_offset": 9, "nodeName": "Var", "type": "Any"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "int32", "type": "Any"}, {"lineNumber": 110, "col_offset": 9, "nodeName": "Var", "type": "Any"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "int32", "type": "Any"}, {"lineNumber": 112, "col_offset": 7, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "bin_op", "type": "str"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "var", "type": "Any"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "global_var", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "op", "type": "Any"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "code", "type": "str"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "id_func", "type": "Any"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "constant", "type": "Any"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "id_var", "type": "Any"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "builtin_type", "type": "str"}, {"lineNumber": 546, "col_offset": 24, "nodeName": "TYPES", "type": "Set[str]"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 652, "col_offset": 4, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 657, "col_offset": 24, "nodeName": "prog", "type": "Any"}, {"lineNumber": 667, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 669, "col_offset": 4, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 670, "col_offset": 4, "nodeName": "prog", "type": "Any"}, {"lineNumber": 671, "col_offset": 24, "nodeName": "prog", "type": "Any"}, {"lineNumber": 681, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 683, "col_offset": 4, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 684, "col_offset": 4, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 692, "col_offset": 20, "nodeName": "prog", "type": "Any"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 698, "col_offset": 4, "nodeName": "typ_var_a", "type": "Any"}, {"lineNumber": 699, "col_offset": 4, "nodeName": "typ_var_b", "type": "Any"}, {"lineNumber": 707, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 708, "col_offset": 24, "nodeName": "prog", "type": "Any"}, {"lineNumber": 722, "col_offset": 4, "nodeName": "match_keywords", "type": "List[Tuple[str, bool]]"}, {"lineNumber": 723, "col_offset": 40, "nodeName": "match_keywords", "type": "List[Tuple[str, bool]]"}, {"lineNumber": 784, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 786, "col_offset": 4, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 787, "col_offset": 4, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 790, "col_offset": 4, "nodeName": "nil_constructor", "type": "Any"}, {"lineNumber": 795, "col_offset": 20, "nodeName": "list_def", "type": "Any"}, {"lineNumber": 797, "col_offset": 4, "nodeName": "make_singleton_var", "type": "Any"}, {"lineNumber": 798, "col_offset": 4, "nodeName": "input_var", "type": "Any"}, {"lineNumber": 804, "col_offset": 30, "nodeName": "make_singleton_func", "type": "Any"}, {"lineNumber": 864, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 866, "col_offset": 4, "nodeName": "extern_var", "type": "Any"}, {"lineNumber": 867, "col_offset": 4, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 868, "col_offset": 4, "nodeName": "extern_def", "type": "Any"}, {"lineNumber": 869, "col_offset": 22, "nodeName": "extern_def", "type": "Any"}, {"lineNumber": 878, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 881, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "mark", "type": "Any"}, {"lineNumber": 24, "col_offset": 46, "nodeName": "TVMError", "type": "Any"}, {"lineNumber": 29, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "assert_structural_equal", "type": "Any"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "fromtext", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "assert_graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "expr", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "fromtext", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "roundtrip", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "expr", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "code", "type": "str"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "code", "type": "str"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "assert_graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "expr", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "item", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "relay", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "relay", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "relay", "type": "Any"}, {"lineNumber": 109, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 110, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 112, "col_offset": 7, "nodeName": "relay", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 146, "col_offset": 39, "nodeName": "Constant", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 147, "col_offset": 44, "nodeName": "NDArray", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "body", "type": "Any"}, {"lineNumber": 179, "col_offset": 58, "nodeName": "Call", "type": "Any"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 193, "col_offset": 11, "nodeName": "graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 211, "col_offset": 10, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "body", "type": "Any"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "Var", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 217, "col_offset": 22, "nodeName": "global_var", "type": "Any"}, {"lineNumber": 217, "col_offset": 34, "nodeName": "GlobalVar", "type": "Any"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 221, "col_offset": 9, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 222, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "op", "type": "Any"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "Op", "type": "Any"}, {"lineNumber": 223, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "code", "type": "str"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 360, "col_offset": 14, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 366, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 366, "col_offset": 22, "nodeName": "id_defn", "type": "Any"}, {"lineNumber": 366, "col_offset": 31, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 370, "col_offset": 14, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 376, "col_offset": 22, "nodeName": "id_defn", "type": "Any"}, {"lineNumber": 376, "col_offset": 31, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 412, "col_offset": 14, "nodeName": "Var", "type": "Any"}, {"lineNumber": 413, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 426, "col_offset": 15, "nodeName": "Var", "type": "Any"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 440, "col_offset": 13, "nodeName": "Var", "type": "Any"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 454, "col_offset": 15, "nodeName": "Var", "type": "Any"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 526, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 569, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 580, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 602, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 637, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 650, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 652, "col_offset": 19, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 653, "col_offset": 11, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 654, "col_offset": 12, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 657, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 658, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 667, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 669, "col_offset": 19, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 670, "col_offset": 11, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 670, "col_offset": 26, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 671, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 672, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 676, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 681, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 683, "col_offset": 15, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 684, "col_offset": 14, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 685, "col_offset": 11, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 686, "col_offset": 12, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 692, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 693, "col_offset": 21, "nodeName": "LIST_DEFN", "type": "str"}, {"lineNumber": 693, "col_offset": 32, "nodeName": "mod", "type": "Any"}, {"lineNumber": 697, "col_offset": 19, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 698, "col_offset": 16, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 699, "col_offset": 16, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 700, "col_offset": 11, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 701, "col_offset": 12, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 707, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 708, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 709, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 716, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 723, "col_offset": 9, "nodeName": "match_keyword", "type": "str"}, {"lineNumber": 723, "col_offset": 24, "nodeName": "is_complete", "type": "bool"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 726, "col_offset": 8, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 727, "col_offset": 8, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "nil_constructor", "type": "Any"}, {"lineNumber": 735, "col_offset": 24, "nodeName": "list_def", "type": "Any"}, {"lineNumber": 737, "col_offset": 8, "nodeName": "length_var", "type": "Any"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 739, "col_offset": 8, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "input_var", "type": "Any"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "rest_var", "type": "Any"}, {"lineNumber": 763, "col_offset": 26, "nodeName": "length_func", "type": "Any"}, {"lineNumber": 784, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 786, "col_offset": 15, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 787, "col_offset": 14, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 788, "col_offset": 23, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 789, "col_offset": 46, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 790, "col_offset": 22, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 790, "col_offset": 51, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 791, "col_offset": 15, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 792, "col_offset": 8, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 795, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 797, "col_offset": 25, "nodeName": "GlobalVar", "type": "Any"}, {"lineNumber": 798, "col_offset": 16, "nodeName": "Var", "type": "Any"}, {"lineNumber": 798, "col_offset": 31, "nodeName": "int32", "type": "Any"}, {"lineNumber": 799, "col_offset": 26, "nodeName": "Function", "type": "Any"}, {"lineNumber": 804, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 806, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 814, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 820, "col_offset": 4, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 834, "col_offset": 4, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 844, "col_offset": 4, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 854, "col_offset": 4, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 864, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 866, "col_offset": 17, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 867, "col_offset": 14, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 868, "col_offset": 17, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 868, "col_offset": 32, "nodeName": "extern_var", "type": "Any"}, {"lineNumber": 869, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 871, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 875, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 878, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "import_from_std", "type": "Any"}, {"lineNumber": 882, "col_offset": 4, "nodeName": "test_graph", "type": "Callable[[], Any]"}, {"lineNumber": 883, "col_offset": 4, "nodeName": "test_comments", "type": "Callable[[], Any]"}, {"lineNumber": 884, "col_offset": 4, "nodeName": "test_int_literal", "type": "Callable[[], Any]"}, {"lineNumber": 885, "col_offset": 4, "nodeName": "test_float_literal", "type": "Callable[[], Any]"}, {"lineNumber": 886, "col_offset": 4, "nodeName": "test_bool_literal", "type": "Callable[[], Any]"}, {"lineNumber": 887, "col_offset": 4, "nodeName": "test_negative", "type": "Callable[[], Any]"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "test_bin_op", "type": "Callable[[], Any]"}, {"lineNumber": 889, "col_offset": 4, "nodeName": "test_parens", "type": "Callable[[], Any]"}, {"lineNumber": 890, "col_offset": 4, "nodeName": "test_op_assoc", "type": "Callable[[], Any]"}, {"lineNumber": 891, "col_offset": 4, "nodeName": "test_let", "type": "Callable[[], Any]"}, {"lineNumber": 892, "col_offset": 4, "nodeName": "test_seq", "type": "Callable[[], Any]"}, {"lineNumber": 893, "col_offset": 4, "nodeName": "test_tuple", "type": "Callable[[], Any]"}, {"lineNumber": 894, "col_offset": 4, "nodeName": "test_func", "type": "Callable[[], Any]"}, {"lineNumber": 895, "col_offset": 4, "nodeName": "test_defn", "type": "Callable[[], Any]"}, {"lineNumber": 896, "col_offset": 4, "nodeName": "test_recursive_call", "type": "Callable[[], Any]"}, {"lineNumber": 897, "col_offset": 4, "nodeName": "test_ifelse", "type": "Callable[[], Any]"}, {"lineNumber": 898, "col_offset": 4, "nodeName": "test_call", "type": "Callable[[], Any]"}, {"lineNumber": 899, "col_offset": 4, "nodeName": "test_incomplete_type", "type": "Callable[[], Any]"}, {"lineNumber": 900, "col_offset": 4, "nodeName": "test_builtin_types", "type": "Callable[[], Any]"}, {"lineNumber": 901, "col_offset": 4, "nodeName": "test_tensor_type", "type": "Callable[[], Any]"}, {"lineNumber": 902, "col_offset": 4, "nodeName": "test_function_type", "type": "Callable[[], Any]"}, {"lineNumber": 903, "col_offset": 4, "nodeName": "test_tuple_type", "type": "Callable[[], Any]"}, {"lineNumber": 904, "col_offset": 4, "nodeName": "test_adt_defn", "type": "Callable[[], Any]"}, {"lineNumber": 905, "col_offset": 4, "nodeName": "test_empty_adt_defn", "type": "Callable[[], Any]"}, {"lineNumber": 906, "col_offset": 4, "nodeName": "test_multiple_cons_defn", "type": "Callable[[], Any]"}, {"lineNumber": 907, "col_offset": 4, "nodeName": "test_multiple_type_param_defn", "type": "Callable[[], Any]"}, {"lineNumber": 908, "col_offset": 4, "nodeName": "test_match", "type": "Callable[[], Any]"}, {"lineNumber": 909, "col_offset": 4, "nodeName": "test_adt_cons_expr", "type": "Callable[[], Any]"}, {"lineNumber": 910, "col_offset": 4, "nodeName": "test_duplicate_adt_defn", "type": "Any"}, {"lineNumber": 911, "col_offset": 4, "nodeName": "test_duplicate_adt_cons", "type": "Any"}, {"lineNumber": 912, "col_offset": 4, "nodeName": "test_duplicate_adt_cons_defn", "type": "Any"}, {"lineNumber": 913, "col_offset": 4, "nodeName": "test_duplicate_global_var", "type": "Any"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "test_extern_adt_defn", "type": "Callable[[], Any]"}, {"lineNumber": 915, "col_offset": 4, "nodeName": "test_import_grad", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 24, "col_offset": 46, "nodeName": "base", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "ir", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "astext", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "code", "type": "str"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 39, "nodeName": "relay", "type": "Any"}, {"lineNumber": 147, "col_offset": 44, "nodeName": "nd", "type": "Any"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 179, "col_offset": 58, "nodeName": "relay", "type": "Any"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "BINARY_OPS", "type": "Dict[str, Any]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 193, "col_offset": 23, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 48, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 198, "col_offset": 23, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 198, "col_offset": 57, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 57, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "var", "type": "Any"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "relay", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "body", "type": "Any"}, {"lineNumber": 217, "col_offset": 34, "nodeName": "relay", "type": "Any"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "global_var", "type": "Any"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 223, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 297, "col_offset": 27, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 299, "col_offset": 29, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 301, "col_offset": 31, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 303, "col_offset": 34, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "Function", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "Function", "type": "Any"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "Function", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "Function", "type": "Any"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "X_ANNO", "type": "Any"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "int32", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "Function", "type": "Any"}, {"lineNumber": 354, "col_offset": 27, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 366, "col_offset": 31, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 376, "col_offset": 31, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "If", "type": "Any"}, {"lineNumber": 412, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "id_func", "type": "Any"}, {"lineNumber": 426, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 433, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 440, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "id_var", "type": "Any"}, {"lineNumber": 454, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "Call", "type": "Any"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "Call", "type": "Any"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 538, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 539, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 540, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 555, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 564, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 565, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 574, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 587, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 598, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 609, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 621, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 622, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 644, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 650, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 652, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 653, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 657, "col_offset": 8, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 667, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 669, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 670, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 681, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 683, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 684, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 685, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 687, "col_offset": 13, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 692, "col_offset": 8, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 697, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 698, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 699, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 700, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 702, "col_offset": 13, "nodeName": "typ_var_a", "type": "Any"}, {"lineNumber": 702, "col_offset": 24, "nodeName": "typ_var_b", "type": "Any"}, {"lineNumber": 707, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 724, "col_offset": 14, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 726, "col_offset": 19, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 727, "col_offset": 18, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 728, "col_offset": 27, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 729, "col_offset": 50, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 730, "col_offset": 26, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 730, "col_offset": 55, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 731, "col_offset": 19, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 732, "col_offset": 12, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 735, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 737, "col_offset": 21, "nodeName": "GlobalVar", "type": "Any"}, {"lineNumber": 738, "col_offset": 18, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 739, "col_offset": 21, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 739, "col_offset": 30, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 740, "col_offset": 20, "nodeName": "Var", "type": "Any"}, {"lineNumber": 740, "col_offset": 36, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 741, "col_offset": 19, "nodeName": "Var", "type": "Any"}, {"lineNumber": 742, "col_offset": 20, "nodeName": "Let", "type": "Any"}, {"lineNumber": 743, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 744, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 746, "col_offset": 15, "nodeName": "Match", "type": "Any"}, {"lineNumber": 746, "col_offset": 27, "nodeName": "input_var", "type": "Any"}, {"lineNumber": 757, "col_offset": 22, "nodeName": "Function", "type": "Any"}, {"lineNumber": 759, "col_offset": 12, "nodeName": "body", "type": "Any"}, {"lineNumber": 760, "col_offset": 12, "nodeName": "int32", "type": "Any"}, {"lineNumber": 763, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 779, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 784, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 786, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 787, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 788, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 789, "col_offset": 17, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 790, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 791, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 793, "col_offset": 9, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 794, "col_offset": 9, "nodeName": "cons_constructor", "type": "Any"}, {"lineNumber": 794, "col_offset": 27, "nodeName": "nil_constructor", "type": "Any"}, {"lineNumber": 795, "col_offset": 8, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 797, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 798, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 799, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 800, "col_offset": 9, "nodeName": "input_var", "type": "Any"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "cons_constructor", "type": "Any"}, {"lineNumber": 801, "col_offset": 25, "nodeName": "input_var", "type": "Any"}, {"lineNumber": 802, "col_offset": 8, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 802, "col_offset": 17, "nodeName": "int32", "type": "Any"}, {"lineNumber": 804, "col_offset": 8, "nodeName": "make_singleton_var", "type": "Any"}, {"lineNumber": 813, "col_offset": 14, "nodeName": "LIST_DEFN", "type": "str"}, {"lineNumber": 828, "col_offset": 14, "nodeName": "LIST_DEFN", "type": "str"}, {"lineNumber": 864, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 866, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 867, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 868, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 868, "col_offset": 45, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 869, "col_offset": 8, "nodeName": "extern_var", "type": "Any"}, {"lineNumber": 878, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 24, "col_offset": 46, "nodeName": "_ffi", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "expr", "type": "Any"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "SEMVER", "type": "str"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 44, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 30, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 30, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 175, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "bin_op", "type": "str"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 52, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "Let", "type": "Any"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "Y", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 277, "col_offset": 21, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 277, "col_offset": 27, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 297, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 299, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 301, "col_offset": 31, "nodeName": "relay", "type": "Any"}, {"lineNumber": 303, "col_offset": 34, "nodeName": "relay", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 322, "col_offset": 13, "nodeName": "X", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 333, "col_offset": 13, "nodeName": "X", "type": "Any"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "Y", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "X", "type": "Any"}, {"lineNumber": 334, "col_offset": 25, "nodeName": "Y", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 344, "col_offset": 13, "nodeName": "X_ANNO", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 354, "col_offset": 45, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 420, "col_offset": 32, "nodeName": "X", "type": "Any"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 434, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "Call", "type": "Any"}, {"lineNumber": 435, "col_offset": 23, "nodeName": "constant", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 448, "col_offset": 32, "nodeName": "X", "type": "Any"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "Call", "type": "Any"}, {"lineNumber": 449, "col_offset": 23, "nodeName": "id_var", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 462, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 468, "col_offset": 12, "nodeName": "Call", "type": "Any"}, {"lineNumber": 468, "col_offset": 23, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 478, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 480, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 528, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 547, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 547, "col_offset": 49, "nodeName": "builtin_type", "type": "str"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 554, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 563, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 572, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 585, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 586, "col_offset": 47, "nodeName": "int32", "type": "Any"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 596, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 597, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 597, "col_offset": 68, "nodeName": "int32", "type": "Any"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 607, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 608, "col_offset": 91, "nodeName": "int32", "type": "Any"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 620, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 631, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 632, "col_offset": 12, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 642, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 643, "col_offset": 12, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 656, "col_offset": 13, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 656, "col_offset": 42, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 689, "col_offset": 16, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 689, "col_offset": 72, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 690, "col_offset": 16, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 690, "col_offset": 45, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 704, "col_offset": 16, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 704, "col_offset": 55, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 705, "col_offset": 16, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 705, "col_offset": 56, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 724, "col_offset": 14, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 726, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 727, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 728, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 729, "col_offset": 21, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 730, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 731, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 733, "col_offset": 13, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 734, "col_offset": 13, "nodeName": "cons_constructor", "type": "Any"}, {"lineNumber": 734, "col_offset": 31, "nodeName": "nil_constructor", "type": "Any"}, {"lineNumber": 735, "col_offset": 12, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 737, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 738, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 740, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 741, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 742, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 745, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 746, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 755, "col_offset": 21, "nodeName": "is_complete", "type": "bool"}, {"lineNumber": 757, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 758, "col_offset": 13, "nodeName": "input_var", "type": "Any"}, {"lineNumber": 761, "col_offset": 13, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 763, "col_offset": 12, "nodeName": "length_var", "type": "Any"}, {"lineNumber": 789, "col_offset": 26, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 789, "col_offset": 35, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 801, "col_offset": 36, "nodeName": "nil_constructor", "type": "Any"}, {"lineNumber": 24, "col_offset": 46, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "bin_op", "type": "str"}, {"lineNumber": 188, "col_offset": 35, "nodeName": "const", "type": "Any"}, {"lineNumber": 188, "col_offset": 51, "nodeName": "const", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "const", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 277, "col_offset": 33, "nodeName": "const", "type": "Any"}, {"lineNumber": 299, "col_offset": 42, "nodeName": "const", "type": "Any"}, {"lineNumber": 301, "col_offset": 44, "nodeName": "const", "type": "Any"}, {"lineNumber": 301, "col_offset": 60, "nodeName": "const", "type": "Any"}, {"lineNumber": 303, "col_offset": 47, "nodeName": "const", "type": "Any"}, {"lineNumber": 303, "col_offset": 63, "nodeName": "const", "type": "Any"}, {"lineNumber": 303, "col_offset": 79, "nodeName": "const", "type": "Any"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 354, "col_offset": 45, "nodeName": "ir", "type": "Any"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 420, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 421, "col_offset": 27, "nodeName": "const", "type": "Any"}, {"lineNumber": 421, "col_offset": 44, "nodeName": "Call", "type": "Any"}, {"lineNumber": 421, "col_offset": 55, "nodeName": "id_func", "type": "Any"}, {"lineNumber": 434, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 434, "col_offset": 31, "nodeName": "const", "type": "Any"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 448, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 462, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 463, "col_offset": 17, "nodeName": "X", "type": "Any"}, {"lineNumber": 463, "col_offset": 20, "nodeName": "Y", "type": "Any"}, {"lineNumber": 464, "col_offset": 16, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 464, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 464, "col_offset": 34, "nodeName": "Y", "type": "Any"}, {"lineNumber": 468, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 478, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 479, "col_offset": 17, "nodeName": "X", "type": "Any"}, {"lineNumber": 484, "col_offset": 13, "nodeName": "const", "type": "Any"}, {"lineNumber": 528, "col_offset": 19, "nodeName": "op", "type": "Any"}, {"lineNumber": 528, "col_offset": 41, "nodeName": "const", "type": "Any"}, {"lineNumber": 554, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 554, "col_offset": 27, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 563, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 563, "col_offset": 27, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 572, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 572, "col_offset": 27, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 585, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 585, "col_offset": 27, "nodeName": "FuncType", "type": "Any"}, {"lineNumber": 585, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 586, "col_offset": 31, "nodeName": "const", "type": "Any"}, {"lineNumber": 596, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 596, "col_offset": 27, "nodeName": "FuncType", "type": "Any"}, {"lineNumber": 596, "col_offset": 51, "nodeName": "int32", "type": "Any"}, {"lineNumber": 597, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 597, "col_offset": 52, "nodeName": "const", "type": "Any"}, {"lineNumber": 607, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 607, "col_offset": 27, "nodeName": "FuncType", "type": "Any"}, {"lineNumber": 607, "col_offset": 58, "nodeName": "int32", "type": "Any"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 608, "col_offset": 75, "nodeName": "const", "type": "Any"}, {"lineNumber": 620, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 620, "col_offset": 27, "nodeName": "TupleType", "type": "Any"}, {"lineNumber": 631, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 631, "col_offset": 27, "nodeName": "TupleType", "type": "Any"}, {"lineNumber": 632, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 642, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 642, "col_offset": 27, "nodeName": "TupleType", "type": "Any"}, {"lineNumber": 643, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 656, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 689, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 689, "col_offset": 43, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 690, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 704, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 704, "col_offset": 43, "nodeName": "typ_var_a", "type": "Any"}, {"lineNumber": 705, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 705, "col_offset": 44, "nodeName": "typ_var_b", "type": "Any"}, {"lineNumber": 729, "col_offset": 30, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 729, "col_offset": 39, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 745, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 745, "col_offset": 22, "nodeName": "const", "type": "Any"}, {"lineNumber": 745, "col_offset": 38, "nodeName": "Call", "type": "Any"}, {"lineNumber": 745, "col_offset": 49, "nodeName": "length_var", "type": "Any"}, {"lineNumber": 747, "col_offset": 13, "nodeName": "Clause", "type": "Any"}, {"lineNumber": 751, "col_offset": 16, "nodeName": "cons_case", "type": "Any"}, {"lineNumber": 752, "col_offset": 12, "nodeName": "Clause", "type": "Any"}, {"lineNumber": 778, "col_offset": 19, "nodeName": "LIST_DEFN", "type": "str"}, {"lineNumber": 778, "col_offset": 30, "nodeName": "match_keyword", "type": "str"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "BINARY_OPS", "type": "Dict[str, Any]"}, {"lineNumber": 188, "col_offset": 35, "nodeName": "relay", "type": "Any"}, {"lineNumber": 188, "col_offset": 51, "nodeName": "relay", "type": "Any"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 277, "col_offset": 33, "nodeName": "relay", "type": "Any"}, {"lineNumber": 299, "col_offset": 42, "nodeName": "relay", "type": "Any"}, {"lineNumber": 301, "col_offset": 44, "nodeName": "relay", "type": "Any"}, {"lineNumber": 301, "col_offset": 60, "nodeName": "relay", "type": "Any"}, {"lineNumber": 303, "col_offset": 47, "nodeName": "relay", "type": "Any"}, {"lineNumber": 303, "col_offset": 63, "nodeName": "relay", "type": "Any"}, {"lineNumber": 303, "col_offset": 79, "nodeName": "relay", "type": "Any"}, {"lineNumber": 354, "col_offset": 45, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 354, "col_offset": 77, "nodeName": "const", "type": "Any"}, {"lineNumber": 421, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 421, "col_offset": 44, "nodeName": "relay", "type": "Any"}, {"lineNumber": 434, "col_offset": 31, "nodeName": "relay", "type": "Any"}, {"lineNumber": 449, "col_offset": 32, "nodeName": "const", "type": "Any"}, {"lineNumber": 464, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 468, "col_offset": 34, "nodeName": "const", "type": "Any"}, {"lineNumber": 468, "col_offset": 50, "nodeName": "const", "type": "Any"}, {"lineNumber": 484, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 528, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 528, "col_offset": 41, "nodeName": "relay", "type": "Any"}, {"lineNumber": 554, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 563, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 572, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 585, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 586, "col_offset": 31, "nodeName": "relay", "type": "Any"}, {"lineNumber": 596, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 596, "col_offset": 43, "nodeName": "int32", "type": "Any"}, {"lineNumber": 597, "col_offset": 28, "nodeName": "Var", "type": "Any"}, {"lineNumber": 597, "col_offset": 43, "nodeName": "int32", "type": "Any"}, {"lineNumber": 597, "col_offset": 52, "nodeName": "relay", "type": "Any"}, {"lineNumber": 607, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 607, "col_offset": 43, "nodeName": "int32", "type": "Any"}, {"lineNumber": 607, "col_offset": 50, "nodeName": "int32", "type": "Any"}, {"lineNumber": 608, "col_offset": 28, "nodeName": "Var", "type": "Any"}, {"lineNumber": 608, "col_offset": 43, "nodeName": "int32", "type": "Any"}, {"lineNumber": 608, "col_offset": 51, "nodeName": "Var", "type": "Any"}, {"lineNumber": 608, "col_offset": 66, "nodeName": "int32", "type": "Any"}, {"lineNumber": 608, "col_offset": 75, "nodeName": "relay", "type": "Any"}, {"lineNumber": 620, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 631, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 631, "col_offset": 44, "nodeName": "int32", "type": "Any"}, {"lineNumber": 632, "col_offset": 25, "nodeName": "const", "type": "Any"}, {"lineNumber": 642, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 642, "col_offset": 44, "nodeName": "int32", "type": "Any"}, {"lineNumber": 642, "col_offset": 51, "nodeName": "int32", "type": "Any"}, {"lineNumber": 643, "col_offset": 25, "nodeName": "const", "type": "Any"}, {"lineNumber": 643, "col_offset": 41, "nodeName": "const", "type": "Any"}, {"lineNumber": 689, "col_offset": 52, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 689, "col_offset": 61, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 745, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 745, "col_offset": 38, "nodeName": "relay", "type": "Any"}, {"lineNumber": 745, "col_offset": 62, "nodeName": "rest_var", "type": "Any"}, {"lineNumber": 747, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 748, "col_offset": 16, "nodeName": "PatternConstructor", "type": "Any"}, {"lineNumber": 749, "col_offset": 20, "nodeName": "cons_constructor", "type": "Any"}, {"lineNumber": 752, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 753, "col_offset": 16, "nodeName": "PatternConstructor", "type": "Any"}, {"lineNumber": 753, "col_offset": 41, "nodeName": "nil_constructor", "type": "Any"}, {"lineNumber": 754, "col_offset": 16, "nodeName": "const", "type": "Any"}, {"lineNumber": 354, "col_offset": 77, "nodeName": "relay", "type": "Any"}, {"lineNumber": 421, "col_offset": 65, "nodeName": "const", "type": "Any"}, {"lineNumber": 449, "col_offset": 32, "nodeName": "relay", "type": "Any"}, {"lineNumber": 468, "col_offset": 34, "nodeName": "relay", "type": "Any"}, {"lineNumber": 468, "col_offset": 50, "nodeName": "relay", "type": "Any"}, {"lineNumber": 597, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 608, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 608, "col_offset": 51, "nodeName": "relay", "type": "Any"}, {"lineNumber": 632, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 643, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 643, "col_offset": 41, "nodeName": "relay", "type": "Any"}, {"lineNumber": 748, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 753, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 754, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 421, "col_offset": 65, "nodeName": "relay", "type": "Any"}, {"lineNumber": 750, "col_offset": 21, "nodeName": "PatternWildcard", "type": "Any"}, {"lineNumber": 750, "col_offset": 46, "nodeName": "PatternVar", "type": "Any"}, {"lineNumber": 750, "col_offset": 63, "nodeName": "rest_var", "type": "Any"}, {"lineNumber": 750, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 750, "col_offset": 46, "nodeName": "relay", "type": "Any"}]