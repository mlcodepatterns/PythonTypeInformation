[{"lineNumber": 24, "col_offset": 0, "nodeName": "_get_positive_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "test_fold_fwd_simple", "type": "Callable[[], Any]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "test_fold_fwd_dual_path", "type": "Callable[[], Any]"}, {"lineNumber": 190, "col_offset": 0, "nodeName": "test_fold_fwd_fail", "type": "Callable[[], Any]"}, {"lineNumber": 225, "col_offset": 0, "nodeName": "test_fold_fwd_relu_fail", "type": "Callable[[], Any]"}, {"lineNumber": 268, "col_offset": 0, "nodeName": "test_fold_fwd_negative_scale", "type": "Callable[[], Any]"}, {"lineNumber": 323, "col_offset": 0, "nodeName": "test_fold_bwd_simple", "type": "Callable[[], Any]"}, {"lineNumber": 396, "col_offset": 0, "nodeName": "test_fold_bwd_dual_path", "type": "Callable[[], Any]"}, {"lineNumber": 472, "col_offset": 0, "nodeName": "test_fold_bwd_dual_consumer", "type": "Callable[[], Any]"}, {"lineNumber": 564, "col_offset": 0, "nodeName": "test_fold_bwd_fail", "type": "Callable[[], Any]"}, {"lineNumber": 623, "col_offset": 0, "nodeName": "test_fold_bwd_relu_fail", "type": "Callable[[], Any]"}, {"lineNumber": 656, "col_offset": 0, "nodeName": "test_fold_bwd_negative_scale", "type": "Callable[[], Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "expected", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "expected", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "expected", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "expected", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 418, "col_offset": 4, "nodeName": "expected", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "expected", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "fail1", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 589, "col_offset": 4, "nodeName": "fail2", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 603, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 625, "col_offset": 4, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 658, "col_offset": 4, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 669, "col_offset": 4, "nodeName": "expected", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "entry", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 645, "col_offset": 4, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 647, "col_offset": 4, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 652, "col_offset": 4, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 707, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "astype", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "opt_pass", "type": "Any"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "Pass", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "opt_pass", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "mod", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "entry", "type": "Any"}, {"lineNumber": 33, "col_offset": 58, "nodeName": "body", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "blocking", "type": "None"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "blocking", "type": "None"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "type_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "blocking", "type": "None"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "blocking", "type": "None"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "blocking", "type": "None"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "blocking", "type": "None"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "type_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "xx", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "blocking", "type": "None"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "xx", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "blocking", "type": "None"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 256, "col_offset": 35, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "const", "type": "Any"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 258, "col_offset": 35, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 261, "col_offset": 40, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "const", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 263, "col_offset": 40, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 284, "col_offset": 11, "nodeName": "blocking", "type": "None"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "blocking", "type": "None"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "type_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 327, "col_offset": 11, "nodeName": "blocking", "type": "None"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 339, "col_offset": 11, "nodeName": "blocking", "type": "None"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 347, "col_offset": 11, "nodeName": "blocking", "type": "None"}, {"lineNumber": 365, "col_offset": 11, "nodeName": "blocking", "type": "None"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 379, "col_offset": 11, "nodeName": "blocking", "type": "None"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "type_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 453, "col_offset": 11, "nodeName": "blocking", "type": "None"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "type_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "y0", "type": "Any"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "y0", "type": "Any"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "y0", "type": "Any"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 545, "col_offset": 11, "nodeName": "blocking", "type": "None"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "type_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 562, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 606, "col_offset": 11, "nodeName": "blocking", "type": "None"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 617, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 617, "col_offset": 38, "nodeName": "fail1", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 618, "col_offset": 43, "nodeName": "fail1", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 619, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 619, "col_offset": 38, "nodeName": "fail2", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 620, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 620, "col_offset": 43, "nodeName": "fail2", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 645, "col_offset": 16, "nodeName": "var", "type": "Any"}, {"lineNumber": 646, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 646, "col_offset": 35, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 647, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 648, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 648, "col_offset": 35, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 650, "col_offset": 16, "nodeName": "var", "type": "Any"}, {"lineNumber": 651, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 651, "col_offset": 40, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 652, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 653, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 653, "col_offset": 40, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 672, "col_offset": 11, "nodeName": "blocking", "type": "None"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 691, "col_offset": 11, "nodeName": "blocking", "type": "None"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "type_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 704, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 705, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 708, "col_offset": 4, "nodeName": "test_fold_fwd_simple", "type": "Callable[[], Any]"}, {"lineNumber": 709, "col_offset": 4, "nodeName": "test_fold_fwd_dual_path", "type": "Callable[[], Any]"}, {"lineNumber": 710, "col_offset": 4, "nodeName": "test_fold_fwd_fail", "type": "Callable[[], Any]"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "test_fold_fwd_relu_fail", "type": "Callable[[], Any]"}, {"lineNumber": 712, "col_offset": 4, "nodeName": "test_fold_fwd_negative_scale", "type": "Callable[[], Any]"}, {"lineNumber": 713, "col_offset": 4, "nodeName": "test_fold_bwd_simple", "type": "Callable[[], Any]"}, {"lineNumber": 714, "col_offset": 4, "nodeName": "test_fold_bwd_dual_path", "type": "Callable[[], Any]"}, {"lineNumber": 715, "col_offset": 4, "nodeName": "test_fold_bwd_dual_consumer", "type": "Callable[[], Any]"}, {"lineNumber": 716, "col_offset": 4, "nodeName": "test_fold_bwd_fail", "type": "Callable[[], Any]"}, {"lineNumber": 717, "col_offset": 4, "nodeName": "test_fold_bwd_relu_fail", "type": "Callable[[], Any]"}, {"lineNumber": 718, "col_offset": 4, "nodeName": "test_fold_bwd_negative_scale", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "transform", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "expr", "type": "Any"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "Function", "type": "Any"}, {"lineNumber": 33, "col_offset": 58, "nodeName": "entry", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 90, "col_offset": 40, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 90, "col_offset": 50, "nodeName": "channels", "type": "int"}, {"lineNumber": 90, "col_offset": 60, "nodeName": "blocking", "type": "None"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "y1", "type": "Any"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "checked_type", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "y1", "type": "Any"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "expected", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 95, "col_offset": 42, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 95, "col_offset": 51, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 95, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 95, "col_offset": 74, "nodeName": "channels", "type": "int"}, {"lineNumber": 95, "col_offset": 84, "nodeName": "blocking", "type": "None"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 99, "col_offset": 39, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 99, "col_offset": 50, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "subtract", "type": "Any"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 111, "col_offset": 32, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "y1", "type": "Any"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "y2", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 126, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "z", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "_in_scale", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "_in_scale", "type": "Any"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "divide", "type": "Any"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "_in_scale", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "subtract", "type": "Any"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "_in_scale", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "_in_scale", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "y1", "type": "Any"}, {"lineNumber": 157, "col_offset": 26, "nodeName": "y2", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 36, "nodeName": "z", "type": "Any"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "wshape", "type": "Tuple[int, int, int, int, int, int]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "wshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "channels", "type": "int"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 178, "col_offset": 40, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 178, "col_offset": 50, "nodeName": "channels", "type": "int"}, {"lineNumber": 178, "col_offset": 60, "nodeName": "blocking", "type": "None"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "y1", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "y1", "type": "Any"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "checked_type", "type": "Any"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "expected", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 183, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 183, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 183, "col_offset": 42, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 183, "col_offset": 51, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 183, "col_offset": 61, "nodeName": "channels", "type": "int"}, {"lineNumber": 183, "col_offset": 71, "nodeName": "blocking", "type": "None"}, {"lineNumber": 184, "col_offset": 22, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 185, "col_offset": 39, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 185, "col_offset": 50, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 193, "col_offset": 30, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "leaky_relu", "type": "Any"}, {"lineNumber": 194, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 195, "col_offset": 29, "nodeName": "xx", "type": "Any"}, {"lineNumber": 195, "col_offset": 33, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "y1", "type": "Any"}, {"lineNumber": 201, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 202, "col_offset": 59, "nodeName": "z", "type": "Any"}, {"lineNumber": 205, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 215, "col_offset": 30, "nodeName": "channels", "type": "int"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 217, "col_offset": 13, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 217, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 217, "col_offset": 31, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 217, "col_offset": 40, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 217, "col_offset": 50, "nodeName": "channels", "type": "int"}, {"lineNumber": 217, "col_offset": 60, "nodeName": "blocking", "type": "None"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 218, "col_offset": 26, "nodeName": "y1", "type": "Any"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 219, "col_offset": 33, "nodeName": "y1", "type": "Any"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 220, "col_offset": 39, "nodeName": "y1", "type": "Any"}, {"lineNumber": 220, "col_offset": 43, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 228, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 228, "col_offset": 30, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 229, "col_offset": 13, "nodeName": "relu", "type": "Any"}, {"lineNumber": 229, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 230, "col_offset": 13, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 230, "col_offset": 29, "nodeName": "xx", "type": "Any"}, {"lineNumber": 230, "col_offset": 33, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "y1", "type": "Any"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 237, "col_offset": 59, "nodeName": "z", "type": "Any"}, {"lineNumber": 240, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 249, "col_offset": 30, "nodeName": "channels", "type": "int"}, {"lineNumber": 250, "col_offset": 13, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 250, "col_offset": 31, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 250, "col_offset": 40, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 250, "col_offset": 50, "nodeName": "channels", "type": "int"}, {"lineNumber": 250, "col_offset": 60, "nodeName": "blocking", "type": "None"}, {"lineNumber": 251, "col_offset": 13, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 251, "col_offset": 26, "nodeName": "y1", "type": "Any"}, {"lineNumber": 252, "col_offset": 20, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 252, "col_offset": 33, "nodeName": "y1", "type": "Any"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 253, "col_offset": 39, "nodeName": "y1", "type": "Any"}, {"lineNumber": 253, "col_offset": 43, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 271, "col_offset": 19, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 272, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 272, "col_offset": 30, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 273, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 273, "col_offset": 31, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 279, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 279, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 283, "col_offset": 19, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 293, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 294, "col_offset": 29, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 300, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 300, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 303, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 310, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 311, "col_offset": 13, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 311, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 311, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 311, "col_offset": 31, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 311, "col_offset": 41, "nodeName": "channels", "type": "int"}, {"lineNumber": 311, "col_offset": 51, "nodeName": "blocking", "type": "None"}, {"lineNumber": 312, "col_offset": 13, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "y1", "type": "Any"}, {"lineNumber": 313, "col_offset": 21, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 313, "col_offset": 33, "nodeName": "checked_type", "type": "Any"}, {"lineNumber": 314, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 315, "col_offset": 20, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 315, "col_offset": 33, "nodeName": "y1", "type": "Any"}, {"lineNumber": 316, "col_offset": 22, "nodeName": "expected", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 316, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 316, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 316, "col_offset": 42, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 316, "col_offset": 52, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 316, "col_offset": 65, "nodeName": "channels", "type": "int"}, {"lineNumber": 316, "col_offset": 75, "nodeName": "blocking", "type": "None"}, {"lineNumber": 317, "col_offset": 22, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 317, "col_offset": 35, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 318, "col_offset": 39, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 318, "col_offset": 50, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 326, "col_offset": 19, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 326, "col_offset": 32, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 331, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 331, "col_offset": 31, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 337, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 337, "col_offset": 25, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 338, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 341, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 341, "col_offset": 30, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 342, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 342, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 342, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 346, "col_offset": 19, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 346, "col_offset": 32, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 359, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 359, "col_offset": 31, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 371, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 371, "col_offset": 25, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 372, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 373, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 373, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 373, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 376, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 377, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 378, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 383, "col_offset": 13, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 383, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 383, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 383, "col_offset": 31, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 383, "col_offset": 41, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 383, "col_offset": 52, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 383, "col_offset": 65, "nodeName": "channels", "type": "int"}, {"lineNumber": 383, "col_offset": 75, "nodeName": "blocking", "type": "None"}, {"lineNumber": 384, "col_offset": 13, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 384, "col_offset": 26, "nodeName": "y1", "type": "Any"}, {"lineNumber": 385, "col_offset": 21, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 385, "col_offset": 33, "nodeName": "checked_type", "type": "Any"}, {"lineNumber": 386, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 387, "col_offset": 20, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 387, "col_offset": 33, "nodeName": "y1", "type": "Any"}, {"lineNumber": 388, "col_offset": 22, "nodeName": "expected", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 388, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 388, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 388, "col_offset": 42, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 388, "col_offset": 52, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 388, "col_offset": 63, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 388, "col_offset": 76, "nodeName": "channels", "type": "int"}, {"lineNumber": 388, "col_offset": 86, "nodeName": "blocking", "type": "None"}, {"lineNumber": 389, "col_offset": 22, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 389, "col_offset": 35, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 390, "col_offset": 39, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 390, "col_offset": 50, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 399, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 399, "col_offset": 19, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 399, "col_offset": 32, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 400, "col_offset": 13, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 400, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 400, "col_offset": 32, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "relu", "type": "Any"}, {"lineNumber": 406, "col_offset": 27, "nodeName": "y1", "type": "Any"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 407, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 407, "col_offset": 32, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 413, "col_offset": 13, "nodeName": "relu", "type": "Any"}, {"lineNumber": 413, "col_offset": 27, "nodeName": "y2", "type": "Any"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 414, "col_offset": 22, "nodeName": "y1", "type": "Any"}, {"lineNumber": 414, "col_offset": 26, "nodeName": "y2", "type": "Any"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 415, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 415, "col_offset": 30, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 416, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 416, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 416, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 420, "col_offset": 19, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 420, "col_offset": 32, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 421, "col_offset": 15, "nodeName": "blocking", "type": "None"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 423, "col_offset": 25, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 423, "col_offset": 39, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 425, "col_offset": 15, "nodeName": "blocking", "type": "None"}, {"lineNumber": 433, "col_offset": 13, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 433, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 439, "col_offset": 13, "nodeName": "relu", "type": "Any"}, {"lineNumber": 439, "col_offset": 27, "nodeName": "y1", "type": "Any"}, {"lineNumber": 440, "col_offset": 13, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 440, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 446, "col_offset": 13, "nodeName": "relu", "type": "Any"}, {"lineNumber": 446, "col_offset": 27, "nodeName": "y2", "type": "Any"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 447, "col_offset": 22, "nodeName": "y1", "type": "Any"}, {"lineNumber": 447, "col_offset": 26, "nodeName": "y2", "type": "Any"}, {"lineNumber": 448, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 448, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 448, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 451, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 452, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 455, "col_offset": 12, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 460, "col_offset": 13, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 460, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 460, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 460, "col_offset": 31, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 460, "col_offset": 41, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 460, "col_offset": 52, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 460, "col_offset": 65, "nodeName": "channels", "type": "int"}, {"lineNumber": 460, "col_offset": 75, "nodeName": "blocking", "type": "None"}, {"lineNumber": 461, "col_offset": 13, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 461, "col_offset": 26, "nodeName": "y1", "type": "Any"}, {"lineNumber": 462, "col_offset": 21, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 462, "col_offset": 33, "nodeName": "checked_type", "type": "Any"}, {"lineNumber": 463, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 464, "col_offset": 20, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 464, "col_offset": 33, "nodeName": "y1", "type": "Any"}, {"lineNumber": 465, "col_offset": 22, "nodeName": "expected", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 465, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 465, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 465, "col_offset": 42, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 465, "col_offset": 52, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 465, "col_offset": 63, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 465, "col_offset": 76, "nodeName": "channels", "type": "int"}, {"lineNumber": 465, "col_offset": 86, "nodeName": "blocking", "type": "None"}, {"lineNumber": 466, "col_offset": 22, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 466, "col_offset": 35, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 467, "col_offset": 15, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 467, "col_offset": 39, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 467, "col_offset": 50, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 474, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 474, "col_offset": 19, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 474, "col_offset": 32, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 475, "col_offset": 13, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 475, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 475, "col_offset": 32, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 481, "col_offset": 13, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 481, "col_offset": 28, "nodeName": "y0", "type": "Any"}, {"lineNumber": 481, "col_offset": 32, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 482, "col_offset": 13, "nodeName": "relu", "type": "Any"}, {"lineNumber": 482, "col_offset": 27, "nodeName": "y0", "type": "Any"}, {"lineNumber": 484, "col_offset": 13, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 484, "col_offset": 29, "nodeName": "y0", "type": "Any"}, {"lineNumber": 484, "col_offset": 33, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 490, "col_offset": 13, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 490, "col_offset": 28, "nodeName": "y1", "type": "Any"}, {"lineNumber": 490, "col_offset": 32, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 491, "col_offset": 13, "nodeName": "relu", "type": "Any"}, {"lineNumber": 491, "col_offset": 27, "nodeName": "y1", "type": "Any"}, {"lineNumber": 493, "col_offset": 13, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 493, "col_offset": 29, "nodeName": "y0", "type": "Any"}, {"lineNumber": 493, "col_offset": 33, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 499, "col_offset": 13, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 499, "col_offset": 28, "nodeName": "y2", "type": "Any"}, {"lineNumber": 499, "col_offset": 32, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 500, "col_offset": 13, "nodeName": "relu", "type": "Any"}, {"lineNumber": 500, "col_offset": 27, "nodeName": "y2", "type": "Any"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 502, "col_offset": 22, "nodeName": "y1", "type": "Any"}, {"lineNumber": 502, "col_offset": 26, "nodeName": "y2", "type": "Any"}, {"lineNumber": 503, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 503, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 503, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 507, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 507, "col_offset": 19, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 507, "col_offset": 32, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 509, "col_offset": 12, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 510, "col_offset": 15, "nodeName": "blocking", "type": "None"}, {"lineNumber": 518, "col_offset": 13, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 518, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 524, "col_offset": 13, "nodeName": "relu", "type": "Any"}, {"lineNumber": 524, "col_offset": 27, "nodeName": "y0", "type": "Any"}, {"lineNumber": 525, "col_offset": 13, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 525, "col_offset": 29, "nodeName": "y0", "type": "Any"}, {"lineNumber": 531, "col_offset": 13, "nodeName": "relu", "type": "Any"}, {"lineNumber": 531, "col_offset": 27, "nodeName": "y1", "type": "Any"}, {"lineNumber": 532, "col_offset": 13, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 532, "col_offset": 29, "nodeName": "y0", "type": "Any"}, {"lineNumber": 538, "col_offset": 13, "nodeName": "relu", "type": "Any"}, {"lineNumber": 538, "col_offset": 27, "nodeName": "y2", "type": "Any"}, {"lineNumber": 539, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 539, "col_offset": 22, "nodeName": "y1", "type": "Any"}, {"lineNumber": 539, "col_offset": 26, "nodeName": "y2", "type": "Any"}, {"lineNumber": 540, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 540, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 540, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 543, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 544, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 546, "col_offset": 12, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 547, "col_offset": 12, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 550, "col_offset": 12, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 552, "col_offset": 13, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 552, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 552, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 552, "col_offset": 31, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 552, "col_offset": 41, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 552, "col_offset": 52, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 552, "col_offset": 65, "nodeName": "channels", "type": "int"}, {"lineNumber": 552, "col_offset": 75, "nodeName": "blocking", "type": "None"}, {"lineNumber": 553, "col_offset": 13, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 553, "col_offset": 26, "nodeName": "y1", "type": "Any"}, {"lineNumber": 554, "col_offset": 21, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 554, "col_offset": 33, "nodeName": "checked_type", "type": "Any"}, {"lineNumber": 555, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 556, "col_offset": 20, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 556, "col_offset": 33, "nodeName": "y1", "type": "Any"}, {"lineNumber": 557, "col_offset": 22, "nodeName": "expected", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 557, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 557, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 557, "col_offset": 42, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 557, "col_offset": 52, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 557, "col_offset": 63, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 557, "col_offset": 76, "nodeName": "channels", "type": "int"}, {"lineNumber": 557, "col_offset": 86, "nodeName": "blocking", "type": "None"}, {"lineNumber": 558, "col_offset": 22, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 558, "col_offset": 35, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 559, "col_offset": 15, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 559, "col_offset": 39, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 559, "col_offset": 50, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 567, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 567, "col_offset": 19, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 567, "col_offset": 32, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 568, "col_offset": 13, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 568, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 568, "col_offset": 32, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 574, "col_offset": 13, "nodeName": "relu", "type": "Any"}, {"lineNumber": 574, "col_offset": 27, "nodeName": "y1", "type": "Any"}, {"lineNumber": 575, "col_offset": 13, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 575, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 575, "col_offset": 32, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 584, "col_offset": 13, "nodeName": "relu", "type": "Any"}, {"lineNumber": 584, "col_offset": 27, "nodeName": "y2", "type": "Any"}, {"lineNumber": 585, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 585, "col_offset": 22, "nodeName": "y1", "type": "Any"}, {"lineNumber": 585, "col_offset": 26, "nodeName": "y2", "type": "Any"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 586, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 586, "col_offset": 30, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 587, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 587, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 587, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 590, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 590, "col_offset": 19, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 590, "col_offset": 32, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 591, "col_offset": 13, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 591, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 591, "col_offset": 32, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 597, "col_offset": 13, "nodeName": "relu", "type": "Any"}, {"lineNumber": 597, "col_offset": 27, "nodeName": "y1", "type": "Any"}, {"lineNumber": 599, "col_offset": 13, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 599, "col_offset": 28, "nodeName": "y1", "type": "Any"}, {"lineNumber": 599, "col_offset": 32, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 600, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 600, "col_offset": 22, "nodeName": "y1", "type": "Any"}, {"lineNumber": 600, "col_offset": 26, "nodeName": "y2", "type": "Any"}, {"lineNumber": 601, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 601, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 601, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 604, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 605, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 607, "col_offset": 12, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 611, "col_offset": 12, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 612, "col_offset": 13, "nodeName": "fbefore", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 612, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 612, "col_offset": 24, "nodeName": "weight", "type": "Any"}, {"lineNumber": 612, "col_offset": 32, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 612, "col_offset": 42, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 612, "col_offset": 53, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 612, "col_offset": 66, "nodeName": "channels", "type": "int"}, {"lineNumber": 612, "col_offset": 76, "nodeName": "blocking", "type": "None"}, {"lineNumber": 613, "col_offset": 13, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 613, "col_offset": 26, "nodeName": "y1", "type": "Any"}, {"lineNumber": 614, "col_offset": 20, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 614, "col_offset": 33, "nodeName": "y1", "type": "Any"}, {"lineNumber": 615, "col_offset": 15, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 615, "col_offset": 39, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 615, "col_offset": 50, "nodeName": "y1", "type": "Any"}, {"lineNumber": 626, "col_offset": 12, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 626, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 626, "col_offset": 31, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 632, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 632, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 633, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 633, "col_offset": 30, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 634, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 634, "col_offset": 59, "nodeName": "y", "type": "Any"}, {"lineNumber": 637, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 638, "col_offset": 22, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 639, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 640, "col_offset": 13, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 640, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 640, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 640, "col_offset": 31, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 640, "col_offset": 42, "nodeName": "channels", "type": "int"}, {"lineNumber": 640, "col_offset": 52, "nodeName": "blocking", "type": "None"}, {"lineNumber": 641, "col_offset": 13, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 641, "col_offset": 26, "nodeName": "y1", "type": "Any"}, {"lineNumber": 642, "col_offset": 20, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 642, "col_offset": 33, "nodeName": "y1", "type": "Any"}, {"lineNumber": 643, "col_offset": 15, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 643, "col_offset": 39, "nodeName": "y1", "type": "Any"}, {"lineNumber": 643, "col_offset": 43, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 645, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 650, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 659, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 659, "col_offset": 19, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 660, "col_offset": 12, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 660, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 660, "col_offset": 31, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 666, "col_offset": 12, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 666, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 666, "col_offset": 30, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 667, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 667, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 667, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 671, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 671, "col_offset": 19, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 673, "col_offset": 12, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 677, "col_offset": 12, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 680, "col_offset": 12, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 680, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 680, "col_offset": 31, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 686, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 686, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 686, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 689, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 690, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 692, "col_offset": 12, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 694, "col_offset": 12, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 695, "col_offset": 13, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 695, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 695, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 695, "col_offset": 31, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 695, "col_offset": 42, "nodeName": "channels", "type": "int"}, {"lineNumber": 695, "col_offset": 52, "nodeName": "blocking", "type": "None"}, {"lineNumber": 696, "col_offset": 13, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 696, "col_offset": 26, "nodeName": "y1", "type": "Any"}, {"lineNumber": 697, "col_offset": 21, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 697, "col_offset": 33, "nodeName": "checked_type", "type": "Any"}, {"lineNumber": 698, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 699, "col_offset": 20, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 699, "col_offset": 33, "nodeName": "y1", "type": "Any"}, {"lineNumber": 700, "col_offset": 22, "nodeName": "expected", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 700, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 700, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 700, "col_offset": 42, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 700, "col_offset": 53, "nodeName": "channels", "type": "int"}, {"lineNumber": 700, "col_offset": 63, "nodeName": "blocking", "type": "None"}, {"lineNumber": 701, "col_offset": 22, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 701, "col_offset": 35, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 702, "col_offset": 15, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 702, "col_offset": 39, "nodeName": "y1_folded", "type": "Any"}, {"lineNumber": 702, "col_offset": 50, "nodeName": "y1_expected", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "relay", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "channels", "type": "int"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "relu", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "divide", "type": "Any"}, {"lineNumber": 58, "col_offset": 35, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "add", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 61, "col_offset": 41, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "relu", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "divide", "type": "Any"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "add", "type": "Any"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "in_bias", "type": "Any"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "channels", "type": "int"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "var", "type": "Any"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "const", "type": "Any"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "var", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "const", "type": "Any"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 57, "nodeName": "params", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "type_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "ForwardFoldScaleAxis", "type": "Any"}, {"lineNumber": 97, "col_offset": 44, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "ir", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 112, "col_offset": 38, "nodeName": "channels", "type": "int"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "channels", "type": "int"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "channels", "type": "int"}, {"lineNumber": 123, "col_offset": 36, "nodeName": "channels", "type": "int"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 138, "col_offset": 38, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 140, "col_offset": 57, "nodeName": "_in_scale", "type": "Any"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "channels", "type": "int"}, {"lineNumber": 145, "col_offset": 36, "nodeName": "channels", "type": "int"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 148, "col_offset": 38, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 150, "col_offset": 44, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 150, "col_offset": 57, "nodeName": "_in_scale", "type": "Any"}, {"lineNumber": 151, "col_offset": 38, "nodeName": "channels", "type": "int"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "channels", "type": "int"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "dshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 165, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "var", "type": "Any"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "const", "type": "Any"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "dshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "channels", "type": "int"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "var", "type": "Any"}, {"lineNumber": 173, "col_offset": 23, "nodeName": "const", "type": "Any"}, {"lineNumber": 179, "col_offset": 30, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 180, "col_offset": 37, "nodeName": "ForwardFoldScaleAxis", "type": "Any"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 181, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 181, "col_offset": 57, "nodeName": "params", "type": "Any"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 182, "col_offset": 37, "nodeName": "type_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 184, "col_offset": 48, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "ir", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 196, "col_offset": 38, "nodeName": "channels", "type": "int"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 202, "col_offset": 30, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 202, "col_offset": 55, "nodeName": "z", "type": "Any"}, {"lineNumber": 205, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 208, "col_offset": 22, "nodeName": "var", "type": "Any"}, {"lineNumber": 209, "col_offset": 23, "nodeName": "const", "type": "Any"}, {"lineNumber": 211, "col_offset": 26, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "var", "type": "Any"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "const", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 218, "col_offset": 30, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 219, "col_offset": 37, "nodeName": "ForwardFoldScaleAxis", "type": "Any"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "ir", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 229, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 230, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 231, "col_offset": 38, "nodeName": "channels", "type": "int"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 237, "col_offset": 30, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 237, "col_offset": 55, "nodeName": "z", "type": "Any"}, {"lineNumber": 240, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 240, "col_offset": 34, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 244, "col_offset": 22, "nodeName": "var", "type": "Any"}, {"lineNumber": 246, "col_offset": 26, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 247, "col_offset": 22, "nodeName": "var", "type": "Any"}, {"lineNumber": 251, "col_offset": 30, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 252, "col_offset": 37, "nodeName": "ForwardFoldScaleAxis", "type": "Any"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "ir", "type": "Any"}, {"lineNumber": 257, "col_offset": 28, "nodeName": "_get_positive_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 262, "col_offset": 28, "nodeName": "_get_positive_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 274, "col_offset": 38, "nodeName": "channels", "type": "int"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 285, "col_offset": 43, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 286, "col_offset": 26, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 290, "col_offset": 43, "nodeName": "in_scale", "type": "Any"}, {"lineNumber": 291, "col_offset": 26, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 292, "col_offset": 16, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 295, "col_offset": 38, "nodeName": "channels", "type": "int"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 303, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 303, "col_offset": 34, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 306, "col_offset": 23, "nodeName": "const", "type": "Any"}, {"lineNumber": 308, "col_offset": 26, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 309, "col_offset": 23, "nodeName": "const", "type": "Any"}, {"lineNumber": 310, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 312, "col_offset": 30, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 313, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 313, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 313, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 313, "col_offset": 57, "nodeName": "params", "type": "Any"}, {"lineNumber": 314, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 314, "col_offset": 37, "nodeName": "type_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 315, "col_offset": 37, "nodeName": "ForwardFoldScaleAxis", "type": "Any"}, {"lineNumber": 317, "col_offset": 48, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "ir", "type": "Any"}, {"lineNumber": 328, "col_offset": 23, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 328, "col_offset": 37, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 330, "col_offset": 23, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 330, "col_offset": 41, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 332, "col_offset": 37, "nodeName": "channels", "type": "int"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 340, "col_offset": 24, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 340, "col_offset": 38, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 342, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 348, "col_offset": 23, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 348, "col_offset": 37, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 349, "col_offset": 24, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 349, "col_offset": 38, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 350, "col_offset": 29, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 350, "col_offset": 43, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 351, "col_offset": 26, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 354, "col_offset": 23, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 354, "col_offset": 41, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 355, "col_offset": 29, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 355, "col_offset": 43, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 356, "col_offset": 26, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 360, "col_offset": 37, "nodeName": "channels", "type": "int"}, {"lineNumber": 366, "col_offset": 23, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 366, "col_offset": 38, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 369, "col_offset": 23, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 369, "col_offset": 38, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 373, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 376, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 376, "col_offset": 34, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 377, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 378, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 380, "col_offset": 24, "nodeName": "const", "type": "Any"}, {"lineNumber": 382, "col_offset": 24, "nodeName": "const", "type": "Any"}, {"lineNumber": 384, "col_offset": 30, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 385, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 385, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 385, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 385, "col_offset": 57, "nodeName": "params", "type": "Any"}, {"lineNumber": 386, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 386, "col_offset": 37, "nodeName": "type_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 387, "col_offset": 37, "nodeName": "BackwardFoldScaleAxis", "type": "Any"}, {"lineNumber": 389, "col_offset": 48, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "ir", "type": "Any"}, {"lineNumber": 400, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 401, "col_offset": 38, "nodeName": "channels", "type": "int"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 408, "col_offset": 38, "nodeName": "channels", "type": "int"}, {"lineNumber": 413, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 416, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 422, "col_offset": 23, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 422, "col_offset": 41, "nodeName": "out_bias", "type": "Any"}, {"lineNumber": 423, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 433, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 433, "col_offset": 32, "nodeName": "fold_conv_weight", "type": "Callable[[], Any]"}, {"lineNumber": 434, "col_offset": 37, "nodeName": "channels", "type": "int"}, {"lineNumber": 439, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 440, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 440, "col_offset": 32, "nodeName": "fold_conv_weight", "type": "Callable[[], Any]"}, {"lineNumber": 441, "col_offset": 37, "nodeName": "channels", "type": "int"}, {"lineNumber": 446, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 448, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 451, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 451, "col_offset": 34, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 452, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 454, "col_offset": 23, "nodeName": "var", "type": "Any"}, {"lineNumber": 455, "col_offset": 24, "nodeName": "const", "type": "Any"}, {"lineNumber": 457, "col_offset": 23, "nodeName": "var", "type": "Any"}, {"lineNumber": 458, "col_offset": 24, "nodeName": "const", "type": "Any"}, {"lineNumber": 461, "col_offset": 30, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 462, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 462, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 462, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 462, "col_offset": 57, "nodeName": "params", "type": "Any"}, {"lineNumber": 463, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 463, "col_offset": 37, "nodeName": "type_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 464, "col_offset": 37, "nodeName": "BackwardFoldScaleAxis", "type": "Any"}, {"lineNumber": 466, "col_offset": 48, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 467, "col_offset": 15, "nodeName": "ir", "type": "Any"}, {"lineNumber": 475, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 476, "col_offset": 38, "nodeName": "channels", "type": "int"}, {"lineNumber": 481, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 482, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 484, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 485, "col_offset": 38, "nodeName": "channels", "type": "int"}, {"lineNumber": 490, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 491, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 493, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 494, "col_offset": 38, "nodeName": "channels", "type": "int"}, {"lineNumber": 499, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 500, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 503, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 509, "col_offset": 29, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 509, "col_offset": 43, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 518, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 518, "col_offset": 32, "nodeName": "fold_conv_weight", "type": "Callable[[], Any]"}, {"lineNumber": 519, "col_offset": 37, "nodeName": "channels", "type": "int"}, {"lineNumber": 524, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 525, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 525, "col_offset": 33, "nodeName": "fold_conv_weight", "type": "Callable[[], Any]"}, {"lineNumber": 526, "col_offset": 37, "nodeName": "channels", "type": "int"}, {"lineNumber": 531, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 532, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 532, "col_offset": 33, "nodeName": "fold_conv_weight", "type": "Callable[[], Any]"}, {"lineNumber": 533, "col_offset": 37, "nodeName": "channels", "type": "int"}, {"lineNumber": 538, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 539, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 540, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 543, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 543, "col_offset": 34, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 544, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 546, "col_offset": 23, "nodeName": "var", "type": "Any"}, {"lineNumber": 547, "col_offset": 24, "nodeName": "const", "type": "Any"}, {"lineNumber": 549, "col_offset": 23, "nodeName": "var", "type": "Any"}, {"lineNumber": 550, "col_offset": 24, "nodeName": "const", "type": "Any"}, {"lineNumber": 553, "col_offset": 30, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 554, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 554, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 554, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 554, "col_offset": 57, "nodeName": "params", "type": "Any"}, {"lineNumber": 555, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 555, "col_offset": 37, "nodeName": "type_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 556, "col_offset": 37, "nodeName": "BackwardFoldScaleAxis", "type": "Any"}, {"lineNumber": 558, "col_offset": 48, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 559, "col_offset": 15, "nodeName": "ir", "type": "Any"}, {"lineNumber": 568, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 569, "col_offset": 38, "nodeName": "channels", "type": "int"}, {"lineNumber": 574, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 575, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 576, "col_offset": 38, "nodeName": "channels", "type": "int"}, {"lineNumber": 584, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 585, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 587, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 591, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 592, "col_offset": 38, "nodeName": "channels", "type": "int"}, {"lineNumber": 597, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 599, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 600, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 601, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 604, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 604, "col_offset": 34, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 605, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 607, "col_offset": 23, "nodeName": "var", "type": "Any"}, {"lineNumber": 608, "col_offset": 24, "nodeName": "const", "type": "Any"}, {"lineNumber": 610, "col_offset": 23, "nodeName": "var", "type": "Any"}, {"lineNumber": 611, "col_offset": 24, "nodeName": "const", "type": "Any"}, {"lineNumber": 613, "col_offset": 30, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 614, "col_offset": 37, "nodeName": "BackwardFoldScaleAxis", "type": "Any"}, {"lineNumber": 615, "col_offset": 15, "nodeName": "ir", "type": "Any"}, {"lineNumber": 626, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 627, "col_offset": 38, "nodeName": "channels", "type": "int"}, {"lineNumber": 632, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 634, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 634, "col_offset": 30, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 634, "col_offset": 55, "nodeName": "y", "type": "Any"}, {"lineNumber": 637, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 637, "col_offset": 34, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 639, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 641, "col_offset": 30, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 642, "col_offset": 37, "nodeName": "BackwardFoldScaleAxis", "type": "Any"}, {"lineNumber": 643, "col_offset": 15, "nodeName": "ir", "type": "Any"}, {"lineNumber": 647, "col_offset": 16, "nodeName": "const", "type": "Any"}, {"lineNumber": 652, "col_offset": 16, "nodeName": "const", "type": "Any"}, {"lineNumber": 660, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 661, "col_offset": 37, "nodeName": "channels", "type": "int"}, {"lineNumber": 666, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 667, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 673, "col_offset": 29, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 673, "col_offset": 43, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 674, "col_offset": 26, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 675, "col_offset": 16, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 677, "col_offset": 29, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 677, "col_offset": 43, "nodeName": "out_scale", "type": "Any"}, {"lineNumber": 678, "col_offset": 26, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 679, "col_offset": 16, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 680, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 681, "col_offset": 37, "nodeName": "channels", "type": "int"}, {"lineNumber": 686, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 689, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 689, "col_offset": 34, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 690, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 692, "col_offset": 24, "nodeName": "const", "type": "Any"}, {"lineNumber": 694, "col_offset": 24, "nodeName": "const", "type": "Any"}, {"lineNumber": 696, "col_offset": 30, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 697, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 697, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 697, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 697, "col_offset": 57, "nodeName": "params", "type": "Any"}, {"lineNumber": 698, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 698, "col_offset": 37, "nodeName": "type_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 699, "col_offset": 37, "nodeName": "BackwardFoldScaleAxis", "type": "Any"}, {"lineNumber": 701, "col_offset": 48, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 702, "col_offset": 15, "nodeName": "ir", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 25, "col_offset": 42, "nodeName": "size", "type": "Tuple[int, int, int]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 47, "col_offset": 73, "nodeName": "blocking", "type": "None"}, {"lineNumber": 48, "col_offset": 77, "nodeName": "blocking", "type": "None"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 66, "col_offset": 44, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 66, "col_offset": 62, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 75, "col_offset": 73, "nodeName": "blocking", "type": "None"}, {"lineNumber": 76, "col_offset": 77, "nodeName": "blocking", "type": "None"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "_get_positive_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "_get_positive_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 92, "col_offset": 57, "nodeName": "y1", "type": "Any"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "transform", "type": "Any"}, {"lineNumber": 97, "col_offset": 44, "nodeName": "transform", "type": "Any"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "transform", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 114, "col_offset": 74, "nodeName": "blocking", "type": "None"}, {"lineNumber": 115, "col_offset": 78, "nodeName": "blocking", "type": "None"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 121, "col_offset": 74, "nodeName": "blocking", "type": "None"}, {"lineNumber": 122, "col_offset": 78, "nodeName": "blocking", "type": "None"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 143, "col_offset": 74, "nodeName": "blocking", "type": "None"}, {"lineNumber": 144, "col_offset": 78, "nodeName": "blocking", "type": "None"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 153, "col_offset": 74, "nodeName": "blocking", "type": "None"}, {"lineNumber": 154, "col_offset": 78, "nodeName": "blocking", "type": "None"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "dshape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 163, "col_offset": 38, "nodeName": "dshape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "channels", "type": "int"}, {"lineNumber": 164, "col_offset": 57, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 165, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 165, "col_offset": 47, "nodeName": "wshape", "type": "Tuple[int, int, int, int, int, int]"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 167, "col_offset": 35, "nodeName": "_get_positive_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 171, "col_offset": 47, "nodeName": "wshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 173, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "_get_positive_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 55, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 179, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 180, "col_offset": 37, "nodeName": "transform", "type": "Any"}, {"lineNumber": 181, "col_offset": 57, "nodeName": "y1", "type": "Any"}, {"lineNumber": 184, "col_offset": 48, "nodeName": "transform", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 198, "col_offset": 74, "nodeName": "blocking", "type": "None"}, {"lineNumber": 199, "col_offset": 78, "nodeName": "blocking", "type": "None"}, {"lineNumber": 202, "col_offset": 30, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 207, "col_offset": 26, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 207, "col_offset": 37, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 208, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 209, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 209, "col_offset": 35, "nodeName": "_get_positive_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "_get_positive_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 219, "col_offset": 37, "nodeName": "transform", "type": "Any"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 229, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 230, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 233, "col_offset": 74, "nodeName": "blocking", "type": "None"}, {"lineNumber": 234, "col_offset": 78, "nodeName": "blocking", "type": "None"}, {"lineNumber": 237, "col_offset": 30, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 243, "col_offset": 26, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 243, "col_offset": 37, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 244, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 247, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 251, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 252, "col_offset": 37, "nodeName": "transform", "type": "Any"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 277, "col_offset": 74, "nodeName": "blocking", "type": "None"}, {"lineNumber": 278, "col_offset": 78, "nodeName": "blocking", "type": "None"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 286, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 287, "col_offset": 30, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 287, "col_offset": 44, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 291, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 292, "col_offset": 30, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 292, "col_offset": 48, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 298, "col_offset": 74, "nodeName": "blocking", "type": "None"}, {"lineNumber": 299, "col_offset": 78, "nodeName": "blocking", "type": "None"}, {"lineNumber": 305, "col_offset": 26, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 305, "col_offset": 37, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 306, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 309, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 312, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 313, "col_offset": 57, "nodeName": "y1", "type": "Any"}, {"lineNumber": 315, "col_offset": 37, "nodeName": "transform", "type": "Any"}, {"lineNumber": 317, "col_offset": 48, "nodeName": "transform", "type": "Any"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 328, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 330, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 335, "col_offset": 73, "nodeName": "blocking", "type": "None"}, {"lineNumber": 336, "col_offset": 77, "nodeName": "blocking", "type": "None"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 340, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 348, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 349, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 350, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 351, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 352, "col_offset": 30, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 352, "col_offset": 44, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 354, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 355, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 356, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 357, "col_offset": 30, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 357, "col_offset": 48, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 363, "col_offset": 73, "nodeName": "blocking", "type": "None"}, {"lineNumber": 364, "col_offset": 77, "nodeName": "blocking", "type": "None"}, {"lineNumber": 366, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 367, "col_offset": 34, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 367, "col_offset": 48, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 369, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 370, "col_offset": 34, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 370, "col_offset": 52, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 378, "col_offset": 48, "nodeName": "channels", "type": "int"}, {"lineNumber": 380, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 380, "col_offset": 36, "nodeName": "_get_positive_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 382, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 382, "col_offset": 36, "nodeName": "_get_positive_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 384, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 385, "col_offset": 57, "nodeName": "y1", "type": "Any"}, {"lineNumber": 387, "col_offset": 37, "nodeName": "transform", "type": "Any"}, {"lineNumber": 389, "col_offset": 48, "nodeName": "transform", "type": "Any"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 400, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 404, "col_offset": 74, "nodeName": "blocking", "type": "None"}, {"lineNumber": 405, "col_offset": 78, "nodeName": "blocking", "type": "None"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 411, "col_offset": 74, "nodeName": "blocking", "type": "None"}, {"lineNumber": 412, "col_offset": 78, "nodeName": "blocking", "type": "None"}, {"lineNumber": 413, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 422, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 426, "col_offset": 23, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 427, "col_offset": 20, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 430, "col_offset": 23, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 431, "col_offset": 20, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 433, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 437, "col_offset": 73, "nodeName": "blocking", "type": "None"}, {"lineNumber": 438, "col_offset": 77, "nodeName": "blocking", "type": "None"}, {"lineNumber": 439, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 440, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 444, "col_offset": 73, "nodeName": "blocking", "type": "None"}, {"lineNumber": 445, "col_offset": 77, "nodeName": "blocking", "type": "None"}, {"lineNumber": 446, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 454, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 455, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 455, "col_offset": 36, "nodeName": "_get_positive_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 457, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 458, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 458, "col_offset": 36, "nodeName": "_get_positive_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 461, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 462, "col_offset": 57, "nodeName": "y1", "type": "Any"}, {"lineNumber": 464, "col_offset": 37, "nodeName": "transform", "type": "Any"}, {"lineNumber": 466, "col_offset": 48, "nodeName": "transform", "type": "Any"}, {"lineNumber": 467, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 475, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 479, "col_offset": 74, "nodeName": "blocking", "type": "None"}, {"lineNumber": 480, "col_offset": 78, "nodeName": "blocking", "type": "None"}, {"lineNumber": 482, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 484, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 488, "col_offset": 74, "nodeName": "blocking", "type": "None"}, {"lineNumber": 489, "col_offset": 78, "nodeName": "blocking", "type": "None"}, {"lineNumber": 491, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 493, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 497, "col_offset": 74, "nodeName": "blocking", "type": "None"}, {"lineNumber": 498, "col_offset": 78, "nodeName": "blocking", "type": "None"}, {"lineNumber": 500, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 509, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 511, "col_offset": 23, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 512, "col_offset": 20, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 515, "col_offset": 23, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 516, "col_offset": 20, "nodeName": "conv_weight", "type": "Any"}, {"lineNumber": 518, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 522, "col_offset": 73, "nodeName": "blocking", "type": "None"}, {"lineNumber": 523, "col_offset": 77, "nodeName": "blocking", "type": "None"}, {"lineNumber": 524, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 525, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 529, "col_offset": 73, "nodeName": "blocking", "type": "None"}, {"lineNumber": 530, "col_offset": 77, "nodeName": "blocking", "type": "None"}, {"lineNumber": 531, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 532, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 536, "col_offset": 73, "nodeName": "blocking", "type": "None"}, {"lineNumber": 537, "col_offset": 77, "nodeName": "blocking", "type": "None"}, {"lineNumber": 538, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 546, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 547, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 547, "col_offset": 36, "nodeName": "_get_positive_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 549, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 550, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 550, "col_offset": 36, "nodeName": "_get_positive_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 553, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 554, "col_offset": 57, "nodeName": "y1", "type": "Any"}, {"lineNumber": 556, "col_offset": 37, "nodeName": "transform", "type": "Any"}, {"lineNumber": 558, "col_offset": 48, "nodeName": "transform", "type": "Any"}, {"lineNumber": 559, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 568, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 572, "col_offset": 74, "nodeName": "blocking", "type": "None"}, {"lineNumber": 573, "col_offset": 78, "nodeName": "blocking", "type": "None"}, {"lineNumber": 574, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 575, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 579, "col_offset": 74, "nodeName": "blocking", "type": "None"}, {"lineNumber": 580, "col_offset": 78, "nodeName": "blocking", "type": "None"}, {"lineNumber": 581, "col_offset": 73, "nodeName": "blocking", "type": "None"}, {"lineNumber": 584, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 591, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 595, "col_offset": 74, "nodeName": "blocking", "type": "None"}, {"lineNumber": 596, "col_offset": 78, "nodeName": "blocking", "type": "None"}, {"lineNumber": 597, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 607, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 608, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 608, "col_offset": 36, "nodeName": "_get_positive_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 610, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 611, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 611, "col_offset": 36, "nodeName": "_get_positive_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 613, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 614, "col_offset": 37, "nodeName": "transform", "type": "Any"}, {"lineNumber": 615, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 626, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 630, "col_offset": 74, "nodeName": "blocking", "type": "None"}, {"lineNumber": 631, "col_offset": 78, "nodeName": "blocking", "type": "None"}, {"lineNumber": 632, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 634, "col_offset": 30, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 641, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 642, "col_offset": 37, "nodeName": "transform", "type": "Any"}, {"lineNumber": 643, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 647, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 647, "col_offset": 28, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 652, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 652, "col_offset": 28, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 660, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 664, "col_offset": 73, "nodeName": "blocking", "type": "None"}, {"lineNumber": 665, "col_offset": 77, "nodeName": "blocking", "type": "None"}, {"lineNumber": 673, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 674, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 675, "col_offset": 30, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 675, "col_offset": 44, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 677, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 678, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 679, "col_offset": 30, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 679, "col_offset": 48, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 680, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 684, "col_offset": 73, "nodeName": "blocking", "type": "None"}, {"lineNumber": 685, "col_offset": 77, "nodeName": "blocking", "type": "None"}, {"lineNumber": 692, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 694, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 696, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 697, "col_offset": 57, "nodeName": "y1", "type": "Any"}, {"lineNumber": 699, "col_offset": 37, "nodeName": "transform", "type": "Any"}, {"lineNumber": 701, "col_offset": 48, "nodeName": "transform", "type": "Any"}, {"lineNumber": 702, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 66, "col_offset": 44, "nodeName": "relay", "type": "Any"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "relay", "type": "Any"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 88, "col_offset": 50, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 89, "col_offset": 56, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 114, "col_offset": 41, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 115, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 121, "col_offset": 41, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 132, "col_offset": 58, "nodeName": "channels", "type": "int"}, {"lineNumber": 132, "col_offset": 81, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 138, "col_offset": 58, "nodeName": "channels", "type": "int"}, {"lineNumber": 138, "col_offset": 84, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 143, "col_offset": 41, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 144, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 148, "col_offset": 58, "nodeName": "channels", "type": "int"}, {"lineNumber": 148, "col_offset": 84, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 153, "col_offset": 41, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 154, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 172, "col_offset": 50, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 198, "col_offset": 41, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 199, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 202, "col_offset": 30, "nodeName": "relay", "type": "Any"}, {"lineNumber": 212, "col_offset": 50, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 233, "col_offset": 41, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 234, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 237, "col_offset": 30, "nodeName": "relay", "type": "Any"}, {"lineNumber": 247, "col_offset": 50, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 277, "col_offset": 41, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 278, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 287, "col_offset": 30, "nodeName": "relay", "type": "Any"}, {"lineNumber": 292, "col_offset": 30, "nodeName": "relay", "type": "Any"}, {"lineNumber": 298, "col_offset": 41, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 299, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 306, "col_offset": 36, "nodeName": "_get_positive_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 309, "col_offset": 36, "nodeName": "_get_positive_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 328, "col_offset": 51, "nodeName": "channels", "type": "int"}, {"lineNumber": 328, "col_offset": 80, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 335, "col_offset": 40, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 336, "col_offset": 42, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 340, "col_offset": 53, "nodeName": "channels", "type": "int"}, {"lineNumber": 340, "col_offset": 82, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 348, "col_offset": 51, "nodeName": "channels", "type": "int"}, {"lineNumber": 348, "col_offset": 80, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 349, "col_offset": 53, "nodeName": "channels", "type": "int"}, {"lineNumber": 349, "col_offset": 82, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 352, "col_offset": 30, "nodeName": "relay", "type": "Any"}, {"lineNumber": 357, "col_offset": 30, "nodeName": "relay", "type": "Any"}, {"lineNumber": 363, "col_offset": 40, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 364, "col_offset": 42, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 367, "col_offset": 34, "nodeName": "relay", "type": "Any"}, {"lineNumber": 370, "col_offset": 34, "nodeName": "relay", "type": "Any"}, {"lineNumber": 380, "col_offset": 57, "nodeName": "channels", "type": "int"}, {"lineNumber": 382, "col_offset": 57, "nodeName": "channels", "type": "int"}, {"lineNumber": 404, "col_offset": 41, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 405, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 411, "col_offset": 41, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 412, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 426, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 428, "col_offset": 20, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 428, "col_offset": 34, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 430, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 432, "col_offset": 20, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 432, "col_offset": 38, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 437, "col_offset": 40, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 438, "col_offset": 42, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 444, "col_offset": 40, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 445, "col_offset": 42, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 457, "col_offset": 52, "nodeName": "channels", "type": "int"}, {"lineNumber": 458, "col_offset": 57, "nodeName": "channels", "type": "int"}, {"lineNumber": 479, "col_offset": 41, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 480, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 488, "col_offset": 41, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 489, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 497, "col_offset": 41, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 498, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 511, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 513, "col_offset": 20, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 513, "col_offset": 34, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 515, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 517, "col_offset": 20, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 517, "col_offset": 38, "nodeName": "squeezed_scale", "type": "Any"}, {"lineNumber": 522, "col_offset": 40, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 523, "col_offset": 42, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 529, "col_offset": 40, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 530, "col_offset": 42, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 536, "col_offset": 40, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 537, "col_offset": 42, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 549, "col_offset": 52, "nodeName": "channels", "type": "int"}, {"lineNumber": 550, "col_offset": 57, "nodeName": "channels", "type": "int"}, {"lineNumber": 572, "col_offset": 41, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 573, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 579, "col_offset": 41, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 580, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 581, "col_offset": 40, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 595, "col_offset": 41, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 596, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 610, "col_offset": 52, "nodeName": "channels", "type": "int"}, {"lineNumber": 611, "col_offset": 57, "nodeName": "channels", "type": "int"}, {"lineNumber": 630, "col_offset": 41, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 631, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 634, "col_offset": 30, "nodeName": "relay", "type": "Any"}, {"lineNumber": 647, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 652, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 664, "col_offset": 40, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 665, "col_offset": 42, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 675, "col_offset": 30, "nodeName": "relay", "type": "Any"}, {"lineNumber": 679, "col_offset": 30, "nodeName": "relay", "type": "Any"}, {"lineNumber": 684, "col_offset": 40, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 685, "col_offset": 42, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 692, "col_offset": 37, "nodeName": "_get_positive_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 694, "col_offset": 37, "nodeName": "_get_positive_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 57, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 48, "col_offset": 61, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 59, "col_offset": 50, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 59, "col_offset": 84, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 62, "col_offset": 50, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 75, "col_offset": 57, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 76, "col_offset": 61, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 84, "col_offset": 53, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 84, "col_offset": 87, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 85, "col_offset": 59, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 85, "col_offset": 93, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 114, "col_offset": 58, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 115, "col_offset": 62, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 121, "col_offset": 58, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 122, "col_offset": 62, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 132, "col_offset": 68, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 138, "col_offset": 68, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 143, "col_offset": 58, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 144, "col_offset": 62, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 148, "col_offset": 68, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 153, "col_offset": 58, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 154, "col_offset": 62, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 166, "col_offset": 50, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 166, "col_offset": 75, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 167, "col_offset": 56, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 167, "col_offset": 81, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 198, "col_offset": 58, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 199, "col_offset": 62, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 208, "col_offset": 50, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 208, "col_offset": 75, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 209, "col_offset": 56, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 209, "col_offset": 81, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 213, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 233, "col_offset": 58, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 234, "col_offset": 62, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 244, "col_offset": 53, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 244, "col_offset": 87, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 277, "col_offset": 58, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 278, "col_offset": 62, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 287, "col_offset": 64, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 298, "col_offset": 58, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 299, "col_offset": 62, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 309, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 328, "col_offset": 61, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 335, "col_offset": 57, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 336, "col_offset": 61, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 340, "col_offset": 63, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 348, "col_offset": 61, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 349, "col_offset": 63, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 352, "col_offset": 61, "nodeName": "channels", "type": "int"}, {"lineNumber": 352, "col_offset": 96, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 363, "col_offset": 57, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 364, "col_offset": 61, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 367, "col_offset": 68, "nodeName": "channels", "type": "int"}, {"lineNumber": 367, "col_offset": 97, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 404, "col_offset": 58, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 405, "col_offset": 62, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 411, "col_offset": 58, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 412, "col_offset": 62, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 428, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 432, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 437, "col_offset": 57, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 438, "col_offset": 61, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 444, "col_offset": 57, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 445, "col_offset": 61, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 454, "col_offset": 52, "nodeName": "channels", "type": "int"}, {"lineNumber": 454, "col_offset": 83, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 455, "col_offset": 57, "nodeName": "channels", "type": "int"}, {"lineNumber": 455, "col_offset": 88, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 479, "col_offset": 58, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 480, "col_offset": 62, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 488, "col_offset": 58, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 489, "col_offset": 62, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 497, "col_offset": 58, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 498, "col_offset": 62, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 513, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 517, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 522, "col_offset": 57, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 523, "col_offset": 61, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 529, "col_offset": 57, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 530, "col_offset": 61, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 536, "col_offset": 57, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 537, "col_offset": 61, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 546, "col_offset": 52, "nodeName": "channels", "type": "int"}, {"lineNumber": 546, "col_offset": 83, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 547, "col_offset": 57, "nodeName": "channels", "type": "int"}, {"lineNumber": 547, "col_offset": 88, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 572, "col_offset": 58, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 573, "col_offset": 62, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 579, "col_offset": 58, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 580, "col_offset": 62, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 581, "col_offset": 57, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 595, "col_offset": 58, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 596, "col_offset": 62, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 607, "col_offset": 52, "nodeName": "channels", "type": "int"}, {"lineNumber": 607, "col_offset": 83, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 608, "col_offset": 57, "nodeName": "channels", "type": "int"}, {"lineNumber": 608, "col_offset": 88, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 630, "col_offset": 58, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 631, "col_offset": 62, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 647, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 652, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 664, "col_offset": 57, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 665, "col_offset": 61, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 675, "col_offset": 61, "nodeName": "channels", "type": "int"}, {"lineNumber": 675, "col_offset": 96, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 684, "col_offset": 57, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 685, "col_offset": 61, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 694, "col_offset": 58, "nodeName": "channels", "type": "int"}, {"lineNumber": 59, "col_offset": 65, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 84, "col_offset": 68, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 85, "col_offset": 74, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 166, "col_offset": 63, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 167, "col_offset": 69, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 208, "col_offset": 63, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 209, "col_offset": 69, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 244, "col_offset": 68, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 306, "col_offset": 60, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 306, "col_offset": 76, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 352, "col_offset": 71, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 367, "col_offset": 78, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 428, "col_offset": 51, "nodeName": "channels", "type": "int"}, {"lineNumber": 428, "col_offset": 86, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 454, "col_offset": 64, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 455, "col_offset": 69, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 513, "col_offset": 51, "nodeName": "channels", "type": "int"}, {"lineNumber": 513, "col_offset": 86, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 546, "col_offset": 64, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 547, "col_offset": 69, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 607, "col_offset": 64, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 608, "col_offset": 69, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 675, "col_offset": 71, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 692, "col_offset": 60, "nodeName": "channels", "type": "int"}, {"lineNumber": 692, "col_offset": 89, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 428, "col_offset": 61, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 513, "col_offset": 61, "nodeName": "blocking", "type": "Tuple[int, int]"}, {"lineNumber": 692, "col_offset": 70, "nodeName": "blocking", "type": "Tuple[int, int]"}]