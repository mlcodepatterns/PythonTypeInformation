[{"lineNumber": 23, "col_offset": 0, "nodeName": "lower_stmt", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "lower_sch", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "test_basic", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "test_thread_axis", "type": "Callable[[], Any]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "test_multilanes", "type": "Callable[[], Any]"}, {"lineNumber": 149, "col_offset": 0, "nodeName": "test_reduce", "type": "Callable[[], Any]"}, {"lineNumber": 170, "col_offset": 0, "nodeName": "test_slice", "type": "Callable[[], Any]"}, {"lineNumber": 194, "col_offset": 0, "nodeName": "test_relay_basic", "type": "Callable[[], Any]"}, {"lineNumber": 221, "col_offset": 0, "nodeName": "test_relay_take", "type": "Callable[[], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "body", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "binds", "type": "Dict[Any, Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "arg_list", "type": "List[Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "sch", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "body", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "engine", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "engine", "type": "Any"}, {"lineNumber": 239, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "PrimFunc", "type": "Any"}, {"lineNumber": 24, "col_offset": 28, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 36, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "func", "type": "Any"}, {"lineNumber": 42, "col_offset": 10, "nodeName": "normalize", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "InferBound", "type": "Any"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "sch", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "ScheduleOps", "type": "Any"}, {"lineNumber": 44, "col_offset": 35, "nodeName": "sch", "type": "Any"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "SchedulePostProcToPrimFunc", "type": "Any"}, {"lineNumber": 46, "col_offset": 54, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 60, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 47, "col_offset": 10, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "func", "type": "Any"}, {"lineNumber": 48, "col_offset": 47, "nodeName": "mod", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "ib", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "Ab", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "Bb", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "B", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "ib", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "Ab", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "Bb", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "B", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "bx", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "tx", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "ib", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "Ab", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "Bb", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "B", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "B", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "ib", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "Ab", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "Bb", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "B", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "get", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "get", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "test_basic", "type": "Callable[[], Any]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "test_thread_axis", "type": "Callable[[], Any]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "test_multilanes", "type": "Callable[[], Any]"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "test_reduce", "type": "Callable[[], Any]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "test_slice", "type": "Callable[[], Any]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "test_relay_basic", "type": "Callable[[], Any]"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "test_relay_take", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "tir", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "buf", "type": "Any"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "buf", "type": "Any"}, {"lineNumber": 42, "col_offset": 10, "nodeName": "sch", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "schedule", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "schedule", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "schedule", "type": "Any"}, {"lineNumber": 47, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 48, "col_offset": 10, "nodeName": "StorageFlatten", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "create", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "decl_buffer", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "buffer_ptr", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "Ab", "type": "Any"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "decl_buffer", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "buffer_ptr", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "Bb", "type": "Any"}, {"lineNumber": 59, "col_offset": 45, "nodeName": "i", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "lower_stmt", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "target_bits", "type": "int"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 64, "col_offset": 38, "nodeName": "target_dtype", "type": "str"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "target_dtype", "type": "str"}, {"lineNumber": 72, "col_offset": 10, "nodeName": "const", "type": "Any"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "const", "type": "Any"}, {"lineNumber": 73, "col_offset": 10, "nodeName": "const", "type": "Any"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "const", "type": "Any"}, {"lineNumber": 79, "col_offset": 10, "nodeName": "size_var", "type": "Any"}, {"lineNumber": 79, "col_offset": 48, "nodeName": "size_var", "type": "Any"}, {"lineNumber": 80, "col_offset": 10, "nodeName": "size_var", "type": "Any"}, {"lineNumber": 80, "col_offset": 48, "nodeName": "size_var", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "create", "type": "Any"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "decl_buffer", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "buffer_ptr", "type": "Any"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "Ab", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "decl_buffer", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "buffer_ptr", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "Bb", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "thread_axis", "type": "Any"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "thread_axis", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "scope_attr", "type": "Any"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "bx", "type": "Any"}, {"lineNumber": 92, "col_offset": 43, "nodeName": "m", "type": "int"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "scope_attr", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "tx", "type": "Any"}, {"lineNumber": 93, "col_offset": 43, "nodeName": "n", "type": "int"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "B", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "lower_stmt", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "target_bits", "type": "int"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 97, "col_offset": 38, "nodeName": "target_dtype", "type": "str"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 98, "col_offset": 43, "nodeName": "target_dtype", "type": "str"}, {"lineNumber": 106, "col_offset": 10, "nodeName": "const", "type": "Any"}, {"lineNumber": 107, "col_offset": 10, "nodeName": "const", "type": "Any"}, {"lineNumber": 109, "col_offset": 10, "nodeName": "const", "type": "Any"}, {"lineNumber": 110, "col_offset": 10, "nodeName": "const", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "create", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "decl_buffer", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "buffer_ptr", "type": "Any"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "Ab", "type": "Any"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "decl_buffer", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "buffer_ptr", "type": "Any"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "Bb", "type": "Any"}, {"lineNumber": 126, "col_offset": 60, "nodeName": "i", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "lower_stmt", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 36, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 129, "col_offset": 42, "nodeName": "target_bits", "type": "int"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "target_dtype", "type": "str"}, {"lineNumber": 133, "col_offset": 10, "nodeName": "const", "type": "Any"}, {"lineNumber": 135, "col_offset": 10, "nodeName": "const", "type": "Any"}, {"lineNumber": 138, "col_offset": 10, "nodeName": "const", "type": "Any"}, {"lineNumber": 140, "col_offset": 10, "nodeName": "const", "type": "Any"}, {"lineNumber": 143, "col_offset": 10, "nodeName": "const", "type": "Any"}, {"lineNumber": 145, "col_offset": 10, "nodeName": "const", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "reduce_axis", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "compute", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "create_schedule", "type": "Any"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "op", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "lower_sch", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "s", "type": "Any"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "target_bits", "type": "int"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 156, "col_offset": 41, "nodeName": "target_dtype", "type": "str"}, {"lineNumber": 159, "col_offset": 10, "nodeName": "const", "type": "Any"}, {"lineNumber": 161, "col_offset": 10, "nodeName": "const", "type": "Any"}, {"lineNumber": 163, "col_offset": 10, "nodeName": "const", "type": "Any"}, {"lineNumber": 164, "col_offset": 10, "nodeName": "const", "type": "Any"}, {"lineNumber": 166, "col_offset": 10, "nodeName": "var", "type": "Any"}, {"lineNumber": 167, "col_offset": 10, "nodeName": "var", "type": "Any"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "create", "type": "Any"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "decl_buffer", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "buffer_ptr", "type": "Any"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "Ab", "type": "Any"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "decl_buffer", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "buffer_ptr", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "Bb", "type": "Any"}, {"lineNumber": 178, "col_offset": 45, "nodeName": "i", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "lower_stmt", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 182, "col_offset": 36, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 182, "col_offset": 42, "nodeName": "target_bits", "type": "int"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 183, "col_offset": 38, "nodeName": "target_dtype", "type": "str"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 184, "col_offset": 43, "nodeName": "target_dtype", "type": "str"}, {"lineNumber": 187, "col_offset": 10, "nodeName": "const", "type": "Any"}, {"lineNumber": 187, "col_offset": 33, "nodeName": "const", "type": "Any"}, {"lineNumber": 190, "col_offset": 10, "nodeName": "const", "type": "Any"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "const", "type": "Any"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "compile_engine", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "z", "type": "Any"}, {"lineNumber": 201, "col_offset": 14, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 201, "col_offset": 37, "nodeName": "func", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "mod", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "lower", "type": "Any"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "func", "type": "Any"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "lower_sch", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "schedule", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 206, "col_offset": 38, "nodeName": "target_dtype", "type": "str"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "compile_engine", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "take", "type": "Any"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 226, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 227, "col_offset": 14, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 227, "col_offset": 37, "nodeName": "func", "type": "Any"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "mod", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "lower", "type": "Any"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "func", "type": "Any"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "lower_sch", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "schedule", "type": "Any"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 231, "col_offset": 41, "nodeName": "target_dtype", "type": "str"}, {"lineNumber": 233, "col_offset": 62, "nodeName": "const", "type": "Any"}, {"lineNumber": 235, "col_offset": 62, "nodeName": "const", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "NarrowDataType", "type": "Any"}, {"lineNumber": 25, "col_offset": 44, "nodeName": "target_bits", "type": "int"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 26, "col_offset": 31, "nodeName": "func", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "decl_buffer", "type": "Any"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "binds", "type": "Dict[Any, Any]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "binds", "type": "Dict[Any, Any]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "buf", "type": "Any"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "te", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "te", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "te", "type": "Any"}, {"lineNumber": 47, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 48, "col_offset": 10, "nodeName": "transform", "type": "Any"}, {"lineNumber": 49, "col_offset": 57, "nodeName": "mod", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "ir_builder", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "tir", "type": "Any"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "m", "type": "int"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "n", "type": "int"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "ib", "type": "Any"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "tir", "type": "Any"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "m", "type": "int"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "n", "type": "int"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "ib", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "for_range", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "m", "type": "int"}, {"lineNumber": 60, "col_offset": 49, "nodeName": "j", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "ib", "type": "Any"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "Ab", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "Bb", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "loop_var", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "loop_var", "type": "Any"}, {"lineNumber": 79, "col_offset": 10, "nodeName": "te", "type": "Any"}, {"lineNumber": 79, "col_offset": 48, "nodeName": "te", "type": "Any"}, {"lineNumber": 80, "col_offset": 10, "nodeName": "te", "type": "Any"}, {"lineNumber": 80, "col_offset": 48, "nodeName": "te", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "ir_builder", "type": "Any"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "tir", "type": "Any"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "m", "type": "int"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "n", "type": "int"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "ib", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "tir", "type": "Any"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "m", "type": "int"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "n", "type": "int"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "ib", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "te", "type": "Any"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "te", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "ib", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "ib", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "A", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "ib", "type": "Any"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "Ab", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "Bb", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "ir_builder", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "tir", "type": "Any"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "m", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "ib", "type": "Any"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "tir", "type": "Any"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "m", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "ib", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "for_range", "type": "Any"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "m", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "B", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "ib", "type": "Any"}, {"lineNumber": 129, "col_offset": 27, "nodeName": "Ab", "type": "Any"}, {"lineNumber": 129, "col_offset": 31, "nodeName": "Bb", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "loop_var", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "te", "type": "Any"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "m", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "te", "type": "Any"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "m", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "te", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "te", "type": "Any"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "B", "type": "Any"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "A", "type": "Any"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "B", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "loop_var", "type": "Any"}, {"lineNumber": 166, "col_offset": 10, "nodeName": "te", "type": "Any"}, {"lineNumber": 167, "col_offset": 10, "nodeName": "te", "type": "Any"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "ir_builder", "type": "Any"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "tir", "type": "Any"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "m", "type": "Any"}, {"lineNumber": 174, "col_offset": 37, "nodeName": "n", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "ib", "type": "Any"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "tir", "type": "Any"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "m", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "ib", "type": "Any"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "for_range", "type": "Any"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "m", "type": "Any"}, {"lineNumber": 179, "col_offset": 49, "nodeName": "j", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "ib", "type": "Any"}, {"lineNumber": 182, "col_offset": 27, "nodeName": "Ab", "type": "Any"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "Bb", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "loop_var", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "loop_var", "type": "Any"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "backend", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 197, "col_offset": 33, "nodeName": "shapex", "type": "Tuple[Any, Any]"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 198, "col_offset": 33, "nodeName": "shapey", "type": "Tuple[int, Any]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 200, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 201, "col_offset": 14, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "engine", "type": "Any"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "z", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "loop_var", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 209, "col_offset": 47, "nodeName": "target_dtype", "type": "str"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "const", "type": "Any"}, {"lineNumber": 211, "col_offset": 34, "nodeName": "const", "type": "Any"}, {"lineNumber": 211, "col_offset": 66, "nodeName": "const", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "const", "type": "Any"}, {"lineNumber": 213, "col_offset": 34, "nodeName": "const", "type": "Any"}, {"lineNumber": 213, "col_offset": 62, "nodeName": "const", "type": "Any"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "const", "type": "Any"}, {"lineNumber": 215, "col_offset": 37, "nodeName": "const", "type": "Any"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "const", "type": "Any"}, {"lineNumber": 217, "col_offset": 41, "nodeName": "const", "type": "Any"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "backend", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 224, "col_offset": 33, "nodeName": "shape", "type": "Tuple[Any, Any]"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 225, "col_offset": 37, "nodeName": "index", "type": "Any"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 226, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 227, "col_offset": 14, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "engine", "type": "Any"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "z", "type": "Any"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "index", "type": "Any"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "const", "type": "Any"}, {"lineNumber": 233, "col_offset": 34, "nodeName": "const", "type": "Any"}, {"lineNumber": 233, "col_offset": 62, "nodeName": "relay", "type": "Any"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "const", "type": "Any"}, {"lineNumber": 235, "col_offset": 34, "nodeName": "const", "type": "Any"}, {"lineNumber": 235, "col_offset": 62, "nodeName": "relay", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "transform", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "te", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "tir", "type": "Any"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 36, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 36, "col_offset": 67, "nodeName": "name", "type": "Any"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "arg_list", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 48, "col_offset": 10, "nodeName": "tir", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "NarrowDataType", "type": "Any"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "target_bits", "type": "int"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "tir", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "ib", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "for_range", "type": "Any"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "n", "type": "int"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "B", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "body", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "tir", "type": "Any"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "tx", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "tir", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 122, "col_offset": 45, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 122, "col_offset": 65, "nodeName": "lanes", "type": "int"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 124, "col_offset": 45, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 124, "col_offset": 65, "nodeName": "lanes", "type": "int"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "ib", "type": "Any"}, {"lineNumber": 126, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 127, "col_offset": 14, "nodeName": "i", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "A", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 153, "col_offset": 40, "nodeName": "sum", "type": "Any"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "tir", "type": "Any"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 176, "col_offset": 37, "nodeName": "n", "type": "Any"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "ib", "type": "Any"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "for_range", "type": "Any"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "n", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "A", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "body", "type": "Any"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 201, "col_offset": 14, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 204, "col_offset": 37, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 204, "col_offset": 43, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 204, "col_offset": 55, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 204, "col_offset": 61, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "shapex", "type": "Tuple[Any, Any]"}, {"lineNumber": 208, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 208, "col_offset": 34, "nodeName": "shapey", "type": "Tuple[int, Any]"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "loop_var", "type": "Any"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 227, "col_offset": 14, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 230, "col_offset": 37, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 230, "col_offset": 43, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 230, "col_offset": 55, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 230, "col_offset": 61, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "tir", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 36, "col_offset": 53, "nodeName": "x", "type": "Any"}, {"lineNumber": 36, "col_offset": 67, "nodeName": "x", "type": "Any"}, {"lineNumber": 48, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "transform", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "ib", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "A", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 94, "col_offset": 10, "nodeName": "bx", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "n", "type": "int"}, {"lineNumber": 94, "col_offset": 36, "nodeName": "tx", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "body", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 126, "col_offset": 48, "nodeName": "m", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "i", "type": "Any"}, {"lineNumber": 153, "col_offset": 40, "nodeName": "te", "type": "Any"}, {"lineNumber": 153, "col_offset": 47, "nodeName": "A", "type": "Any"}, {"lineNumber": 153, "col_offset": 58, "nodeName": "k", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "ib", "type": "Any"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "B", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 204, "col_offset": 43, "nodeName": "z", "type": "Any"}, {"lineNumber": 204, "col_offset": 61, "nodeName": "z", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "body", "type": "Any"}, {"lineNumber": 230, "col_offset": 43, "nodeName": "z", "type": "Any"}, {"lineNumber": 230, "col_offset": 61, "nodeName": "z", "type": "Any"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "tir", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "j", "type": "Any"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "bx", "type": "Any"}, {"lineNumber": 94, "col_offset": 32, "nodeName": "n", "type": "int"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 153, "col_offset": 49, "nodeName": "k", "type": "Any"}, {"lineNumber": 180, "col_offset": 26, "nodeName": "j", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "i", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "n", "type": "int"}, {"lineNumber": 61, "col_offset": 41, "nodeName": "j", "type": "Any"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "i", "type": "Any"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "n", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "i", "type": "Any"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "n", "type": "int"}, {"lineNumber": 180, "col_offset": 41, "nodeName": "n", "type": "Any"}, {"lineNumber": 180, "col_offset": 49, "nodeName": "j", "type": "Any"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "i", "type": "Any"}]