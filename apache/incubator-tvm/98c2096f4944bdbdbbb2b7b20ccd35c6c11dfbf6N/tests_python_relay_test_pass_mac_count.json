[{"lineNumber": 25, "col_offset": 0, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "test_gemm", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "test_conv", "type": "Callable[[], Any]"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "test_simple_network", "type": "Callable[[], Any]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "test_depthwise_conv2d", "type": "Callable[[], Any]"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "test_conv_2d_transpose", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "entry", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "n", "type": "int"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "k", "type": "int"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "m", "type": "int"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "dshape1", "type": "Tuple[int, int]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "dshape2", "type": "Tuple[int, int]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "data1", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "data2", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "gemm", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "compute_count", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "expect_count", "type": "int"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "input_channel", "type": "int"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "h", "type": "int"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "w", "type": "int"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "output_channel", "type": "int"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "kh", "type": "int"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "kw", "type": "int"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "h_padding", "type": "int"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "w_padding", "type": "int"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "oh", "type": "int"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "ow", "type": "int"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "dshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "weight", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "compute_count", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "expect_count", "type": "int"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "dshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "weight_conv", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "data1", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "data2", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "weight_dense", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "conv2d_1", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "conv2d_2", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "flattened", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "dense_1", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "compute_count", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "expect_count", "type": "int"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "dshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "weight_conv", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "data1", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "data2", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "compute_count", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "input_channel", "type": "int"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "h", "type": "int"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "w", "type": "int"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "output_channel", "type": "int"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "kh", "type": "int"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "kw", "type": "int"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "h_padding", "type": "int"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "w_padding", "type": "int"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "oh", "type": "int"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "ow", "type": "int"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "dshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "weight", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "compute_count", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "expect_count", "type": "int"}, {"lineNumber": 147, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "opt_pass", "type": "Any"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "Pass", "type": "Any"}, {"lineNumber": 27, "col_offset": 10, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 27, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 28, "col_offset": 42, "nodeName": "mod", "type": "Any"}, {"lineNumber": 29, "col_offset": 10, "nodeName": "opt_pass", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "mod", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "entry", "type": "Any"}, {"lineNumber": 31, "col_offset": 58, "nodeName": "body", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "n", "type": "int"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "k", "type": "int"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "m", "type": "int"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "k", "type": "int"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "dense", "type": "Any"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "data1", "type": "Any"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "data2", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "Function", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "func", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "get_total_mac_number", "type": "Any"}, {"lineNumber": 45, "col_offset": 50, "nodeName": "func", "type": "Any"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "k", "type": "int"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "compute_count", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "expect_count", "type": "int"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "input_channel", "type": "int"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "h", "type": "int"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "w", "type": "int"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "weight", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "Function", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "func", "type": "Any"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "get_total_mac_number", "type": "Any"}, {"lineNumber": 70, "col_offset": 50, "nodeName": "func", "type": "Any"}, {"lineNumber": 71, "col_offset": 80, "nodeName": "kw", "type": "int"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "compute_count", "type": "Any"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "expect_count", "type": "int"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "var", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "data1", "type": "Any"}, {"lineNumber": 83, "col_offset": 38, "nodeName": "weight_conv", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "data2", "type": "Any"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "weight_conv", "type": "Any"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "add", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "conv2d_1", "type": "Any"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "conv2d_2", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "batch_flatten", "type": "Any"}, {"lineNumber": 86, "col_offset": 39, "nodeName": "add", "type": "Any"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "dense", "type": "Any"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "flattened", "type": "Any"}, {"lineNumber": 87, "col_offset": 40, "nodeName": "weight_dense", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "Function", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "func", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "get_total_mac_number", "type": "Any"}, {"lineNumber": 95, "col_offset": 50, "nodeName": "func", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "compute_count", "type": "Any"}, {"lineNumber": 97, "col_offset": 28, "nodeName": "expect_count", "type": "int"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "var", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "data1", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "weight_conv", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "data2", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "weight_conv", "type": "Any"}, {"lineNumber": 112, "col_offset": 10, "nodeName": "add", "type": "Any"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "depthwise_conv2d_1", "type": "Any"}, {"lineNumber": 112, "col_offset": 40, "nodeName": "depthwise_conv2d_2", "type": "Any"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "Function", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "func", "type": "Any"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "get_total_mac_number", "type": "Any"}, {"lineNumber": 118, "col_offset": 50, "nodeName": "func", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "compute_count", "type": "Any"}, {"lineNumber": 134, "col_offset": 14, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "input_channel", "type": "int"}, {"lineNumber": 134, "col_offset": 41, "nodeName": "h", "type": "int"}, {"lineNumber": 134, "col_offset": 44, "nodeName": "w", "type": "int"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "conv2d_transpose", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "weight", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "Function", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "func", "type": "Any"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "get_total_mac_number", "type": "Any"}, {"lineNumber": 142, "col_offset": 50, "nodeName": "func", "type": "Any"}, {"lineNumber": 143, "col_offset": 80, "nodeName": "kw", "type": "int"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "compute_count", "type": "Any"}, {"lineNumber": 144, "col_offset": 28, "nodeName": "expect_count", "type": "int"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "test_conv", "type": "Callable[[], Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "test_gemm", "type": "Callable[[], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "test_simple_network", "type": "Callable[[], Any]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "test_depthwise_conv2d", "type": "Callable[[], Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "test_conv_2d_transpose", "type": "Callable[[], Any]"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "transform", "type": "Any"}, {"lineNumber": 27, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "expr", "type": "Any"}, {"lineNumber": 31, "col_offset": 37, "nodeName": "Function", "type": "Any"}, {"lineNumber": 31, "col_offset": 58, "nodeName": "entry", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "dshape1", "type": "Tuple[int, int]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "dshape2", "type": "Tuple[int, int]"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "nn", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "data1", "type": "Any"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "data2", "type": "Any"}, {"lineNumber": 43, "col_offset": 42, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "n", "type": "int"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "m", "type": "int"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "kh", "type": "int"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "kw", "type": "int"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "dshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "output_channel", "type": "int"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "weight", "type": "Any"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 71, "col_offset": 75, "nodeName": "kh", "type": "int"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "dshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "dshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "data1", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "data2", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "weight_conv", "type": "Any"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "weight_dense", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "AlterOpLayout", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "dshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "dshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 112, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 114, "col_offset": 9, "nodeName": "data1", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "data2", "type": "Any"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "weight_conv", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "kh", "type": "int"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "kw", "type": "int"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "dshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "output_channel", "type": "int"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "weight", "type": "Any"}, {"lineNumber": 140, "col_offset": 42, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 141, "col_offset": 30, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 143, "col_offset": 75, "nodeName": "kh", "type": "int"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 27, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "transform", "type": "Any"}, {"lineNumber": 31, "col_offset": 37, "nodeName": "relay", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 43, "col_offset": 42, "nodeName": "relay", "type": "Any"}, {"lineNumber": 43, "col_offset": 54, "nodeName": "convert", "type": "Any"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "h", "type": "int"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "w", "type": "int"}, {"lineNumber": 63, "col_offset": 40, "nodeName": "output_channel", "type": "int"}, {"lineNumber": 63, "col_offset": 56, "nodeName": "input_channel", "type": "int"}, {"lineNumber": 63, "col_offset": 71, "nodeName": "kh", "type": "int"}, {"lineNumber": 63, "col_offset": 75, "nodeName": "kw", "type": "int"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 66, "col_offset": 60, "nodeName": "kh", "type": "int"}, {"lineNumber": 66, "col_offset": 64, "nodeName": "kw", "type": "int"}, {"lineNumber": 66, "col_offset": 78, "nodeName": "h_padding", "type": "int"}, {"lineNumber": 66, "col_offset": 89, "nodeName": "w_padding", "type": "int"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "relay", "type": "Any"}, {"lineNumber": 68, "col_offset": 54, "nodeName": "convert", "type": "Any"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 71, "col_offset": 58, "nodeName": "output_channel", "type": "int"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "convert", "type": "Any"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "convert", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 132, "col_offset": 9, "nodeName": "h", "type": "int"}, {"lineNumber": 133, "col_offset": 9, "nodeName": "w", "type": "int"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "input_channel", "type": "int"}, {"lineNumber": 135, "col_offset": 55, "nodeName": "output_channel", "type": "int"}, {"lineNumber": 135, "col_offset": 71, "nodeName": "kh", "type": "int"}, {"lineNumber": 135, "col_offset": 75, "nodeName": "kw", "type": "int"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 138, "col_offset": 60, "nodeName": "kh", "type": "int"}, {"lineNumber": 138, "col_offset": 64, "nodeName": "kw", "type": "int"}, {"lineNumber": 138, "col_offset": 78, "nodeName": "h_padding", "type": "int"}, {"lineNumber": 138, "col_offset": 89, "nodeName": "w_padding", "type": "int"}, {"lineNumber": 140, "col_offset": 42, "nodeName": "relay", "type": "Any"}, {"lineNumber": 140, "col_offset": 54, "nodeName": "convert", "type": "Any"}, {"lineNumber": 141, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 143, "col_offset": 58, "nodeName": "output_channel", "type": "int"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 43, "col_offset": 54, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 43, "col_offset": 75, "nodeName": "gemm", "type": "Any"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "h_padding", "type": "int"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "w_padding", "type": "int"}, {"lineNumber": 68, "col_offset": 54, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 68, "col_offset": 75, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 71, "col_offset": 53, "nodeName": "ow", "type": "int"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "conv2d_1", "type": "Any"}, {"lineNumber": 91, "col_offset": 51, "nodeName": "conv2d_2", "type": "Any"}, {"lineNumber": 91, "col_offset": 61, "nodeName": "dense_1", "type": "Any"}, {"lineNumber": 91, "col_offset": 70, "nodeName": "add", "type": "Any"}, {"lineNumber": 91, "col_offset": 75, "nodeName": "flattened", "type": "Any"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 115, "col_offset": 41, "nodeName": "depthwise_conv2d_1", "type": "Any"}, {"lineNumber": 115, "col_offset": 61, "nodeName": "depthwise_conv2d_2", "type": "Any"}, {"lineNumber": 115, "col_offset": 81, "nodeName": "add", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "h_padding", "type": "int"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "w_padding", "type": "int"}, {"lineNumber": 140, "col_offset": 54, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 140, "col_offset": 75, "nodeName": "conv2d_transpose", "type": "Any"}, {"lineNumber": 143, "col_offset": 53, "nodeName": "ow", "type": "int"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 43, "col_offset": 54, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 68, "col_offset": 54, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 71, "col_offset": 48, "nodeName": "oh", "type": "int"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "prod", "type": "Any"}, {"lineNumber": 119, "col_offset": 40, "nodeName": "dshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 140, "col_offset": 54, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 143, "col_offset": 48, "nodeName": "oh", "type": "int"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "input_channel", "type": "int"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 143, "col_offset": 32, "nodeName": "input_channel", "type": "int"}]