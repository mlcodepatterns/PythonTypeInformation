[{"lineNumber": 28, "col_offset": 0, "nodeName": "seq", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "init_box_adt", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "assert_adt_len", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "assert_constructor_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "test_create_empty_tuple", "type": "Callable[[], Any]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "test_create_scalar", "type": "Callable[[], Any]"}, {"lineNumber": 77, "col_offset": 0, "nodeName": "test_create_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "test_create_nested_tuple", "type": "Callable[[], Any]"}, {"lineNumber": 96, "col_offset": 0, "nodeName": "test_tuple_get_item", "type": "Callable[[], Any]"}, {"lineNumber": 111, "col_offset": 0, "nodeName": "test_create_let", "type": "Callable[[], Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "test_create_ref", "type": "Callable[[], Any]"}, {"lineNumber": 127, "col_offset": 0, "nodeName": "test_ref_read", "type": "Callable[[], Any]"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "test_ref_write", "type": "Callable[[], Any]"}, {"lineNumber": 168, "col_offset": 0, "nodeName": "test_if", "type": "Callable[[], Any]"}, {"lineNumber": 191, "col_offset": 0, "nodeName": "test_local_function", "type": "Callable[[], Any]"}, {"lineNumber": 205, "col_offset": 0, "nodeName": "test_global_function", "type": "Callable[[], Any]"}, {"lineNumber": 224, "col_offset": 0, "nodeName": "test_constructor", "type": "Callable[[], Any]"}, {"lineNumber": 241, "col_offset": 0, "nodeName": "test_match_wildcard", "type": "Callable[[], Any]"}, {"lineNumber": 255, "col_offset": 0, "nodeName": "test_match_var", "type": "Callable[[], Any]"}, {"lineNumber": 269, "col_offset": 0, "nodeName": "test_match_pattern", "type": "Callable[[], Any]"}, {"lineNumber": 285, "col_offset": 0, "nodeName": "test_nested_match_pattern", "type": "Callable[[], Any]"}, {"lineNumber": 309, "col_offset": 0, "nodeName": "test_match_order", "type": "Callable[[], Any]"}, {"lineNumber": 335, "col_offset": 0, "nodeName": "test_local_recursion", "type": "Callable[[], Any]"}, {"lineNumber": 374, "col_offset": 0, "nodeName": "test_global_recursion", "type": "Callable[[], Any]"}, {"lineNumber": 417, "col_offset": 0, "nodeName": "test_higher_order_call", "type": "Callable[[], Any]"}, {"lineNumber": 440, "col_offset": 0, "nodeName": "test_match_effect_exactly_once", "type": "Callable[[], Any]"}, {"lineNumber": 471, "col_offset": 0, "nodeName": "test_arbitrary_let_nesting", "type": "Callable[[], Any]"}, {"lineNumber": 498, "col_offset": 0, "nodeName": "test_ref_execution_order", "type": "Callable[[], Any]"}, {"lineNumber": 543, "col_offset": 0, "nodeName": "test_op_add", "type": "Callable[[], Any]"}, {"lineNumber": 551, "col_offset": 0, "nodeName": "test_op_stack", "type": "Callable[[], Any]"}, {"lineNumber": 572, "col_offset": 0, "nodeName": "test_split", "type": "Callable[[], Any]"}, {"lineNumber": 590, "col_offset": 0, "nodeName": "test_batch_norm", "type": "Callable[[], Any]"}, {"lineNumber": 552, "col_offset": 4, "nodeName": "verify_stack", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 573, "col_offset": 4, "nodeName": "verify_split", "type": "Callable[..., Any]"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "verify_batch_norm", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "ret", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "expr", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "ret", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "box", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "empty", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "tensor_val", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "tensor_val", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "let", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "relay_ref", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "ref_val", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "assign", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "read_val", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "write_val", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "read_val", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "true_cond", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "false_cond", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "true_branch", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "false_branch", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "true_val", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "false_val", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "ident", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "call1", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "call2", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "call_val1", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "call_val2", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "ident", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "call1", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "call2", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "call_val1", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "call_val2", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "init_box_int", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "box_val_int", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "init_box_tup", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "box_val_tup", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "match_val", "type": "Any"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "match_val", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "match_val", "type": "Any"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "match_val", "type": "Any"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "match_val", "type": "Any"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "p", "type": "Any"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "h", "type": "Any"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "val", "type": "Any"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "p", "type": "Any"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "copy", "type": "Any"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "h", "type": "Any"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "copy_def", "type": "Any"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "call1", "type": "Any"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "val1", "type": "Any"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "call2", "type": "Any"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "val2", "type": "Any"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "h", "type": "Any"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "anon_val", "type": "Any"}, {"lineNumber": 430, "col_offset": 4, "nodeName": "g", "type": "Any"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "named_val", "type": "Any"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "p", "type": "Any"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "r", "type": "Any"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "match_val", "type": "Any"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "p", "type": "Any"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "r", "type": "Any"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "z", "type": "Any"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 502, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "r", "type": "Any"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 544, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "add_val", "type": "Any"}, {"lineNumber": 29, "col_offset": 10, "nodeName": "exprs", "type": "Tuple[Any, ...]"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "exprs", "type": "Tuple[Any, ...]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 39, "col_offset": 45, "nodeName": "box", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "box", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "box", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "NDArray", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 52, "col_offset": 33, "nodeName": "ADT", "type": "Any"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "fields", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "ConstructorValue", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "tag", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "tag", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "fields", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "empty", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "assert_adt_len", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "const", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "tensor_val", "type": "Any"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "const", "type": "Any"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "tensor_val", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "relay_tup", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "assert_adt_len", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "assert_adt_len", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "val", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "val", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 113, "col_offset": 10, "nodeName": "Let", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "v", "type": "Any"}, {"lineNumber": 114, "col_offset": 14, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "let", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "assert_adt_len", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "assert_adt_len", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "assert_adt_len", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "RefCreate", "type": "Any"}, {"lineNumber": 122, "col_offset": 14, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "relay_ref", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "ref_val", "type": "Any"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "RefValue", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "assert_adt_len", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "Let", "type": "Any"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "v", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "assign", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "assert_adt_len", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "read_val", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "Let", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "initial_write", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "assert_adt_len", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "write_val", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "Let", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "read_after_write", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "assert_adt_len", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "read_val", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "assert_adt_len", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "assert_adt_len", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "const", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "const", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "seq", "type": "Callable[..., Any]"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "seq", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "Let", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "Let", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "true_expr", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "true_val", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "false_expr", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "false_val", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 193, "col_offset": 32, "nodeName": "v", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "Let", "type": "Any"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "f", "type": "Any"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "ident", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "Let", "type": "Any"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "f", "type": "Any"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "ident", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 198, "col_offset": 30, "nodeName": "call1", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "assert_adt_len", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "call_val1", "type": "Any"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 201, "col_offset": 30, "nodeName": "call2", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "call_val2", "type": "Any"}, {"lineNumber": 206, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "GlobalVar", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 209, "col_offset": 23, "nodeName": "a", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 210, "col_offset": 17, "nodeName": "Function", "type": "Any"}, {"lineNumber": 210, "col_offset": 37, "nodeName": "v", "type": "Any"}, {"lineNumber": 210, "col_offset": 40, "nodeName": "a", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "ident", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "ident", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 215, "col_offset": 30, "nodeName": "call1", "type": "Any"}, {"lineNumber": 215, "col_offset": 37, "nodeName": "mod", "type": "Any"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "call_val1", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 218, "col_offset": 30, "nodeName": "call2", "type": "Any"}, {"lineNumber": 218, "col_offset": 37, "nodeName": "mod", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "assert_adt_len", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "call_val2", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 225, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "box", "type": "Any"}, {"lineNumber": 226, "col_offset": 9, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "init_box_adt", "type": "Callable[[Any], Any]"}, {"lineNumber": 226, "col_offset": 33, "nodeName": "mod", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 229, "col_offset": 18, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 229, "col_offset": 32, "nodeName": "init_box_int", "type": "Any"}, {"lineNumber": 229, "col_offset": 46, "nodeName": "mod", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "assert_constructor_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "box_val_int", "type": "Any"}, {"lineNumber": 231, "col_offset": 42, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 235, "col_offset": 18, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 235, "col_offset": 32, "nodeName": "init_box_tup", "type": "Any"}, {"lineNumber": 235, "col_offset": 46, "nodeName": "mod", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "assert_constructor_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 237, "col_offset": 29, "nodeName": "box_val_tup", "type": "Any"}, {"lineNumber": 237, "col_offset": 42, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "assert_adt_len", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 242, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "box", "type": "Any"}, {"lineNumber": 243, "col_offset": 9, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "init_box_adt", "type": "Callable[[Any], Any]"}, {"lineNumber": 243, "col_offset": 33, "nodeName": "mod", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "Let", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 251, "col_offset": 30, "nodeName": "match", "type": "Any"}, {"lineNumber": 251, "col_offset": 37, "nodeName": "mod", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 252, "col_offset": 24, "nodeName": "match_val", "type": "Any"}, {"lineNumber": 256, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "box", "type": "Any"}, {"lineNumber": 257, "col_offset": 9, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 257, "col_offset": 20, "nodeName": "init_box_adt", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 33, "nodeName": "mod", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "Let", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 264, "col_offset": 30, "nodeName": "match", "type": "Any"}, {"lineNumber": 264, "col_offset": 37, "nodeName": "mod", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "assert_constructor_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "match_val", "type": "Any"}, {"lineNumber": 265, "col_offset": 40, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 270, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "box", "type": "Any"}, {"lineNumber": 271, "col_offset": 9, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "init_box_adt", "type": "Callable[[Any], Any]"}, {"lineNumber": 271, "col_offset": 33, "nodeName": "mod", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "Let", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 281, "col_offset": 30, "nodeName": "match", "type": "Any"}, {"lineNumber": 281, "col_offset": 37, "nodeName": "mod", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 282, "col_offset": 24, "nodeName": "match_val", "type": "Any"}, {"lineNumber": 286, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "box", "type": "Any"}, {"lineNumber": 287, "col_offset": 9, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 287, "col_offset": 20, "nodeName": "init_box_adt", "type": "Callable[[Any], Any]"}, {"lineNumber": 287, "col_offset": 33, "nodeName": "mod", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "Let", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "match", "type": "Any"}, {"lineNumber": 305, "col_offset": 37, "nodeName": "mod", "type": "Any"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 306, "col_offset": 24, "nodeName": "match_val", "type": "Any"}, {"lineNumber": 310, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "box", "type": "Any"}, {"lineNumber": 311, "col_offset": 9, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 311, "col_offset": 20, "nodeName": "init_box_adt", "type": "Callable[[Any], Any]"}, {"lineNumber": 311, "col_offset": 33, "nodeName": "mod", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "Let", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 331, "col_offset": 16, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 331, "col_offset": 30, "nodeName": "match", "type": "Any"}, {"lineNumber": 331, "col_offset": 37, "nodeName": "mod", "type": "Any"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 332, "col_offset": 24, "nodeName": "match_val", "type": "Any"}, {"lineNumber": 336, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "Prelude", "type": "Any"}, {"lineNumber": 337, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 338, "col_offset": 7, "nodeName": "cons", "type": "Any"}, {"lineNumber": 338, "col_offset": 13, "nodeName": "nil", "type": "Any"}, {"lineNumber": 338, "col_offset": 19, "nodeName": "get_type", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 346, "col_offset": 10, "nodeName": "Let", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 364, "col_offset": 10, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 364, "col_offset": 24, "nodeName": "let", "type": "Any"}, {"lineNumber": 364, "col_offset": 29, "nodeName": "mod", "type": "Any"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "assert_constructor_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 365, "col_offset": 29, "nodeName": "val", "type": "Any"}, {"lineNumber": 365, "col_offset": 34, "nodeName": "cons", "type": "Any"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "assert_constructor_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 367, "col_offset": 44, "nodeName": "cons", "type": "Any"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "assert_constructor_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 369, "col_offset": 54, "nodeName": "cons", "type": "Any"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "assert_constructor_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 371, "col_offset": 64, "nodeName": "nil", "type": "Any"}, {"lineNumber": 375, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "Prelude", "type": "Any"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "rlist", "type": "Any"}, {"lineNumber": 377, "col_offset": 11, "nodeName": "cons", "type": "Any"}, {"lineNumber": 377, "col_offset": 17, "nodeName": "nil", "type": "Any"}, {"lineNumber": 377, "col_offset": 23, "nodeName": "get_type", "type": "Any"}, {"lineNumber": 379, "col_offset": 11, "nodeName": "GlobalVar", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "copy_def", "type": "Any"}, {"lineNumber": 403, "col_offset": 11, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 403, "col_offset": 25, "nodeName": "call1", "type": "Any"}, {"lineNumber": 403, "col_offset": 32, "nodeName": "mod", "type": "Any"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "assert_constructor_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 404, "col_offset": 29, "nodeName": "val1", "type": "Any"}, {"lineNumber": 404, "col_offset": 35, "nodeName": "cons", "type": "Any"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 406, "col_offset": 4, "nodeName": "assert_constructor_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 406, "col_offset": 45, "nodeName": "cons", "type": "Any"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "assert_constructor_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 408, "col_offset": 55, "nodeName": "nil", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "copy_def", "type": "Any"}, {"lineNumber": 411, "col_offset": 11, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 411, "col_offset": 25, "nodeName": "call2", "type": "Any"}, {"lineNumber": 411, "col_offset": 32, "nodeName": "mod", "type": "Any"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "assert_constructor_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 412, "col_offset": 29, "nodeName": "val2", "type": "Any"}, {"lineNumber": 412, "col_offset": 35, "nodeName": "cons", "type": "Any"}, {"lineNumber": 413, "col_offset": 4, "nodeName": "assert_adt_len", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "assert_constructor_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 414, "col_offset": 45, "nodeName": "nil", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 422, "col_offset": 14, "nodeName": "Let", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 426, "col_offset": 15, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 426, "col_offset": 29, "nodeName": "ho_anon", "type": "Any"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 427, "col_offset": 24, "nodeName": "anon_val", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 431, "col_offset": 15, "nodeName": "Let", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 436, "col_offset": 16, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 436, "col_offset": 30, "nodeName": "ho_named", "type": "Any"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 437, "col_offset": 24, "nodeName": "named_val", "type": "Any"}, {"lineNumber": 441, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "Prelude", "type": "Any"}, {"lineNumber": 442, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 443, "col_offset": 7, "nodeName": "cons", "type": "Any"}, {"lineNumber": 443, "col_offset": 13, "nodeName": "nil", "type": "Any"}, {"lineNumber": 443, "col_offset": 19, "nodeName": "get_type", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 448, "col_offset": 11, "nodeName": "seq", "type": "Callable[..., Any]"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "Let", "type": "Any"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 467, "col_offset": 16, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 467, "col_offset": 30, "nodeName": "match", "type": "Any"}, {"lineNumber": 467, "col_offset": 37, "nodeName": "mod", "type": "Any"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 468, "col_offset": 24, "nodeName": "match_val", "type": "Any"}, {"lineNumber": 473, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "Prelude", "type": "Any"}, {"lineNumber": 474, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 479, "col_offset": 11, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 491, "col_offset": 14, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 491, "col_offset": 28, "nodeName": "expr", "type": "Any"}, {"lineNumber": 491, "col_offset": 34, "nodeName": "mod", "type": "Any"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "assert_adt_len", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 492, "col_offset": 19, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 505, "col_offset": 11, "nodeName": "Let", "type": "Any"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 534, "col_offset": 14, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 534, "col_offset": 28, "nodeName": "expr", "type": "Any"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "assert_adt_len", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 535, "col_offset": 19, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 544, "col_offset": 10, "nodeName": "add", "type": "Any"}, {"lineNumber": 545, "col_offset": 14, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 545, "col_offset": 28, "nodeName": "add", "type": "Any"}, {"lineNumber": 546, "col_offset": 4, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 546, "col_offset": 24, "nodeName": "add_val", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "x_data", "type": "List[Any]"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "ref_res", "type": "Any"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 557, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 557, "col_offset": 20, "nodeName": "x_data", "type": "List[Any]"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "call", "type": "Any"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "call_val", "type": "Any"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "verify_stack", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "verify_stack", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "verify_stack", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 567, "col_offset": 4, "nodeName": "verify_stack", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "ref_res", "type": "Any"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "call", "type": "Any"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "call_val", "type": "Any"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 582, "col_offset": 4, "nodeName": "verify_split", "type": "Callable[..., Any]"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "verify_split", "type": "Callable[..., Any]"}, {"lineNumber": 584, "col_offset": 4, "nodeName": "verify_split", "type": "Callable[..., Any]"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "verify_split", "type": "Callable[..., Any]"}, {"lineNumber": 586, "col_offset": 4, "nodeName": "verify_split", "type": "Callable[..., Any]"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "relay_args", "type": "List[Any]"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "eps", "type": "float"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "ref_res", "type": "Any"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "call", "type": "Any"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "call_val", "type": "Any"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "verify_batch_norm", "type": "Callable[[Any], Any]"}, {"lineNumber": 611, "col_offset": 4, "nodeName": "verify_batch_norm", "type": "Callable[[Any], Any]"}, {"lineNumber": 612, "col_offset": 4, "nodeName": "verify_batch_norm", "type": "Callable[[Any], Any]"}, {"lineNumber": 613, "col_offset": 4, "nodeName": "verify_batch_norm", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "Let", "type": "Any"}, {"lineNumber": 31, "col_offset": 40, "nodeName": "ret", "type": "Any"}, {"lineNumber": 31, "col_offset": 45, "nodeName": "expr", "type": "Any"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "a", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "box", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "a", "type": "Any"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "nd", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 47, "col_offset": 47, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 47, "col_offset": 56, "nodeName": "val", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "fields", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 73, "col_offset": 10, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "tensor_val", "type": "Any"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "TupleGetItem", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "relay_tup", "type": "Any"}, {"lineNumber": 101, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "index", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "val", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "TupleGetItem", "type": "Any"}, {"lineNumber": 106, "col_offset": 69, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "index", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "val", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 113, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 113, "col_offset": 40, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "ref_val", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "RefCreate", "type": "Any"}, {"lineNumber": 129, "col_offset": 60, "nodeName": "RefRead", "type": "Any"}, {"lineNumber": 129, "col_offset": 74, "nodeName": "v", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "RefCreate", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "RefWrite", "type": "Any"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "v", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "RefCreate", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "read_val", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "read_val", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "RefWrite", "type": "Any"}, {"lineNumber": 174, "col_offset": 37, "nodeName": "v", "type": "Any"}, {"lineNumber": 174, "col_offset": 57, "nodeName": "RefRead", "type": "Any"}, {"lineNumber": 174, "col_offset": 71, "nodeName": "v", "type": "Any"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "RefWrite", "type": "Any"}, {"lineNumber": 175, "col_offset": 38, "nodeName": "v", "type": "Any"}, {"lineNumber": 175, "col_offset": 58, "nodeName": "RefRead", "type": "Any"}, {"lineNumber": 175, "col_offset": 72, "nodeName": "v", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "RefCreate", "type": "Any"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "If", "type": "Any"}, {"lineNumber": 178, "col_offset": 53, "nodeName": "true_cond", "type": "Any"}, {"lineNumber": 178, "col_offset": 64, "nodeName": "true_branch", "type": "Any"}, {"lineNumber": 178, "col_offset": 77, "nodeName": "false_branch", "type": "Any"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "RefCreate", "type": "Any"}, {"lineNumber": 181, "col_offset": 44, "nodeName": "If", "type": "Any"}, {"lineNumber": 181, "col_offset": 53, "nodeName": "false_cond", "type": "Any"}, {"lineNumber": 181, "col_offset": 65, "nodeName": "true_branch", "type": "Any"}, {"lineNumber": 181, "col_offset": 78, "nodeName": "false_branch", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 195, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 196, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 206, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "ident", "type": "Any"}, {"lineNumber": 210, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 210, "col_offset": 44, "nodeName": "a", "type": "Any"}, {"lineNumber": 212, "col_offset": 18, "nodeName": "const", "type": "Any"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "call_val2", "type": "Any"}, {"lineNumber": 221, "col_offset": 24, "nodeName": "call_val2", "type": "Any"}, {"lineNumber": 225, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 228, "col_offset": 28, "nodeName": "const", "type": "Any"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "fields", "type": "Any"}, {"lineNumber": 234, "col_offset": 28, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 238, "col_offset": 19, "nodeName": "fields", "type": "Any"}, {"lineNumber": 242, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "Match", "type": "Any"}, {"lineNumber": 248, "col_offset": 20, "nodeName": "v", "type": "Any"}, {"lineNumber": 256, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 261, "col_offset": 37, "nodeName": "Match", "type": "Any"}, {"lineNumber": 261, "col_offset": 49, "nodeName": "v", "type": "Any"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "fields", "type": "Any"}, {"lineNumber": 270, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "Match", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 286, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "Match", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 310, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "Match", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 336, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 338, "col_offset": 19, "nodeName": "mod", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 346, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "Function", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 366, "col_offset": 24, "nodeName": "fields", "type": "Any"}, {"lineNumber": 367, "col_offset": 29, "nodeName": "fields", "type": "Any"}, {"lineNumber": 368, "col_offset": 24, "nodeName": "fields", "type": "Any"}, {"lineNumber": 369, "col_offset": 29, "nodeName": "fields", "type": "Any"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "fields", "type": "Any"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "fields", "type": "Any"}, {"lineNumber": 375, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 377, "col_offset": 23, "nodeName": "mod", "type": "Any"}, {"lineNumber": 379, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 382, "col_offset": 23, "nodeName": "rlist", "type": "Any"}, {"lineNumber": 382, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 386, "col_offset": 9, "nodeName": "v", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "Match", "type": "Any"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "rlist", "type": "Any"}, {"lineNumber": 397, "col_offset": 14, "nodeName": "a", "type": "Any"}, {"lineNumber": 398, "col_offset": 9, "nodeName": "a", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "copy", "type": "Any"}, {"lineNumber": 402, "col_offset": 21, "nodeName": "cons", "type": "Any"}, {"lineNumber": 405, "col_offset": 24, "nodeName": "fields", "type": "Any"}, {"lineNumber": 406, "col_offset": 29, "nodeName": "fields", "type": "Any"}, {"lineNumber": 407, "col_offset": 24, "nodeName": "fields", "type": "Any"}, {"lineNumber": 408, "col_offset": 29, "nodeName": "fields", "type": "Any"}, {"lineNumber": 410, "col_offset": 21, "nodeName": "cons", "type": "Any"}, {"lineNumber": 413, "col_offset": 19, "nodeName": "fields", "type": "Any"}, {"lineNumber": 414, "col_offset": 29, "nodeName": "fields", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 422, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 423, "col_offset": 11, "nodeName": "Function", "type": "Any"}, {"lineNumber": 423, "col_offset": 52, "nodeName": "h", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 431, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "Function", "type": "Any"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 434, "col_offset": 18, "nodeName": "g", "type": "Any"}, {"lineNumber": 441, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 443, "col_offset": 19, "nodeName": "mod", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 448, "col_offset": 15, "nodeName": "RefWrite", "type": "Any"}, {"lineNumber": 448, "col_offset": 30, "nodeName": "r", "type": "Any"}, {"lineNumber": 448, "col_offset": 75, "nodeName": "RefRead", "type": "Any"}, {"lineNumber": 448, "col_offset": 89, "nodeName": "r", "type": "Any"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "RefCreate", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "Match", "type": "Any"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 473, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 479, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 493, "col_offset": 24, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 494, "col_offset": 24, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 495, "col_offset": 24, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 505, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "Function", "type": "Any"}, {"lineNumber": 507, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 510, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 536, "col_offset": 24, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 537, "col_offset": 24, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 538, "col_offset": 24, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 539, "col_offset": 24, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 540, "col_offset": 24, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 544, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 544, "col_offset": 20, "nodeName": "const", "type": "Any"}, {"lineNumber": 544, "col_offset": 36, "nodeName": "const", "type": "Any"}, {"lineNumber": 554, "col_offset": 18, "nodeName": "stack", "type": "Any"}, {"lineNumber": 554, "col_offset": 27, "nodeName": "x_data", "type": "List[Any]"}, {"lineNumber": 559, "col_offset": 15, "nodeName": "stack", "type": "Any"}, {"lineNumber": 559, "col_offset": 46, "nodeName": "axis", "type": "int"}, {"lineNumber": 560, "col_offset": 19, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 560, "col_offset": 33, "nodeName": "call", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 561, "col_offset": 13, "nodeName": "call_val", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 562, "col_offset": 28, "nodeName": "call_val", "type": "Any"}, {"lineNumber": 562, "col_offset": 38, "nodeName": "ref_res", "type": "Any"}, {"lineNumber": 574, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 575, "col_offset": 18, "nodeName": "split", "type": "Any"}, {"lineNumber": 575, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 575, "col_offset": 30, "nodeName": "indices_or_sections", "type": "int"}, {"lineNumber": 576, "col_offset": 15, "nodeName": "split", "type": "Any"}, {"lineNumber": 576, "col_offset": 43, "nodeName": "indices_or_sections", "type": "int"}, {"lineNumber": 577, "col_offset": 19, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 577, "col_offset": 33, "nodeName": "call", "type": "Any"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "assert_adt_len", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 578, "col_offset": 23, "nodeName": "call_val", "type": "Any"}, {"lineNumber": 579, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 600, "col_offset": 18, "nodeName": "reference", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 603, "col_offset": 19, "nodeName": "run_as_python", "type": "Any"}, {"lineNumber": 603, "col_offset": 33, "nodeName": "call", "type": "Any"}, {"lineNumber": 607, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 607, "col_offset": 26, "nodeName": "call_val", "type": "Any"}, {"lineNumber": 607, "col_offset": 36, "nodeName": "NDArray", "type": "Any"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 608, "col_offset": 56, "nodeName": "ref_res", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "var", "type": "Any"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 47, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "const", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "const", "type": "Any"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 90, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 93, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "const", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "const", "type": "Any"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "TupleGetItem", "type": "Any"}, {"lineNumber": 106, "col_offset": 54, "nodeName": "relay_tup", "type": "Any"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 113, "col_offset": 40, "nodeName": "relay", "type": "Any"}, {"lineNumber": 113, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 113, "col_offset": 56, "nodeName": "v", "type": "Any"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "relay", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 129, "col_offset": 42, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 129, "col_offset": 60, "nodeName": "relay", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "RefCreate", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "seq", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "read_val", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "read_val", "type": "Any"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 174, "col_offset": 40, "nodeName": "const", "type": "Any"}, {"lineNumber": 174, "col_offset": 57, "nodeName": "relay", "type": "Any"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 175, "col_offset": 41, "nodeName": "const", "type": "Any"}, {"lineNumber": 175, "col_offset": 58, "nodeName": "relay", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "const", "type": "Any"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "relay", "type": "Any"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "const", "type": "Any"}, {"lineNumber": 181, "col_offset": 44, "nodeName": "relay", "type": "Any"}, {"lineNumber": 195, "col_offset": 34, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 196, "col_offset": 34, "nodeName": "const", "type": "Any"}, {"lineNumber": 212, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 228, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "box_val_int", "type": "Any"}, {"lineNumber": 234, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 238, "col_offset": 19, "nodeName": "box_val_tup", "type": "Any"}, {"lineNumber": 247, "col_offset": 17, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 261, "col_offset": 20, "nodeName": "const", "type": "Any"}, {"lineNumber": 261, "col_offset": 37, "nodeName": "relay", "type": "Any"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "match_val", "type": "Any"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "const", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 292, "col_offset": 17, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 317, "col_offset": 17, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 338, "col_offset": 19, "nodeName": "p", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 349, "col_offset": 13, "nodeName": "v", "type": "Any"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "Match", "type": "Any"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 361, "col_offset": 10, "nodeName": "cons", "type": "Any"}, {"lineNumber": 366, "col_offset": 24, "nodeName": "val", "type": "Any"}, {"lineNumber": 367, "col_offset": 29, "nodeName": "val", "type": "Any"}, {"lineNumber": 377, "col_offset": 23, "nodeName": "p", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 402, "col_offset": 26, "nodeName": "const", "type": "Any"}, {"lineNumber": 402, "col_offset": 42, "nodeName": "cons", "type": "Any"}, {"lineNumber": 405, "col_offset": 24, "nodeName": "val1", "type": "Any"}, {"lineNumber": 406, "col_offset": 29, "nodeName": "val1", "type": "Any"}, {"lineNumber": 410, "col_offset": 26, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 410, "col_offset": 43, "nodeName": "nil", "type": "Any"}, {"lineNumber": 413, "col_offset": 19, "nodeName": "val2", "type": "Any"}, {"lineNumber": 414, "col_offset": 29, "nodeName": "val2", "type": "Any"}, {"lineNumber": 423, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 423, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 423, "col_offset": 31, "nodeName": "f", "type": "Any"}, {"lineNumber": 423, "col_offset": 54, "nodeName": "Function", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 433, "col_offset": 24, "nodeName": "f", "type": "Any"}, {"lineNumber": 433, "col_offset": 28, "nodeName": "f", "type": "Any"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 434, "col_offset": 21, "nodeName": "Function", "type": "Any"}, {"lineNumber": 434, "col_offset": 58, "nodeName": "h", "type": "Any"}, {"lineNumber": 434, "col_offset": 60, "nodeName": "g", "type": "Any"}, {"lineNumber": 443, "col_offset": 19, "nodeName": "p", "type": "Any"}, {"lineNumber": 448, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 448, "col_offset": 33, "nodeName": "cons", "type": "Any"}, {"lineNumber": 448, "col_offset": 75, "nodeName": "relay", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 451, "col_offset": 24, "nodeName": "nil", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 481, "col_offset": 12, "nodeName": "Let", "type": "Any"}, {"lineNumber": 481, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 482, "col_offset": 12, "nodeName": "Let", "type": "Any"}, {"lineNumber": 483, "col_offset": 16, "nodeName": "r", "type": "Any"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "Let", "type": "Any"}, {"lineNumber": 487, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 487, "col_offset": 64, "nodeName": "y", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 507, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 507, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 511, "col_offset": 12, "nodeName": "RefCreate", "type": "Any"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 544, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 544, "col_offset": 36, "nodeName": "relay", "type": "Any"}, {"lineNumber": 553, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 553, "col_offset": 67, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 553, "col_offset": 76, "nodeName": "dshapes", "type": "List[Tuple[int]]"}, {"lineNumber": 554, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 554, "col_offset": 40, "nodeName": "axis", "type": "int"}, {"lineNumber": 558, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 559, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 559, "col_offset": 27, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 559, "col_offset": 39, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 575, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 575, "col_offset": 56, "nodeName": "axis", "type": "int"}, {"lineNumber": 576, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 576, "col_offset": 27, "nodeName": "const", "type": "Any"}, {"lineNumber": 576, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 576, "col_offset": 69, "nodeName": "axis", "type": "int"}, {"lineNumber": 578, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 578, "col_offset": 37, "nodeName": "ref_res", "type": "Any"}, {"lineNumber": 579, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 579, "col_offset": 27, "nodeName": "ref_res", "type": "Any"}, {"lineNumber": 580, "col_offset": 12, "nodeName": "assert_tensor_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 592, "col_offset": 16, "nodeName": "absolute", "type": "Any"}, {"lineNumber": 592, "col_offset": 80, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int]]"}, {"lineNumber": 592, "col_offset": 89, "nodeName": "shapes", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 593, "col_offset": 22, "nodeName": "const", "type": "Any"}, {"lineNumber": 593, "col_offset": 34, "nodeName": "arg", "type": "Any"}, {"lineNumber": 593, "col_offset": 43, "nodeName": "arg", "type": "Any"}, {"lineNumber": 593, "col_offset": 50, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 598, "col_offset": 75, "nodeName": "beta", "type": "Any"}, {"lineNumber": 600, "col_offset": 29, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 602, "col_offset": 15, "nodeName": "batch_norm", "type": "Any"}, {"lineNumber": 607, "col_offset": 36, "nodeName": "nd", "type": "Any"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 608, "col_offset": 36, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 608, "col_offset": 70, "nodeName": "eps", "type": "float"}, {"lineNumber": 608, "col_offset": 80, "nodeName": "eps", "type": "float"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "relay", "type": "Any"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "tup_val", "type": "Any"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "relay", "type": "Any"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "relay", "type": "Any"}, {"lineNumber": 129, "col_offset": 42, "nodeName": "relay", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 153, "col_offset": 28, "nodeName": "RefRead", "type": "Any"}, {"lineNumber": 153, "col_offset": 42, "nodeName": "v", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "RefWrite", "type": "Any"}, {"lineNumber": 155, "col_offset": 31, "nodeName": "v", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 174, "col_offset": 40, "nodeName": "relay", "type": "Any"}, {"lineNumber": 175, "col_offset": 41, "nodeName": "relay", "type": "Any"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 195, "col_offset": 34, "nodeName": "relay", "type": "Any"}, {"lineNumber": 196, "col_offset": 34, "nodeName": "relay", "type": "Any"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "const", "type": "Any"}, {"lineNumber": 213, "col_offset": 47, "nodeName": "const", "type": "Any"}, {"lineNumber": 247, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "Clause", "type": "Any"}, {"lineNumber": 261, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 261, "col_offset": 53, "nodeName": "Clause", "type": "Any"}, {"lineNumber": 261, "col_offset": 87, "nodeName": "w", "type": "Any"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "Clause", "type": "Any"}, {"lineNumber": 278, "col_offset": 88, "nodeName": "w", "type": "Any"}, {"lineNumber": 292, "col_offset": 26, "nodeName": "const", "type": "Any"}, {"lineNumber": 296, "col_offset": 16, "nodeName": "Clause", "type": "Any"}, {"lineNumber": 300, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 317, "col_offset": 26, "nodeName": "const", "type": "Any"}, {"lineNumber": 321, "col_offset": 16, "nodeName": "Clause", "type": "Any"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "Clause", "type": "Any"}, {"lineNumber": 326, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 361, "col_offset": 15, "nodeName": "const", "type": "Any"}, {"lineNumber": 361, "col_offset": 31, "nodeName": "cons", "type": "Any"}, {"lineNumber": 368, "col_offset": 24, "nodeName": "fields", "type": "Any"}, {"lineNumber": 369, "col_offset": 29, "nodeName": "fields", "type": "Any"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "fields", "type": "Any"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "fields", "type": "Any"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "Clause", "type": "Any"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "Clause", "type": "Any"}, {"lineNumber": 402, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 402, "col_offset": 47, "nodeName": "const", "type": "Any"}, {"lineNumber": 402, "col_offset": 63, "nodeName": "nil", "type": "Any"}, {"lineNumber": 407, "col_offset": 24, "nodeName": "fields", "type": "Any"}, {"lineNumber": 408, "col_offset": 29, "nodeName": "fields", "type": "Any"}, {"lineNumber": 410, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 423, "col_offset": 33, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 423, "col_offset": 54, "nodeName": "relay", "type": "Any"}, {"lineNumber": 423, "col_offset": 70, "nodeName": "x", "type": "Any"}, {"lineNumber": 423, "col_offset": 74, "nodeName": "const", "type": "Any"}, {"lineNumber": 433, "col_offset": 30, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 434, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 434, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 434, "col_offset": 41, "nodeName": "const", "type": "Any"}, {"lineNumber": 448, "col_offset": 38, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 448, "col_offset": 55, "nodeName": "RefRead", "type": "Any"}, {"lineNumber": 448, "col_offset": 69, "nodeName": "r", "type": "Any"}, {"lineNumber": 455, "col_offset": 16, "nodeName": "Clause", "type": "Any"}, {"lineNumber": 456, "col_offset": 16, "nodeName": "Clause", "type": "Any"}, {"lineNumber": 462, "col_offset": 16, "nodeName": "Clause", "type": "Any"}, {"lineNumber": 481, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 481, "col_offset": 25, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 481, "col_offset": 72, "nodeName": "TupleGetItem", "type": "Any"}, {"lineNumber": 481, "col_offset": 91, "nodeName": "x", "type": "Any"}, {"lineNumber": 482, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 484, "col_offset": 16, "nodeName": "RefCreate", "type": "Any"}, {"lineNumber": 485, "col_offset": 16, "nodeName": "seq", "type": "Callable[..., Any]"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 487, "col_offset": 25, "nodeName": "id", "type": "Any"}, {"lineNumber": 511, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 511, "col_offset": 28, "nodeName": "const", "type": "Any"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 558, "col_offset": 12, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 558, "col_offset": 24, "nodeName": "const", "type": "Any"}, {"lineNumber": 558, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 559, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 574, "col_offset": 12, "nodeName": "normal", "type": "Any"}, {"lineNumber": 576, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 580, "col_offset": 32, "nodeName": "call_val", "type": "Any"}, {"lineNumber": 580, "col_offset": 45, "nodeName": "ref_res", "type": "Any"}, {"lineNumber": 592, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 592, "col_offset": 28, "nodeName": "astype", "type": "Any"}, {"lineNumber": 593, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 598, "col_offset": 67, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 602, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 602, "col_offset": 36, "nodeName": "relay_args", "type": "List[Any]"}, {"lineNumber": 602, "col_offset": 56, "nodeName": "eps", "type": "float"}, {"lineNumber": 607, "col_offset": 36, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 608, "col_offset": 36, "nodeName": "call_val", "type": "Any"}, {"lineNumber": 85, "col_offset": 54, "nodeName": "const", "type": "Any"}, {"lineNumber": 85, "col_offset": 70, "nodeName": "const", "type": "Any"}, {"lineNumber": 98, "col_offset": 54, "nodeName": "const", "type": "Any"}, {"lineNumber": 98, "col_offset": 70, "nodeName": "const", "type": "Any"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "const", "type": "Any"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "const", "type": "Any"}, {"lineNumber": 150, "col_offset": 37, "nodeName": "const", "type": "Any"}, {"lineNumber": 153, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "relay", "type": "Any"}, {"lineNumber": 213, "col_offset": 47, "nodeName": "relay", "type": "Any"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 248, "col_offset": 37, "nodeName": "PatternWildcard", "type": "Any"}, {"lineNumber": 248, "col_offset": 62, "nodeName": "const", "type": "Any"}, {"lineNumber": 261, "col_offset": 53, "nodeName": "relay", "type": "Any"}, {"lineNumber": 261, "col_offset": 66, "nodeName": "PatternVar", "type": "Any"}, {"lineNumber": 261, "col_offset": 83, "nodeName": "w", "type": "Any"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 278, "col_offset": 29, "nodeName": "PatternConstructor", "type": "Any"}, {"lineNumber": 278, "col_offset": 54, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 292, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 296, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "PatternConstructor", "type": "Any"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 317, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 321, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "PatternWildcard", "type": "Any"}, {"lineNumber": 321, "col_offset": 54, "nodeName": "const", "type": "Any"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 323, "col_offset": 20, "nodeName": "PatternConstructor", "type": "Any"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 353, "col_offset": 20, "nodeName": "Clause", "type": "Any"}, {"lineNumber": 357, "col_offset": 20, "nodeName": "Clause", "type": "Any"}, {"lineNumber": 361, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 361, "col_offset": 36, "nodeName": "const", "type": "Any"}, {"lineNumber": 361, "col_offset": 52, "nodeName": "cons", "type": "Any"}, {"lineNumber": 368, "col_offset": 24, "nodeName": "val", "type": "Any"}, {"lineNumber": 369, "col_offset": 29, "nodeName": "val", "type": "Any"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 391, "col_offset": 20, "nodeName": "PatternConstructor", "type": "Any"}, {"lineNumber": 391, "col_offset": 45, "nodeName": "cons", "type": "Any"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "cons", "type": "Any"}, {"lineNumber": 392, "col_offset": 25, "nodeName": "h", "type": "Any"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 394, "col_offset": 29, "nodeName": "PatternConstructor", "type": "Any"}, {"lineNumber": 394, "col_offset": 54, "nodeName": "nil", "type": "Any"}, {"lineNumber": 394, "col_offset": 64, "nodeName": "nil", "type": "Any"}, {"lineNumber": 402, "col_offset": 47, "nodeName": "relay", "type": "Any"}, {"lineNumber": 407, "col_offset": 24, "nodeName": "val1", "type": "Any"}, {"lineNumber": 408, "col_offset": 29, "nodeName": "val1", "type": "Any"}, {"lineNumber": 423, "col_offset": 33, "nodeName": "relay", "type": "Any"}, {"lineNumber": 423, "col_offset": 74, "nodeName": "relay", "type": "Any"}, {"lineNumber": 433, "col_offset": 30, "nodeName": "relay", "type": "Any"}, {"lineNumber": 434, "col_offset": 41, "nodeName": "relay", "type": "Any"}, {"lineNumber": 448, "col_offset": 38, "nodeName": "relay", "type": "Any"}, {"lineNumber": 448, "col_offset": 55, "nodeName": "relay", "type": "Any"}, {"lineNumber": 455, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 455, "col_offset": 29, "nodeName": "PatternConstructor", "type": "Any"}, {"lineNumber": 455, "col_offset": 54, "nodeName": "nil", "type": "Any"}, {"lineNumber": 455, "col_offset": 64, "nodeName": "const", "type": "Any"}, {"lineNumber": 456, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 457, "col_offset": 20, "nodeName": "PatternConstructor", "type": "Any"}, {"lineNumber": 458, "col_offset": 24, "nodeName": "cons", "type": "Any"}, {"lineNumber": 460, "col_offset": 20, "nodeName": "const", "type": "Any"}, {"lineNumber": 462, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 462, "col_offset": 29, "nodeName": "PatternWildcard", "type": "Any"}, {"lineNumber": 462, "col_offset": 54, "nodeName": "const", "type": "Any"}, {"lineNumber": 481, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 481, "col_offset": 72, "nodeName": "relay", "type": "Any"}, {"lineNumber": 484, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 484, "col_offset": 32, "nodeName": "const", "type": "Any"}, {"lineNumber": 485, "col_offset": 20, "nodeName": "RefWrite", "type": "Any"}, {"lineNumber": 485, "col_offset": 35, "nodeName": "r", "type": "Any"}, {"lineNumber": 485, "col_offset": 55, "nodeName": "RefRead", "type": "Any"}, {"lineNumber": 485, "col_offset": 69, "nodeName": "r", "type": "Any"}, {"lineNumber": 487, "col_offset": 25, "nodeName": "p", "type": "Any"}, {"lineNumber": 487, "col_offset": 30, "nodeName": "Let", "type": "Any"}, {"lineNumber": 487, "col_offset": 40, "nodeName": "z", "type": "Any"}, {"lineNumber": 487, "col_offset": 59, "nodeName": "z", "type": "Any"}, {"lineNumber": 511, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 515, "col_offset": 20, "nodeName": "RefRead", "type": "Any"}, {"lineNumber": 515, "col_offset": 34, "nodeName": "r", "type": "Any"}, {"lineNumber": 517, "col_offset": 20, "nodeName": "seq", "type": "Callable[..., Any]"}, {"lineNumber": 519, "col_offset": 20, "nodeName": "seq", "type": "Callable[..., Any]"}, {"lineNumber": 523, "col_offset": 20, "nodeName": "f", "type": "Any"}, {"lineNumber": 528, "col_offset": 20, "nodeName": "RefRead", "type": "Any"}, {"lineNumber": 528, "col_offset": 34, "nodeName": "r", "type": "Any"}, {"lineNumber": 553, "col_offset": 18, "nodeName": "normal", "type": "Any"}, {"lineNumber": 558, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 574, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 574, "col_offset": 34, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 580, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 580, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 602, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 85, "col_offset": 54, "nodeName": "relay", "type": "Any"}, {"lineNumber": 85, "col_offset": 70, "nodeName": "relay", "type": "Any"}, {"lineNumber": 98, "col_offset": 54, "nodeName": "relay", "type": "Any"}, {"lineNumber": 98, "col_offset": 70, "nodeName": "relay", "type": "Any"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "relay", "type": "Any"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "relay", "type": "Any"}, {"lineNumber": 150, "col_offset": 37, "nodeName": "relay", "type": "Any"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "relay", "type": "Any"}, {"lineNumber": 156, "col_offset": 29, "nodeName": "RefRead", "type": "Any"}, {"lineNumber": 156, "col_offset": 43, "nodeName": "w", "type": "Any"}, {"lineNumber": 156, "col_offset": 47, "nodeName": "RefRead", "type": "Any"}, {"lineNumber": 156, "col_offset": 61, "nodeName": "v", "type": "Any"}, {"lineNumber": 248, "col_offset": 37, "nodeName": "relay", "type": "Any"}, {"lineNumber": 248, "col_offset": 62, "nodeName": "relay", "type": "Any"}, {"lineNumber": 261, "col_offset": 66, "nodeName": "relay", "type": "Any"}, {"lineNumber": 278, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 321, "col_offset": 54, "nodeName": "relay", "type": "Any"}, {"lineNumber": 323, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 353, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 354, "col_offset": 24, "nodeName": "PatternConstructor", "type": "Any"}, {"lineNumber": 354, "col_offset": 49, "nodeName": "cons", "type": "Any"}, {"lineNumber": 355, "col_offset": 24, "nodeName": "cons", "type": "Any"}, {"lineNumber": 355, "col_offset": 29, "nodeName": "h", "type": "Any"}, {"lineNumber": 357, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 357, "col_offset": 33, "nodeName": "PatternConstructor", "type": "Any"}, {"lineNumber": 357, "col_offset": 58, "nodeName": "nil", "type": "Any"}, {"lineNumber": 357, "col_offset": 68, "nodeName": "nil", "type": "Any"}, {"lineNumber": 361, "col_offset": 36, "nodeName": "relay", "type": "Any"}, {"lineNumber": 361, "col_offset": 57, "nodeName": "const", "type": "Any"}, {"lineNumber": 361, "col_offset": 73, "nodeName": "nil", "type": "Any"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "fields", "type": "Any"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "fields", "type": "Any"}, {"lineNumber": 391, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 392, "col_offset": 28, "nodeName": "copy", "type": "Any"}, {"lineNumber": 392, "col_offset": 33, "nodeName": "t", "type": "Any"}, {"lineNumber": 394, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 455, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 455, "col_offset": 64, "nodeName": "relay", "type": "Any"}, {"lineNumber": 457, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 460, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 462, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 462, "col_offset": 54, "nodeName": "relay", "type": "Any"}, {"lineNumber": 481, "col_offset": 38, "nodeName": "const", "type": "Any"}, {"lineNumber": 481, "col_offset": 54, "nodeName": "const", "type": "Any"}, {"lineNumber": 484, "col_offset": 32, "nodeName": "relay", "type": "Any"}, {"lineNumber": 485, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 485, "col_offset": 38, "nodeName": "const", "type": "Any"}, {"lineNumber": 485, "col_offset": 55, "nodeName": "relay", "type": "Any"}, {"lineNumber": 487, "col_offset": 30, "nodeName": "relay", "type": "Any"}, {"lineNumber": 487, "col_offset": 43, "nodeName": "const", "type": "Any"}, {"lineNumber": 515, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 517, "col_offset": 24, "nodeName": "RefWrite", "type": "Any"}, {"lineNumber": 517, "col_offset": 39, "nodeName": "r", "type": "Any"}, {"lineNumber": 517, "col_offset": 59, "nodeName": "RefRead", "type": "Any"}, {"lineNumber": 517, "col_offset": 73, "nodeName": "r", "type": "Any"}, {"lineNumber": 519, "col_offset": 24, "nodeName": "RefWrite", "type": "Any"}, {"lineNumber": 519, "col_offset": 39, "nodeName": "r", "type": "Any"}, {"lineNumber": 519, "col_offset": 59, "nodeName": "RefRead", "type": "Any"}, {"lineNumber": 519, "col_offset": 73, "nodeName": "r", "type": "Any"}, {"lineNumber": 524, "col_offset": 24, "nodeName": "seq", "type": "Callable[..., Any]"}, {"lineNumber": 525, "col_offset": 24, "nodeName": "seq", "type": "Callable[..., Any]"}, {"lineNumber": 528, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 553, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 553, "col_offset": 40, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 574, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 592, "col_offset": 28, "nodeName": "normal", "type": "Any"}, {"lineNumber": 598, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 598, "col_offset": 24, "nodeName": "moving_mean", "type": "Any"}, {"lineNumber": 598, "col_offset": 39, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 155, "col_offset": 47, "nodeName": "const", "type": "Any"}, {"lineNumber": 156, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 156, "col_offset": 47, "nodeName": "relay", "type": "Any"}, {"lineNumber": 278, "col_offset": 65, "nodeName": "PatternVar", "type": "Any"}, {"lineNumber": 278, "col_offset": 82, "nodeName": "w", "type": "Any"}, {"lineNumber": 298, "col_offset": 35, "nodeName": "PatternConstructor", "type": "Any"}, {"lineNumber": 298, "col_offset": 60, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 324, "col_offset": 35, "nodeName": "PatternConstructor", "type": "Any"}, {"lineNumber": 324, "col_offset": 60, "nodeName": "box_ctor", "type": "Any"}, {"lineNumber": 354, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 355, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 355, "col_offset": 34, "nodeName": "t", "type": "Any"}, {"lineNumber": 357, "col_offset": 33, "nodeName": "relay", "type": "Any"}, {"lineNumber": 361, "col_offset": 57, "nodeName": "relay", "type": "Any"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "val", "type": "Any"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "val", "type": "Any"}, {"lineNumber": 391, "col_offset": 52, "nodeName": "PatternVar", "type": "Any"}, {"lineNumber": 391, "col_offset": 69, "nodeName": "h", "type": "Any"}, {"lineNumber": 391, "col_offset": 73, "nodeName": "PatternVar", "type": "Any"}, {"lineNumber": 391, "col_offset": 90, "nodeName": "t", "type": "Any"}, {"lineNumber": 458, "col_offset": 31, "nodeName": "PatternWildcard", "type": "Any"}, {"lineNumber": 458, "col_offset": 56, "nodeName": "PatternConstructor", "type": "Any"}, {"lineNumber": 458, "col_offset": 81, "nodeName": "nil", "type": "Any"}, {"lineNumber": 481, "col_offset": 38, "nodeName": "relay", "type": "Any"}, {"lineNumber": 481, "col_offset": 54, "nodeName": "relay", "type": "Any"}, {"lineNumber": 485, "col_offset": 38, "nodeName": "relay", "type": "Any"}, {"lineNumber": 487, "col_offset": 43, "nodeName": "relay", "type": "Any"}, {"lineNumber": 517, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 517, "col_offset": 42, "nodeName": "const", "type": "Any"}, {"lineNumber": 517, "col_offset": 59, "nodeName": "relay", "type": "Any"}, {"lineNumber": 519, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 519, "col_offset": 42, "nodeName": "const", "type": "Any"}, {"lineNumber": 519, "col_offset": 59, "nodeName": "relay", "type": "Any"}, {"lineNumber": 524, "col_offset": 28, "nodeName": "RefWrite", "type": "Any"}, {"lineNumber": 524, "col_offset": 43, "nodeName": "r", "type": "Any"}, {"lineNumber": 524, "col_offset": 63, "nodeName": "RefRead", "type": "Any"}, {"lineNumber": 524, "col_offset": 77, "nodeName": "r", "type": "Any"}, {"lineNumber": 525, "col_offset": 28, "nodeName": "RefWrite", "type": "Any"}, {"lineNumber": 525, "col_offset": 43, "nodeName": "r", "type": "Any"}, {"lineNumber": 525, "col_offset": 63, "nodeName": "RefRead", "type": "Any"}, {"lineNumber": 525, "col_offset": 77, "nodeName": "r", "type": "Any"}, {"lineNumber": 553, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 592, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 592, "col_offset": 50, "nodeName": "shape", "type": "Union[Tuple[int], Tuple[int, int]]"}, {"lineNumber": 598, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 598, "col_offset": 47, "nodeName": "moving_var", "type": "Any"}, {"lineNumber": 598, "col_offset": 60, "nodeName": "eps", "type": "float"}, {"lineNumber": 155, "col_offset": 47, "nodeName": "relay", "type": "Any"}, {"lineNumber": 278, "col_offset": 65, "nodeName": "relay", "type": "Any"}, {"lineNumber": 298, "col_offset": 35, "nodeName": "relay", "type": "Any"}, {"lineNumber": 324, "col_offset": 35, "nodeName": "relay", "type": "Any"}, {"lineNumber": 354, "col_offset": 56, "nodeName": "PatternVar", "type": "Any"}, {"lineNumber": 354, "col_offset": 73, "nodeName": "h", "type": "Any"}, {"lineNumber": 354, "col_offset": 77, "nodeName": "PatternVar", "type": "Any"}, {"lineNumber": 354, "col_offset": 94, "nodeName": "t", "type": "Any"}, {"lineNumber": 391, "col_offset": 52, "nodeName": "relay", "type": "Any"}, {"lineNumber": 391, "col_offset": 73, "nodeName": "relay", "type": "Any"}, {"lineNumber": 458, "col_offset": 31, "nodeName": "relay", "type": "Any"}, {"lineNumber": 458, "col_offset": 56, "nodeName": "relay", "type": "Any"}, {"lineNumber": 517, "col_offset": 42, "nodeName": "relay", "type": "Any"}, {"lineNumber": 519, "col_offset": 42, "nodeName": "relay", "type": "Any"}, {"lineNumber": 524, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 524, "col_offset": 46, "nodeName": "const", "type": "Any"}, {"lineNumber": 524, "col_offset": 63, "nodeName": "relay", "type": "Any"}, {"lineNumber": 525, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 525, "col_offset": 46, "nodeName": "const", "type": "Any"}, {"lineNumber": 525, "col_offset": 63, "nodeName": "relay", "type": "Any"}, {"lineNumber": 592, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 298, "col_offset": 71, "nodeName": "PatternVar", "type": "Any"}, {"lineNumber": 298, "col_offset": 88, "nodeName": "w", "type": "Any"}, {"lineNumber": 324, "col_offset": 71, "nodeName": "PatternVar", "type": "Any"}, {"lineNumber": 324, "col_offset": 88, "nodeName": "w", "type": "Any"}, {"lineNumber": 354, "col_offset": 56, "nodeName": "relay", "type": "Any"}, {"lineNumber": 354, "col_offset": 77, "nodeName": "relay", "type": "Any"}, {"lineNumber": 524, "col_offset": 46, "nodeName": "relay", "type": "Any"}, {"lineNumber": 525, "col_offset": 46, "nodeName": "relay", "type": "Any"}, {"lineNumber": 298, "col_offset": 71, "nodeName": "relay", "type": "Any"}, {"lineNumber": 324, "col_offset": 71, "nodeName": "relay", "type": "Any"}]