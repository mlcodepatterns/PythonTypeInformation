[{"lineNumber": 28, "col_offset": 0, "nodeName": "partition_conversions", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "fuse_partitions", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 194, "col_offset": 0, "nodeName": "partition_prefix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 267, "col_offset": 0, "nodeName": "partition_suffix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 327, "col_offset": 0, "nodeName": "has_only_conversion_ops", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "ALLOWED_CONVERSION_OPS", "type": "List[str]"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "ExprMutator", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "visit_var", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "visit_call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "ExprMutator", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "visit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 314, "col_offset": 26, "nodeName": "ExprVisitor", "type": "Any"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "visit_call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 7, "nodeName": "ensure_fully_integral", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "pre_func", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "mid_func", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "post_func", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "scope_builder", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "fused_mod_main_params", "type": "List[Any]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "prefix_cutter", "type": "PrefixCutter"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "mid_body", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "mid_func", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "mid_mod", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "mid_mod", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "scope_builder", "type": "Any"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "prefix_sb", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "ret_expr", "type": "List[Any]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 227, "col_offset": 17, "nodeName": "params", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "ret_expr", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "pre_func_body", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "pre_func", "type": "Any"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "pre_mod", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "pre_mod", "type": "Any"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "suffix_cutter", "type": "SuffixCutter"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "post_body", "type": "Any"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "post_func", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "post_mod", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "post_mod", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "mid_body", "type": "Any"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "mid_body", "type": "Any"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "checker", "type": "ConversionOpChecker"}, {"lineNumber": 342, "col_offset": 11, "nodeName": "valid", "type": "bool"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "pre_mod", "type": "Any"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "mid_mod", "type": "Any"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "partition_prefix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "mod", "type": "Any"}, {"lineNumber": 81, "col_offset": 45, "nodeName": "quantized_dtypes", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "mid_mod", "type": "Any"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "post_mod", "type": "Any"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "partition_suffix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "mid_mod", "type": "Any"}, {"lineNumber": 82, "col_offset": 50, "nodeName": "quantized_dtypes", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "fuse_partitions", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "pre_mod", "type": "Any"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "mid_mod", "type": "Any"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "post_mod", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "pre_mod", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "mid_mod", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "post_mod", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "ScopeBuilder", "type": "Any"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "let", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "let", "type": "Any"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "let", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "ret", "type": "Any"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "dequantized_outputs", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "fused_mod", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "Function", "type": "Any"}, {"lineNumber": 145, "col_offset": 39, "nodeName": "fused_mod_main_params", "type": "List[Any]"}, {"lineNumber": 146, "col_offset": 39, "nodeName": "fused_mod", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "params", "type": "Set[Any]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "quantized_dtypes", "type": "Any"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "quantized_dtypes", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "subtree_params", "type": "Set[Any]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "new_func_params", "type": "List[nothing]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "prefix_sb", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "prefix_binding_map", "type": "Dict[Any, Any]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "mod", "type": "Any"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "PrefixCutter", "type": "Type[PrefixCutter]"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "params", "type": "Any"}, {"lineNumber": 215, "col_offset": 46, "nodeName": "quantized_dtypes", "type": "Any"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "visit", "type": "Any"}, {"lineNumber": 216, "col_offset": 35, "nodeName": "body", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "type_params", "type": "Any"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 219, "col_offset": 66, "nodeName": "mid_body", "type": "Any"}, {"lineNumber": 220, "col_offset": 14, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 220, "col_offset": 37, "nodeName": "mid_func", "type": "Any"}, {"lineNumber": 221, "col_offset": 42, "nodeName": "mid_mod", "type": "Any"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "prefix_cutter", "type": "PrefixCutter"}, {"lineNumber": 227, "col_offset": 17, "nodeName": "mid_func", "type": "Any"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 237, "col_offset": 27, "nodeName": "ret_expr", "type": "List[Any]"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "ret", "type": "Any"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "ret_expr", "type": "Any"}, {"lineNumber": 239, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 240, "col_offset": 71, "nodeName": "pre_func_body", "type": "Any"}, {"lineNumber": 241, "col_offset": 14, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 241, "col_offset": 37, "nodeName": "pre_func", "type": "Any"}, {"lineNumber": 242, "col_offset": 42, "nodeName": "pre_mod", "type": "Any"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "pre_mod", "type": "Any"}, {"lineNumber": 244, "col_offset": 20, "nodeName": "mid_mod", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "mid_body", "type": "None"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "quantized_dtypes", "type": "Any"}, {"lineNumber": 257, "col_offset": 32, "nodeName": "quantized_dtypes", "type": "Any"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "mod", "type": "Any"}, {"lineNumber": 288, "col_offset": 20, "nodeName": "SuffixCutter", "type": "Type[SuffixCutter]"}, {"lineNumber": 288, "col_offset": 33, "nodeName": "quantized_dtypes", "type": "Any"}, {"lineNumber": 289, "col_offset": 16, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 289, "col_offset": 36, "nodeName": "body", "type": "Any"}, {"lineNumber": 290, "col_offset": 15, "nodeName": "type_params", "type": "Any"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 292, "col_offset": 16, "nodeName": "Function", "type": "Any"}, {"lineNumber": 292, "col_offset": 68, "nodeName": "post_body", "type": "Any"}, {"lineNumber": 292, "col_offset": 79, "nodeName": "ret_type", "type": "Any"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 293, "col_offset": 38, "nodeName": "post_func", "type": "Any"}, {"lineNumber": 294, "col_offset": 43, "nodeName": "post_mod", "type": "Any"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "suffix_cutter", "type": "SuffixCutter"}, {"lineNumber": 297, "col_offset": 7, "nodeName": "mid_body", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "mid_mod", "type": "Any"}, {"lineNumber": 301, "col_offset": 18, "nodeName": "post_mod", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "post_body", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "post_func", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "post_mod", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "post_mod", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "mid_func", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "mid_mod", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "mid_mod", "type": "Any"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "mid_mod", "type": "Any"}, {"lineNumber": 311, "col_offset": 20, "nodeName": "post_mod", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "valid", "type": "bool"}, {"lineNumber": 340, "col_offset": 14, "nodeName": "ConversionOpChecker", "type": "Type[ConversionOpChecker]"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "visit", "type": "Any"}, {"lineNumber": 341, "col_offset": 18, "nodeName": "func", "type": "Any"}, {"lineNumber": 342, "col_offset": 11, "nodeName": "checker", "type": "ConversionOpChecker"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "functions", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "has_only_conversion_ops", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "issubset", "type": "Any"}, {"lineNumber": 85, "col_offset": 67, "nodeName": "quantized_dtypes", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "has_only_conversion_ops", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "Var", "type": "Any"}, {"lineNumber": 128, "col_offset": 39, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 128, "col_offset": 60, "nodeName": "param", "type": "Any"}, {"lineNumber": 128, "col_offset": 69, "nodeName": "params", "type": "Any"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "scope_builder", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "Call", "type": "Any"}, {"lineNumber": 131, "col_offset": 64, "nodeName": "fused_mod_main_params", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "scope_builder", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "Call", "type": "Any"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "scope_builder", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "Call", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "scope_builder", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 145, "col_offset": 62, "nodeName": "get", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "self", "type": "PrefixCutter"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "PrefixCutter"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "params", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "PrefixCutter"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "PrefixCutter"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "PrefixCutter"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "PrefixCutter"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "ScopeBuilder", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "PrefixCutter"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "params", "type": "Set[Any]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "new_args", "type": "List[Any]"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "arg", "type": "Any"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "visit_call", "type": "Any"}, {"lineNumber": 191, "col_offset": 34, "nodeName": "call", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "functions", "type": "Any"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "func", "type": "Any"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "prefix_cutter", "type": "PrefixCutter"}, {"lineNumber": 216, "col_offset": 35, "nodeName": "func", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "func", "type": "Any"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "func", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 219, "col_offset": 30, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 219, "col_offset": 55, "nodeName": "mid_body", "type": "Any"}, {"lineNumber": 220, "col_offset": 14, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "prefix_binding_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "scope_builder", "type": "Any"}, {"lineNumber": 239, "col_offset": 20, "nodeName": "scope_builder", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 240, "col_offset": 30, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 240, "col_offset": 55, "nodeName": "pre_func_body", "type": "Any"}, {"lineNumber": 241, "col_offset": 14, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 255, "col_offset": 29, "nodeName": "self", "type": "SuffixCutter"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "SuffixCutter"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "self", "type": "SuffixCutter"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "mid_body", "type": "Any"}, {"lineNumber": 261, "col_offset": 28, "nodeName": "expr", "type": "Any"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "visit", "type": "Any"}, {"lineNumber": 264, "col_offset": 29, "nodeName": "expr", "type": "Any"}, {"lineNumber": 286, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "functions", "type": "Any"}, {"lineNumber": 289, "col_offset": 16, "nodeName": "suffix_cutter", "type": "SuffixCutter"}, {"lineNumber": 289, "col_offset": 36, "nodeName": "func", "type": "Any"}, {"lineNumber": 290, "col_offset": 15, "nodeName": "func", "type": "Any"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "func", "type": "Any"}, {"lineNumber": 292, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 292, "col_offset": 31, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 292, "col_offset": 56, "nodeName": "post_body", "type": "Any"}, {"lineNumber": 292, "col_offset": 79, "nodeName": "func", "type": "Any"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 302, "col_offset": 20, "nodeName": "Var", "type": "Any"}, {"lineNumber": 302, "col_offset": 39, "nodeName": "ret_type", "type": "Any"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "Function", "type": "Any"}, {"lineNumber": 303, "col_offset": 48, "nodeName": "post_body", "type": "Any"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 304, "col_offset": 42, "nodeName": "post_func", "type": "Any"}, {"lineNumber": 305, "col_offset": 47, "nodeName": "post_mod", "type": "Any"}, {"lineNumber": 307, "col_offset": 19, "nodeName": "Function", "type": "Any"}, {"lineNumber": 307, "col_offset": 34, "nodeName": "params", "type": "Any"}, {"lineNumber": 307, "col_offset": 47, "nodeName": "mid_body", "type": "Any"}, {"lineNumber": 308, "col_offset": 18, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 308, "col_offset": 41, "nodeName": "mid_func", "type": "Any"}, {"lineNumber": 309, "col_offset": 46, "nodeName": "mid_mod", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 318, "col_offset": 29, "nodeName": "self", "type": "ConversionOpChecker"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "self", "type": "ConversionOpChecker"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "valid", "type": "bool"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "visit_call", "type": "Any"}, {"lineNumber": 324, "col_offset": 27, "nodeName": "call", "type": "Any"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "checker", "type": "ConversionOpChecker"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "mod", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "pre_mod", "type": "Any"}, {"lineNumber": 86, "col_offset": 39, "nodeName": "post_mod", "type": "Any"}, {"lineNumber": 119, "col_offset": 48, "nodeName": "pre_func", "type": "Any"}, {"lineNumber": 120, "col_offset": 47, "nodeName": "mid_func", "type": "Any"}, {"lineNumber": 121, "col_offset": 51, "nodeName": "post_func", "type": "Any"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 128, "col_offset": 39, "nodeName": "param", "type": "Any"}, {"lineNumber": 128, "col_offset": 69, "nodeName": "pre_func", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "get_global_var", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "get_global_var", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "get_global_var", "type": "Any"}, {"lineNumber": 142, "col_offset": 68, "nodeName": "quantized_outputs", "type": "Any"}, {"lineNumber": 145, "col_offset": 62, "nodeName": "scope_builder", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "transform", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "ExprMutator", "type": "Any"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "self", "type": "PrefixCutter"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 167, "col_offset": 36, "nodeName": "var", "type": "Any"}, {"lineNumber": 172, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 172, "col_offset": 63, "nodeName": "ALLOWED_CONVERSION_OPS", "type": "List[str]"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "call", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "new_arg", "type": "Any"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "Call", "type": "Any"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "op", "type": "Any"}, {"lineNumber": 189, "col_offset": 39, "nodeName": "new_args", "type": "List[Any]"}, {"lineNumber": 189, "col_offset": 49, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "mod", "type": "Any"}, {"lineNumber": 219, "col_offset": 30, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 220, "col_offset": 14, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "transform", "type": "Any"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "prefix_cutter", "type": "PrefixCutter"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 240, "col_offset": 30, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 241, "col_offset": 14, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "transform", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "ExprMutator", "type": "Any"}, {"lineNumber": 260, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "expr", "type": "Any"}, {"lineNumber": 260, "col_offset": 45, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 260, "col_offset": 72, "nodeName": "quantized_dtypes", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "self", "type": "SuffixCutter"}, {"lineNumber": 262, "col_offset": 19, "nodeName": "Var", "type": "Any"}, {"lineNumber": 262, "col_offset": 38, "nodeName": "checked_type", "type": "Any"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "mod", "type": "Any"}, {"lineNumber": 292, "col_offset": 31, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "transform", "type": "Any"}, {"lineNumber": 302, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 303, "col_offset": 36, "nodeName": "post_body", "type": "Any"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 305, "col_offset": 19, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 307, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 307, "col_offset": 34, "nodeName": "func", "type": "Any"}, {"lineNumber": 308, "col_offset": 18, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 309, "col_offset": 18, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "ExprVisitor", "type": "Any"}, {"lineNumber": 322, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 322, "col_offset": 63, "nodeName": "ALLOWED_CONVERSION_OPS", "type": "List[str]"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "self", "type": "ConversionOpChecker"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "all_dtypes", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "GlobalVar", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "GlobalVar", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "GlobalVar", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "fused_mod", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "fused_mod", "type": "Any"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "TupleGetItem", "type": "Any"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "quantized_inputs", "type": "Any"}, {"lineNumber": 137, "col_offset": 50, "nodeName": "i", "type": "int"}, {"lineNumber": 137, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "fused_mod", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "subtree_params", "type": "Set[Any]"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "op", "type": "Any"}, {"lineNumber": 172, "col_offset": 43, "nodeName": "op", "type": "Any"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "visit", "type": "Any"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "arg", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "param", "type": "nothing"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "pre_param", "type": "Any"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "mid_param", "type": "Any"}, {"lineNumber": 184, "col_offset": 57, "nodeName": "pre_param", "type": "Any"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "call", "type": "Any"}, {"lineNumber": 189, "col_offset": 49, "nodeName": "call", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 219, "col_offset": 30, "nodeName": "relay", "type": "Any"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "ret_expr", "type": "List[Any]"}, {"lineNumber": 232, "col_offset": 28, "nodeName": "prefix_binding_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "ret_expr", "type": "List[Any]"}, {"lineNumber": 236, "col_offset": 28, "nodeName": "Var", "type": "Any"}, {"lineNumber": 236, "col_offset": 38, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 236, "col_offset": 55, "nodeName": "checked_type", "type": "Any"}, {"lineNumber": 240, "col_offset": 30, "nodeName": "relay", "type": "Any"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 260, "col_offset": 45, "nodeName": "checked_type", "type": "Any"}, {"lineNumber": 260, "col_offset": 72, "nodeName": "self", "type": "SuffixCutter"}, {"lineNumber": 262, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 262, "col_offset": 38, "nodeName": "expr", "type": "Any"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 292, "col_offset": 31, "nodeName": "relay", "type": "Any"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 302, "col_offset": 39, "nodeName": "mid_mod", "type": "Any"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 305, "col_offset": 19, "nodeName": "transform", "type": "Any"}, {"lineNumber": 308, "col_offset": 18, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 309, "col_offset": 18, "nodeName": "transform", "type": "Any"}, {"lineNumber": 322, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 322, "col_offset": 23, "nodeName": "op", "type": "Any"}, {"lineNumber": 322, "col_offset": 43, "nodeName": "op", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "mid_mod", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 137, "col_offset": 62, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "self", "type": "PrefixCutter"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "call", "type": "Any"}, {"lineNumber": 172, "col_offset": 43, "nodeName": "call", "type": "Any"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "self", "type": "PrefixCutter"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "subtree_params", "type": "Set[Any]"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 177, "col_offset": 36, "nodeName": "new_arg", "type": "Any"}, {"lineNumber": 180, "col_offset": 28, "nodeName": "next", "type": "Callable"}, {"lineNumber": 181, "col_offset": 32, "nodeName": "let", "type": "Any"}, {"lineNumber": 181, "col_offset": 51, "nodeName": "name_hint", "type": "nothing"}, {"lineNumber": 181, "col_offset": 68, "nodeName": "new_arg", "type": "Any"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 183, "col_offset": 32, "nodeName": "Var", "type": "Any"}, {"lineNumber": 183, "col_offset": 42, "nodeName": "name_hint", "type": "nothing"}, {"lineNumber": 183, "col_offset": 59, "nodeName": "checked_type", "type": "Any"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "prefix_binding_map", "type": "Dict[Any, Any]"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 188, "col_offset": 36, "nodeName": "mid_param", "type": "Any"}, {"lineNumber": 232, "col_offset": 28, "nodeName": "prefix_cutter", "type": "PrefixCutter"}, {"lineNumber": 232, "col_offset": 61, "nodeName": "param", "type": "Any"}, {"lineNumber": 236, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 236, "col_offset": 38, "nodeName": "param", "type": "Any"}, {"lineNumber": 236, "col_offset": 55, "nodeName": "param", "type": "Any"}, {"lineNumber": 260, "col_offset": 45, "nodeName": "expr", "type": "Any"}, {"lineNumber": 305, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 309, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 322, "col_offset": 23, "nodeName": "call", "type": "Any"}, {"lineNumber": 322, "col_offset": 43, "nodeName": "call", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 137, "col_offset": 68, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 137, "col_offset": 72, "nodeName": "fields", "type": "Any"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "self", "type": "PrefixCutter"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "new_args", "type": "List[Any]"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "subtree_params", "type": "Set[Any]"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 180, "col_offset": 38, "nodeName": "subtree_params", "type": "Set[Any]"}, {"lineNumber": 181, "col_offset": 32, "nodeName": "prefix_sb", "type": "Any"}, {"lineNumber": 181, "col_offset": 51, "nodeName": "param", "type": "nothing"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "subtree_params", "type": "Set[Any]"}, {"lineNumber": 183, "col_offset": 32, "nodeName": "relay", "type": "Any"}, {"lineNumber": 183, "col_offset": 42, "nodeName": "param", "type": "nothing"}, {"lineNumber": 183, "col_offset": 59, "nodeName": "arg", "type": "Any"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "self", "type": "PrefixCutter"}, {"lineNumber": 184, "col_offset": 44, "nodeName": "mid_param", "type": "Any"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "new_args", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 72, "nodeName": "ret_type", "type": "Any"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "self", "type": "PrefixCutter"}, {"lineNumber": 180, "col_offset": 38, "nodeName": "self", "type": "PrefixCutter"}, {"lineNumber": 181, "col_offset": 32, "nodeName": "self", "type": "PrefixCutter"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "self", "type": "PrefixCutter"}, {"lineNumber": 137, "col_offset": 72, "nodeName": "pre_func", "type": "Any"}]