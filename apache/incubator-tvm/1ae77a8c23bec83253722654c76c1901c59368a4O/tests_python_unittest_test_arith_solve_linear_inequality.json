[{"lineNumber": 24, "col_offset": 0, "nodeName": "test_solution_consistency", "type": "Callable[[], Any]"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "test_dual_variable", "type": "Callable[[], Any]"}, {"lineNumber": 123, "col_offset": 0, "nodeName": "test_equal", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 0, "nodeName": "test_multi_equal", "type": "Callable[[], Any]"}, {"lineNumber": 168, "col_offset": 0, "nodeName": "test_no_solution", "type": "Callable[[], Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "_check", "type": "Callable[..., Any]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "variables", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "solution", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "solution", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "solution", "type": "Any"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "variables", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "relations", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "solution", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "solution", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "solution", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "solution", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "vranges", "type": "Dict[Any, Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "problem", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "solution", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "relations", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "solution", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "relations", "type": "Any"}, {"lineNumber": 187, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "randrange", "type": "Callable"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "maxsize", "type": "int"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "seed", "type": "int"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "vs", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "fs", "type": "List[Any]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "vranges", "type": "Dict[Any, Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "before", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "after", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "after", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "solution", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 80, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "y", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "SolveInequalitiesAsCondition", "type": "Any"}, {"lineNumber": 93, "col_offset": 59, "nodeName": "variables", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 70, "nodeName": "ranges", "type": "Dict[Any, Any]"}, {"lineNumber": 93, "col_offset": 78, "nodeName": "problem", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "solve_linear_inequalities", "type": "Any"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "problem", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 56, "nodeName": "variables", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 67, "nodeName": "ranges", "type": "Dict[Any, Any]"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "min", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "extent", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 105, "col_offset": 31, "nodeName": "min", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "extent", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "solve_linear_inequalities", "type": "Any"}, {"lineNumber": 109, "col_offset": 47, "nodeName": "problem", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 56, "nodeName": "variables", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 67, "nodeName": "ranges", "type": "Dict[Any, Any]"}, {"lineNumber": 110, "col_offset": 5, "nodeName": "x_new", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "y_new", "type": "Any"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "dst", "type": "Any"}, {"lineNumber": 111, "col_offset": 5, "nodeName": "rel", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "dst", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "rel", "type": "Any"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "min", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "extent", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "min", "type": "Any"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "extent", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 118, "col_offset": 55, "nodeName": "y_new", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 120, "col_offset": 59, "nodeName": "y", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 124, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "solve_linear_inequalities", "type": "Any"}, {"lineNumber": 131, "col_offset": 47, "nodeName": "problem", "type": "List[Any]"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "min", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "extent", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "min", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "extent", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "solve_linear_inequalities", "type": "Any"}, {"lineNumber": 137, "col_offset": 47, "nodeName": "problem", "type": "List[Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 146, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 146, "col_offset": 10, "nodeName": "z", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "solve_linear_inequalities", "type": "Any"}, {"lineNumber": 154, "col_offset": 47, "nodeName": "problem", "type": "List[Any]"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "min", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "extent", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "solve_linear_inequalities", "type": "Any"}, {"lineNumber": 162, "col_offset": 47, "nodeName": "problem", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 164, "col_offset": 37, "nodeName": "z", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "solve_linear_inequalities", "type": "Any"}, {"lineNumber": 173, "col_offset": 47, "nodeName": "problem", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 61, "nodeName": "vranges", "type": "Dict[Any, Any]"}, {"lineNumber": 175, "col_offset": 5, "nodeName": "rel", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "dst", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 176, "col_offset": 31, "nodeName": "rel", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "solve_linear_inequalities", "type": "Any"}, {"lineNumber": 180, "col_offset": 47, "nodeName": "problem", "type": "List[Any]"}, {"lineNumber": 180, "col_offset": 61, "nodeName": "vranges", "type": "Dict[Any, Any]"}, {"lineNumber": 183, "col_offset": 5, "nodeName": "rel", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "solution", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "rel", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "sys", "type": "module"}, {"lineNumber": 26, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 27, "col_offset": 93, "nodeName": "seed", "type": "int"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "random", "type": "module"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "formulas", "type": "int"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "s1", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "s1", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "s2", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "s2", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "all", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "SolveInequalitiesAsCondition", "type": "Any"}, {"lineNumber": 44, "col_offset": 60, "nodeName": "vs", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 64, "nodeName": "vranges", "type": "Dict[Any, Any]"}, {"lineNumber": 44, "col_offset": 73, "nodeName": "fs", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "all", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "check_bool_expr_is_true", "type": "Any"}, {"lineNumber": 46, "col_offset": 57, "nodeName": "vranges", "type": "Dict[Any, Any]"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "solve_linear_inequalities", "type": "Any"}, {"lineNumber": 48, "col_offset": 51, "nodeName": "fs", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 55, "nodeName": "vs", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 59, "nodeName": "vranges", "type": "Dict[Any, Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "check_int_constraints_trans_consistency", "type": "Any"}, {"lineNumber": 49, "col_offset": 56, "nodeName": "solution", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "_check", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "_check", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "_check", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "_check", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "_check", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "_check", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "_check", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "_check", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "_check", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "_check", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "var", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "Range", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "Range", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "LE", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "GE", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "solution", "type": "Any"}, {"lineNumber": 94, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "solution", "type": "Any"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "solution", "type": "Any"}, {"lineNumber": 96, "col_offset": 44, "nodeName": "y", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "solution", "type": "Any"}, {"lineNumber": 97, "col_offset": 44, "nodeName": "y", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "arith", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 105, "col_offset": 55, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "arith", "type": "Any"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "solution", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "solution", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "src_to_dst", "type": "Any"}, {"lineNumber": 117, "col_offset": 55, "nodeName": "x_new", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "src_to_dst", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "dst_to_src", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "dst_to_src", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "var", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "GE", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "GE", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "LE", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "arith", "type": "Any"}, {"lineNumber": 131, "col_offset": 57, "nodeName": "x", "type": "Any"}, {"lineNumber": 131, "col_offset": 60, "nodeName": "y", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "arith", "type": "Any"}, {"lineNumber": 137, "col_offset": 57, "nodeName": "x", "type": "Any"}, {"lineNumber": 137, "col_offset": 60, "nodeName": "y", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "variables", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "ranges", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "relations", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "src_to_dst", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "src_to_dst", "type": "Any"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "var", "type": "Any"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "var", "type": "Any"}, {"lineNumber": 146, "col_offset": 40, "nodeName": "var", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "LE", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "GE", "type": "Any"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "GE", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "LE", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "arith", "type": "Any"}, {"lineNumber": 154, "col_offset": 57, "nodeName": "x", "type": "Any"}, {"lineNumber": 154, "col_offset": 60, "nodeName": "y", "type": "Any"}, {"lineNumber": 154, "col_offset": 63, "nodeName": "z", "type": "Any"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "relations", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 158, "col_offset": 31, "nodeName": "relations", "type": "Any"}, {"lineNumber": 158, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "relations", "type": "Any"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 160, "col_offset": 31, "nodeName": "relations", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "arith", "type": "Any"}, {"lineNumber": 162, "col_offset": 57, "nodeName": "x", "type": "Any"}, {"lineNumber": 162, "col_offset": 60, "nodeName": "y", "type": "Any"}, {"lineNumber": 162, "col_offset": 63, "nodeName": "z", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "src_to_dst", "type": "Any"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "src_to_dst", "type": "Any"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "src_to_dst", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "te", "type": "Any"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "from_min_extent", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "arith", "type": "Any"}, {"lineNumber": 173, "col_offset": 57, "nodeName": "x", "type": "Any"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "variables", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "solution", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "src_to_dst", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "dst_to_src", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "arith", "type": "Any"}, {"lineNumber": 180, "col_offset": 57, "nodeName": "x", "type": "Any"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "variables", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "ranges", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "__file__", "type": "str"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "var", "type": "Any"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "choice", "type": "Callable"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "Range", "type": "Any"}, {"lineNumber": 42, "col_offset": 70, "nodeName": "v", "type": "Any"}, {"lineNumber": 42, "col_offset": 75, "nodeName": "vs", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "te", "type": "Any"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "const", "type": "Any"}, {"lineNumber": 43, "col_offset": 47, "nodeName": "fs", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "te", "type": "Any"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "const", "type": "Any"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "after", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "before", "type": "Any"}, {"lineNumber": 46, "col_offset": 50, "nodeName": "after", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "arith", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "te", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "te", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "tir", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "tir", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "arith", "type": "Any"}, {"lineNumber": 94, "col_offset": 50, "nodeName": "y", "type": "Any"}, {"lineNumber": 95, "col_offset": 55, "nodeName": "y", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "ranges", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "ranges", "type": "Any"}, {"lineNumber": 105, "col_offset": 31, "nodeName": "ranges", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "ranges", "type": "Any"}, {"lineNumber": 112, "col_offset": 48, "nodeName": "x_new", "type": "Any"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "ranges", "type": "Any"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "ranges", "type": "Any"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "ranges", "type": "Any"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "ranges", "type": "Any"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "solution", "type": "Any"}, {"lineNumber": 117, "col_offset": 51, "nodeName": "x", "type": "Any"}, {"lineNumber": 117, "col_offset": 64, "nodeName": "y_new", "type": "Any"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "solution", "type": "Any"}, {"lineNumber": 118, "col_offset": 51, "nodeName": "y", "type": "Any"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "solution", "type": "Any"}, {"lineNumber": 119, "col_offset": 51, "nodeName": "x_new", "type": "Any"}, {"lineNumber": 119, "col_offset": 59, "nodeName": "x", "type": "Any"}, {"lineNumber": 119, "col_offset": 63, "nodeName": "y", "type": "Any"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "solution", "type": "Any"}, {"lineNumber": 120, "col_offset": 51, "nodeName": "y_new", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "te", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "te", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "tir", "type": "Any"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "tir", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "tir", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "ranges", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "ranges", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "ranges", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "ranges", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "dst", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "dst", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "dst", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "solution", "type": "Any"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "solution", "type": "Any"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "te", "type": "Any"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "te", "type": "Any"}, {"lineNumber": 146, "col_offset": 40, "nodeName": "te", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "tir", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "tir", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "tir", "type": "Any"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "tir", "type": "Any"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "ranges", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "ranges", "type": "Any"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "solution", "type": "Any"}, {"lineNumber": 158, "col_offset": 31, "nodeName": "solution", "type": "Any"}, {"lineNumber": 158, "col_offset": 59, "nodeName": "z", "type": "Any"}, {"lineNumber": 158, "col_offset": 63, "nodeName": "y", "type": "Any"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "solution", "type": "Any"}, {"lineNumber": 160, "col_offset": 31, "nodeName": "solution", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "solution", "type": "Any"}, {"lineNumber": 163, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "solution", "type": "Any"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "z", "type": "Any"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "solution", "type": "Any"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "Range", "type": "Any"}, {"lineNumber": 171, "col_offset": 46, "nodeName": "x", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "dst", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "solution", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "solution", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "solution", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "solution", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "te", "type": "Any"}, {"lineNumber": 31, "col_offset": 44, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 31, "col_offset": 50, "nodeName": "variables", "type": "int"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "coef", "type": "Tuple[int, int]"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "coef", "type": "Tuple[int, int]"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "coef", "type": "Tuple[int, int]"}, {"lineNumber": 38, "col_offset": 42, "nodeName": "coef", "type": "Tuple[int, int]"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "EQ", "type": "Any"}, {"lineNumber": 39, "col_offset": 45, "nodeName": "LE", "type": "Any"}, {"lineNumber": 39, "col_offset": 58, "nodeName": "LT", "type": "Any"}, {"lineNumber": 39, "col_offset": 71, "nodeName": "GE", "type": "Any"}, {"lineNumber": 39, "col_offset": 84, "nodeName": "GT", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "fs", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "op", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "expr", "type": "Any"}, {"lineNumber": 42, "col_offset": 40, "nodeName": "bounds", "type": "Tuple[int, int]"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "tir", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "arith", "type": "Any"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "tir", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "solution", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "solution", "type": "Any"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 105, "col_offset": 31, "nodeName": "solution", "type": "Any"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "solution", "type": "Any"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 112, "col_offset": 37, "nodeName": "y_new", "type": "Any"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "dst", "type": "Any"}, {"lineNumber": 113, "col_offset": 51, "nodeName": "x_new", "type": "Any"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "dst", "type": "Any"}, {"lineNumber": 114, "col_offset": 51, "nodeName": "x_new", "type": "Any"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "dst", "type": "Any"}, {"lineNumber": 115, "col_offset": 51, "nodeName": "y_new", "type": "Any"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "dst", "type": "Any"}, {"lineNumber": 116, "col_offset": 51, "nodeName": "y_new", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "solution", "type": "Any"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "solution", "type": "Any"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "solution", "type": "Any"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "solution", "type": "Any"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "solution", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "solution", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "solution", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "z", "type": "Any"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "z", "type": "Any"}, {"lineNumber": 151, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "solution", "type": "Any"}, {"lineNumber": 155, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "solution", "type": "Any"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 159, "col_offset": 54, "nodeName": "z", "type": "Any"}, {"lineNumber": 159, "col_offset": 56, "nodeName": "y", "type": "Any"}, {"lineNumber": 160, "col_offset": 58, "nodeName": "z", "type": "Any"}, {"lineNumber": 160, "col_offset": 60, "nodeName": "y", "type": "Any"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "ir", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 171, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "solution", "type": "Any"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 35, "col_offset": 61, "nodeName": "v", "type": "Any"}, {"lineNumber": 35, "col_offset": 66, "nodeName": "vs", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 37, "col_offset": 61, "nodeName": "v", "type": "Any"}, {"lineNumber": 37, "col_offset": 66, "nodeName": "vs", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "expr", "type": "Any"}, {"lineNumber": 39, "col_offset": 45, "nodeName": "expr", "type": "Any"}, {"lineNumber": 39, "col_offset": 58, "nodeName": "expr", "type": "Any"}, {"lineNumber": 39, "col_offset": 71, "nodeName": "expr", "type": "Any"}, {"lineNumber": 39, "col_offset": 84, "nodeName": "expr", "type": "Any"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "ir", "type": "Any"}, {"lineNumber": 42, "col_offset": 51, "nodeName": "bounds", "type": "Tuple[int, int]"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "solution", "type": "Any"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "solution", "type": "Any"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "solution", "type": "Any"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "solution", "type": "Any"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "tir", "type": "Any"}, {"lineNumber": 39, "col_offset": 45, "nodeName": "tir", "type": "Any"}, {"lineNumber": 39, "col_offset": 58, "nodeName": "tir", "type": "Any"}, {"lineNumber": 39, "col_offset": 71, "nodeName": "tir", "type": "Any"}, {"lineNumber": 39, "col_offset": 84, "nodeName": "tir", "type": "Any"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "random", "type": "module"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "coef", "type": "Tuple[int, int]"}, {"lineNumber": 35, "col_offset": 48, "nodeName": "coef", "type": "Tuple[int, int]"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "random", "type": "module"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "coef", "type": "Tuple[int, int]"}, {"lineNumber": 37, "col_offset": 48, "nodeName": "coef", "type": "Tuple[int, int]"}]