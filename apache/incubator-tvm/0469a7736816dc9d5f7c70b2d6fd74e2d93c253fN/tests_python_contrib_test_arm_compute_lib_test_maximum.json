[{"lineNumber": 35, "col_offset": 0, "nodeName": "_get_model", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "_get_expected_codegen", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "test_maximum", "type": "Callable[[], Any]"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "test_codegen_maximum", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "max", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "max", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "inputs", "type": "List[Union[Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[int]]]]], str]], Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[int]]], str]], List[List[int]], str]]]]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "device", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "inputs", "type": "Set[str]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "dtype", "type": "str"}, {"lineNumber": 103, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 39, "col_offset": 10, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "b", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "node", "type": "Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[int]]], str]], List[List[int]], str]]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "load", "type": "Any"}, {"lineNumber": 67, "col_offset": 7, "nodeName": "skip_runtime_test", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "Device", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "dtype", "type": "str"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "low", "type": "int"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "high", "type": "int"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "atol", "type": "float"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "rtol", "type": "float"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "acl", "type": "bool"}, {"lineNumber": 91, "col_offset": 7, "nodeName": "skip_codegen_test", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "args", "type": "Tuple[Tuple[int, int], str]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "exp_codegen", "type": "List[Union[Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[int]]]]], str]], Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[int]]], str]], List[List[int]], str]]]]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "test_maximum", "type": "Callable[[], Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "test_codegen_maximum", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "next", "type": "Callable"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "var_names", "type": "Iterator[str]"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 37, "col_offset": 60, "nodeName": "dtype", "type": "str"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "next", "type": "Callable"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "var_names", "type": "Iterator[str]"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 38, "col_offset": 60, "nodeName": "dtype", "type": "str"}, {"lineNumber": 39, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "inputs", "type": "List[Union[Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[int]]]]], str]], Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[int]]], str]], List[List[int]], str]]]]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "Device", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "_get_model", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "dtype", "type": "str"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "verify", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "dtype", "type": "str"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "_get_model", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "_get_expected_codegen", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "verify_codegen", "type": "Any"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "func", "type": "Any"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "exp_codegen", "type": "List[Union[Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[int]]]]], str]], Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[int]]], str]], List[List[int]], str]]]]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "array", "type": "Any"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "array", "type": "Any"}, {"lineNumber": 82, "col_offset": 52, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 82, "col_offset": 57, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "args", "type": "Tuple[Tuple[int, int], str]"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "inputs", "type": "Set[str]"}, {"lineNumber": 99, "col_offset": 45, "nodeName": "args", "type": "Tuple[Tuple[int, int], str]"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "dtype", "type": "str"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "nd", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 78, "col_offset": 78, "nodeName": "dtype", "type": "str"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "nd", "type": "Any"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 79, "col_offset": 78, "nodeName": "dtype", "type": "str"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 57, "col_offset": 83, "nodeName": "dtype", "type": "str"}, {"lineNumber": 58, "col_offset": 83, "nodeName": "dtype", "type": "str"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "build_and_run", "type": "Any"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "func", "type": "Any"}, {"lineNumber": 85, "col_offset": 47, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 64, "nodeName": "device", "type": "Any"}, {"lineNumber": 57, "col_offset": 57, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 57, "col_offset": 62, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 58, "col_offset": 57, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 58, "col_offset": 62, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 78, "col_offset": 48, "nodeName": "low", "type": "int"}, {"lineNumber": 78, "col_offset": 53, "nodeName": "high", "type": "int"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 79, "col_offset": 48, "nodeName": "low", "type": "int"}, {"lineNumber": 79, "col_offset": 53, "nodeName": "high", "type": "int"}, {"lineNumber": 85, "col_offset": 83, "nodeName": "acl", "type": "bool"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "random", "type": "Any"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "random", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "np", "type": "module"}]