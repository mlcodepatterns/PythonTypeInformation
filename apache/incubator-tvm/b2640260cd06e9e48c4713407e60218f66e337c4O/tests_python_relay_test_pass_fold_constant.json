[{"lineNumber": 26, "col_offset": 0, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "test_concatenate_const", "type": "Callable[[], Any]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "test_fold_const", "type": "Callable[[], Any]"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "test_fold_let", "type": "Callable[[], Any]"}, {"lineNumber": 111, "col_offset": 0, "nodeName": "test_fold_tuple", "type": "Callable[[], Any]"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "test_fold_concat", "type": "Callable[[], Any]"}, {"lineNumber": 152, "col_offset": 0, "nodeName": "test_fold_shape_of", "type": "Callable[[], Any]"}, {"lineNumber": 173, "col_offset": 0, "nodeName": "test_fold_full", "type": "Callable[[], Any]"}, {"lineNumber": 188, "col_offset": 0, "nodeName": "test_fold_batch_norm", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "FailPass", "type": "Callable[[], Any]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "initializer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "entry", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "zz", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "zexpected", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "c_data", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "_transform", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "zexpected", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "c_data", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "zz", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "zexpected", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "c_data", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "zz", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "zexpected", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "c_data", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "zz", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "zexpected", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "c_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "dtype", "type": "str"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "c_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "zz", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "zexpected", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "weight", "type": "Any"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "bn_gamma", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "bn_beta", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "bn_mmean", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "bn_mvar", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "expect", "type": "Any"}, {"lineNumber": 229, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "opt_pass", "type": "Any"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "Pass", "type": "Any"}, {"lineNumber": 29, "col_offset": 10, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 29, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "opt_pass", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "mod", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "entry", "type": "Any"}, {"lineNumber": 32, "col_offset": 58, "nodeName": "body", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "const", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "concat", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "func", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "const", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "func", "type": "Any"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "zz", "type": "Any"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "zexpected", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "c_folded", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "zz", "type": "Any"}, {"lineNumber": 83, "col_offset": 39, "nodeName": "zexpected", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "sb", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "t1", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "t2", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "t3", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "sb", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "c_folded", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "t3", "type": "Any"}, {"lineNumber": 106, "col_offset": 9, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "zz", "type": "Any"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "zexpected", "type": "Any"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "zz", "type": "Any"}, {"lineNumber": 130, "col_offset": 39, "nodeName": "zexpected", "type": "Any"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "y_data", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 147, "col_offset": 9, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 149, "col_offset": 35, "nodeName": "zz", "type": "Any"}, {"lineNumber": 149, "col_offset": 39, "nodeName": "zexpected", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "func", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "zz", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "zexpected", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "dtype", "type": "str"}, {"lineNumber": 183, "col_offset": 9, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 185, "col_offset": 35, "nodeName": "zz", "type": "Any"}, {"lineNumber": 185, "col_offset": 39, "nodeName": "zexpected", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "bias", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 208, "col_offset": 14, "nodeName": "var", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 210, "col_offset": 14, "nodeName": "var", "type": "Any"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "batch_norm", "type": "Any"}, {"lineNumber": 214, "col_offset": 36, "nodeName": "conv", "type": "Any"}, {"lineNumber": 214, "col_offset": 42, "nodeName": "bn_gamma", "type": "Any"}, {"lineNumber": 214, "col_offset": 52, "nodeName": "bn_beta", "type": "Any"}, {"lineNumber": 215, "col_offset": 36, "nodeName": "bn_mmean", "type": "Any"}, {"lineNumber": 215, "col_offset": 46, "nodeName": "bn_mvar", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 219, "col_offset": 9, "nodeName": "params", "type": "Any"}, {"lineNumber": 219, "col_offset": 18, "nodeName": "create_workload", "type": "Any"}, {"lineNumber": 219, "col_offset": 48, "nodeName": "initializer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 220, "col_offset": 18, "nodeName": "bind_params_by_name", "type": "Any"}, {"lineNumber": 220, "col_offset": 51, "nodeName": "params", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "run_infer_type", "type": "Any"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 226, "col_offset": 48, "nodeName": "expect", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "test_fold_const", "type": "Callable[[], Any]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "test_fold_let", "type": "Callable[[], Any]"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "test_fold_tuple", "type": "Callable[[], Any]"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "test_fold_concat", "type": "Callable[[], Any]"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "test_fold_shape_of", "type": "Callable[[], Any]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "test_fold_full", "type": "Callable[[], Any]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "test_fold_batch_norm", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "transform", "type": "Any"}, {"lineNumber": 29, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "expr", "type": "Any"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "Function", "type": "Any"}, {"lineNumber": 32, "col_offset": 58, "nodeName": "entry", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "array", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "const", "type": "Any"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "concat", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "array", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "const", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "const", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "FoldConstant", "type": "Any"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "c_data", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "t", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "c", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "c", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "z", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "t", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "z", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "module_pass", "type": "Any"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "_transform", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "build_config", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "zz", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "ScopeBuilder", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "t", "type": "Any"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "let", "type": "Any"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "let", "type": "Any"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "let", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "t3", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "ScopeBuilder", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "t", "type": "Any"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "c_data", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "c_data", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "let", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "t3", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "FoldConstant", "type": "Any"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "c_data", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "t", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "c", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "z", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 120, "col_offset": 35, "nodeName": "z", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "t", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "z", "type": "Any"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "FoldConstant", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 137, "col_offset": 24, "nodeName": "c_data", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "c_data", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "y_data", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "FoldConstant", "type": "Any"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 148, "col_offset": 41, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "shape_of", "type": "Any"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "dtype", "type": "str"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 158, "col_offset": 38, "nodeName": "z", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "z", "type": "Any"}, {"lineNumber": 168, "col_offset": 13, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 170, "col_offset": 39, "nodeName": "zz", "type": "Any"}, {"lineNumber": 170, "col_offset": 43, "nodeName": "zexpected", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "full", "type": "Any"}, {"lineNumber": 177, "col_offset": 51, "nodeName": "c_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 183, "col_offset": 32, "nodeName": "FoldConstant", "type": "Any"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 184, "col_offset": 41, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "const", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "const", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "add", "type": "Any"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "conv", "type": "Any"}, {"lineNumber": 195, "col_offset": 30, "nodeName": "bias", "type": "Any"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 196, "col_offset": 61, "nodeName": "add", "type": "Any"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "transform", "type": "Any"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 208, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 210, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "nn", "type": "Any"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 212, "col_offset": 45, "nodeName": "weight", "type": "Any"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 219, "col_offset": 34, "nodeName": "bn_output", "type": "Any"}, {"lineNumber": 220, "col_offset": 38, "nodeName": "mod", "type": "Any"}, {"lineNumber": 222, "col_offset": 9, "nodeName": "build_config", "type": "Any"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "remove_bn_pass", "type": "Any"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "mod", "type": "Any"}, {"lineNumber": 225, "col_offset": 28, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 226, "col_offset": 35, "nodeName": "mod", "type": "Any"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 29, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "relay", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "nd", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "const", "type": "Any"}, {"lineNumber": 39, "col_offset": 46, "nodeName": "const", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "nd", "type": "Any"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "transform", "type": "Any"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "transform", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "const", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "c_data", "type": "Any"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "c_data", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "const", "type": "Any"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "c_folded", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "const", "type": "Any"}, {"lineNumber": 70, "col_offset": 37, "nodeName": "c_data", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "transform", "type": "Any"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "target", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "create", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "transform", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "sb", "type": "Any"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "const", "type": "Any"}, {"lineNumber": 92, "col_offset": 38, "nodeName": "c_data", "type": "Any"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "sb", "type": "Any"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "add", "type": "Any"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "t1", "type": "Any"}, {"lineNumber": 93, "col_offset": 40, "nodeName": "t1", "type": "Any"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "sb", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "add", "type": "Any"}, {"lineNumber": 94, "col_offset": 36, "nodeName": "t2", "type": "Any"}, {"lineNumber": 94, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "sb", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "get", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "sb", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "add", "type": "Any"}, {"lineNumber": 102, "col_offset": 59, "nodeName": "x", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "sb", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "get", "type": "Any"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "transform", "type": "Any"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "transform", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "c", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "c_data", "type": "Any"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "c_data", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "transform", "type": "Any"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "transform", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "b", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 33, "nodeName": "c_data", "type": "Any"}, {"lineNumber": 143, "col_offset": 41, "nodeName": "c_data", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "transform", "type": "Any"}, {"lineNumber": 148, "col_offset": 41, "nodeName": "transform", "type": "Any"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "c_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 156, "col_offset": 33, "nodeName": "c_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 158, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 158, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "c_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "c_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "astype", "type": "Any"}, {"lineNumber": 163, "col_offset": 49, "nodeName": "dtype", "type": "str"}, {"lineNumber": 163, "col_offset": 63, "nodeName": "dtype", "type": "str"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 164, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "before", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 33, "nodeName": "dtype", "type": "str"}, {"lineNumber": 168, "col_offset": 41, "nodeName": "FoldConstant", "type": "Any"}, {"lineNumber": 169, "col_offset": 33, "nodeName": "expected", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "dtype", "type": "str"}, {"lineNumber": 169, "col_offset": 50, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "ir", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "const", "type": "Any"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "dtype", "type": "str"}, {"lineNumber": 177, "col_offset": 66, "nodeName": "dtype", "type": "str"}, {"lineNumber": 183, "col_offset": 32, "nodeName": "transform", "type": "Any"}, {"lineNumber": 184, "col_offset": 41, "nodeName": "transform", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 193, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 193, "col_offset": 49, "nodeName": "weight", "type": "Any"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 196, "col_offset": 30, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 196, "col_offset": 55, "nodeName": "add", "type": "Any"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "SimplifyInference", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "FoldConstant", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "FoldScaleAxis", "type": "Any"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "param", "type": "Any"}, {"lineNumber": 222, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "relay", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "target", "type": "Any"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "FoldConstant", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "sb", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 102, "col_offset": 36, "nodeName": "const", "type": "Any"}, {"lineNumber": 102, "col_offset": 48, "nodeName": "c_folded", "type": "Any"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "sb", "type": "Any"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 41, "nodeName": "transform", "type": "Any"}, {"lineNumber": 169, "col_offset": 50, "nodeName": "transform", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "relay", "type": "Any"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 196, "col_offset": 30, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "transform", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "transform", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "transform", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "transform", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "transform", "type": "Any"}, {"lineNumber": 102, "col_offset": 36, "nodeName": "relay", "type": "Any"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "c_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 196, "col_offset": 30, "nodeName": "relay", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 79, "col_offset": 53, "nodeName": "FailPass", "type": "Callable[[], Any]"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "np", "type": "module"}]