[{"lineNumber": 72, "col_offset": 0, "nodeName": "assert_graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "roundtrip_expr", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "roundtrip", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "parses_as", "type": "Callable[[str, Any], bool]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "parse_module", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 0, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 0, "nodeName": "assert_parse_module_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 128, "col_offset": 0, "nodeName": "test_comments", "type": "Callable[[], Any]"}, {"lineNumber": 158, "col_offset": 0, "nodeName": "test_int_literal", "type": "Callable[[], Any]"}, {"lineNumber": 169, "col_offset": 0, "nodeName": "test_float_literal", "type": "Callable[[], Any]"}, {"lineNumber": 186, "col_offset": 0, "nodeName": "test_bool_literal", "type": "Callable[[], Any]"}, {"lineNumber": 191, "col_offset": 0, "nodeName": "test_negative", "type": "Callable[[], Any]"}, {"lineNumber": 198, "col_offset": 0, "nodeName": "test_bin_op", "type": "Callable[[], Any]"}, {"lineNumber": 206, "col_offset": 0, "nodeName": "test_parens", "type": "Callable[[], Any]"}, {"lineNumber": 211, "col_offset": 0, "nodeName": "test_op_assoc", "type": "Callable[[], Any]"}, {"lineNumber": 215, "col_offset": 0, "nodeName": "test_vars", "type": "Callable[[], Any]"}, {"lineNumber": 236, "col_offset": 0, "nodeName": "test_meta_ref", "type": "Callable[[], Any]"}, {"lineNumber": 243, "col_offset": 0, "nodeName": "test_let", "type": "Callable[[], Any]"}, {"lineNumber": 271, "col_offset": 0, "nodeName": "test_seq", "type": "Callable[[], Any]"}, {"lineNumber": 290, "col_offset": 0, "nodeName": "test_graph", "type": "Callable[[], Any]"}, {"lineNumber": 298, "col_offset": 0, "nodeName": "test_graph_single", "type": "Callable[[], Any]"}, {"lineNumber": 301, "col_offset": 0, "nodeName": "test_let_global_var", "type": "Callable[[], Any]"}, {"lineNumber": 306, "col_offset": 0, "nodeName": "test_let_op", "type": "Callable[[], Any]"}, {"lineNumber": 311, "col_offset": 0, "nodeName": "test_tuple", "type": "Callable[[], Any]"}, {"lineNumber": 321, "col_offset": 0, "nodeName": "test_func", "type": "Callable[[], Any]"}, {"lineNumber": 376, "col_offset": 0, "nodeName": "test_defn", "type": "Callable[[], Any]"}, {"lineNumber": 386, "col_offset": 0, "nodeName": "test_recursive_call", "type": "Callable[[], Any]"}, {"lineNumber": 396, "col_offset": 0, "nodeName": "test_ifelse", "type": "Callable[[], Any]"}, {"lineNumber": 413, "col_offset": 0, "nodeName": "test_ifelse_scope", "type": "Callable[[], Any]"}, {"lineNumber": 427, "col_offset": 0, "nodeName": "test_call", "type": "Callable[[], Any]"}, {"lineNumber": 550, "col_offset": 0, "nodeName": "test_incomplete_type", "type": "Callable[[], Any]"}, {"lineNumber": 561, "col_offset": 0, "nodeName": "test_builtin_types", "type": "Callable[[], Any]"}, {"lineNumber": 566, "col_offset": 0, "nodeName": "test_tensor_type", "type": "Callable[[], Any]"}, {"lineNumber": 605, "col_offset": 0, "nodeName": "test_function_type", "type": "Callable[[], Any]"}, {"lineNumber": 640, "col_offset": 0, "nodeName": "test_tuple_type", "type": "Callable[[], Any]"}, {"lineNumber": 675, "col_offset": 0, "nodeName": "test_adt_defn", "type": "Callable[[], Any]"}, {"lineNumber": 691, "col_offset": 0, "nodeName": "test_adt_any", "type": "Callable[[], Any]"}, {"lineNumber": 710, "col_offset": 0, "nodeName": "test_empty_adt_defn", "type": "Callable[[], Any]"}, {"lineNumber": 724, "col_offset": 0, "nodeName": "test_multiple_cons_defn", "type": "Callable[[], Any]"}, {"lineNumber": 740, "col_offset": 0, "nodeName": "test_multiple_type_param_defn", "type": "Callable[[], Any]"}, {"lineNumber": 764, "col_offset": 0, "nodeName": "test_match", "type": "Callable[[], Any]"}, {"lineNumber": 827, "col_offset": 0, "nodeName": "test_adt_cons_expr", "type": "Callable[[], Any]"}, {"lineNumber": 862, "col_offset": 0, "nodeName": "test_duplicate_adt_defn", "type": "Callable[[], Any]"}, {"lineNumber": 876, "col_offset": 0, "nodeName": "test_duplicate_adt_cons", "type": "Callable[[], Any]"}, {"lineNumber": 886, "col_offset": 0, "nodeName": "test_duplicate_adt_cons_defn", "type": "Callable[[], Any]"}, {"lineNumber": 896, "col_offset": 0, "nodeName": "test_duplicate_global_var", "type": "Callable[[], Any]"}, {"lineNumber": 906, "col_offset": 0, "nodeName": "test_extern_adt_defn", "type": "Callable[[], Any]"}, {"lineNumber": 921, "col_offset": 0, "nodeName": "test_import_grad", "type": "Callable[[], Any]"}, {"lineNumber": 925, "col_offset": 0, "nodeName": "test_resnet", "type": "Callable[[], Any]"}, {"lineNumber": 931, "col_offset": 0, "nodeName": "inline_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 946, "col_offset": 0, "nodeName": "test_resnet_inlined_params", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "SEMVER", "type": "str"}, {"lineNumber": 117, "col_offset": 0, "nodeName": "int32", "type": "Any"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "_", "type": "Any"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "X", "type": "Any"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "Y", "type": "Any"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "X_ANNO", "type": "Any"}, {"lineNumber": 123, "col_offset": 0, "nodeName": "Y_ANNO", "type": "Any"}, {"lineNumber": 125, "col_offset": 0, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "divide", "type": "Any"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "add", "type": "Any"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "subtract", "type": "Any"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "less", "type": "Any"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "greater", "type": "Any"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "less_equal", "type": "Any"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "greater_equal", "type": "Any"}, {"lineNumber": 39, "col_offset": 10, "nodeName": "equal", "type": "Any"}, {"lineNumber": 40, "col_offset": 10, "nodeName": "not_equal", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "text", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "expr", "type": "Any"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "expr", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "mod", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "scalar_type", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "Var", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "Var", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "Var", "type": "Any"}, {"lineNumber": 122, "col_offset": 9, "nodeName": "Var", "type": "Any"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "int32", "type": "Any"}, {"lineNumber": 123, "col_offset": 9, "nodeName": "Var", "type": "Any"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "int32", "type": "Any"}, {"lineNumber": 125, "col_offset": 7, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "bin_op", "type": "str"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "var", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "global_var", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "op", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "op", "type": "Any"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "code", "type": "str"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "id_func", "type": "Any"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "constant", "type": "Any"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "id_var", "type": "Any"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 508, "col_offset": 4, "nodeName": "curried_mult", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "builtin_type", "type": "str"}, {"lineNumber": 562, "col_offset": 24, "nodeName": "TYPES", "type": "Set[str]"}, {"lineNumber": 676, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 678, "col_offset": 4, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 683, "col_offset": 24, "nodeName": "prog", "type": "Any"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 698, "col_offset": 4, "nodeName": "items", "type": "Any"}, {"lineNumber": 701, "col_offset": 4, "nodeName": "ctors", "type": "Any"}, {"lineNumber": 701, "col_offset": 12, "nodeName": "constructors", "type": "Any"}, {"lineNumber": 703, "col_offset": 4, "nodeName": "my_cons", "type": "Any"}, {"lineNumber": 705, "col_offset": 4, "nodeName": "ty_shape", "type": "Any"}, {"lineNumber": 705, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 713, "col_offset": 4, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 714, "col_offset": 4, "nodeName": "prog", "type": "Any"}, {"lineNumber": 715, "col_offset": 24, "nodeName": "prog", "type": "Any"}, {"lineNumber": 725, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 727, "col_offset": 4, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 728, "col_offset": 4, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 736, "col_offset": 20, "nodeName": "prog", "type": "Any"}, {"lineNumber": 741, "col_offset": 4, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 742, "col_offset": 4, "nodeName": "typ_var_a", "type": "Any"}, {"lineNumber": 743, "col_offset": 4, "nodeName": "typ_var_b", "type": "Any"}, {"lineNumber": 751, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 752, "col_offset": 24, "nodeName": "prog", "type": "Any"}, {"lineNumber": 766, "col_offset": 4, "nodeName": "match_keywords", "type": "List[Tuple[str, bool]]"}, {"lineNumber": 767, "col_offset": 40, "nodeName": "match_keywords", "type": "List[Tuple[str, bool]]"}, {"lineNumber": 828, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 830, "col_offset": 4, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 834, "col_offset": 4, "nodeName": "nil_constructor", "type": "Any"}, {"lineNumber": 839, "col_offset": 20, "nodeName": "list_def", "type": "Any"}, {"lineNumber": 841, "col_offset": 4, "nodeName": "make_singleton_var", "type": "Any"}, {"lineNumber": 842, "col_offset": 4, "nodeName": "input_var", "type": "Any"}, {"lineNumber": 848, "col_offset": 30, "nodeName": "make_singleton_func", "type": "Any"}, {"lineNumber": 907, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 909, "col_offset": 4, "nodeName": "extern_var", "type": "Any"}, {"lineNumber": 910, "col_offset": 4, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 911, "col_offset": 4, "nodeName": "extern_def", "type": "Any"}, {"lineNumber": 912, "col_offset": 22, "nodeName": "extern_def", "type": "Any"}, {"lineNumber": 922, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 927, "col_offset": 4, "nodeName": "text", "type": "Any"}, {"lineNumber": 928, "col_offset": 4, "nodeName": "parsed_mod", "type": "Any"}, {"lineNumber": 932, "col_offset": 4, "nodeName": "main_fn", "type": "Any"}, {"lineNumber": 933, "col_offset": 4, "nodeName": "str_to_var", "type": "Dict[Any, Any]"}, {"lineNumber": 934, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 934, "col_offset": 17, "nodeName": "params", "type": "Any"}, {"lineNumber": 937, "col_offset": 4, "nodeName": "bind_map", "type": "Dict[Any, Any]"}, {"lineNumber": 938, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 938, "col_offset": 17, "nodeName": "params", "type": "Any"}, {"lineNumber": 941, "col_offset": 4, "nodeName": "body", "type": "Any"}, {"lineNumber": 942, "col_offset": 4, "nodeName": "main_fn", "type": "Any"}, {"lineNumber": 943, "col_offset": 21, "nodeName": "main_fn", "type": "Any"}, {"lineNumber": 944, "col_offset": 11, "nodeName": "mod", "type": "Any"}, {"lineNumber": 948, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 949, "col_offset": 4, "nodeName": "text", "type": "Any"}, {"lineNumber": 950, "col_offset": 4, "nodeName": "parsed_mod", "type": "Any"}, {"lineNumber": 953, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 39, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 40, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assert_structural_equal", "type": "Any"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 76, "col_offset": 40, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "astext", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "parse_expr", "type": "Any"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "text", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "assert_graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "expr", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "fromtext", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "assert_graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "expr", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "parse_expr", "type": "Any"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "code", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "roundtrip_expr", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "expr", "type": "Any"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "code", "type": "str"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 101, "col_offset": 10, "nodeName": "parse", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "roundtrip", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "mod", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "code", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "assert_graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "expr", "type": "Any"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "parse_module", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "code", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "assert_graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "mod", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "item", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "relay", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "relay", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "relay", "type": "Any"}, {"lineNumber": 122, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 123, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 125, "col_offset": 7, "nodeName": "relay", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "Constant", "type": "Any"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 160, "col_offset": 44, "nodeName": "NDArray", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 207, "col_offset": 11, "nodeName": "graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 217, "col_offset": 10, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 218, "col_offset": 22, "nodeName": "body", "type": "Any"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "Var", "type": "Any"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "global_var", "type": "Any"}, {"lineNumber": 223, "col_offset": 34, "nodeName": "GlobalVar", "type": "Any"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 227, "col_offset": 9, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 228, "col_offset": 22, "nodeName": "op", "type": "Any"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "Op", "type": "Any"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 232, "col_offset": 9, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "op", "type": "Any"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "Op", "type": "Any"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "meta_op", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "code", "type": "str"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 377, "col_offset": 14, "nodeName": "parse_module", "type": "Callable[[Any], Any]"}, {"lineNumber": 383, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 383, "col_offset": 22, "nodeName": "id_defn", "type": "Any"}, {"lineNumber": 383, "col_offset": 31, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 387, "col_offset": 14, "nodeName": "parse_module", "type": "Callable[[Any], Any]"}, {"lineNumber": 393, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 393, "col_offset": 22, "nodeName": "id_defn", "type": "Any"}, {"lineNumber": 393, "col_offset": 31, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 429, "col_offset": 14, "nodeName": "Var", "type": "Any"}, {"lineNumber": 430, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "Var", "type": "Any"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 457, "col_offset": 13, "nodeName": "Var", "type": "Any"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 471, "col_offset": 15, "nodeName": "Var", "type": "Any"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 508, "col_offset": 19, "nodeName": "Var", "type": "Any"}, {"lineNumber": 509, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 542, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 567, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 594, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 617, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 628, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 652, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 676, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 678, "col_offset": 19, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 679, "col_offset": 11, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 680, "col_offset": 12, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 683, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 684, "col_offset": 4, "nodeName": "assert_parse_module_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 697, "col_offset": 10, "nodeName": "parse_module", "type": "Callable[[Any], Any]"}, {"lineNumber": 697, "col_offset": 23, "nodeName": "code", "type": "str"}, {"lineNumber": 698, "col_offset": 12, "nodeName": "items", "type": "Any"}, {"lineNumber": 699, "col_offset": 4, "nodeName": "global_type_var", "type": "Any"}, {"lineNumber": 699, "col_offset": 21, "nodeName": "type_data", "type": "Any"}, {"lineNumber": 699, "col_offset": 33, "nodeName": "items", "type": "Any"}, {"lineNumber": 700, "col_offset": 11, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 701, "col_offset": 12, "nodeName": "type_data", "type": "Any"}, {"lineNumber": 703, "col_offset": 14, "nodeName": "ctors", "type": "Any"}, {"lineNumber": 704, "col_offset": 11, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 706, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 706, "col_offset": 35, "nodeName": "Any", "type": "Any"}, {"lineNumber": 711, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 713, "col_offset": 19, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 714, "col_offset": 11, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 714, "col_offset": 26, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 715, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 716, "col_offset": 4, "nodeName": "assert_parse_module_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 725, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 727, "col_offset": 15, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 728, "col_offset": 14, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 729, "col_offset": 11, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 730, "col_offset": 12, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 736, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 737, "col_offset": 4, "nodeName": "assert_parse_module_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 737, "col_offset": 27, "nodeName": "LIST_DEFN", "type": "str"}, {"lineNumber": 737, "col_offset": 38, "nodeName": "mod", "type": "Any"}, {"lineNumber": 741, "col_offset": 19, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 742, "col_offset": 16, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 743, "col_offset": 16, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 744, "col_offset": 11, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 745, "col_offset": 12, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 751, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 752, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 753, "col_offset": 4, "nodeName": "assert_parse_module_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 767, "col_offset": 9, "nodeName": "match_keyword", "type": "str"}, {"lineNumber": 767, "col_offset": 24, "nodeName": "is_complete", "type": "bool"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 774, "col_offset": 8, "nodeName": "nil_constructor", "type": "Any"}, {"lineNumber": 779, "col_offset": 24, "nodeName": "list_def", "type": "Any"}, {"lineNumber": 781, "col_offset": 8, "nodeName": "length_var", "type": "Any"}, {"lineNumber": 782, "col_offset": 8, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "input_var", "type": "Any"}, {"lineNumber": 785, "col_offset": 8, "nodeName": "rest_var", "type": "Any"}, {"lineNumber": 807, "col_offset": 26, "nodeName": "length_func", "type": "Any"}, {"lineNumber": 828, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 830, "col_offset": 15, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 831, "col_offset": 14, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 832, "col_offset": 23, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 833, "col_offset": 46, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 834, "col_offset": 22, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 834, "col_offset": 51, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 835, "col_offset": 15, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 836, "col_offset": 8, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 839, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 841, "col_offset": 25, "nodeName": "GlobalVar", "type": "Any"}, {"lineNumber": 842, "col_offset": 16, "nodeName": "Var", "type": "Any"}, {"lineNumber": 842, "col_offset": 31, "nodeName": "int32", "type": "Any"}, {"lineNumber": 843, "col_offset": 26, "nodeName": "Function", "type": "Any"}, {"lineNumber": 848, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 850, "col_offset": 4, "nodeName": "assert_parse_module_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 858, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 907, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 909, "col_offset": 17, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 910, "col_offset": 14, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 911, "col_offset": 17, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 911, "col_offset": 32, "nodeName": "extern_var", "type": "Any"}, {"lineNumber": 912, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "assert_parse_module_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 918, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 922, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 923, "col_offset": 4, "nodeName": "import_from_std", "type": "Any"}, {"lineNumber": 926, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 926, "col_offset": 9, "nodeName": "_", "type": "Any"}, {"lineNumber": 926, "col_offset": 13, "nodeName": "get_workload", "type": "Any"}, {"lineNumber": 927, "col_offset": 11, "nodeName": "astext", "type": "Any"}, {"lineNumber": 928, "col_offset": 17, "nodeName": "parse", "type": "Any"}, {"lineNumber": 928, "col_offset": 34, "nodeName": "text", "type": "Any"}, {"lineNumber": 929, "col_offset": 4, "nodeName": "assert_structural_equal", "type": "Any"}, {"lineNumber": 929, "col_offset": 35, "nodeName": "mod", "type": "Any"}, {"lineNumber": 929, "col_offset": 40, "nodeName": "parsed_mod", "type": "Any"}, {"lineNumber": 932, "col_offset": 14, "nodeName": "mod", "type": "Any"}, {"lineNumber": 934, "col_offset": 17, "nodeName": "main_fn", "type": "Any"}, {"lineNumber": 935, "col_offset": 38, "nodeName": "param", "type": "Any"}, {"lineNumber": 941, "col_offset": 11, "nodeName": "bind", "type": "Any"}, {"lineNumber": 941, "col_offset": 22, "nodeName": "body", "type": "Any"}, {"lineNumber": 941, "col_offset": 36, "nodeName": "bind_map", "type": "Dict[Any, Any]"}, {"lineNumber": 942, "col_offset": 14, "nodeName": "Function", "type": "Any"}, {"lineNumber": 942, "col_offset": 61, "nodeName": "body", "type": "Any"}, {"lineNumber": 943, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 947, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 947, "col_offset": 9, "nodeName": "params", "type": "Any"}, {"lineNumber": 947, "col_offset": 18, "nodeName": "get_workload", "type": "Any"}, {"lineNumber": 948, "col_offset": 10, "nodeName": "inline_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 948, "col_offset": 24, "nodeName": "mod", "type": "Any"}, {"lineNumber": 948, "col_offset": 29, "nodeName": "params", "type": "Any"}, {"lineNumber": 949, "col_offset": 11, "nodeName": "astext", "type": "Any"}, {"lineNumber": 950, "col_offset": 17, "nodeName": "parse", "type": "Any"}, {"lineNumber": 950, "col_offset": 34, "nodeName": "text", "type": "Any"}, {"lineNumber": 951, "col_offset": 4, "nodeName": "assert_structural_equal", "type": "Any"}, {"lineNumber": 951, "col_offset": 35, "nodeName": "mod", "type": "Any"}, {"lineNumber": 951, "col_offset": 40, "nodeName": "parsed_mod", "type": "Any"}, {"lineNumber": 955, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 955, "col_offset": 16, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "ir", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "Expr", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "astext", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "parser", "type": "Any"}, {"lineNumber": 101, "col_offset": 10, "nodeName": "parser", "type": "Any"}, {"lineNumber": 101, "col_offset": 27, "nodeName": "SEMVER", "type": "str"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "code", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "relay", "type": "Any"}, {"lineNumber": 160, "col_offset": 44, "nodeName": "nd", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "BINARY_OPS", "type": "Dict[str, Any]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 48, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 57, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 57, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 22, "nodeName": "var", "type": "Any"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "relay", "type": "Any"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "body", "type": "Any"}, {"lineNumber": 223, "col_offset": 34, "nodeName": "relay", "type": "Any"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "global_var", "type": "Any"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "ir", "type": "Any"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "ir", "type": "Any"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "DiagnosticError", "type": "Any"}, {"lineNumber": 238, "col_offset": 18, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "node_type_key", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "node_index", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 299, "col_offset": 36, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 302, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 302, "col_offset": 23, "nodeName": "DiagnosticError", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 307, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "DiagnosticError", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 312, "col_offset": 27, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 314, "col_offset": 29, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 316, "col_offset": 31, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 318, "col_offset": 34, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "Function", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "Function", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "Function", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "Function", "type": "Any"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "X_ANNO", "type": "Any"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "int32", "type": "Any"}, {"lineNumber": 383, "col_offset": 31, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 393, "col_offset": 31, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "If", "type": "Any"}, {"lineNumber": 414, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 414, "col_offset": 23, "nodeName": "DiagnosticError", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 429, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 436, "col_offset": 12, "nodeName": "id_func", "type": "Any"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 457, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 464, "col_offset": 12, "nodeName": "id_var", "type": "Any"}, {"lineNumber": 471, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 478, "col_offset": 12, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "Call", "type": "Any"}, {"lineNumber": 508, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 521, "col_offset": 12, "nodeName": "curried_mult", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "Call", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 554, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 555, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 571, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 572, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 580, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 581, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 589, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 590, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 598, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 599, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 613, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 624, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 635, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 647, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 648, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 659, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 670, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 676, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 678, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 679, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 698, "col_offset": 12, "nodeName": "type_definitions", "type": "Any"}, {"lineNumber": 700, "col_offset": 11, "nodeName": "global_type_var", "type": "Any"}, {"lineNumber": 702, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 702, "col_offset": 15, "nodeName": "ctors", "type": "Any"}, {"lineNumber": 704, "col_offset": 11, "nodeName": "my_cons", "type": "Any"}, {"lineNumber": 705, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 706, "col_offset": 22, "nodeName": "ty_shape", "type": "Any"}, {"lineNumber": 706, "col_offset": 35, "nodeName": "tir", "type": "Any"}, {"lineNumber": 707, "col_offset": 11, "nodeName": "ty_shape", "type": "Any"}, {"lineNumber": 711, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 713, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 714, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 715, "col_offset": 8, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 725, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 727, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 728, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 729, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 731, "col_offset": 13, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 736, "col_offset": 8, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 741, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 742, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 743, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 744, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 746, "col_offset": 13, "nodeName": "typ_var_a", "type": "Any"}, {"lineNumber": 746, "col_offset": 24, "nodeName": "typ_var_b", "type": "Any"}, {"lineNumber": 751, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 768, "col_offset": 14, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 770, "col_offset": 19, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 771, "col_offset": 18, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 772, "col_offset": 27, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 773, "col_offset": 50, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 774, "col_offset": 26, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 774, "col_offset": 55, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 775, "col_offset": 19, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 776, "col_offset": 12, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 781, "col_offset": 21, "nodeName": "GlobalVar", "type": "Any"}, {"lineNumber": 782, "col_offset": 18, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 783, "col_offset": 21, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 783, "col_offset": 30, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 784, "col_offset": 20, "nodeName": "Var", "type": "Any"}, {"lineNumber": 784, "col_offset": 36, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 785, "col_offset": 19, "nodeName": "Var", "type": "Any"}, {"lineNumber": 786, "col_offset": 20, "nodeName": "Let", "type": "Any"}, {"lineNumber": 788, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 790, "col_offset": 15, "nodeName": "Match", "type": "Any"}, {"lineNumber": 790, "col_offset": 27, "nodeName": "input_var", "type": "Any"}, {"lineNumber": 801, "col_offset": 22, "nodeName": "Function", "type": "Any"}, {"lineNumber": 803, "col_offset": 12, "nodeName": "body", "type": "Any"}, {"lineNumber": 804, "col_offset": 12, "nodeName": "int32", "type": "Any"}, {"lineNumber": 807, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 809, "col_offset": 8, "nodeName": "assert_parse_module_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 823, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 828, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 830, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 831, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 832, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 833, "col_offset": 17, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 834, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 835, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 837, "col_offset": 9, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 838, "col_offset": 9, "nodeName": "cons_constructor", "type": "Any"}, {"lineNumber": 838, "col_offset": 27, "nodeName": "nil_constructor", "type": "Any"}, {"lineNumber": 839, "col_offset": 8, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 841, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 842, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 843, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 844, "col_offset": 9, "nodeName": "input_var", "type": "Any"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "cons_constructor", "type": "Any"}, {"lineNumber": 845, "col_offset": 25, "nodeName": "input_var", "type": "Any"}, {"lineNumber": 846, "col_offset": 8, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 846, "col_offset": 17, "nodeName": "int32", "type": "Any"}, {"lineNumber": 848, "col_offset": 8, "nodeName": "make_singleton_var", "type": "Any"}, {"lineNumber": 857, "col_offset": 14, "nodeName": "LIST_DEFN", "type": "str"}, {"lineNumber": 863, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 863, "col_offset": 23, "nodeName": "DiagnosticError", "type": "Any"}, {"lineNumber": 864, "col_offset": 8, "nodeName": "parse_module", "type": "Callable[[Any], Any]"}, {"lineNumber": 877, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 877, "col_offset": 23, "nodeName": "DiagnosticError", "type": "Any"}, {"lineNumber": 878, "col_offset": 8, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 887, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 887, "col_offset": 23, "nodeName": "DiagnosticError", "type": "Any"}, {"lineNumber": 888, "col_offset": 8, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 897, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 897, "col_offset": 23, "nodeName": "DiagnosticError", "type": "Any"}, {"lineNumber": 898, "col_offset": 8, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 907, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 909, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 910, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 911, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 911, "col_offset": 45, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 912, "col_offset": 8, "nodeName": "extern_var", "type": "Any"}, {"lineNumber": 922, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 923, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 926, "col_offset": 13, "nodeName": "resnet", "type": "Any"}, {"lineNumber": 927, "col_offset": 11, "nodeName": "mod", "type": "Any"}, {"lineNumber": 928, "col_offset": 17, "nodeName": "parser", "type": "Any"}, {"lineNumber": 929, "col_offset": 4, "nodeName": "ir", "type": "Any"}, {"lineNumber": 935, "col_offset": 8, "nodeName": "str_to_var", "type": "Dict[Any, Any]"}, {"lineNumber": 939, "col_offset": 8, "nodeName": "bind_map", "type": "Dict[Any, Any]"}, {"lineNumber": 939, "col_offset": 38, "nodeName": "const", "type": "Any"}, {"lineNumber": 941, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 941, "col_offset": 22, "nodeName": "main_fn", "type": "Any"}, {"lineNumber": 942, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 942, "col_offset": 29, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 942, "col_offset": 54, "nodeName": "body", "type": "Any"}, {"lineNumber": 947, "col_offset": 18, "nodeName": "resnet", "type": "Any"}, {"lineNumber": 949, "col_offset": 11, "nodeName": "mod", "type": "Any"}, {"lineNumber": 950, "col_offset": 17, "nodeName": "parser", "type": "Any"}, {"lineNumber": 951, "col_offset": 4, "nodeName": "ir", "type": "Any"}, {"lineNumber": 955, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 955, "col_offset": 16, "nodeName": "sys", "type": "module"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "expr", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 101, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 44, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 30, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 177, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 30, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 180, "col_offset": 30, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "bin_op", "type": "str"}, {"lineNumber": 208, "col_offset": 27, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 52, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "error", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "Let", "type": "Any"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "Y", "type": "Any"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 294, "col_offset": 21, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 294, "col_offset": 27, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 299, "col_offset": 36, "nodeName": "relay", "type": "Any"}, {"lineNumber": 302, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 302, "col_offset": 23, "nodeName": "error", "type": "Any"}, {"lineNumber": 307, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "error", "type": "Any"}, {"lineNumber": 312, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 314, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 316, "col_offset": 31, "nodeName": "relay", "type": "Any"}, {"lineNumber": 318, "col_offset": 34, "nodeName": "relay", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 337, "col_offset": 13, "nodeName": "X", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 348, "col_offset": 13, "nodeName": "X", "type": "Any"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "Y", "type": "Any"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 349, "col_offset": 22, "nodeName": "X", "type": "Any"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "Y", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "X_ANNO", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 414, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 414, "col_offset": 23, "nodeName": "error", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 437, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 437, "col_offset": 32, "nodeName": "X", "type": "Any"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "Call", "type": "Any"}, {"lineNumber": 452, "col_offset": 23, "nodeName": "constant", "type": "Any"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 465, "col_offset": 32, "nodeName": "X", "type": "Any"}, {"lineNumber": 466, "col_offset": 12, "nodeName": "Call", "type": "Any"}, {"lineNumber": 466, "col_offset": 23, "nodeName": "id_var", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "Call", "type": "Any"}, {"lineNumber": 485, "col_offset": 23, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 495, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 497, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 522, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 533, "col_offset": 12, "nodeName": "Let", "type": "Any"}, {"lineNumber": 534, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 544, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 563, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 563, "col_offset": 49, "nodeName": "builtin_type", "type": "str"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 570, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 588, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 597, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 611, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 612, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 612, "col_offset": 47, "nodeName": "int32", "type": "Any"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 622, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 623, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 623, "col_offset": 68, "nodeName": "int32", "type": "Any"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 634, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 634, "col_offset": 91, "nodeName": "int32", "type": "Any"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 646, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 657, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 658, "col_offset": 12, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 668, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 669, "col_offset": 12, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 682, "col_offset": 13, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 682, "col_offset": 42, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 698, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 705, "col_offset": 15, "nodeName": "my_cons", "type": "Any"}, {"lineNumber": 706, "col_offset": 35, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 733, "col_offset": 16, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 733, "col_offset": 72, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 734, "col_offset": 16, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 734, "col_offset": 45, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 748, "col_offset": 16, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 748, "col_offset": 55, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 749, "col_offset": 16, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 749, "col_offset": 56, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 768, "col_offset": 14, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 770, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 771, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 772, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 773, "col_offset": 21, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 774, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 775, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 777, "col_offset": 13, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 778, "col_offset": 13, "nodeName": "cons_constructor", "type": "Any"}, {"lineNumber": 778, "col_offset": 31, "nodeName": "nil_constructor", "type": "Any"}, {"lineNumber": 779, "col_offset": 12, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 781, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 782, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 784, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 785, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 786, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 787, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 789, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 790, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 799, "col_offset": 21, "nodeName": "is_complete", "type": "bool"}, {"lineNumber": 801, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 802, "col_offset": 13, "nodeName": "input_var", "type": "Any"}, {"lineNumber": 805, "col_offset": 13, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 807, "col_offset": 12, "nodeName": "length_var", "type": "Any"}, {"lineNumber": 833, "col_offset": 26, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 833, "col_offset": 35, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 845, "col_offset": 36, "nodeName": "nil_constructor", "type": "Any"}, {"lineNumber": 863, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 863, "col_offset": 23, "nodeName": "error", "type": "Any"}, {"lineNumber": 872, "col_offset": 18, "nodeName": "LIST_DEFN", "type": "str"}, {"lineNumber": 877, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 877, "col_offset": 23, "nodeName": "error", "type": "Any"}, {"lineNumber": 887, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 887, "col_offset": 23, "nodeName": "error", "type": "Any"}, {"lineNumber": 897, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 897, "col_offset": 23, "nodeName": "error", "type": "Any"}, {"lineNumber": 926, "col_offset": 13, "nodeName": "testing", "type": "Any"}, {"lineNumber": 928, "col_offset": 17, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 929, "col_offset": 4, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 935, "col_offset": 19, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 939, "col_offset": 38, "nodeName": "relay", "type": "Any"}, {"lineNumber": 939, "col_offset": 50, "nodeName": "params", "type": "Any"}, {"lineNumber": 942, "col_offset": 29, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 947, "col_offset": 18, "nodeName": "testing", "type": "Any"}, {"lineNumber": 950, "col_offset": 17, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 951, "col_offset": 4, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "bin_op", "type": "str"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "const", "type": "Any"}, {"lineNumber": 202, "col_offset": 51, "nodeName": "const", "type": "Any"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "meta_op", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "meta_op", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "const", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 294, "col_offset": 33, "nodeName": "const", "type": "Any"}, {"lineNumber": 302, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 314, "col_offset": 42, "nodeName": "const", "type": "Any"}, {"lineNumber": 316, "col_offset": 44, "nodeName": "const", "type": "Any"}, {"lineNumber": 316, "col_offset": 60, "nodeName": "const", "type": "Any"}, {"lineNumber": 318, "col_offset": 47, "nodeName": "const", "type": "Any"}, {"lineNumber": 318, "col_offset": 63, "nodeName": "const", "type": "Any"}, {"lineNumber": 318, "col_offset": 79, "nodeName": "const", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 414, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 437, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 437, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 438, "col_offset": 27, "nodeName": "const", "type": "Any"}, {"lineNumber": 438, "col_offset": 44, "nodeName": "Call", "type": "Any"}, {"lineNumber": 438, "col_offset": 55, "nodeName": "id_func", "type": "Any"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 451, "col_offset": 31, "nodeName": "const", "type": "Any"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 465, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 466, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 480, "col_offset": 17, "nodeName": "X", "type": "Any"}, {"lineNumber": 480, "col_offset": 20, "nodeName": "Y", "type": "Any"}, {"lineNumber": 481, "col_offset": 16, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 481, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 481, "col_offset": 34, "nodeName": "Y", "type": "Any"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 495, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 496, "col_offset": 17, "nodeName": "X", "type": "Any"}, {"lineNumber": 501, "col_offset": 13, "nodeName": "const", "type": "Any"}, {"lineNumber": 522, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 523, "col_offset": 17, "nodeName": "X", "type": "Any"}, {"lineNumber": 524, "col_offset": 16, "nodeName": "Function", "type": "Any"}, {"lineNumber": 533, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 535, "col_offset": 16, "nodeName": "Call", "type": "Any"}, {"lineNumber": 535, "col_offset": 27, "nodeName": "curried_mult", "type": "Any"}, {"lineNumber": 536, "col_offset": 16, "nodeName": "Call", "type": "Any"}, {"lineNumber": 544, "col_offset": 19, "nodeName": "op", "type": "Any"}, {"lineNumber": 544, "col_offset": 41, "nodeName": "const", "type": "Any"}, {"lineNumber": 570, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 570, "col_offset": 27, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 579, "col_offset": 27, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 588, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 588, "col_offset": 27, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 597, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 597, "col_offset": 27, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 611, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 611, "col_offset": 27, "nodeName": "FuncType", "type": "Any"}, {"lineNumber": 611, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 612, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 612, "col_offset": 31, "nodeName": "const", "type": "Any"}, {"lineNumber": 622, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 622, "col_offset": 27, "nodeName": "FuncType", "type": "Any"}, {"lineNumber": 622, "col_offset": 51, "nodeName": "int32", "type": "Any"}, {"lineNumber": 623, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 623, "col_offset": 52, "nodeName": "const", "type": "Any"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 633, "col_offset": 27, "nodeName": "FuncType", "type": "Any"}, {"lineNumber": 633, "col_offset": 58, "nodeName": "int32", "type": "Any"}, {"lineNumber": 634, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 634, "col_offset": 75, "nodeName": "const", "type": "Any"}, {"lineNumber": 646, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 646, "col_offset": 27, "nodeName": "TupleType", "type": "Any"}, {"lineNumber": 657, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 657, "col_offset": 27, "nodeName": "TupleType", "type": "Any"}, {"lineNumber": 658, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 668, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 668, "col_offset": 27, "nodeName": "TupleType", "type": "Any"}, {"lineNumber": 669, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 682, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 733, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 733, "col_offset": 43, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 734, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 748, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 748, "col_offset": 43, "nodeName": "typ_var_a", "type": "Any"}, {"lineNumber": 749, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 749, "col_offset": 44, "nodeName": "typ_var_b", "type": "Any"}, {"lineNumber": 773, "col_offset": 30, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 773, "col_offset": 39, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 787, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 789, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 789, "col_offset": 22, "nodeName": "const", "type": "Any"}, {"lineNumber": 789, "col_offset": 38, "nodeName": "Call", "type": "Any"}, {"lineNumber": 789, "col_offset": 49, "nodeName": "length_var", "type": "Any"}, {"lineNumber": 791, "col_offset": 13, "nodeName": "Clause", "type": "Any"}, {"lineNumber": 795, "col_offset": 16, "nodeName": "cons_case", "type": "Any"}, {"lineNumber": 796, "col_offset": 12, "nodeName": "Clause", "type": "Any"}, {"lineNumber": 822, "col_offset": 19, "nodeName": "LIST_DEFN", "type": "str"}, {"lineNumber": 822, "col_offset": 30, "nodeName": "match_keyword", "type": "str"}, {"lineNumber": 863, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 877, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 887, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 897, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 926, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 935, "col_offset": 19, "nodeName": "param", "type": "Any"}, {"lineNumber": 939, "col_offset": 17, "nodeName": "str_to_var", "type": "Dict[Any, Any]"}, {"lineNumber": 939, "col_offset": 57, "nodeName": "param", "type": "Any"}, {"lineNumber": 942, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 947, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "BINARY_OPS", "type": "Dict[str, Any]"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "relay", "type": "Any"}, {"lineNumber": 202, "col_offset": 51, "nodeName": "relay", "type": "Any"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 294, "col_offset": 33, "nodeName": "relay", "type": "Any"}, {"lineNumber": 314, "col_offset": 42, "nodeName": "relay", "type": "Any"}, {"lineNumber": 316, "col_offset": 44, "nodeName": "relay", "type": "Any"}, {"lineNumber": 316, "col_offset": 60, "nodeName": "relay", "type": "Any"}, {"lineNumber": 318, "col_offset": 47, "nodeName": "relay", "type": "Any"}, {"lineNumber": 318, "col_offset": 63, "nodeName": "relay", "type": "Any"}, {"lineNumber": 318, "col_offset": 79, "nodeName": "relay", "type": "Any"}, {"lineNumber": 438, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 438, "col_offset": 44, "nodeName": "relay", "type": "Any"}, {"lineNumber": 451, "col_offset": 31, "nodeName": "relay", "type": "Any"}, {"lineNumber": 466, "col_offset": 32, "nodeName": "const", "type": "Any"}, {"lineNumber": 481, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 485, "col_offset": 34, "nodeName": "const", "type": "Any"}, {"lineNumber": 485, "col_offset": 50, "nodeName": "const", "type": "Any"}, {"lineNumber": 501, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 524, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 525, "col_offset": 21, "nodeName": "Y", "type": "Any"}, {"lineNumber": 526, "col_offset": 20, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 526, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 526, "col_offset": 38, "nodeName": "Y", "type": "Any"}, {"lineNumber": 535, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 536, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 536, "col_offset": 27, "nodeName": "Call", "type": "Any"}, {"lineNumber": 536, "col_offset": 38, "nodeName": "curried_mult", "type": "Any"}, {"lineNumber": 544, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 544, "col_offset": 41, "nodeName": "relay", "type": "Any"}, {"lineNumber": 570, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 579, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 588, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 597, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 611, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 612, "col_offset": 31, "nodeName": "relay", "type": "Any"}, {"lineNumber": 622, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 622, "col_offset": 43, "nodeName": "int32", "type": "Any"}, {"lineNumber": 623, "col_offset": 28, "nodeName": "Var", "type": "Any"}, {"lineNumber": 623, "col_offset": 43, "nodeName": "int32", "type": "Any"}, {"lineNumber": 623, "col_offset": 52, "nodeName": "relay", "type": "Any"}, {"lineNumber": 633, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 633, "col_offset": 43, "nodeName": "int32", "type": "Any"}, {"lineNumber": 633, "col_offset": 50, "nodeName": "int32", "type": "Any"}, {"lineNumber": 634, "col_offset": 28, "nodeName": "Var", "type": "Any"}, {"lineNumber": 634, "col_offset": 43, "nodeName": "int32", "type": "Any"}, {"lineNumber": 634, "col_offset": 51, "nodeName": "Var", "type": "Any"}, {"lineNumber": 634, "col_offset": 66, "nodeName": "int32", "type": "Any"}, {"lineNumber": 634, "col_offset": 75, "nodeName": "relay", "type": "Any"}, {"lineNumber": 646, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 657, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 657, "col_offset": 44, "nodeName": "int32", "type": "Any"}, {"lineNumber": 658, "col_offset": 25, "nodeName": "const", "type": "Any"}, {"lineNumber": 668, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 668, "col_offset": 44, "nodeName": "int32", "type": "Any"}, {"lineNumber": 668, "col_offset": 51, "nodeName": "int32", "type": "Any"}, {"lineNumber": 669, "col_offset": 25, "nodeName": "const", "type": "Any"}, {"lineNumber": 669, "col_offset": 41, "nodeName": "const", "type": "Any"}, {"lineNumber": 733, "col_offset": 52, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 733, "col_offset": 61, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 789, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 789, "col_offset": 38, "nodeName": "relay", "type": "Any"}, {"lineNumber": 789, "col_offset": 62, "nodeName": "rest_var", "type": "Any"}, {"lineNumber": 791, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 792, "col_offset": 16, "nodeName": "PatternConstructor", "type": "Any"}, {"lineNumber": 793, "col_offset": 20, "nodeName": "cons_constructor", "type": "Any"}, {"lineNumber": 796, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 797, "col_offset": 16, "nodeName": "PatternConstructor", "type": "Any"}, {"lineNumber": 797, "col_offset": 41, "nodeName": "nil_constructor", "type": "Any"}, {"lineNumber": 798, "col_offset": 16, "nodeName": "const", "type": "Any"}, {"lineNumber": 939, "col_offset": 28, "nodeName": "param", "type": "Any"}, {"lineNumber": 438, "col_offset": 65, "nodeName": "const", "type": "Any"}, {"lineNumber": 466, "col_offset": 32, "nodeName": "relay", "type": "Any"}, {"lineNumber": 485, "col_offset": 34, "nodeName": "relay", "type": "Any"}, {"lineNumber": 485, "col_offset": 50, "nodeName": "relay", "type": "Any"}, {"lineNumber": 526, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 535, "col_offset": 42, "nodeName": "const", "type": "Any"}, {"lineNumber": 536, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 536, "col_offset": 84, "nodeName": "const", "type": "Any"}, {"lineNumber": 597, "col_offset": 45, "nodeName": "Any", "type": "Any"}, {"lineNumber": 623, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 634, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 634, "col_offset": 51, "nodeName": "relay", "type": "Any"}, {"lineNumber": 658, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 669, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 669, "col_offset": 41, "nodeName": "relay", "type": "Any"}, {"lineNumber": 792, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 797, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 798, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 438, "col_offset": 65, "nodeName": "relay", "type": "Any"}, {"lineNumber": 535, "col_offset": 42, "nodeName": "relay", "type": "Any"}, {"lineNumber": 536, "col_offset": 53, "nodeName": "const", "type": "Any"}, {"lineNumber": 536, "col_offset": 84, "nodeName": "relay", "type": "Any"}, {"lineNumber": 597, "col_offset": 45, "nodeName": "tir", "type": "Any"}, {"lineNumber": 794, "col_offset": 21, "nodeName": "PatternWildcard", "type": "Any"}, {"lineNumber": 794, "col_offset": 46, "nodeName": "PatternVar", "type": "Any"}, {"lineNumber": 794, "col_offset": 63, "nodeName": "rest_var", "type": "Any"}, {"lineNumber": 536, "col_offset": 53, "nodeName": "relay", "type": "Any"}, {"lineNumber": 597, "col_offset": 45, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 794, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 794, "col_offset": 46, "nodeName": "relay", "type": "Any"}]