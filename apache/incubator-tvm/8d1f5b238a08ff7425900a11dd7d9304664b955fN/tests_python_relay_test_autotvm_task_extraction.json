[{"lineNumber": 23, "col_offset": 0, "nodeName": "get_network", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "test_task_extraction", "type": "Callable[[], Any]"}, {"lineNumber": 105, "col_offset": 0, "nodeName": "test_task_extraction_for_dense_int8_cuda", "type": "Callable[[], Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "get_net", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "target", "type": "str"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "mod_list", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "params_list", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "conv3d", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "conv2d_transpose", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "dense", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "target", "type": "str"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "dense", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 125, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "name", "type": "str"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "mod", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "params", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "get", "type": "Any"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "get", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "get", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "get", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 51, "col_offset": 9, "nodeName": "params", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "_", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "get_network", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "extract_from_program", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "extract_from_program", "type": "Any"}, {"lineNumber": 56, "col_offset": 46, "nodeName": "mod", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 59, "col_offset": 9, "nodeName": "params", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "_", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "get_network", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "extract_from_program", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "extract_from_program", "type": "Any"}, {"lineNumber": 64, "col_offset": 46, "nodeName": "mod", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "params", "type": "Any"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "_", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "get_network", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "mod", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "params", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "extract_from_program", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "extract_from_program", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "extract_from_program", "type": "Any"}, {"lineNumber": 78, "col_offset": 46, "nodeName": "mod", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "params", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "_", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "get_network", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "extract_from_program", "type": "Any"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "mod", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "params", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "_", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "get_network", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "mod", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "params", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "extract_from_program", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 93, "col_offset": 9, "nodeName": "params", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "_", "type": "Tuple[int, int]"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "get_network", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "extract_from_program", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "extract_from_multiple_program", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "mod_list", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 18, "nodeName": "params_list", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "get", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 116, "col_offset": 9, "nodeName": "params", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "get_net", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "extract_from_program", "type": "Any"}, {"lineNumber": 117, "col_offset": 46, "nodeName": "mod", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 120, "col_offset": 9, "nodeName": "params", "type": "Any"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "get_net", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "extract_from_program", "type": "Any"}, {"lineNumber": 121, "col_offset": 46, "nodeName": "mod", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "test_task_extraction", "type": "Callable[[], Any]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "test_task_extraction_for_dense_int8_cuda", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "params", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "get_workload", "type": "Any"}, {"lineNumber": 29, "col_offset": 9, "nodeName": "name", "type": "str"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "op", "type": "Any"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "op", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "op", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "target", "type": "str"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "params", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 56, "col_offset": 58, "nodeName": "target", "type": "str"}, {"lineNumber": 56, "col_offset": 73, "nodeName": "params", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "target", "type": "str"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "params", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 64, "col_offset": 58, "nodeName": "target", "type": "str"}, {"lineNumber": 64, "col_offset": 73, "nodeName": "params", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "mod_list", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "params_list", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "target", "type": "str"}, {"lineNumber": 71, "col_offset": 43, "nodeName": "params", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "target", "type": "str"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "params", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 78, "col_offset": 58, "nodeName": "target", "type": "str"}, {"lineNumber": 78, "col_offset": 73, "nodeName": "params", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 82, "col_offset": 58, "nodeName": "target", "type": "str"}, {"lineNumber": 82, "col_offset": 73, "nodeName": "params", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "mod_list", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "params_list", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "target", "type": "str"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "params", "type": "Any"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "target", "type": "str"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "params", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 100, "col_offset": 38, "nodeName": "target", "type": "str"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 112, "col_offset": 14, "nodeName": "dense", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 112, "col_offset": 35, "nodeName": "weight", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "params", "type": "Any"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "create_workload", "type": "Any"}, {"lineNumber": 113, "col_offset": 52, "nodeName": "out", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "mod", "type": "Any"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 117, "col_offset": 58, "nodeName": "target", "type": "str"}, {"lineNumber": 117, "col_offset": 73, "nodeName": "params", "type": "Any"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 121, "col_offset": 58, "nodeName": "target", "type": "str"}, {"lineNumber": 121, "col_offset": 73, "nodeName": "params", "type": "Any"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "resnet", "type": "Any"}, {"lineNumber": 28, "col_offset": 82, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "params", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "get_workload", "type": "Any"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "name", "type": "str"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "autotvm", "type": "Any"}, {"lineNumber": 53, "col_offset": 56, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "autotvm", "type": "Any"}, {"lineNumber": 56, "col_offset": 86, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "autotvm", "type": "Any"}, {"lineNumber": 61, "col_offset": 56, "nodeName": "dense", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "autotvm", "type": "Any"}, {"lineNumber": 64, "col_offset": 86, "nodeName": "dense", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "autotvm", "type": "Any"}, {"lineNumber": 71, "col_offset": 56, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 71, "col_offset": 64, "nodeName": "dense", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "autotvm", "type": "Any"}, {"lineNumber": 75, "col_offset": 48, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 75, "col_offset": 56, "nodeName": "dense", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "autotvm", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "autotvm", "type": "Any"}, {"lineNumber": 82, "col_offset": 86, "nodeName": "conv3d", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "autotvm", "type": "Any"}, {"lineNumber": 89, "col_offset": 48, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 89, "col_offset": 56, "nodeName": "dense", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "autotvm", "type": "Any"}, {"lineNumber": 95, "col_offset": 48, "nodeName": "conv2d_transpose", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "autotvm", "type": "Any"}, {"lineNumber": 100, "col_offset": 51, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 110, "col_offset": 66, "nodeName": "dtype", "type": "str"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 111, "col_offset": 72, "nodeName": "dtype", "type": "str"}, {"lineNumber": 112, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 112, "col_offset": 53, "nodeName": "out_dtype", "type": "str"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "testing", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "autotvm", "type": "Any"}, {"lineNumber": 117, "col_offset": 86, "nodeName": "dense", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "autotvm", "type": "Any"}, {"lineNumber": 121, "col_offset": 86, "nodeName": "dense", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "testing", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "resnet_3d", "type": "Any"}, {"lineNumber": 30, "col_offset": 85, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "params", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "get_workload", "type": "Any"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "name", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "input_shape", "type": "Tuple[int, int]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 110, "col_offset": 44, "nodeName": "batch", "type": "int"}, {"lineNumber": 110, "col_offset": 51, "nodeName": "in_dim", "type": "int"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 111, "col_offset": 48, "nodeName": "out_dim", "type": "int"}, {"lineNumber": 111, "col_offset": 57, "nodeName": "in_dim", "type": "int"}, {"lineNumber": 112, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "testing", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "mobilenet", "type": "Any"}, {"lineNumber": 32, "col_offset": 70, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "params", "type": "Any"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "get_workload", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "testing", "type": "Any"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "dcgan", "type": "Any"}, {"lineNumber": 34, "col_offset": 66, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 37, "col_offset": 51, "nodeName": "name", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "testing", "type": "Any"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "relay", "type": "Any"}]