[{"lineNumber": 25, "col_offset": 0, "nodeName": "test_mkldnn_dequantize", "type": "Callable[[], Any]"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "test_mkldnn_quantize", "type": "Callable[[], Any]"}, {"lineNumber": 139, "col_offset": 0, "nodeName": "test_get_mkldnn_int8_scale", "type": "Callable[[], Any]"}, {"lineNumber": 148, "col_offset": 0, "nodeName": "test_get_mkldnn_uint8_scale", "type": "Callable[[], Any]"}, {"lineNumber": 157, "col_offset": 0, "nodeName": "test_quantize_conv_bias_mkldnn_from_var", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "dequantize_test_driver", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "quantize_test_driver", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "range_min", "type": "float"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "range_max", "type": "float"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "expected", "type": "float"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "range_min", "type": "float"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "range_max", "type": "float"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "expected", "type": "float"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "bias_var", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "bias_scale", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 169, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "min_range", "type": "float"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "max_range", "type": "int"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "quant_args", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "dequantize_args", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "test_uint8_to_float32", "type": "Callable[[], Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "test_int8_to_float32", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "min_range", "type": "float"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "max_range", "type": "int"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "quant_args", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "quant_args", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "test_float32_to_uint8", "type": "Callable[[], Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "test_float32_to_int8", "type": "Callable[[], Any]"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "get_mkldnn_int8_scale", "type": "Any"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 145, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "expected", "type": "float"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "get_mkldnn_uint8_scale", "type": "Any"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "expected", "type": "float"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "array", "type": "Any"}, {"lineNumber": 160, "col_offset": 13, "nodeName": "quantize_conv_bias_mkldnn_from_var", "type": "Any"}, {"lineNumber": 160, "col_offset": 63, "nodeName": "bias_var", "type": "Any"}, {"lineNumber": 160, "col_offset": 73, "nodeName": "bias_scale", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "output", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "Call", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "axis", "type": "Any"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "out_dtype", "type": "Any"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 166, "col_offset": 34, "nodeName": "bias_scale", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "test_mkldnn_dequantize", "type": "Callable[[], Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "test_mkldnn_quantize", "type": "Callable[[], Any]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "test_get_mkldnn_int8_scale", "type": "Callable[[], Any]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "test_get_mkldnn_uint8_scale", "type": "Callable[[], Any]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "test_quantize_conv_bias_mkldnn_from_var", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "in_data", "type": "Any"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "quant_args", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "quant_args", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "dequantize_mxnet_min_max", "type": "Any"}, {"lineNumber": 33, "col_offset": 52, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "Function", "type": "Any"}, {"lineNumber": 37, "col_offset": 75, "nodeName": "dequantized_output", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "mod", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "rt_mod", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "dequantize_test_driver", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "dequantize_test_driver", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "in_data", "type": "Any"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "quant_args", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "quant_args", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "quantize_mxnet_min_max", "type": "Any"}, {"lineNumber": 89, "col_offset": 50, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "Function", "type": "Any"}, {"lineNumber": 93, "col_offset": 73, "nodeName": "quantized_output", "type": "Any"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "mod", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "rt_mod", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "quantize_test_driver", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "quantize_test_driver", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "frontend", "type": "Any"}, {"lineNumber": 143, "col_offset": 60, "nodeName": "range_max", "type": "float"}, {"lineNumber": 144, "col_offset": 60, "nodeName": "range_min", "type": "float"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "frontend", "type": "Any"}, {"lineNumber": 152, "col_offset": 61, "nodeName": "range_max", "type": "float"}, {"lineNumber": 153, "col_offset": 61, "nodeName": "range_min", "type": "float"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "nd", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 160, "col_offset": 13, "nodeName": "frontend", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "expr", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 29, "col_offset": 51, "nodeName": "shape", "type": "Any"}, {"lineNumber": 29, "col_offset": 64, "nodeName": "in_dtype", "type": "str"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "frontend", "type": "Any"}, {"lineNumber": 34, "col_offset": 62, "nodeName": "min_range", "type": "float"}, {"lineNumber": 35, "col_offset": 62, "nodeName": "max_range", "type": "int"}, {"lineNumber": 36, "col_offset": 61, "nodeName": "in_dtype", "type": "str"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 37, "col_offset": 54, "nodeName": "dequantized_output", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "build_config", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "graph", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "lib", "type": "Any"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "params", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "build", "type": "Any"}, {"lineNumber": 40, "col_offset": 45, "nodeName": "mod", "type": "Any"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "create", "type": "Any"}, {"lineNumber": 41, "col_offset": 42, "nodeName": "graph", "type": "Any"}, {"lineNumber": 41, "col_offset": 49, "nodeName": "lib", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "set_input", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "set_input", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "res", "type": "Any"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "verify_output_data", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "quant_args", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 61, "col_offset": 50, "nodeName": "output", "type": "Any"}, {"lineNumber": 73, "col_offset": 42, "nodeName": "dequantize_args", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 75, "col_offset": 50, "nodeName": "output", "type": "Any"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 85, "col_offset": 51, "nodeName": "shape", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "frontend", "type": "Any"}, {"lineNumber": 90, "col_offset": 60, "nodeName": "min_range", "type": "float"}, {"lineNumber": 91, "col_offset": 60, "nodeName": "max_range", "type": "int"}, {"lineNumber": 92, "col_offset": 60, "nodeName": "out_dtype", "type": "str"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "quantized_output", "type": "Any"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "build_config", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "graph", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "lib", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "params", "type": "Any"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "build", "type": "Any"}, {"lineNumber": 96, "col_offset": 45, "nodeName": "mod", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "create", "type": "Any"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "graph", "type": "Any"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "lib", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "set_input", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "set_input", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "res", "type": "Any"}, {"lineNumber": 102, "col_offset": 36, "nodeName": "verify_output_data", "type": "Any"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "quant_args", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 118, "col_offset": 48, "nodeName": "output", "type": "Any"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "quant_args", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 132, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 133, "col_offset": 48, "nodeName": "output", "type": "Any"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "relay", "type": "Any"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "relay", "type": "Any"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "graph_runtime", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "rt_mod", "type": "Any"}, {"lineNumber": 42, "col_offset": 40, "nodeName": "in_data", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "rt_mod", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "rt_mod", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "res", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "relay", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "graph_runtime", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "rt_mod", "type": "Any"}, {"lineNumber": 98, "col_offset": 40, "nodeName": "in_data", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "rt_mod", "type": "Any"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "rt_mod", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "res", "type": "Any"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "verify_output_data", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "get_output", "type": "Any"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 97, "col_offset": 58, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "get_output", "type": "Any"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "rt_mod", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 97, "col_offset": 58, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "rt_mod", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "np", "type": "module"}]