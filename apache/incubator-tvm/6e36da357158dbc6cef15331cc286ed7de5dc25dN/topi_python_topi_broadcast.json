[{"lineNumber": 22, "col_offset": 0, "nodeName": "broadcast_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "subtract", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "multiply", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "divide", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "floor_divide", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 0, "nodeName": "mod", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 157, "col_offset": 0, "nodeName": "floor_mod", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 176, "col_offset": 0, "nodeName": "maximum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 195, "col_offset": 0, "nodeName": "minimum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 214, "col_offset": 0, "nodeName": "power", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 233, "col_offset": 0, "nodeName": "left_shift", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 252, "col_offset": 0, "nodeName": "right_shift", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 271, "col_offset": 0, "nodeName": "greater", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 290, "col_offset": 0, "nodeName": "less", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 309, "col_offset": 0, "nodeName": "equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 328, "col_offset": 0, "nodeName": "not_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 347, "col_offset": 0, "nodeName": "greater_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 366, "col_offset": 0, "nodeName": "less_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 385, "col_offset": 0, "nodeName": "logical_and", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 404, "col_offset": 0, "nodeName": "logical_or", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 423, "col_offset": 0, "nodeName": "logical_xor", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 442, "col_offset": 0, "nodeName": "bitwise_and", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 461, "col_offset": 0, "nodeName": "bitwise_or", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 480, "col_offset": 0, "nodeName": "bitwise_xor", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 499, "col_offset": 0, "nodeName": "logical_not", "type": "Callable[[Any], Any]"}, {"lineNumber": 515, "col_offset": 0, "nodeName": "bitwise_not", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "broadcast_to", "type": "Any"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "add", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "subtract", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "divide", "type": "Any"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "floor_divide", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "mod", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "floor_mod", "type": "Any"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 173, "col_offset": 31, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 211, "col_offset": 24, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "power", "type": "Any"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 230, "col_offset": 27, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "left_shift", "type": "Any"}, {"lineNumber": 249, "col_offset": 27, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 249, "col_offset": 32, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 268, "col_offset": 11, "nodeName": "right_shift", "type": "Any"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "greater", "type": "Any"}, {"lineNumber": 287, "col_offset": 24, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 287, "col_offset": 29, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 306, "col_offset": 11, "nodeName": "less", "type": "Any"}, {"lineNumber": 306, "col_offset": 21, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 306, "col_offset": 26, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 325, "col_offset": 11, "nodeName": "equal", "type": "Any"}, {"lineNumber": 325, "col_offset": 22, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 325, "col_offset": 27, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 344, "col_offset": 11, "nodeName": "not_equal", "type": "Any"}, {"lineNumber": 344, "col_offset": 26, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 344, "col_offset": 31, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 363, "col_offset": 11, "nodeName": "greater_equal", "type": "Any"}, {"lineNumber": 363, "col_offset": 30, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 363, "col_offset": 35, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 382, "col_offset": 11, "nodeName": "less_equal", "type": "Any"}, {"lineNumber": 382, "col_offset": 27, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 382, "col_offset": 32, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "logical_and", "type": "Any"}, {"lineNumber": 401, "col_offset": 28, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 401, "col_offset": 33, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 420, "col_offset": 11, "nodeName": "logical_or", "type": "Any"}, {"lineNumber": 420, "col_offset": 27, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 420, "col_offset": 32, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 439, "col_offset": 11, "nodeName": "logical_xor", "type": "Any"}, {"lineNumber": 439, "col_offset": 28, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 439, "col_offset": 33, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 458, "col_offset": 11, "nodeName": "bitwise_and", "type": "Any"}, {"lineNumber": 458, "col_offset": 28, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 458, "col_offset": 33, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 477, "col_offset": 11, "nodeName": "bitwise_or", "type": "Any"}, {"lineNumber": 477, "col_offset": 27, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 477, "col_offset": 32, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 496, "col_offset": 11, "nodeName": "bitwise_xor", "type": "Any"}, {"lineNumber": 496, "col_offset": 28, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 496, "col_offset": 33, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 512, "col_offset": 11, "nodeName": "logical_not", "type": "Any"}, {"lineNumber": 512, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 528, "col_offset": 11, "nodeName": "bitwise_not", "type": "Any"}, {"lineNumber": 528, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 268, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 306, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 325, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 344, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 363, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 382, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 420, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 439, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 458, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 477, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 496, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 512, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}, {"lineNumber": 528, "col_offset": 11, "nodeName": "_cpp", "type": "Any"}]