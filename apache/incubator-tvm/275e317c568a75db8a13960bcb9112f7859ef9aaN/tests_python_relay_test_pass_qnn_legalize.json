[{"lineNumber": 27, "col_offset": 0, "nodeName": "alpha_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "test_qnn_legalize", "type": "Callable[[], Any]"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "test_qnn_legalize_qnn_conv2d", "type": "Callable[[], Any]"}, {"lineNumber": 189, "col_offset": 0, "nodeName": "test_qnn_legalize_qnn_dense", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "legalize_qnn_requantize", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "_get_mod", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "_get_mod", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "passes", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "seq", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "entry", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "dtype", "type": "str"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "dtype", "type": "str"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 276, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "passes", "type": "Any"}, {"lineNumber": 39, "col_offset": 10, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 40, "col_offset": 10, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "passes", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "entry", "type": "Any"}, {"lineNumber": 44, "col_offset": 58, "nodeName": "body", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "z", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "kernel_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "mod", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 154, "col_offset": 10, "nodeName": "_get_mod", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "data_shape", "type": "Tuple[int, int]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "mod", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 241, "col_offset": 10, "nodeName": "_get_mod", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "test_qnn_legalize", "type": "Callable[[], Any]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "test_qnn_legalize_qnn_conv2d", "type": "Callable[[], Any]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "test_qnn_legalize_qnn_dense", "type": "Callable[[], Any]"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 34, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 34, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "passes", "type": "Any"}, {"lineNumber": 38, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 38, "col_offset": 54, "nodeName": "passes", "type": "Any"}, {"lineNumber": 39, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 40, "col_offset": 10, "nodeName": "transform", "type": "Any"}, {"lineNumber": 41, "col_offset": 9, "nodeName": "PassContext", "type": "Any"}, {"lineNumber": 42, "col_offset": 14, "nodeName": "seq", "type": "Any"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "mod", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "expr", "type": "Any"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "Function", "type": "Any"}, {"lineNumber": 44, "col_offset": 58, "nodeName": "entry", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "requantize", "type": "Any"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "add", "type": "Any"}, {"lineNumber": 61, "col_offset": 49, "nodeName": "data", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "requantize", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 72, "col_offset": 46, "nodeName": "x", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "requantize", "type": "Any"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 79, "col_offset": 32, "nodeName": "z", "type": "Any"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "TempOpAttr", "type": "Any"}, {"lineNumber": 84, "col_offset": 57, "nodeName": "legalize_qnn_requantize", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 89, "col_offset": 39, "nodeName": "a", "type": "Any"}, {"lineNumber": 89, "col_offset": 42, "nodeName": "b", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "a", "type": "Any"}, {"lineNumber": 94, "col_offset": 42, "nodeName": "b", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "Function", "type": "Any"}, {"lineNumber": 119, "col_offset": 61, "nodeName": "func", "type": "Any"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 120, "col_offset": 37, "nodeName": "mod", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "_get_mod", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "dtype", "type": "str"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "dtype", "type": "str"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 159, "col_offset": 9, "nodeName": "create", "type": "Any"}, {"lineNumber": 160, "col_offset": 55, "nodeName": "mod", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 161, "col_offset": 39, "nodeName": "mod", "type": "Any"}, {"lineNumber": 161, "col_offset": 44, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 164, "col_offset": 9, "nodeName": "create", "type": "Any"}, {"lineNumber": 165, "col_offset": 55, "nodeName": "mod", "type": "Any"}, {"lineNumber": 172, "col_offset": 9, "nodeName": "create", "type": "Any"}, {"lineNumber": 173, "col_offset": 55, "nodeName": "mod", "type": "Any"}, {"lineNumber": 177, "col_offset": 9, "nodeName": "create", "type": "Any"}, {"lineNumber": 178, "col_offset": 55, "nodeName": "mod", "type": "Any"}, {"lineNumber": 184, "col_offset": 9, "nodeName": "create", "type": "Any"}, {"lineNumber": 185, "col_offset": 55, "nodeName": "mod", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 195, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "dense", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 198, "col_offset": 22, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 206, "col_offset": 14, "nodeName": "Function", "type": "Any"}, {"lineNumber": 206, "col_offset": 61, "nodeName": "func", "type": "Any"}, {"lineNumber": 207, "col_offset": 14, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 207, "col_offset": 37, "nodeName": "mod", "type": "Any"}, {"lineNumber": 212, "col_offset": 14, "nodeName": "_get_mod", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "dtype", "type": "str"}, {"lineNumber": 212, "col_offset": 30, "nodeName": "dtype", "type": "str"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 246, "col_offset": 9, "nodeName": "create", "type": "Any"}, {"lineNumber": 247, "col_offset": 55, "nodeName": "mod", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 248, "col_offset": 39, "nodeName": "mod", "type": "Any"}, {"lineNumber": 248, "col_offset": 44, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 251, "col_offset": 9, "nodeName": "create", "type": "Any"}, {"lineNumber": 252, "col_offset": 55, "nodeName": "mod", "type": "Any"}, {"lineNumber": 259, "col_offset": 9, "nodeName": "create", "type": "Any"}, {"lineNumber": 260, "col_offset": 55, "nodeName": "mod", "type": "Any"}, {"lineNumber": 264, "col_offset": 9, "nodeName": "create", "type": "Any"}, {"lineNumber": 265, "col_offset": 55, "nodeName": "mod", "type": "Any"}, {"lineNumber": 271, "col_offset": 9, "nodeName": "create", "type": "Any"}, {"lineNumber": 272, "col_offset": 55, "nodeName": "mod", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "structural_hash", "type": "Any"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "structural_hash", "type": "Any"}, {"lineNumber": 35, "col_offset": 64, "nodeName": "y", "type": "Any"}, {"lineNumber": 39, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 40, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 41, "col_offset": 9, "nodeName": "transform", "type": "Any"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "relay", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "const", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "const", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "ir", "type": "Any"}, {"lineNumber": 89, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 89, "col_offset": 66, "nodeName": "a", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "ir", "type": "Any"}, {"lineNumber": 94, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 94, "col_offset": 66, "nodeName": "a", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "data_dtype", "type": "str"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "kernel_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "kernel_dtype", "type": "str"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 119, "col_offset": 54, "nodeName": "func", "type": "Any"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "create", "type": "Any"}, {"lineNumber": 132, "col_offset": 59, "nodeName": "mod", "type": "Any"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "create", "type": "Any"}, {"lineNumber": 137, "col_offset": 59, "nodeName": "mod", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 138, "col_offset": 43, "nodeName": "mod", "type": "Any"}, {"lineNumber": 138, "col_offset": 48, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "create", "type": "Any"}, {"lineNumber": 145, "col_offset": 59, "nodeName": "mod", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "create", "type": "Any"}, {"lineNumber": 150, "col_offset": 59, "nodeName": "mod", "type": "Any"}, {"lineNumber": 159, "col_offset": 9, "nodeName": "target", "type": "Any"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "ir", "type": "Any"}, {"lineNumber": 164, "col_offset": 9, "nodeName": "target", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 172, "col_offset": 9, "nodeName": "target", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 177, "col_offset": 9, "nodeName": "target", "type": "Any"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 184, "col_offset": 9, "nodeName": "target", "type": "Any"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 193, "col_offset": 39, "nodeName": "data_shape", "type": "Tuple[int, int]"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "data_dtype", "type": "str"}, {"lineNumber": 195, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 195, "col_offset": 43, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "kernel_dtype", "type": "str"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 206, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 206, "col_offset": 54, "nodeName": "func", "type": "Any"}, {"lineNumber": 207, "col_offset": 14, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "create", "type": "Any"}, {"lineNumber": 219, "col_offset": 59, "nodeName": "mod", "type": "Any"}, {"lineNumber": 223, "col_offset": 13, "nodeName": "create", "type": "Any"}, {"lineNumber": 224, "col_offset": 59, "nodeName": "mod", "type": "Any"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 225, "col_offset": 43, "nodeName": "mod", "type": "Any"}, {"lineNumber": 225, "col_offset": 48, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "create", "type": "Any"}, {"lineNumber": 232, "col_offset": 59, "nodeName": "mod", "type": "Any"}, {"lineNumber": 236, "col_offset": 13, "nodeName": "create", "type": "Any"}, {"lineNumber": 237, "col_offset": 59, "nodeName": "mod", "type": "Any"}, {"lineNumber": 246, "col_offset": 9, "nodeName": "target", "type": "Any"}, {"lineNumber": 247, "col_offset": 24, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "ir", "type": "Any"}, {"lineNumber": 251, "col_offset": 9, "nodeName": "target", "type": "Any"}, {"lineNumber": 252, "col_offset": 24, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 259, "col_offset": 9, "nodeName": "target", "type": "Any"}, {"lineNumber": 260, "col_offset": 24, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 264, "col_offset": 9, "nodeName": "target", "type": "Any"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 271, "col_offset": 9, "nodeName": "target", "type": "Any"}, {"lineNumber": 272, "col_offset": 24, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "ir", "type": "Any"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "ir", "type": "Any"}, {"lineNumber": 41, "col_offset": 9, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 51, "col_offset": 48, "nodeName": "const", "type": "Any"}, {"lineNumber": 52, "col_offset": 53, "nodeName": "const", "type": "Any"}, {"lineNumber": 53, "col_offset": 49, "nodeName": "const", "type": "Any"}, {"lineNumber": 54, "col_offset": 54, "nodeName": "const", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 63, "col_offset": 48, "nodeName": "const", "type": "Any"}, {"lineNumber": 64, "col_offset": 53, "nodeName": "const", "type": "Any"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "const", "type": "Any"}, {"lineNumber": 66, "col_offset": 54, "nodeName": "const", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 74, "col_offset": 48, "nodeName": "const", "type": "Any"}, {"lineNumber": 75, "col_offset": 53, "nodeName": "const", "type": "Any"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "const", "type": "Any"}, {"lineNumber": 77, "col_offset": 54, "nodeName": "const", "type": "Any"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "transform", "type": "Any"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "transform", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "transform", "type": "Any"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "transform", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "const", "type": "Any"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "const", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "const", "type": "Any"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "const", "type": "Any"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "kernel_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "target", "type": "Any"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "target", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "ir", "type": "Any"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "target", "type": "Any"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "target", "type": "Any"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 159, "col_offset": 9, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "transform", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 164, "col_offset": 9, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "transform", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "astext", "type": "Any"}, {"lineNumber": 166, "col_offset": 68, "nodeName": "astext", "type": "Any"}, {"lineNumber": 172, "col_offset": 9, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "transform", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "astext", "type": "Any"}, {"lineNumber": 174, "col_offset": 65, "nodeName": "astext", "type": "Any"}, {"lineNumber": 177, "col_offset": 9, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "transform", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "astext", "type": "Any"}, {"lineNumber": 179, "col_offset": 65, "nodeName": "astext", "type": "Any"}, {"lineNumber": 184, "col_offset": 9, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "transform", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "astext", "type": "Any"}, {"lineNumber": 186, "col_offset": 61, "nodeName": "astext", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 199, "col_offset": 33, "nodeName": "const", "type": "Any"}, {"lineNumber": 200, "col_offset": 34, "nodeName": "const", "type": "Any"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "const", "type": "Any"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "const", "type": "Any"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 207, "col_offset": 14, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "target", "type": "Any"}, {"lineNumber": 219, "col_offset": 28, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 223, "col_offset": 13, "nodeName": "target", "type": "Any"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "ir", "type": "Any"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "target", "type": "Any"}, {"lineNumber": 232, "col_offset": 28, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 236, "col_offset": 13, "nodeName": "target", "type": "Any"}, {"lineNumber": 237, "col_offset": 28, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 246, "col_offset": 9, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 247, "col_offset": 24, "nodeName": "transform", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 251, "col_offset": 9, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 252, "col_offset": 24, "nodeName": "transform", "type": "Any"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "astext", "type": "Any"}, {"lineNumber": 253, "col_offset": 67, "nodeName": "astext", "type": "Any"}, {"lineNumber": 259, "col_offset": 9, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 260, "col_offset": 24, "nodeName": "transform", "type": "Any"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "astext", "type": "Any"}, {"lineNumber": 261, "col_offset": 65, "nodeName": "astext", "type": "Any"}, {"lineNumber": 264, "col_offset": 9, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "transform", "type": "Any"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "astext", "type": "Any"}, {"lineNumber": 266, "col_offset": 65, "nodeName": "astext", "type": "Any"}, {"lineNumber": 271, "col_offset": 9, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 272, "col_offset": 24, "nodeName": "transform", "type": "Any"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "astext", "type": "Any"}, {"lineNumber": 273, "col_offset": 61, "nodeName": "astext", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 51, "col_offset": 48, "nodeName": "relay", "type": "Any"}, {"lineNumber": 52, "col_offset": 53, "nodeName": "relay", "type": "Any"}, {"lineNumber": 53, "col_offset": 49, "nodeName": "relay", "type": "Any"}, {"lineNumber": 54, "col_offset": 54, "nodeName": "relay", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 63, "col_offset": 48, "nodeName": "relay", "type": "Any"}, {"lineNumber": 64, "col_offset": 53, "nodeName": "relay", "type": "Any"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "relay", "type": "Any"}, {"lineNumber": 66, "col_offset": 54, "nodeName": "relay", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 74, "col_offset": 48, "nodeName": "relay", "type": "Any"}, {"lineNumber": 75, "col_offset": 53, "nodeName": "relay", "type": "Any"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "relay", "type": "Any"}, {"lineNumber": 77, "col_offset": 54, "nodeName": "relay", "type": "Any"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "relay", "type": "Any"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "relay", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "transform", "type": "Any"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "astext", "type": "Any"}, {"lineNumber": 133, "col_offset": 72, "nodeName": "astext", "type": "Any"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "transform", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "transform", "type": "Any"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "astext", "type": "Any"}, {"lineNumber": 146, "col_offset": 69, "nodeName": "astext", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "transform", "type": "Any"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "astext", "type": "Any"}, {"lineNumber": 151, "col_offset": 69, "nodeName": "astext", "type": "Any"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 166, "col_offset": 68, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 174, "col_offset": 65, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 179, "col_offset": 65, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 186, "col_offset": 61, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 199, "col_offset": 33, "nodeName": "relay", "type": "Any"}, {"lineNumber": 200, "col_offset": 34, "nodeName": "relay", "type": "Any"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 219, "col_offset": 28, "nodeName": "transform", "type": "Any"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "astext", "type": "Any"}, {"lineNumber": 220, "col_offset": 71, "nodeName": "astext", "type": "Any"}, {"lineNumber": 223, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "transform", "type": "Any"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 232, "col_offset": 28, "nodeName": "transform", "type": "Any"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "astext", "type": "Any"}, {"lineNumber": 233, "col_offset": 69, "nodeName": "astext", "type": "Any"}, {"lineNumber": 236, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 237, "col_offset": 28, "nodeName": "transform", "type": "Any"}, {"lineNumber": 238, "col_offset": 29, "nodeName": "astext", "type": "Any"}, {"lineNumber": 238, "col_offset": 69, "nodeName": "astext", "type": "Any"}, {"lineNumber": 247, "col_offset": 24, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 252, "col_offset": 24, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 253, "col_offset": 67, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 260, "col_offset": 24, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 261, "col_offset": 65, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 266, "col_offset": 65, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 272, "col_offset": 24, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 273, "col_offset": 61, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 133, "col_offset": 72, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 146, "col_offset": 69, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 151, "col_offset": 69, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 219, "col_offset": 28, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 220, "col_offset": 71, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 232, "col_offset": 28, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 233, "col_offset": 69, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 237, "col_offset": 28, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 238, "col_offset": 29, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 238, "col_offset": 69, "nodeName": "legalized_mod", "type": "Any"}, {"lineNumber": 247, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 252, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 260, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 272, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 219, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 232, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 237, "col_offset": 28, "nodeName": "relay", "type": "Any"}]