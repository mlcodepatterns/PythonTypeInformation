[{"lineNumber": 23, "col_offset": 0, "nodeName": "run_combine_parallel", "type": "Callable[..., Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "test_combine_parallel_dense", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "test_combine_parallel_dense_biasadd", "type": "Callable[[], Any]"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "test_combine_parallel_dense_biasadd_scale_reshape", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "expected", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "expected", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "expected", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 193, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 24, "col_offset": 10, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 24, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 25, "col_offset": 59, "nodeName": "mod", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "mod", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "opt_pass", "type": "Any"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "Pass", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "opt_pass", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "mod", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "mod", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "y3", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "y4", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "x_stacked", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "y4", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "y3", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "w1", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "w2", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "w3", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "w4", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "y_before", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "x_stacked", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "w1", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "w2", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "is_2d_bias", "type": "bool"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "y_before", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "x_stacked", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "b1", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "b2", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "scale1", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "scale2", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "w1", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "w2", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "b1", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "b2", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "scale1", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "scale2", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "y_before", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "test_combine_parallel_dense", "type": "Callable[[], Any]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "test_combine_parallel_dense_biasadd", "type": "Callable[[], Any]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "test_combine_parallel_dense_biasadd_scale_reshape", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 25, "col_offset": 10, "nodeName": "CombineParallelDense", "type": "Any"}, {"lineNumber": 25, "col_offset": 41, "nodeName": "min_num_branches", "type": "Any"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "transform", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "w1", "type": "Any"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "w2", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "w3", "type": "Any"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "w4", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "dense", "type": "Any"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "w1", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "dense", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "w2", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "dense", "type": "Any"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "w3", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "dense", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "w4", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "w1", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "w2", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "w3", "type": "Any"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "w4", "type": "Any"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "stack", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "stack", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "batch_matmul", "type": "Any"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "x_stacked", "type": "Any"}, {"lineNumber": 54, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 55, "col_offset": 9, "nodeName": "y1", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "y2", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "y4", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "split", "type": "Any"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "y1", "type": "Any"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "y2", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "y4", "type": "Any"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "dense", "type": "Any"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "w3", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "w1", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "w2", "type": "Any"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "w3", "type": "Any"}, {"lineNumber": 73, "col_offset": 41, "nodeName": "w4", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "y_before", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "expected", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "w1", "type": "Any"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "w2", "type": "Any"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "w3", "type": "Any"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "w4", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assert_structural_equal", "type": "Any"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "w1", "type": "Any"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "w2", "type": "Any"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "b1", "type": "Any"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "b2", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "dense", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "w1", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "dense", "type": "Any"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "w2", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "add", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "y1", "type": "Any"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "b1", "type": "Any"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "add", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "y2", "type": "Any"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "b2", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "w1", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "w2", "type": "Any"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "b1", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "b2", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "stack", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "stack", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "batch_matmul", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "x_stacked", "type": "Any"}, {"lineNumber": 99, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "is_2d_bias", "type": "bool"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "b1", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "b2", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "stack", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 107, "col_offset": 9, "nodeName": "y1", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "y2", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "split", "type": "Any"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "y1", "type": "Any"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "y2", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "b1", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "b2", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "b1", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "b2", "type": "Any"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "w1", "type": "Any"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "w2", "type": "Any"}, {"lineNumber": 125, "col_offset": 37, "nodeName": "b1", "type": "Any"}, {"lineNumber": 125, "col_offset": 41, "nodeName": "b2", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "y_before", "type": "Any"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "expected", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "w1", "type": "Any"}, {"lineNumber": 128, "col_offset": 37, "nodeName": "w2", "type": "Any"}, {"lineNumber": 128, "col_offset": 41, "nodeName": "b1", "type": "Any"}, {"lineNumber": 128, "col_offset": 45, "nodeName": "b2", "type": "Any"}, {"lineNumber": 128, "col_offset": 49, "nodeName": "is_2d_bias", "type": "bool"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assert_structural_equal", "type": "Any"}, {"lineNumber": 130, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "w1", "type": "Any"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "w2", "type": "Any"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "b1", "type": "Any"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "b2", "type": "Any"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "scale1", "type": "Any"}, {"lineNumber": 140, "col_offset": 43, "nodeName": "scale2", "type": "Any"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "dense", "type": "Any"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "w1", "type": "Any"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "dense", "type": "Any"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "w2", "type": "Any"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "add", "type": "Any"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "y1", "type": "Any"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "b1", "type": "Any"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "add", "type": "Any"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "y2", "type": "Any"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "b2", "type": "Any"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "y1", "type": "Any"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "scale1", "type": "Any"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "y2", "type": "Any"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "scale2", "type": "Any"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "y1", "type": "Any"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "y2", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "w1", "type": "Any"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "w2", "type": "Any"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "b1", "type": "Any"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "b2", "type": "Any"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "scale1", "type": "Any"}, {"lineNumber": 153, "col_offset": 43, "nodeName": "scale2", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "stack", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "stack", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "batch_matmul", "type": "Any"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "x_stacked", "type": "Any"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "b1", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 158, "col_offset": 31, "nodeName": "b2", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "stack", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "scale1", "type": "Any"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "scale2", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "stack", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "scale", "type": "Any"}, {"lineNumber": 165, "col_offset": 9, "nodeName": "y1", "type": "Any"}, {"lineNumber": 165, "col_offset": 13, "nodeName": "y2", "type": "Any"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "split", "type": "Any"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "y1", "type": "Any"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "y2", "type": "Any"}, {"lineNumber": 168, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "y1", "type": "Any"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "y2", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 171, "col_offset": 30, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "before", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "w1", "type": "Any"}, {"lineNumber": 182, "col_offset": 33, "nodeName": "w2", "type": "Any"}, {"lineNumber": 182, "col_offset": 37, "nodeName": "b1", "type": "Any"}, {"lineNumber": 182, "col_offset": 41, "nodeName": "b2", "type": "Any"}, {"lineNumber": 182, "col_offset": 45, "nodeName": "scale1", "type": "Any"}, {"lineNumber": 182, "col_offset": 53, "nodeName": "scale2", "type": "Any"}, {"lineNumber": 182, "col_offset": 61, "nodeName": "newshape", "type": "Tuple[int, int, int]"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "y_before", "type": "Any"}, {"lineNumber": 185, "col_offset": 21, "nodeName": "expected", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 185, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 185, "col_offset": 33, "nodeName": "w1", "type": "Any"}, {"lineNumber": 185, "col_offset": 37, "nodeName": "w2", "type": "Any"}, {"lineNumber": 185, "col_offset": 41, "nodeName": "b1", "type": "Any"}, {"lineNumber": 185, "col_offset": 45, "nodeName": "b2", "type": "Any"}, {"lineNumber": 185, "col_offset": 49, "nodeName": "scale1", "type": "Any"}, {"lineNumber": 185, "col_offset": 57, "nodeName": "scale2", "type": "Any"}, {"lineNumber": 185, "col_offset": 65, "nodeName": "newshape", "type": "Tuple[int, int, int]"}, {"lineNumber": 186, "col_offset": 21, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assert_structural_equal", "type": "Any"}, {"lineNumber": 187, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 187, "col_offset": 42, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 24, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 25, "col_offset": 10, "nodeName": "transform", "type": "Any"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "y1", "type": "Any"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "y2", "type": "Any"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "y3", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "y4", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 52, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "w1", "type": "Any"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "w2", "type": "Any"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "w4", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "y1", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "y2", "type": "Any"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "y3", "type": "Any"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "y4", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "CombineParallelDense", "type": "Any"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "ir", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "y1", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "y2", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 97, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "w1", "type": "Any"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "w2", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "b1", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "b2", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "b1", "type": "Any"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "b2", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "y1", "type": "Any"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "y2", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "CombineParallelDense", "type": "Any"}, {"lineNumber": 129, "col_offset": 46, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "ir", "type": "Any"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 147, "col_offset": 40, "nodeName": "newshape", "type": "Tuple[int, int, int]"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 148, "col_offset": 40, "nodeName": "newshape", "type": "Tuple[int, int, int]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "y1", "type": "Any"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "y2", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 154, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "w1", "type": "Any"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "w2", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "b1", "type": "Any"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "b2", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "scale1", "type": "Any"}, {"lineNumber": 163, "col_offset": 37, "nodeName": "scale2", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 168, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 168, "col_offset": 40, "nodeName": "newshape", "type": "Tuple[int, int, int]"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 169, "col_offset": 40, "nodeName": "newshape", "type": "Tuple[int, int, int]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "y1", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "y2", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "CombineParallelDense", "type": "Any"}, {"lineNumber": 186, "col_offset": 46, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "ir", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "k", "type": "int"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "j", "type": "int"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "k", "type": "int"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "j", "type": "int"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "k", "type": "int"}, {"lineNumber": 70, "col_offset": 43, "nodeName": "k", "type": "int"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "j", "type": "int"}, {"lineNumber": 71, "col_offset": 39, "nodeName": "k", "type": "int"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "transform", "type": "Any"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "transform", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "k", "type": "int"}, {"lineNumber": 115, "col_offset": 36, "nodeName": "j", "type": "int"}, {"lineNumber": 115, "col_offset": 39, "nodeName": "k", "type": "int"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "j", "type": "int"}, {"lineNumber": 116, "col_offset": 39, "nodeName": "k", "type": "int"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "transform", "type": "Any"}, {"lineNumber": 129, "col_offset": 46, "nodeName": "transform", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "k", "type": "int"}, {"lineNumber": 175, "col_offset": 36, "nodeName": "j", "type": "int"}, {"lineNumber": 175, "col_offset": 39, "nodeName": "k", "type": "int"}, {"lineNumber": 176, "col_offset": 36, "nodeName": "j", "type": "int"}, {"lineNumber": 176, "col_offset": 39, "nodeName": "k", "type": "int"}, {"lineNumber": 177, "col_offset": 36, "nodeName": "j", "type": "int"}, {"lineNumber": 178, "col_offset": 36, "nodeName": "j", "type": "int"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "transform", "type": "Any"}, {"lineNumber": 186, "col_offset": 46, "nodeName": "transform", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "j", "type": "int"}, {"lineNumber": 119, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 119, "col_offset": 43, "nodeName": "j", "type": "int"}, {"lineNumber": 120, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 120, "col_offset": 43, "nodeName": "j", "type": "int"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "j", "type": "int"}, {"lineNumber": 123, "col_offset": 40, "nodeName": "j", "type": "int"}]