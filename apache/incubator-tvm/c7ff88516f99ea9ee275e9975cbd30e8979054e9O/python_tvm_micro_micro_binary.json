[{"lineNumber": 23, "col_offset": 18, "nodeName": "Artifact", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "from_unarchived", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "artifact", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "ARTIFACT_TYPE", "type": "str"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "binary_file", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "debug_files", "type": "None"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "labelled_files", "type": "Union[Dict[str, Union[List[Any], Any]], Dict[Union[Any, str], Union[Any, List[Any]]]]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "metadata", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "binary_file", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "binary_file", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "debug_files", "type": "Any"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "debug_files", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "labelled_files", "type": "Any"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "labelled_files", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "debug_files", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "cls", "type": "Type[MicroBinary]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "binary_file", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "labelled_files", "type": "Union[Dict[Union[Any, str], Union[Any, List[Any]]], Dict[str, Union[List[Any], Any]]]"}, {"lineNumber": 49, "col_offset": 41, "nodeName": "binary_file", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "debug_files", "type": "Any"}, {"lineNumber": 51, "col_offset": 44, "nodeName": "debug_files", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 53, "col_offset": 52, "nodeName": "labelled_files", "type": "Union[Dict[Union[Any, str], Union[Any, List[Any]]], Dict[str, Union[List[Any], Any]]]"}, {"lineNumber": 53, "col_offset": 68, "nodeName": "metadata", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "MicroBinary"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "MicroBinary"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "labelled_files", "type": "Any"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "labelled_files", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "labelled_files", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "debug_files", "type": "Optional[Any]"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "labelled_files", "type": "Any"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "labelled_files", "type": "Any"}, {"lineNumber": 47, "col_offset": 59, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 47, "col_offset": 64, "nodeName": "labelled_files", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 48, "col_offset": 47, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 48, "col_offset": 52, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "labelled_files", "type": "Union[Dict[Union[Any, str], Union[Any, List[Any]]], Dict[str, Union[List[Any], Any]]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "MicroBinary", "type": "Type[MicroBinary]"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "self", "type": "MicroBinary"}]