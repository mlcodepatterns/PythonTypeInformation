[{"lineNumber": 25, "col_offset": 0, "nodeName": "with_tvm", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "verify_matmul", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "test_matmul", "type": "Callable[[], Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "verify_tensordot", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "test_tensordot", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "pls", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "vals_nd", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "out_nd", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "c1", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "c2", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "c1", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "c2", "type": "Any"}, {"lineNumber": 81, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 29, "col_offset": 10, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "arg", "type": "Any"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "args", "type": "Tuple[Any, Any]"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "lam", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 37, "col_offset": 81, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "create_schedule", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "build", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "s", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 45, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 46, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 47, "col_offset": 9, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 48, "col_offset": 9, "nodeName": "with_tvm", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 70, "nodeName": "a", "type": "Any"}, {"lineNumber": 48, "col_offset": 73, "nodeName": "b", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "c1", "type": "Any"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "c2", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "verify_matmul", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "verify_matmul", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "verify_matmul", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "verify_matmul", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "verify_matmul", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "verify_matmul", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "verify_matmul", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "verify_matmul", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 64, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 65, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "tensordot", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "a", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "axes", "type": "int"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "with_tvm", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 59, "nodeName": "a", "type": "Any"}, {"lineNumber": 67, "col_offset": 62, "nodeName": "b", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "c1", "type": "Any"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "c2", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "verify_tensordot", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "verify_tensordot", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "verify_tensordot", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "verify_tensordot", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "verify_tensordot", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "verify_tensordot", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "verify_tensordot", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "test_matmul", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "test_tensordot", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "pls", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "nd", "type": "Any"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "te", "type": "Any"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "op", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "pls", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "out_nd", "type": "Any"}, {"lineNumber": 45, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "transp_a", "type": "bool"}, {"lineNumber": 47, "col_offset": 52, "nodeName": "a", "type": "Any"}, {"lineNumber": 47, "col_offset": 74, "nodeName": "transp_b", "type": "bool"}, {"lineNumber": 47, "col_offset": 88, "nodeName": "b", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 64, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "pls", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "vals_nd", "type": "List[Any]"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "array", "type": "Any"}, {"lineNumber": 34, "col_offset": 36, "nodeName": "arg", "type": "Any"}, {"lineNumber": 34, "col_offset": 41, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "get_const_tuple", "type": "Any"}, {"lineNumber": 37, "col_offset": 51, "nodeName": "shape", "type": "Any"}, {"lineNumber": 37, "col_offset": 69, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "vals_nd", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "a", "type": "Any"}, {"lineNumber": 47, "col_offset": 55, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 47, "col_offset": 68, "nodeName": "b", "type": "Any"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 48, "col_offset": 43, "nodeName": "A", "type": "Any"}, {"lineNumber": 48, "col_offset": 46, "nodeName": "B", "type": "Any"}, {"lineNumber": 48, "col_offset": 49, "nodeName": "transp_a", "type": "bool"}, {"lineNumber": 48, "col_offset": 59, "nodeName": "transp_b", "type": "bool"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "tensordot", "type": "Any"}, {"lineNumber": 67, "col_offset": 46, "nodeName": "A", "type": "Any"}, {"lineNumber": 67, "col_offset": 49, "nodeName": "B", "type": "Any"}, {"lineNumber": 67, "col_offset": 52, "nodeName": "axes", "type": "int"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "te", "type": "Any"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "arg", "type": "Any"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "nd", "type": "Any"}, {"lineNumber": 37, "col_offset": 51, "nodeName": "out", "type": "Any"}, {"lineNumber": 37, "col_offset": 69, "nodeName": "out", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "out_nd", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 45, "col_offset": 51, "nodeName": "sa", "type": "Tuple[int, int]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 46, "col_offset": 51, "nodeName": "sb", "type": "Tuple[int, int]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "topi", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 64, "col_offset": 51, "nodeName": "sa", "type": "int"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 65, "col_offset": 51, "nodeName": "sb", "type": "int"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "topi", "type": "Any"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 33, "col_offset": 61, "nodeName": "i", "type": "int"}]