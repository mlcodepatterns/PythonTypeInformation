[{"lineNumber": 27, "col_offset": 0, "nodeName": "_build_and_run_keras_network", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "test_vgg16", "type": "Callable[[], Any]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "test_mobilenet", "type": "Callable[[], Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "get_model", "type": "Callable[[], Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "get_model", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "acl", "type": "bool"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "device", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "device", "type": "Any"}, {"lineNumber": 79, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "items", "type": "Callable"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "verify", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 7, "nodeName": "skip_runtime_test", "type": "Any"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "Device", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "inputs", "type": "Dict[Any, Tuple[int, int, int, int]]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "_build_and_run_keras_network", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 7, "nodeName": "skip_runtime_test", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "Device", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "inputs", "type": "Dict[Any, Tuple[int, int, int, int]]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "_build_and_run_keras_network", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "test_vgg16", "type": "Callable[[], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "test_mobilenet", "type": "Callable[[], Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "inputs", "type": "Dict[Any, Tuple[int, int, int, int]]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "astype", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "VGG16", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "params", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "from_keras", "type": "Any"}, {"lineNumber": 54, "col_offset": 48, "nodeName": "vgg16", "type": "Any"}, {"lineNumber": 54, "col_offset": 55, "nodeName": "inputs", "type": "Dict[Any, Tuple[int, int, int, int]]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "mod", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "inputs", "type": "Dict[Any, Tuple[int, int, int, int]]"}, {"lineNumber": 57, "col_offset": 54, "nodeName": "device", "type": "Any"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "MobileNet", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "params", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "from_keras", "type": "Any"}, {"lineNumber": 72, "col_offset": 48, "nodeName": "mobilenet", "type": "Any"}, {"lineNumber": 72, "col_offset": 59, "nodeName": "inputs", "type": "Dict[Any, Tuple[int, int, int, int]]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "mod", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "inputs", "type": "Dict[Any, Tuple[int, int, int, int]]"}, {"lineNumber": 75, "col_offset": 54, "nodeName": "device", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "input_names", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "frontend", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "input_names", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "frontend", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 32, "col_offset": 50, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "build_and_run", "type": "Any"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "mod", "type": "Any"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 36, "col_offset": 51, "nodeName": "params", "type": "Any"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "device", "type": "Any"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "vgg16", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "mobilenet", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 37, "col_offset": 56, "nodeName": "acl", "type": "bool"}, {"lineNumber": 38, "col_offset": 45, "nodeName": "tvm_ops", "type": "int"}, {"lineNumber": 39, "col_offset": 52, "nodeName": "acl_partitions", "type": "int"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "np", "type": "module"}]