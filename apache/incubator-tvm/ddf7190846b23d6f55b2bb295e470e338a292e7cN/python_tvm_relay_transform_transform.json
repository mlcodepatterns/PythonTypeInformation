[{"lineNumber": 86, "col_offset": 0, "nodeName": "InferType", "type": "Callable[[], Any]"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "FoldScaleAxis", "type": "Callable[[], Any]"}, {"lineNumber": 115, "col_offset": 0, "nodeName": "BackwardFoldScaleAxis", "type": "Callable[[], Any]"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "RemoveUnusedFunctions", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 0, "nodeName": "ForwardFoldScaleAxis", "type": "Callable[[], Any]"}, {"lineNumber": 165, "col_offset": 0, "nodeName": "SimplifyInference", "type": "Callable[[], Any]"}, {"lineNumber": 177, "col_offset": 0, "nodeName": "FastMath", "type": "Callable[[], Any]"}, {"lineNumber": 188, "col_offset": 0, "nodeName": "CanonicalizeOps", "type": "Callable[[], Any]"}, {"lineNumber": 201, "col_offset": 0, "nodeName": "DeadCodeElimination", "type": "Callable[..., Any]"}, {"lineNumber": 216, "col_offset": 0, "nodeName": "LazyGradientInit", "type": "Callable[[], Any]"}, {"lineNumber": 230, "col_offset": 0, "nodeName": "FoldConstant", "type": "Callable[[], Any]"}, {"lineNumber": 241, "col_offset": 0, "nodeName": "FuseOps", "type": "Callable[..., Any]"}, {"lineNumber": 258, "col_offset": 0, "nodeName": "CombineParallelConv2D", "type": "Callable[..., Any]"}, {"lineNumber": 275, "col_offset": 0, "nodeName": "CombineParallelDense", "type": "Callable[..., Any]"}, {"lineNumber": 307, "col_offset": 0, "nodeName": "AlterOpLayout", "type": "Callable[[], Any]"}, {"lineNumber": 321, "col_offset": 0, "nodeName": "ConvertLayout", "type": "Callable[[Any], Any]"}, {"lineNumber": 352, "col_offset": 0, "nodeName": "Legalize", "type": "Callable[..., Any]"}, {"lineNumber": 372, "col_offset": 0, "nodeName": "MergeComposite", "type": "Callable[[Any], Any]"}, {"lineNumber": 408, "col_offset": 0, "nodeName": "MergeCompilerRegions", "type": "Callable[[], Any]"}, {"lineNumber": 419, "col_offset": 0, "nodeName": "RewriteAnnotatedOps", "type": "Callable[[Any], Any]"}, {"lineNumber": 440, "col_offset": 0, "nodeName": "ToANormalForm", "type": "Callable[[], Any]"}, {"lineNumber": 454, "col_offset": 0, "nodeName": "ToCPS", "type": "Callable[..., Any]"}, {"lineNumber": 468, "col_offset": 0, "nodeName": "EtaExpand", "type": "Callable[..., Any]"}, {"lineNumber": 487, "col_offset": 0, "nodeName": "ToGraphNormalForm", "type": "Callable[[], Any]"}, {"lineNumber": 498, "col_offset": 0, "nodeName": "EliminateCommonSubexpr", "type": "Callable[..., Any]"}, {"lineNumber": 515, "col_offset": 0, "nodeName": "PartialEvaluate", "type": "Callable[[], Any]"}, {"lineNumber": 533, "col_offset": 0, "nodeName": "CanonicalizeCast", "type": "Callable[[], Any]"}, {"lineNumber": 545, "col_offset": 0, "nodeName": "LambdaLift", "type": "Callable[[], Any]"}, {"lineNumber": 557, "col_offset": 0, "nodeName": "PartitionGraph", "type": "Callable[[], Any]"}, {"lineNumber": 570, "col_offset": 0, "nodeName": "AnnotateTarget", "type": "Callable[[Any], Any]"}, {"lineNumber": 590, "col_offset": 0, "nodeName": "Inline", "type": "Callable[[], Any]"}, {"lineNumber": 603, "col_offset": 0, "nodeName": "gradient", "type": "Callable[..., Any]"}, {"lineNumber": 634, "col_offset": 0, "nodeName": "to_cps", "type": "Callable[..., Any]"}, {"lineNumber": 657, "col_offset": 0, "nodeName": "un_cps", "type": "Callable[[Any], Any]"}, {"lineNumber": 677, "col_offset": 0, "nodeName": "_wrap_class_function_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 704, "col_offset": 0, "nodeName": "function_pass", "type": "Callable[..., Any]"}, {"lineNumber": 842, "col_offset": 0, "nodeName": "DenseToSparse", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 863, "col_offset": 0, "nodeName": "SimplifyFCTranspose", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "Pass", "type": "Any"}, {"lineNumber": 824, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 828, "col_offset": 4, "nodeName": "transform_function", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "transform", "type": "Any"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "pattern_names", "type": "List[Any]"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "patterns", "type": "List[Any]"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "checks", "type": "List[Union[Any, Callable[[Any], Any]]]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "tup", "type": "Any"}, {"lineNumber": 394, "col_offset": 15, "nodeName": "pattern_table", "type": "Any"}, {"lineNumber": 653, "col_offset": 4, "nodeName": "use_mod", "type": "Any"}, {"lineNumber": 679, "col_offset": 25, "nodeName": "FunctionPass", "type": "Any"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "__getattr__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 698, "col_offset": 4, "nodeName": "__name__", "type": "str"}, {"lineNumber": 698, "col_offset": 30, "nodeName": "__name__", "type": "str"}, {"lineNumber": 699, "col_offset": 4, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 699, "col_offset": 29, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 700, "col_offset": 4, "nodeName": "__module__", "type": "str"}, {"lineNumber": 700, "col_offset": 32, "nodeName": "__module__", "type": "str"}, {"lineNumber": 701, "col_offset": 11, "nodeName": "PyFunctionPass", "type": "Type[Any]"}, {"lineNumber": 785, "col_offset": 4, "nodeName": "required", "type": "List[nothing]"}, {"lineNumber": 800, "col_offset": 7, "nodeName": "pass_func", "type": "None"}, {"lineNumber": 802, "col_offset": 11, "nodeName": "create_function_pass", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "PassContext", "type": "Any"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "opt_level", "type": "Any"}, {"lineNumber": 75, "col_offset": 51, "nodeName": "required_pass", "type": "Any"}, {"lineNumber": 76, "col_offset": 40, "nodeName": "disabled_pass", "type": "Any"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "trace", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "ir", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "FoldScaleAxis", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "BackwardFoldScaleAxis", "type": "Any"}, {"lineNumber": 144, "col_offset": 7, "nodeName": "entry_functions", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "entry_functions", "type": "List[str]"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "RemoveUnusedFunctions", "type": "Any"}, {"lineNumber": 146, "col_offset": 42, "nodeName": "entry_functions", "type": "Union[Any, List[str]]"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "ForwardFoldScaleAxis", "type": "Any"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "SimplifyInference", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "FastMath", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "CanonicalizeOps", "type": "Any"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "DeadCodeElimination", "type": "Any"}, {"lineNumber": 214, "col_offset": 40, "nodeName": "inline_once", "type": "Any"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "LazyGradientInit", "type": "Any"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "FoldConstant", "type": "Any"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "FuseOps", "type": "Any"}, {"lineNumber": 255, "col_offset": 28, "nodeName": "fuse_opt_level", "type": "Any"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "CombineParallelConv2D", "type": "Any"}, {"lineNumber": 272, "col_offset": 42, "nodeName": "min_num_branches", "type": "Any"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "CombineParallelDense", "type": "Any"}, {"lineNumber": 304, "col_offset": 41, "nodeName": "min_num_branches", "type": "Any"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "AlterOpLayout", "type": "Any"}, {"lineNumber": 349, "col_offset": 11, "nodeName": "ConvertLayout", "type": "Any"}, {"lineNumber": 349, "col_offset": 34, "nodeName": "desired_layouts", "type": "Any"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 369, "col_offset": 29, "nodeName": "legalize_map_attr_name", "type": "Any"}, {"lineNumber": 405, "col_offset": 11, "nodeName": "MergeComposite", "type": "Any"}, {"lineNumber": 405, "col_offset": 35, "nodeName": "pattern_names", "type": "List[Any]"}, {"lineNumber": 405, "col_offset": 50, "nodeName": "patterns", "type": "List[Any]"}, {"lineNumber": 416, "col_offset": 11, "nodeName": "MergeCompilerRegions", "type": "Any"}, {"lineNumber": 437, "col_offset": 11, "nodeName": "RewriteDeviceAnnotation", "type": "Any"}, {"lineNumber": 437, "col_offset": 44, "nodeName": "fallback_device", "type": "Any"}, {"lineNumber": 451, "col_offset": 11, "nodeName": "ToANormalForm", "type": "Any"}, {"lineNumber": 465, "col_offset": 11, "nodeName": "to_cps", "type": "Any"}, {"lineNumber": 465, "col_offset": 27, "nodeName": "expr", "type": "Any"}, {"lineNumber": 465, "col_offset": 33, "nodeName": "mod", "type": "Any"}, {"lineNumber": 484, "col_offset": 11, "nodeName": "EtaExpand", "type": "Any"}, {"lineNumber": 484, "col_offset": 30, "nodeName": "expand_constructor", "type": "Any"}, {"lineNumber": 484, "col_offset": 50, "nodeName": "expand_global_var", "type": "Any"}, {"lineNumber": 495, "col_offset": 11, "nodeName": "ToGraphNormalForm", "type": "Any"}, {"lineNumber": 512, "col_offset": 11, "nodeName": "EliminateCommonSubexpr", "type": "Any"}, {"lineNumber": 512, "col_offset": 43, "nodeName": "fskip", "type": "Any"}, {"lineNumber": 530, "col_offset": 11, "nodeName": "PartialEvaluate", "type": "Any"}, {"lineNumber": 542, "col_offset": 11, "nodeName": "CanonicalizeCast", "type": "Any"}, {"lineNumber": 554, "col_offset": 11, "nodeName": "LambdaLift", "type": "Any"}, {"lineNumber": 566, "col_offset": 11, "nodeName": "PartitionGraph", "type": "Any"}, {"lineNumber": 585, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 585, "col_offset": 18, "nodeName": "targets", "type": "Any"}, {"lineNumber": 585, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 587, "col_offset": 11, "nodeName": "AnnotateTarget", "type": "Any"}, {"lineNumber": 600, "col_offset": 11, "nodeName": "Inline", "type": "Any"}, {"lineNumber": 627, "col_offset": 7, "nodeName": "mode", "type": "Any"}, {"lineNumber": 629, "col_offset": 7, "nodeName": "mode", "type": "Any"}, {"lineNumber": 631, "col_offset": 10, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 653, "col_offset": 14, "nodeName": "mod", "type": "Any"}, {"lineNumber": 654, "col_offset": 11, "nodeName": "to_cps", "type": "Any"}, {"lineNumber": 654, "col_offset": 27, "nodeName": "func", "type": "Any"}, {"lineNumber": 654, "col_offset": 33, "nodeName": "use_mod", "type": "Any"}, {"lineNumber": 674, "col_offset": 11, "nodeName": "un_cps", "type": "Any"}, {"lineNumber": 674, "col_offset": 27, "nodeName": "func", "type": "Any"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "update_wrapper", "type": "Callable[..., Callable[..., Any]]"}, {"lineNumber": 697, "col_offset": 29, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 697, "col_offset": 54, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 698, "col_offset": 4, "nodeName": "PyFunctionPass", "type": "Type[Any]"}, {"lineNumber": 698, "col_offset": 30, "nodeName": "pass_cls", "type": "Type[Any]"}, {"lineNumber": 699, "col_offset": 4, "nodeName": "PyFunctionPass", "type": "Type[Any]"}, {"lineNumber": 699, "col_offset": 29, "nodeName": "pass_cls", "type": "Type[Any]"}, {"lineNumber": 700, "col_offset": 4, "nodeName": "PyFunctionPass", "type": "Type[Any]"}, {"lineNumber": 700, "col_offset": 32, "nodeName": "pass_cls", "type": "Type[Any]"}, {"lineNumber": 782, "col_offset": 7, "nodeName": "opt_level", "type": "int"}, {"lineNumber": 785, "col_offset": 27, "nodeName": "required", "type": "None"}, {"lineNumber": 785, "col_offset": 15, "nodeName": "required", "type": "Any"}, {"lineNumber": 792, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 793, "col_offset": 8, "nodeName": "info", "type": "Any"}, {"lineNumber": 825, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 825, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 826, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 826, "col_offset": 26, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 829, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 830, "col_offset": 8, "nodeName": "change_batch", "type": "Any"}, {"lineNumber": 830, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 831, "col_offset": 33, "nodeName": "ExprMutator", "type": "Any"}, {"lineNumber": 861, "col_offset": 11, "nodeName": "DenseToSparse", "type": "Any"}, {"lineNumber": 861, "col_offset": 34, "nodeName": "weight_name", "type": "Any"}, {"lineNumber": 861, "col_offset": 47, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 879, "col_offset": 11, "nodeName": "SimplifyFCTranspose", "type": "Any"}, {"lineNumber": 879, "col_offset": 40, "nodeName": "target_weight_name", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "transform", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 349, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 396, "col_offset": 36, "nodeName": "tup", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "check", "type": "Callable[[Any], Any]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 401, "col_offset": 29, "nodeName": "pattern_name", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 402, "col_offset": 24, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 403, "col_offset": 22, "nodeName": "check", "type": "Union[Callable[[Any], Any], Any]"}, {"lineNumber": 405, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 405, "col_offset": 61, "nodeName": "checks", "type": "List[Union[Any, Callable[[Any], Any]]]"}, {"lineNumber": 416, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 437, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 451, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 465, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 484, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 495, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 512, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 530, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 542, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 554, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 566, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 586, "col_offset": 19, "nodeName": "targets", "type": "Any"}, {"lineNumber": 587, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 600, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 628, "col_offset": 15, "nodeName": "first_order_gradient", "type": "Any"}, {"lineNumber": 628, "col_offset": 45, "nodeName": "expr", "type": "Any"}, {"lineNumber": 628, "col_offset": 51, "nodeName": "mod", "type": "Any"}, {"lineNumber": 630, "col_offset": 15, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 630, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 630, "col_offset": 39, "nodeName": "mod", "type": "Any"}, {"lineNumber": 653, "col_offset": 21, "nodeName": "mod", "type": "Any"}, {"lineNumber": 653, "col_offset": 42, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 654, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 674, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 683, "col_offset": 12, "nodeName": "handle", "type": "None"}, {"lineNumber": 684, "col_offset": 12, "nodeName": "inst", "type": "Any"}, {"lineNumber": 691, "col_offset": 12, "nodeName": "_inst", "type": "Any"}, {"lineNumber": 691, "col_offset": 25, "nodeName": "inst", "type": "Any"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "functools", "type": "module"}, {"lineNumber": 697, "col_offset": 29, "nodeName": "PyFunctionPass", "type": "Type[Any]"}, {"lineNumber": 697, "col_offset": 54, "nodeName": "pass_cls", "type": "Type[Any]"}, {"lineNumber": 783, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 786, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 786, "col_offset": 22, "nodeName": "required", "type": "List[nothing]"}, {"lineNumber": 787, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 792, "col_offset": 24, "nodeName": "name", "type": "None"}, {"lineNumber": 792, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 792, "col_offset": 34, "nodeName": "__name__", "type": "str"}, {"lineNumber": 793, "col_offset": 15, "nodeName": "PassInfo", "type": "Any"}, {"lineNumber": 793, "col_offset": 38, "nodeName": "opt_level", "type": "int"}, {"lineNumber": 793, "col_offset": 49, "nodeName": "fname", "type": "str"}, {"lineNumber": 793, "col_offset": 56, "nodeName": "required", "type": "List[nothing]"}, {"lineNumber": 794, "col_offset": 11, "nodeName": "isclass", "type": "Callable[[object], bool]"}, {"lineNumber": 794, "col_offset": 27, "nodeName": "pass_arg", "type": "Type[Any]"}, {"lineNumber": 798, "col_offset": 15, "nodeName": "MakeFunctionPass", "type": "Any"}, {"lineNumber": 798, "col_offset": 41, "nodeName": "pass_arg", "type": "Type[Any]"}, {"lineNumber": 798, "col_offset": 51, "nodeName": "info", "type": "Any"}, {"lineNumber": 801, "col_offset": 15, "nodeName": "create_function_pass", "type": "Callable[[Any], Any]"}, {"lineNumber": 801, "col_offset": 36, "nodeName": "pass_func", "type": "Any"}, {"lineNumber": 825, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 826, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 829, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 829, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 829, "col_offset": 43, "nodeName": "body", "type": "Any"}, {"lineNumber": 829, "col_offset": 60, "nodeName": "type_params", "type": "Any"}, {"lineNumber": 829, "col_offset": 78, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 831, "col_offset": 33, "nodeName": "relay", "type": "Any"}, {"lineNumber": 839, "col_offset": 15, "nodeName": "visit", "type": "Any"}, {"lineNumber": 839, "col_offset": 42, "nodeName": "func", "type": "Any"}, {"lineNumber": 861, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 879, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 395, "col_offset": 15, "nodeName": "tup", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "pattern_name", "type": "Any"}, {"lineNumber": 396, "col_offset": 26, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 399, "col_offset": 43, "nodeName": "tup", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "pattern_names", "type": "List[Any]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "patterns", "type": "List[Any]"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "checks", "type": "List[Union[Any, Callable[[Any], Any]]]"}, {"lineNumber": 587, "col_offset": 36, "nodeName": "String", "type": "Any"}, {"lineNumber": 587, "col_offset": 65, "nodeName": "t", "type": "Any"}, {"lineNumber": 587, "col_offset": 72, "nodeName": "t", "type": "Any"}, {"lineNumber": 587, "col_offset": 77, "nodeName": "targets", "type": "Union[Any, List[Any]]"}, {"lineNumber": 628, "col_offset": 15, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 630, "col_offset": 15, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 653, "col_offset": 42, "nodeName": "ir", "type": "Any"}, {"lineNumber": 683, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 684, "col_offset": 19, "nodeName": "pass_cls", "type": "Type[Any]"}, {"lineNumber": 689, "col_offset": 12, "nodeName": "__init_handle_by_constructor__", "type": "Any"}, {"lineNumber": 690, "col_offset": 16, "nodeName": "MakeFunctionPass", "type": "Any"}, {"lineNumber": 690, "col_offset": 43, "nodeName": "_pass_func", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 690, "col_offset": 55, "nodeName": "pass_info", "type": "Any"}, {"lineNumber": 691, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 695, "col_offset": 19, "nodeName": "__getattribute__", "type": "Callable[[Any], Any]"}, {"lineNumber": 695, "col_offset": 47, "nodeName": "name", "type": "Any"}, {"lineNumber": 786, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 786, "col_offset": 39, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 792, "col_offset": 34, "nodeName": "pass_arg", "type": "Type[Any]"}, {"lineNumber": 793, "col_offset": 15, "nodeName": "transform", "type": "Any"}, {"lineNumber": 794, "col_offset": 11, "nodeName": "inspect", "type": "module"}, {"lineNumber": 795, "col_offset": 19, "nodeName": "_wrap_class_function_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 795, "col_offset": 45, "nodeName": "pass_arg", "type": "Type[Any]"}, {"lineNumber": 795, "col_offset": 55, "nodeName": "info", "type": "Any"}, {"lineNumber": 796, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 796, "col_offset": 26, "nodeName": "pass_arg", "type": "Type[Any]"}, {"lineNumber": 797, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 798, "col_offset": 15, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 829, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 829, "col_offset": 30, "nodeName": "func", "type": "Any"}, {"lineNumber": 829, "col_offset": 43, "nodeName": "func", "type": "Any"}, {"lineNumber": 829, "col_offset": 60, "nodeName": "func", "type": "Any"}, {"lineNumber": 829, "col_offset": 78, "nodeName": "func", "type": "Any"}, {"lineNumber": 831, "col_offset": 33, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 838, "col_offset": 23, "nodeName": "var", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 398, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 398, "col_offset": 17, "nodeName": "tup", "type": "Any"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "pattern_name", "type": "Any"}, {"lineNumber": 399, "col_offset": 26, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 399, "col_offset": 35, "nodeName": "check", "type": "Any"}, {"lineNumber": 587, "col_offset": 36, "nodeName": "container", "type": "Any"}, {"lineNumber": 653, "col_offset": 42, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 684, "col_offset": 29, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 684, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 688, "col_offset": 23, "nodeName": "transform_function", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 688, "col_offset": 47, "nodeName": "func", "type": "Any"}, {"lineNumber": 688, "col_offset": 53, "nodeName": "mod", "type": "Any"}, {"lineNumber": 688, "col_offset": 58, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 689, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 690, "col_offset": 16, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 695, "col_offset": 19, "nodeName": "_inst", "type": "Any"}, {"lineNumber": 793, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 796, "col_offset": 37, "nodeName": "FunctionType", "type": "Type[Callable[..., Any]]"}, {"lineNumber": 796, "col_offset": 57, "nodeName": "LambdaType", "type": "Type[Callable[..., Any]]"}, {"lineNumber": 833, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 833, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 834, "col_offset": 20, "nodeName": "ty", "type": "Any"}, {"lineNumber": 834, "col_offset": 25, "nodeName": "type_annotation", "type": "Any"}, {"lineNumber": 835, "col_offset": 20, "nodeName": "new_shape", "type": "List[Any]"}, {"lineNumber": 836, "col_offset": 56, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 839, "col_offset": 15, "nodeName": "ChangeBatchMutator", "type": "Type[Any]"}, {"lineNumber": 587, "col_offset": 36, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 688, "col_offset": 23, "nodeName": "inst", "type": "Any"}, {"lineNumber": 695, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 796, "col_offset": 37, "nodeName": "types", "type": "module"}, {"lineNumber": 796, "col_offset": 57, "nodeName": "types", "type": "module"}, {"lineNumber": 833, "col_offset": 26, "nodeName": "change_batch", "type": "Any"}, {"lineNumber": 834, "col_offset": 25, "nodeName": "var", "type": "Any"}, {"lineNumber": 835, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 835, "col_offset": 37, "nodeName": "shape", "type": "Any"}, {"lineNumber": 836, "col_offset": 20, "nodeName": "new_shape", "type": "List[Any]"}, {"lineNumber": 836, "col_offset": 56, "nodeName": "change_batch", "type": "Any"}, {"lineNumber": 837, "col_offset": 27, "nodeName": "Var", "type": "Any"}, {"lineNumber": 837, "col_offset": 37, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 587, "col_offset": 36, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 835, "col_offset": 37, "nodeName": "ty", "type": "Any"}, {"lineNumber": 837, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 837, "col_offset": 37, "nodeName": "var", "type": "Any"}, {"lineNumber": 837, "col_offset": 52, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 837, "col_offset": 69, "nodeName": "new_shape", "type": "List[Any]"}, {"lineNumber": 837, "col_offset": 80, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 836, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 837, "col_offset": 52, "nodeName": "relay", "type": "Any"}, {"lineNumber": 837, "col_offset": 80, "nodeName": "ty", "type": "Any"}, {"lineNumber": 836, "col_offset": 30, "nodeName": "change_batch", "type": "Any"}, {"lineNumber": 836, "col_offset": 48, "nodeName": "var", "type": "Any"}]