[{"lineNumber": 36, "col_offset": 0, "nodeName": "func_to_onnx", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "run_onnx", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "get_data", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "run_relay", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "_verify_results", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "test_resnet", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "test_squeezenet", "type": "Callable[[], Any]"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "test_partition", "type": "Callable[[], Any]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "importorskip", "type": "Any"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "importorskip", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "sess", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "input_names", "type": "Dict[Any, Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "in_data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "in_data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "target", "type": "str"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "dev", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "intrp", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "in_data", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "num_class", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "in_data_shapes", "type": "collections.OrderedDict[str, Tuple[int, int, int, int]]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "in_data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "in_data_shapes", "type": "collections.OrderedDict[str, Tuple[int, int, int, int]]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "in_data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "version", "type": "str"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "in_1", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "in_2", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "in_3", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "in_4", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "in_5", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "in_6", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "in_7", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "in_8", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "in_9", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "in_10", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "begin0", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "begin1", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "begin2", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "begin3", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "node0", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "node1", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "end0", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "end1", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "begin4", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "begin5", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "node2", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "end2", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "dbegin0", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "dbegin1", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "node3", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "dbegin2", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "dend1", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "dbegin3", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "node4", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "dend2", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "begin6", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "begin7", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "node5", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "end3", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "end4", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "dbegin4", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "dbegin5", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "node6", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "begin8", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "begin9", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "node7", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "end5", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "dend3", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "begin10", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "begin11", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "node8", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "end6", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "begin12", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "begin13", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "node9", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "end7", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "target", "type": "str"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 164, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "to_onnx", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "mod", "type": "Any"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "name", "type": "str"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "SerializeToString", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "func_to_onnx", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "mod", "type": "Any"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "params", "type": "Any"}, {"lineNumber": 42, "col_offset": 43, "nodeName": "name", "type": "str"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "InferenceSession", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "input_data", "type": "collections._OrderedDictValuesView[Any]"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 48, "col_offset": 10, "nodeName": "run", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "input_names", "type": "Dict[Any, Any]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "items", "type": "Callable"}, {"lineNumber": 61, "col_offset": 10, "nodeName": "device", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "create_executor", "type": "Any"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "mod", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "run_relay", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "mod", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "params", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "in_data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "run_onnx", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "mod", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "params", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "b", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "get_data", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "in_data_shapes", "type": "collections.OrderedDict[str, Tuple[int, int, int, int]]"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "get_data", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "in_data_shapes", "type": "collections.OrderedDict[str, Tuple[int, int, int, int]]"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "compiler_begin", "type": "Any"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "in_1", "type": "Any"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "compiler_begin", "type": "Any"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "in_2", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "compiler_begin", "type": "Any"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "in_3", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "compiler_begin", "type": "Any"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "in_4", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "begin0", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "begin1", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "begin2", "type": "Any"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "begin3", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "compiler_end", "type": "Any"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "node0", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "compiler_end", "type": "Any"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "node1", "type": "Any"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "compiler_begin", "type": "Any"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "end0", "type": "Any"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "compiler_begin", "type": "Any"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "end1", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "begin4", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "begin5", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "compiler_end", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "node2", "type": "Any"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "compiler_begin", "type": "Any"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "in_5", "type": "Any"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "compiler_begin", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "in_6", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "subtract", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "dbegin0", "type": "Any"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "dbegin1", "type": "Any"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "compiler_begin", "type": "Any"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "in_7", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "compiler_end", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "node3", "type": "Any"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "compiler_begin", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "dend1", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "subtract", "type": "Any"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "dbegin2", "type": "Any"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "dbegin3", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "compiler_end", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "node4", "type": "Any"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "compiler_begin", "type": "Any"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "end2", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "compiler_begin", "type": "Any"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "dend2", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "begin6", "type": "Any"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "begin7", "type": "Any"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "compiler_end", "type": "Any"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "node5", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "compiler_end", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "node5", "type": "Any"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "compiler_begin", "type": "Any"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "in_8", "type": "Any"}, {"lineNumber": 131, "col_offset": 14, "nodeName": "compiler_begin", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "end3", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "subtract", "type": "Any"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "dbegin4", "type": "Any"}, {"lineNumber": 132, "col_offset": 36, "nodeName": "dbegin5", "type": "Any"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "compiler_begin", "type": "Any"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "in_9", "type": "Any"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "compiler_begin", "type": "Any"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "end4", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "begin8", "type": "Any"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "begin9", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "compiler_end", "type": "Any"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "node7", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "compiler_end", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "node6", "type": "Any"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "compiler_begin", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "dend3", "type": "Any"}, {"lineNumber": 140, "col_offset": 14, "nodeName": "compiler_begin", "type": "Any"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "end5", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "begin10", "type": "Any"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "begin11", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "compiler_end", "type": "Any"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "node8", "type": "Any"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "compiler_begin", "type": "Any"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "in_10", "type": "Any"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "compiler_begin", "type": "Any"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "end6", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "begin12", "type": "Any"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "begin13", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "compiler_end", "type": "Any"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "node9", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "Function", "type": "Any"}, {"lineNumber": 148, "col_offset": 89, "nodeName": "end7", "type": "Any"}, {"lineNumber": 151, "col_offset": 10, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "func", "type": "Any"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "mod", "type": "Any"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "type_key", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "type_key", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "get_source", "type": "Any"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "type_key", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "get_source", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "test_resnet", "type": "Callable[[], Any]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "test_squeezenet", "type": "Callable[[], Any]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "test_partition", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "rt", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "get_inputs", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "input_names", "type": "Dict[Any, Any]"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 48, "col_offset": 10, "nodeName": "sess", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "in_data_shapes", "type": "collections.OrderedDict[str, Tuple[int, int, int, int]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "in_data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "astype", "type": "Any"}, {"lineNumber": 55, "col_offset": 61, "nodeName": "dtype", "type": "str"}, {"lineNumber": 61, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 62, "col_offset": 55, "nodeName": "dev", "type": "Any"}, {"lineNumber": 62, "col_offset": 67, "nodeName": "target", "type": "str"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "array", "type": "Any"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "value", "type": "Any"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "value", "type": "Any"}, {"lineNumber": 69, "col_offset": 45, "nodeName": "values", "type": "Callable"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "params", "type": "Any"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "get_workload", "type": "Any"}, {"lineNumber": 78, "col_offset": 63, "nodeName": "num_class", "type": "int"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "_verify_results", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "mod", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "params", "type": "Any"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "in_data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "params", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "get_workload", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "_verify_results", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "mod", "type": "Any"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "params", "type": "Any"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "in_data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "in_1", "type": "Any"}, {"lineNumber": 148, "col_offset": 33, "nodeName": "in_2", "type": "Any"}, {"lineNumber": 148, "col_offset": 39, "nodeName": "in_3", "type": "Any"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "in_4", "type": "Any"}, {"lineNumber": 148, "col_offset": 51, "nodeName": "in_5", "type": "Any"}, {"lineNumber": 148, "col_offset": 57, "nodeName": "in_6", "type": "Any"}, {"lineNumber": 148, "col_offset": 63, "nodeName": "in_7", "type": "Any"}, {"lineNumber": 148, "col_offset": 69, "nodeName": "in_8", "type": "Any"}, {"lineNumber": 148, "col_offset": 75, "nodeName": "in_9", "type": "Any"}, {"lineNumber": 148, "col_offset": 81, "nodeName": "in_10", "type": "Any"}, {"lineNumber": 151, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 152, "col_offset": 10, "nodeName": "PartitionGraph", "type": "Any"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "PassContext", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "graph_json", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "mod1", "type": "Any"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "params", "type": "Any"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "build", "type": "Any"}, {"lineNumber": 155, "col_offset": 47, "nodeName": "mod", "type": "Any"}, {"lineNumber": 155, "col_offset": 52, "nodeName": "target", "type": "str"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "mod1", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "sess", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 47, "col_offset": 46, "nodeName": "get_outputs", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "nd", "type": "Any"}, {"lineNumber": 63, "col_offset": 48, "nodeName": "values", "type": "Callable"}, {"lineNumber": 69, "col_offset": 45, "nodeName": "in_data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "resnet", "type": "Any"}, {"lineNumber": 78, "col_offset": 85, "nodeName": "n", "type": "int"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "squeezenet", "type": "Any"}, {"lineNumber": 86, "col_offset": 75, "nodeName": "version", "type": "str"}, {"lineNumber": 152, "col_offset": 10, "nodeName": "transform", "type": "Any"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "transform", "type": "Any"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "relay", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "imported_modules", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "imported_modules", "type": "Any"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "imported_modules", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "imported_modules", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "input", "type": "Any"}, {"lineNumber": 47, "col_offset": 46, "nodeName": "sess", "type": "Any"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 63, "col_offset": 48, "nodeName": "in_data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "in_data", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "params", "type": "Any"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "testing", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "testing", "type": "Any"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "mod1", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "mod1", "type": "Any"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "mod1", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "mod1", "type": "Any"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 55, "col_offset": 47, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "intrp", "type": "Any"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "tvm", "type": "Any"}]