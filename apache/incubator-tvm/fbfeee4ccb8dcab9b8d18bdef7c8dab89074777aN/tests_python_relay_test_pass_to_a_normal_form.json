[{"lineNumber": 28, "col_offset": 0, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "check_eval", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "test_explicit_bound", "type": "Callable[[], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "test_order", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "test_if", "type": "Callable[[], Any]"}, {"lineNumber": 101, "col_offset": 0, "nodeName": "test_recursion", "type": "Callable[[], Any]"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "test_ref", "type": "Callable[[], Any]"}, {"lineNumber": 146, "col_offset": 0, "nodeName": "test_nat_add", "type": "Callable[[], Any]"}, {"lineNumber": 165, "col_offset": 0, "nodeName": "test_let", "type": "Callable[[], Any]"}, {"lineNumber": 176, "col_offset": 0, "nodeName": "test_function", "type": "Callable[[], Any]"}, {"lineNumber": 187, "col_offset": 0, "nodeName": "test_gradient_if", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "passes", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "seq", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "entry", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "dev", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "intrp", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "z", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "anf", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "z", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "val", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "anf", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "c", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "e", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "cond", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "anf", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "c", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "true_branch", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "false_branch", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "i64", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "n", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "value", "type": "Any"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "value", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "old_f", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "i", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "iv", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "u", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "uv", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "body", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "body", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "body", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "body", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "body", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "opt_body", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "p", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "dev", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "intrp", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "expr", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "expr", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "body", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "body", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "opt_body", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "anf_f", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "cond", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 201, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "passes", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "passes", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "entry", "type": "Any"}, {"lineNumber": 35, "col_offset": 58, "nodeName": "body", "type": "Any"}, {"lineNumber": 39, "col_offset": 10, "nodeName": "device", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "create_executor", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "expr", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 43, "col_offset": 49, "nodeName": "expected_result", "type": "float"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "const", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "y", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "Function", "type": "Any"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "f", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "fLet", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "check_eval", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "check_eval", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "const", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "const", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "const", "type": "Any"}, {"lineNumber": 64, "col_offset": 10, "nodeName": "x", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "check_eval", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "val", "type": "Any"}, {"lineNumber": 66, "col_offset": 10, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "val", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "Let", "type": "Any"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "e", "type": "Any"}, {"lineNumber": 73, "col_offset": 42, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "Let", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "d", "type": "Any"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "Let", "type": "Any"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "z", "type": "Any"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "Let", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "b", "type": "Any"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "Let", "type": "Any"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "a", "type": "Any"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "anf", "type": "Any"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "const", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "If", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "cond", "type": "Any"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "Let", "type": "Any"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 90, "col_offset": 47, "nodeName": "a", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "Let", "type": "Any"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "b", "type": "Any"}, {"lineNumber": 91, "col_offset": 48, "nodeName": "b", "type": "Any"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "If", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "c", "type": "Any"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "true_branch", "type": "Any"}, {"lineNumber": 92, "col_offset": 47, "nodeName": "false_branch", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "Let", "type": "Any"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "d", "type": "Any"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 93, "col_offset": 52, "nodeName": "d", "type": "Any"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "Let", "type": "Any"}, {"lineNumber": 94, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "cond", "type": "Any"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "anf", "type": "Any"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 114, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 115, "col_offset": 10, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "GlobalVar", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "i64", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "If", "type": "Any"}, {"lineNumber": 120, "col_offset": 49, "nodeName": "m", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 122, "col_offset": 32, "nodeName": "funcbody", "type": "Any"}, {"lineNumber": 122, "col_offset": 42, "nodeName": "i64", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "check_eval", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "mod", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "check_eval", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 133, "col_offset": 9, "nodeName": "Var", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 135, "col_offset": 9, "nodeName": "Var", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "add", "type": "Any"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "iv", "type": "Any"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "uv", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "Let", "type": "Any"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "uv", "type": "Any"}, {"lineNumber": 137, "col_offset": 43, "nodeName": "body", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "Let", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "u", "type": "Any"}, {"lineNumber": 138, "col_offset": 59, "nodeName": "body", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "Let", "type": "Any"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "iv", "type": "Any"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "body", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "Let", "type": "Any"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "i", "type": "Any"}, {"lineNumber": 140, "col_offset": 57, "nodeName": "body", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "check_eval", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "body", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "body", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "check_eval", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "opt_body", "type": "Any"}, {"lineNumber": 147, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "Prelude", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "import_from_std", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "nat", "type": "Any"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "z", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "get_type", "type": "Any"}, {"lineNumber": 151, "col_offset": 10, "nodeName": "get_global_var", "type": "Any"}, {"lineNumber": 152, "col_offset": 10, "nodeName": "device", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "create_executor", "type": "Any"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "checked_type", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "add", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "GlobalVar", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "Function", "type": "Any"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "expr", "type": "Any"}, {"lineNumber": 159, "col_offset": 36, "nodeName": "mod", "type": "Any"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "mod", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "fLet", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "const", "type": "Any"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "Let", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "Let", "type": "Any"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "d", "type": "Any"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "body", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "check_eval", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "body", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "body", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "check_eval", "type": "Callable[..., Any]"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "opt_body", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "t", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "Function", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "const", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "f", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "anf_f", "type": "Any"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "Function", "type": "Any"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "check_eval", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "check_eval", "type": "Callable[..., Any]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 191, "col_offset": 10, "nodeName": "If", "type": "Any"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "cond", "type": "Any"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 191, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 192, "col_offset": 10, "nodeName": "add", "type": "Any"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "net", "type": "Any"}, {"lineNumber": 193, "col_offset": 10, "nodeName": "Function", "type": "Any"}, {"lineNumber": 193, "col_offset": 39, "nodeName": "net", "type": "Any"}, {"lineNumber": 194, "col_offset": 10, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 194, "col_offset": 33, "nodeName": "net", "type": "Any"}, {"lineNumber": 195, "col_offset": 42, "nodeName": "mod", "type": "Any"}, {"lineNumber": 196, "col_offset": 38, "nodeName": "mod", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 198, "col_offset": 42, "nodeName": "mod", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "test_explicit_bound", "type": "Callable[[], Any]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "test_order", "type": "Callable[[], Any]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "test_if", "type": "Callable[[], Any]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "test_recursion", "type": "Callable[[], Any]"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "test_ref", "type": "Callable[[], Any]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "test_let", "type": "Callable[[], Any]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "test_nat_add", "type": "Callable[[], Any]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "test_function", "type": "Callable[[], Any]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "test_gradient_if", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "passes", "type": "Any"}, {"lineNumber": 29, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 29, "col_offset": 54, "nodeName": "passes", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "transform", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "PassContext", "type": "Any"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "seq", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "mod", "type": "Any"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "expr", "type": "Any"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "Function", "type": "Any"}, {"lineNumber": 35, "col_offset": 58, "nodeName": "entry", "type": "Any"}, {"lineNumber": 39, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "mod", "type": "None"}, {"lineNumber": 40, "col_offset": 44, "nodeName": "dev", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "intrp", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 43, "col_offset": 71, "nodeName": "rtol", "type": "float"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "op", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "op", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "add", "type": "Any"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "z", "type": "Any"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "z", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "fLet", "type": "Any"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "ToANormalForm", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "Feature", "type": "Any"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "detect_feature", "type": "Any"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "anf", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "f", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "anf", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "y", "type": "Any"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "z", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "IncompleteType", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "IncompleteType", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "IncompleteType", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "IncompleteType", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "IncompleteType", "type": "Any"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "a", "type": "Any"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "d", "type": "Any"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "c", "type": "Any"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 78, "col_offset": 52, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "const", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "const", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "IncompleteType", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "IncompleteType", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "IncompleteType", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "IncompleteType", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "const", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "const", "type": "Any"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 95, "col_offset": 52, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 114, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 115, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "const", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "equal", "type": "Any"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "n", "type": "Any"}, {"lineNumber": 120, "col_offset": 52, "nodeName": "m", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "n", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "f", "type": "Any"}, {"lineNumber": 124, "col_offset": 53, "nodeName": "mod", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 126, "col_offset": 10, "nodeName": "ToANormalForm", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "f", "type": "Any"}, {"lineNumber": 128, "col_offset": 53, "nodeName": "mod", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 133, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 135, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "RefRead", "type": "Any"}, {"lineNumber": 137, "col_offset": 39, "nodeName": "i", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "RefWrite", "type": "Any"}, {"lineNumber": 138, "col_offset": 39, "nodeName": "i", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "RefRead", "type": "Any"}, {"lineNumber": 139, "col_offset": 39, "nodeName": "i", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "RefCreate", "type": "Any"}, {"lineNumber": 142, "col_offset": 34, "nodeName": "ToANormalForm", "type": "Any"}, {"lineNumber": 147, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 151, "col_offset": 10, "nodeName": "mod", "type": "Any"}, {"lineNumber": 152, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "mod", "type": "Any"}, {"lineNumber": 153, "col_offset": 44, "nodeName": "dev", "type": "Any"}, {"lineNumber": 154, "col_offset": 36, "nodeName": "FuncType", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "count", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "s", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 159, "col_offset": 10, "nodeName": "ToANormalForm", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "count", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "Feature", "type": "Any"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "detect_feature", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "ToANormalForm", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 179, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 179, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "ToANormalForm", "type": "Any"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "f", "type": "Any"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "anf_f", "type": "Any"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "d", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 191, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 192, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 193, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 193, "col_offset": 26, "nodeName": "cond", "type": "Any"}, {"lineNumber": 193, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 193, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 194, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 195, "col_offset": 10, "nodeName": "ToANormalForm", "type": "Any"}, {"lineNumber": 196, "col_offset": 10, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "transform", "type": "Any"}, {"lineNumber": 197, "col_offset": 43, "nodeName": "mod", "type": "Any"}, {"lineNumber": 198, "col_offset": 10, "nodeName": "ToANormalForm", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "transform", "type": "Any"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "relay", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "op", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "Feature", "type": "Any"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "detect_feature", "type": "Any"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "f", "type": "Any"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "transform", "type": "Any"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "ToANormalForm", "type": "Any"}, {"lineNumber": 66, "col_offset": 56, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 78, "col_offset": 52, "nodeName": "transform", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "relay", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "ToANormalForm", "type": "Any"}, {"lineNumber": 85, "col_offset": 54, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "relay", "type": "Any"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "relay", "type": "Any"}, {"lineNumber": 95, "col_offset": 52, "nodeName": "transform", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "const", "type": "Any"}, {"lineNumber": 120, "col_offset": 56, "nodeName": "f", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "const", "type": "Any"}, {"lineNumber": 126, "col_offset": 10, "nodeName": "transform", "type": "Any"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "const", "type": "Any"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 138, "col_offset": 42, "nodeName": "const", "type": "Any"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 140, "col_offset": 40, "nodeName": "const", "type": "Any"}, {"lineNumber": 142, "col_offset": 34, "nodeName": "transform", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "p", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 151, "col_offset": 10, "nodeName": "p", "type": "Any"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "mod", "type": "Any"}, {"lineNumber": 154, "col_offset": 36, "nodeName": "relay", "type": "Any"}, {"lineNumber": 154, "col_offset": 67, "nodeName": "nat", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "z", "type": "Any"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "z", "type": "Any"}, {"lineNumber": 159, "col_offset": 10, "nodeName": "transform", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "body", "type": "Any"}, {"lineNumber": 162, "col_offset": 42, "nodeName": "mod", "type": "Any"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "transform", "type": "Any"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "transform", "type": "Any"}, {"lineNumber": 194, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 195, "col_offset": 10, "nodeName": "transform", "type": "Any"}, {"lineNumber": 196, "col_offset": 10, "nodeName": "transform", "type": "Any"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 198, "col_offset": 10, "nodeName": "transform", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "transform", "type": "Any"}, {"lineNumber": 66, "col_offset": 56, "nodeName": "transform", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "transform", "type": "Any"}, {"lineNumber": 85, "col_offset": 54, "nodeName": "transform", "type": "Any"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 120, "col_offset": 58, "nodeName": "n", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 138, "col_offset": 42, "nodeName": "relay", "type": "Any"}, {"lineNumber": 140, "col_offset": 40, "nodeName": "relay", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "add", "type": "Any"}, {"lineNumber": 154, "col_offset": 52, "nodeName": "nat", "type": "Any"}, {"lineNumber": 154, "col_offset": 59, "nodeName": "nat", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "intrp", "type": "Any"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "add", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "intrp", "type": "Any"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "expr", "type": "Any"}, {"lineNumber": 162, "col_offset": 46, "nodeName": "add", "type": "Any"}, {"lineNumber": 195, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 196, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 198, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 120, "col_offset": 62, "nodeName": "const", "type": "Any"}, {"lineNumber": 155, "col_offset": 39, "nodeName": "s", "type": "Any"}, {"lineNumber": 155, "col_offset": 47, "nodeName": "s", "type": "Any"}, {"lineNumber": 120, "col_offset": 62, "nodeName": "relay", "type": "Any"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "z", "type": "Any"}, {"lineNumber": 155, "col_offset": 49, "nodeName": "z", "type": "Any"}]