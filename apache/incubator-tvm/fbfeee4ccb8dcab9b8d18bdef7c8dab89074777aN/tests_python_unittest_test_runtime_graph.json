[{"lineNumber": 27, "col_offset": 0, "nodeName": "test_graph_simple", "type": "Callable[[], Any]"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "test_load_unexpected_params", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "check_sharing", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "n", "type": "int"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "A", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "B", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "node0", "type": "Dict[str, Union[str, List[nothing]]]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "nodes", "type": "List[Union[Dict[str, Union[str, List[nothing]]], Dict[str, Union[str, List[List[int]], Dict[str, str]]]]]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "arg_nodes", "type": "List[int]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "node_row_ptr", "type": "List[int]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "outputs", "type": "List[List[int]]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "graph", "type": "str"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "z", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "graph_module", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "new_params", "type": "Any"}, {"lineNumber": 142, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "compute", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "create_schedule", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "op", "type": "Any"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "node0", "type": "Dict[str, Union[str, List[nothing]]]"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "node1", "type": "Dict[str, Union[str, List[List[int]], Dict[str, str]]]"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "nodes", "type": "List[Union[Dict[str, Union[str, List[nothing]]], Dict[str, Union[str, List[List[int]], Dict[str, str]]]]]"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "arg_nodes", "type": "List[int]"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "node_row_ptr", "type": "List[int]"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "outputs", "type": "List[List[int]]"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "attrs", "type": "Dict[str, Union[List[Union[str, List[Tuple[int]]]], List[Union[str, List[str]]], List[Union[str, List[int]]]]]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "graph", "type": "Dict[str, Union[List[Union[Dict[str, Union[str, List[nothing]]], Dict[str, Union[str, List[List[int]], Dict[str, str]]]]], List[int], List[List[int]], Dict[str, Union[List[Union[str, List[Tuple[int]]]], List[Union[str, List[str]]], List[Union[str, List[int]]]]]]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "mlib", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "mlib", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "server", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "remote", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "temp", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "dev", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "path_dso", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "mlib", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "x_in", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "mod_shared", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "num_mods", "type": "int"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "mods", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "mods", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "mods", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "mods", "type": "List[Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "check_verify", "type": "Callable[[], Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "check_remote", "type": "Callable[[], Any]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "check_sharing", "type": "Callable[[], Any]"}, {"lineNumber": 125, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "Function", "type": "Any"}, {"lineNumber": 130, "col_offset": 41, "nodeName": "z", "type": "Any"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "build", "type": "Any"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "mod", "type": "Any"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "create", "type": "Any"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "update", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "load_params", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "test_graph_simple", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "test_load_unexpected_params", "type": "Callable[[], Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "te", "type": "Any"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "n", "type": "int"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "te", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "A", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "te", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "B", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "json", "type": "module"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "build", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "s", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "create", "type": "Any"}, {"lineNumber": 62, "col_offset": 35, "nodeName": "graph", "type": "str"}, {"lineNumber": 62, "col_offset": 42, "nodeName": "mlib", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 63, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "get_output", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "build", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "s", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "Server", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "connect", "type": "Any"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "host", "type": "Any"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "port", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "tempdir", "type": "Any"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "relpath", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "export_library", "type": "Any"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "path_dso", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "upload", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "path_dso", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "load_module", "type": "Any"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "create", "type": "Any"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "graph", "type": "str"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "mlib", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 79, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "empty", "type": "Any"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "get_output", "type": "Any"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "out", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 89, "col_offset": 38, "nodeName": "z", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "x_in", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "graph", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "lib", "type": "Any"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "build", "type": "Any"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "func", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "create", "type": "Any"}, {"lineNumber": 95, "col_offset": 42, "nodeName": "graph", "type": "Any"}, {"lineNumber": 95, "col_offset": 49, "nodeName": "lib", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "load_params", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 125, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 130, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 132, "col_offset": 58, "nodeName": "params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "graph_runtime", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "get_json", "type": "Any"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "get_lib", "type": "Any"}, {"lineNumber": 134, "col_offset": 57, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "graph_module", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "new_params", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "rt_mod", "type": "Any"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "save_param_dict", "type": "Any"}, {"lineNumber": 139, "col_offset": 47, "nodeName": "new_params", "type": "Any"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "A", "type": "Any"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "B", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "graph_runtime", "type": "Any"}, {"lineNumber": 62, "col_offset": 48, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 63, "col_offset": 48, "nodeName": "A", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "a", "type": "Any"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "mod", "type": "Any"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "empty", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 66, "col_offset": 47, "nodeName": "a", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "A", "type": "Any"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "B", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "rpc", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "rpc", "type": "Any"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "server", "type": "Any"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "server", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "utils", "type": "Any"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "remote", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "temp", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "mlib", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "remote", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "remote", "type": "Any"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "graph_runtime", "type": "Any"}, {"lineNumber": 78, "col_offset": 48, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 79, "col_offset": 48, "nodeName": "A", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "nd", "type": "Any"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "n", "type": "int"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "dev", "type": "Any"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "mod", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 83, "col_offset": 47, "nodeName": "a", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 93, "col_offset": 69, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "graph_runtime", "type": "Any"}, {"lineNumber": 95, "col_offset": 54, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "mod_shared", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "save_param_dict", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "params", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "create", "type": "Any"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "graph", "type": "Any"}, {"lineNumber": 98, "col_offset": 44, "nodeName": "lib", "type": "Any"}, {"lineNumber": 98, "col_offset": 65, "nodeName": "_", "type": "int"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "share_params", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "mod_shared", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "get_output", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 113, "col_offset": 18, "nodeName": "get_output", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "graph_module", "type": "Any"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "graph_module", "type": "Any"}, {"lineNumber": 134, "col_offset": 57, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "astype", "type": "Any"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "A", "type": "Any"}, {"lineNumber": 62, "col_offset": 48, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "nd", "type": "Any"}, {"lineNumber": 65, "col_offset": 46, "nodeName": "n", "type": "int"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "out", "type": "Any"}, {"lineNumber": 78, "col_offset": 48, "nodeName": "remote", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "array", "type": "Any"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "dev", "type": "Any"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "out", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 95, "col_offset": 54, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "graph_runtime", "type": "Any"}, {"lineNumber": 98, "col_offset": 49, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 98, "col_offset": 70, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 98, "col_offset": 76, "nodeName": "num_mods", "type": "int"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 101, "col_offset": 41, "nodeName": "save_param_dict", "type": "Any"}, {"lineNumber": 101, "col_offset": 65, "nodeName": "params", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "a", "type": "Any"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "mod", "type": "Any"}, {"lineNumber": 106, "col_offset": 36, "nodeName": "empty", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 107, "col_offset": 51, "nodeName": "x_in", "type": "Any"}, {"lineNumber": 107, "col_offset": 58, "nodeName": "a", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "a", "type": "Any"}, {"lineNumber": 113, "col_offset": 18, "nodeName": "mod", "type": "Any"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "empty", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 114, "col_offset": 51, "nodeName": "x_in", "type": "Any"}, {"lineNumber": 114, "col_offset": 58, "nodeName": "a", "type": "Any"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 31, "col_offset": 42, "nodeName": "i", "type": "Tuple[Any, ...]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "nd", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 49, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 101, "col_offset": 41, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 106, "col_offset": 36, "nodeName": "nd", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "out", "type": "Any"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "nd", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "out", "type": "Any"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "n", "type": "int"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "n", "type": "int"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 36, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "np", "type": "module"}]