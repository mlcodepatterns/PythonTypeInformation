[{"lineNumber": 46, "col_offset": 0, "nodeName": "concat_list_to_block", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "visit_list_to_block", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "_floordiv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "_floormod", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 587, "col_offset": 0, "nodeName": "parse_python", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 621, "col_offset": 0, "nodeName": "source_to_op", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "Enum", "type": "Type[enum.Enum]"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "NodeVisitor", "type": "Type[ast.NodeVisitor]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "add_symbol", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "wrap_up_realize", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "wrap_up_binds", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "visit_Module", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "visit_FunctionDef", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "visit_Expr", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "visit_Name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "visit_Num", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "visit_NameConstant", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "visit_AugAssign", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "visit_Assign", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "visit_Index", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "visit_Attribute", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "visit_Subscript", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "visit_With", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 413, "col_offset": 4, "nodeName": "visit_If", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "visit_IfExp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "visit_Compare", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "visit_BoolOp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "visit_UnaryOp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "visit_BinOp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "visit_Call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "visit_For", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "visit_Return", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 573, "col_offset": 4, "nodeName": "visit_Tuple", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 577, "col_offset": 4, "nodeName": "visit_Str", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 581, "col_offset": 4, "nodeName": "visit_Assert", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "n", "type": "int"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "lst", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "lst", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "Callable", "type": "int"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "Input", "type": "int"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "OutputBuffer", "type": "int"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "GlobalBuffer", "type": "int"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "LocalBuffer", "type": "int"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "SharedBuffer", "type": "int"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "ConstVar", "type": "int"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "BufferVar", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "LoopVar", "type": "int"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "ConstLoopVar", "type": "int"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "ThreadBind", "type": "int"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "ast", "type": "module"}, {"lineNumber": 612, "col_offset": 4, "nodeName": "root", "type": "Union[_ast.Module, Any]"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "var_usage", "type": "Any"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "parser", "type": "HybridParser"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "parsed_body", "type": "Any"}, {"lineNumber": 618, "col_offset": 11, "nodeName": "parser", "type": "HybridParser"}, {"lineNumber": 646, "col_offset": 4, "nodeName": "parser", "type": "HybridParser"}, {"lineNumber": 648, "col_offset": 4, "nodeName": "input_tensors", "type": "List[Any]"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "i", "type": "Any"}, {"lineNumber": 656, "col_offset": 13, "nodeName": "args", "type": "Any"}, {"lineNumber": 660, "col_offset": 4, "nodeName": "res", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "lst", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "lst", "type": "List[Any]"}, {"lineNumber": 51, "col_offset": 7, "nodeName": "n", "type": "int"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "SeqStmt", "type": "Any"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "lst", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "lst", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "concat_list_to_block", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "lst", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "floordiv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "mod", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "Add", "type": "Type[_ast.Add]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "Sub", "type": "Type[_ast.Sub]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "Mult", "type": "Type[_ast.Mult]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "Div", "type": "Type[_ast.Div]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "FloorDiv", "type": "Type[_ast.FloorDiv]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "Mod", "type": "Type[_ast.Mod]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "BitOr", "type": "Type[_ast.BitOr]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "BitAnd", "type": "Type[_ast.BitAnd]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "BitXor", "type": "Type[_ast.BitXor]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "Gt", "type": "Type[_ast.Gt]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "GtE", "type": "Type[_ast.GtE]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "Lt", "type": "Type[_ast.Lt]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "LtE", "type": "Type[_ast.LtE]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "Eq", "type": "Type[_ast.Eq]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "NotEq", "type": "Type[_ast.NotEq]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "And", "type": "Type[_ast.And]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "Or", "type": "Type[_ast.Or]"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "sub", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "mul", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "_floordiv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "_floormod", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "or_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "and_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "xor", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "gt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "ge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "lt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "le", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "eq", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "ne", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "_all", "type": "Any"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "_any", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "USub", "type": "Type[_ast.USub]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "Invert", "type": "Type[_ast.Invert]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "Not", "type": "Type[_ast.Not]"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "neg", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "invert", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "not_", "type": "Callable[[Any], bool]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "usage", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "symbols", "type": "Dict[Any, Union[Tuple[int, Any], Tuple[Any, Any]]]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "closure_vars", "type": "Any"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "closure_vars", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "binds", "type": "Dict[Any, Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "device", "type": "int"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "func_name", "type": "Any"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "func_name", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "side_effect", "type": "Set[nothing]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "parsed_body", "type": "None"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "analyzer", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "returned", "type": "bool"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "to_pop", "type": "List[Any]"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "elem", "type": "Any"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "to_pop", "type": "List[Any]"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "body", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "binds", "type": "Dict[nothing, nothing]"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "body", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "id", "type": "Any"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "entry", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "buf", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "read", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 369, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "buf", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 409, "col_offset": 37, "nodeName": "id", "type": "Any"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "cond", "type": "Any"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "if_body", "type": "Any"}, {"lineNumber": 426, "col_offset": 11, "nodeName": "orelse", "type": "Any"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "cond", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "if_body", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "else_body", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "ops", "type": "List[Any]"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "ops", "type": "List[Any]"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "res", "type": "List[Any]"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "operand", "type": "Any"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "func_id", "type": "Any"}, {"lineNumber": 481, "col_offset": 18, "nodeName": "id", "type": "Any"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "outs", "type": "Any"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "op", "type": "Any"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "_name", "type": "Any"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "id", "type": "Any"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "_body", "type": "Any"}, {"lineNumber": 550, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "ids", "type": "List[nothing]"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "returned", "type": "bool"}, {"lineNumber": 578, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "mesg", "type": "Any"}, {"lineNumber": 612, "col_offset": 55, "nodeName": "src", "type": "Any"}, {"lineNumber": 613, "col_offset": 4, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 613, "col_offset": 21, "nodeName": "root", "type": "Union[_ast.Module, Any]"}, {"lineNumber": 613, "col_offset": 27, "nodeName": "AST", "type": "Type[_ast.AST]"}, {"lineNumber": 614, "col_offset": 16, "nodeName": "determine_variable_usage", "type": "Any"}, {"lineNumber": 614, "col_offset": 41, "nodeName": "root", "type": "Union[_ast.Module, Any]"}, {"lineNumber": 614, "col_offset": 47, "nodeName": "args", "type": "Any"}, {"lineNumber": 614, "col_offset": 53, "nodeName": "symbols", "type": "Any"}, {"lineNumber": 614, "col_offset": 62, "nodeName": "closure_vars", "type": "Any"}, {"lineNumber": 615, "col_offset": 13, "nodeName": "HybridParser", "type": "Type[HybridParser]"}, {"lineNumber": 615, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 615, "col_offset": 32, "nodeName": "var_usage", "type": "Any"}, {"lineNumber": 615, "col_offset": 43, "nodeName": "symbols", "type": "Any"}, {"lineNumber": 615, "col_offset": 52, "nodeName": "closure_vars", "type": "Any"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "parser", "type": "HybridParser"}, {"lineNumber": 616, "col_offset": 25, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 616, "col_offset": 38, "nodeName": "root", "type": "Union[_ast.Module, Any]"}, {"lineNumber": 617, "col_offset": 4, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 617, "col_offset": 21, "nodeName": "returned", "type": "bool"}, {"lineNumber": 646, "col_offset": 13, "nodeName": "parse_python", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 646, "col_offset": 26, "nodeName": "src", "type": "Any"}, {"lineNumber": 646, "col_offset": 31, "nodeName": "args", "type": "Any"}, {"lineNumber": 646, "col_offset": 37, "nodeName": "symbols", "type": "Any"}, {"lineNumber": 646, "col_offset": 46, "nodeName": "closure_vars", "type": "Any"}, {"lineNumber": 658, "col_offset": 9, "nodeName": "HybridOp", "type": "Any"}, {"lineNumber": 658, "col_offset": 34, "nodeName": "func_name", "type": "Any"}, {"lineNumber": 658, "col_offset": 70, "nodeName": "input_tensors", "type": "List[Any]"}, {"lineNumber": 659, "col_offset": 34, "nodeName": "outputs", "type": "List[nothing]"}, {"lineNumber": 659, "col_offset": 50, "nodeName": "parsed_body", "type": "Any"}, {"lineNumber": 661, "col_offset": 40, "nodeName": "res", "type": "List[Any]"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "make_nop", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "lst", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "_stmt", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 58, "col_offset": 35, "nodeName": "lst", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "lst", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "make_nop", "type": "Any"}, {"lineNumber": 81, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "ExprOp", "type": "Any"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 81, "col_offset": 49, "nodeName": "y", "type": "Any"}, {"lineNumber": 81, "col_offset": 52, "nodeName": "ExprOp", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "floordiv", "type": "Any"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "operator", "type": "module"}, {"lineNumber": 87, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "ExprOp", "type": "Any"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 87, "col_offset": 49, "nodeName": "y", "type": "Any"}, {"lineNumber": 87, "col_offset": 52, "nodeName": "ExprOp", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "floormod", "type": "Any"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "operator", "type": "module"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "operator", "type": "module"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "operator", "type": "module"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "operator", "type": "module"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "div", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "operator", "type": "module"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "operator", "type": "module"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "operator", "type": "module"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "operator", "type": "module"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "operator", "type": "module"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "operator", "type": "module"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "operator", "type": "module"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "operator", "type": "module"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "operator", "type": "module"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "operator", "type": "module"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "operator", "type": "module"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "operator", "type": "module"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "copy", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "Analyzer", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "key", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "old", "type": "str"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "new", "type": "str"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "symbols", "type": "Dict[Any, Union[Tuple[int, Any], Tuple[Any, Any]]]"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "ty", "type": "int"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "val", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "ty", "type": "int"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "ThreadBind", "type": "int"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "val_", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 190, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "items", "type": "Any"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "val", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "_domain", "type": "List[Any]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "_dtype", "type": "Any"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "_true", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "body", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "body", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "iter_var", "type": "Any"}, {"lineNumber": 225, "col_offset": 27, "nodeName": "items", "type": "Callable"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "ext", "type": "Any"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "extent", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "body", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "func_name", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "func_name", "type": "Any"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "idx", "type": "int"}, {"lineNumber": 245, "col_offset": 17, "nodeName": "arg", "type": "Any"}, {"lineNumber": 245, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 245, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "_attr", "type": "str"}, {"lineNumber": 248, "col_offset": 14, "nodeName": "visit_list_to_block", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 248, "col_offset": 34, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 248, "col_offset": 46, "nodeName": "body", "type": "Any"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "wrap_up_realize", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 249, "col_offset": 35, "nodeName": "node", "type": "Any"}, {"lineNumber": 249, "col_offset": 41, "nodeName": "res", "type": "Any"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "wrap_up_binds", "type": "Callable[[Any], Any]"}, {"lineNumber": 250, "col_offset": 34, "nodeName": "res", "type": "Any"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 254, "col_offset": 26, "nodeName": "value", "type": "Any"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 262, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 262, "col_offset": 19, "nodeName": "closure_vars", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "ty", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "entry", "type": "Any"}, {"lineNumber": 265, "col_offset": 20, "nodeName": "symbols", "type": "Dict[Any, Union[Tuple[int, Any], Tuple[Any, Any]]]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 267, "col_offset": 11, "nodeName": "ty", "type": "Any"}, {"lineNumber": 268, "col_offset": 19, "nodeName": "entry", "type": "Any"}, {"lineNumber": 269, "col_offset": 11, "nodeName": "ty", "type": "Any"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "ThreadBind", "type": "int"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "ty", "type": "Any"}, {"lineNumber": 271, "col_offset": 17, "nodeName": "ConstVar", "type": "int"}, {"lineNumber": 273, "col_offset": 11, "nodeName": "ty", "type": "Any"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "BufferVar", "type": "int"}, {"lineNumber": 283, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 283, "col_offset": 22, "nodeName": "n", "type": "Any"}, {"lineNumber": 283, "col_offset": 30, "nodeName": "Integral", "type": "Type[numbers.Integral]"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "dtype", "type": "str"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "const", "type": "Any"}, {"lineNumber": 291, "col_offset": 33, "nodeName": "n", "type": "Any"}, {"lineNumber": 291, "col_offset": 41, "nodeName": "dtype", "type": "str"}, {"lineNumber": 295, "col_offset": 15, "nodeName": "convert", "type": "Any"}, {"lineNumber": 295, "col_offset": 35, "nodeName": "value", "type": "Any"}, {"lineNumber": 299, "col_offset": 14, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "target", "type": "Any"}, {"lineNumber": 300, "col_offset": 14, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 300, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 301, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "buf", "type": "Any"}, {"lineNumber": 301, "col_offset": 27, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 303, "col_offset": 24, "nodeName": "buf", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 308, "col_offset": 15, "nodeName": "Call", "type": "Any"}, {"lineNumber": 308, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 308, "col_offset": 39, "nodeName": "name", "type": "Any"}, {"lineNumber": 308, "col_offset": 49, "nodeName": "args", "type": "Any"}, {"lineNumber": 308, "col_offset": 55, "nodeName": "Halide", "type": "Any"}, {"lineNumber": 308, "col_offset": 74, "nodeName": "op", "type": "Any"}, {"lineNumber": 308, "col_offset": 82, "nodeName": "value_index", "type": "Any"}, {"lineNumber": 309, "col_offset": 57, "nodeName": "read", "type": "Any"}, {"lineNumber": 309, "col_offset": 63, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "Provide", "type": "Any"}, {"lineNumber": 311, "col_offset": 31, "nodeName": "op", "type": "Any"}, {"lineNumber": 311, "col_offset": 42, "nodeName": "value", "type": "Any"}, {"lineNumber": 311, "col_offset": 49, "nodeName": "args", "type": "Any"}, {"lineNumber": 315, "col_offset": 14, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 315, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 316, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 316, "col_offset": 22, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 316, "col_offset": 27, "nodeName": "Operation", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "rmap", "type": "Dict[Any, Any]"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "targets", "type": "Any"}, {"lineNumber": 329, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 329, "col_offset": 22, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 329, "col_offset": 27, "nodeName": "PrimExpr", "type": "Any"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 331, "col_offset": 22, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 331, "col_offset": 27, "nodeName": "Name", "type": "Type[_ast.Name]"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "lhs_", "type": "Any"}, {"lineNumber": 333, "col_offset": 19, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 334, "col_offset": 18, "nodeName": "id", "type": "Any"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 365, "col_offset": 13, "nodeName": "args", "type": "Any"}, {"lineNumber": 365, "col_offset": 20, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 365, "col_offset": 31, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 368, "col_offset": 14, "nodeName": "Provide", "type": "Any"}, {"lineNumber": 368, "col_offset": 30, "nodeName": "op", "type": "Any"}, {"lineNumber": 368, "col_offset": 38, "nodeName": "value_index", "type": "Any"}, {"lineNumber": 368, "col_offset": 55, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 368, "col_offset": 60, "nodeName": "args", "type": "Any"}, {"lineNumber": 373, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 373, "col_offset": 22, "nodeName": "value", "type": "Any"}, {"lineNumber": 373, "col_offset": 34, "nodeName": "Tuple", "type": "Type[_ast.Tuple]"}, {"lineNumber": 379, "col_offset": 14, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 379, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 380, "col_offset": 15, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "buf", "type": "Any"}, {"lineNumber": 380, "col_offset": 28, "nodeName": "attr", "type": "Any"}, {"lineNumber": 383, "col_offset": 15, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 383, "col_offset": 26, "nodeName": "slice", "type": "Any"}, {"lineNumber": 384, "col_offset": 14, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 384, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 385, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 385, "col_offset": 22, "nodeName": "arr", "type": "Any"}, {"lineNumber": 385, "col_offset": 27, "nodeName": "Array", "type": "Any"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 386, "col_offset": 21, "nodeName": "args", "type": "Any"}, {"lineNumber": 393, "col_offset": 19, "nodeName": "arr", "type": "Any"}, {"lineNumber": 394, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 394, "col_offset": 22, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 394, "col_offset": 32, "nodeName": "Load", "type": "Type[_ast.Load]"}, {"lineNumber": 397, "col_offset": 15, "nodeName": "arr", "type": "Any"}, {"lineNumber": 397, "col_offset": 20, "nodeName": "args", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "context", "type": "Any"}, {"lineNumber": 401, "col_offset": 22, "nodeName": "context_expr", "type": "Any"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "option", "type": "Any"}, {"lineNumber": 402, "col_offset": 21, "nodeName": "optional_vars", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 409, "col_offset": 37, "nodeName": "func", "type": "Any"}, {"lineNumber": 410, "col_offset": 15, "nodeName": "visit_list_to_block", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 410, "col_offset": 35, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 410, "col_offset": 47, "nodeName": "body", "type": "Any"}, {"lineNumber": 414, "col_offset": 15, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 417, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 417, "col_offset": 22, "nodeName": "cond", "type": "Any"}, {"lineNumber": 417, "col_offset": 28, "nodeName": "IntImm", "type": "Any"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 420, "col_offset": 15, "nodeName": "orelse", "type": "Any"}, {"lineNumber": 424, "col_offset": 18, "nodeName": "visit_list_to_block", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 424, "col_offset": 38, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 424, "col_offset": 50, "nodeName": "body", "type": "Any"}, {"lineNumber": 426, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 427, "col_offset": 12, "nodeName": "else_body", "type": "Any"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "else_body", "type": "None"}, {"lineNumber": 430, "col_offset": 15, "nodeName": "IfThenElse", "type": "Any"}, {"lineNumber": 430, "col_offset": 34, "nodeName": "cond", "type": "Any"}, {"lineNumber": 430, "col_offset": 40, "nodeName": "if_body", "type": "Any"}, {"lineNumber": 430, "col_offset": 49, "nodeName": "else_body", "type": "Any"}, {"lineNumber": 434, "col_offset": 15, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 434, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 435, "col_offset": 18, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 435, "col_offset": 29, "nodeName": "body", "type": "Any"}, {"lineNumber": 436, "col_offset": 20, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 436, "col_offset": 31, "nodeName": "orelse", "type": "Any"}, {"lineNumber": 437, "col_offset": 15, "nodeName": "Select", "type": "Any"}, {"lineNumber": 437, "col_offset": 30, "nodeName": "cond", "type": "Any"}, {"lineNumber": 437, "col_offset": 36, "nodeName": "if_body", "type": "Any"}, {"lineNumber": 437, "col_offset": 45, "nodeName": "else_body", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 446, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "_all", "type": "Any"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 454, "col_offset": 16, "nodeName": "values", "type": "Any"}, {"lineNumber": 455, "col_offset": 11, "nodeName": "n", "type": "int"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 466, "col_offset": 18, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 466, "col_offset": 29, "nodeName": "operand", "type": "Any"}, {"lineNumber": 467, "col_offset": 58, "nodeName": "operand", "type": "Any"}, {"lineNumber": 471, "col_offset": 14, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 471, "col_offset": 25, "nodeName": "left", "type": "Any"}, {"lineNumber": 472, "col_offset": 14, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 472, "col_offset": 25, "nodeName": "right", "type": "Any"}, {"lineNumber": 473, "col_offset": 56, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 473, "col_offset": 61, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 481, "col_offset": 18, "nodeName": "func", "type": "Any"}, {"lineNumber": 484, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 484, "col_offset": 19, "nodeName": "calls", "type": "Any"}, {"lineNumber": 484, "col_offset": 26, "nodeName": "func_id", "type": "Any"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "ty", "type": "Any"}, {"lineNumber": 489, "col_offset": 12, "nodeName": "entry", "type": "Any"}, {"lineNumber": 489, "col_offset": 20, "nodeName": "symbols", "type": "Dict[Any, Union[Tuple[int, Any], Tuple[Any, Any]]]"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 492, "col_offset": 15, "nodeName": "entry", "type": "Any"}, {"lineNumber": 493, "col_offset": 13, "nodeName": "op", "type": "Any"}, {"lineNumber": 493, "col_offset": 54, "nodeName": "op", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "iter_var", "type": "Any"}, {"lineNumber": 498, "col_offset": 18, "nodeName": "low", "type": "Any"}, {"lineNumber": 498, "col_offset": 23, "nodeName": "ext", "type": "Any"}, {"lineNumber": 498, "col_offset": 28, "nodeName": "for_type", "type": "Any"}, {"lineNumber": 498, "col_offset": 39, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 498, "col_offset": 50, "nodeName": "iter", "type": "Any"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "target", "type": "Any"}, {"lineNumber": 504, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 504, "col_offset": 22, "nodeName": "for_type", "type": "Any"}, {"lineNumber": 504, "col_offset": 32, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 505, "col_offset": 12, "nodeName": "low", "type": "Any"}, {"lineNumber": 506, "col_offset": 12, "nodeName": "ext", "type": "Any"}, {"lineNumber": 517, "col_offset": 12, "nodeName": "bodies", "type": "List[Any]"}, {"lineNumber": 518, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 526, "col_offset": 11, "nodeName": "iter_var", "type": "Any"}, {"lineNumber": 528, "col_offset": 12, "nodeName": "offset", "type": "Any"}, {"lineNumber": 528, "col_offset": 21, "nodeName": "iter_var", "type": "Any"}, {"lineNumber": 532, "col_offset": 12, "nodeName": "_body", "type": "Any"}, {"lineNumber": 536, "col_offset": 12, "nodeName": "device", "type": "int"}, {"lineNumber": 537, "col_offset": 12, "nodeName": "_body", "type": "Any"}, {"lineNumber": 538, "col_offset": 12, "nodeName": "device", "type": "int"}, {"lineNumber": 540, "col_offset": 16, "nodeName": "wrap_up_realize", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 540, "col_offset": 37, "nodeName": "node", "type": "Any"}, {"lineNumber": 540, "col_offset": 43, "nodeName": "_body", "type": "Any"}, {"lineNumber": 542, "col_offset": 11, "nodeName": "for_type", "type": "Any"}, {"lineNumber": 543, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 543, "col_offset": 18, "nodeName": "_body", "type": "Any"}, {"lineNumber": 547, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 549, "col_offset": 25, "nodeName": "_name", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 557, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 557, "col_offset": 22, "nodeName": "value", "type": "Any"}, {"lineNumber": 557, "col_offset": 34, "nodeName": "Name", "type": "Type[_ast.Name]"}, {"lineNumber": 558, "col_offset": 12, "nodeName": "ids", "type": "List[Any]"}, {"lineNumber": 564, "col_offset": 12, "nodeName": "ids", "type": "List[Any]"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 570, "col_offset": 15, "nodeName": "make_nop", "type": "Any"}, {"lineNumber": 574, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 578, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 582, "col_offset": 15, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 582, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 583, "col_offset": 15, "nodeName": "convert", "type": "Any"}, {"lineNumber": 584, "col_offset": 15, "nodeName": "AssertStmt", "type": "Any"}, {"lineNumber": 584, "col_offset": 34, "nodeName": "test", "type": "Any"}, {"lineNumber": 584, "col_offset": 40, "nodeName": "mesg", "type": "Any"}, {"lineNumber": 612, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 612, "col_offset": 40, "nodeName": "src", "type": "Any"}, {"lineNumber": 612, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 612, "col_offset": 11, "nodeName": "parse", "type": "Callable[..., _ast.Module]"}, {"lineNumber": 612, "col_offset": 21, "nodeName": "src", "type": "Any"}, {"lineNumber": 613, "col_offset": 27, "nodeName": "ast", "type": "module"}, {"lineNumber": 616, "col_offset": 25, "nodeName": "parser", "type": "HybridParser"}, {"lineNumber": 617, "col_offset": 21, "nodeName": "parser", "type": "HybridParser"}, {"lineNumber": 650, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 650, "col_offset": 22, "nodeName": "arg", "type": "Any"}, {"lineNumber": 650, "col_offset": 27, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 657, "col_offset": 8, "nodeName": "get_input_tensors", "type": "Callable[[Any], Any]"}, {"lineNumber": 657, "col_offset": 26, "nodeName": "i", "type": "Any"}, {"lineNumber": 658, "col_offset": 9, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 658, "col_offset": 34, "nodeName": "parser", "type": "HybridParser"}, {"lineNumber": 659, "col_offset": 34, "nodeName": "parser", "type": "HybridParser"}, {"lineNumber": 659, "col_offset": 50, "nodeName": "parser", "type": "HybridParser"}, {"lineNumber": 660, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 660, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 660, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 661, "col_offset": 11, "nodeName": "res", "type": "List[Any]"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "util", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "util", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "_expr", "type": "Any"}, {"lineNumber": 81, "col_offset": 52, "nodeName": "_expr", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "tir", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "_expr", "type": "Any"}, {"lineNumber": 87, "col_offset": 52, "nodeName": "_expr", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "tir", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "operator", "type": "module"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "usage", "type": "Any"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "symbols", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 151, "col_offset": 26, "nodeName": "v", "type": "Any"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "FunctionType", "type": "Type[Callable[..., Any]]"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "arith", "type": "Any"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "key", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 179, "col_offset": 43, "nodeName": "val", "type": "Any"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "binds", "type": "Dict[Any, Any]"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "symbols", "type": "Dict[Any, Union[Tuple[int, Any], Tuple[Any, Any]]]"}, {"lineNumber": 184, "col_offset": 32, "nodeName": "ty", "type": "Any"}, {"lineNumber": 184, "col_offset": 36, "nodeName": "val_", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "usage", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "level", "type": "Any"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "_", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "key", "type": "Any"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "symbols", "type": "Dict[Any, Union[Tuple[int, Any], Tuple[Any, Any]]]"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "level", "type": "Any"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "node", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "ty", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "entry", "type": "Any"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "symbols", "type": "Dict[Any, Union[Tuple[int, Any], Tuple[Any, Any]]]"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "ty", "type": "Any"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "name", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "_buf", "type": "Any"}, {"lineNumber": 203, "col_offset": 23, "nodeName": "entry", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "_scope", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "_scope", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "body", "type": "Any"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "_buf", "type": "Any"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "convert", "type": "Any"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "Realize", "type": "Any"}, {"lineNumber": 215, "col_offset": 35, "nodeName": "op", "type": "Any"}, {"lineNumber": 215, "col_offset": 47, "nodeName": "_dtype", "type": "Any"}, {"lineNumber": 215, "col_offset": 55, "nodeName": "_domain", "type": "List[Any]"}, {"lineNumber": 215, "col_offset": 64, "nodeName": "_true", "type": "Any"}, {"lineNumber": 215, "col_offset": 71, "nodeName": "body", "type": "Any"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "AttrStmt", "type": "Any"}, {"lineNumber": 216, "col_offset": 36, "nodeName": "op", "type": "Any"}, {"lineNumber": 216, "col_offset": 91, "nodeName": "body", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "elem", "type": "Any"}, {"lineNumber": 225, "col_offset": 27, "nodeName": "binds", "type": "Dict[Any, Any]"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "dom", "type": "Any"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "AttrStmt", "type": "Any"}, {"lineNumber": 227, "col_offset": 36, "nodeName": "iter_var", "type": "Any"}, {"lineNumber": 227, "col_offset": 63, "nodeName": "ext", "type": "Any"}, {"lineNumber": 227, "col_offset": 68, "nodeName": "body", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "body", "type": "Any"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 245, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "add_symbol", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 247, "col_offset": 49, "nodeName": "Input", "type": "int"}, {"lineNumber": 248, "col_offset": 34, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 248, "col_offset": 46, "nodeName": "node", "type": "Any"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 254, "col_offset": 26, "nodeName": "node", "type": "Any"}, {"lineNumber": 259, "col_offset": 40, "nodeName": "name", "type": "Any"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "convert", "type": "Any"}, {"lineNumber": 262, "col_offset": 19, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "convert", "type": "Any"}, {"lineNumber": 265, "col_offset": 20, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 265, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 266, "col_offset": 33, "nodeName": "symbols", "type": "Dict[Any, Union[Tuple[int, Any], Tuple[Any, Any]]]"}, {"lineNumber": 266, "col_offset": 70, "nodeName": "name", "type": "Any"}, {"lineNumber": 267, "col_offset": 18, "nodeName": "LoopVar", "type": "int"}, {"lineNumber": 267, "col_offset": 34, "nodeName": "Input", "type": "int"}, {"lineNumber": 267, "col_offset": 48, "nodeName": "ConstLoopVar", "type": "int"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "entry", "type": "Any"}, {"lineNumber": 271, "col_offset": 17, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "entry", "type": "Any"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 274, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 274, "col_offset": 26, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 274, "col_offset": 36, "nodeName": "Load", "type": "Type[_ast.Load]"}, {"lineNumber": 277, "col_offset": 19, "nodeName": "entry", "type": "Any"}, {"lineNumber": 283, "col_offset": 22, "nodeName": "node", "type": "Any"}, {"lineNumber": 283, "col_offset": 30, "nodeName": "numbers", "type": "module"}, {"lineNumber": 285, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "n", "type": "Any"}, {"lineNumber": 285, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "dtype", "type": "str"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "dtype", "type": "str"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 291, "col_offset": 33, "nodeName": "node", "type": "Any"}, {"lineNumber": 295, "col_offset": 15, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 295, "col_offset": 35, "nodeName": "node", "type": "Any"}, {"lineNumber": 299, "col_offset": 14, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "node", "type": "Any"}, {"lineNumber": 300, "col_offset": 14, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 300, "col_offset": 25, "nodeName": "node", "type": "Any"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "buf", "type": "Any"}, {"lineNumber": 303, "col_offset": 17, "nodeName": "args", "type": "Any"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 306, "col_offset": 36, "nodeName": "buf", "type": "Any"}, {"lineNumber": 306, "col_offset": 41, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 308, "col_offset": 15, "nodeName": "tir", "type": "Any"}, {"lineNumber": 308, "col_offset": 28, "nodeName": "buf", "type": "Any"}, {"lineNumber": 308, "col_offset": 39, "nodeName": "buf", "type": "Any"}, {"lineNumber": 308, "col_offset": 55, "nodeName": "Call", "type": "Any"}, {"lineNumber": 308, "col_offset": 74, "nodeName": "buf", "type": "Any"}, {"lineNumber": 308, "col_offset": 82, "nodeName": "buf", "type": "Any"}, {"lineNumber": 309, "col_offset": 16, "nodeName": "_binop_maker", "type": "Dict[Union[Type[_ast.Add], Type[_ast.Sub], Type[_ast.Mult], Type[_ast.Div], Type[_ast.FloorDiv], Type[_ast.Mod], Type[_ast.BitOr], Type[_ast.BitAnd], Type[_ast.BitXor], Type[_ast.Gt], Type[_ast.GtE], Type[_ast.Lt], Type[_ast.LtE], Type[_ast.Eq], Type[_ast.NotEq], Type[_ast.And], Type[_ast.Or]], Any]"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "tir", "type": "Any"}, {"lineNumber": 311, "col_offset": 31, "nodeName": "buf", "type": "Any"}, {"lineNumber": 315, "col_offset": 14, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 315, "col_offset": 25, "nodeName": "node", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 320, "col_offset": 27, "nodeName": "num_outputs", "type": "Any"}, {"lineNumber": 325, "col_offset": 19, "nodeName": "replace_io", "type": "Any"}, {"lineNumber": 325, "col_offset": 35, "nodeName": "body", "type": "Any"}, {"lineNumber": 325, "col_offset": 45, "nodeName": "rmap", "type": "Dict[Any, Any]"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "node", "type": "Any"}, {"lineNumber": 329, "col_offset": 27, "nodeName": "_expr", "type": "Any"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 330, "col_offset": 41, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 331, "col_offset": 27, "nodeName": "ast", "type": "module"}, {"lineNumber": 334, "col_offset": 18, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 335, "col_offset": 15, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "decl", "type": "Any"}, {"lineNumber": 339, "col_offset": 18, "nodeName": "_", "type": "Any"}, {"lineNumber": 339, "col_offset": 21, "nodeName": "rw", "type": "Any"}, {"lineNumber": 339, "col_offset": 26, "nodeName": "usage", "type": "Any"}, {"lineNumber": 340, "col_offset": 15, "nodeName": "decl", "type": "Any"}, {"lineNumber": 340, "col_offset": 23, "nodeName": "lhs_", "type": "Any"}, {"lineNumber": 359, "col_offset": 18, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 359, "col_offset": 29, "nodeName": "lhs_", "type": "Any"}, {"lineNumber": 360, "col_offset": 15, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 361, "col_offset": 28, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 363, "col_offset": 19, "nodeName": "make_nop", "type": "Any"}, {"lineNumber": 365, "col_offset": 20, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 366, "col_offset": 25, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 366, "col_offset": 36, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 366, "col_offset": 41, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 368, "col_offset": 14, "nodeName": "tir", "type": "Any"}, {"lineNumber": 368, "col_offset": 30, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 368, "col_offset": 38, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 373, "col_offset": 22, "nodeName": "node", "type": "Any"}, {"lineNumber": 373, "col_offset": 34, "nodeName": "ast", "type": "module"}, {"lineNumber": 374, "col_offset": 19, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 374, "col_offset": 30, "nodeName": "value", "type": "Any"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 375, "col_offset": 27, "nodeName": "value", "type": "Any"}, {"lineNumber": 379, "col_offset": 14, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 379, "col_offset": 25, "nodeName": "node", "type": "Any"}, {"lineNumber": 380, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 383, "col_offset": 15, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 383, "col_offset": 26, "nodeName": "node", "type": "Any"}, {"lineNumber": 384, "col_offset": 14, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 384, "col_offset": 25, "nodeName": "node", "type": "Any"}, {"lineNumber": 394, "col_offset": 22, "nodeName": "node", "type": "Any"}, {"lineNumber": 394, "col_offset": 32, "nodeName": "ast", "type": "module"}, {"lineNumber": 395, "col_offset": 19, "nodeName": "Call", "type": "Any"}, {"lineNumber": 395, "col_offset": 32, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 395, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 395, "col_offset": 53, "nodeName": "args", "type": "Any"}, {"lineNumber": 396, "col_offset": 32, "nodeName": "Halide", "type": "Any"}, {"lineNumber": 396, "col_offset": 51, "nodeName": "op", "type": "Any"}, {"lineNumber": 396, "col_offset": 59, "nodeName": "value_index", "type": "Any"}, {"lineNumber": 400, "col_offset": 11, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 401, "col_offset": 22, "nodeName": "node", "type": "Any"}, {"lineNumber": 402, "col_offset": 21, "nodeName": "node", "type": "Any"}, {"lineNumber": 407, "col_offset": 25, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 407, "col_offset": 36, "nodeName": "context", "type": "Any"}, {"lineNumber": 407, "col_offset": 45, "nodeName": "Call", "type": "Type[_ast.Call]"}, {"lineNumber": 408, "col_offset": 25, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 408, "col_offset": 36, "nodeName": "option", "type": "Any"}, {"lineNumber": 408, "col_offset": 44, "nodeName": "Name", "type": "Type[_ast.Name]"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 409, "col_offset": 24, "nodeName": "id", "type": "Any"}, {"lineNumber": 409, "col_offset": 37, "nodeName": "context", "type": "Any"}, {"lineNumber": 410, "col_offset": 35, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 410, "col_offset": 47, "nodeName": "node", "type": "Any"}, {"lineNumber": 414, "col_offset": 15, "nodeName": "analyzer", "type": "Any"}, {"lineNumber": 414, "col_offset": 38, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 414, "col_offset": 49, "nodeName": "test", "type": "Any"}, {"lineNumber": 417, "col_offset": 28, "nodeName": "_expr", "type": "Any"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "cond", "type": "Any"}, {"lineNumber": 420, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 422, "col_offset": 19, "nodeName": "make_nop", "type": "Any"}, {"lineNumber": 424, "col_offset": 38, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 424, "col_offset": 50, "nodeName": "node", "type": "Any"}, {"lineNumber": 427, "col_offset": 24, "nodeName": "visit_list_to_block", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 427, "col_offset": 44, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 427, "col_offset": 56, "nodeName": "orelse", "type": "Any"}, {"lineNumber": 430, "col_offset": 15, "nodeName": "tir", "type": "Any"}, {"lineNumber": 434, "col_offset": 15, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 434, "col_offset": 26, "nodeName": "node", "type": "Any"}, {"lineNumber": 435, "col_offset": 18, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 435, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 436, "col_offset": 20, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 436, "col_offset": 31, "nodeName": "node", "type": "Any"}, {"lineNumber": 437, "col_offset": 15, "nodeName": "tir", "type": "Any"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 443, "col_offset": 26, "nodeName": "left", "type": "Any"}, {"lineNumber": 444, "col_offset": 16, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 444, "col_offset": 27, "nodeName": "i", "type": "Any"}, {"lineNumber": 444, "col_offset": 34, "nodeName": "i", "type": "Any"}, {"lineNumber": 444, "col_offset": 39, "nodeName": "comparators", "type": "Any"}, {"lineNumber": 446, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 446, "col_offset": 27, "nodeName": "ops", "type": "Any"}, {"lineNumber": 447, "col_offset": 18, "nodeName": "ops", "type": "List[Any]"}, {"lineNumber": 448, "col_offset": 18, "nodeName": "ops", "type": "List[Any]"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 450, "col_offset": 21, "nodeName": "res", "type": "List[Any]"}, {"lineNumber": 454, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 458, "col_offset": 19, "nodeName": "not_", "type": "Callable[[Any], bool]"}, {"lineNumber": 459, "col_offset": 25, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 459, "col_offset": 36, "nodeName": "op", "type": "Any"}, {"lineNumber": 461, "col_offset": 18, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 461, "col_offset": 29, "nodeName": "i", "type": "Any"}, {"lineNumber": 461, "col_offset": 36, "nodeName": "i", "type": "Any"}, {"lineNumber": 461, "col_offset": 41, "nodeName": "values", "type": "Any"}, {"lineNumber": 462, "col_offset": 15, "nodeName": "_binop_maker", "type": "Dict[Union[Type[_ast.Add], Type[_ast.Sub], Type[_ast.Mult], Type[_ast.Div], Type[_ast.FloorDiv], Type[_ast.Mod], Type[_ast.BitOr], Type[_ast.BitAnd], Type[_ast.BitXor], Type[_ast.Gt], Type[_ast.GtE], Type[_ast.Lt], Type[_ast.LtE], Type[_ast.Eq], Type[_ast.NotEq], Type[_ast.And], Type[_ast.Or]], Any]"}, {"lineNumber": 462, "col_offset": 57, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 466, "col_offset": 18, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 466, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 467, "col_offset": 15, "nodeName": "_unaryop_maker", "type": "Dict[Union[Type[_ast.USub], Type[_ast.Invert], Type[_ast.Not]], Union[Callable[[Any], Any], Callable[[Any], bool]]]"}, {"lineNumber": 471, "col_offset": 14, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 471, "col_offset": 25, "nodeName": "node", "type": "Any"}, {"lineNumber": 472, "col_offset": 14, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 472, "col_offset": 25, "nodeName": "node", "type": "Any"}, {"lineNumber": 473, "col_offset": 15, "nodeName": "_binop_maker", "type": "Dict[Union[Type[_ast.Add], Type[_ast.Sub], Type[_ast.Mult], Type[_ast.Div], Type[_ast.FloorDiv], Type[_ast.Mod], Type[_ast.BitOr], Type[_ast.BitAnd], Type[_ast.BitXor], Type[_ast.Gt], Type[_ast.GtE], Type[_ast.Lt], Type[_ast.LtE], Type[_ast.Eq], Type[_ast.NotEq], Type[_ast.And], Type[_ast.Or]], Any]"}, {"lineNumber": 478, "col_offset": 25, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 478, "col_offset": 36, "nodeName": "func", "type": "Any"}, {"lineNumber": 478, "col_offset": 47, "nodeName": "Name", "type": "Type[_ast.Name]"}, {"lineNumber": 481, "col_offset": 18, "nodeName": "node", "type": "Any"}, {"lineNumber": 482, "col_offset": 16, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 482, "col_offset": 27, "nodeName": "i", "type": "Any"}, {"lineNumber": 482, "col_offset": 34, "nodeName": "i", "type": "Any"}, {"lineNumber": 482, "col_offset": 39, "nodeName": "args", "type": "Any"}, {"lineNumber": 485, "col_offset": 43, "nodeName": "func_id", "type": "Any"}, {"lineNumber": 485, "col_offset": 52, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 487, "col_offset": 25, "nodeName": "func_id", "type": "Any"}, {"lineNumber": 488, "col_offset": 84, "nodeName": "func_id", "type": "Any"}, {"lineNumber": 489, "col_offset": 20, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 489, "col_offset": 33, "nodeName": "func_id", "type": "Any"}, {"lineNumber": 490, "col_offset": 25, "nodeName": "ty", "type": "Any"}, {"lineNumber": 490, "col_offset": 31, "nodeName": "Callable", "type": "int"}, {"lineNumber": 492, "col_offset": 22, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 493, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 493, "col_offset": 35, "nodeName": "outs", "type": "Any"}, {"lineNumber": 493, "col_offset": 41, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 493, "col_offset": 13, "nodeName": "outs", "type": "Any"}, {"lineNumber": 498, "col_offset": 39, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 498, "col_offset": 50, "nodeName": "node", "type": "Any"}, {"lineNumber": 499, "col_offset": 25, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 499, "col_offset": 36, "nodeName": "target", "type": "Any"}, {"lineNumber": 499, "col_offset": 49, "nodeName": "Name", "type": "Type[_ast.Name]"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 505, "col_offset": 18, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 505, "col_offset": 41, "nodeName": "low", "type": "Any"}, {"lineNumber": 506, "col_offset": 18, "nodeName": "simplify", "type": "Any"}, {"lineNumber": 506, "col_offset": 41, "nodeName": "ext", "type": "Any"}, {"lineNumber": 507, "col_offset": 12, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "low", "type": "Any"}, {"lineNumber": 512, "col_offset": 17, "nodeName": "ext", "type": "Any"}, {"lineNumber": 512, "col_offset": 23, "nodeName": "value", "type": "Any"}, {"lineNumber": 512, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 513, "col_offset": 15, "nodeName": "ext", "type": "Any"}, {"lineNumber": 518, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 518, "col_offset": 27, "nodeName": "low", "type": "Any"}, {"lineNumber": 520, "col_offset": 16, "nodeName": "body", "type": "Any"}, {"lineNumber": 521, "col_offset": 16, "nodeName": "body", "type": "Any"}, {"lineNumber": 524, "col_offset": 19, "nodeName": "concat_list_to_block", "type": "Callable[[Any], Any]"}, {"lineNumber": 524, "col_offset": 40, "nodeName": "bodies", "type": "List[Any]"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 528, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 528, "col_offset": 43, "nodeName": "_name", "type": "Any"}, {"lineNumber": 530, "col_offset": 16, "nodeName": "offset", "type": "Any"}, {"lineNumber": 531, "col_offset": 12, "nodeName": "add_symbol", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 531, "col_offset": 28, "nodeName": "_name", "type": "Any"}, {"lineNumber": 531, "col_offset": 35, "nodeName": "LoopVar", "type": "int"}, {"lineNumber": 531, "col_offset": 51, "nodeName": "offset", "type": "Any"}, {"lineNumber": 532, "col_offset": 20, "nodeName": "visit_list_to_block", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 532, "col_offset": 40, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 532, "col_offset": 52, "nodeName": "body", "type": "Any"}, {"lineNumber": 534, "col_offset": 12, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 535, "col_offset": 12, "nodeName": "add_symbol", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 535, "col_offset": 28, "nodeName": "_name", "type": "Any"}, {"lineNumber": 535, "col_offset": 35, "nodeName": "ThreadBind", "type": "int"}, {"lineNumber": 535, "col_offset": 54, "nodeName": "iter_var", "type": "Any"}, {"lineNumber": 536, "col_offset": 12, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 537, "col_offset": 20, "nodeName": "visit_list_to_block", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 537, "col_offset": 40, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 537, "col_offset": 52, "nodeName": "body", "type": "Any"}, {"lineNumber": 538, "col_offset": 12, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 540, "col_offset": 16, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 545, "col_offset": 12, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 547, "col_offset": 18, "nodeName": "For", "type": "Any"}, {"lineNumber": 547, "col_offset": 30, "nodeName": "iter_var", "type": "Any"}, {"lineNumber": 547, "col_offset": 71, "nodeName": "ext", "type": "Any"}, {"lineNumber": 547, "col_offset": 76, "nodeName": "for_type", "type": "Any"}, {"lineNumber": 547, "col_offset": 89, "nodeName": "_body", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "symbols", "type": "Dict[Any, Union[Tuple[int, Any], Tuple[Any, Any]]]"}, {"lineNumber": 554, "col_offset": 25, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 557, "col_offset": 22, "nodeName": "node", "type": "Any"}, {"lineNumber": 557, "col_offset": 34, "nodeName": "ast", "type": "module"}, {"lineNumber": 558, "col_offset": 19, "nodeName": "id", "type": "Any"}, {"lineNumber": 560, "col_offset": 12, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 562, "col_offset": 12, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 564, "col_offset": 19, "nodeName": "id", "type": "Any"}, {"lineNumber": 566, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 566, "col_offset": 15, "nodeName": "ids", "type": "List[Any]"}, {"lineNumber": 566, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 566, "col_offset": 26, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 567, "col_offset": 12, "nodeName": "log", "type": "Callable[..., None]"}, {"lineNumber": 567, "col_offset": 24, "nodeName": "CRITICAL", "type": "int"}, {"lineNumber": 568, "col_offset": 47, "nodeName": "i", "type": "Any"}, {"lineNumber": 568, "col_offset": 52, "nodeName": "ids", "type": "List[Any]"}, {"lineNumber": 570, "col_offset": 15, "nodeName": "util", "type": "Any"}, {"lineNumber": 582, "col_offset": 15, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 582, "col_offset": 26, "nodeName": "node", "type": "Any"}, {"lineNumber": 583, "col_offset": 15, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 583, "col_offset": 35, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 583, "col_offset": 46, "nodeName": "msg", "type": "Any"}, {"lineNumber": 584, "col_offset": 15, "nodeName": "tir", "type": "Any"}, {"lineNumber": 584, "col_offset": 46, "nodeName": "make_nop", "type": "Any"}, {"lineNumber": 612, "col_offset": 11, "nodeName": "ast", "type": "module"}, {"lineNumber": 651, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 651, "col_offset": 33, "nodeName": "arg", "type": "Any"}, {"lineNumber": 652, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 652, "col_offset": 24, "nodeName": "arg", "type": "Any"}, {"lineNumber": 652, "col_offset": 29, "nodeName": "Array", "type": "Any"}, {"lineNumber": 653, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 653, "col_offset": 21, "nodeName": "arg", "type": "Any"}, {"lineNumber": 658, "col_offset": 9, "nodeName": "te", "type": "Any"}, {"lineNumber": 660, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 660, "col_offset": 33, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 661, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 661, "col_offset": 25, "nodeName": "res", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 46, "nodeName": "is_docstring", "type": "Any"}, {"lineNumber": 58, "col_offset": 64, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 59, "col_offset": 63, "nodeName": "stmt", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 100, "col_offset": 38, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "types", "type": "module"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "add_symbol", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "k", "type": "Any"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "Callable", "type": "int"}, {"lineNumber": 152, "col_offset": 52, "nodeName": "v", "type": "Any"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "symbols", "type": "Dict[Any, Union[Tuple[int, Any], Tuple[Any, Any]]]"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "symbols", "type": "Dict[Any, Union[Tuple[int, Any], Tuple[Any, Any]]]"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "ty", "type": "int"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "val", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 178, "col_offset": 35, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "binds", "type": "Dict[Any, Any]"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 181, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "expr_deep_equal", "type": "Any"}, {"lineNumber": 182, "col_offset": 62, "nodeName": "extent", "type": "Any"}, {"lineNumber": 182, "col_offset": 79, "nodeName": "extent", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "key", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "key", "type": "Any"}, {"lineNumber": 197, "col_offset": 80, "nodeName": "key", "type": "Any"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 199, "col_offset": 37, "nodeName": "key", "type": "Any"}, {"lineNumber": 200, "col_offset": 22, "nodeName": "Input", "type": "int"}, {"lineNumber": 200, "col_offset": 36, "nodeName": "OutputBuffer", "type": "int"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "ty", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "key", "type": "Any"}, {"lineNumber": 210, "col_offset": 23, "nodeName": "wrap_up_binds", "type": "Callable[[Any], Any]"}, {"lineNumber": 210, "col_offset": 42, "nodeName": "body", "type": "Any"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "make_by_min_extent", "type": "Any"}, {"lineNumber": 212, "col_offset": 51, "nodeName": "i", "type": "Any"}, {"lineNumber": 212, "col_offset": 58, "nodeName": "i", "type": "Any"}, {"lineNumber": 212, "col_offset": 63, "nodeName": "shape", "type": "Any"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "tir", "type": "Any"}, {"lineNumber": 215, "col_offset": 35, "nodeName": "_buf", "type": "Any"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "tir", "type": "Any"}, {"lineNumber": 216, "col_offset": 36, "nodeName": "_buf", "type": "Any"}, {"lineNumber": 216, "col_offset": 62, "nodeName": "convert", "type": "Any"}, {"lineNumber": 216, "col_offset": 82, "nodeName": "_scope", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "symbols", "type": "Dict[Any, Union[Tuple[int, Any], Tuple[Any, Any]]]"}, {"lineNumber": 225, "col_offset": 27, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "iter_var", "type": "Any"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "tir", "type": "Any"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 234, "col_offset": 29, "nodeName": "body", "type": "Any"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "node", "type": "Any"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 240, "col_offset": 29, "nodeName": "args", "type": "Any"}, {"lineNumber": 240, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 240, "col_offset": 52, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 245, "col_offset": 34, "nodeName": "node", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 247, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 247, "col_offset": 36, "nodeName": "arg", "type": "Any"}, {"lineNumber": 247, "col_offset": 41, "nodeName": "_attr", "type": "str"}, {"lineNumber": 247, "col_offset": 49, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 247, "col_offset": 63, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 260, "col_offset": 39, "nodeName": "literal_eval", "type": "Callable[[Union[str, unicode, _ast.AST]], Any]"}, {"lineNumber": 260, "col_offset": 56, "nodeName": "name", "type": "Any"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 263, "col_offset": 39, "nodeName": "closure_vars", "type": "Any"}, {"lineNumber": 266, "col_offset": 33, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 267, "col_offset": 18, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 267, "col_offset": 34, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 267, "col_offset": 48, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 272, "col_offset": 28, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 272, "col_offset": 39, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 272, "col_offset": 49, "nodeName": "Load", "type": "Type[_ast.Load]"}, {"lineNumber": 274, "col_offset": 26, "nodeName": "node", "type": "Any"}, {"lineNumber": 274, "col_offset": 36, "nodeName": "ast", "type": "module"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "Call", "type": "Any"}, {"lineNumber": 275, "col_offset": 36, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 275, "col_offset": 49, "nodeName": "name", "type": "Any"}, {"lineNumber": 276, "col_offset": 34, "nodeName": "Halide", "type": "Any"}, {"lineNumber": 276, "col_offset": 53, "nodeName": "op", "type": "Any"}, {"lineNumber": 276, "col_offset": 63, "nodeName": "value_index", "type": "Any"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "node", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 295, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "const", "type": "Any"}, {"lineNumber": 308, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 308, "col_offset": 55, "nodeName": "_expr", "type": "Any"}, {"lineNumber": 309, "col_offset": 16, "nodeName": "HybridParser", "type": "Type[HybridParser]"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 318, "col_offset": 50, "nodeName": "num_outputs", "type": "Any"}, {"lineNumber": 320, "col_offset": 27, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 321, "col_offset": 16, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "add_symbol", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 323, "col_offset": 32, "nodeName": "id", "type": "Any"}, {"lineNumber": 323, "col_offset": 52, "nodeName": "GlobalBuffer", "type": "int"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "rmap", "type": "Dict[Any, Any]"}, {"lineNumber": 324, "col_offset": 42, "nodeName": "output", "type": "Any"}, {"lineNumber": 324, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 325, "col_offset": 19, "nodeName": "util", "type": "Any"}, {"lineNumber": 325, "col_offset": 35, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 327, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 327, "col_offset": 29, "nodeName": "targets", "type": "Any"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "analyzer", "type": "Any"}, {"lineNumber": 335, "col_offset": 22, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "ty", "type": "Union[int, Any]"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "_", "type": "Any"}, {"lineNumber": 336, "col_offset": 24, "nodeName": "symbols", "type": "Dict[Any, Union[Tuple[int, Any], Tuple[Any, Any]]]"}, {"lineNumber": 337, "col_offset": 16, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 339, "col_offset": 26, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 339, "col_offset": 37, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 343, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 343, "col_offset": 30, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 343, "col_offset": 35, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 344, "col_offset": 42, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 345, "col_offset": 20, "nodeName": "ph", "type": "Any"}, {"lineNumber": 357, "col_offset": 20, "nodeName": "ph", "type": "Any"}, {"lineNumber": 359, "col_offset": 18, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 361, "col_offset": 16, "nodeName": "buf", "type": "Any"}, {"lineNumber": 361, "col_offset": 21, "nodeName": "args", "type": "Any"}, {"lineNumber": 362, "col_offset": 23, "nodeName": "Provide", "type": "Any"}, {"lineNumber": 362, "col_offset": 39, "nodeName": "op", "type": "Any"}, {"lineNumber": 362, "col_offset": 50, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 362, "col_offset": 55, "nodeName": "args", "type": "Any"}, {"lineNumber": 363, "col_offset": 19, "nodeName": "util", "type": "Any"}, {"lineNumber": 368, "col_offset": 14, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 374, "col_offset": 19, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 374, "col_offset": 30, "nodeName": "node", "type": "Any"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 375, "col_offset": 27, "nodeName": "node", "type": "Any"}, {"lineNumber": 387, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 387, "col_offset": 30, "nodeName": "i", "type": "Any"}, {"lineNumber": 387, "col_offset": 33, "nodeName": "Integral", "type": "Type[numbers.Integral]"}, {"lineNumber": 388, "col_offset": 20, "nodeName": "arr", "type": "Any"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "arr", "type": "Any"}, {"lineNumber": 395, "col_offset": 19, "nodeName": "tir", "type": "Any"}, {"lineNumber": 395, "col_offset": 32, "nodeName": "arr", "type": "Any"}, {"lineNumber": 395, "col_offset": 43, "nodeName": "arr", "type": "Any"}, {"lineNumber": 396, "col_offset": 32, "nodeName": "Call", "type": "Any"}, {"lineNumber": 396, "col_offset": 51, "nodeName": "arr", "type": "Any"}, {"lineNumber": 396, "col_offset": 59, "nodeName": "arr", "type": "Any"}, {"lineNumber": 400, "col_offset": 11, "nodeName": "sys", "type": "module"}, {"lineNumber": 407, "col_offset": 45, "nodeName": "ast", "type": "module"}, {"lineNumber": 408, "col_offset": 44, "nodeName": "ast", "type": "module"}, {"lineNumber": 409, "col_offset": 24, "nodeName": "option", "type": "Any"}, {"lineNumber": 414, "col_offset": 15, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 414, "col_offset": 38, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 414, "col_offset": 49, "nodeName": "node", "type": "Any"}, {"lineNumber": 419, "col_offset": 23, "nodeName": "visit_list_to_block", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 419, "col_offset": 43, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 419, "col_offset": 55, "nodeName": "body", "type": "Any"}, {"lineNumber": 421, "col_offset": 23, "nodeName": "visit_list_to_block", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 421, "col_offset": 43, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 421, "col_offset": 55, "nodeName": "orelse", "type": "Any"}, {"lineNumber": 422, "col_offset": 19, "nodeName": "util", "type": "Any"}, {"lineNumber": 427, "col_offset": 44, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 427, "col_offset": 56, "nodeName": "node", "type": "Any"}, {"lineNumber": 430, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 437, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 441, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 441, "col_offset": 29, "nodeName": "ops", "type": "Any"}, {"lineNumber": 441, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 441, "col_offset": 46, "nodeName": "comparators", "type": "Any"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 443, "col_offset": 26, "nodeName": "node", "type": "Any"}, {"lineNumber": 444, "col_offset": 16, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 444, "col_offset": 39, "nodeName": "node", "type": "Any"}, {"lineNumber": 446, "col_offset": 27, "nodeName": "node", "type": "Any"}, {"lineNumber": 447, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "res", "type": "List[Any]"}, {"lineNumber": 449, "col_offset": 68, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 449, "col_offset": 73, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 456, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 456, "col_offset": 40, "nodeName": "op", "type": "Any"}, {"lineNumber": 456, "col_offset": 49, "nodeName": "Not", "type": "Type[_ast.Not]"}, {"lineNumber": 458, "col_offset": 19, "nodeName": "operator", "type": "module"}, {"lineNumber": 458, "col_offset": 33, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 459, "col_offset": 36, "nodeName": "node", "type": "Any"}, {"lineNumber": 459, "col_offset": 46, "nodeName": "And", "type": "Type[_ast.And]"}, {"lineNumber": 459, "col_offset": 55, "nodeName": "Or", "type": "Type[_ast.Or]"}, {"lineNumber": 461, "col_offset": 18, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 461, "col_offset": 41, "nodeName": "node", "type": "Any"}, {"lineNumber": 462, "col_offset": 15, "nodeName": "HybridParser", "type": "Type[HybridParser]"}, {"lineNumber": 467, "col_offset": 15, "nodeName": "HybridParser", "type": "Type[HybridParser]"}, {"lineNumber": 473, "col_offset": 15, "nodeName": "HybridParser", "type": "Type[HybridParser]"}, {"lineNumber": 478, "col_offset": 36, "nodeName": "node", "type": "Any"}, {"lineNumber": 478, "col_offset": 47, "nodeName": "ast", "type": "module"}, {"lineNumber": 482, "col_offset": 16, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 482, "col_offset": 39, "nodeName": "node", "type": "Any"}, {"lineNumber": 485, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 27, "nodeName": "calls", "type": "Any"}, {"lineNumber": 485, "col_offset": 34, "nodeName": "func_id", "type": "Any"}, {"lineNumber": 487, "col_offset": 36, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 490, "col_offset": 31, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 493, "col_offset": 54, "nodeName": "outs", "type": "Any"}, {"lineNumber": 499, "col_offset": 36, "nodeName": "node", "type": "Any"}, {"lineNumber": 499, "col_offset": 49, "nodeName": "ast", "type": "module"}, {"lineNumber": 505, "col_offset": 18, "nodeName": "analyzer", "type": "Any"}, {"lineNumber": 506, "col_offset": 18, "nodeName": "analyzer", "type": "Any"}, {"lineNumber": 512, "col_offset": 23, "nodeName": "low", "type": "Any"}, {"lineNumber": 512, "col_offset": 34, "nodeName": "ext", "type": "Any"}, {"lineNumber": 514, "col_offset": 16, "nodeName": "log", "type": "Callable[..., None]"}, {"lineNumber": 514, "col_offset": 28, "nodeName": "CRITICAL", "type": "int"}, {"lineNumber": 518, "col_offset": 32, "nodeName": "low", "type": "Any"}, {"lineNumber": 518, "col_offset": 38, "nodeName": "ext", "type": "Any"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "add_symbol", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 519, "col_offset": 32, "nodeName": "_name", "type": "Any"}, {"lineNumber": 519, "col_offset": 39, "nodeName": "ConstLoopVar", "type": "int"}, {"lineNumber": 519, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 520, "col_offset": 23, "nodeName": "visit_list_to_block", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 520, "col_offset": 43, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 520, "col_offset": 55, "nodeName": "body", "type": "Any"}, {"lineNumber": 521, "col_offset": 23, "nodeName": "wrap_up_realize", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 521, "col_offset": 44, "nodeName": "node", "type": "Any"}, {"lineNumber": 521, "col_offset": 50, "nodeName": "body", "type": "Any"}, {"lineNumber": 522, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 522, "col_offset": 30, "nodeName": "body", "type": "Any"}, {"lineNumber": 523, "col_offset": 16, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 523, "col_offset": 33, "nodeName": "_name", "type": "Any"}, {"lineNumber": 527, "col_offset": 29, "nodeName": "for_type", "type": "Any"}, {"lineNumber": 528, "col_offset": 32, "nodeName": "te", "type": "Any"}, {"lineNumber": 529, "col_offset": 19, "nodeName": "expr_deep_equal", "type": "Any"}, {"lineNumber": 529, "col_offset": 52, "nodeName": "low", "type": "Any"}, {"lineNumber": 530, "col_offset": 25, "nodeName": "iter_var", "type": "Any"}, {"lineNumber": 530, "col_offset": 36, "nodeName": "low", "type": "Any"}, {"lineNumber": 531, "col_offset": 12, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 531, "col_offset": 35, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 532, "col_offset": 40, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 532, "col_offset": 52, "nodeName": "node", "type": "Any"}, {"lineNumber": 534, "col_offset": 29, "nodeName": "for_type", "type": "Any"}, {"lineNumber": 535, "col_offset": 12, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 535, "col_offset": 35, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 537, "col_offset": 40, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 537, "col_offset": 52, "nodeName": "node", "type": "Any"}, {"lineNumber": 547, "col_offset": 18, "nodeName": "tir", "type": "Any"}, {"lineNumber": 547, "col_offset": 40, "nodeName": "const", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 558, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 560, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 560, "col_offset": 40, "nodeName": "value", "type": "Any"}, {"lineNumber": 560, "col_offset": 52, "nodeName": "Tuple", "type": "Type[_ast.Tuple]"}, {"lineNumber": 562, "col_offset": 29, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 564, "col_offset": 19, "nodeName": "i", "type": "Any"}, {"lineNumber": 564, "col_offset": 28, "nodeName": "i", "type": "Any"}, {"lineNumber": 564, "col_offset": 33, "nodeName": "elts", "type": "Any"}, {"lineNumber": 565, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 565, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 565, "col_offset": 46, "nodeName": "ids", "type": "List[Any]"}, {"lineNumber": 566, "col_offset": 26, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 567, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 567, "col_offset": 24, "nodeName": "logging", "type": "module"}, {"lineNumber": 568, "col_offset": 24, "nodeName": "symbols", "type": "Dict[Any, Union[Tuple[int, Any], Tuple[Any, Any]]]"}, {"lineNumber": 574, "col_offset": 21, "nodeName": "visit", "type": "Callable[[_ast.AST], Any]"}, {"lineNumber": 574, "col_offset": 32, "nodeName": "i", "type": "Any"}, {"lineNumber": 574, "col_offset": 39, "nodeName": "i", "type": "Any"}, {"lineNumber": 574, "col_offset": 44, "nodeName": "elts", "type": "Any"}, {"lineNumber": 583, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 583, "col_offset": 35, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 583, "col_offset": 46, "nodeName": "node", "type": "Any"}, {"lineNumber": 584, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 584, "col_offset": 46, "nodeName": "util", "type": "Any"}, {"lineNumber": 651, "col_offset": 12, "nodeName": "input_tensors", "type": "List[Any]"}, {"lineNumber": 658, "col_offset": 9, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 660, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 660, "col_offset": 43, "nodeName": "outputs", "type": "List[nothing]"}, {"lineNumber": 58, "col_offset": 46, "nodeName": "util", "type": "Any"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "ir", "type": "Any"}, {"lineNumber": 59, "col_offset": 69, "nodeName": "make_nop", "type": "Any"}, {"lineNumber": 100, "col_offset": 38, "nodeName": "sys", "type": "module"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 170, "col_offset": 35, "nodeName": "key", "type": "Any"}, {"lineNumber": 173, "col_offset": 79, "nodeName": "key", "type": "Any"}, {"lineNumber": 173, "col_offset": 84, "nodeName": "old", "type": "str"}, {"lineNumber": 173, "col_offset": 89, "nodeName": "new", "type": "str"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "val", "type": "Any"}, {"lineNumber": 178, "col_offset": 35, "nodeName": "binds", "type": "Dict[Any, Any]"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "name", "type": "Any"}, {"lineNumber": 181, "col_offset": 30, "nodeName": "var", "type": "Any"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 182, "col_offset": 62, "nodeName": "dom", "type": "Any"}, {"lineNumber": 182, "col_offset": 79, "nodeName": "dom", "type": "Any"}, {"lineNumber": 197, "col_offset": 36, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 200, "col_offset": 22, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 200, "col_offset": 36, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 204, "col_offset": 37, "nodeName": "ty", "type": "Any"}, {"lineNumber": 204, "col_offset": 43, "nodeName": "BufferVar", "type": "int"}, {"lineNumber": 204, "col_offset": 65, "nodeName": "lower", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "to_pop", "type": "List[Any]"}, {"lineNumber": 210, "col_offset": 23, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "Range", "type": "Any"}, {"lineNumber": 212, "col_offset": 63, "nodeName": "_buf", "type": "Any"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 216, "col_offset": 62, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 234, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 240, "col_offset": 29, "nodeName": "args", "type": "Any"}, {"lineNumber": 240, "col_offset": 52, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 246, "col_offset": 28, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 247, "col_offset": 63, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 247, "col_offset": 73, "nodeName": "idx", "type": "int"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "sys", "type": "module"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 260, "col_offset": 39, "nodeName": "ast", "type": "module"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 263, "col_offset": 39, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 263, "col_offset": 57, "nodeName": "name", "type": "Any"}, {"lineNumber": 272, "col_offset": 39, "nodeName": "node", "type": "Any"}, {"lineNumber": 272, "col_offset": 49, "nodeName": "ast", "type": "module"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "tir", "type": "Any"}, {"lineNumber": 275, "col_offset": 36, "nodeName": "entry", "type": "Any"}, {"lineNumber": 275, "col_offset": 49, "nodeName": "entry", "type": "Any"}, {"lineNumber": 276, "col_offset": 34, "nodeName": "Call", "type": "Any"}, {"lineNumber": 276, "col_offset": 53, "nodeName": "entry", "type": "Any"}, {"lineNumber": 276, "col_offset": 63, "nodeName": "entry", "type": "Any"}, {"lineNumber": 277, "col_offset": 27, "nodeName": "const", "type": "Any"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 288, "col_offset": 40, "nodeName": "n", "type": "Any"}, {"lineNumber": 288, "col_offset": 48, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 302, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 302, "col_offset": 33, "nodeName": "buf", "type": "Any"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 309, "col_offset": 42, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 309, "col_offset": 47, "nodeName": "op", "type": "Any"}, {"lineNumber": 318, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 318, "col_offset": 33, "nodeName": "targets", "type": "Any"}, {"lineNumber": 318, "col_offset": 50, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 321, "col_offset": 33, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 321, "col_offset": 61, "nodeName": "Name", "type": "Type[_ast.Name]"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 323, "col_offset": 52, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 323, "col_offset": 73, "nodeName": "output", "type": "Any"}, {"lineNumber": 323, "col_offset": 84, "nodeName": "i", "type": "int"}, {"lineNumber": 324, "col_offset": 21, "nodeName": "op", "type": "Any"}, {"lineNumber": 324, "col_offset": 42, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 327, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 335, "col_offset": 22, "nodeName": "symbols", "type": "Dict[Any, Union[Tuple[int, Any], Tuple[Any, Any]]]"}, {"lineNumber": 336, "col_offset": 24, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 336, "col_offset": 37, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 337, "col_offset": 33, "nodeName": "ty", "type": "Union[Any, int]"}, {"lineNumber": 337, "col_offset": 39, "nodeName": "LoopVar", "type": "int"}, {"lineNumber": 341, "col_offset": 33, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 344, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 344, "col_offset": 27, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 344, "col_offset": 34, "nodeName": "scope", "type": "Any"}, {"lineNumber": 345, "col_offset": 25, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 345, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 346, "col_offset": 20, "nodeName": "add_symbol", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 346, "col_offset": 36, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 346, "col_offset": 84, "nodeName": "ph", "type": "Any"}, {"lineNumber": 347, "col_offset": 23, "nodeName": "scope", "type": "Any"}, {"lineNumber": 349, "col_offset": 27, "nodeName": "make_nop", "type": "Any"}, {"lineNumber": 350, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 350, "col_offset": 30, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 350, "col_offset": 35, "nodeName": "halide_imm_types", "type": "Any"}, {"lineNumber": 350, "col_offset": 62, "nodeName": "Store", "type": "Type[_ast.Store]"}, {"lineNumber": 350, "col_offset": 79, "nodeName": "rw", "type": "Any"}, {"lineNumber": 351, "col_offset": 20, "nodeName": "add_symbol", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 351, "col_offset": 36, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 351, "col_offset": 41, "nodeName": "ConstVar", "type": "int"}, {"lineNumber": 351, "col_offset": 58, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 353, "col_offset": 20, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 357, "col_offset": 25, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 358, "col_offset": 20, "nodeName": "add_symbol", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 358, "col_offset": 36, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 358, "col_offset": 41, "nodeName": "BufferVar", "type": "int"}, {"lineNumber": 358, "col_offset": 59, "nodeName": "ph", "type": "Any"}, {"lineNumber": 362, "col_offset": 23, "nodeName": "tir", "type": "Any"}, {"lineNumber": 362, "col_offset": 39, "nodeName": "buf", "type": "Any"}, {"lineNumber": 387, "col_offset": 33, "nodeName": "numbers", "type": "module"}, {"lineNumber": 388, "col_offset": 26, "nodeName": "arr", "type": "Any"}, {"lineNumber": 390, "col_offset": 20, "nodeName": "_internal_assert", "type": "Any"}, {"lineNumber": 392, "col_offset": 26, "nodeName": "arr", "type": "Any"}, {"lineNumber": 395, "col_offset": 19, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 396, "col_offset": 32, "nodeName": "_expr", "type": "Any"}, {"lineNumber": 419, "col_offset": 43, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 419, "col_offset": 55, "nodeName": "node", "type": "Any"}, {"lineNumber": 421, "col_offset": 43, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 421, "col_offset": 55, "nodeName": "node", "type": "Any"}, {"lineNumber": 441, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 441, "col_offset": 46, "nodeName": "node", "type": "Any"}, {"lineNumber": 448, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 449, "col_offset": 23, "nodeName": "_binop_maker", "type": "Dict[Union[Type[_ast.Add], Type[_ast.Sub], Type[_ast.Mult], Type[_ast.Div], Type[_ast.FloorDiv], Type[_ast.Mod], Type[_ast.BitOr], Type[_ast.BitAnd], Type[_ast.BitXor], Type[_ast.Gt], Type[_ast.GtE], Type[_ast.Lt], Type[_ast.LtE], Type[_ast.Eq], Type[_ast.NotEq], Type[_ast.And], Type[_ast.Or]], Any]"}, {"lineNumber": 456, "col_offset": 40, "nodeName": "node", "type": "Any"}, {"lineNumber": 456, "col_offset": 49, "nodeName": "ast", "type": "module"}, {"lineNumber": 458, "col_offset": 33, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 458, "col_offset": 44, "nodeName": "values", "type": "Any"}, {"lineNumber": 459, "col_offset": 46, "nodeName": "ast", "type": "module"}, {"lineNumber": 459, "col_offset": 55, "nodeName": "ast", "type": "module"}, {"lineNumber": 462, "col_offset": 41, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 462, "col_offset": 46, "nodeName": "op", "type": "Any"}, {"lineNumber": 467, "col_offset": 43, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 467, "col_offset": 48, "nodeName": "op", "type": "Any"}, {"lineNumber": 473, "col_offset": 41, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 473, "col_offset": 46, "nodeName": "op", "type": "Any"}, {"lineNumber": 487, "col_offset": 36, "nodeName": "symbols", "type": "Dict[Any, Union[Tuple[int, Any], Tuple[Any, Any]]]"}, {"lineNumber": 505, "col_offset": 18, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 506, "col_offset": 18, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 507, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 507, "col_offset": 40, "nodeName": "low", "type": "Any"}, {"lineNumber": 507, "col_offset": 45, "nodeName": "ConstExpr", "type": "Any"}, {"lineNumber": 508, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 508, "col_offset": 40, "nodeName": "ext", "type": "Any"}, {"lineNumber": 508, "col_offset": 45, "nodeName": "ConstExpr", "type": "Any"}, {"lineNumber": 514, "col_offset": 16, "nodeName": "logging", "type": "module"}, {"lineNumber": 514, "col_offset": 28, "nodeName": "logging", "type": "module"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 519, "col_offset": 39, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 520, "col_offset": 43, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 520, "col_offset": 55, "nodeName": "node", "type": "Any"}, {"lineNumber": 521, "col_offset": 23, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 522, "col_offset": 16, "nodeName": "bodies", "type": "List[Any]"}, {"lineNumber": 523, "col_offset": 16, "nodeName": "symbols", "type": "Dict[Any, Union[Tuple[int, Any], Tuple[Any, Any]]]"}, {"lineNumber": 528, "col_offset": 32, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 529, "col_offset": 19, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 529, "col_offset": 57, "nodeName": "const", "type": "Any"}, {"lineNumber": 545, "col_offset": 33, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 545, "col_offset": 44, "nodeName": "for_type", "type": "Any"}, {"lineNumber": 545, "col_offset": 54, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 547, "col_offset": 18, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 547, "col_offset": 40, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 554, "col_offset": 29, "nodeName": "ty", "type": "Any"}, {"lineNumber": 554, "col_offset": 35, "nodeName": "LoopVar", "type": "int"}, {"lineNumber": 558, "col_offset": 19, "nodeName": "node", "type": "Any"}, {"lineNumber": 560, "col_offset": 40, "nodeName": "node", "type": "Any"}, {"lineNumber": 560, "col_offset": 52, "nodeName": "ast", "type": "module"}, {"lineNumber": 564, "col_offset": 33, "nodeName": "value", "type": "Any"}, {"lineNumber": 565, "col_offset": 29, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 565, "col_offset": 33, "nodeName": "ids", "type": "List[Any]"}, {"lineNumber": 568, "col_offset": 24, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 568, "col_offset": 37, "nodeName": "i", "type": "Any"}, {"lineNumber": 574, "col_offset": 21, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 574, "col_offset": 44, "nodeName": "node", "type": "Any"}, {"lineNumber": 654, "col_offset": 16, "nodeName": "get_input_tensors", "type": "Callable[[Any], Any]"}, {"lineNumber": 654, "col_offset": 34, "nodeName": "i", "type": "Any"}, {"lineNumber": 660, "col_offset": 43, "nodeName": "parser", "type": "HybridParser"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 59, "col_offset": 69, "nodeName": "util", "type": "Any"}, {"lineNumber": 178, "col_offset": 35, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "var", "type": "Any"}, {"lineNumber": 181, "col_offset": 30, "nodeName": "val", "type": "Any"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "tir", "type": "Any"}, {"lineNumber": 182, "col_offset": 62, "nodeName": "val_", "type": "Any"}, {"lineNumber": 182, "col_offset": 79, "nodeName": "val", "type": "Any"}, {"lineNumber": 197, "col_offset": 36, "nodeName": "symbols", "type": "Dict[Any, Union[Tuple[int, Any], Tuple[Any, Any]]]"}, {"lineNumber": 204, "col_offset": 43, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 216, "col_offset": 62, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 240, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 246, "col_offset": 28, "nodeName": "sys", "type": "module"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 275, "col_offset": 62, "nodeName": "const", "type": "Any"}, {"lineNumber": 276, "col_offset": 34, "nodeName": "_expr", "type": "Any"}, {"lineNumber": 277, "col_offset": 27, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 288, "col_offset": 40, "nodeName": "node", "type": "Any"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 309, "col_offset": 47, "nodeName": "node", "type": "Any"}, {"lineNumber": 318, "col_offset": 33, "nodeName": "node", "type": "Any"}, {"lineNumber": 321, "col_offset": 44, "nodeName": "targets", "type": "Any"}, {"lineNumber": 321, "col_offset": 61, "nodeName": "ast", "type": "module"}, {"lineNumber": 323, "col_offset": 32, "nodeName": "targets", "type": "Any"}, {"lineNumber": 323, "col_offset": 73, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 335, "col_offset": 22, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 337, "col_offset": 39, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 341, "col_offset": 44, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 345, "col_offset": 25, "nodeName": "te", "type": "Any"}, {"lineNumber": 345, "col_offset": 57, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 345, "col_offset": 69, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 346, "col_offset": 20, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 346, "col_offset": 41, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 346, "col_offset": 49, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 348, "col_offset": 44, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 349, "col_offset": 27, "nodeName": "util", "type": "Any"}, {"lineNumber": 350, "col_offset": 35, "nodeName": "util", "type": "Any"}, {"lineNumber": 350, "col_offset": 62, "nodeName": "ast", "type": "module"}, {"lineNumber": 351, "col_offset": 20, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 351, "col_offset": 41, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 353, "col_offset": 37, "nodeName": "device", "type": "int"}, {"lineNumber": 357, "col_offset": 25, "nodeName": "te", "type": "Any"}, {"lineNumber": 357, "col_offset": 57, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 357, "col_offset": 73, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 358, "col_offset": 20, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 358, "col_offset": 41, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 362, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 388, "col_offset": 30, "nodeName": "i", "type": "Any"}, {"lineNumber": 390, "col_offset": 37, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 390, "col_offset": 48, "nodeName": "i", "type": "Any"}, {"lineNumber": 392, "col_offset": 30, "nodeName": "value", "type": "Any"}, {"lineNumber": 449, "col_offset": 23, "nodeName": "HybridParser", "type": "Type[HybridParser]"}, {"lineNumber": 458, "col_offset": 44, "nodeName": "node", "type": "Any"}, {"lineNumber": 462, "col_offset": 46, "nodeName": "node", "type": "Any"}, {"lineNumber": 467, "col_offset": 48, "nodeName": "node", "type": "Any"}, {"lineNumber": 473, "col_offset": 46, "nodeName": "node", "type": "Any"}, {"lineNumber": 487, "col_offset": 36, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 507, "col_offset": 45, "nodeName": "_expr", "type": "Any"}, {"lineNumber": 508, "col_offset": 45, "nodeName": "_expr", "type": "Any"}, {"lineNumber": 523, "col_offset": 16, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 529, "col_offset": 19, "nodeName": "tir", "type": "Any"}, {"lineNumber": 529, "col_offset": 57, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 547, "col_offset": 40, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 554, "col_offset": 35, "nodeName": "Symbol", "type": "Type[Symbol]"}, {"lineNumber": 554, "col_offset": 54, "nodeName": "ty", "type": "Any"}, {"lineNumber": 554, "col_offset": 58, "nodeName": "_", "type": "Any"}, {"lineNumber": 554, "col_offset": 63, "nodeName": "values", "type": "Callable"}, {"lineNumber": 562, "col_offset": 33, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 562, "col_offset": 44, "nodeName": "i", "type": "Any"}, {"lineNumber": 562, "col_offset": 47, "nodeName": "Name", "type": "Type[_ast.Name]"}, {"lineNumber": 562, "col_offset": 61, "nodeName": "i", "type": "Any"}, {"lineNumber": 562, "col_offset": 66, "nodeName": "elts", "type": "Any"}, {"lineNumber": 564, "col_offset": 33, "nodeName": "node", "type": "Any"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "val", "type": "Any"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 197, "col_offset": 36, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 204, "col_offset": 65, "nodeName": "name", "type": "Any"}, {"lineNumber": 275, "col_offset": 62, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 277, "col_offset": 27, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 321, "col_offset": 44, "nodeName": "node", "type": "Any"}, {"lineNumber": 321, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 323, "col_offset": 32, "nodeName": "node", "type": "Any"}, {"lineNumber": 323, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 324, "col_offset": 21, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 341, "col_offset": 44, "nodeName": "symbols", "type": "Dict[Any, Union[Tuple[int, Any], Tuple[Any, Any]]]"}, {"lineNumber": 345, "col_offset": 25, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 353, "col_offset": 37, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 357, "col_offset": 25, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 357, "col_offset": 57, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 390, "col_offset": 52, "nodeName": "IntImm", "type": "Any"}, {"lineNumber": 392, "col_offset": 30, "nodeName": "i", "type": "Any"}, {"lineNumber": 449, "col_offset": 49, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 529, "col_offset": 19, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 529, "col_offset": 57, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 554, "col_offset": 63, "nodeName": "symbols", "type": "Dict[Any, Union[Tuple[int, Any], Tuple[Any, Any]]]"}, {"lineNumber": 562, "col_offset": 47, "nodeName": "ast", "type": "module"}, {"lineNumber": 562, "col_offset": 66, "nodeName": "value", "type": "Any"}, {"lineNumber": 204, "col_offset": 65, "nodeName": "ty", "type": "Any"}, {"lineNumber": 275, "col_offset": 62, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 324, "col_offset": 21, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 324, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 341, "col_offset": 44, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 346, "col_offset": 57, "nodeName": "title", "type": "Any"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 390, "col_offset": 52, "nodeName": "_expr", "type": "Any"}, {"lineNumber": 449, "col_offset": 54, "nodeName": "ops", "type": "Any"}, {"lineNumber": 554, "col_offset": 63, "nodeName": "self", "type": "HybridParser"}, {"lineNumber": 562, "col_offset": 66, "nodeName": "node", "type": "Any"}, {"lineNumber": 346, "col_offset": 57, "nodeName": "scope", "type": "Any"}, {"lineNumber": 449, "col_offset": 54, "nodeName": "node", "type": "Any"}, {"lineNumber": 449, "col_offset": 63, "nodeName": "i", "type": "int"}]