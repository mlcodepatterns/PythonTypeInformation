[{"lineNumber": 41, "col_offset": 0, "nodeName": "convert_graph_layout", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "target_from_cli", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "tracker_host_port_from_cli", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 0, "nodeName": "parse_shape_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "rpc_hostname", "type": "None"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "rpc_port", "type": "None"}, {"lineNumber": 133, "col_offset": 7, "nodeName": "rpc_tracker_str", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "pattern", "type": "str"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "input_mappings", "type": "List[Any]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "shape_dict", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "input_mappings", "type": "List[Any]"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "shape_dict", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 65, "col_offset": 10, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 98, "col_offset": 7, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 51, "nodeName": "target", "type": "Union[Any, str]"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "Target", "type": "Any"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "target", "type": "Union[Any, str]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "parsed_url", "type": "urllib.parse.ParseResult"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "rpc_hostname", "type": "Any"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "hostname", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "rpc_port", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "rpc_hostname", "type": "Any"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "rpc_port", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "pattern", "type": "str"}, {"lineNumber": 160, "col_offset": 41, "nodeName": "inputs_string", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "input_mappings", "type": "List[Any]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 27, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "desired_layout", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "desired_layout", "type": "Any"}, {"lineNumber": 65, "col_offset": 10, "nodeName": "transform", "type": "Any"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "PassContext", "type": "Any"}, {"lineNumber": 98, "col_offset": 7, "nodeName": "path", "type": "module"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "target_file", "type": "TextIO"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "target", "type": "str"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "target", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "urlparse", "type": "Callable"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "parsed_url", "type": "urllib.parse.ParseResult"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "port", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 48, "nodeName": "rpc_hostname", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 44, "nodeName": "rpc_port", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "re", "type": "module"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "ArgumentTypeError", "type": "Type[argparse.ArgumentTypeError]"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "replace", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 171, "col_offset": 14, "nodeName": "shape_string", "type": "Any"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "split", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "shape_dict", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "RemoveUnusedFunctions", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "ConvertLayout", "type": "Any"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "desired_layouts", "type": "Dict[str, List[Union[Any, str]]]"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "transform", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "seq", "type": "Any"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "mod", "type": "Any"}, {"lineNumber": 98, "col_offset": 7, "nodeName": "os", "type": "module"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "target", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 60, "nodeName": "target", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "rpc_tracker_str", "type": "Any"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "parsed_url", "type": "urllib.parse.ParseResult"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "argparse", "type": "module"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 173, "col_offset": 59, "nodeName": "x", "type": "Any"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "transform", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "transform", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "readlines", "type": "Callable"}, {"lineNumber": 173, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 173, "col_offset": 43, "nodeName": "Any", "type": "Any"}, {"lineNumber": 173, "col_offset": 64, "nodeName": "split", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "target_file", "type": "TextIO"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 173, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 173, "col_offset": 43, "nodeName": "relay", "type": "Any"}, {"lineNumber": 173, "col_offset": 64, "nodeName": "strip", "type": "Any"}, {"lineNumber": 173, "col_offset": 64, "nodeName": "shape_string", "type": "Any"}]