[{"lineNumber": 31, "col_offset": 0, "nodeName": "is_primitive", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "unpack", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "pack", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "ExprMutator", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "current_scope", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "shape_of", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "visit_tuple", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "compute_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "compute_storage_in_relay", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "compute_storage", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "make_static_allocation", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "visit_let", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "visit_call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "transform_function", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 289, "col_offset": 0, "nodeName": "register_func", "type": "Any"}, {"lineNumber": 289, "col_offset": 47, "nodeName": "ManifestAlloc", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "typ", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "typ", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "invoke_tvm", "type": "Any"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "invoke_tvm_op", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "alloc_storage", "type": "Any"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "alloc_storage", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "alloc_tensor", "type": "Any"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "alloc_tensor", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "shape_func", "type": "Any"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "shape_func", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "scopes", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "target_host", "type": "Any"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "target_host", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "compute_dtype", "type": "str"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "scope", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "new_fields", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "field", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "fields", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "align", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "els", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "num", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "num", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "div", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "size", "type": "int"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "sh", "type": "int"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "scope", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "new_body", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "target_host", "type": "Any"}, {"lineNumber": 278, "col_offset": 27, "nodeName": "target_host", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "ea", "type": "ManifestAllocPass"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "func", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "call", "type": "Any"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "op", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "LinearizeRetType"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "_unpack", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "typ", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "memory", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "memory", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "memory", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "memory", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "scopes", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "shape_of", "type": "Any"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "e", "type": "Any"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "compute_dtype", "type": "str"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "current_scope", "type": "Callable[[], Any]"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "tup", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "field", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "new_fields", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "DataType", "type": "Any"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "align", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "align", "type": "int"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "const", "type": "Any"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "align", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "DataType", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "prod", "type": "Any"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "const", "type": "Any"}, {"lineNumber": 124, "col_offset": 51, "nodeName": "compute_dtype", "type": "str"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "num", "type": "Any"}, {"lineNumber": 126, "col_offset": 14, "nodeName": "const", "type": "Any"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "compute_dtype", "type": "str"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "els", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "DataType", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "size", "type": "int"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "sh", "type": "int"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "const", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "size", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "shape", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "compute_storage", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 36, "nodeName": "tensor_type", "type": "Any"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "compute_alignment", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "tensor_type", "type": "Any"}, {"lineNumber": 149, "col_offset": 14, "nodeName": "let", "type": "Any"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "alloc_tensor", "type": "Any"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "sto", "type": "Any"}, {"lineNumber": 152, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 152, "col_offset": 47, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 152, "col_offset": 54, "nodeName": "shape", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "let", "type": "Any"}, {"lineNumber": 153, "col_offset": 49, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "ScopeBuilder", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "scope", "type": "Any"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "let", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "Let", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "new_val", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "let", "type": "Any"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "body", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "visit", "type": "Any"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "let", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "new_body", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "is_primitive", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "call", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "scope", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "new_args", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "ins", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "ret_type", "type": "Any"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "checked_type", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "view", "type": "LinearizeRetType"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "out_types", "type": "List[Any]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "is_dynamic", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "is_dynamic", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "import_from_std", "type": "Any"}, {"lineNumber": 284, "col_offset": 13, "nodeName": "ManifestAllocPass", "type": "Type[ManifestAllocPass]"}, {"lineNumber": 284, "col_offset": 31, "nodeName": "target_host", "type": "Any"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "visit", "type": "Any"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "func", "type": "Any"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "call", "type": "Any"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "op", "type": "Any"}, {"lineNumber": 33, "col_offset": 51, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 33, "col_offset": 55, "nodeName": "Primitive", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "typ", "type": "Any"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "self", "type": "LinearizeRetType"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "typ", "type": "Any"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "seq", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "seq", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "_pack", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "seq", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "typ", "type": "Any"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "op", "type": "Any"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "op", "type": "Any"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "op", "type": "Any"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "op", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "ScopeBuilder", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "visit", "type": "Any"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "field", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "field", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "Constant", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "field", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "field", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "expr", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "bits", "type": "Any"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "expr", "type": "Any"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "op", "type": "Any"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "expr", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "bits", "type": "Any"}, {"lineNumber": 124, "col_offset": 38, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 124, "col_offset": 51, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "const", "type": "Any"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "compute_dtype", "type": "str"}, {"lineNumber": 126, "col_offset": 14, "nodeName": "expr", "type": "Any"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "num", "type": "Any"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "div", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "tensor_type", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "sh", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "sh", "type": "Any"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "expr", "type": "Any"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "compute_dtype", "type": "str"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "sh", "type": "Any"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "sh", "type": "Any"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "const", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "const", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 147, "col_offset": 43, "nodeName": "tensor_type", "type": "Any"}, {"lineNumber": 149, "col_offset": 14, "nodeName": "scope", "type": "Any"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 149, "col_offset": 45, "nodeName": "i", "type": "Any"}, {"lineNumber": 149, "col_offset": 49, "nodeName": "alloc_storage", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "size", "type": "Any"}, {"lineNumber": 150, "col_offset": 18, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 152, "col_offset": 54, "nodeName": "tensor_type", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "scope", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 153, "col_offset": 45, "nodeName": "i", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "scopes", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "expr", "type": "Any"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "visit", "type": "Any"}, {"lineNumber": 160, "col_offset": 33, "nodeName": "value", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "let", "type": "Any"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "var", "type": "Any"}, {"lineNumber": 161, "col_offset": 31, "nodeName": "new_val", "type": "Any"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "let", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "scope", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "scopes", "type": "List[Any]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "scope", "type": "Any"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "current_scope", "type": "Callable[[], Any]"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "new_args", "type": "List[Any]"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "call", "type": "Any"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "LinearizeRetType", "type": "Type[LinearizeRetType]"}, {"lineNumber": 177, "col_offset": 36, "nodeName": "ret_type", "type": "Any"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "unpack", "type": "Callable[[], Any]"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "type_has_any", "type": "Any"}, {"lineNumber": 180, "col_offset": 41, "nodeName": "ret_type", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "shape_func_ins", "type": "List[Any]"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "engine", "type": "Any"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "cfunc", "type": "Any"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "input_states", "type": "Any"}, {"lineNumber": 189, "col_offset": 31, "nodeName": "shape_func_param_states", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "is_inputs", "type": "List[int]"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "input_pos", "type": "int"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "out_shapes", "type": "List[Any]"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "storages", "type": "List[Any]"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "outs", "type": "List[Any]"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "sh_ty_storage", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "tuple_outs", "type": "Any"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "invoke", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "outs", "type": "List[Any]"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "invoke", "type": "Any"}, {"lineNumber": 271, "col_offset": 19, "nodeName": "visit_call", "type": "Any"}, {"lineNumber": 271, "col_offset": 38, "nodeName": "call", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 284, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "ea", "type": "ManifestAllocPass"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "call", "type": "Any"}, {"lineNumber": 33, "col_offset": 55, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "ty", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "typ", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "typ", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "TupleType", "type": "Any"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "field_ty", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "fields", "type": "Any"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "ty", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "value", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "typ", "type": "Any"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "TupleType", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "tuple_out", "type": "List[nothing]"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "self", "type": "LinearizeRetType"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "let", "type": "Any"}, {"lineNumber": 108, "col_offset": 43, "nodeName": "field", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "new_fields", "type": "List[Any]"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 124, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "expr", "type": "Any"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "tensor_type", "type": "Any"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "bits", "type": "Any"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "tensor_type", "type": "Any"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "expr", "type": "Any"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "astype", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "compute_dtype", "type": "str"}, {"lineNumber": 143, "col_offset": 43, "nodeName": "compute_dtype", "type": "str"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "expr", "type": "Any"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 40, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 145, "col_offset": 54, "nodeName": "compute_dtype", "type": "str"}, {"lineNumber": 149, "col_offset": 49, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 160, "col_offset": 33, "nodeName": "let", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "scope", "type": "Any"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "let", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "visit", "type": "Any"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "arg", "type": "Any"}, {"lineNumber": 174, "col_offset": 44, "nodeName": "arg", "type": "Any"}, {"lineNumber": 174, "col_offset": 51, "nodeName": "args", "type": "Any"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "expr", "type": "Any"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "view", "type": "LinearizeRetType"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "ty", "type": "Any"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "get", "type": "Any"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "lower_shape_func", "type": "Any"}, {"lineNumber": 188, "col_offset": 48, "nodeName": "op", "type": "Any"}, {"lineNumber": 188, "col_offset": 57, "nodeName": "target_host", "type": "Any"}, {"lineNumber": 189, "col_offset": 31, "nodeName": "cfunc", "type": "Any"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 193, "col_offset": 39, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "state", "type": "int"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "out", "type": "Any"}, {"lineNumber": 223, "col_offset": 30, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 223, "col_offset": 40, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "tt", "type": "Any"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "alloc", "type": "Any"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "alloc", "type": "Any"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "shape_func", "type": "Any"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "op", "type": "Any"}, {"lineNumber": 232, "col_offset": 44, "nodeName": "is_inputs", "type": "List[int]"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "let", "type": "Any"}, {"lineNumber": 234, "col_offset": 40, "nodeName": "shape_call", "type": "Any"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "out_shape", "type": "nothing"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "out_type", "type": "nothing"}, {"lineNumber": 237, "col_offset": 43, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 237, "col_offset": 47, "nodeName": "out_shapes", "type": "List[Any]"}, {"lineNumber": 237, "col_offset": 59, "nodeName": "out_types", "type": "List[Any]"}, {"lineNumber": 240, "col_offset": 20, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 246, "col_offset": 32, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 246, "col_offset": 36, "nodeName": "out_shapes", "type": "List[Any]"}, {"lineNumber": 246, "col_offset": 48, "nodeName": "out_types", "type": "List[Any]"}, {"lineNumber": 246, "col_offset": 59, "nodeName": "storages", "type": "List[Any]"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 247, "col_offset": 57, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 247, "col_offset": 67, "nodeName": "sh_ty_storage", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "alloc", "type": "Any"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 256, "col_offset": 40, "nodeName": "outs", "type": "List[Any]"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "invoke_tvm", "type": "Any"}, {"lineNumber": 257, "col_offset": 41, "nodeName": "op", "type": "Any"}, {"lineNumber": 257, "col_offset": 50, "nodeName": "ins", "type": "Any"}, {"lineNumber": 257, "col_offset": 55, "nodeName": "tuple_outs", "type": "Any"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "let", "type": "Any"}, {"lineNumber": 258, "col_offset": 30, "nodeName": "invoke", "type": "Any"}, {"lineNumber": 259, "col_offset": 54, "nodeName": "tuple_outs", "type": "Any"}, {"lineNumber": 262, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 262, "col_offset": 23, "nodeName": "out_ty", "type": "Any"}, {"lineNumber": 262, "col_offset": 33, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 262, "col_offset": 43, "nodeName": "out_types", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 266, "col_offset": 36, "nodeName": "outs", "type": "List[Any]"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "invoke_tvm", "type": "Any"}, {"lineNumber": 267, "col_offset": 41, "nodeName": "op", "type": "Any"}, {"lineNumber": 267, "col_offset": 50, "nodeName": "ins", "type": "Any"}, {"lineNumber": 267, "col_offset": 55, "nodeName": "output", "type": "Any"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "let", "type": "Any"}, {"lineNumber": 268, "col_offset": 30, "nodeName": "invoke", "type": "Any"}, {"lineNumber": 269, "col_offset": 23, "nodeName": "pack", "type": "Callable[[Any], Any]"}, {"lineNumber": 269, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 33, "col_offset": 55, "nodeName": "op", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "ty", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "typ", "type": "Any"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "ty", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "field_ty", "type": "Any"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "fields", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "scope", "type": "Any"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 143, "col_offset": 43, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 54, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 174, "col_offset": 51, "nodeName": "call", "type": "Any"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "compile_engine", "type": "Any"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "engine", "type": "Any"}, {"lineNumber": 188, "col_offset": 48, "nodeName": "call", "type": "Any"}, {"lineNumber": 188, "col_offset": 57, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "arg", "type": "Any"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 193, "col_offset": 49, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 193, "col_offset": 53, "nodeName": "new_args", "type": "List[Any]"}, {"lineNumber": 193, "col_offset": 63, "nodeName": "input_states", "type": "Any"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 194, "col_offset": 32, "nodeName": "state", "type": "Any"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "state", "type": "int"}, {"lineNumber": 223, "col_offset": 40, "nodeName": "cfunc", "type": "Any"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 224, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 224, "col_offset": 50, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 225, "col_offset": 28, "nodeName": "make_static_allocation", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 225, "col_offset": 56, "nodeName": "scope", "type": "Any"}, {"lineNumber": 225, "col_offset": 63, "nodeName": "tt", "type": "Any"}, {"lineNumber": 225, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "let", "type": "Any"}, {"lineNumber": 226, "col_offset": 70, "nodeName": "alloc", "type": "Any"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 227, "col_offset": 38, "nodeName": "alloc", "type": "Any"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "call", "type": "Any"}, {"lineNumber": 231, "col_offset": 20, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 231, "col_offset": 31, "nodeName": "shape_func_ins", "type": "List[Any]"}, {"lineNumber": 232, "col_offset": 20, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 232, "col_offset": 31, "nodeName": "out_shapes", "type": "List[Any]"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "scope", "type": "Any"}, {"lineNumber": 238, "col_offset": 27, "nodeName": "compute_storage_in_relay", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 239, "col_offset": 24, "nodeName": "out_shape", "type": "nothing"}, {"lineNumber": 239, "col_offset": 35, "nodeName": "dtype", "type": "nothing"}, {"lineNumber": 240, "col_offset": 32, "nodeName": "compute_alignment", "type": "Callable[[Any], Any]"}, {"lineNumber": 240, "col_offset": 55, "nodeName": "dtype", "type": "nothing"}, {"lineNumber": 241, "col_offset": 26, "nodeName": "let", "type": "Any"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 243, "col_offset": 36, "nodeName": "sto", "type": "Any"}, {"lineNumber": 247, "col_offset": 24, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 247, "col_offset": 35, "nodeName": "out_type", "type": "Any"}, {"lineNumber": 247, "col_offset": 45, "nodeName": "storage", "type": "Any"}, {"lineNumber": 248, "col_offset": 28, "nodeName": "alloc_tensor", "type": "Any"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "storage", "type": "Any"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 252, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 253, "col_offset": 28, "nodeName": "let", "type": "Any"}, {"lineNumber": 253, "col_offset": 61, "nodeName": "alloc", "type": "Any"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 254, "col_offset": 32, "nodeName": "alloc", "type": "Any"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "expr", "type": "Any"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 257, "col_offset": 41, "nodeName": "call", "type": "Any"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "scope", "type": "Any"}, {"lineNumber": 259, "col_offset": 23, "nodeName": "outs", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 26, "nodeName": "make_static_allocation", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 263, "col_offset": 54, "nodeName": "scope", "type": "Any"}, {"lineNumber": 263, "col_offset": 61, "nodeName": "out_ty", "type": "Any"}, {"lineNumber": 263, "col_offset": 69, "nodeName": "i", "type": "int"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 264, "col_offset": 32, "nodeName": "out", "type": "Any"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "expr", "type": "Any"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 267, "col_offset": 41, "nodeName": "call", "type": "Any"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "scope", "type": "Any"}, {"lineNumber": 269, "col_offset": 23, "nodeName": "view", "type": "LinearizeRetType"}, {"lineNumber": 271, "col_offset": 19, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 33, "col_offset": 55, "nodeName": "call", "type": "Any"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "_unpack", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "field_ty", "type": "Any"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 55, "col_offset": 69, "nodeName": "typ", "type": "Any"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "typ", "type": "Any"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "_pack", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "field_ty", "type": "Any"}, {"lineNumber": 69, "col_offset": 46, "nodeName": "tuple_out", "type": "List[nothing]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "tuple_out", "type": "List[nothing]"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 72, "col_offset": 69, "nodeName": "typ", "type": "Any"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 197, "col_offset": 27, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 197, "col_offset": 38, "nodeName": "type_annotation", "type": "Any"}, {"lineNumber": 197, "col_offset": 59, "nodeName": "TupleType", "type": "Any"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "j", "type": "int"}, {"lineNumber": 204, "col_offset": 28, "nodeName": "input_pos", "type": "int"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "sh_of", "type": "Any"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "input_pos", "type": "int"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "state", "type": "int"}, {"lineNumber": 213, "col_offset": 24, "nodeName": "new_arg", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "input_pos", "type": "int"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "ty", "type": "Any"}, {"lineNumber": 224, "col_offset": 39, "nodeName": "out", "type": "Any"}, {"lineNumber": 224, "col_offset": 50, "nodeName": "out", "type": "Any"}, {"lineNumber": 225, "col_offset": 28, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "scope", "type": "Any"}, {"lineNumber": 226, "col_offset": 38, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 226, "col_offset": 66, "nodeName": "i", "type": "int"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "out_shapes", "type": "List[Any]"}, {"lineNumber": 231, "col_offset": 20, "nodeName": "expr", "type": "Any"}, {"lineNumber": 232, "col_offset": 20, "nodeName": "expr", "type": "Any"}, {"lineNumber": 238, "col_offset": 27, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 239, "col_offset": 35, "nodeName": "out_type", "type": "nothing"}, {"lineNumber": 240, "col_offset": 32, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 240, "col_offset": 55, "nodeName": "out_type", "type": "nothing"}, {"lineNumber": 241, "col_offset": 26, "nodeName": "scope", "type": "Any"}, {"lineNumber": 241, "col_offset": 36, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 241, "col_offset": 63, "nodeName": "alloc_storage", "type": "Any"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "size", "type": "Any"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 242, "col_offset": 41, "nodeName": "dtype", "type": "nothing"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "storages", "type": "List[Any]"}, {"lineNumber": 248, "col_offset": 28, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "out_type", "type": "Any"}, {"lineNumber": 252, "col_offset": 24, "nodeName": "out_type", "type": "Any"}, {"lineNumber": 253, "col_offset": 28, "nodeName": "scope", "type": "Any"}, {"lineNumber": 253, "col_offset": 38, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "outs", "type": "List[Any]"}, {"lineNumber": 259, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 259, "col_offset": 38, "nodeName": "outs", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 26, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "outs", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "value", "type": "Any"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "expr", "type": "Any"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 38, "nodeName": "arg", "type": "Any"}, {"lineNumber": 197, "col_offset": 59, "nodeName": "ty", "type": "Any"}, {"lineNumber": 198, "col_offset": 37, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 201, "col_offset": 32, "nodeName": "sh_of", "type": "Any"}, {"lineNumber": 204, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 204, "col_offset": 45, "nodeName": "fields", "type": "Any"}, {"lineNumber": 206, "col_offset": 36, "nodeName": "visit", "type": "Any"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "append", "type": "Callable"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "is_inputs", "type": "List[int]"}, {"lineNumber": 213, "col_offset": 34, "nodeName": "visit", "type": "Any"}, {"lineNumber": 213, "col_offset": 45, "nodeName": "arg", "type": "Any"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 220, "col_offset": 30, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 241, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 241, "col_offset": 63, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 242, "col_offset": 41, "nodeName": "out_type", "type": "nothing"}, {"lineNumber": 253, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 198, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 198, "col_offset": 47, "nodeName": "fields", "type": "Any"}, {"lineNumber": 199, "col_offset": 45, "nodeName": "let", "type": "Any"}, {"lineNumber": 201, "col_offset": 40, "nodeName": "visit", "type": "Any"}, {"lineNumber": 202, "col_offset": 32, "nodeName": "append", "type": "Callable"}, {"lineNumber": 204, "col_offset": 45, "nodeName": "type_annotation", "type": "Any"}, {"lineNumber": 206, "col_offset": 36, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 206, "col_offset": 47, "nodeName": "shape_of", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 61, "nodeName": "arg", "type": "Any"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "shape_func_ins", "type": "List[Any]"}, {"lineNumber": 208, "col_offset": 32, "nodeName": "let", "type": "Any"}, {"lineNumber": 208, "col_offset": 76, "nodeName": "sh_of", "type": "Any"}, {"lineNumber": 213, "col_offset": 34, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "shape_func_ins", "type": "List[Any]"}, {"lineNumber": 215, "col_offset": 28, "nodeName": "let", "type": "Any"}, {"lineNumber": 215, "col_offset": 72, "nodeName": "new_arg", "type": "Any"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "is_inputs", "type": "List[int]"}, {"lineNumber": 198, "col_offset": 47, "nodeName": "type_annotation", "type": "Any"}, {"lineNumber": 199, "col_offset": 45, "nodeName": "scope", "type": "Any"}, {"lineNumber": 199, "col_offset": 55, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 200, "col_offset": 55, "nodeName": "TupleGetItem", "type": "Any"}, {"lineNumber": 200, "col_offset": 73, "nodeName": "arg", "type": "Any"}, {"lineNumber": 200, "col_offset": 78, "nodeName": "j", "type": "int"}, {"lineNumber": 201, "col_offset": 40, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 201, "col_offset": 51, "nodeName": "shape_of", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 65, "nodeName": "let_in_arg", "type": "Any"}, {"lineNumber": 202, "col_offset": 32, "nodeName": "shape_func_ins", "type": "List[Any]"}, {"lineNumber": 203, "col_offset": 36, "nodeName": "let", "type": "Any"}, {"lineNumber": 203, "col_offset": 84, "nodeName": "sh_of", "type": "Any"}, {"lineNumber": 204, "col_offset": 45, "nodeName": "arg", "type": "Any"}, {"lineNumber": 206, "col_offset": 47, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 208, "col_offset": 32, "nodeName": "scope", "type": "Any"}, {"lineNumber": 208, "col_offset": 42, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 208, "col_offset": 64, "nodeName": "input_pos", "type": "int"}, {"lineNumber": 215, "col_offset": 28, "nodeName": "scope", "type": "Any"}, {"lineNumber": 215, "col_offset": 38, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 215, "col_offset": 60, "nodeName": "input_pos", "type": "int"}, {"lineNumber": 198, "col_offset": 47, "nodeName": "arg", "type": "Any"}, {"lineNumber": 199, "col_offset": 75, "nodeName": "input_pos", "type": "int"}, {"lineNumber": 199, "col_offset": 87, "nodeName": "j", "type": "int"}, {"lineNumber": 200, "col_offset": 55, "nodeName": "expr", "type": "Any"}, {"lineNumber": 201, "col_offset": 51, "nodeName": "self", "type": "ManifestAllocPass"}, {"lineNumber": 203, "col_offset": 36, "nodeName": "scope", "type": "Any"}, {"lineNumber": 203, "col_offset": 46, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 203, "col_offset": 68, "nodeName": "input_pos", "type": "int"}, {"lineNumber": 203, "col_offset": 80, "nodeName": "j", "type": "int"}]