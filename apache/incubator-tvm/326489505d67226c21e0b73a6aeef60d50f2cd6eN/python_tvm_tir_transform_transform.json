[{"lineNumber": 23, "col_offset": 0, "nodeName": "Apply", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "Filter", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "InjectCopyIntrin", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "CoProcSync", "type": "Callable[[], Any]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "LiftAttrScope", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 0, "nodeName": "LoopPartition", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 0, "nodeName": "VectorizeLoop", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 0, "nodeName": "InjectVirtualThread", "type": "Callable[[], Any]"}, {"lineNumber": 153, "col_offset": 0, "nodeName": "InjectDoubleBuffer", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 0, "nodeName": "StorageRewrite", "type": "Callable[[], Any]"}, {"lineNumber": 184, "col_offset": 0, "nodeName": "UnrollLoop", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 216, "col_offset": 0, "nodeName": "RemoveNoOp", "type": "Callable[[], Any]"}, {"lineNumber": 227, "col_offset": 0, "nodeName": "RewriteUnsafeSelect", "type": "Callable[[], Any]"}, {"lineNumber": 238, "col_offset": 0, "nodeName": "Simplify", "type": "Callable[[], Any]"}, {"lineNumber": 249, "col_offset": 0, "nodeName": "InstrumentBoundCheckers", "type": "Callable[[], Any]"}, {"lineNumber": 260, "col_offset": 0, "nodeName": "LowerCustomDatatypes", "type": "Callable[[], Any]"}, {"lineNumber": 273, "col_offset": 0, "nodeName": "MakePackedAPI", "type": "Callable[..., Any]"}, {"lineNumber": 290, "col_offset": 0, "nodeName": "SplitHostDevice", "type": "Callable[[], Any]"}, {"lineNumber": 301, "col_offset": 0, "nodeName": "SkipAssert", "type": "Callable[[], Any]"}, {"lineNumber": 312, "col_offset": 0, "nodeName": "ThreadSync", "type": "Callable[[Any], Any]"}, {"lineNumber": 328, "col_offset": 0, "nodeName": "LowerThreadAllreduce", "type": "Callable[[], Any]"}, {"lineNumber": 339, "col_offset": 0, "nodeName": "InferFragment", "type": "Callable[[], Any]"}, {"lineNumber": 350, "col_offset": 0, "nodeName": "LowerWarpMemory", "type": "Callable[[], Any]"}, {"lineNumber": 361, "col_offset": 0, "nodeName": "LowerTVMBuiltin", "type": "Callable[[], Any]"}, {"lineNumber": 372, "col_offset": 0, "nodeName": "LowerIntrin", "type": "Callable[[], Any]"}, {"lineNumber": 383, "col_offset": 0, "nodeName": "LowerDeviceStorageAccessInfo", "type": "Callable[[], Any]"}, {"lineNumber": 398, "col_offset": 0, "nodeName": "CombineContextCall", "type": "Callable[[], Any]"}, {"lineNumber": 409, "col_offset": 0, "nodeName": "NarrowDataType", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "prim_func_pass", "type": "Any"}, {"lineNumber": 41, "col_offset": 33, "nodeName": "_transform", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "prim_func_pass", "type": "Any"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "_transform", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "InjectCopyIntrin", "type": "Any"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "pragma_key", "type": "Any"}, {"lineNumber": 79, "col_offset": 49, "nodeName": "fintrin", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "CoProcSync", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "LiftAttrScope", "type": "Any"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "attr_key", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "LoopPartition", "type": "Any"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "split_const_loop", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "VectorizeLoop", "type": "Any"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "enable_vectorize", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "InjectVirtualThread", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "InjectDoubleBuffer", "type": "Any"}, {"lineNumber": 166, "col_offset": 39, "nodeName": "split_loop_factor", "type": "Any"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "StorageRewrite", "type": "Any"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "UnrollLoop", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "auto_max_step", "type": "Any"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "auto_max_depth", "type": "Any"}, {"lineNumber": 213, "col_offset": 39, "nodeName": "auto_max_extent", "type": "Any"}, {"lineNumber": 213, "col_offset": 56, "nodeName": "explicit_unroll", "type": "Any"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "RemoveNoOp", "type": "Any"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "RewriteUnsafeSelect", "type": "Any"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "Simplify", "type": "Any"}, {"lineNumber": 257, "col_offset": 11, "nodeName": "InstrumentBoundCheckers", "type": "Any"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "LowerCustomDatatypes", "type": "Any"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "MakePackedAPI", "type": "Any"}, {"lineNumber": 287, "col_offset": 34, "nodeName": "num_unpacked_params", "type": "Any"}, {"lineNumber": 298, "col_offset": 11, "nodeName": "SplitHostDevice", "type": "Any"}, {"lineNumber": 309, "col_offset": 11, "nodeName": "SkipAssert", "type": "Any"}, {"lineNumber": 325, "col_offset": 11, "nodeName": "ThreadSync", "type": "Any"}, {"lineNumber": 325, "col_offset": 31, "nodeName": "storage_scope", "type": "Any"}, {"lineNumber": 336, "col_offset": 11, "nodeName": "LowerThreadAllreduce", "type": "Any"}, {"lineNumber": 347, "col_offset": 11, "nodeName": "InferFragment", "type": "Any"}, {"lineNumber": 358, "col_offset": 11, "nodeName": "LowerWarpMemory", "type": "Any"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "LowerTVMBuiltin", "type": "Any"}, {"lineNumber": 380, "col_offset": 11, "nodeName": "LowerIntrin", "type": "Any"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "LowerDeviceStorageAccessInfo", "type": "Any"}, {"lineNumber": 406, "col_offset": 11, "nodeName": "CombineContextCall", "type": "Any"}, {"lineNumber": 426, "col_offset": 11, "nodeName": "NarrowDataType", "type": "Any"}, {"lineNumber": 426, "col_offset": 35, "nodeName": "target_bits", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "ftransform", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "func", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "_fpass", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "func", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "_fpass", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 257, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 298, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 309, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 325, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 336, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 347, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 358, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 380, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 406, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 426, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "fcond", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "func", "type": "Any"}]