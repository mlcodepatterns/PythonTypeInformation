[{"lineNumber": 35, "col_offset": 0, "nodeName": "_get_model", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "_get_expected_codegen", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "test_reshape", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "test_codegen_reshape", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "device", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "inputs", "type": "Set[str]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "dtype", "type": "str"}, {"lineNumber": 109, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "output_shape", "type": "Union[Tuple[int, int, int], Tuple[int, int]]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "input", "type": "Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[int]]]]], str]]"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "node", "type": "Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[int]]], str]], List[List[int]], str]]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "load", "type": "Any"}, {"lineNumber": 69, "col_offset": 7, "nodeName": "skip_runtime_test", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "Device", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "dtype", "type": "str"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "low", "type": "int"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "high", "type": "int"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "atol", "type": "Union[float, int]"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "rtol", "type": "Union[float, int]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "new_shape", "type": "Union[Tuple[int, int], Tuple[int, int, int]]"}, {"lineNumber": 96, "col_offset": 7, "nodeName": "skip_codegen_test", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "new_shape", "type": "Union[Tuple[int, int], Tuple[int, int, int]]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "test_reshape", "type": "Callable[[], Any]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "test_codegen_reshape", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "next", "type": "Callable"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "var_names", "type": "Iterator[str]"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 37, "col_offset": 60, "nodeName": "dtype", "type": "str"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "Device", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "func", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "acl", "type": "bool"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "args", "type": "Tuple[Tuple[int, int, int, int], Union[Tuple[int, int, int], Tuple[int, int]], str]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "func", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "exp_codegen", "type": "List[Union[Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[int]]]]], str]], Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[int]]], str]], List[List[int]], str]]]]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "array", "type": "Any"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "_get_model", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 83, "col_offset": 49, "nodeName": "new_shape", "type": "Union[Tuple[int, int], Tuple[int, int, int]]"}, {"lineNumber": 83, "col_offset": 60, "nodeName": "dtype", "type": "str"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "new_shape", "type": "Union[Tuple[int, int], Tuple[int, int, int]]"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "dtype", "type": "str"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "verify", "type": "Any"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "new_shape", "type": "Union[Tuple[int, int, int], Tuple[int, int]]"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "dtype", "type": "str"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "_get_model", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "_get_expected_codegen", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "verify_codegen", "type": "Any"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "func", "type": "Any"}, {"lineNumber": 106, "col_offset": 33, "nodeName": "exp_codegen", "type": "List[Union[Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[int]]]]], str]], Dict[str, Union[Dict[str, Union[List[List[str]], List[List[List[int]]], str]], List[List[int]], str]]]]"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "dtype", "type": "str"}, {"lineNumber": 60, "col_offset": 61, "nodeName": "dtype", "type": "str"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "nd", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "astype", "type": "Any"}, {"lineNumber": 79, "col_offset": 89, "nodeName": "dtype", "type": "str"}, {"lineNumber": 83, "col_offset": 67, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 83, "col_offset": 72, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 92, "col_offset": 57, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "args", "type": "Tuple[Tuple[int, int, int, int], Union[Tuple[int, int, int], Tuple[int, int]], str]"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "inputs", "type": "Set[str]"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "args", "type": "Tuple[Tuple[int, int, int, int], Union[Tuple[int, int, int], Tuple[int, int]], str]"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "s", "type": "int"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "s", "type": "int"}, {"lineNumber": 50, "col_offset": 42, "nodeName": "output_shape", "type": "Union[Tuple[int, int, int], Tuple[int, int]]"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "output_shape", "type": "Union[Tuple[int, int, int], Tuple[int, int]]"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 79, "col_offset": 54, "nodeName": "low", "type": "int"}, {"lineNumber": 79, "col_offset": 59, "nodeName": "high", "type": "int"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "build_and_run", "type": "Any"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "func", "type": "Any"}, {"lineNumber": 85, "col_offset": 51, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 68, "nodeName": "device", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "random", "type": "Any"}, {"lineNumber": 85, "col_offset": 87, "nodeName": "acl", "type": "bool"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "np", "type": "module"}]