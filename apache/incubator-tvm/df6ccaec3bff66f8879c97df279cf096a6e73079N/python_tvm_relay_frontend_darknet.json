[{"lineNumber": 35, "col_offset": 0, "nodeName": "_darknet_not_support", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "_get_params_prefix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "_get_params_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "_get_param_var", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "_darknet_maxpooling", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "_darknet_avgpooling", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "_darknet_conv2d", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "_darknet_shortcut", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 162, "col_offset": 0, "nodeName": "_darknet_dense", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 194, "col_offset": 0, "nodeName": "_darknet_dropout", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 201, "col_offset": 0, "nodeName": "_darknet_reshape", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 208, "col_offset": 0, "nodeName": "_darknet_upsampling", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 216, "col_offset": 0, "nodeName": "_darknet_l2normalize", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 224, "col_offset": 0, "nodeName": "_darknet_softmax_output", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 240, "col_offset": 0, "nodeName": "_darknet_route", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 246, "col_offset": 0, "nodeName": "_darknet_reorg", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 254, "col_offset": 0, "nodeName": "_darknet_region", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 275, "col_offset": 0, "nodeName": "_darknet_yolo", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 309, "col_offset": 0, "nodeName": "_darknet_activations", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 421, "col_offset": 0, "nodeName": "_darknet_convert_symbol", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 448, "col_offset": 0, "nodeName": "_as_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 866, "col_offset": 0, "nodeName": "from_darknet", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 291, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "Enum", "type": "Type[enum.Enum]"}, {"lineNumber": 455, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "name", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Tuple[Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]], Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]]]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "kernel", "type": "Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "strides", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "pads", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "extra_pad_size", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 68, "col_offset": 7, "nodeName": "extra_pad_size", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Tuple[Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]], Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]]]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "kernel", "type": "Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "strides", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "pads", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Optional[Union[int, Any, bool, str, Tuple[int, Any, Any, Any], Tuple[int, int]]]]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "kernel", "type": "Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "strides", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "pads", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "weight", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "use_bias", "type": "bool"}, {"lineNumber": 107, "col_offset": 7, "nodeName": "use_bias", "type": "bool"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "input_0", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "input_1", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "input_0_channel", "type": "int"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "input_1_channel", "type": "int"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "input_0_size", "type": "int"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "input_1_size", "type": "int"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "sym", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "sym", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Optional[Union[int, Any, Tuple[int, Any, Any, Any], str, bool]]]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "weight", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "use_bias", "type": "Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 175, "col_offset": 7, "nodeName": "use_bias", "type": "Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Union[bool, str, int, Tuple[int, Any, Any, Any], float, Any]]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Any]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Union[Any, int, Tuple[int, Any, Any, Any], bool, str]]"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Union[Any, int, Tuple[int, Any, Any, Any], bool, str, float, List[Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]]]]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "temperature", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, int]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Union[int, Any, bool, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "num", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "classes", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "coords", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "background", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "softmax", "type": "Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "input_shape", "type": "Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "split_size", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "intermediate_shape", "type": "Tuple[Union[Any, str, int], Union[Any, int, bool, str, Tuple[int, Any, Any, Any]], Any, Union[Any, str], Union[Any, str]]"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "data_block", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "split_indices", "type": "Tuple[int, int, int]"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "split_res", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "split_res0", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "split_res2", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "split_res3", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "num", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "classes", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "input_shape", "type": "Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "split_size", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "intermediate_shape", "type": "Tuple[Union[Any, str, int], Union[Any, int, bool, str, Tuple[int, Any, Any, Any]], Any, Union[Any, str], Union[Any, str]]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "data_block", "type": "Any"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "split_indices", "type": "Tuple[int, int]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "split_res", "type": "Any"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "split_res0", "type": "Any"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "split_res2", "type": "Any"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "LOGISTIC", "type": "int"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "RELU", "type": "int"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "RELIE", "type": "int"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "LINEAR", "type": "int"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "RAMP", "type": "int"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "TANH", "type": "int"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "PLSE", "type": "int"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "LEAKY", "type": "int"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "ELU", "type": "int"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "LOGGY", "type": "int"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "STAIR", "type": "int"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "HARDTAN", "type": "int"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "LHTAN", "type": "int"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "act", "type": "Any"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 352, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "CONVOLUTIONAL", "type": "int"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "DECONVOLUTIONAL", "type": "int"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "CONNECTED", "type": "int"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "MAXPOOL", "type": "int"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "SOFTMAX", "type": "int"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "DETECTION", "type": "int"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "DROPOUT", "type": "int"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "CROP", "type": "int"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "ROUTE", "type": "int"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "COST", "type": "int"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "NORMALIZATION", "type": "int"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "AVGPOOL", "type": "int"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "LOCAL", "type": "int"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "SHORTCUT", "type": "int"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "ACTIVE", "type": "int"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "RNN", "type": "int"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "GRU", "type": "int"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "LSTM", "type": "int"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "CRNN", "type": "int"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "BATCHNORM", "type": "int"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "NETWORK", "type": "int"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "XNOR", "type": "int"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "REGION", "type": "int"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "YOLO", "type": "int"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "REORG", "type": "int"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "UPSAMPLE", "type": "int"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "LOGXENT", "type": "int"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "L2NORM", "type": "int"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "BLANK", "type": "int"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "CONVOLUTIONAL", "type": "Any"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "CONNECTED", "type": "Any"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "MAXPOOL", "type": "Any"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "SOFTMAX", "type": "Any"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "DROPOUT", "type": "Any"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "AVGPOOL", "type": "Any"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "ROUTE", "type": "Any"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "REORG", "type": "Any"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "REGION", "type": "Any"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "SHORTCUT", "type": "Any"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "UPSAMPLE", "type": "Any"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "L2NORM", "type": "Any"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "YOLO", "type": "Any"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "DECONVOLUTIONAL", "type": "Any"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "BATCHNORM", "type": "Any"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "DETECTION", "type": "Any"}, {"lineNumber": 406, "col_offset": 4, "nodeName": "CROP", "type": "Any"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "COST", "type": "Any"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "NORMALIZATION", "type": "Any"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "LOCAL", "type": "Any"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "ACTIVE", "type": "Any"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "RNN", "type": "Any"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "GRU", "type": "Any"}, {"lineNumber": 413, "col_offset": 4, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "CRNN", "type": "Any"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "NETWORK", "type": "Any"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "XNOR", "type": "Any"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "BLANK", "type": "Any"}, {"lineNumber": 390, "col_offset": 29, "nodeName": "_darknet_conv2d", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 391, "col_offset": 25, "nodeName": "_darknet_dense", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 392, "col_offset": 23, "nodeName": "_darknet_maxpooling", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 393, "col_offset": 23, "nodeName": "_darknet_softmax_output", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 394, "col_offset": 23, "nodeName": "_darknet_dropout", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 395, "col_offset": 23, "nodeName": "_darknet_avgpooling", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 396, "col_offset": 21, "nodeName": "_darknet_route", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 397, "col_offset": 21, "nodeName": "_darknet_reorg", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 398, "col_offset": 22, "nodeName": "_darknet_region", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 399, "col_offset": 24, "nodeName": "_darknet_shortcut", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 400, "col_offset": 24, "nodeName": "_darknet_upsampling", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 401, "col_offset": 22, "nodeName": "_darknet_l2normalize", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 402, "col_offset": 20, "nodeName": "_darknet_yolo", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 403, "col_offset": 31, "nodeName": "_darknet_not_support", "type": "Callable[..., Any]"}, {"lineNumber": 404, "col_offset": 25, "nodeName": "_darknet_not_support", "type": "Callable[..., Any]"}, {"lineNumber": 405, "col_offset": 25, "nodeName": "_darknet_not_support", "type": "Callable[..., Any]"}, {"lineNumber": 406, "col_offset": 20, "nodeName": "_darknet_not_support", "type": "Callable[..., Any]"}, {"lineNumber": 407, "col_offset": 20, "nodeName": "_darknet_not_support", "type": "Callable[..., Any]"}, {"lineNumber": 408, "col_offset": 29, "nodeName": "_darknet_not_support", "type": "Callable[..., Any]"}, {"lineNumber": 409, "col_offset": 21, "nodeName": "_darknet_not_support", "type": "Callable[..., Any]"}, {"lineNumber": 410, "col_offset": 22, "nodeName": "_darknet_not_support", "type": "Callable[..., Any]"}, {"lineNumber": 411, "col_offset": 19, "nodeName": "_darknet_not_support", "type": "Callable[..., Any]"}, {"lineNumber": 412, "col_offset": 19, "nodeName": "_darknet_not_support", "type": "Callable[..., Any]"}, {"lineNumber": 413, "col_offset": 20, "nodeName": "_darknet_not_support", "type": "Callable[..., Any]"}, {"lineNumber": 414, "col_offset": 20, "nodeName": "_darknet_not_support", "type": "Callable[..., Any]"}, {"lineNumber": 415, "col_offset": 23, "nodeName": "_darknet_not_support", "type": "Callable[..., Any]"}, {"lineNumber": 416, "col_offset": 20, "nodeName": "_darknet_not_support", "type": "Callable[..., Any]"}, {"lineNumber": 417, "col_offset": 21, "nodeName": "_darknet_not_support", "type": "Callable[..., Any]"}, {"lineNumber": 445, "col_offset": 11, "nodeName": "sym", "type": "Any"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "attr", "type": "str"}, {"lineNumber": 37, "col_offset": 52, "nodeName": "op", "type": "str"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "err", "type": "str"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "item", "type": "str"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "_get_params_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "item", "type": "str"}, {"lineNumber": 53, "col_offset": 7, "nodeName": "name", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "params", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "new_var", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "get", "type": "Callable"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "get", "type": "Callable"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Tuple[Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]], Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]]]"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "kernel", "type": "Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 64, "col_offset": 38, "nodeName": "kernel", "type": "Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Tuple[Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]], Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]]]"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "strides", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "strides", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Tuple[Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]], Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]]]"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "pads", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "pads", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "get", "type": "Callable"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "pad_width", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]], Tuple[int, Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]]]"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "get", "type": "Callable"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "get", "type": "Callable"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Tuple[Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]], Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]]]"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "kernel", "type": "Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 83, "col_offset": 38, "nodeName": "kernel", "type": "Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Tuple[Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]], Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]]]"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "strides", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 84, "col_offset": 37, "nodeName": "strides", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Tuple[Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]], Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]]]"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "pads", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "pads", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "get", "type": "Callable"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "get", "type": "Callable"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Optional[Union[int, Any, bool, str, Tuple[int, Any, Any, Any], Tuple[int, int]]]]"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "get", "type": "Callable"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Optional[Union[int, Any, bool, str, Tuple[int, Any, Any, Any], Tuple[int, int]]]]"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "kernel", "type": "Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 97, "col_offset": 40, "nodeName": "kernel", "type": "Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Optional[Union[int, Any, bool, str, Tuple[int, Any, Any, Any], Tuple[int, int]]]]"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "strides", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "strides", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Optional[Union[int, Any, bool, str, Tuple[int, Any, Any, Any], Tuple[int, int]]]]"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "pads", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "pads", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Optional[Union[int, Any, bool, str, Tuple[int, Any, Any, Any], Tuple[int, int]]]]"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "get", "type": "Callable"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Optional[Union[int, Any, bool, str, Tuple[int, Any, Any, Any], Tuple[int, int]]]]"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "get", "type": "Callable"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "_get_param_var", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "params", "type": "Any"}, {"lineNumber": 103, "col_offset": 36, "nodeName": "prefix", "type": "str"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "new_attrs", "type": "Dict[str, int]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "bias", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "new_attrs", "type": "Dict[str, float]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "beta", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "moving_mean", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "moving_var", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "new_attrs", "type": "Dict[str, Union[Any, float]]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 131, "col_offset": 14, "nodeName": "inputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "inputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 139, "col_offset": 7, "nodeName": "input_0_size", "type": "int"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "input_1_size", "type": "int"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "scale", "type": "int"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "input_1", "type": "Any"}, {"lineNumber": 149, "col_offset": 7, "nodeName": "input_0_channel", "type": "int"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "input_1_channel", "type": "int"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "pad_channel", "type": "int"}, {"lineNumber": 154, "col_offset": 10, "nodeName": "input_0", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "input_1", "type": "Any"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "new_attrs", "type": "Dict[str, Any]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "sym", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Optional[Union[int, Any, Tuple[int, Any, Any, Any], str, bool]]]"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "get", "type": "Callable"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "inputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "_get_param_var", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "params", "type": "Any"}, {"lineNumber": 171, "col_offset": 36, "nodeName": "prefix", "type": "str"}, {"lineNumber": 172, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 172, "col_offset": 39, "nodeName": "weight", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "bias", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "new_attrs", "type": "Dict[str, float]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "beta", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "moving_mean", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "moving_var", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 187, "col_offset": 23, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "new_attrs", "type": "Dict[str, Any]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Union[bool, str, int, Tuple[int, Any, Any, Any], float, Any]]"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "get", "type": "Callable"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Any]"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "get", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Union[Any, int, Tuple[int, Any, Any, Any], bool, str]]"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "get", "type": "Callable"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Union[Any, int, Tuple[int, Any, Any, Any], bool, str]]"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "get", "type": "Callable"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Union[Any, int, Tuple[int, Any, Any, Any], bool, str, float, List[Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]]]]"}, {"lineNumber": 219, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "new_attrs", "type": "Dict[str, Union[Any, int, Tuple[int, Any, Any, Any], bool, str, float, List[Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]]]]"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "get", "type": "Callable"}, {"lineNumber": 227, "col_offset": 11, "nodeName": "inputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 228, "col_offset": 7, "nodeName": "temperature", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 235, "col_offset": 7, "nodeName": "get", "type": "Callable"}, {"lineNumber": 237, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 249, "col_offset": 19, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "new_attrs", "type": "Dict[str, Union[Any, int, Tuple[int, Any, Any, Any], bool, str]]"}, {"lineNumber": 256, "col_offset": 10, "nodeName": "get", "type": "Callable"}, {"lineNumber": 257, "col_offset": 14, "nodeName": "get", "type": "Callable"}, {"lineNumber": 258, "col_offset": 13, "nodeName": "get", "type": "Callable"}, {"lineNumber": 259, "col_offset": 17, "nodeName": "get", "type": "Callable"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "get", "type": "Callable"}, {"lineNumber": 261, "col_offset": 18, "nodeName": "get", "type": "Callable"}, {"lineNumber": 264, "col_offset": 42, "nodeName": "num", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 264, "col_offset": 47, "nodeName": "split_size", "type": "Any"}, {"lineNumber": 267, "col_offset": 38, "nodeName": "data_block", "type": "Any"}, {"lineNumber": 269, "col_offset": 33, "nodeName": "background", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 270, "col_offset": 66, "nodeName": "softmax", "type": "Union[Any, Tuple[int, Any, Any, Any], bool, int, str]"}, {"lineNumber": 272, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 277, "col_offset": 10, "nodeName": "get", "type": "Callable"}, {"lineNumber": 278, "col_offset": 14, "nodeName": "get", "type": "Callable"}, {"lineNumber": 279, "col_offset": 18, "nodeName": "get", "type": "Callable"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "classes", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 281, "col_offset": 42, "nodeName": "num", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 281, "col_offset": 47, "nodeName": "split_size", "type": "Any"}, {"lineNumber": 284, "col_offset": 38, "nodeName": "data_block", "type": "Any"}, {"lineNumber": 288, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 311, "col_offset": 10, "nodeName": "get", "type": "Any"}, {"lineNumber": 312, "col_offset": 68, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "new_attrs", "type": "Dict[str, Any]"}, {"lineNumber": 335, "col_offset": 29, "nodeName": "slope", "type": "Any"}, {"lineNumber": 338, "col_offset": 7, "nodeName": "LOGISTIC", "type": "int"}, {"lineNumber": 338, "col_offset": 30, "nodeName": "act", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 406, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 413, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 441, "col_offset": 7, "nodeName": "op_name", "type": "LAYERTYPE"}, {"lineNumber": 441, "col_offset": 18, "nodeName": "_DARKNET_CONVERT_MAP", "type": "Dict[Any, Union[Callable[[Any, Any, Any, Any], Any], Callable[..., Any]]]"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "sym", "type": "Any"}, {"lineNumber": 450, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 450, "col_offset": 18, "nodeName": "arr", "type": "Any"}, {"lineNumber": 450, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 451, "col_offset": 15, "nodeName": "arr", "type": "Any"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "arr", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "_net", "type": "Any"}, {"lineNumber": 459, "col_offset": 20, "nodeName": "net", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "_shape", "type": "Any"}, {"lineNumber": 460, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "_dtype", "type": "Any"}, {"lineNumber": 461, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "_sym_array", "type": "Dict[Union[Any, int], Any]"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "_tvmparams", "type": "Dict[Any, Any]"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "_outs", "type": "List[Any]"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "_state_ctr", "type": "Dict[Union[str, Any], int]"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "length", "type": "int"}, {"lineNumber": 476, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 476, "col_offset": 17, "nodeName": "shape", "type": "Tuple[Any]"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "data_np", "type": "Any"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "biases", "type": "Any"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 507, "col_offset": 15, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "biases", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 529, "col_offset": 15, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "biases", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 551, "col_offset": 15, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "biases", "type": "Any"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 568, "col_offset": 15, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "scales", "type": "Any"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "rolling_mean", "type": "Any"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "rolling_variance", "type": "Any"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 584, "col_offset": 15, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "use_flatten", "type": "bool"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 694, "col_offset": 15, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "params", "type": "None"}, {"lineNumber": 708, "col_offset": 15, "nodeName": "params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 717, "col_offset": 8, "nodeName": "skip_layer", "type": "bool"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 746, "col_offset": 8, "nodeName": "sym_name", "type": "Any"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "buffer", "type": "Any"}, {"lineNumber": 757, "col_offset": 8, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 758, "col_offset": 8, "nodeName": "op_name", "type": "LAYERTYPE"}, {"lineNumber": 759, "col_offset": 8, "nodeName": "prefix", "type": "str"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "sym", "type": "Any"}, {"lineNumber": 762, "col_offset": 11, "nodeName": "params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 764, "col_offset": 15, "nodeName": "sym", "type": "Any"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "attr", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "processed", "type": "bool"}, {"lineNumber": 772, "col_offset": 8, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 799, "col_offset": 8, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 839, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 860, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 861, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 862, "col_offset": 8, "nodeName": "sym", "type": "Any"}, {"lineNumber": 887, "col_offset": 11, "nodeName": "from_darknet", "type": "Callable[[], Any]"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 43, "col_offset": 47, "nodeName": "layer_num", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 55, "col_offset": 57, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "inputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 73, "col_offset": 49, "nodeName": "new_attrs", "type": "Dict[str, Tuple[Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]], Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]]]"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 86, "col_offset": 39, "nodeName": "inputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 86, "col_offset": 49, "nodeName": "new_attrs", "type": "Dict[str, Tuple[Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]], Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]]]"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 104, "col_offset": 10, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "inputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 104, "col_offset": 49, "nodeName": "weight", "type": "Any"}, {"lineNumber": 104, "col_offset": 59, "nodeName": "new_attrs", "type": "Dict[str, Optional[Union[int, Any, bool, str, Tuple[int, Any, Any, Any], Tuple[int, int]]]]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "new_attrs", "type": "Dict[str, int]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "_get_param_var", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "prefix", "type": "str"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "out", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "new_attrs", "type": "Dict[str, float]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "_get_param_var", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 115, "col_offset": 39, "nodeName": "prefix", "type": "str"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "_get_param_var", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "prefix", "type": "str"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "_get_param_var", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "params", "type": "Any"}, {"lineNumber": 117, "col_offset": 45, "nodeName": "prefix", "type": "str"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "_get_param_var", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "params", "type": "Any"}, {"lineNumber": 118, "col_offset": 44, "nodeName": "prefix", "type": "str"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "out", "type": "Any"}, {"lineNumber": 119, "col_offset": 46, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 119, "col_offset": 53, "nodeName": "beta", "type": "Any"}, {"lineNumber": 119, "col_offset": 59, "nodeName": "moving_mean", "type": "Any"}, {"lineNumber": 119, "col_offset": 72, "nodeName": "moving_var", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "new_attrs", "type": "Dict[str, Union[Any, float]]"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "new_attrs", "type": "Dict[str, Union[Any, float]]"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "_darknet_activations", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 125, "col_offset": 46, "nodeName": "new_attrs", "type": "Dict[str, Union[Any, float]]"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 141, "col_offset": 45, "nodeName": "input_1", "type": "Any"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "input_0_size", "type": "int"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "input_1_size", "type": "int"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "stride", "type": "int"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "input_0_channel", "type": "int"}, {"lineNumber": 150, "col_offset": 40, "nodeName": "input_1_channel", "type": "int"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "input_1", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "new_attrs", "type": "Dict[str, Any]"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "_darknet_activations", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "sym", "type": "Any"}, {"lineNumber": 158, "col_offset": 46, "nodeName": "new_attrs", "type": "Dict[str, Any]"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 168, "col_offset": 7, "nodeName": "get", "type": "Callable"}, {"lineNumber": 169, "col_offset": 45, "nodeName": "data", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 172, "col_offset": 49, "nodeName": "new_attrs", "type": "Dict[str, Optional[Union[int, Any, Tuple[int, Any, Any, Any], str, bool]]]"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "_get_param_var", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 176, "col_offset": 38, "nodeName": "prefix", "type": "str"}, {"lineNumber": 177, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 177, "col_offset": 46, "nodeName": "bias", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "new_attrs", "type": "Dict[str, float]"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "_get_param_var", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 182, "col_offset": 39, "nodeName": "prefix", "type": "str"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "_get_param_var", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 183, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 183, "col_offset": 38, "nodeName": "prefix", "type": "str"}, {"lineNumber": 184, "col_offset": 22, "nodeName": "_get_param_var", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 184, "col_offset": 37, "nodeName": "params", "type": "Any"}, {"lineNumber": 184, "col_offset": 45, "nodeName": "prefix", "type": "str"}, {"lineNumber": 185, "col_offset": 21, "nodeName": "_get_param_var", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 185, "col_offset": 36, "nodeName": "params", "type": "Any"}, {"lineNumber": 185, "col_offset": 44, "nodeName": "prefix", "type": "str"}, {"lineNumber": 186, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 186, "col_offset": 48, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 186, "col_offset": 55, "nodeName": "beta", "type": "Any"}, {"lineNumber": 186, "col_offset": 61, "nodeName": "moving_mean", "type": "Any"}, {"lineNumber": 186, "col_offset": 74, "nodeName": "moving_var", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "new_attrs", "type": "Dict[str, Any]"}, {"lineNumber": 189, "col_offset": 34, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "_darknet_activations", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 190, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 190, "col_offset": 48, "nodeName": "new_attrs", "type": "Dict[str, Any]"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 198, "col_offset": 36, "nodeName": "inputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 198, "col_offset": 46, "nodeName": "new_attrs", "type": "Dict[str, Union[bool, str, int, Tuple[int, Any, Any, Any], float, Any]]"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 205, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 205, "col_offset": 46, "nodeName": "new_attrs", "type": "Dict[str, Any]"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 213, "col_offset": 39, "nodeName": "inputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 213, "col_offset": 49, "nodeName": "new_attrs", "type": "Dict[str, Union[Any, int, Tuple[int, Any, Any, Any], bool, str]]"}, {"lineNumber": 219, "col_offset": 23, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "get", "type": "Callable"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 221, "col_offset": 41, "nodeName": "inputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 221, "col_offset": 51, "nodeName": "new_attrs", "type": "Dict[str, Union[Any, int, Tuple[int, Any, Any, Any], bool, str, float, List[Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]]]]"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 231, "col_offset": 7, "nodeName": "get", "type": "Callable"}, {"lineNumber": 232, "col_offset": 45, "nodeName": "data", "type": "Any"}, {"lineNumber": 235, "col_offset": 7, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "new_attrs", "type": "Dict[str, int]"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 237, "col_offset": 43, "nodeName": "new_attrs", "type": "Dict[str, int]"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "get", "type": "Callable"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 243, "col_offset": 65, "nodeName": "new_attrs", "type": "Dict[str, Union[int, Any, bool, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 251, "col_offset": 11, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 251, "col_offset": 39, "nodeName": "inputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 251, "col_offset": 49, "nodeName": "new_attrs", "type": "Dict[str, Union[Any, int, Tuple[int, Any, Any, Any], bool, str]]"}, {"lineNumber": 256, "col_offset": 10, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 257, "col_offset": 14, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 258, "col_offset": 13, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 259, "col_offset": 17, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 261, "col_offset": 18, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 263, "col_offset": 17, "nodeName": "classes", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 263, "col_offset": 27, "nodeName": "coords", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 264, "col_offset": 26, "nodeName": "input_shape", "type": "Optional[Union[Any, int, str, Tuple[int, Any, Any, Any], bool]]"}, {"lineNumber": 264, "col_offset": 59, "nodeName": "input_shape", "type": "Optional[Union[Any, int, str, Tuple[int, Any, Any, Any], bool]]"}, {"lineNumber": 264, "col_offset": 75, "nodeName": "input_shape", "type": "Optional[Union[Any, int, str, Tuple[int, Any, Any, Any], bool]]"}, {"lineNumber": 265, "col_offset": 17, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 265, "col_offset": 41, "nodeName": "inputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 265, "col_offset": 61, "nodeName": "intermediate_shape", "type": "Tuple[Union[Any, str, int], Union[Any, int, bool, str, Tuple[int, Any, Any, Any]], Any, Union[Any, str], Union[Any, str]]"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 267, "col_offset": 70, "nodeName": "split_indices", "type": "Tuple[int, int, int]"}, {"lineNumber": 268, "col_offset": 17, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 268, "col_offset": 41, "nodeName": "split_res", "type": "Any"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "split_res", "type": "Any"}, {"lineNumber": 270, "col_offset": 79, "nodeName": "split_res", "type": "Any"}, {"lineNumber": 271, "col_offset": 10, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 271, "col_offset": 39, "nodeName": "split_res0", "type": "Any"}, {"lineNumber": 271, "col_offset": 65, "nodeName": "split_res2", "type": "Any"}, {"lineNumber": 271, "col_offset": 77, "nodeName": "split_res3", "type": "Any"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 272, "col_offset": 49, "nodeName": "input_shape", "type": "Optional[Union[Any, int, str, Tuple[int, Any, Any, Any], bool]]"}, {"lineNumber": 277, "col_offset": 10, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 278, "col_offset": 14, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 279, "col_offset": 18, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 281, "col_offset": 26, "nodeName": "input_shape", "type": "Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 281, "col_offset": 59, "nodeName": "input_shape", "type": "Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 281, "col_offset": 75, "nodeName": "input_shape", "type": "Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 282, "col_offset": 17, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 282, "col_offset": 41, "nodeName": "inputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 282, "col_offset": 61, "nodeName": "intermediate_shape", "type": "Tuple[Union[Any, str, int], Union[Any, int, bool, str, Tuple[int, Any, Any, Any]], Any, Union[Any, str], Union[Any, str]]"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 284, "col_offset": 70, "nodeName": "split_indices", "type": "Tuple[int, int]"}, {"lineNumber": 285, "col_offset": 17, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 285, "col_offset": 41, "nodeName": "split_res", "type": "Any"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 286, "col_offset": 41, "nodeName": "split_res", "type": "Any"}, {"lineNumber": 287, "col_offset": 10, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 287, "col_offset": 39, "nodeName": "split_res0", "type": "Any"}, {"lineNumber": 287, "col_offset": 65, "nodeName": "split_res2", "type": "Any"}, {"lineNumber": 288, "col_offset": 11, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 288, "col_offset": 49, "nodeName": "input_shape", "type": "Optional[Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 311, "col_offset": 10, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 312, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 312, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 312, "col_offset": 43, "nodeName": "TupleWrapper", "type": "Any"}, {"lineNumber": 312, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "const", "type": "Any"}, {"lineNumber": 315, "col_offset": 27, "nodeName": "val", "type": "float"}, {"lineNumber": 318, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 321, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 324, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 327, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "_const", "type": "Callable[[Any], Any]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "new_attrs", "type": "Dict[str, Any]"}, {"lineNumber": 336, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 338, "col_offset": 7, "nodeName": "ACTIVATION", "type": "Type[ACTIVATION]"}, {"lineNumber": 339, "col_offset": 15, "nodeName": "_sigmoid", "type": "Callable[[Any], Any]"}, {"lineNumber": 339, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 340, "col_offset": 9, "nodeName": "RELU", "type": "int"}, {"lineNumber": 340, "col_offset": 28, "nodeName": "act", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 442, "col_offset": 44, "nodeName": "inputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 442, "col_offset": 52, "nodeName": "params", "type": "Any"}, {"lineNumber": 442, "col_offset": 60, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 442, "col_offset": 67, "nodeName": "params_prefix", "type": "str"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "_darknet_not_support", "type": "Callable[..., Any]"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "_state_ctr", "type": "Dict[Union[str, Any], int]"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "_state_ctr", "type": "Dict[Union[str, Any], int]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "_state_ctr", "type": "Dict[Union[str, Any], int]"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "_state_ctr", "type": "Dict[Union[str, Any], int]"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "_state_ctr", "type": "Dict[Union[str, Any], int]"}, {"lineNumber": 473, "col_offset": 11, "nodeName": "dtype", "type": "None"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 474, "col_offset": 20, "nodeName": "_dtype", "type": "Any"}, {"lineNumber": 477, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 477, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 478, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 478, "col_offset": 27, "nodeName": "length", "type": "Union[Any, int]"}, {"lineNumber": 479, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 479, "col_offset": 23, "nodeName": "length", "type": "Union[Any, int]"}, {"lineNumber": 481, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 481, "col_offset": 31, "nodeName": "shape", "type": "Tuple[Any]"}, {"lineNumber": 485, "col_offset": 11, "nodeName": "nweights", "type": "Any"}, {"lineNumber": 488, "col_offset": 76, "nodeName": "nweights", "type": "Any"}, {"lineNumber": 492, "col_offset": 17, "nodeName": "n", "type": "Any"}, {"lineNumber": 492, "col_offset": 51, "nodeName": "size", "type": "Any"}, {"lineNumber": 492, "col_offset": 63, "nodeName": "size", "type": "Any"}, {"lineNumber": 493, "col_offset": 18, "nodeName": "_read_memory_buffer", "type": "Callable[..., Any]"}, {"lineNumber": 493, "col_offset": 43, "nodeName": "shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 493, "col_offset": 50, "nodeName": "weights", "type": "Any"}, {"lineNumber": 495, "col_offset": 17, "nodeName": "_read_memory_buffer", "type": "Callable[..., Any]"}, {"lineNumber": 495, "col_offset": 54, "nodeName": "biases", "type": "Any"}, {"lineNumber": 497, "col_offset": 12, "nodeName": "_get_params_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 497, "col_offset": 29, "nodeName": "opname", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 498, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 498, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 505, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 511, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 511, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 512, "col_offset": 11, "nodeName": "size", "type": "Any"}, {"lineNumber": 515, "col_offset": 18, "nodeName": "_read_memory_buffer", "type": "Callable[..., Any]"}, {"lineNumber": 515, "col_offset": 74, "nodeName": "weights", "type": "Any"}, {"lineNumber": 516, "col_offset": 17, "nodeName": "_read_memory_buffer", "type": "Callable[..., Any]"}, {"lineNumber": 516, "col_offset": 60, "nodeName": "biases", "type": "Any"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "_get_params_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 519, "col_offset": 29, "nodeName": "opname", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 520, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 520, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 524, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 533, "col_offset": 17, "nodeName": "_read_memory_buffer", "type": "Callable[..., Any]"}, {"lineNumber": 533, "col_offset": 58, "nodeName": "biases", "type": "Any"}, {"lineNumber": 534, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 547, "col_offset": 12, "nodeName": "_get_params_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 547, "col_offset": 29, "nodeName": "opname", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 548, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 548, "col_offset": 33, "nodeName": "biases", "type": "Any"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "_get_params_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 549, "col_offset": 29, "nodeName": "opname", "type": "Any"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 550, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 550, "col_offset": 33, "nodeName": "attributes", "type": "numpy.ndarray"}, {"lineNumber": 555, "col_offset": 17, "nodeName": "_read_memory_buffer", "type": "Callable[..., Any]"}, {"lineNumber": 555, "col_offset": 62, "nodeName": "biases", "type": "Any"}, {"lineNumber": 556, "col_offset": 15, "nodeName": "_read_memory_buffer", "type": "Callable[..., Any]"}, {"lineNumber": 556, "col_offset": 52, "nodeName": "mask", "type": "Any"}, {"lineNumber": 557, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 562, "col_offset": 12, "nodeName": "_get_params_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 562, "col_offset": 29, "nodeName": "opname", "type": "Any"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 563, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 563, "col_offset": 33, "nodeName": "biases", "type": "Any"}, {"lineNumber": 564, "col_offset": 12, "nodeName": "_get_params_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 564, "col_offset": 29, "nodeName": "opname", "type": "Any"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 565, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 565, "col_offset": 33, "nodeName": "mask", "type": "Any"}, {"lineNumber": 566, "col_offset": 12, "nodeName": "_get_params_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 566, "col_offset": 29, "nodeName": "opname", "type": "Any"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 567, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 567, "col_offset": 33, "nodeName": "attributes", "type": "numpy.ndarray"}, {"lineNumber": 573, "col_offset": 17, "nodeName": "_read_memory_buffer", "type": "Callable[..., Any]"}, {"lineNumber": 573, "col_offset": 51, "nodeName": "scales", "type": "Any"}, {"lineNumber": 574, "col_offset": 23, "nodeName": "_read_memory_buffer", "type": "Callable[..., Any]"}, {"lineNumber": 574, "col_offset": 57, "nodeName": "rolling_mean", "type": "Any"}, {"lineNumber": 575, "col_offset": 27, "nodeName": "_read_memory_buffer", "type": "Callable[..., Any]"}, {"lineNumber": 575, "col_offset": 61, "nodeName": "rolling_variance", "type": "Any"}, {"lineNumber": 578, "col_offset": 12, "nodeName": "_get_params_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 578, "col_offset": 29, "nodeName": "opname", "type": "Any"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 579, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 579, "col_offset": 33, "nodeName": "rolling_mean", "type": "Any"}, {"lineNumber": 580, "col_offset": 12, "nodeName": "_get_params_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 580, "col_offset": 29, "nodeName": "opname", "type": "Any"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 581, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 581, "col_offset": 33, "nodeName": "rolling_variance", "type": "Any"}, {"lineNumber": 582, "col_offset": 12, "nodeName": "_get_params_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 582, "col_offset": 29, "nodeName": "opname", "type": "Any"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 583, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 583, "col_offset": 33, "nodeName": "scales", "type": "Any"}, {"lineNumber": 590, "col_offset": 21, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 590, "col_offset": 31, "nodeName": "type", "type": "Any"}, {"lineNumber": 591, "col_offset": 11, "nodeName": "CONVOLUTIONAL", "type": "Any"}, {"lineNumber": 591, "col_offset": 38, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 698, "col_offset": 21, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 698, "col_offset": 31, "nodeName": "type", "type": "Any"}, {"lineNumber": 700, "col_offset": 11, "nodeName": "CONVOLUTIONAL", "type": "Any"}, {"lineNumber": 700, "col_offset": 38, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 701, "col_offset": 12, "nodeName": "params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 712, "col_offset": 11, "nodeName": "layer_num", "type": "Any"}, {"lineNumber": 713, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 714, "col_offset": 12, "nodeName": "sym", "type": "Any"}, {"lineNumber": 716, "col_offset": 12, "nodeName": "sym", "type": "Any"}, {"lineNumber": 718, "col_offset": 21, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 718, "col_offset": 31, "nodeName": "type", "type": "Any"}, {"lineNumber": 719, "col_offset": 11, "nodeName": "ROUTE", "type": "Any"}, {"lineNumber": 719, "col_offset": 30, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 720, "col_offset": 12, "nodeName": "sym", "type": "List[Any]"}, {"lineNumber": 721, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 735, "col_offset": 11, "nodeName": "skip_layer", "type": "bool"}, {"lineNumber": 736, "col_offset": 41, "nodeName": "sym", "type": "Any"}, {"lineNumber": 738, "col_offset": 15, "nodeName": "skip_layer", "type": "bool"}, {"lineNumber": 738, "col_offset": 27, "nodeName": "sym", "type": "Any"}, {"lineNumber": 742, "col_offset": 15, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 742, "col_offset": 25, "nodeName": "type", "type": "Any"}, {"lineNumber": 746, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 747, "col_offset": 8, "nodeName": "_state_ctr", "type": "Dict[Union[str, Any], int]"}, {"lineNumber": 748, "col_offset": 15, "nodeName": "new_var", "type": "Any"}, {"lineNumber": 748, "col_offset": 23, "nodeName": "sym_name", "type": "Any"}, {"lineNumber": 752, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 752, "col_offset": 46, "nodeName": "_dtype", "type": "Any"}, {"lineNumber": 753, "col_offset": 15, "nodeName": "_new_rnn_state_var", "type": "Callable[..., Any]"}, {"lineNumber": 753, "col_offset": 39, "nodeName": "buffer", "type": "Any"}, {"lineNumber": 753, "col_offset": 47, "nodeName": "name", "type": "Any"}, {"lineNumber": 757, "col_offset": 15, "nodeName": "_get_darknet_attrs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 757, "col_offset": 39, "nodeName": "layer", "type": "Any"}, {"lineNumber": 758, "col_offset": 18, "nodeName": "_get_opname", "type": "Callable[[Any], Any]"}, {"lineNumber": 758, "col_offset": 35, "nodeName": "layer", "type": "Any"}, {"lineNumber": 759, "col_offset": 17, "nodeName": "_get_params_prefix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 759, "col_offset": 36, "nodeName": "op_name", "type": "LAYERTYPE"}, {"lineNumber": 759, "col_offset": 45, "nodeName": "name", "type": "Any"}, {"lineNumber": 760, "col_offset": 17, "nodeName": "_get_darknet_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 760, "col_offset": 42, "nodeName": "layer", "type": "Any"}, {"lineNumber": 760, "col_offset": 49, "nodeName": "prefix", "type": "str"}, {"lineNumber": 761, "col_offset": 14, "nodeName": "_darknet_convert_symbol", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 761, "col_offset": 38, "nodeName": "op_name", "type": "LAYERTYPE"}, {"lineNumber": 761, "col_offset": 62, "nodeName": "params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 761, "col_offset": 70, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 761, "col_offset": 76, "nodeName": "prefix", "type": "str"}, {"lineNumber": 769, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 772, "col_offset": 21, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 772, "col_offset": 31, "nodeName": "type", "type": "Any"}, {"lineNumber": 773, "col_offset": 11, "nodeName": "RNN", "type": "Any"}, {"lineNumber": 773, "col_offset": 28, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 777, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 778, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 794, "col_offset": 41, "nodeName": "sym", "type": "Any"}, {"lineNumber": 795, "col_offset": 12, "nodeName": "processed", "type": "bool"}, {"lineNumber": 796, "col_offset": 15, "nodeName": "processed", "type": "bool"}, {"lineNumber": 796, "col_offset": 26, "nodeName": "sym", "type": "Any"}, {"lineNumber": 799, "col_offset": 21, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 799, "col_offset": 31, "nodeName": "type", "type": "Any"}, {"lineNumber": 800, "col_offset": 11, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 800, "col_offset": 25, "nodeName": "REGION", "type": "Any"}, {"lineNumber": 802, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 803, "col_offset": 12, "nodeName": "dshape", "type": "Any"}, {"lineNumber": 803, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 804, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 804, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 808, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 809, "col_offset": 12, "nodeName": "dshape", "type": "Any"}, {"lineNumber": 809, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 810, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 810, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 839, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 839, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 840, "col_offset": 12, "nodeName": "layer", "type": "Any"}, {"lineNumber": 842, "col_offset": 15, "nodeName": "need_skip", "type": "bool"}, {"lineNumber": 846, "col_offset": 15, "nodeName": "processed", "type": "bool"}, {"lineNumber": 849, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 850, "col_offset": 12, "nodeName": "op_name", "type": "LAYERTYPE"}, {"lineNumber": 851, "col_offset": 12, "nodeName": "prefix", "type": "str"}, {"lineNumber": 852, "col_offset": 12, "nodeName": "params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 853, "col_offset": 12, "nodeName": "sym", "type": "Any"}, {"lineNumber": 855, "col_offset": 15, "nodeName": "params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 857, "col_offset": 33, "nodeName": "sym", "type": "Any"}, {"lineNumber": 860, "col_offset": 34, "nodeName": "_outs", "type": "List[Any]"}, {"lineNumber": 862, "col_offset": 14, "nodeName": "Function", "type": "Any"}, {"lineNumber": 862, "col_offset": 62, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 863, "col_offset": 40, "nodeName": "_tvmparams", "type": "Dict[Any, Any]"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 54, "col_offset": 67, "nodeName": "name", "type": "Any"}, {"lineNumber": 69, "col_offset": 41, "nodeName": "extra_pad_size", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 69, "col_offset": 62, "nodeName": "extra_pad_size", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 111, "col_offset": 49, "nodeName": "bias", "type": "Any"}, {"lineNumber": 111, "col_offset": 57, "nodeName": "new_attrs", "type": "Dict[str, int]"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 119, "col_offset": 86, "nodeName": "new_attrs", "type": "Dict[str, float]"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "input_0_size", "type": "int"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "input_1_size", "type": "int"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 141, "col_offset": 62, "nodeName": "scale", "type": "int"}, {"lineNumber": 141, "col_offset": 77, "nodeName": "scale", "type": "int"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "input_1", "type": "Any"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 168, "col_offset": 7, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 186, "col_offset": 88, "nodeName": "new_attrs", "type": "Dict[str, float]"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "const", "type": "Any"}, {"lineNumber": 231, "col_offset": 7, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 243, "col_offset": 40, "nodeName": "inputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 243, "col_offset": 51, "nodeName": "inputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 250, "col_offset": 31, "nodeName": "get", "type": "Callable"}, {"lineNumber": 269, "col_offset": 49, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 269, "col_offset": 73, "nodeName": "split_res", "type": "Any"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 270, "col_offset": 41, "nodeName": "split_res", "type": "Any"}, {"lineNumber": 271, "col_offset": 51, "nodeName": "split_res", "type": "Any"}, {"lineNumber": 287, "col_offset": 51, "nodeName": "split_res", "type": "Any"}, {"lineNumber": 312, "col_offset": 43, "nodeName": "_expr", "type": "Any"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "_expr", "type": "Any"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 324, "col_offset": 15, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 327, "col_offset": 15, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 331, "col_offset": 57, "nodeName": "_relu", "type": "Callable[[Any], Any]"}, {"lineNumber": 331, "col_offset": 63, "nodeName": "data", "type": "Any"}, {"lineNumber": 336, "col_offset": 15, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 336, "col_offset": 50, "nodeName": "new_attrs", "type": "Dict[str, Any]"}, {"lineNumber": 340, "col_offset": 9, "nodeName": "ACTIVATION", "type": "Type[ACTIVATION]"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "_relu", "type": "Callable[[Any], Any]"}, {"lineNumber": 341, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 342, "col_offset": 9, "nodeName": "TANH", "type": "int"}, {"lineNumber": 342, "col_offset": 28, "nodeName": "act", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 442, "col_offset": 14, "nodeName": "_DARKNET_CONVERT_MAP", "type": "Dict[Any, Union[Callable[[Any, Any, Any, Any], Any], Callable[..., Any]]]"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 474, "col_offset": 20, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 478, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 478, "col_offset": 41, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "data_np", "type": "Any"}, {"lineNumber": 480, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 481, "col_offset": 15, "nodeName": "data_np", "type": "Any"}, {"lineNumber": 485, "col_offset": 11, "nodeName": "layer", "type": "Any"}, {"lineNumber": 488, "col_offset": 61, "nodeName": "size", "type": "Any"}, {"lineNumber": 488, "col_offset": 76, "nodeName": "layer", "type": "Any"}, {"lineNumber": 489, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 492, "col_offset": 17, "nodeName": "layer", "type": "Any"}, {"lineNumber": 492, "col_offset": 26, "nodeName": "c", "type": "Any"}, {"lineNumber": 492, "col_offset": 37, "nodeName": "groups", "type": "Any"}, {"lineNumber": 492, "col_offset": 51, "nodeName": "layer", "type": "Any"}, {"lineNumber": 492, "col_offset": 63, "nodeName": "layer", "type": "Any"}, {"lineNumber": 493, "col_offset": 18, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 493, "col_offset": 50, "nodeName": "layer", "type": "Any"}, {"lineNumber": 495, "col_offset": 17, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 495, "col_offset": 43, "nodeName": "n", "type": "Any"}, {"lineNumber": 495, "col_offset": 54, "nodeName": "layer", "type": "Any"}, {"lineNumber": 498, "col_offset": 15, "nodeName": "k", "type": "Any"}, {"lineNumber": 498, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 500, "col_offset": 11, "nodeName": "batch_normalize", "type": "Any"}, {"lineNumber": 500, "col_offset": 42, "nodeName": "dontloadscales", "type": "Any"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "_get_params_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 502, "col_offset": 33, "nodeName": "opname", "type": "Any"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 503, "col_offset": 24, "nodeName": "array", "type": "Any"}, {"lineNumber": 503, "col_offset": 37, "nodeName": "biases", "type": "Any"}, {"lineNumber": 505, "col_offset": 16, "nodeName": "_get_params_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 505, "col_offset": 33, "nodeName": "opname", "type": "Any"}, {"lineNumber": 506, "col_offset": 12, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 506, "col_offset": 24, "nodeName": "array", "type": "Any"}, {"lineNumber": 506, "col_offset": 37, "nodeName": "biases", "type": "Any"}, {"lineNumber": 511, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 511, "col_offset": 31, "nodeName": "layer", "type": "Any"}, {"lineNumber": 515, "col_offset": 18, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 515, "col_offset": 44, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 515, "col_offset": 59, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 515, "col_offset": 74, "nodeName": "layer", "type": "Any"}, {"lineNumber": 516, "col_offset": 17, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 516, "col_offset": 43, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 516, "col_offset": 60, "nodeName": "layer", "type": "Any"}, {"lineNumber": 520, "col_offset": 15, "nodeName": "k", "type": "Any"}, {"lineNumber": 520, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 522, "col_offset": 11, "nodeName": "batch_normalize", "type": "Any"}, {"lineNumber": 522, "col_offset": 42, "nodeName": "dontloadscales", "type": "Any"}, {"lineNumber": 523, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 524, "col_offset": 16, "nodeName": "_get_params_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 524, "col_offset": 33, "nodeName": "opname", "type": "Any"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 525, "col_offset": 24, "nodeName": "array", "type": "Any"}, {"lineNumber": 525, "col_offset": 37, "nodeName": "biases", "type": "Any"}, {"lineNumber": 527, "col_offset": 16, "nodeName": "_get_params_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 527, "col_offset": 33, "nodeName": "opname", "type": "Any"}, {"lineNumber": 528, "col_offset": 12, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 528, "col_offset": 24, "nodeName": "array", "type": "Any"}, {"lineNumber": 528, "col_offset": 37, "nodeName": "biases", "type": "Any"}, {"lineNumber": 533, "col_offset": 17, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 533, "col_offset": 58, "nodeName": "layer", "type": "Any"}, {"lineNumber": 534, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 536, "col_offset": 16, "nodeName": "n", "type": "Any"}, {"lineNumber": 537, "col_offset": 16, "nodeName": "out_c", "type": "Any"}, {"lineNumber": 538, "col_offset": 16, "nodeName": "out_h", "type": "Any"}, {"lineNumber": 539, "col_offset": 16, "nodeName": "out_w", "type": "Any"}, {"lineNumber": 540, "col_offset": 16, "nodeName": "classes", "type": "Any"}, {"lineNumber": 541, "col_offset": 16, "nodeName": "coords", "type": "Any"}, {"lineNumber": 542, "col_offset": 16, "nodeName": "background", "type": "Any"}, {"lineNumber": 544, "col_offset": 18, "nodeName": "int32", "type": "Any"}, {"lineNumber": 548, "col_offset": 15, "nodeName": "k", "type": "Any"}, {"lineNumber": 548, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 550, "col_offset": 15, "nodeName": "k", "type": "Any"}, {"lineNumber": 550, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 555, "col_offset": 17, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 555, "col_offset": 62, "nodeName": "layer", "type": "Any"}, {"lineNumber": 556, "col_offset": 15, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 556, "col_offset": 41, "nodeName": "n", "type": "Any"}, {"lineNumber": 556, "col_offset": 52, "nodeName": "layer", "type": "Any"}, {"lineNumber": 557, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 558, "col_offset": 13, "nodeName": "n", "type": "Any"}, {"lineNumber": 558, "col_offset": 22, "nodeName": "out_c", "type": "Any"}, {"lineNumber": 558, "col_offset": 35, "nodeName": "out_h", "type": "Any"}, {"lineNumber": 558, "col_offset": 48, "nodeName": "out_w", "type": "Any"}, {"lineNumber": 558, "col_offset": 61, "nodeName": "classes", "type": "Any"}, {"lineNumber": 558, "col_offset": 76, "nodeName": "total", "type": "Any"}, {"lineNumber": 559, "col_offset": 18, "nodeName": "int32", "type": "Any"}, {"lineNumber": 563, "col_offset": 15, "nodeName": "k", "type": "Any"}, {"lineNumber": 563, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 565, "col_offset": 15, "nodeName": "k", "type": "Any"}, {"lineNumber": 565, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 567, "col_offset": 15, "nodeName": "k", "type": "Any"}, {"lineNumber": 567, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 573, "col_offset": 17, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 573, "col_offset": 43, "nodeName": "size", "type": "Any"}, {"lineNumber": 573, "col_offset": 51, "nodeName": "layer", "type": "Any"}, {"lineNumber": 574, "col_offset": 23, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 574, "col_offset": 49, "nodeName": "size", "type": "Any"}, {"lineNumber": 574, "col_offset": 57, "nodeName": "layer", "type": "Any"}, {"lineNumber": 575, "col_offset": 27, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 575, "col_offset": 53, "nodeName": "size", "type": "Any"}, {"lineNumber": 575, "col_offset": 61, "nodeName": "layer", "type": "Any"}, {"lineNumber": 579, "col_offset": 15, "nodeName": "k", "type": "Any"}, {"lineNumber": 579, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 581, "col_offset": 15, "nodeName": "k", "type": "Any"}, {"lineNumber": 581, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 583, "col_offset": 15, "nodeName": "k", "type": "Any"}, {"lineNumber": 583, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 590, "col_offset": 31, "nodeName": "layer", "type": "Any"}, {"lineNumber": 591, "col_offset": 11, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 592, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 593, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 594, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 595, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 596, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 597, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 599, "col_offset": 15, "nodeName": "nbiases", "type": "Any"}, {"lineNumber": 608, "col_offset": 13, "nodeName": "CONNECTED", "type": "Any"}, {"lineNumber": 608, "col_offset": 36, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 698, "col_offset": 31, "nodeName": "layer", "type": "Any"}, {"lineNumber": 700, "col_offset": 11, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 701, "col_offset": 21, "nodeName": "_get_convolution_weights", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 701, "col_offset": 51, "nodeName": "layer", "type": "Any"}, {"lineNumber": 701, "col_offset": 58, "nodeName": "opname", "type": "Any"}, {"lineNumber": 702, "col_offset": 13, "nodeName": "CONNECTED", "type": "Any"}, {"lineNumber": 702, "col_offset": 36, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 703, "col_offset": 12, "nodeName": "params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 714, "col_offset": 18, "nodeName": "new_var", "type": "Any"}, {"lineNumber": 714, "col_offset": 26, "nodeName": "name", "type": "str"}, {"lineNumber": 716, "col_offset": 18, "nodeName": "_sym_array", "type": "Dict[Union[Any, int], Any]"}, {"lineNumber": 718, "col_offset": 31, "nodeName": "layer", "type": "Any"}, {"lineNumber": 719, "col_offset": 11, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 721, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 721, "col_offset": 27, "nodeName": "n", "type": "Any"}, {"lineNumber": 723, "col_offset": 15, "nodeName": "n", "type": "Any"}, {"lineNumber": 724, "col_offset": 16, "nodeName": "skip_layer", "type": "bool"}, {"lineNumber": 726, "col_offset": 13, "nodeName": "COST", "type": "Any"}, {"lineNumber": 726, "col_offset": 31, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 727, "col_offset": 12, "nodeName": "skip_layer", "type": "bool"}, {"lineNumber": 736, "col_offset": 12, "nodeName": "_sym_array", "type": "Dict[Union[Any, int], Any]"}, {"lineNumber": 742, "col_offset": 25, "nodeName": "layer", "type": "Any"}, {"lineNumber": 747, "col_offset": 8, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 747, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 748, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 752, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 752, "col_offset": 30, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 752, "col_offset": 46, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 753, "col_offset": 15, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 757, "col_offset": 15, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 758, "col_offset": 18, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 760, "col_offset": 17, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 761, "col_offset": 47, "nodeName": "_as_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 761, "col_offset": 56, "nodeName": "sym", "type": "Any"}, {"lineNumber": 763, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 763, "col_offset": 35, "nodeName": "params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 769, "col_offset": 16, "nodeName": "_net", "type": "Any"}, {"lineNumber": 769, "col_offset": 33, "nodeName": "layer_num", "type": "Any"}, {"lineNumber": 772, "col_offset": 31, "nodeName": "layer", "type": "Any"}, {"lineNumber": 773, "col_offset": 11, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 774, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 775, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 776, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 777, "col_offset": 20, "nodeName": "_get_rnn_state_buffer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 777, "col_offset": 47, "nodeName": "layer", "type": "Any"}, {"lineNumber": 778, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 778, "col_offset": 27, "nodeName": "steps", "type": "Any"}, {"lineNumber": 779, "col_offset": 16, "nodeName": "input_layer", "type": "Any"}, {"lineNumber": 779, "col_offset": 30, "nodeName": "input_layer", "type": "Any"}, {"lineNumber": 780, "col_offset": 16, "nodeName": "prefix", "type": "str"}, {"lineNumber": 781, "col_offset": 16, "nodeName": "sym", "type": "Any"}, {"lineNumber": 783, "col_offset": 16, "nodeName": "self_layer", "type": "Any"}, {"lineNumber": 783, "col_offset": 29, "nodeName": "self_layer", "type": "Any"}, {"lineNumber": 784, "col_offset": 16, "nodeName": "prefix", "type": "str"}, {"lineNumber": 785, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 787, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 790, "col_offset": 16, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 790, "col_offset": 31, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 791, "col_offset": 16, "nodeName": "prefix", "type": "str"}, {"lineNumber": 792, "col_offset": 16, "nodeName": "sym", "type": "Any"}, {"lineNumber": 794, "col_offset": 12, "nodeName": "_sym_array", "type": "Dict[Union[Any, int], Any]"}, {"lineNumber": 799, "col_offset": 31, "nodeName": "layer", "type": "Any"}, {"lineNumber": 800, "col_offset": 25, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 802, "col_offset": 16, "nodeName": "_get_params_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 802, "col_offset": 33, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 805, "col_offset": 12, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 808, "col_offset": 16, "nodeName": "_get_params_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 808, "col_offset": 33, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 811, "col_offset": 12, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 812, "col_offset": 15, "nodeName": "layer_num", "type": "Any"}, {"lineNumber": 815, "col_offset": 13, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 815, "col_offset": 27, "nodeName": "YOLO", "type": "Any"}, {"lineNumber": 817, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 818, "col_offset": 12, "nodeName": "dshape", "type": "Any"}, {"lineNumber": 818, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 819, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 819, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 823, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 824, "col_offset": 12, "nodeName": "dshape", "type": "Any"}, {"lineNumber": 824, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 825, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 825, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 829, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 830, "col_offset": 12, "nodeName": "dshape", "type": "Any"}, {"lineNumber": 830, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 831, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 831, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 839, "col_offset": 23, "nodeName": "_net", "type": "Any"}, {"lineNumber": 840, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 841, "col_offset": 12, "nodeName": "need_skip", "type": "bool"}, {"lineNumber": 841, "col_offset": 23, "nodeName": "sym", "type": "Any"}, {"lineNumber": 841, "col_offset": 29, "nodeName": "_preproc_layer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 841, "col_offset": 49, "nodeName": "layer", "type": "Any"}, {"lineNumber": 841, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 845, "col_offset": 12, "nodeName": "processed", "type": "bool"}, {"lineNumber": 845, "col_offset": 23, "nodeName": "sym", "type": "Any"}, {"lineNumber": 845, "col_offset": 29, "nodeName": "_handle_darknet_rnn_layers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 845, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 845, "col_offset": 64, "nodeName": "sym", "type": "Any"}, {"lineNumber": 849, "col_offset": 19, "nodeName": "_get_darknet_attrs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 849, "col_offset": 43, "nodeName": "layer", "type": "Any"}, {"lineNumber": 849, "col_offset": 50, "nodeName": "i", "type": "int"}, {"lineNumber": 850, "col_offset": 22, "nodeName": "_get_opname", "type": "Callable[[Any], Any]"}, {"lineNumber": 850, "col_offset": 39, "nodeName": "layer", "type": "Any"}, {"lineNumber": 851, "col_offset": 21, "nodeName": "_get_params_prefix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 851, "col_offset": 40, "nodeName": "op_name", "type": "LAYERTYPE"}, {"lineNumber": 851, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 852, "col_offset": 21, "nodeName": "_get_darknet_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 852, "col_offset": 67, "nodeName": "prefix", "type": "str"}, {"lineNumber": 853, "col_offset": 18, "nodeName": "_darknet_convert_symbol", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 853, "col_offset": 42, "nodeName": "op_name", "type": "LAYERTYPE"}, {"lineNumber": 853, "col_offset": 66, "nodeName": "params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 853, "col_offset": 74, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 853, "col_offset": 80, "nodeName": "prefix", "type": "str"}, {"lineNumber": 857, "col_offset": 12, "nodeName": "_sym_array", "type": "Dict[Union[Any, int], Any]"}, {"lineNumber": 858, "col_offset": 12, "nodeName": "_make_outlist", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 858, "col_offset": 31, "nodeName": "sym", "type": "Any"}, {"lineNumber": 858, "col_offset": 36, "nodeName": "prefix", "type": "str"}, {"lineNumber": 858, "col_offset": 44, "nodeName": "layer", "type": "Any"}, {"lineNumber": 858, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 860, "col_offset": 18, "nodeName": "_as_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 860, "col_offset": 27, "nodeName": "sym", "type": "Any"}, {"lineNumber": 860, "col_offset": 34, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 861, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 861, "col_offset": 55, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 861, "col_offset": 67, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 862, "col_offset": 14, "nodeName": "_function", "type": "Any"}, {"lineNumber": 862, "col_offset": 33, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 862, "col_offset": 52, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 863, "col_offset": 15, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 863, "col_offset": 34, "nodeName": "sym", "type": "Any"}, {"lineNumber": 863, "col_offset": 40, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 887, "col_offset": 11, "nodeName": "GraphProto", "type": "Type[GraphProto]"}, {"lineNumber": 887, "col_offset": 22, "nodeName": "net", "type": "Any"}, {"lineNumber": 887, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 887, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "opname", "type": "LAYERTYPE"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 55, "col_offset": 57, "nodeName": "params", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "inputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 71, "col_offset": 51, "nodeName": "pad_width", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]], Tuple[int, Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]]]"}, {"lineNumber": 71, "col_offset": 72, "nodeName": "min", "type": "Any"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "input_1_size", "type": "int"}, {"lineNumber": 144, "col_offset": 36, "nodeName": "input_0_size", "type": "int"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "get_relay_op", "type": "Any"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "_expr", "type": "Any"}, {"lineNumber": 229, "col_offset": 34, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 229, "col_offset": 40, "nodeName": "temperature", "type": "Union[Any, int, bool, str, Tuple[int, Any, Any, Any]]"}, {"lineNumber": 250, "col_offset": 31, "nodeName": "attrs", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 331, "col_offset": 23, "nodeName": "_relu", "type": "Callable[[Any], Any]"}, {"lineNumber": 342, "col_offset": 9, "nodeName": "ACTIVATION", "type": "Type[ACTIVATION]"}, {"lineNumber": 343, "col_offset": 15, "nodeName": "_tanh", "type": "Callable[[Any], Any]"}, {"lineNumber": 343, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 344, "col_offset": 9, "nodeName": "LINEAR", "type": "int"}, {"lineNumber": 344, "col_offset": 30, "nodeName": "act", "type": "Any"}, {"lineNumber": 345, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 442, "col_offset": 35, "nodeName": "op_name", "type": "LAYERTYPE"}, {"lineNumber": 444, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 444, "col_offset": 52, "nodeName": "op_name", "type": "LAYERTYPE"}, {"lineNumber": 480, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 480, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 488, "col_offset": 48, "nodeName": "size", "type": "Any"}, {"lineNumber": 488, "col_offset": 61, "nodeName": "layer", "type": "Any"}, {"lineNumber": 492, "col_offset": 26, "nodeName": "layer", "type": "Any"}, {"lineNumber": 492, "col_offset": 37, "nodeName": "layer", "type": "Any"}, {"lineNumber": 495, "col_offset": 43, "nodeName": "layer", "type": "Any"}, {"lineNumber": 498, "col_offset": 20, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 500, "col_offset": 11, "nodeName": "layer", "type": "Any"}, {"lineNumber": 500, "col_offset": 42, "nodeName": "layer", "type": "Any"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 501, "col_offset": 26, "nodeName": "_get_batchnorm_weights", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 501, "col_offset": 54, "nodeName": "layer", "type": "Any"}, {"lineNumber": 501, "col_offset": 61, "nodeName": "opname", "type": "Any"}, {"lineNumber": 501, "col_offset": 69, "nodeName": "n", "type": "Any"}, {"lineNumber": 503, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 503, "col_offset": 24, "nodeName": "nd", "type": "Any"}, {"lineNumber": 506, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 506, "col_offset": 24, "nodeName": "nd", "type": "Any"}, {"lineNumber": 515, "col_offset": 44, "nodeName": "layer", "type": "Any"}, {"lineNumber": 515, "col_offset": 59, "nodeName": "layer", "type": "Any"}, {"lineNumber": 516, "col_offset": 43, "nodeName": "layer", "type": "Any"}, {"lineNumber": 520, "col_offset": 20, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 522, "col_offset": 11, "nodeName": "layer", "type": "Any"}, {"lineNumber": 522, "col_offset": 42, "nodeName": "layer", "type": "Any"}, {"lineNumber": 523, "col_offset": 12, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 523, "col_offset": 26, "nodeName": "_get_batchnorm_weights", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 523, "col_offset": 54, "nodeName": "layer", "type": "Any"}, {"lineNumber": 523, "col_offset": 61, "nodeName": "opname", "type": "Any"}, {"lineNumber": 523, "col_offset": 69, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 525, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 525, "col_offset": 24, "nodeName": "nd", "type": "Any"}, {"lineNumber": 528, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 528, "col_offset": 24, "nodeName": "nd", "type": "Any"}, {"lineNumber": 533, "col_offset": 43, "nodeName": "n", "type": "Any"}, {"lineNumber": 536, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 537, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 538, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 539, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 540, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 541, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 542, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 544, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 548, "col_offset": 20, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 550, "col_offset": 20, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 555, "col_offset": 43, "nodeName": "total", "type": "Any"}, {"lineNumber": 556, "col_offset": 41, "nodeName": "layer", "type": "Any"}, {"lineNumber": 558, "col_offset": 13, "nodeName": "layer", "type": "Any"}, {"lineNumber": 558, "col_offset": 22, "nodeName": "layer", "type": "Any"}, {"lineNumber": 558, "col_offset": 35, "nodeName": "layer", "type": "Any"}, {"lineNumber": 558, "col_offset": 48, "nodeName": "layer", "type": "Any"}, {"lineNumber": 558, "col_offset": 61, "nodeName": "layer", "type": "Any"}, {"lineNumber": 558, "col_offset": 76, "nodeName": "layer", "type": "Any"}, {"lineNumber": 559, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 563, "col_offset": 20, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 565, "col_offset": 20, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 567, "col_offset": 20, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 579, "col_offset": 20, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 581, "col_offset": 20, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 583, "col_offset": 20, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 592, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 592, "col_offset": 32, "nodeName": "pad", "type": "Any"}, {"lineNumber": 593, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 593, "col_offset": 38, "nodeName": "groups", "type": "Any"}, {"lineNumber": 594, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 594, "col_offset": 39, "nodeName": "n", "type": "Any"}, {"lineNumber": 595, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 595, "col_offset": 35, "nodeName": "stride", "type": "Any"}, {"lineNumber": 596, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 596, "col_offset": 35, "nodeName": "size", "type": "Any"}, {"lineNumber": 597, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 597, "col_offset": 40, "nodeName": "activation", "type": "Any"}, {"lineNumber": 599, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 600, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 602, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 604, "col_offset": 15, "nodeName": "batch_normalize", "type": "Any"}, {"lineNumber": 604, "col_offset": 46, "nodeName": "dontloadscales", "type": "Any"}, {"lineNumber": 605, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 606, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 608, "col_offset": 13, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 609, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 611, "col_offset": 15, "nodeName": "layer_num", "type": "Any"}, {"lineNumber": 612, "col_offset": 16, "nodeName": "layer_prev", "type": "Any"}, {"lineNumber": 619, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 620, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 626, "col_offset": 13, "nodeName": "MAXPOOL", "type": "Any"}, {"lineNumber": 626, "col_offset": 34, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 630, "col_offset": 12, "nodeName": "max_output", "type": "Any"}, {"lineNumber": 701, "col_offset": 21, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 702, "col_offset": 13, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 703, "col_offset": 21, "nodeName": "_get_connected_weights", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 703, "col_offset": 49, "nodeName": "layer", "type": "Any"}, {"lineNumber": 703, "col_offset": 56, "nodeName": "opname", "type": "Any"}, {"lineNumber": 704, "col_offset": 13, "nodeName": "REGION", "type": "Any"}, {"lineNumber": 704, "col_offset": 33, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 705, "col_offset": 12, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 714, "col_offset": 38, "nodeName": "_shape", "type": "Any"}, {"lineNumber": 714, "col_offset": 57, "nodeName": "_dtype", "type": "Any"}, {"lineNumber": 716, "col_offset": 18, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 721, "col_offset": 27, "nodeName": "layer", "type": "Any"}, {"lineNumber": 722, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 723, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 726, "col_offset": 13, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 729, "col_offset": 13, "nodeName": "SHORTCUT", "type": "Any"}, {"lineNumber": 729, "col_offset": 35, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 730, "col_offset": 12, "nodeName": "sym", "type": "List[Any]"}, {"lineNumber": 736, "col_offset": 12, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 736, "col_offset": 28, "nodeName": "layer_num", "type": "Any"}, {"lineNumber": 746, "col_offset": 39, "nodeName": "_state_ctr", "type": "Dict[Union[str, Any], int]"}, {"lineNumber": 748, "col_offset": 39, "nodeName": "state", "type": "Any"}, {"lineNumber": 748, "col_offset": 58, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 748, "col_offset": 62, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 752, "col_offset": 30, "nodeName": "layer", "type": "Any"}, {"lineNumber": 763, "col_offset": 12, "nodeName": "_tvmparams", "type": "Dict[Any, Any]"}, {"lineNumber": 769, "col_offset": 16, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 774, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 774, "col_offset": 30, "nodeName": "n", "type": "Any"}, {"lineNumber": 775, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 775, "col_offset": 34, "nodeName": "batch", "type": "Any"}, {"lineNumber": 776, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 777, "col_offset": 20, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 778, "col_offset": 27, "nodeName": "layer", "type": "Any"}, {"lineNumber": 779, "col_offset": 30, "nodeName": "layer", "type": "Any"}, {"lineNumber": 781, "col_offset": 22, "nodeName": "_get_darknet_rnn_attrs", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 781, "col_offset": 50, "nodeName": "input_layer", "type": "Any"}, {"lineNumber": 781, "col_offset": 63, "nodeName": "prefix", "type": "str"}, {"lineNumber": 781, "col_offset": 71, "nodeName": "sym", "type": "Any"}, {"lineNumber": 783, "col_offset": 29, "nodeName": "layer", "type": "Any"}, {"lineNumber": 785, "col_offset": 24, "nodeName": "_get_darknet_rnn_attrs", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 785, "col_offset": 52, "nodeName": "self_layer", "type": "Any"}, {"lineNumber": 785, "col_offset": 64, "nodeName": "prefix", "type": "str"}, {"lineNumber": 785, "col_offset": 72, "nodeName": "state", "type": "Any"}, {"lineNumber": 787, "col_offset": 24, "nodeName": "sym", "type": "Any"}, {"lineNumber": 787, "col_offset": 30, "nodeName": "state", "type": "Any"}, {"lineNumber": 788, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 788, "col_offset": 34, "nodeName": "state", "type": "Any"}, {"lineNumber": 790, "col_offset": 31, "nodeName": "layer", "type": "Any"}, {"lineNumber": 792, "col_offset": 22, "nodeName": "_get_darknet_rnn_attrs", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 792, "col_offset": 50, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 792, "col_offset": 64, "nodeName": "prefix", "type": "str"}, {"lineNumber": 792, "col_offset": 72, "nodeName": "state", "type": "Any"}, {"lineNumber": 794, "col_offset": 12, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 794, "col_offset": 28, "nodeName": "layer_num", "type": "Any"}, {"lineNumber": 803, "col_offset": 21, "nodeName": "_tvmparams", "type": "Dict[Any, Any]"}, {"lineNumber": 804, "col_offset": 20, "nodeName": "_tvmparams", "type": "Dict[Any, Any]"}, {"lineNumber": 805, "col_offset": 12, "nodeName": "_outs", "type": "List[Any]"}, {"lineNumber": 805, "col_offset": 33, "nodeName": "new_var", "type": "Any"}, {"lineNumber": 805, "col_offset": 41, "nodeName": "k", "type": "Any"}, {"lineNumber": 809, "col_offset": 21, "nodeName": "_tvmparams", "type": "Dict[Any, Any]"}, {"lineNumber": 810, "col_offset": 20, "nodeName": "_tvmparams", "type": "Dict[Any, Any]"}, {"lineNumber": 811, "col_offset": 12, "nodeName": "_outs", "type": "List[Any]"}, {"lineNumber": 811, "col_offset": 33, "nodeName": "new_var", "type": "Any"}, {"lineNumber": 811, "col_offset": 41, "nodeName": "k", "type": "Any"}, {"lineNumber": 812, "col_offset": 28, "nodeName": "n", "type": "Any"}, {"lineNumber": 813, "col_offset": 16, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 813, "col_offset": 37, "nodeName": "sym", "type": "Any"}, {"lineNumber": 815, "col_offset": 27, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 817, "col_offset": 16, "nodeName": "_get_params_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 817, "col_offset": 33, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 820, "col_offset": 12, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 823, "col_offset": 16, "nodeName": "_get_params_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 823, "col_offset": 33, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 826, "col_offset": 12, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 829, "col_offset": 16, "nodeName": "_get_params_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 829, "col_offset": 33, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 832, "col_offset": 12, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 834, "col_offset": 15, "nodeName": "layer_num", "type": "Any"}, {"lineNumber": 839, "col_offset": 23, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 840, "col_offset": 20, "nodeName": "_net", "type": "Any"}, {"lineNumber": 840, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 841, "col_offset": 29, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 845, "col_offset": 29, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 849, "col_offset": 19, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 850, "col_offset": 22, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 852, "col_offset": 21, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 852, "col_offset": 46, "nodeName": "layers", "type": "Any"}, {"lineNumber": 853, "col_offset": 51, "nodeName": "_as_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 853, "col_offset": 60, "nodeName": "sym", "type": "Any"}, {"lineNumber": 856, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 856, "col_offset": 39, "nodeName": "params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 857, "col_offset": 12, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 857, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 858, "col_offset": 12, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 861, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 861, "col_offset": 36, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 861, "col_offset": 55, "nodeName": "_expr", "type": "Any"}, {"lineNumber": 862, "col_offset": 33, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 863, "col_offset": 15, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 55, "col_offset": 64, "nodeName": "name", "type": "Any"}, {"lineNumber": 146, "col_offset": 48, "nodeName": "stride", "type": "int"}, {"lineNumber": 146, "col_offset": 56, "nodeName": "stride", "type": "int"}, {"lineNumber": 152, "col_offset": 44, "nodeName": "pad_channel", "type": "int"}, {"lineNumber": 344, "col_offset": 9, "nodeName": "ACTIVATION", "type": "Type[ACTIVATION]"}, {"lineNumber": 346, "col_offset": 9, "nodeName": "LEAKY", "type": "int"}, {"lineNumber": 346, "col_offset": 29, "nodeName": "act", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 488, "col_offset": 33, "nodeName": "groups", "type": "Any"}, {"lineNumber": 488, "col_offset": 48, "nodeName": "layer", "type": "Any"}, {"lineNumber": 501, "col_offset": 26, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 501, "col_offset": 69, "nodeName": "layer", "type": "Any"}, {"lineNumber": 503, "col_offset": 24, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 506, "col_offset": 24, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 523, "col_offset": 26, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 523, "col_offset": 69, "nodeName": "layer", "type": "Any"}, {"lineNumber": 525, "col_offset": 24, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 528, "col_offset": 24, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 533, "col_offset": 43, "nodeName": "layer", "type": "Any"}, {"lineNumber": 555, "col_offset": 43, "nodeName": "layer", "type": "Any"}, {"lineNumber": 592, "col_offset": 32, "nodeName": "layer", "type": "Any"}, {"lineNumber": 593, "col_offset": 38, "nodeName": "layer", "type": "Any"}, {"lineNumber": 594, "col_offset": 39, "nodeName": "layer", "type": "Any"}, {"lineNumber": 595, "col_offset": 35, "nodeName": "layer", "type": "Any"}, {"lineNumber": 596, "col_offset": 35, "nodeName": "layer", "type": "Any"}, {"lineNumber": 597, "col_offset": 40, "nodeName": "layer", "type": "Any"}, {"lineNumber": 600, "col_offset": 16, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 602, "col_offset": 16, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 604, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 604, "col_offset": 46, "nodeName": "layer", "type": "Any"}, {"lineNumber": 605, "col_offset": 16, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 606, "col_offset": 16, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 609, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 609, "col_offset": 39, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 610, "col_offset": 40, "nodeName": "activation", "type": "Any"}, {"lineNumber": 612, "col_offset": 29, "nodeName": "layers", "type": "Any"}, {"lineNumber": 618, "col_offset": 20, "nodeName": "use_flatten", "type": "bool"}, {"lineNumber": 619, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 619, "col_offset": 40, "nodeName": "use_flatten", "type": "bool"}, {"lineNumber": 620, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 621, "col_offset": 15, "nodeName": "batch_normalize", "type": "Any"}, {"lineNumber": 621, "col_offset": 46, "nodeName": "dontloadscales", "type": "Any"}, {"lineNumber": 622, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 623, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 624, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 626, "col_offset": 13, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 627, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 628, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 629, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 631, "col_offset": 15, "nodeName": "max_output", "type": "Any"}, {"lineNumber": 631, "col_offset": 28, "nodeName": "out_w", "type": "Any"}, {"lineNumber": 632, "col_offset": 16, "nodeName": "extra_pad", "type": "Any"}, {"lineNumber": 634, "col_offset": 13, "nodeName": "AVGPOOL", "type": "Any"}, {"lineNumber": 634, "col_offset": 34, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 703, "col_offset": 21, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 704, "col_offset": 13, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 705, "col_offset": 21, "nodeName": "_get_region_weights", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 705, "col_offset": 46, "nodeName": "layer", "type": "Any"}, {"lineNumber": 705, "col_offset": 53, "nodeName": "opname", "type": "Any"}, {"lineNumber": 706, "col_offset": 13, "nodeName": "YOLO", "type": "Any"}, {"lineNumber": 706, "col_offset": 31, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 707, "col_offset": 12, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 714, "col_offset": 38, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 714, "col_offset": 57, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 716, "col_offset": 34, "nodeName": "layer_num", "type": "Any"}, {"lineNumber": 722, "col_offset": 16, "nodeName": "sym", "type": "List[Any]"}, {"lineNumber": 722, "col_offset": 27, "nodeName": "_sym_array", "type": "Dict[Union[Any, int], Any]"}, {"lineNumber": 729, "col_offset": 13, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 730, "col_offset": 19, "nodeName": "sym", "type": "Any"}, {"lineNumber": 732, "col_offset": 13, "nodeName": "BLANK", "type": "Any"}, {"lineNumber": 732, "col_offset": 32, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 733, "col_offset": 12, "nodeName": "skip_layer", "type": "bool"}, {"lineNumber": 746, "col_offset": 39, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 746, "col_offset": 55, "nodeName": "name", "type": "Any"}, {"lineNumber": 748, "col_offset": 62, "nodeName": "state", "type": "Any"}, {"lineNumber": 763, "col_offset": 12, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 774, "col_offset": 30, "nodeName": "layer", "type": "Any"}, {"lineNumber": 775, "col_offset": 34, "nodeName": "layer", "type": "Any"}, {"lineNumber": 776, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 776, "col_offset": 43, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 780, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 780, "col_offset": 41, "nodeName": "layer_num", "type": "Any"}, {"lineNumber": 781, "col_offset": 22, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 784, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 784, "col_offset": 40, "nodeName": "layer_num", "type": "Any"}, {"lineNumber": 785, "col_offset": 24, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 788, "col_offset": 16, "nodeName": "_outs", "type": "List[Any]"}, {"lineNumber": 791, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 791, "col_offset": 42, "nodeName": "layer_num", "type": "Any"}, {"lineNumber": 792, "col_offset": 22, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 803, "col_offset": 21, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 803, "col_offset": 37, "nodeName": "k", "type": "Any"}, {"lineNumber": 804, "col_offset": 20, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 804, "col_offset": 36, "nodeName": "k", "type": "Any"}, {"lineNumber": 805, "col_offset": 12, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 805, "col_offset": 50, "nodeName": "dshape", "type": "Any"}, {"lineNumber": 805, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 809, "col_offset": 21, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 809, "col_offset": 37, "nodeName": "k", "type": "Any"}, {"lineNumber": 810, "col_offset": 20, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 810, "col_offset": 36, "nodeName": "k", "type": "Any"}, {"lineNumber": 811, "col_offset": 12, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 811, "col_offset": 50, "nodeName": "dshape", "type": "Any"}, {"lineNumber": 811, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 812, "col_offset": 28, "nodeName": "_net", "type": "Any"}, {"lineNumber": 813, "col_offset": 16, "nodeName": "_outs", "type": "List[Any]"}, {"lineNumber": 818, "col_offset": 21, "nodeName": "_tvmparams", "type": "Dict[Any, Any]"}, {"lineNumber": 819, "col_offset": 20, "nodeName": "_tvmparams", "type": "Dict[Any, Any]"}, {"lineNumber": 820, "col_offset": 12, "nodeName": "_outs", "type": "List[Any]"}, {"lineNumber": 820, "col_offset": 33, "nodeName": "new_var", "type": "Any"}, {"lineNumber": 820, "col_offset": 41, "nodeName": "k", "type": "Any"}, {"lineNumber": 824, "col_offset": 21, "nodeName": "_tvmparams", "type": "Dict[Any, Any]"}, {"lineNumber": 825, "col_offset": 20, "nodeName": "_tvmparams", "type": "Dict[Any, Any]"}, {"lineNumber": 826, "col_offset": 12, "nodeName": "_outs", "type": "List[Any]"}, {"lineNumber": 826, "col_offset": 33, "nodeName": "new_var", "type": "Any"}, {"lineNumber": 826, "col_offset": 41, "nodeName": "k", "type": "Any"}, {"lineNumber": 830, "col_offset": 21, "nodeName": "_tvmparams", "type": "Dict[Any, Any]"}, {"lineNumber": 831, "col_offset": 20, "nodeName": "_tvmparams", "type": "Dict[Any, Any]"}, {"lineNumber": 832, "col_offset": 12, "nodeName": "_outs", "type": "List[Any]"}, {"lineNumber": 832, "col_offset": 33, "nodeName": "new_var", "type": "Any"}, {"lineNumber": 832, "col_offset": 41, "nodeName": "k", "type": "Any"}, {"lineNumber": 834, "col_offset": 28, "nodeName": "n", "type": "Any"}, {"lineNumber": 835, "col_offset": 16, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 835, "col_offset": 37, "nodeName": "sym", "type": "Any"}, {"lineNumber": 840, "col_offset": 20, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 852, "col_offset": 46, "nodeName": "_net", "type": "Any"}, {"lineNumber": 852, "col_offset": 63, "nodeName": "i", "type": "int"}, {"lineNumber": 856, "col_offset": 16, "nodeName": "_tvmparams", "type": "Dict[Any, Any]"}, {"lineNumber": 71, "col_offset": 72, "nodeName": "finfo", "type": "Any"}, {"lineNumber": 71, "col_offset": 81, "nodeName": "float32", "type": "Any"}, {"lineNumber": 331, "col_offset": 29, "nodeName": "_const", "type": "Callable[[Any], Any]"}, {"lineNumber": 331, "col_offset": 43, "nodeName": "_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 331, "col_offset": 48, "nodeName": "data", "type": "Any"}, {"lineNumber": 346, "col_offset": 9, "nodeName": "ACTIVATION", "type": "Type[ACTIVATION]"}, {"lineNumber": 347, "col_offset": 15, "nodeName": "_leaky_relu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 347, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 348, "col_offset": 9, "nodeName": "ELU", "type": "int"}, {"lineNumber": 348, "col_offset": 27, "nodeName": "act", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 488, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 488, "col_offset": 33, "nodeName": "layer", "type": "Any"}, {"lineNumber": 609, "col_offset": 39, "nodeName": "layer", "type": "Any"}, {"lineNumber": 610, "col_offset": 40, "nodeName": "layer", "type": "Any"}, {"lineNumber": 612, "col_offset": 29, "nodeName": "_net", "type": "Any"}, {"lineNumber": 614, "col_offset": 20, "nodeName": "out_h", "type": "Any"}, {"lineNumber": 614, "col_offset": 40, "nodeName": "h", "type": "Any"}, {"lineNumber": 615, "col_offset": 24, "nodeName": "out_w", "type": "Any"}, {"lineNumber": 615, "col_offset": 44, "nodeName": "w", "type": "Any"}, {"lineNumber": 616, "col_offset": 24, "nodeName": "out_c", "type": "Any"}, {"lineNumber": 616, "col_offset": 44, "nodeName": "c", "type": "Any"}, {"lineNumber": 621, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 621, "col_offset": 46, "nodeName": "layer", "type": "Any"}, {"lineNumber": 622, "col_offset": 16, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 623, "col_offset": 16, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 624, "col_offset": 16, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 627, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 627, "col_offset": 32, "nodeName": "pad", "type": "Any"}, {"lineNumber": 628, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 628, "col_offset": 35, "nodeName": "stride", "type": "Any"}, {"lineNumber": 629, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 629, "col_offset": 35, "nodeName": "size", "type": "Any"}, {"lineNumber": 631, "col_offset": 28, "nodeName": "layer", "type": "Any"}, {"lineNumber": 632, "col_offset": 57, "nodeName": "stride", "type": "Any"}, {"lineNumber": 633, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 634, "col_offset": 13, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 635, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 636, "col_offset": 15, "nodeName": "stride", "type": "Any"}, {"lineNumber": 645, "col_offset": 13, "nodeName": "DROPOUT", "type": "Any"}, {"lineNumber": 645, "col_offset": 34, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 705, "col_offset": 21, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 706, "col_offset": 13, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 707, "col_offset": 21, "nodeName": "_get_yolo_weights", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 707, "col_offset": 44, "nodeName": "layer", "type": "Any"}, {"lineNumber": 707, "col_offset": 51, "nodeName": "opname", "type": "Any"}, {"lineNumber": 722, "col_offset": 27, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 730, "col_offset": 24, "nodeName": "_sym_array", "type": "Dict[Union[Any, int], Any]"}, {"lineNumber": 732, "col_offset": 13, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 776, "col_offset": 43, "nodeName": "layer", "type": "Any"}, {"lineNumber": 788, "col_offset": 16, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 812, "col_offset": 28, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 813, "col_offset": 16, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 818, "col_offset": 21, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 818, "col_offset": 37, "nodeName": "k", "type": "Any"}, {"lineNumber": 819, "col_offset": 20, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 819, "col_offset": 36, "nodeName": "k", "type": "Any"}, {"lineNumber": 820, "col_offset": 12, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 820, "col_offset": 50, "nodeName": "dshape", "type": "Any"}, {"lineNumber": 820, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 824, "col_offset": 21, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 824, "col_offset": 37, "nodeName": "k", "type": "Any"}, {"lineNumber": 825, "col_offset": 20, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 825, "col_offset": 36, "nodeName": "k", "type": "Any"}, {"lineNumber": 826, "col_offset": 12, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 826, "col_offset": 50, "nodeName": "dshape", "type": "Any"}, {"lineNumber": 826, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 830, "col_offset": 21, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 830, "col_offset": 37, "nodeName": "k", "type": "Any"}, {"lineNumber": 831, "col_offset": 20, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 831, "col_offset": 36, "nodeName": "k", "type": "Any"}, {"lineNumber": 832, "col_offset": 12, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 832, "col_offset": 50, "nodeName": "dshape", "type": "Any"}, {"lineNumber": 832, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 834, "col_offset": 28, "nodeName": "_net", "type": "Any"}, {"lineNumber": 835, "col_offset": 16, "nodeName": "_outs", "type": "List[Any]"}, {"lineNumber": 852, "col_offset": 46, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 856, "col_offset": 16, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 71, "col_offset": 72, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 81, "nodeName": "np", "type": "module"}, {"lineNumber": 347, "col_offset": 33, "nodeName": "get", "type": "Any"}, {"lineNumber": 348, "col_offset": 9, "nodeName": "ACTIVATION", "type": "Type[ACTIVATION]"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "_elu", "type": "Callable[[Any], Any]"}, {"lineNumber": 349, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "_darknet_not_support", "type": "Callable[..., Any]"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "layer", "type": "Any"}, {"lineNumber": 488, "col_offset": 22, "nodeName": "layer", "type": "Any"}, {"lineNumber": 612, "col_offset": 29, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 612, "col_offset": 46, "nodeName": "layer_num", "type": "Any"}, {"lineNumber": 614, "col_offset": 20, "nodeName": "layer_prev", "type": "Any"}, {"lineNumber": 614, "col_offset": 40, "nodeName": "layer", "type": "Any"}, {"lineNumber": 615, "col_offset": 24, "nodeName": "layer_prev", "type": "Any"}, {"lineNumber": 615, "col_offset": 44, "nodeName": "layer", "type": "Any"}, {"lineNumber": 616, "col_offset": 24, "nodeName": "layer_prev", "type": "Any"}, {"lineNumber": 616, "col_offset": 44, "nodeName": "layer", "type": "Any"}, {"lineNumber": 627, "col_offset": 32, "nodeName": "layer", "type": "Any"}, {"lineNumber": 628, "col_offset": 35, "nodeName": "layer", "type": "Any"}, {"lineNumber": 629, "col_offset": 35, "nodeName": "layer", "type": "Any"}, {"lineNumber": 630, "col_offset": 66, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 630, "col_offset": 72, "nodeName": "stride", "type": "Any"}, {"lineNumber": 632, "col_offset": 29, "nodeName": "out_w", "type": "Any"}, {"lineNumber": 632, "col_offset": 43, "nodeName": "max_output", "type": "Any"}, {"lineNumber": 632, "col_offset": 57, "nodeName": "layer", "type": "Any"}, {"lineNumber": 633, "col_offset": 16, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 635, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 635, "col_offset": 32, "nodeName": "pad", "type": "Any"}, {"lineNumber": 636, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 637, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 639, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 640, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 640, "col_offset": 35, "nodeName": "h", "type": "Any"}, {"lineNumber": 640, "col_offset": 46, "nodeName": "w", "type": "Any"}, {"lineNumber": 641, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 643, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 645, "col_offset": 13, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 646, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 648, "col_offset": 13, "nodeName": "SOFTMAX", "type": "Any"}, {"lineNumber": 648, "col_offset": 34, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 651, "col_offset": 15, "nodeName": "temperature", "type": "Any"}, {"lineNumber": 707, "col_offset": 21, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 722, "col_offset": 43, "nodeName": "input_layers", "type": "Any"}, {"lineNumber": 730, "col_offset": 24, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 730, "col_offset": 40, "nodeName": "index", "type": "Any"}, {"lineNumber": 834, "col_offset": 28, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 835, "col_offset": 16, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 347, "col_offset": 33, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 351, "col_offset": 39, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 630, "col_offset": 26, "nodeName": "w", "type": "Any"}, {"lineNumber": 630, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 630, "col_offset": 53, "nodeName": "pad", "type": "Any"}, {"lineNumber": 630, "col_offset": 72, "nodeName": "layer", "type": "Any"}, {"lineNumber": 632, "col_offset": 29, "nodeName": "layer", "type": "Any"}, {"lineNumber": 633, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 633, "col_offset": 51, "nodeName": "extra_pad", "type": "Any"}, {"lineNumber": 635, "col_offset": 32, "nodeName": "layer", "type": "Any"}, {"lineNumber": 637, "col_offset": 16, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 639, "col_offset": 16, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 639, "col_offset": 39, "nodeName": "stride", "type": "Any"}, {"lineNumber": 640, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 640, "col_offset": 35, "nodeName": "layer", "type": "Any"}, {"lineNumber": 640, "col_offset": 46, "nodeName": "layer", "type": "Any"}, {"lineNumber": 641, "col_offset": 16, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 641, "col_offset": 39, "nodeName": "h", "type": "Any"}, {"lineNumber": 643, "col_offset": 16, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 643, "col_offset": 39, "nodeName": "size", "type": "Any"}, {"lineNumber": 646, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 646, "col_offset": 30, "nodeName": "probability", "type": "Any"}, {"lineNumber": 648, "col_offset": 13, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 649, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 650, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 651, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 654, "col_offset": 13, "nodeName": "SHORTCUT", "type": "Any"}, {"lineNumber": 654, "col_offset": 35, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 655, "col_offset": 12, "nodeName": "add_layer", "type": "Any"}, {"lineNumber": 722, "col_offset": 43, "nodeName": "layer", "type": "Any"}, {"lineNumber": 722, "col_offset": 62, "nodeName": "j", "type": "int"}, {"lineNumber": 730, "col_offset": 40, "nodeName": "layer", "type": "Any"}, {"lineNumber": 630, "col_offset": 26, "nodeName": "layer", "type": "Any"}, {"lineNumber": 630, "col_offset": 36, "nodeName": "layer", "type": "Any"}, {"lineNumber": 630, "col_offset": 53, "nodeName": "layer", "type": "Any"}, {"lineNumber": 639, "col_offset": 39, "nodeName": "layer", "type": "Any"}, {"lineNumber": 641, "col_offset": 39, "nodeName": "layer", "type": "Any"}, {"lineNumber": 643, "col_offset": 39, "nodeName": "layer", "type": "Any"}, {"lineNumber": 646, "col_offset": 30, "nodeName": "layer", "type": "Any"}, {"lineNumber": 649, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 650, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 652, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 654, "col_offset": 13, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 655, "col_offset": 24, "nodeName": "layers", "type": "Any"}, {"lineNumber": 656, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 657, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 658, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 659, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 660, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 662, "col_offset": 13, "nodeName": "ROUTE", "type": "Any"}, {"lineNumber": 662, "col_offset": 32, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 652, "col_offset": 16, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 655, "col_offset": 24, "nodeName": "_net", "type": "Any"}, {"lineNumber": 655, "col_offset": 41, "nodeName": "index", "type": "Any"}, {"lineNumber": 656, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 656, "col_offset": 39, "nodeName": "activation", "type": "Any"}, {"lineNumber": 657, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 657, "col_offset": 40, "nodeName": "out_c", "type": "Any"}, {"lineNumber": 658, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 658, "col_offset": 37, "nodeName": "out_h", "type": "Any"}, {"lineNumber": 659, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 659, "col_offset": 44, "nodeName": "out_c", "type": "Any"}, {"lineNumber": 660, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 660, "col_offset": 41, "nodeName": "out_h", "type": "Any"}, {"lineNumber": 662, "col_offset": 13, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 665, "col_offset": 13, "nodeName": "COST", "type": "Any"}, {"lineNumber": 665, "col_offset": 31, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 652, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 652, "col_offset": 48, "nodeName": "temperature", "type": "Any"}, {"lineNumber": 655, "col_offset": 24, "nodeName": "self", "type": "GraphProto"}, {"lineNumber": 655, "col_offset": 41, "nodeName": "layer", "type": "Any"}, {"lineNumber": 656, "col_offset": 39, "nodeName": "layer", "type": "Any"}, {"lineNumber": 657, "col_offset": 40, "nodeName": "layer", "type": "Any"}, {"lineNumber": 658, "col_offset": 37, "nodeName": "layer", "type": "Any"}, {"lineNumber": 659, "col_offset": 44, "nodeName": "add_layer", "type": "Any"}, {"lineNumber": 660, "col_offset": 41, "nodeName": "add_layer", "type": "Any"}, {"lineNumber": 665, "col_offset": 13, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 668, "col_offset": 13, "nodeName": "REORG", "type": "Any"}, {"lineNumber": 668, "col_offset": 32, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 652, "col_offset": 48, "nodeName": "layer", "type": "Any"}, {"lineNumber": 668, "col_offset": 13, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 669, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 671, "col_offset": 13, "nodeName": "REGION", "type": "Any"}, {"lineNumber": 671, "col_offset": 33, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 669, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 669, "col_offset": 35, "nodeName": "stride", "type": "Any"}, {"lineNumber": 671, "col_offset": 13, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 672, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 673, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 674, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 675, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 676, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 677, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 679, "col_offset": 13, "nodeName": "YOLO", "type": "Any"}, {"lineNumber": 679, "col_offset": 31, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 669, "col_offset": 35, "nodeName": "layer", "type": "Any"}, {"lineNumber": 672, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 672, "col_offset": 30, "nodeName": "n", "type": "Any"}, {"lineNumber": 673, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 673, "col_offset": 36, "nodeName": "classes", "type": "Any"}, {"lineNumber": 674, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 674, "col_offset": 35, "nodeName": "coords", "type": "Any"}, {"lineNumber": 675, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 675, "col_offset": 39, "nodeName": "background", "type": "Any"}, {"lineNumber": 676, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 676, "col_offset": 36, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 677, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 679, "col_offset": 13, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 680, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 681, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 682, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 684, "col_offset": 13, "nodeName": "UPSAMPLE", "type": "Any"}, {"lineNumber": 684, "col_offset": 35, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 672, "col_offset": 30, "nodeName": "layer", "type": "Any"}, {"lineNumber": 673, "col_offset": 36, "nodeName": "layer", "type": "Any"}, {"lineNumber": 674, "col_offset": 35, "nodeName": "layer", "type": "Any"}, {"lineNumber": 675, "col_offset": 39, "nodeName": "layer", "type": "Any"}, {"lineNumber": 676, "col_offset": 36, "nodeName": "layer", "type": "Any"}, {"lineNumber": 677, "col_offset": 39, "nodeName": "c", "type": "Any"}, {"lineNumber": 677, "col_offset": 48, "nodeName": "h", "type": "Any"}, {"lineNumber": 677, "col_offset": 57, "nodeName": "w", "type": "Any"}, {"lineNumber": 680, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 680, "col_offset": 30, "nodeName": "n", "type": "Any"}, {"lineNumber": 681, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 681, "col_offset": 36, "nodeName": "classes", "type": "Any"}, {"lineNumber": 682, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 684, "col_offset": 13, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 685, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 687, "col_offset": 13, "nodeName": "L2NORM", "type": "Any"}, {"lineNumber": 687, "col_offset": 33, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 691, "col_offset": 12, "nodeName": "err", "type": "str"}, {"lineNumber": 677, "col_offset": 39, "nodeName": "layer", "type": "Any"}, {"lineNumber": 677, "col_offset": 48, "nodeName": "layer", "type": "Any"}, {"lineNumber": 677, "col_offset": 57, "nodeName": "layer", "type": "Any"}, {"lineNumber": 680, "col_offset": 30, "nodeName": "layer", "type": "Any"}, {"lineNumber": 681, "col_offset": 36, "nodeName": "layer", "type": "Any"}, {"lineNumber": 682, "col_offset": 39, "nodeName": "c", "type": "Any"}, {"lineNumber": 682, "col_offset": 48, "nodeName": "h", "type": "Any"}, {"lineNumber": 682, "col_offset": 57, "nodeName": "w", "type": "Any"}, {"lineNumber": 685, "col_offset": 12, "nodeName": "attr", "type": "Dict[str, Union[Any, bool, int, str, Tuple[int, Any, Any, Any]]]"}, {"lineNumber": 685, "col_offset": 34, "nodeName": "stride", "type": "Any"}, {"lineNumber": 687, "col_offset": 13, "nodeName": "LAYERTYPE", "type": "Type[LAYERTYPE]"}, {"lineNumber": 691, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 691, "col_offset": 76, "nodeName": "layer_type", "type": "LAYERTYPE"}, {"lineNumber": 692, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 692, "col_offset": 38, "nodeName": "err", "type": "str"}, {"lineNumber": 682, "col_offset": 39, "nodeName": "layer", "type": "Any"}, {"lineNumber": 682, "col_offset": 48, "nodeName": "layer", "type": "Any"}, {"lineNumber": 682, "col_offset": 57, "nodeName": "layer", "type": "Any"}, {"lineNumber": 685, "col_offset": 34, "nodeName": "layer", "type": "Any"}]