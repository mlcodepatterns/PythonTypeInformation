[{"lineNumber": 26, "col_offset": 0, "nodeName": "test_split_add_concat", "type": "Callable[[], Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "test_multiple_command_streams", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "test_output_order", "type": "Callable[[], Any]"}, {"lineNumber": 146, "col_offset": 0, "nodeName": "test_split_with_asym_concats", "type": "Callable[[], Any]"}, {"lineNumber": 189, "col_offset": 0, "nodeName": "test_output_tuple_propagation", "type": "Callable[[], Any]"}, {"lineNumber": 211, "col_offset": 0, "nodeName": "test_input_tuples", "type": "Callable[[], Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "get_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "get_model", "type": "Callable[[], Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "get_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "get_model", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "get_model", "type": "Callable[[], Any]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "get_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "npu", "type": "bool"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "npu", "type": "bool"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "npu", "type": "bool"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "trials", "type": "List[Tuple[Tuple[int, int, int, int], Tuple[int, int, int], int]]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "npu", "type": "bool"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "npu", "type": "bool"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "split_scale", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "split_zp", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "add_scale", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "add_zp", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "axis", "type": "int"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "split", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "conc", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "verify", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "SW_AND_HW", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "verify", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "e", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "i", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "verify", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "split", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "zeroi", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "zerof", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "splits", "type": "Tuple[int, int, int]"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "axis", "type": "int"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "npu", "type": "bool"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "split", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "verify", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "tup", "type": "List[Any]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "zeroi", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "zerof", "type": "Any"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "con", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "lib", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "verify", "type": "Any"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "ethosn_available", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "const", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "const", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "const", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "const", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "get_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "make_module", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "tei", "type": "Any"}, {"lineNumber": 83, "col_offset": 7, "nodeName": "ethosn_available", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "Available", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "max_pool2d", "type": "Any"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "abs", "type": "Any"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "out", "type": "Any"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "max_pool2d", "type": "Any"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "get_model", "type": "Callable[[], Any]"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "make_module", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "tei", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "ethosn_available", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "clip", "type": "Any"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "a", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "clip", "type": "Any"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "z", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "clip", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "z", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "clip", "type": "Any"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "z", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "clip", "type": "Any"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "z", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "clip", "type": "Any"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "z", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "clip", "type": "Any"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "z", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "clip", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "z", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "clip", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "z", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "get_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 140, "col_offset": 14, "nodeName": "make_module", "type": "Any"}, {"lineNumber": 140, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "tei", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "ethosn_available", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "const", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "const", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "verify", "type": "Any"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "ethosn_available", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "get_model", "type": "Callable[[], Any]"}, {"lineNumber": 205, "col_offset": 14, "nodeName": "make_module", "type": "Any"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "tei", "type": "Any"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "ethosn_available", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 217, "col_offset": 34, "nodeName": "shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "const", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "const", "type": "Any"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "tup", "type": "List[Any]"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "array", "type": "Any"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "array", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "get_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "npu", "type": "bool"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 246, "col_offset": 14, "nodeName": "build", "type": "Any"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "mod", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "tei", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "next", "type": "Callable"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "var_names", "type": "Iterator[str]"}, {"lineNumber": 33, "col_offset": 45, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 40, "col_offset": 59, "nodeName": "axis", "type": "int"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "split", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "split", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "split_scale", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "split_zp", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "split_scale", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "split_zp", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "add_scale", "type": "Any"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "add_zp", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "b", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "add_scale", "type": "Any"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "add_zp", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "axis", "type": "int"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "nd", "type": "Any"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "randint", "type": "Any"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 67, "col_offset": 50, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "tei", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "build_and_run", "type": "Any"}, {"lineNumber": 69, "col_offset": 41, "nodeName": "mod", "type": "Any"}, {"lineNumber": 69, "col_offset": 46, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "op", "type": "Any"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "nd", "type": "Any"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "randint", "type": "Any"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "tei", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "build_and_run", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "mod", "type": "Any"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "next", "type": "Callable"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "var_names", "type": "Iterator[str]"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 131, "col_offset": 28, "nodeName": "d", "type": "Any"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "c", "type": "Any"}, {"lineNumber": 131, "col_offset": 34, "nodeName": "e", "type": "Any"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "f", "type": "Any"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "i", "type": "Any"}, {"lineNumber": 131, "col_offset": 43, "nodeName": "b", "type": "Any"}, {"lineNumber": 131, "col_offset": 46, "nodeName": "h", "type": "Any"}, {"lineNumber": 131, "col_offset": 49, "nodeName": "g", "type": "Any"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "nd", "type": "Any"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "randint", "type": "Any"}, {"lineNumber": 139, "col_offset": 45, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 139, "col_offset": 50, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 140, "col_offset": 14, "nodeName": "tei", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "build_and_run", "type": "Any"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "mod", "type": "Any"}, {"lineNumber": 141, "col_offset": 46, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "op", "type": "Any"}, {"lineNumber": 152, "col_offset": 54, "nodeName": "splits", "type": "Tuple[int, int, int]"}, {"lineNumber": 152, "col_offset": 67, "nodeName": "axis", "type": "int"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "zerof", "type": "Any"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "zeroi", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "axis", "type": "int"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "zerof", "type": "Any"}, {"lineNumber": 168, "col_offset": 30, "nodeName": "zeroi", "type": "Any"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "axis", "type": "int"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "con2", "type": "Any"}, {"lineNumber": 171, "col_offset": 34, "nodeName": "con1", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "array", "type": "Any"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "get_model", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 182, "col_offset": 37, "nodeName": "splits", "type": "Tuple[int, int, int]"}, {"lineNumber": 182, "col_offset": 45, "nodeName": "axis", "type": "int"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "make_module", "type": "Any"}, {"lineNumber": 183, "col_offset": 34, "nodeName": "model", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "tei", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "op", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "nd", "type": "Any"}, {"lineNumber": 202, "col_offset": 32, "nodeName": "randint", "type": "Any"}, {"lineNumber": 205, "col_offset": 14, "nodeName": "tei", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 206, "col_offset": 23, "nodeName": "build_and_run", "type": "Any"}, {"lineNumber": 206, "col_offset": 41, "nodeName": "mod", "type": "Any"}, {"lineNumber": 206, "col_offset": 46, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "var", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 219, "col_offset": 23, "nodeName": "a", "type": "Any"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "op", "type": "Any"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "zerof", "type": "Any"}, {"lineNumber": 228, "col_offset": 30, "nodeName": "zeroi", "type": "Any"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "axis", "type": "int"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "nd", "type": "Any"}, {"lineNumber": 236, "col_offset": 28, "nodeName": "randint", "type": "Any"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "nd", "type": "Any"}, {"lineNumber": 237, "col_offset": 28, "nodeName": "randint", "type": "Any"}, {"lineNumber": 243, "col_offset": 18, "nodeName": "make_module", "type": "Any"}, {"lineNumber": 243, "col_offset": 34, "nodeName": "model", "type": "Any"}, {"lineNumber": 245, "col_offset": 18, "nodeName": "make_ethosn_partition", "type": "Any"}, {"lineNumber": 245, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 246, "col_offset": 14, "nodeName": "tei", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "run", "type": "Any"}, {"lineNumber": 247, "col_offset": 31, "nodeName": "lib", "type": "Any"}, {"lineNumber": 247, "col_offset": 36, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "split", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "add_scale", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "split_scale", "type": "Any"}, {"lineNumber": 53, "col_offset": 50, "nodeName": "split_scale", "type": "Any"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "add_zp", "type": "Any"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "split_zp", "type": "Any"}, {"lineNumber": 54, "col_offset": 49, "nodeName": "split_zp", "type": "Any"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "random", "type": "Any"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "tei", "type": "Any"}, {"lineNumber": 69, "col_offset": 65, "nodeName": "npu", "type": "bool"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "random", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "tei", "type": "Any"}, {"lineNumber": 107, "col_offset": 54, "nodeName": "npu", "type": "bool"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "random", "type": "Any"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "tei", "type": "Any"}, {"lineNumber": 141, "col_offset": 65, "nodeName": "npu", "type": "bool"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "split", "type": "Any"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "split", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "split", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "split", "type": "Any"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "nd", "type": "Any"}, {"lineNumber": 180, "col_offset": 36, "nodeName": "randint", "type": "Any"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "tei", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "build_and_run", "type": "Any"}, {"lineNumber": 184, "col_offset": 45, "nodeName": "mod", "type": "Any"}, {"lineNumber": 184, "col_offset": 50, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 198, "col_offset": 28, "nodeName": "split", "type": "Any"}, {"lineNumber": 198, "col_offset": 38, "nodeName": "split", "type": "Any"}, {"lineNumber": 198, "col_offset": 48, "nodeName": "split", "type": "Any"}, {"lineNumber": 198, "col_offset": 58, "nodeName": "split", "type": "Any"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 202, "col_offset": 32, "nodeName": "random", "type": "Any"}, {"lineNumber": 206, "col_offset": 23, "nodeName": "tei", "type": "Any"}, {"lineNumber": 206, "col_offset": 65, "nodeName": "npu", "type": "bool"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 218, "col_offset": 47, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "tup", "type": "List[Any]"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 236, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 237, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 243, "col_offset": 18, "nodeName": "tei", "type": "Any"}, {"lineNumber": 245, "col_offset": 18, "nodeName": "tei", "type": "Any"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "tei", "type": "Any"}, {"lineNumber": 247, "col_offset": 51, "nodeName": "npu", "type": "bool"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 157, "col_offset": 26, "nodeName": "zerof", "type": "Any"}, {"lineNumber": 158, "col_offset": 31, "nodeName": "zeroi", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "zerof", "type": "Any"}, {"lineNumber": 166, "col_offset": 31, "nodeName": "zeroi", "type": "Any"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 180, "col_offset": 36, "nodeName": "random", "type": "Any"}, {"lineNumber": 180, "col_offset": 72, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "tei", "type": "Any"}, {"lineNumber": 184, "col_offset": 69, "nodeName": "npu", "type": "bool"}, {"lineNumber": 202, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 218, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 218, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "zerof", "type": "Any"}, {"lineNumber": 225, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 225, "col_offset": 39, "nodeName": "shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 226, "col_offset": 31, "nodeName": "zeroi", "type": "Any"}, {"lineNumber": 226, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 226, "col_offset": 44, "nodeName": "shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 236, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 237, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 36, "nodeName": "np", "type": "module"}]