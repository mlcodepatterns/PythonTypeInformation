[{"lineNumber": 25, "col_offset": 0, "nodeName": "test_simplify_reshape", "type": "Callable[[], Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "test_simplify_full_elementwise", "type": "Callable[[], Any]"}, {"lineNumber": 127, "col_offset": 0, "nodeName": "test_simplify_conv_pad", "type": "Callable[[], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "symbolic", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "validate", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "z", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "zz", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "after", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "z", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "zz", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "after", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "before_left", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "before_right", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "convs", "type": "List[Any]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "orig_pad", "type": "List[int]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "ndim", "type": "int"}, {"lineNumber": 203, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "run_opt_pass", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "z", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "run_opt_pass", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "zz", "type": "Any"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "after", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "symbolic", "type": "Callable[[], Any]"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "run_opt_pass", "type": "Any"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "z", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "run_opt_pass", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "zz", "type": "Any"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "after", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "elem_ops", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "full_ops", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "elem_ops", "type": "List[Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "full_ops", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "elem_ops", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "dtype", "type": "str"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "conv1d", "type": "Any"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 128, "col_offset": 47, "nodeName": "conv3d", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "pad", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "zz", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "mod1", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "mod2", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "ex2", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "x_np", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "w_np", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "result1", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "result2", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "i_pad", "type": "List[int]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "validate", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 199, "col_offset": 13, "nodeName": "ndim", "type": "int"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "validate", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 200, "col_offset": 13, "nodeName": "ndim", "type": "int"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "test_simplify_reshape", "type": "Callable[[], Any]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "test_simplify_full_elementwise", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 29, "col_offset": 31, "nodeName": "w", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "reverse_reshape", "type": "Any"}, {"lineNumber": 32, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 33, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "w", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "size_var", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "w", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "reverse_reshape", "type": "Any"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 50, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "SimplifyExpr", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "SimplifyExpr", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "symbolic", "type": "Callable[[], Any]"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "add", "type": "Any"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 78, "col_offset": 47, "nodeName": "subtract", "type": "Any"}, {"lineNumber": 78, "col_offset": 63, "nodeName": "divide", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "value", "type": "int"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "value", "type": "int"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "full", "type": "Any"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "full_ops", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "value", "type": "int"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "value", "type": "int"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "full", "type": "Any"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "full_ops", "type": "List[Any]"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "value", "type": "int"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 128, "col_offset": 47, "nodeName": "nn", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "wshape", "type": "List[int]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "pad", "type": "Any"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "pad_width", "type": "List[List[int]]"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "pad_value", "type": "int"}, {"lineNumber": 142, "col_offset": 52, "nodeName": "pad_mode", "type": "str"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "conv", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "new_padding", "type": "List[int]"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "after", "type": "Any"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "conv", "type": "Any"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "run_opt_pass", "type": "Any"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "conv", "type": "Any"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "run_opt_pass", "type": "Any"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "after", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 169, "col_offset": 39, "nodeName": "zz", "type": "Any"}, {"lineNumber": 169, "col_offset": 43, "nodeName": "expected", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 171, "col_offset": 38, "nodeName": "conv", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 172, "col_offset": 38, "nodeName": "zz", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "ex1", "type": "Any"}, {"lineNumber": 176, "col_offset": 14, "nodeName": "create_executor", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "x_np", "type": "Any"}, {"lineNumber": 179, "col_offset": 39, "nodeName": "w_np", "type": "Any"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "x_np", "type": "Any"}, {"lineNumber": 180, "col_offset": 39, "nodeName": "w_np", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "ndim", "type": "int"}, {"lineNumber": 199, "col_offset": 65, "nodeName": "orig_pad", "type": "List[int]"}, {"lineNumber": 199, "col_offset": 76, "nodeName": "ndim", "type": "int"}, {"lineNumber": 200, "col_offset": 61, "nodeName": "orig_pad", "type": "List[int]"}, {"lineNumber": 200, "col_offset": 72, "nodeName": "ndim", "type": "int"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "w", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "w", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "te", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "w", "type": "Any"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "transform", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "transform", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "transform", "type": "Any"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "transform", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "elem_op", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "full", "type": "Any"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "elem_op", "type": "Any"}, {"lineNumber": 69, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "elem_op", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "full", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "elem_op", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "dtype", "type": "str"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "relay", "type": "Any"}, {"lineNumber": 78, "col_offset": 47, "nodeName": "relay", "type": "Any"}, {"lineNumber": 78, "col_offset": 63, "nodeName": "relay", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "z", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "zz", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "after", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "z", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "zz", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "after", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "z", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "zz", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "after", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "z", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "zz", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "after", "type": "Any"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "relay", "type": "Any"}, {"lineNumber": 128, "col_offset": 47, "nodeName": "relay", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "layout", "type": "str"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "wshape", "type": "List[int]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "wshape", "type": "List[int]"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "layout", "type": "str"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "pad", "type": "Any"}, {"lineNumber": 144, "col_offset": 40, "nodeName": "w", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "pad", "type": "Any"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "pad_mode", "type": "str"}, {"lineNumber": 150, "col_offset": 38, "nodeName": "pad_value", "type": "int"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "after", "type": "Any"}, {"lineNumber": 167, "col_offset": 32, "nodeName": "SimplifyExpr", "type": "Any"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "ir", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "PassContext", "type": "Any"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "create_executor", "type": "Any"}, {"lineNumber": 176, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 176, "col_offset": 46, "nodeName": "mod2", "type": "Any"}, {"lineNumber": 179, "col_offset": 18, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 182, "col_offset": 36, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 182, "col_offset": 55, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "channels_last", "type": "int"}, {"lineNumber": 199, "col_offset": 44, "nodeName": "ndim", "type": "int"}, {"lineNumber": 200, "col_offset": 44, "nodeName": "ndim", "type": "int"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "b", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "const", "type": "Any"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "value", "type": "int"}, {"lineNumber": 69, "col_offset": 46, "nodeName": "dtype", "type": "str"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "const", "type": "Any"}, {"lineNumber": 75, "col_offset": 42, "nodeName": "value", "type": "int"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "dtype", "type": "str"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "full_ops", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 81, "col_offset": 47, "nodeName": "dtype", "type": "str"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "full_ops", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "full_ops", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 84, "col_offset": 46, "nodeName": "dtype", "type": "str"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "full_ops", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 85, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "full_ops", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "full", "type": "Any"}, {"lineNumber": 87, "col_offset": 66, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "full_ops", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "full_like", "type": "Any"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "before_left", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "op", "type": "Any"}, {"lineNumber": 91, "col_offset": 39, "nodeName": "full", "type": "Any"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "run_opt_pass", "type": "Any"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "z", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "run_opt_pass", "type": "Any"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 94, "col_offset": 47, "nodeName": "zz", "type": "Any"}, {"lineNumber": 94, "col_offset": 51, "nodeName": "after", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "before_right", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "op", "type": "Any"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "full", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "run_opt_pass", "type": "Any"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "z", "type": "Any"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "run_opt_pass", "type": "Any"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "zz", "type": "Any"}, {"lineNumber": 99, "col_offset": 51, "nodeName": "after", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "full_ops", "type": "List[Any]"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 104, "col_offset": 51, "nodeName": "dtype", "type": "str"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "full_ops", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 106, "col_offset": 50, "nodeName": "dtype", "type": "str"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "full_ops", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "full", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "before_left", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "op", "type": "Any"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "full", "type": "Any"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "run_opt_pass", "type": "Any"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "z", "type": "Any"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "run_opt_pass", "type": "Any"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 114, "col_offset": 47, "nodeName": "zz", "type": "Any"}, {"lineNumber": 114, "col_offset": 51, "nodeName": "after", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "before_right", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "op", "type": "Any"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "full", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "run_opt_pass", "type": "Any"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "z", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "run_opt_pass", "type": "Any"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 119, "col_offset": 47, "nodeName": "zz", "type": "Any"}, {"lineNumber": 119, "col_offset": 51, "nodeName": "after", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "validate", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "value", "type": "int"}, {"lineNumber": 124, "col_offset": 39, "nodeName": "dtype", "type": "str"}, {"lineNumber": 132, "col_offset": 36, "nodeName": "ndim", "type": "int"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "ndim", "type": "int"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "layout", "type": "str"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "convs", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 51, "nodeName": "orig_padding", "type": "List[int]"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "convs", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "orig_padding", "type": "List[int]"}, {"lineNumber": 147, "col_offset": 58, "nodeName": "layout", "type": "str"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "new_padding", "type": "List[int]"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "new_padding", "type": "List[int]"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "orig_padding", "type": "List[int]"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "layout", "type": "str"}, {"lineNumber": 159, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 159, "col_offset": 43, "nodeName": "w", "type": "Any"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "w", "type": "Any"}, {"lineNumber": 167, "col_offset": 32, "nodeName": "transform", "type": "Any"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "transform", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "transform", "type": "Any"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 175, "col_offset": 50, "nodeName": "mod1", "type": "Any"}, {"lineNumber": 176, "col_offset": 56, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 179, "col_offset": 18, "nodeName": "ex1", "type": "Any"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "ex2", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 182, "col_offset": 36, "nodeName": "result1", "type": "Any"}, {"lineNumber": 182, "col_offset": 55, "nodeName": "result2", "type": "Any"}, {"lineNumber": 188, "col_offset": 23, "nodeName": "channels_last", "type": "int"}, {"lineNumber": 199, "col_offset": 35, "nodeName": "i_pad", "type": "List[int]"}, {"lineNumber": 200, "col_offset": 35, "nodeName": "i_pad", "type": "List[int]"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "relay", "type": "Any"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "const", "type": "Any"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "value", "type": "int"}, {"lineNumber": 87, "col_offset": 58, "nodeName": "dtype", "type": "str"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 88, "col_offset": 47, "nodeName": "const", "type": "Any"}, {"lineNumber": 88, "col_offset": 59, "nodeName": "value", "type": "int"}, {"lineNumber": 88, "col_offset": 66, "nodeName": "dtype", "type": "str"}, {"lineNumber": 92, "col_offset": 37, "nodeName": "SimplifyExpr", "type": "Any"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "after_left", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 93, "col_offset": 51, "nodeName": "op", "type": "Any"}, {"lineNumber": 93, "col_offset": 55, "nodeName": "value", "type": "int"}, {"lineNumber": 93, "col_offset": 63, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "ir", "type": "Any"}, {"lineNumber": 97, "col_offset": 37, "nodeName": "SimplifyExpr", "type": "Any"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "after_right", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 98, "col_offset": 52, "nodeName": "op", "type": "Any"}, {"lineNumber": 98, "col_offset": 56, "nodeName": "value", "type": "int"}, {"lineNumber": 98, "col_offset": 64, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "ir", "type": "Any"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 104, "col_offset": 40, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 106, "col_offset": 39, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "const", "type": "Any"}, {"lineNumber": 108, "col_offset": 51, "nodeName": "value", "type": "int"}, {"lineNumber": 108, "col_offset": 58, "nodeName": "dtype", "type": "str"}, {"lineNumber": 108, "col_offset": 66, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 112, "col_offset": 37, "nodeName": "SimplifyExpr", "type": "Any"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "before_left", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 113, "col_offset": 52, "nodeName": "op", "type": "Any"}, {"lineNumber": 113, "col_offset": 56, "nodeName": "full", "type": "Any"}, {"lineNumber": 113, "col_offset": 63, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "ir", "type": "Any"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "SimplifyExpr", "type": "Any"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "before_right", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 118, "col_offset": 53, "nodeName": "op", "type": "Any"}, {"lineNumber": 118, "col_offset": 57, "nodeName": "full", "type": "Any"}, {"lineNumber": 118, "col_offset": 64, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "ir", "type": "Any"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "pad_width", "type": "List[List[int]]"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 157, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "convs", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 54, "nodeName": "new_padding", "type": "List[int]"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "convs", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "new_padding", "type": "List[int]"}, {"lineNumber": 162, "col_offset": 59, "nodeName": "layout", "type": "str"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 175, "col_offset": 60, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 176, "col_offset": 56, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "wshape", "type": "List[int]"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "layout", "type": "str"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "layout", "type": "str"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "padding", "type": "List[List[int]]"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "layout", "type": "str"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "layout", "type": "str"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "padding", "type": "List[List[int]]"}, {"lineNumber": 197, "col_offset": 20, "nodeName": "validate", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "ndim", "type": "int"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "padding", "type": "List[List[int]]"}, {"lineNumber": 197, "col_offset": 76, "nodeName": "layout", "type": "str"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "relay", "type": "Any"}, {"lineNumber": 88, "col_offset": 47, "nodeName": "relay", "type": "Any"}, {"lineNumber": 92, "col_offset": 37, "nodeName": "transform", "type": "Any"}, {"lineNumber": 93, "col_offset": 63, "nodeName": "transform", "type": "Any"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 97, "col_offset": 37, "nodeName": "transform", "type": "Any"}, {"lineNumber": 98, "col_offset": 64, "nodeName": "transform", "type": "Any"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "relay", "type": "Any"}, {"lineNumber": 112, "col_offset": 37, "nodeName": "transform", "type": "Any"}, {"lineNumber": 113, "col_offset": 63, "nodeName": "transform", "type": "Any"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "transform", "type": "Any"}, {"lineNumber": 118, "col_offset": 64, "nodeName": "transform", "type": "Any"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "ndim", "type": "int"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "ndim", "type": "int"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "ndim", "type": "int"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "ndim", "type": "int"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "layout", "type": "str"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 175, "col_offset": 60, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 59, "nodeName": "orig_pad", "type": "List[int]"}, {"lineNumber": 197, "col_offset": 70, "nodeName": "ndim", "type": "int"}, {"lineNumber": 147, "col_offset": 92, "nodeName": "ndim", "type": "int"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "new_padding", "type": "List[int]"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "ndim", "type": "int"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "ndim", "type": "int"}, {"lineNumber": 190, "col_offset": 70, "nodeName": "layout", "type": "str"}, {"lineNumber": 194, "col_offset": 33, "nodeName": "layout", "type": "str"}, {"lineNumber": 194, "col_offset": 47, "nodeName": "layout", "type": "str"}, {"lineNumber": 195, "col_offset": 59, "nodeName": "ndim", "type": "int"}, {"lineNumber": 155, "col_offset": 43, "nodeName": "pad_width", "type": "List[List[int]]"}, {"lineNumber": 155, "col_offset": 56, "nodeName": "j", "type": "int"}, {"lineNumber": 162, "col_offset": 93, "nodeName": "ndim", "type": "int"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "layout", "type": "str"}, {"lineNumber": 190, "col_offset": 47, "nodeName": "layout", "type": "str"}, {"lineNumber": 191, "col_offset": 55, "nodeName": "ndim", "type": "int"}, {"lineNumber": 195, "col_offset": 50, "nodeName": "i_pad", "type": "List[int]"}, {"lineNumber": 155, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 191, "col_offset": 46, "nodeName": "i_pad", "type": "List[int]"}, {"lineNumber": 194, "col_offset": 58, "nodeName": "ndim", "type": "int"}, {"lineNumber": 190, "col_offset": 58, "nodeName": "ndim", "type": "int"}]