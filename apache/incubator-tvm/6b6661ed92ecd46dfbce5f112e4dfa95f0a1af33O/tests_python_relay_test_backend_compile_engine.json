[{"lineNumber": 29, "col_offset": 0, "nodeName": "_compute_conv2d_1", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "_schedule_conv2d_1", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "_compute_conv2d_2", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "_schedule_conv2d_2", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "_compute_conv2d_3", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "_schedule_conv2d_3", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "_tmp_strategy", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "_create_record", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "test_get_valid_implementations", "type": "Callable[[], Any]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "test_select_implementation", "type": "Callable[[], Any]"}, {"lineNumber": 150, "col_offset": 0, "nodeName": "test_compile_engine", "type": "Callable[[], Any]"}, {"lineNumber": 181, "col_offset": 0, "nodeName": "test_compile_placeholder_bypass", "type": "Callable[[], Any]"}, {"lineNumber": 192, "col_offset": 0, "nodeName": "test_compile_injective_with_tuple", "type": "Callable[[], Any]"}, {"lineNumber": 201, "col_offset": 0, "nodeName": "test_compile_tuple_dup", "type": "Callable[[], Any]"}, {"lineNumber": 209, "col_offset": 0, "nodeName": "test_compile_full", "type": "Callable[[], Any]"}, {"lineNumber": 223, "col_offset": 0, "nodeName": "test_compile_nhwc_pack", "type": "Callable[[], Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "get_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "ic", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "task", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "cost", "type": "float"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "cost", "type": "float"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "inp", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "target", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "target", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "engine", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "z1", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "z2", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "z3", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "target", "type": "str"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "engine", "type": "Any"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "z", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "log", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "weight", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "p2", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "tile", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "subtract", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "subtract", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 238, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "conv2d_nchw", "type": "Any"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "input", "type": "Any"}, {"lineNumber": 31, "col_offset": 38, "nodeName": "filter", "type": "Any"}, {"lineNumber": 31, "col_offset": 46, "nodeName": "strides", "type": "Any"}, {"lineNumber": 31, "col_offset": 55, "nodeName": "padding", "type": "Any"}, {"lineNumber": 31, "col_offset": 64, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 31, "col_offset": 74, "nodeName": "out_dtype", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "schedule_conv2d_nchw", "type": "Any"}, {"lineNumber": 35, "col_offset": 45, "nodeName": "outs", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "conv2d_nchw", "type": "Any"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "input", "type": "Any"}, {"lineNumber": 39, "col_offset": 38, "nodeName": "filter", "type": "Any"}, {"lineNumber": 39, "col_offset": 46, "nodeName": "strides", "type": "Any"}, {"lineNumber": 39, "col_offset": 55, "nodeName": "padding", "type": "Any"}, {"lineNumber": 39, "col_offset": 64, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 39, "col_offset": 74, "nodeName": "out_dtype", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "schedule_conv2d_nchw", "type": "Any"}, {"lineNumber": 43, "col_offset": 45, "nodeName": "outs", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "conv2d_nchw", "type": "Any"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "input", "type": "Any"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "filter", "type": "Any"}, {"lineNumber": 46, "col_offset": 46, "nodeName": "strides", "type": "Any"}, {"lineNumber": 46, "col_offset": 55, "nodeName": "padding", "type": "Any"}, {"lineNumber": 46, "col_offset": 64, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 46, "col_offset": 74, "nodeName": "out_dtype", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "schedule_conv2d_nchw", "type": "Any"}, {"lineNumber": 49, "col_offset": 45, "nodeName": "outs", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "OpStrategy", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "add_implementation", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "add_implementation", "type": "Any"}, {"lineNumber": 64, "col_offset": 9, "nodeName": "shape", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "create", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "task_name", "type": "str"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 48, "nodeName": "target", "type": "Any"}, {"lineNumber": 77, "col_offset": 10, "nodeName": "ConfigEntity", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 79, "col_offset": 10, "nodeName": "MeasureInput", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "MeasureResult", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "inp", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "result", "type": "Any"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "create", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "impls", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "impls", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "create", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "records", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "get", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 160, "col_offset": 9, "nodeName": "lower", "type": "Any"}, {"lineNumber": 161, "col_offset": 9, "nodeName": "lower", "type": "Any"}, {"lineNumber": 162, "col_offset": 9, "nodeName": "lower", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "same_as", "type": "Any"}, {"lineNumber": 163, "col_offset": 22, "nodeName": "z2", "type": "Any"}, {"lineNumber": 165, "col_offset": 7, "nodeName": "device_enabled", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "z4", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "dump", "type": "Any"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "get", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "Function", "type": "Any"}, {"lineNumber": 187, "col_offset": 60, "nodeName": "result", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 195, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "Function", "type": "Any"}, {"lineNumber": 197, "col_offset": 34, "nodeName": "output", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "build", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 203, "col_offset": 10, "nodeName": "log", "type": "Any"}, {"lineNumber": 203, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "Function", "type": "Any"}, {"lineNumber": 205, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "build", "type": "Any"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "full", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "Function", "type": "Any"}, {"lineNumber": 217, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 218, "col_offset": 10, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 218, "col_offset": 33, "nodeName": "f", "type": "Any"}, {"lineNumber": 219, "col_offset": 48, "nodeName": "mod", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "build", "type": "Any"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 226, "col_offset": 9, "nodeName": "var", "type": "Any"}, {"lineNumber": 227, "col_offset": 11, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 227, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 227, "col_offset": 33, "nodeName": "weight", "type": "Any"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 229, "col_offset": 63, "nodeName": "p2", "type": "Any"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "tile", "type": "Any"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "subtract", "type": "Any"}, {"lineNumber": 231, "col_offset": 30, "nodeName": "conv", "type": "Any"}, {"lineNumber": 231, "col_offset": 36, "nodeName": "tile", "type": "Any"}, {"lineNumber": 234, "col_offset": 10, "nodeName": "Function", "type": "Any"}, {"lineNumber": 234, "col_offset": 57, "nodeName": "func", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "build", "type": "Any"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "test_get_valid_implementations", "type": "Callable[[], Any]"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "test_select_implementation", "type": "Callable[[], Any]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "test_compile_engine", "type": "Callable[[], Any]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "test_compile_placeholder_bypass", "type": "Callable[[], Any]"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "test_compile_injective_with_tuple", "type": "Callable[[], Any]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "test_compile_tuple_dup", "type": "Callable[[], Any]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "test_compile_full", "type": "Callable[[], Any]"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "test_compile_nhwc_pack", "type": "Callable[[], Any]"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "nn", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "generic", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "nn", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "generic", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "nn", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "generic", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "wrap_compute_conv2d", "type": "Any"}, {"lineNumber": 55, "col_offset": 46, "nodeName": "_compute_conv2d_1", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "wrap_topi_schedule", "type": "Any"}, {"lineNumber": 56, "col_offset": 45, "nodeName": "_schedule_conv2d_1", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "wrap_compute_conv2d", "type": "Any"}, {"lineNumber": 60, "col_offset": 46, "nodeName": "_compute_conv2d_2", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "wrap_topi_schedule", "type": "Any"}, {"lineNumber": 61, "col_offset": 45, "nodeName": "_schedule_conv2d_2", "type": "Any"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "SpecializedCondition", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "add_implementation", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "dshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 74, "col_offset": 51, "nodeName": "wshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "task", "type": "Any"}, {"lineNumber": 77, "col_offset": 10, "nodeName": "autotvm", "type": "Any"}, {"lineNumber": 79, "col_offset": 10, "nodeName": "autotvm", "type": "Any"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "target", "type": "Any"}, {"lineNumber": 79, "col_offset": 51, "nodeName": "task", "type": "Any"}, {"lineNumber": 79, "col_offset": 64, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "autotvm", "type": "Any"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "target", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "weight", "type": "Any"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "run_infer_type", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "get_valid_implementations", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "checked_type", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "TempOpAttr", "type": "Any"}, {"lineNumber": 98, "col_offset": 49, "nodeName": "_tmp_strategy", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "_get_impls", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "_get_impls", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "target", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "weight", "type": "Any"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "run_infer_type", "type": "Any"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "select_implementation", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "checked_type", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "use_autotvm", "type": "bool"}, {"lineNumber": 120, "col_offset": 9, "nodeName": "TempOpAttr", "type": "Any"}, {"lineNumber": 120, "col_offset": 49, "nodeName": "_tmp_strategy", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "impl", "type": "Any"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "_", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "_select_impl", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "impl", "type": "Any"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "_", "type": "Any"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "_select_impl", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "impl", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "_", "type": "Any"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "_select_impl", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "impl", "type": "Any"}, {"lineNumber": 127, "col_offset": 14, "nodeName": "_", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "_select_impl", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "target", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "target", "type": "Any"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "compile_engine", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "z", "type": "Any"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 157, "col_offset": 37, "nodeName": "f", "type": "Any"}, {"lineNumber": 158, "col_offset": 42, "nodeName": "mod", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "mod", "type": "Any"}, {"lineNumber": 160, "col_offset": 9, "nodeName": "engine", "type": "Any"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "get_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 9, "nodeName": "engine", "type": "Any"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "get_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 9, "nodeName": "engine", "type": "Any"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "get_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "z1", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "same_as", "type": "Any"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "z1", "type": "Any"}, {"lineNumber": 165, "col_offset": 7, "nodeName": "testing", "type": "Any"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "lower", "type": "Any"}, {"lineNumber": 171, "col_offset": 14, "nodeName": "context", "type": "Any"}, {"lineNumber": 171, "col_offset": 26, "nodeName": "target", "type": "str"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "device_enabled", "type": "Any"}, {"lineNumber": 172, "col_offset": 38, "nodeName": "target", "type": "str"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "engine", "type": "Any"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "compile_engine", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 187, "col_offset": 51, "nodeName": "result", "type": "Any"}, {"lineNumber": 188, "col_offset": 9, "nodeName": "PassContext", "type": "Any"}, {"lineNumber": 189, "col_offset": 7, "nodeName": "graph", "type": "Any"}, {"lineNumber": 189, "col_offset": 14, "nodeName": "lib", "type": "Any"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "params", "type": "Any"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "build", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 196, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 197, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 197, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "relay", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 198, "col_offset": 39, "nodeName": "func", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 203, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "log", "type": "Any"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "log", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 205, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "relay", "type": "Any"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 206, "col_offset": 39, "nodeName": "f", "type": "Any"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "IntImm", "type": "Any"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "IntImm", "type": "Any"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "IntImm", "type": "Any"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "IntImm", "type": "Any"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "const", "type": "Any"}, {"lineNumber": 216, "col_offset": 55, "nodeName": "shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 218, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 219, "col_offset": 10, "nodeName": "CanonicalizeOps", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "relay", "type": "Any"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 226, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 227, "col_offset": 11, "nodeName": "nn", "type": "Any"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "const", "type": "Any"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 234, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 234, "col_offset": 50, "nodeName": "func", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "relay", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "topi", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "topi", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "topi", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "topi", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "topi", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "topi", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 64, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "te", "type": "Any"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "ic", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "wrap_compute_conv2d", "type": "Any"}, {"lineNumber": 67, "col_offset": 50, "nodeName": "_compute_conv2d_3", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "wrap_topi_schedule", "type": "Any"}, {"lineNumber": 68, "col_offset": 49, "nodeName": "_schedule_conv2d_3", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "te", "type": "Any"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "te", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "autotvm", "type": "Any"}, {"lineNumber": 80, "col_offset": 42, "nodeName": "cost", "type": "float"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "dshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 88, "col_offset": 43, "nodeName": "wshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "compile_engine", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "get", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "impls", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "impls", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "dshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "wshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "compile_engine", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "get", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "impl", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "impl", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "impl", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "impl", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "records", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "_create_record", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 132, "col_offset": 84, "nodeName": "target", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "records", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 133, "col_offset": 23, "nodeName": "_create_record", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 86, "nodeName": "target", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "records", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "_create_record", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 141, "col_offset": 84, "nodeName": "target", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "records", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "_create_record", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 142, "col_offset": 86, "nodeName": "target", "type": "Any"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "backend", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 153, "col_offset": 33, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "z3", "type": "Any"}, {"lineNumber": 165, "col_offset": 7, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "engine", "type": "Any"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "get_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "same_as", "type": "Any"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "z4", "type": "Any"}, {"lineNumber": 171, "col_offset": 14, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "testing", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "jit", "type": "Any"}, {"lineNumber": 173, "col_offset": 44, "nodeName": "target", "type": "str"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "empty", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 176, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "y", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "backend", "type": "Any"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 188, "col_offset": 9, "nodeName": "transform", "type": "Any"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 189, "col_offset": 40, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 189, "col_offset": 63, "nodeName": "func", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "tir", "type": "Any"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "tir", "type": "Any"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "tir", "type": "Any"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "tir", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 218, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 219, "col_offset": 10, "nodeName": "transform", "type": "Any"}, {"lineNumber": 227, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "relay", "type": "Any"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "op", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "op", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "op", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "op", "type": "Any"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "backend", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "dshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 94, "col_offset": 52, "nodeName": "wshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "backend", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "dshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 115, "col_offset": 52, "nodeName": "wshape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "apply_history_best", "type": "Any"}, {"lineNumber": 135, "col_offset": 44, "nodeName": "records", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "impl", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "_", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "_select_impl", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "impl", "type": "Any"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "_", "type": "Any"}, {"lineNumber": 138, "col_offset": 26, "nodeName": "_select_impl", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "apply_history_best", "type": "Any"}, {"lineNumber": 144, "col_offset": 44, "nodeName": "records", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "impl", "type": "Any"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "_", "type": "Any"}, {"lineNumber": 145, "col_offset": 26, "nodeName": "_select_impl", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "impl", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "_", "type": "Any"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "_select_impl", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "transform", "type": "Any"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "z3", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "engine", "type": "Any"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "get_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "nd", "type": "Any"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "astype", "type": "Any"}, {"lineNumber": 174, "col_offset": 64, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "nd", "type": "Any"}, {"lineNumber": 175, "col_offset": 40, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "op", "type": "Any"}, {"lineNumber": 186, "col_offset": 51, "nodeName": "y", "type": "Any"}, {"lineNumber": 186, "col_offset": 54, "nodeName": "z", "type": "Any"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 188, "col_offset": 9, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 189, "col_offset": 40, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 219, "col_offset": 10, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "te", "type": "Any"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "te", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "te", "type": "Any"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "te", "type": "Any"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "autotvm", "type": "Any"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "impl", "type": "Any"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "impl", "type": "Any"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "autotvm", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "impl", "type": "Any"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "impl", "type": "Any"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 189, "col_offset": 40, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 219, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "ones", "type": "Any"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "np", "type": "module"}]