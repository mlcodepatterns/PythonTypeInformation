[{"lineNumber": 42, "col_offset": 0, "nodeName": "convert_graph_layout", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "validate_targets", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "tokenize_target", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 0, "nodeName": "parse_target", "type": "Callable[[Any], Any]"}, {"lineNumber": 236, "col_offset": 0, "nodeName": "is_inline_json", "type": "Callable[[Any], Any]"}, {"lineNumber": 244, "col_offset": 0, "nodeName": "target_from_cli", "type": "Callable[[Any], Any]"}, {"lineNumber": 288, "col_offset": 0, "nodeName": "tracker_host_port_from_cli", "type": "Callable[[Any], Any]"}, {"lineNumber": 321, "col_offset": 0, "nodeName": "parse_shape_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "tvm_target_kinds", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "tvm_targets", "type": "List[Any]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "codegens", "type": "List[Dict[str, Any]]"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "parsed_tokens", "type": "List[Any]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "split_codegens", "type": "List[List[Any]]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "current_codegen", "type": "List[Any]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "token", "type": "Any"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "parsed_tokens", "type": "List[Any]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "codegen_def", "type": "List[Any]"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "split_codegens", "type": "List[List[Any]]"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "codegens", "type": "List[Dict[str, Any]]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "extra_targets", "type": "List[nothing]"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "rpc_hostname", "type": "None"}, {"lineNumber": 309, "col_offset": 19, "nodeName": "rpc_port", "type": "None"}, {"lineNumber": 311, "col_offset": 7, "nodeName": "rpc_tracker_str", "type": "Any"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "pattern", "type": "str"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "input_mappings", "type": "List[Any]"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "shape_dict", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 345, "col_offset": 19, "nodeName": "input_mappings", "type": "List[Any]"}, {"lineNumber": 355, "col_offset": 11, "nodeName": "shape_dict", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 66, "col_offset": 10, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "list_kinds", "type": "Any"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "tvm_target_kinds", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "tvm_target_names", "type": "str"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "t", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "verbose_tvm_targets", "type": "str"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "target_pattern", "type": "str"}, {"lineNumber": 139, "col_offset": 38, "nodeName": "target", "type": "Any"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "tokenize_target", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 36, "nodeName": "target", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 195, "col_offset": 26, "nodeName": "current_codegen", "type": "List[Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "raw_target", "type": "str"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "all_opts", "type": "Union[List[Any], List[nothing]]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "opts", "type": "Dict[Any, Any]"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "all_opts", "type": "Union[List[Any], List[nothing]]"}, {"lineNumber": 268, "col_offset": 7, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 268, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 285, "col_offset": 38, "nodeName": "extra_targets", "type": "List[nothing]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "parsed_url", "type": "urllib.parse.ParseResult"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "rpc_hostname", "type": "Any"}, {"lineNumber": 313, "col_offset": 23, "nodeName": "hostname", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "rpc_port", "type": "Any"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "rpc_hostname", "type": "Any"}, {"lineNumber": 318, "col_offset": 25, "nodeName": "rpc_port", "type": "Any"}, {"lineNumber": 338, "col_offset": 21, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 338, "col_offset": 32, "nodeName": "pattern", "type": "str"}, {"lineNumber": 338, "col_offset": 41, "nodeName": "inputs_string", "type": "Any"}, {"lineNumber": 339, "col_offset": 11, "nodeName": "input_mappings", "type": "List[Any]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 353, "col_offset": 27, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "desired_layout", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "desired_layout", "type": "Any"}, {"lineNumber": 66, "col_offset": 10, "nodeName": "transform", "type": "Any"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "PassContext", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "Target", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "t", "type": "Any"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "parse_targets", "type": "Any"}, {"lineNumber": 89, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "TVMCException", "type": "Type[TVMCException]"}, {"lineNumber": 92, "col_offset": 7, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "tvm_target_kinds", "type": "Any"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "TVMCException", "type": "Type[TVMCException]"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "tvm_targets", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "tvm_targets", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "TVMCException", "type": "Type[TVMCException]"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "split_codegens", "type": "List[List[Any]]"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "token", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "current_codegen", "type": "List[Any]"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "codegen_def", "type": "List[Any]"}, {"lineNumber": 214, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 214, "col_offset": 30, "nodeName": "codegen_def", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "opt_value", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 238, "col_offset": 19, "nodeName": "target", "type": "Any"}, {"lineNumber": 268, "col_offset": 7, "nodeName": "path", "type": "module"}, {"lineNumber": 269, "col_offset": 29, "nodeName": "target_file", "type": "TextIO"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "target", "type": "str"}, {"lineNumber": 272, "col_offset": 9, "nodeName": "is_inline_json", "type": "Callable[[Any], Any]"}, {"lineNumber": 272, "col_offset": 24, "nodeName": "target", "type": "Any"}, {"lineNumber": 285, "col_offset": 11, "nodeName": "Target", "type": "Any"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "target", "type": "Union[str, Any]"}, {"lineNumber": 312, "col_offset": 21, "nodeName": "urlparse", "type": "Callable"}, {"lineNumber": 313, "col_offset": 23, "nodeName": "parsed_url", "type": "urllib.parse.ParseResult"}, {"lineNumber": 314, "col_offset": 19, "nodeName": "port", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 315, "col_offset": 48, "nodeName": "rpc_hostname", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 316, "col_offset": 44, "nodeName": "rpc_port", "type": "Any"}, {"lineNumber": 338, "col_offset": 21, "nodeName": "re", "type": "module"}, {"lineNumber": 340, "col_offset": 14, "nodeName": "ArgumentTypeError", "type": "Type[argparse.ArgumentTypeError]"}, {"lineNumber": 347, "col_offset": 18, "nodeName": "replace", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 349, "col_offset": 14, "nodeName": "shape_string", "type": "Any"}, {"lineNumber": 349, "col_offset": 29, "nodeName": "split", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "shape_dict", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "RemoveUnusedFunctions", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "ConvertLayout", "type": "Any"}, {"lineNumber": 69, "col_offset": 42, "nodeName": "desired_layouts", "type": "Dict[str, List[Union[Any, str]]]"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "transform", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "seq", "type": "Any"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "mod", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "target", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "t", "type": "Any"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "tvm_target_kinds", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 202, "col_offset": 34, "nodeName": "current_codegen", "type": "List[Any]"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 206, "col_offset": 35, "nodeName": "token", "type": "Any"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "codegen_def", "type": "List[Any]"}, {"lineNumber": 226, "col_offset": 19, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "opts", "type": "Dict[Any, Any]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "codegens", "type": "List[Dict[str, Any]]"}, {"lineNumber": 231, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 231, "col_offset": 47, "nodeName": "opts", "type": "Dict[Any, Any]"}, {"lineNumber": 231, "col_offset": 60, "nodeName": "raw_target", "type": "str"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "json", "type": "module"}, {"lineNumber": 268, "col_offset": 7, "nodeName": "os", "type": "module"}, {"lineNumber": 269, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 269, "col_offset": 18, "nodeName": "target", "type": "Any"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 55, "nodeName": "target", "type": "Any"}, {"lineNumber": 271, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 273, "col_offset": 56, "nodeName": "target", "type": "Any"}, {"lineNumber": 285, "col_offset": 11, "nodeName": "target", "type": "Any"}, {"lineNumber": 312, "col_offset": 39, "nodeName": "rpc_tracker_str", "type": "Any"}, {"lineNumber": 314, "col_offset": 19, "nodeName": "parsed_url", "type": "urllib.parse.ParseResult"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 340, "col_offset": 14, "nodeName": "argparse", "type": "module"}, {"lineNumber": 347, "col_offset": 18, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 349, "col_offset": 29, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 351, "col_offset": 59, "nodeName": "x", "type": "Any"}, {"lineNumber": 353, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "transform", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "transform", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 95, "col_offset": 66, "nodeName": "tvm_target_names", "type": "str"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "split_codegens", "type": "List[List[Any]]"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "current_codegen", "type": "List[Any]"}, {"lineNumber": 215, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 215, "col_offset": 42, "nodeName": "codegen_def", "type": "List[Any]"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "opt_name", "type": "Any"}, {"lineNumber": 222, "col_offset": 20, "nodeName": "opt_value", "type": "bool"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "opt", "type": "Any"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "opt_name", "type": "Any"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 271, "col_offset": 29, "nodeName": "readlines", "type": "Callable"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 285, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 351, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 351, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 351, "col_offset": 43, "nodeName": "Any", "type": "Any"}, {"lineNumber": 351, "col_offset": 64, "nodeName": "split", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "opt", "type": "Any"}, {"lineNumber": 221, "col_offset": 31, "nodeName": "opt", "type": "Any"}, {"lineNumber": 224, "col_offset": 62, "nodeName": "opt", "type": "Any"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "opt_name", "type": "Any"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "opt_value", "type": "Any"}, {"lineNumber": 225, "col_offset": 42, "nodeName": "split", "type": "Any"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 271, "col_offset": 29, "nodeName": "target_file", "type": "TextIO"}, {"lineNumber": 351, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 351, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 351, "col_offset": 43, "nodeName": "relay", "type": "Any"}, {"lineNumber": 224, "col_offset": 37, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 224, "col_offset": 26, "nodeName": "opt", "type": "Any"}, {"lineNumber": 225, "col_offset": 42, "nodeName": "opt", "type": "Any"}, {"lineNumber": 351, "col_offset": 64, "nodeName": "strip", "type": "Any"}, {"lineNumber": 224, "col_offset": 37, "nodeName": "opt", "type": "Any"}, {"lineNumber": 227, "col_offset": 56, "nodeName": "opt", "type": "Any"}, {"lineNumber": 351, "col_offset": 64, "nodeName": "shape_string", "type": "Any"}]