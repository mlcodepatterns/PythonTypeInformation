[{"lineNumber": 49, "col_offset": 0, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "test_let", "type": "Callable[[], Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "test_used_let", "type": "Callable[[], Any]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "test_inline", "type": "Callable[[], Any]"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "test_chain_unused_let", "type": "Callable[[], Any]"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "use_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "test_recursion", "type": "Callable[[], Any]"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "test_recursion_dead", "type": "Callable[[], Any]"}, {"lineNumber": 117, "col_offset": 0, "nodeName": "test_op_let", "type": "Callable[[], Any]"}, {"lineNumber": 123, "col_offset": 0, "nodeName": "test_tuple_get_item", "type": "Callable[[], Any]"}, {"lineNumber": 135, "col_offset": 0, "nodeName": "test_complexity", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "e", "type": "env"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "env", "type": "Type[env]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "entry", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "orig", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "orig", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "orig", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "orig", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "orig", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "orig", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "orig", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "orig", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "n", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "value", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "orig", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "dced", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "orig", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "dced_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "dced", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "tt", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "g", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "dced", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "orig", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "dced", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "g", "type": "Any"}, {"lineNumber": 141, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "tt", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "int32", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "one", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "two", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "three", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "e", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "opt_pass", "type": "Any"}, {"lineNumber": 50, "col_offset": 32, "nodeName": "Pass", "type": "Any"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "opt_pass", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "mod", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "entry", "type": "Any"}, {"lineNumber": 54, "col_offset": 58, "nodeName": "body", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "Let", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "z", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "orig", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "Let", "type": "Any"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "c", "type": "Any"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "one", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "orig", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "Let", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "c", "type": "Any"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "one", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "Let", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "orig", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "assert_structural_equal", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "Let", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "orig", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "int32", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "Var", "type": "Any"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "float32", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "If", "type": "Any"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 89, "col_offset": 38, "nodeName": "funcbody", "type": "Any"}, {"lineNumber": 89, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "Let", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "f", "type": "Any"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "use_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "orig", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "orig", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "assert_structural_equal", "type": "Any"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "dced", "type": "Any"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "orig", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "a", "type": "Any"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "one", "type": "Any"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "three", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "dced", "type": "Any"}, {"lineNumber": 114, "col_offset": 41, "nodeName": "three", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 120, "col_offset": 35, "nodeName": "dced", "type": "Any"}, {"lineNumber": 124, "col_offset": 9, "nodeName": "TupleType", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "tt", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "Var", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "TupleGetItem", "type": "Any"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "t", "type": "Any"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "g", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "TupleGetItem", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "orig", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "get_net", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "g", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "test_let", "type": "Callable[[], Any]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "test_used_let", "type": "Callable[[], Any]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "test_inline", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "test_chain_unused_let", "type": "Callable[[], Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "test_recursion", "type": "Callable[[], Any]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "test_recursion_dead", "type": "Callable[[], Any]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "test_op_let", "type": "Callable[[], Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "test_tuple_get_item", "type": "Callable[[], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "test_complexity", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "env"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "convert", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "env"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "env"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "env"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "env"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "const", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "env"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "const", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "env"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "const", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "env"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "Var", "type": "Any"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "env"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "Var", "type": "Any"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "env"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "Var", "type": "Any"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "env"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "Var", "type": "Any"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "env"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "Var", "type": "Any"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "env"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "Var", "type": "Any"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "int32", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "env"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "Var", "type": "Any"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "int32", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "env"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "Var", "type": "Any"}, {"lineNumber": 43, "col_offset": 32, "nodeName": "int32", "type": "Any"}, {"lineNumber": 50, "col_offset": 32, "nodeName": "transform", "type": "Any"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "expr", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "Function", "type": "Any"}, {"lineNumber": 54, "col_offset": 58, "nodeName": "entry", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "e", "type": "env"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "e", "type": "env"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "e", "type": "env"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "DeadCodeElimination", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "Function", "type": "Any"}, {"lineNumber": 60, "col_offset": 61, "nodeName": "orig", "type": "Any"}, {"lineNumber": 60, "col_offset": 68, "nodeName": "Function", "type": "Any"}, {"lineNumber": 60, "col_offset": 84, "nodeName": "z", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "e", "type": "env"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "e", "type": "env"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "c", "type": "Any"}, {"lineNumber": 64, "col_offset": 39, "nodeName": "c", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "DeadCodeElimination", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "e", "type": "env"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "e", "type": "env"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "c", "type": "Any"}, {"lineNumber": 66, "col_offset": 43, "nodeName": "c", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "Function", "type": "Any"}, {"lineNumber": 67, "col_offset": 48, "nodeName": "orig", "type": "Any"}, {"lineNumber": 67, "col_offset": 55, "nodeName": "Function", "type": "Any"}, {"lineNumber": 67, "col_offset": 68, "nodeName": "expected", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "e", "type": "env"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "e", "type": "env"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "Let", "type": "Any"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "c", "type": "Any"}, {"lineNumber": 70, "col_offset": 46, "nodeName": "d", "type": "Any"}, {"lineNumber": 70, "col_offset": 51, "nodeName": "c", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "DeadCodeElimination", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "ir", "type": "Any"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "Function", "type": "Any"}, {"lineNumber": 72, "col_offset": 61, "nodeName": "orig", "type": "Any"}, {"lineNumber": 72, "col_offset": 68, "nodeName": "Function", "type": "Any"}, {"lineNumber": 72, "col_offset": 84, "nodeName": "d", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "e", "type": "env"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "e", "type": "env"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "Let", "type": "Any"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "c", "type": "Any"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "d", "type": "Any"}, {"lineNumber": 76, "col_offset": 51, "nodeName": "e", "type": "Any"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "DeadCodeElimination", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "Function", "type": "Any"}, {"lineNumber": 78, "col_offset": 61, "nodeName": "orig", "type": "Any"}, {"lineNumber": 78, "col_offset": 68, "nodeName": "Function", "type": "Any"}, {"lineNumber": 78, "col_offset": 84, "nodeName": "e", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "e", "type": "env"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "e", "type": "env"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "equal", "type": "Any"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "n", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "Call", "type": "Any"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "f", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "n", "type": "Any"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 89, "col_offset": 48, "nodeName": "e", "type": "env"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "f", "type": "Any"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "DeadCodeElimination", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "ir", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "e", "type": "env"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "e", "type": "env"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "e", "type": "env"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "use_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "dced_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "DeadCodeElimination", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 114, "col_offset": 41, "nodeName": "e", "type": "env"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "add", "type": "Any"}, {"lineNumber": 118, "col_offset": 60, "nodeName": "two", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "DeadCodeElimination", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "add", "type": "Any"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "three", "type": "Any"}, {"lineNumber": 120, "col_offset": 54, "nodeName": "two", "type": "Any"}, {"lineNumber": 124, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "DeadCodeElimination", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "Function", "type": "Any"}, {"lineNumber": 129, "col_offset": 61, "nodeName": "dced", "type": "Any"}, {"lineNumber": 129, "col_offset": 68, "nodeName": "Function", "type": "Any"}, {"lineNumber": 129, "col_offset": 91, "nodeName": "g", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "Let", "type": "Any"}, {"lineNumber": 130, "col_offset": 40, "nodeName": "a", "type": "Any"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "one", "type": "Any"}, {"lineNumber": 130, "col_offset": 50, "nodeName": "t", "type": "Any"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "DeadCodeElimination", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "Function", "type": "Any"}, {"lineNumber": 132, "col_offset": 61, "nodeName": "dced", "type": "Any"}, {"lineNumber": 132, "col_offset": 68, "nodeName": "Function", "type": "Any"}, {"lineNumber": 132, "col_offset": 91, "nodeName": "g", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "inception_v3", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "DeadCodeElimination", "type": "Any"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "self", "type": "env"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "self", "type": "env"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "self", "type": "env"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "self", "type": "env"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "self", "type": "env"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "self", "type": "env"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "self", "type": "env"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "self", "type": "env"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 43, "col_offset": 32, "nodeName": "self", "type": "env"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "relay", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 60, "col_offset": 54, "nodeName": "orig", "type": "Any"}, {"lineNumber": 60, "col_offset": 78, "nodeName": "z", "type": "Any"}, {"lineNumber": 60, "col_offset": 84, "nodeName": "e", "type": "env"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "e", "type": "env"}, {"lineNumber": 64, "col_offset": 39, "nodeName": "e", "type": "env"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "e", "type": "env"}, {"lineNumber": 66, "col_offset": 43, "nodeName": "e", "type": "env"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "relay", "type": "Any"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "e", "type": "env"}, {"lineNumber": 70, "col_offset": 46, "nodeName": "e", "type": "env"}, {"lineNumber": 70, "col_offset": 51, "nodeName": "e", "type": "env"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 72, "col_offset": 54, "nodeName": "orig", "type": "Any"}, {"lineNumber": 72, "col_offset": 78, "nodeName": "d", "type": "Any"}, {"lineNumber": 72, "col_offset": 84, "nodeName": "e", "type": "env"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "relay", "type": "Any"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "e", "type": "env"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "e", "type": "env"}, {"lineNumber": 76, "col_offset": 51, "nodeName": "e", "type": "env"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 78, "col_offset": 44, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 78, "col_offset": 54, "nodeName": "orig", "type": "Any"}, {"lineNumber": 78, "col_offset": 78, "nodeName": "e", "type": "Any"}, {"lineNumber": 78, "col_offset": 84, "nodeName": "e", "type": "env"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "const", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 105, "col_offset": 27, "nodeName": "Call", "type": "Any"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "f", "type": "Any"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "transform", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "Let", "type": "Any"}, {"lineNumber": 118, "col_offset": 38, "nodeName": "a", "type": "Any"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "one", "type": "Any"}, {"lineNumber": 118, "col_offset": 50, "nodeName": "three", "type": "Any"}, {"lineNumber": 118, "col_offset": 60, "nodeName": "e", "type": "env"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "transform", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "e", "type": "env"}, {"lineNumber": 120, "col_offset": 54, "nodeName": "e", "type": "env"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "e", "type": "env"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "e", "type": "env"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "transform", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 129, "col_offset": 44, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 129, "col_offset": 54, "nodeName": "dced", "type": "Any"}, {"lineNumber": 129, "col_offset": 77, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 129, "col_offset": 87, "nodeName": "g", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "relay", "type": "Any"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "e", "type": "env"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "transform", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 132, "col_offset": 44, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 132, "col_offset": 54, "nodeName": "dced", "type": "Any"}, {"lineNumber": 132, "col_offset": 77, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 132, "col_offset": 87, "nodeName": "g", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "transform", "type": "Any"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 60, "col_offset": 78, "nodeName": "e", "type": "env"}, {"lineNumber": 72, "col_offset": 78, "nodeName": "e", "type": "env"}, {"lineNumber": 78, "col_offset": 78, "nodeName": "e", "type": "env"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "relay", "type": "Any"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "subtract", "type": "Any"}, {"lineNumber": 87, "col_offset": 48, "nodeName": "n", "type": "Any"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "log", "type": "Any"}, {"lineNumber": 88, "col_offset": 43, "nodeName": "data", "type": "Any"}, {"lineNumber": 105, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 118, "col_offset": 38, "nodeName": "e", "type": "env"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "e", "type": "env"}, {"lineNumber": 118, "col_offset": 50, "nodeName": "e", "type": "env"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "const", "type": "Any"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "const", "type": "Any"}, {"lineNumber": 105, "col_offset": 58, "nodeName": "const", "type": "Any"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "relay", "type": "Any"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "relay", "type": "Any"}, {"lineNumber": 105, "col_offset": 58, "nodeName": "relay", "type": "Any"}]