[{"lineNumber": 28, "col_offset": 0, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "test_legalize", "type": "Callable[[], Any]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "test_legalize_none", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "test_legalize_multiple_ops", "type": "Callable[[], Any]"}, {"lineNumber": 140, "col_offset": 0, "nodeName": "test_legalize_multi_input", "type": "Callable[[], Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "legalize_conv2d", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "legalize_conv2d", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "legalize_relu", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "legalize_concatenate", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "passes", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "seq", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "entry", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "called", "type": "List[bool]"}, {"lineNumber": 176, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "passes", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "passes", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "entry", "type": "Any"}, {"lineNumber": 35, "col_offset": 58, "nodeName": "body", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "a", "type": "Any"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "b", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "a", "type": "Any"}, {"lineNumber": 92, "col_offset": 38, "nodeName": "b", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "called", "type": "List[bool]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 137, "col_offset": 35, "nodeName": "a", "type": "Any"}, {"lineNumber": 137, "col_offset": 38, "nodeName": "b", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "func", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "func", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "a", "type": "Any"}, {"lineNumber": 173, "col_offset": 38, "nodeName": "b", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "test_legalize", "type": "Callable[[], Any]"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "test_legalize_none", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "passes", "type": "Any"}, {"lineNumber": 29, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 29, "col_offset": 54, "nodeName": "passes", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "transform", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "PassContext", "type": "Any"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "seq", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "mod", "type": "Any"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "expr", "type": "Any"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "Function", "type": "Any"}, {"lineNumber": 35, "col_offset": 58, "nodeName": "entry", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "weight", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "y", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "weight", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "weight", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "weight", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 63, "col_offset": 40, "nodeName": "y", "type": "Any"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "TempOpAttr", "type": "Any"}, {"lineNumber": 66, "col_offset": 49, "nodeName": "legalize_conv2d", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 71, "col_offset": 58, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 71, "col_offset": 62, "nodeName": "a", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "global_max_pool2d", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "called", "type": "List[bool]"}, {"lineNumber": 87, "col_offset": 9, "nodeName": "TempOpAttr", "type": "Any"}, {"lineNumber": 87, "col_offset": 60, "nodeName": "legalize_conv2d", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 92, "col_offset": 58, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 92, "col_offset": 62, "nodeName": "a", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "weight", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "weight", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "weight", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 111, "col_offset": 37, "nodeName": "weight", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "add", "type": "Any"}, {"lineNumber": 115, "col_offset": 55, "nodeName": "data", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "relu", "type": "Any"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "add", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 126, "col_offset": 53, "nodeName": "y", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "y", "type": "Any"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "TempOpAttr", "type": "Any"}, {"lineNumber": 131, "col_offset": 49, "nodeName": "legalize_conv2d", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 137, "col_offset": 58, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 137, "col_offset": 62, "nodeName": "a", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 147, "col_offset": 41, "nodeName": "func", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "TupleType", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 156, "col_offset": 36, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "func", "type": "Any"}, {"lineNumber": 168, "col_offset": 9, "nodeName": "TempOpAttr", "type": "Any"}, {"lineNumber": 168, "col_offset": 51, "nodeName": "legalize_concatenate", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 173, "col_offset": 58, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 173, "col_offset": 62, "nodeName": "a", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "transform", "type": "Any"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "relay", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "weight", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "const", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 53, "col_offset": 47, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 58, "col_offset": 46, "nodeName": "weight", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "weight", "type": "Any"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 105, "col_offset": 31, "nodeName": "weight", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 110, "col_offset": 40, "nodeName": "const", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 111, "col_offset": 47, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "const", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 122, "col_offset": 46, "nodeName": "weight", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "const", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "weight", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "TempOpAttr", "type": "Any"}, {"lineNumber": 132, "col_offset": 51, "nodeName": "legalize_relu", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "before", "type": "Callable[[], Any]"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "run_opt_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 146, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 146, "col_offset": 40, "nodeName": "z", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 147, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "z", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "expr", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "types", "type": "Any"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "types", "type": "Any"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "ty", "type": "Any"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "types", "type": "Any"}, {"lineNumber": 156, "col_offset": 36, "nodeName": "ty", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 163, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 163, "col_offset": 40, "nodeName": "z", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 164, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 164, "col_offset": 37, "nodeName": "z", "type": "Any"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 171, "col_offset": 37, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "relay", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "relay", "type": "Any"}, {"lineNumber": 58, "col_offset": 54, "nodeName": "const", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "transform", "type": "Any"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "transform", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "transform", "type": "Any"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "transform", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 110, "col_offset": 40, "nodeName": "relay", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "relay", "type": "Any"}, {"lineNumber": 122, "col_offset": 54, "nodeName": "const", "type": "Any"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "expected", "type": "Callable[[], Any]"}, {"lineNumber": 135, "col_offset": 41, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "relay", "type": "Any"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "relay", "type": "Any"}, {"lineNumber": 156, "col_offset": 36, "nodeName": "relay", "type": "Any"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "transform", "type": "Any"}, {"lineNumber": 171, "col_offset": 37, "nodeName": "transform", "type": "Any"}, {"lineNumber": 58, "col_offset": 54, "nodeName": "relay", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 122, "col_offset": 54, "nodeName": "relay", "type": "Any"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "transform", "type": "Any"}, {"lineNumber": 135, "col_offset": 41, "nodeName": "transform", "type": "Any"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 156, "col_offset": 36, "nodeName": "tvm", "type": "Any"}]