[{"lineNumber": 91, "col_offset": 0, "nodeName": "InferType", "type": "Callable[[], Any]"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "FoldScaleAxis", "type": "Callable[[], Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "BackwardFoldScaleAxis", "type": "Callable[[], Any]"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "RemoveUnusedFunctions", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 0, "nodeName": "ForwardFoldScaleAxis", "type": "Callable[[], Any]"}, {"lineNumber": 170, "col_offset": 0, "nodeName": "SimplifyInference", "type": "Callable[[], Any]"}, {"lineNumber": 182, "col_offset": 0, "nodeName": "FastMath", "type": "Callable[[], Any]"}, {"lineNumber": 193, "col_offset": 0, "nodeName": "CanonicalizeOps", "type": "Callable[[], Any]"}, {"lineNumber": 206, "col_offset": 0, "nodeName": "DeadCodeElimination", "type": "Callable[..., Any]"}, {"lineNumber": 221, "col_offset": 0, "nodeName": "LazyGradientInit", "type": "Callable[[], Any]"}, {"lineNumber": 235, "col_offset": 0, "nodeName": "FoldConstant", "type": "Callable[[], Any]"}, {"lineNumber": 246, "col_offset": 0, "nodeName": "FuseOps", "type": "Callable[..., Any]"}, {"lineNumber": 263, "col_offset": 0, "nodeName": "CombineParallelConv2D", "type": "Callable[..., Any]"}, {"lineNumber": 280, "col_offset": 0, "nodeName": "CombineParallelDense", "type": "Callable[..., Any]"}, {"lineNumber": 323, "col_offset": 0, "nodeName": "CombineParallelBatchMatmul", "type": "Callable[..., Any]"}, {"lineNumber": 357, "col_offset": 0, "nodeName": "BatchingOps", "type": "Callable[[], Any]"}, {"lineNumber": 372, "col_offset": 0, "nodeName": "AlterOpLayout", "type": "Callable[[], Any]"}, {"lineNumber": 386, "col_offset": 0, "nodeName": "ConvertLayout", "type": "Callable[[Any], Any]"}, {"lineNumber": 417, "col_offset": 0, "nodeName": "Legalize", "type": "Callable[..., Any]"}, {"lineNumber": 437, "col_offset": 0, "nodeName": "MergeComposite", "type": "Callable[[Any], Any]"}, {"lineNumber": 473, "col_offset": 0, "nodeName": "MergeCompilerRegions", "type": "Callable[[], Any]"}, {"lineNumber": 484, "col_offset": 0, "nodeName": "RewriteAnnotatedOps", "type": "Callable[[Any], Any]"}, {"lineNumber": 505, "col_offset": 0, "nodeName": "ToANormalForm", "type": "Callable[[], Any]"}, {"lineNumber": 518, "col_offset": 0, "nodeName": "ToANormalFormExpr", "type": "Callable[[Any], Any]"}, {"lineNumber": 533, "col_offset": 0, "nodeName": "ToBasicBlockNormalForm", "type": "Callable[[], Any]"}, {"lineNumber": 549, "col_offset": 0, "nodeName": "ToCPS", "type": "Callable[..., Any]"}, {"lineNumber": 563, "col_offset": 0, "nodeName": "EtaExpand", "type": "Callable[..., Any]"}, {"lineNumber": 582, "col_offset": 0, "nodeName": "ToGraphNormalForm", "type": "Callable[[], Any]"}, {"lineNumber": 593, "col_offset": 0, "nodeName": "EliminateCommonSubexpr", "type": "Callable[..., Any]"}, {"lineNumber": 610, "col_offset": 0, "nodeName": "PartialEvaluate", "type": "Callable[[], Any]"}, {"lineNumber": 628, "col_offset": 0, "nodeName": "CanonicalizeCast", "type": "Callable[[], Any]"}, {"lineNumber": 640, "col_offset": 0, "nodeName": "LambdaLift", "type": "Callable[[], Any]"}, {"lineNumber": 652, "col_offset": 0, "nodeName": "PartitionGraph", "type": "Callable[[], Any]"}, {"lineNumber": 665, "col_offset": 0, "nodeName": "AnnotateTarget", "type": "Callable[[Any], Any]"}, {"lineNumber": 685, "col_offset": 0, "nodeName": "DynamicToStatic", "type": "Callable[[], Any]"}, {"lineNumber": 696, "col_offset": 0, "nodeName": "Inline", "type": "Callable[[], Any]"}, {"lineNumber": 709, "col_offset": 0, "nodeName": "gradient", "type": "Callable[..., Any]"}, {"lineNumber": 740, "col_offset": 0, "nodeName": "to_cps", "type": "Callable[..., Any]"}, {"lineNumber": 763, "col_offset": 0, "nodeName": "un_cps", "type": "Callable[[Any], Any]"}, {"lineNumber": 783, "col_offset": 0, "nodeName": "_wrap_class_function_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 810, "col_offset": 0, "nodeName": "function_pass", "type": "Callable[..., Any]"}, {"lineNumber": 948, "col_offset": 0, "nodeName": "DenseToSparse", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 970, "col_offset": 0, "nodeName": "SimplifyFCTranspose", "type": "Callable[[Any], Any]"}, {"lineNumber": 989, "col_offset": 0, "nodeName": "SimplifyExpr", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "Pass", "type": "Any"}, {"lineNumber": 930, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 934, "col_offset": 4, "nodeName": "transform_function", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "transform", "type": "Any"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "pattern_names", "type": "List[Any]"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "patterns", "type": "List[Any]"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "checks", "type": "List[Union[Callable[[Any], Any], Any]]"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "tup", "type": "Any"}, {"lineNumber": 459, "col_offset": 15, "nodeName": "pattern_table", "type": "Any"}, {"lineNumber": 759, "col_offset": 4, "nodeName": "use_mod", "type": "Any"}, {"lineNumber": 785, "col_offset": 25, "nodeName": "FunctionPass", "type": "Any"}, {"lineNumber": 799, "col_offset": 8, "nodeName": "__getattr__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 804, "col_offset": 4, "nodeName": "__name__", "type": "str"}, {"lineNumber": 804, "col_offset": 30, "nodeName": "__name__", "type": "str"}, {"lineNumber": 805, "col_offset": 4, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 805, "col_offset": 29, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 806, "col_offset": 4, "nodeName": "__module__", "type": "str"}, {"lineNumber": 806, "col_offset": 32, "nodeName": "__module__", "type": "str"}, {"lineNumber": 807, "col_offset": 11, "nodeName": "PyFunctionPass", "type": "Type[Any]"}, {"lineNumber": 891, "col_offset": 4, "nodeName": "required", "type": "List[nothing]"}, {"lineNumber": 906, "col_offset": 7, "nodeName": "pass_func", "type": "None"}, {"lineNumber": 908, "col_offset": 11, "nodeName": "create_function_pass", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 80, "col_offset": 55, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "PassContext", "type": "Any"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "opt_level", "type": "Any"}, {"lineNumber": 81, "col_offset": 48, "nodeName": "required_pass", "type": "Any"}, {"lineNumber": 81, "col_offset": 63, "nodeName": "disabled_pass", "type": "Any"}, {"lineNumber": 81, "col_offset": 78, "nodeName": "trace", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "ir", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "InferType", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "FoldScaleAxis", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "BackwardFoldScaleAxis", "type": "Any"}, {"lineNumber": 149, "col_offset": 7, "nodeName": "entry_functions", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "entry_functions", "type": "List[str]"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "RemoveUnusedFunctions", "type": "Any"}, {"lineNumber": 151, "col_offset": 42, "nodeName": "entry_functions", "type": "Union[Any, List[str]]"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "ForwardFoldScaleAxis", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "SimplifyInference", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "FastMath", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "CanonicalizeOps", "type": "Any"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "DeadCodeElimination", "type": "Any"}, {"lineNumber": 219, "col_offset": 40, "nodeName": "inline_once", "type": "Any"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "LazyGradientInit", "type": "Any"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "FoldConstant", "type": "Any"}, {"lineNumber": 260, "col_offset": 11, "nodeName": "FuseOps", "type": "Any"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "fuse_opt_level", "type": "Any"}, {"lineNumber": 277, "col_offset": 11, "nodeName": "CombineParallelConv2D", "type": "Any"}, {"lineNumber": 277, "col_offset": 42, "nodeName": "min_num_branches", "type": "int"}, {"lineNumber": 321, "col_offset": 11, "nodeName": "CombineParallelDense", "type": "Any"}, {"lineNumber": 321, "col_offset": 41, "nodeName": "min_num_branches", "type": "int"}, {"lineNumber": 321, "col_offset": 59, "nodeName": "to_batch", "type": "bool"}, {"lineNumber": 354, "col_offset": 11, "nodeName": "CombineParallelBatchMatmul", "type": "Any"}, {"lineNumber": 354, "col_offset": 47, "nodeName": "min_num_branches", "type": "int"}, {"lineNumber": 365, "col_offset": 11, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 383, "col_offset": 11, "nodeName": "AlterOpLayout", "type": "Any"}, {"lineNumber": 414, "col_offset": 11, "nodeName": "ConvertLayout", "type": "Any"}, {"lineNumber": 414, "col_offset": 34, "nodeName": "desired_layouts", "type": "Any"}, {"lineNumber": 434, "col_offset": 11, "nodeName": "Legalize", "type": "Any"}, {"lineNumber": 434, "col_offset": 29, "nodeName": "legalize_map_attr_name", "type": "Any"}, {"lineNumber": 470, "col_offset": 11, "nodeName": "MergeComposite", "type": "Any"}, {"lineNumber": 470, "col_offset": 35, "nodeName": "pattern_names", "type": "List[Any]"}, {"lineNumber": 470, "col_offset": 50, "nodeName": "patterns", "type": "List[Any]"}, {"lineNumber": 481, "col_offset": 11, "nodeName": "MergeCompilerRegions", "type": "Any"}, {"lineNumber": 502, "col_offset": 11, "nodeName": "RewriteDeviceAnnotation", "type": "Any"}, {"lineNumber": 502, "col_offset": 44, "nodeName": "fallback_device", "type": "Any"}, {"lineNumber": 516, "col_offset": 11, "nodeName": "ToANormalForm", "type": "Any"}, {"lineNumber": 531, "col_offset": 11, "nodeName": "ToANormalFormExpr", "type": "Any"}, {"lineNumber": 531, "col_offset": 38, "nodeName": "e", "type": "Any"}, {"lineNumber": 546, "col_offset": 11, "nodeName": "ToBasicBlockNormalForm", "type": "Any"}, {"lineNumber": 560, "col_offset": 11, "nodeName": "to_cps", "type": "Any"}, {"lineNumber": 560, "col_offset": 27, "nodeName": "expr", "type": "Any"}, {"lineNumber": 560, "col_offset": 33, "nodeName": "mod", "type": "Any"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "EtaExpand", "type": "Any"}, {"lineNumber": 579, "col_offset": 30, "nodeName": "expand_constructor", "type": "Any"}, {"lineNumber": 579, "col_offset": 50, "nodeName": "expand_global_var", "type": "Any"}, {"lineNumber": 590, "col_offset": 11, "nodeName": "ToGraphNormalForm", "type": "Any"}, {"lineNumber": 607, "col_offset": 11, "nodeName": "EliminateCommonSubexpr", "type": "Any"}, {"lineNumber": 607, "col_offset": 43, "nodeName": "fskip", "type": "Any"}, {"lineNumber": 625, "col_offset": 11, "nodeName": "PartialEvaluate", "type": "Any"}, {"lineNumber": 637, "col_offset": 11, "nodeName": "CanonicalizeCast", "type": "Any"}, {"lineNumber": 649, "col_offset": 11, "nodeName": "LambdaLift", "type": "Any"}, {"lineNumber": 661, "col_offset": 11, "nodeName": "PartitionGraph", "type": "Any"}, {"lineNumber": 680, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 680, "col_offset": 18, "nodeName": "targets", "type": "Any"}, {"lineNumber": 680, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 682, "col_offset": 11, "nodeName": "AnnotateTarget", "type": "Any"}, {"lineNumber": 693, "col_offset": 11, "nodeName": "DynamicToStatic", "type": "Any"}, {"lineNumber": 706, "col_offset": 11, "nodeName": "Inline", "type": "Any"}, {"lineNumber": 733, "col_offset": 7, "nodeName": "mode", "type": "Any"}, {"lineNumber": 735, "col_offset": 7, "nodeName": "mode", "type": "Any"}, {"lineNumber": 737, "col_offset": 10, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 759, "col_offset": 14, "nodeName": "mod", "type": "Any"}, {"lineNumber": 760, "col_offset": 11, "nodeName": "to_cps", "type": "Any"}, {"lineNumber": 760, "col_offset": 27, "nodeName": "func", "type": "Any"}, {"lineNumber": 760, "col_offset": 33, "nodeName": "use_mod", "type": "Any"}, {"lineNumber": 780, "col_offset": 11, "nodeName": "un_cps", "type": "Any"}, {"lineNumber": 780, "col_offset": 27, "nodeName": "func", "type": "Any"}, {"lineNumber": 803, "col_offset": 4, "nodeName": "update_wrapper", "type": "Callable[..., Callable[..., Any]]"}, {"lineNumber": 803, "col_offset": 29, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 803, "col_offset": 54, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 804, "col_offset": 4, "nodeName": "PyFunctionPass", "type": "Type[Any]"}, {"lineNumber": 804, "col_offset": 30, "nodeName": "pass_cls", "type": "Type[Any]"}, {"lineNumber": 805, "col_offset": 4, "nodeName": "PyFunctionPass", "type": "Type[Any]"}, {"lineNumber": 805, "col_offset": 29, "nodeName": "pass_cls", "type": "Type[Any]"}, {"lineNumber": 806, "col_offset": 4, "nodeName": "PyFunctionPass", "type": "Type[Any]"}, {"lineNumber": 806, "col_offset": 32, "nodeName": "pass_cls", "type": "Type[Any]"}, {"lineNumber": 888, "col_offset": 7, "nodeName": "opt_level", "type": "int"}, {"lineNumber": 891, "col_offset": 27, "nodeName": "required", "type": "None"}, {"lineNumber": 891, "col_offset": 15, "nodeName": "required", "type": "Any"}, {"lineNumber": 898, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 899, "col_offset": 8, "nodeName": "info", "type": "Any"}, {"lineNumber": 931, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 931, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 932, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 932, "col_offset": 26, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 935, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 936, "col_offset": 8, "nodeName": "change_batch", "type": "Any"}, {"lineNumber": 936, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 937, "col_offset": 33, "nodeName": "ExprMutator", "type": "Any"}, {"lineNumber": 967, "col_offset": 11, "nodeName": "DenseToSparse", "type": "Any"}, {"lineNumber": 967, "col_offset": 34, "nodeName": "weight_name", "type": "Any"}, {"lineNumber": 967, "col_offset": 47, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 986, "col_offset": 11, "nodeName": "SimplifyFCTranspose", "type": "Any"}, {"lineNumber": 986, "col_offset": 40, "nodeName": "target_weight_name", "type": "Any"}, {"lineNumber": 998, "col_offset": 11, "nodeName": "SimplifyExpr", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "warnings", "type": "module"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "transform", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 260, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 277, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 321, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 354, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 365, "col_offset": 11, "nodeName": "transform", "type": "Any"}, {"lineNumber": 383, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 414, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 434, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 461, "col_offset": 36, "nodeName": "tup", "type": "Any"}, {"lineNumber": 462, "col_offset": 12, "nodeName": "check", "type": "Callable[[Any], Any]"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 466, "col_offset": 29, "nodeName": "pattern_name", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 467, "col_offset": 24, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 468, "col_offset": 22, "nodeName": "check", "type": "Union[Callable[[Any], Any], Any]"}, {"lineNumber": 470, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 470, "col_offset": 61, "nodeName": "checks", "type": "List[Union[Callable[[Any], Any], Any]]"}, {"lineNumber": 481, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 502, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 516, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 531, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 546, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 560, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 590, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 607, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 625, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 637, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 649, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 661, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 681, "col_offset": 19, "nodeName": "targets", "type": "Any"}, {"lineNumber": 682, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 693, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 706, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 734, "col_offset": 15, "nodeName": "first_order_gradient", "type": "Any"}, {"lineNumber": 734, "col_offset": 45, "nodeName": "expr", "type": "Any"}, {"lineNumber": 734, "col_offset": 51, "nodeName": "mod", "type": "Any"}, {"lineNumber": 736, "col_offset": 15, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 736, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 736, "col_offset": 39, "nodeName": "mod", "type": "Any"}, {"lineNumber": 759, "col_offset": 21, "nodeName": "mod", "type": "Any"}, {"lineNumber": 759, "col_offset": 42, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 760, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 780, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 789, "col_offset": 12, "nodeName": "handle", "type": "None"}, {"lineNumber": 790, "col_offset": 12, "nodeName": "inst", "type": "Any"}, {"lineNumber": 797, "col_offset": 12, "nodeName": "_inst", "type": "Any"}, {"lineNumber": 797, "col_offset": 25, "nodeName": "inst", "type": "Any"}, {"lineNumber": 803, "col_offset": 4, "nodeName": "functools", "type": "module"}, {"lineNumber": 803, "col_offset": 29, "nodeName": "PyFunctionPass", "type": "Type[Any]"}, {"lineNumber": 803, "col_offset": 54, "nodeName": "pass_cls", "type": "Type[Any]"}, {"lineNumber": 889, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 892, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 892, "col_offset": 22, "nodeName": "required", "type": "List[nothing]"}, {"lineNumber": 893, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 898, "col_offset": 24, "nodeName": "name", "type": "None"}, {"lineNumber": 898, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 898, "col_offset": 34, "nodeName": "__name__", "type": "str"}, {"lineNumber": 899, "col_offset": 15, "nodeName": "PassInfo", "type": "Any"}, {"lineNumber": 899, "col_offset": 38, "nodeName": "opt_level", "type": "int"}, {"lineNumber": 899, "col_offset": 49, "nodeName": "fname", "type": "str"}, {"lineNumber": 899, "col_offset": 56, "nodeName": "required", "type": "List[nothing]"}, {"lineNumber": 900, "col_offset": 11, "nodeName": "isclass", "type": "Callable[[object], bool]"}, {"lineNumber": 900, "col_offset": 27, "nodeName": "pass_arg", "type": "Type[Any]"}, {"lineNumber": 904, "col_offset": 15, "nodeName": "MakeFunctionPass", "type": "Any"}, {"lineNumber": 904, "col_offset": 41, "nodeName": "pass_arg", "type": "Type[Any]"}, {"lineNumber": 904, "col_offset": 51, "nodeName": "info", "type": "Any"}, {"lineNumber": 907, "col_offset": 15, "nodeName": "create_function_pass", "type": "Callable[[Any], Any]"}, {"lineNumber": 907, "col_offset": 36, "nodeName": "pass_func", "type": "Any"}, {"lineNumber": 931, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 932, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 935, "col_offset": 15, "nodeName": "Function", "type": "Any"}, {"lineNumber": 935, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 935, "col_offset": 43, "nodeName": "body", "type": "Any"}, {"lineNumber": 935, "col_offset": 60, "nodeName": "type_params", "type": "Any"}, {"lineNumber": 935, "col_offset": 78, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 937, "col_offset": 33, "nodeName": "relay", "type": "Any"}, {"lineNumber": 945, "col_offset": 15, "nodeName": "visit", "type": "Any"}, {"lineNumber": 945, "col_offset": 42, "nodeName": "func", "type": "Any"}, {"lineNumber": 967, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 986, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 998, "col_offset": 11, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 365, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "CombineParallelConv2D", "type": "Callable[..., Any]"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "CombineParallelDense", "type": "Callable[..., Any]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "CombineParallelBatchMatmul", "type": "Callable[..., Any]"}, {"lineNumber": 460, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 460, "col_offset": 15, "nodeName": "tup", "type": "Any"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "pattern_name", "type": "Any"}, {"lineNumber": 461, "col_offset": 26, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 464, "col_offset": 43, "nodeName": "tup", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "pattern_names", "type": "List[Any]"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "patterns", "type": "List[Any]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "checks", "type": "List[Union[Callable[[Any], Any], Any]]"}, {"lineNumber": 682, "col_offset": 36, "nodeName": "String", "type": "Any"}, {"lineNumber": 682, "col_offset": 65, "nodeName": "t", "type": "Any"}, {"lineNumber": 682, "col_offset": 72, "nodeName": "t", "type": "Any"}, {"lineNumber": 682, "col_offset": 77, "nodeName": "targets", "type": "Union[List[Any], Any]"}, {"lineNumber": 734, "col_offset": 15, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 736, "col_offset": 15, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 759, "col_offset": 42, "nodeName": "ir", "type": "Any"}, {"lineNumber": 789, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 790, "col_offset": 19, "nodeName": "pass_cls", "type": "Type[Any]"}, {"lineNumber": 795, "col_offset": 12, "nodeName": "__init_handle_by_constructor__", "type": "Any"}, {"lineNumber": 796, "col_offset": 16, "nodeName": "MakeFunctionPass", "type": "Any"}, {"lineNumber": 796, "col_offset": 43, "nodeName": "_pass_func", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 796, "col_offset": 55, "nodeName": "pass_info", "type": "Any"}, {"lineNumber": 797, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 801, "col_offset": 19, "nodeName": "__getattribute__", "type": "Callable[[Any], Any]"}, {"lineNumber": 801, "col_offset": 47, "nodeName": "name", "type": "Any"}, {"lineNumber": 892, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 892, "col_offset": 39, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 898, "col_offset": 34, "nodeName": "pass_arg", "type": "Type[Any]"}, {"lineNumber": 899, "col_offset": 15, "nodeName": "transform", "type": "Any"}, {"lineNumber": 900, "col_offset": 11, "nodeName": "inspect", "type": "module"}, {"lineNumber": 901, "col_offset": 19, "nodeName": "_wrap_class_function_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 901, "col_offset": 45, "nodeName": "pass_arg", "type": "Type[Any]"}, {"lineNumber": 901, "col_offset": 55, "nodeName": "info", "type": "Any"}, {"lineNumber": 902, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 902, "col_offset": 26, "nodeName": "pass_arg", "type": "Type[Any]"}, {"lineNumber": 903, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 904, "col_offset": 15, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 935, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 935, "col_offset": 30, "nodeName": "func", "type": "Any"}, {"lineNumber": 935, "col_offset": 43, "nodeName": "func", "type": "Any"}, {"lineNumber": 935, "col_offset": 60, "nodeName": "func", "type": "Any"}, {"lineNumber": 935, "col_offset": 78, "nodeName": "func", "type": "Any"}, {"lineNumber": 937, "col_offset": 33, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 944, "col_offset": 23, "nodeName": "var", "type": "Any"}, {"lineNumber": 463, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 463, "col_offset": 17, "nodeName": "tup", "type": "Any"}, {"lineNumber": 464, "col_offset": 12, "nodeName": "pattern_name", "type": "Any"}, {"lineNumber": 464, "col_offset": 26, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 464, "col_offset": 35, "nodeName": "check", "type": "Any"}, {"lineNumber": 682, "col_offset": 36, "nodeName": "container", "type": "Any"}, {"lineNumber": 759, "col_offset": 42, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 790, "col_offset": 29, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 790, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 794, "col_offset": 23, "nodeName": "transform_function", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 794, "col_offset": 47, "nodeName": "func", "type": "Any"}, {"lineNumber": 794, "col_offset": 53, "nodeName": "mod", "type": "Any"}, {"lineNumber": 794, "col_offset": 58, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 795, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 796, "col_offset": 16, "nodeName": "_ffi_api", "type": "Any"}, {"lineNumber": 801, "col_offset": 19, "nodeName": "_inst", "type": "Any"}, {"lineNumber": 899, "col_offset": 15, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 902, "col_offset": 37, "nodeName": "FunctionType", "type": "Type[Callable[..., Any]]"}, {"lineNumber": 902, "col_offset": 57, "nodeName": "LambdaType", "type": "Type[Callable[..., Any]]"}, {"lineNumber": 939, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 939, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 940, "col_offset": 20, "nodeName": "ty", "type": "Any"}, {"lineNumber": 940, "col_offset": 25, "nodeName": "type_annotation", "type": "Any"}, {"lineNumber": 941, "col_offset": 20, "nodeName": "new_shape", "type": "List[Any]"}, {"lineNumber": 942, "col_offset": 56, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 945, "col_offset": 15, "nodeName": "ChangeBatchMutator", "type": "Type[Any]"}, {"lineNumber": 682, "col_offset": 36, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 794, "col_offset": 23, "nodeName": "inst", "type": "Any"}, {"lineNumber": 801, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 902, "col_offset": 37, "nodeName": "types", "type": "module"}, {"lineNumber": 902, "col_offset": 57, "nodeName": "types", "type": "module"}, {"lineNumber": 939, "col_offset": 26, "nodeName": "change_batch", "type": "Any"}, {"lineNumber": 940, "col_offset": 25, "nodeName": "var", "type": "Any"}, {"lineNumber": 941, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 941, "col_offset": 37, "nodeName": "shape", "type": "Any"}, {"lineNumber": 942, "col_offset": 20, "nodeName": "new_shape", "type": "List[Any]"}, {"lineNumber": 942, "col_offset": 56, "nodeName": "change_batch", "type": "Any"}, {"lineNumber": 943, "col_offset": 27, "nodeName": "Var", "type": "Any"}, {"lineNumber": 943, "col_offset": 37, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 682, "col_offset": 36, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 941, "col_offset": 37, "nodeName": "ty", "type": "Any"}, {"lineNumber": 943, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 943, "col_offset": 37, "nodeName": "var", "type": "Any"}, {"lineNumber": 943, "col_offset": 52, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 943, "col_offset": 69, "nodeName": "new_shape", "type": "List[Any]"}, {"lineNumber": 943, "col_offset": 80, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 942, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 943, "col_offset": 52, "nodeName": "relay", "type": "Any"}, {"lineNumber": 943, "col_offset": 80, "nodeName": "ty", "type": "Any"}, {"lineNumber": 942, "col_offset": 30, "nodeName": "change_batch", "type": "Any"}, {"lineNumber": 942, "col_offset": 48, "nodeName": "var", "type": "Any"}]