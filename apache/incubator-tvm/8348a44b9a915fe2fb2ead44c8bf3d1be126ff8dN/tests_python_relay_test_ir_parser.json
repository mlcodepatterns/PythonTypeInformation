[{"lineNumber": 68, "col_offset": 0, "nodeName": "assert_graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "roundtrip_expr", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "roundtrip", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "parses_as", "type": "Callable[[str, Any], bool]"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "parse_module", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "assert_parse_module_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 0, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "test_comments", "type": "Callable[[], Any]"}, {"lineNumber": 164, "col_offset": 0, "nodeName": "test_int_literal", "type": "Callable[[], Any]"}, {"lineNumber": 175, "col_offset": 0, "nodeName": "test_float_literal", "type": "Callable[[], Any]"}, {"lineNumber": 192, "col_offset": 0, "nodeName": "test_bool_literal", "type": "Callable[[], Any]"}, {"lineNumber": 197, "col_offset": 0, "nodeName": "test_negative", "type": "Callable[[], Any]"}, {"lineNumber": 204, "col_offset": 0, "nodeName": "test_bin_op", "type": "Callable[[], Any]"}, {"lineNumber": 211, "col_offset": 0, "nodeName": "test_parens", "type": "Callable[[], Any]"}, {"lineNumber": 216, "col_offset": 0, "nodeName": "test_op_assoc", "type": "Callable[[], Any]"}, {"lineNumber": 221, "col_offset": 0, "nodeName": "test_vars", "type": "Callable[[], Any]"}, {"lineNumber": 243, "col_offset": 0, "nodeName": "test_meta_ref", "type": "Callable[[], Any]"}, {"lineNumber": 250, "col_offset": 0, "nodeName": "test_let", "type": "Callable[[], Any]"}, {"lineNumber": 263, "col_offset": 0, "nodeName": "test_seq", "type": "Callable[[], Any]"}, {"lineNumber": 269, "col_offset": 0, "nodeName": "test_graph", "type": "Callable[[], Any]"}, {"lineNumber": 274, "col_offset": 0, "nodeName": "test_graph_single", "type": "Callable[[], Any]"}, {"lineNumber": 278, "col_offset": 0, "nodeName": "test_let_global_var", "type": "Callable[[], Any]"}, {"lineNumber": 283, "col_offset": 0, "nodeName": "test_let_op", "type": "Callable[[], Any]"}, {"lineNumber": 288, "col_offset": 0, "nodeName": "test_tuple", "type": "Callable[[], Any]"}, {"lineNumber": 298, "col_offset": 0, "nodeName": "test_func", "type": "Callable[[], Any]"}, {"lineNumber": 321, "col_offset": 0, "nodeName": "test_defn", "type": "Callable[[], Any]"}, {"lineNumber": 332, "col_offset": 0, "nodeName": "test_recursive_call", "type": "Callable[[], Any]"}, {"lineNumber": 343, "col_offset": 0, "nodeName": "test_ifelse", "type": "Callable[[], Any]"}, {"lineNumber": 356, "col_offset": 0, "nodeName": "test_ifelse_scope", "type": "Callable[[], Any]"}, {"lineNumber": 370, "col_offset": 0, "nodeName": "test_call", "type": "Callable[[], Any]"}, {"lineNumber": 471, "col_offset": 0, "nodeName": "test_incomplete_type", "type": "Callable[[], Any]"}, {"lineNumber": 475, "col_offset": 0, "nodeName": "test_builtin_types", "type": "Callable[[], Any]"}, {"lineNumber": 480, "col_offset": 0, "nodeName": "test_tensor_type", "type": "Callable[[], Any]"}, {"lineNumber": 502, "col_offset": 0, "nodeName": "test_function_type", "type": "Callable[[], Any]"}, {"lineNumber": 539, "col_offset": 0, "nodeName": "test_tuple_type", "type": "Callable[[], Any]"}, {"lineNumber": 566, "col_offset": 0, "nodeName": "test_adt_defn", "type": "Callable[[], Any]"}, {"lineNumber": 580, "col_offset": 0, "nodeName": "test_adt_any", "type": "Callable[[], Any]"}, {"lineNumber": 599, "col_offset": 0, "nodeName": "test_empty_adt_defn", "type": "Callable[[], Any]"}, {"lineNumber": 613, "col_offset": 0, "nodeName": "test_multiple_cons_defn", "type": "Callable[[], Any]"}, {"lineNumber": 630, "col_offset": 0, "nodeName": "test_multiple_type_param_defn", "type": "Callable[[], Any]"}, {"lineNumber": 655, "col_offset": 0, "nodeName": "test_match", "type": "Callable[[], Any]"}, {"lineNumber": 713, "col_offset": 0, "nodeName": "test_adt_cons_expr", "type": "Callable[[], Any]"}, {"lineNumber": 743, "col_offset": 0, "nodeName": "test_duplicate_adt_defn", "type": "Callable[[], Any]"}, {"lineNumber": 758, "col_offset": 0, "nodeName": "test_duplicate_adt_cons", "type": "Callable[[], Any]"}, {"lineNumber": 768, "col_offset": 0, "nodeName": "test_duplicate_adt_cons_defn", "type": "Callable[[], Any]"}, {"lineNumber": 778, "col_offset": 0, "nodeName": "test_duplicate_global_var", "type": "Callable[[], Any]"}, {"lineNumber": 788, "col_offset": 0, "nodeName": "test_extern_adt_defn", "type": "Callable[[], Any]"}, {"lineNumber": 804, "col_offset": 0, "nodeName": "test_import_grad", "type": "Callable[[], Any]"}, {"lineNumber": 809, "col_offset": 0, "nodeName": "test_resnet", "type": "Callable[[], Any]"}, {"lineNumber": 816, "col_offset": 0, "nodeName": "inline_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 832, "col_offset": 0, "nodeName": "test_resnet_inlined_params", "type": "Callable[[], Any]"}, {"lineNumber": 840, "col_offset": 0, "nodeName": "test_op_string_attr", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "SEMVER", "type": "str"}, {"lineNumber": 123, "col_offset": 0, "nodeName": "int32", "type": "Any"}, {"lineNumber": 125, "col_offset": 0, "nodeName": "_", "type": "Any"}, {"lineNumber": 126, "col_offset": 0, "nodeName": "X", "type": "Any"}, {"lineNumber": 127, "col_offset": 0, "nodeName": "Y", "type": "Any"}, {"lineNumber": 128, "col_offset": 0, "nodeName": "X_ANNO", "type": "Any"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "Y_ANNO", "type": "Any"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "divide", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "add", "type": "Any"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "subtract", "type": "Any"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "less", "type": "Any"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "greater", "type": "Any"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "less_equal", "type": "Any"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "greater_equal", "type": "Any"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "equal", "type": "Any"}, {"lineNumber": 39, "col_offset": 10, "nodeName": "not_equal", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "text", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "expr", "type": "Any"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "expr", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "mod", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "scalar_type", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "Var", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "Var", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "Var", "type": "Any"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "Var", "type": "Any"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "int32", "type": "Any"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "Var", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "int32", "type": "Any"}, {"lineNumber": 131, "col_offset": 7, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "bin_op", "type": "str"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "var", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "global_var", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "op", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "op", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "code", "type": "str"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "id_func", "type": "Any"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "constant", "type": "Any"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "id_var", "type": "Any"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "curried_mult", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "builtin_type", "type": "str"}, {"lineNumber": 476, "col_offset": 24, "nodeName": "TYPES", "type": "Set[str]"}, {"lineNumber": 567, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 569, "col_offset": 4, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "prog", "type": "Any"}, {"lineNumber": 571, "col_offset": 24, "nodeName": "prog", "type": "Any"}, {"lineNumber": 586, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "items", "type": "Any"}, {"lineNumber": 590, "col_offset": 4, "nodeName": "ctors", "type": "Any"}, {"lineNumber": 590, "col_offset": 12, "nodeName": "constructors", "type": "Any"}, {"lineNumber": 592, "col_offset": 4, "nodeName": "my_cons", "type": "Any"}, {"lineNumber": 594, "col_offset": 4, "nodeName": "ty_shape", "type": "Any"}, {"lineNumber": 594, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 600, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 602, "col_offset": 4, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 603, "col_offset": 4, "nodeName": "prog", "type": "Any"}, {"lineNumber": 604, "col_offset": 24, "nodeName": "prog", "type": "Any"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 617, "col_offset": 4, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 626, "col_offset": 20, "nodeName": "prog", "type": "Any"}, {"lineNumber": 631, "col_offset": 4, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 632, "col_offset": 4, "nodeName": "typ_var_a", "type": "Any"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "typ_var_b", "type": "Any"}, {"lineNumber": 642, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 643, "col_offset": 24, "nodeName": "prog", "type": "Any"}, {"lineNumber": 657, "col_offset": 4, "nodeName": "match_keywords", "type": "List[Tuple[str, bool]]"}, {"lineNumber": 658, "col_offset": 40, "nodeName": "match_keywords", "type": "List[Tuple[str, bool]]"}, {"lineNumber": 714, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 716, "col_offset": 4, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 717, "col_offset": 4, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 718, "col_offset": 4, "nodeName": "cons_constructor", "type": "Any"}, {"lineNumber": 719, "col_offset": 4, "nodeName": "nil_constructor", "type": "Any"}, {"lineNumber": 720, "col_offset": 4, "nodeName": "list_def", "type": "Any"}, {"lineNumber": 721, "col_offset": 20, "nodeName": "list_def", "type": "Any"}, {"lineNumber": 723, "col_offset": 4, "nodeName": "make_singleton_var", "type": "Any"}, {"lineNumber": 724, "col_offset": 4, "nodeName": "input_var", "type": "Any"}, {"lineNumber": 728, "col_offset": 30, "nodeName": "make_singleton_func", "type": "Any"}, {"lineNumber": 789, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 791, "col_offset": 4, "nodeName": "extern_var", "type": "Any"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 793, "col_offset": 4, "nodeName": "extern_def", "type": "Any"}, {"lineNumber": 794, "col_offset": 22, "nodeName": "extern_def", "type": "Any"}, {"lineNumber": 805, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "text", "type": "Any"}, {"lineNumber": 812, "col_offset": 4, "nodeName": "parsed_mod", "type": "Any"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "main_fn", "type": "Any"}, {"lineNumber": 818, "col_offset": 4, "nodeName": "str_to_var", "type": "Dict[Any, Any]"}, {"lineNumber": 819, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 819, "col_offset": 17, "nodeName": "params", "type": "Any"}, {"lineNumber": 822, "col_offset": 4, "nodeName": "bind_map", "type": "Dict[Any, Any]"}, {"lineNumber": 823, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 823, "col_offset": 17, "nodeName": "params", "type": "Any"}, {"lineNumber": 826, "col_offset": 4, "nodeName": "body", "type": "Any"}, {"lineNumber": 827, "col_offset": 4, "nodeName": "main_fn", "type": "Any"}, {"lineNumber": 828, "col_offset": 21, "nodeName": "main_fn", "type": "Any"}, {"lineNumber": 829, "col_offset": 11, "nodeName": "mod", "type": "Any"}, {"lineNumber": 834, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 835, "col_offset": 4, "nodeName": "text", "type": "Any"}, {"lineNumber": 836, "col_offset": 4, "nodeName": "parsed_mod", "type": "Any"}, {"lineNumber": 854, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 39, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "assert_structural_equal", "type": "Any"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "structural_equal", "type": "Any"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "astext", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "parse_expr", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "text", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "assert_graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "expr", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "fromtext", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "assert_graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "expr", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "parse_expr", "type": "Any"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "code", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "roundtrip_expr", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "expr", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "code", "type": "str"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 103, "col_offset": 10, "nodeName": "parse", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "roundtrip", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "mod", "type": "Any"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "code", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "assert_graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "expr", "type": "Any"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "parse_module", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "code", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "assert_graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "mod", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "item", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "relay", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "relay", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "relay", "type": "Any"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "relay", "type": "Any"}, {"lineNumber": 131, "col_offset": 7, "nodeName": "relay", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 165, "col_offset": 39, "nodeName": "Constant", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "NDArray", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 205, "col_offset": 18, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 223, "col_offset": 10, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "body", "type": "Any"}, {"lineNumber": 224, "col_offset": 32, "nodeName": "Var", "type": "Any"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "global_var", "type": "Any"}, {"lineNumber": 229, "col_offset": 34, "nodeName": "GlobalVar", "type": "Any"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 233, "col_offset": 9, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "op", "type": "Any"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "Op", "type": "Any"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 238, "col_offset": 9, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 239, "col_offset": 22, "nodeName": "op", "type": "Any"}, {"lineNumber": 239, "col_offset": 26, "nodeName": "Op", "type": "Any"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "meta_op", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 271, "col_offset": 21, "nodeName": "code", "type": "str"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 322, "col_offset": 14, "nodeName": "parse_module", "type": "Callable[[Any], Any]"}, {"lineNumber": 329, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 329, "col_offset": 22, "nodeName": "id_defn", "type": "Any"}, {"lineNumber": 329, "col_offset": 31, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 333, "col_offset": 14, "nodeName": "parse_module", "type": "Callable[[Any], Any]"}, {"lineNumber": 340, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 340, "col_offset": 22, "nodeName": "id_defn", "type": "Any"}, {"lineNumber": 340, "col_offset": 31, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 372, "col_offset": 14, "nodeName": "Var", "type": "Any"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 386, "col_offset": 15, "nodeName": "Var", "type": "Any"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 400, "col_offset": 13, "nodeName": "Var", "type": "Any"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 414, "col_offset": 15, "nodeName": "Var", "type": "Any"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 428, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 436, "col_offset": 19, "nodeName": "Var", "type": "Any"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 525, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 567, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 569, "col_offset": 19, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 570, "col_offset": 11, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 570, "col_offset": 26, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "assert_parse_module_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 586, "col_offset": 10, "nodeName": "parse_module", "type": "Callable[[Any], Any]"}, {"lineNumber": 586, "col_offset": 23, "nodeName": "code", "type": "str"}, {"lineNumber": 587, "col_offset": 12, "nodeName": "items", "type": "Any"}, {"lineNumber": 588, "col_offset": 4, "nodeName": "global_type_var", "type": "Any"}, {"lineNumber": 588, "col_offset": 21, "nodeName": "type_data", "type": "Any"}, {"lineNumber": 588, "col_offset": 33, "nodeName": "items", "type": "Any"}, {"lineNumber": 589, "col_offset": 11, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 590, "col_offset": 12, "nodeName": "type_data", "type": "Any"}, {"lineNumber": 592, "col_offset": 14, "nodeName": "ctors", "type": "Any"}, {"lineNumber": 593, "col_offset": 11, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 595, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 595, "col_offset": 35, "nodeName": "Any", "type": "Any"}, {"lineNumber": 600, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 602, "col_offset": 19, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 603, "col_offset": 11, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 603, "col_offset": 26, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 604, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 605, "col_offset": 4, "nodeName": "assert_parse_module_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 614, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 616, "col_offset": 15, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 617, "col_offset": 14, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 618, "col_offset": 11, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "assert_parse_module_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 627, "col_offset": 27, "nodeName": "LIST_DEFN", "type": "str"}, {"lineNumber": 627, "col_offset": 38, "nodeName": "mod", "type": "Any"}, {"lineNumber": 631, "col_offset": 19, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 632, "col_offset": 16, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 633, "col_offset": 16, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 634, "col_offset": 11, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 642, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 643, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 644, "col_offset": 4, "nodeName": "assert_parse_module_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 658, "col_offset": 9, "nodeName": "match_keyword", "type": "str"}, {"lineNumber": 658, "col_offset": 24, "nodeName": "is_complete", "type": "bool"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 663, "col_offset": 8, "nodeName": "cons_constructor", "type": "Any"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "nil_constructor", "type": "Any"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "list_def", "type": "Any"}, {"lineNumber": 666, "col_offset": 24, "nodeName": "list_def", "type": "Any"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "length_var", "type": "Any"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 670, "col_offset": 8, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "input_var", "type": "Any"}, {"lineNumber": 672, "col_offset": 8, "nodeName": "rest_var", "type": "Any"}, {"lineNumber": 691, "col_offset": 8, "nodeName": "length_func", "type": "Any"}, {"lineNumber": 692, "col_offset": 26, "nodeName": "length_func", "type": "Any"}, {"lineNumber": 714, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 716, "col_offset": 15, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 717, "col_offset": 14, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 718, "col_offset": 23, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 718, "col_offset": 79, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 719, "col_offset": 22, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 719, "col_offset": 51, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 720, "col_offset": 15, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 720, "col_offset": 30, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 721, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 723, "col_offset": 25, "nodeName": "GlobalVar", "type": "Any"}, {"lineNumber": 724, "col_offset": 16, "nodeName": "Var", "type": "Any"}, {"lineNumber": 724, "col_offset": 31, "nodeName": "int32", "type": "Any"}, {"lineNumber": 725, "col_offset": 26, "nodeName": "Function", "type": "Any"}, {"lineNumber": 728, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 730, "col_offset": 4, "nodeName": "assert_parse_module_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 739, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 789, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 791, "col_offset": 17, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 792, "col_offset": 14, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 793, "col_offset": 17, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 793, "col_offset": 32, "nodeName": "extern_var", "type": "Any"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "assert_parse_module_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 800, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 805, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 806, "col_offset": 4, "nodeName": "import_from_std", "type": "Any"}, {"lineNumber": 810, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 810, "col_offset": 9, "nodeName": "_", "type": "Any"}, {"lineNumber": 810, "col_offset": 13, "nodeName": "get_workload", "type": "Any"}, {"lineNumber": 811, "col_offset": 11, "nodeName": "astext", "type": "Any"}, {"lineNumber": 812, "col_offset": 17, "nodeName": "parse", "type": "Any"}, {"lineNumber": 812, "col_offset": 34, "nodeName": "text", "type": "Any"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "assert_structural_equal", "type": "Any"}, {"lineNumber": 813, "col_offset": 35, "nodeName": "mod", "type": "Any"}, {"lineNumber": 813, "col_offset": 40, "nodeName": "parsed_mod", "type": "Any"}, {"lineNumber": 817, "col_offset": 14, "nodeName": "mod", "type": "Any"}, {"lineNumber": 819, "col_offset": 17, "nodeName": "main_fn", "type": "Any"}, {"lineNumber": 820, "col_offset": 38, "nodeName": "param", "type": "Any"}, {"lineNumber": 826, "col_offset": 11, "nodeName": "bind", "type": "Any"}, {"lineNumber": 826, "col_offset": 22, "nodeName": "body", "type": "Any"}, {"lineNumber": 826, "col_offset": 36, "nodeName": "bind_map", "type": "Dict[Any, Any]"}, {"lineNumber": 827, "col_offset": 14, "nodeName": "Function", "type": "Any"}, {"lineNumber": 827, "col_offset": 61, "nodeName": "body", "type": "Any"}, {"lineNumber": 828, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 833, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 833, "col_offset": 9, "nodeName": "params", "type": "Any"}, {"lineNumber": 833, "col_offset": 18, "nodeName": "get_workload", "type": "Any"}, {"lineNumber": 834, "col_offset": 10, "nodeName": "inline_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 834, "col_offset": 24, "nodeName": "mod", "type": "Any"}, {"lineNumber": 834, "col_offset": 29, "nodeName": "params", "type": "Any"}, {"lineNumber": 835, "col_offset": 11, "nodeName": "astext", "type": "Any"}, {"lineNumber": 836, "col_offset": 17, "nodeName": "parse", "type": "Any"}, {"lineNumber": 836, "col_offset": 34, "nodeName": "text", "type": "Any"}, {"lineNumber": 837, "col_offset": 4, "nodeName": "assert_structural_equal", "type": "Any"}, {"lineNumber": 837, "col_offset": 35, "nodeName": "mod", "type": "Any"}, {"lineNumber": 837, "col_offset": 40, "nodeName": "parsed_mod", "type": "Any"}, {"lineNumber": 841, "col_offset": 11, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 848, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 848, "col_offset": 22, "nodeName": "op", "type": "Any"}, {"lineNumber": 848, "col_offset": 31, "nodeName": "Op", "type": "Any"}, {"lineNumber": 849, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 850, "col_offset": 11, "nodeName": "data_layout", "type": "Any"}, {"lineNumber": 851, "col_offset": 11, "nodeName": "kernel_layout", "type": "Any"}, {"lineNumber": 857, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 857, "col_offset": 16, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "ir", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "ir", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "Expr", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "astext", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "parser", "type": "Any"}, {"lineNumber": 103, "col_offset": 10, "nodeName": "parser", "type": "Any"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "SEMVER", "type": "str"}, {"lineNumber": 103, "col_offset": 36, "nodeName": "code", "type": "Any"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 39, "nodeName": "relay", "type": "Any"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "nd", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 193, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "get_scalar", "type": "Callable[[Any], Union[float, int, bool]]"}, {"lineNumber": 205, "col_offset": 18, "nodeName": "BINARY_OPS", "type": "Dict[str, Any]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assert_parses_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 48, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "graph_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 217, "col_offset": 23, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 217, "col_offset": 57, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 57, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "var", "type": "Any"}, {"lineNumber": 224, "col_offset": 32, "nodeName": "relay", "type": "Any"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "body", "type": "Any"}, {"lineNumber": 229, "col_offset": 34, "nodeName": "relay", "type": "Any"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "global_var", "type": "Any"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "ir", "type": "Any"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 239, "col_offset": 26, "nodeName": "ir", "type": "Any"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 244, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "DiagnosticError", "type": "Any"}, {"lineNumber": 245, "col_offset": 18, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "node_type_key", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "node_index", "type": "Any"}, {"lineNumber": 251, "col_offset": 39, "nodeName": "Let", "type": "Any"}, {"lineNumber": 251, "col_offset": 49, "nodeName": "X", "type": "Any"}, {"lineNumber": 251, "col_offset": 68, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 259, "col_offset": 18, "nodeName": "X", "type": "Any"}, {"lineNumber": 264, "col_offset": 31, "nodeName": "Let", "type": "Any"}, {"lineNumber": 264, "col_offset": 41, "nodeName": "_", "type": "Any"}, {"lineNumber": 264, "col_offset": 44, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 264, "col_offset": 50, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 266, "col_offset": 39, "nodeName": "Let", "type": "Any"}, {"lineNumber": 266, "col_offset": 49, "nodeName": "X", "type": "Any"}, {"lineNumber": 266, "col_offset": 68, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 271, "col_offset": 27, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 275, "col_offset": 36, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 279, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "DiagnosticError", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 284, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "DiagnosticError", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 289, "col_offset": 27, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 291, "col_offset": 29, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 293, "col_offset": 31, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 295, "col_offset": 34, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 300, "col_offset": 36, "nodeName": "Function", "type": "Any"}, {"lineNumber": 303, "col_offset": 39, "nodeName": "Function", "type": "Any"}, {"lineNumber": 303, "col_offset": 59, "nodeName": "X", "type": "Any"}, {"lineNumber": 306, "col_offset": 48, "nodeName": "Function", "type": "Any"}, {"lineNumber": 309, "col_offset": 55, "nodeName": "Function", "type": "Any"}, {"lineNumber": 309, "col_offset": 80, "nodeName": "X_ANNO", "type": "Any"}, {"lineNumber": 309, "col_offset": 88, "nodeName": "int32", "type": "Any"}, {"lineNumber": 329, "col_offset": 31, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 340, "col_offset": 31, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "If", "type": "Any"}, {"lineNumber": 357, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 357, "col_offset": 23, "nodeName": "DiagnosticError", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 372, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "id_func", "type": "Any"}, {"lineNumber": 386, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 400, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "id_var", "type": "Any"}, {"lineNumber": 414, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "Call", "type": "Any"}, {"lineNumber": 436, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "curried_mult", "type": "Any"}, {"lineNumber": 465, "col_offset": 31, "nodeName": "Call", "type": "Any"}, {"lineNumber": 472, "col_offset": 44, "nodeName": "Let", "type": "Any"}, {"lineNumber": 472, "col_offset": 54, "nodeName": "_", "type": "Any"}, {"lineNumber": 472, "col_offset": 57, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 472, "col_offset": 63, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 483, "col_offset": 67, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 483, "col_offset": 73, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 488, "col_offset": 69, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 488, "col_offset": 75, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 493, "col_offset": 71, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 493, "col_offset": 77, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 498, "col_offset": 83, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 498, "col_offset": 89, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 510, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 521, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 534, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 544, "col_offset": 55, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 544, "col_offset": 61, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 551, "col_offset": 91, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "Let", "type": "Any"}, {"lineNumber": 561, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 567, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 569, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 570, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 587, "col_offset": 12, "nodeName": "type_definitions", "type": "Any"}, {"lineNumber": 589, "col_offset": 11, "nodeName": "global_type_var", "type": "Any"}, {"lineNumber": 591, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 591, "col_offset": 15, "nodeName": "ctors", "type": "Any"}, {"lineNumber": 593, "col_offset": 11, "nodeName": "my_cons", "type": "Any"}, {"lineNumber": 594, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 595, "col_offset": 22, "nodeName": "ty_shape", "type": "Any"}, {"lineNumber": 595, "col_offset": 35, "nodeName": "tir", "type": "Any"}, {"lineNumber": 596, "col_offset": 11, "nodeName": "ty_shape", "type": "Any"}, {"lineNumber": 600, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 602, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 603, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 614, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 616, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 617, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 618, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 620, "col_offset": 9, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 631, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 632, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 633, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 634, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 636, "col_offset": 9, "nodeName": "typ_var_a", "type": "Any"}, {"lineNumber": 636, "col_offset": 20, "nodeName": "typ_var_b", "type": "Any"}, {"lineNumber": 642, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 659, "col_offset": 14, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 661, "col_offset": 19, "nodeName": "GlobalTypeVar", "type": "Any"}, {"lineNumber": 662, "col_offset": 18, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 663, "col_offset": 27, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 663, "col_offset": 83, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 664, "col_offset": 26, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 664, "col_offset": 55, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 665, "col_offset": 19, "nodeName": "TypeData", "type": "Any"}, {"lineNumber": 665, "col_offset": 34, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 668, "col_offset": 21, "nodeName": "GlobalVar", "type": "Any"}, {"lineNumber": 669, "col_offset": 18, "nodeName": "TypeVar", "type": "Any"}, {"lineNumber": 670, "col_offset": 21, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 670, "col_offset": 30, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 671, "col_offset": 20, "nodeName": "Var", "type": "Any"}, {"lineNumber": 671, "col_offset": 36, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 672, "col_offset": 19, "nodeName": "Var", "type": "Any"}, {"lineNumber": 673, "col_offset": 20, "nodeName": "Let", "type": "Any"}, {"lineNumber": 675, "col_offset": 12, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 678, "col_offset": 15, "nodeName": "Match", "type": "Any"}, {"lineNumber": 679, "col_offset": 12, "nodeName": "input_var", "type": "Any"}, {"lineNumber": 691, "col_offset": 22, "nodeName": "Function", "type": "Any"}, {"lineNumber": 691, "col_offset": 50, "nodeName": "body", "type": "Any"}, {"lineNumber": 691, "col_offset": 56, "nodeName": "int32", "type": "Any"}, {"lineNumber": 692, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "assert_parse_module_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 709, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 714, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 716, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 717, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 718, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 718, "col_offset": 50, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 719, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 720, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 720, "col_offset": 41, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 720, "col_offset": 52, "nodeName": "cons_constructor", "type": "Any"}, {"lineNumber": 720, "col_offset": 70, "nodeName": "nil_constructor", "type": "Any"}, {"lineNumber": 721, "col_offset": 8, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 723, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 724, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 725, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 726, "col_offset": 9, "nodeName": "input_var", "type": "Any"}, {"lineNumber": 726, "col_offset": 21, "nodeName": "cons_constructor", "type": "Any"}, {"lineNumber": 726, "col_offset": 38, "nodeName": "input_var", "type": "Any"}, {"lineNumber": 726, "col_offset": 69, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 726, "col_offset": 78, "nodeName": "int32", "type": "Any"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "make_singleton_var", "type": "Any"}, {"lineNumber": 738, "col_offset": 10, "nodeName": "LIST_DEFN", "type": "str"}, {"lineNumber": 744, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 744, "col_offset": 23, "nodeName": "DiagnosticError", "type": "Any"}, {"lineNumber": 745, "col_offset": 8, "nodeName": "parse_module", "type": "Callable[[Any], Any]"}, {"lineNumber": 759, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 759, "col_offset": 23, "nodeName": "DiagnosticError", "type": "Any"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 769, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 769, "col_offset": 23, "nodeName": "DiagnosticError", "type": "Any"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 779, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 779, "col_offset": 23, "nodeName": "DiagnosticError", "type": "Any"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 789, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 791, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 792, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 793, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 793, "col_offset": 45, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 794, "col_offset": 8, "nodeName": "extern_var", "type": "Any"}, {"lineNumber": 805, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 806, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 810, "col_offset": 13, "nodeName": "resnet", "type": "Any"}, {"lineNumber": 811, "col_offset": 11, "nodeName": "mod", "type": "Any"}, {"lineNumber": 812, "col_offset": 17, "nodeName": "parser", "type": "Any"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "ir", "type": "Any"}, {"lineNumber": 820, "col_offset": 8, "nodeName": "str_to_var", "type": "Dict[Any, Any]"}, {"lineNumber": 824, "col_offset": 8, "nodeName": "bind_map", "type": "Dict[Any, Any]"}, {"lineNumber": 824, "col_offset": 38, "nodeName": "const", "type": "Any"}, {"lineNumber": 826, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 826, "col_offset": 22, "nodeName": "main_fn", "type": "Any"}, {"lineNumber": 827, "col_offset": 14, "nodeName": "relay", "type": "Any"}, {"lineNumber": 827, "col_offset": 29, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 827, "col_offset": 54, "nodeName": "body", "type": "Any"}, {"lineNumber": 833, "col_offset": 18, "nodeName": "resnet", "type": "Any"}, {"lineNumber": 835, "col_offset": 11, "nodeName": "mod", "type": "Any"}, {"lineNumber": 836, "col_offset": 17, "nodeName": "parser", "type": "Any"}, {"lineNumber": 837, "col_offset": 4, "nodeName": "ir", "type": "Any"}, {"lineNumber": 848, "col_offset": 22, "nodeName": "call", "type": "Any"}, {"lineNumber": 848, "col_offset": 31, "nodeName": "ir", "type": "Any"}, {"lineNumber": 849, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 850, "col_offset": 11, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 851, "col_offset": 11, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 857, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 857, "col_offset": 16, "nodeName": "sys", "type": "module"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "relay", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "expr", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 103, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 30, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 30, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 30, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "bin_op", "type": "str"}, {"lineNumber": 213, "col_offset": 27, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 52, "nodeName": "parse_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 239, "col_offset": 26, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 244, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "error", "type": "Any"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 251, "col_offset": 39, "nodeName": "relay", "type": "Any"}, {"lineNumber": 251, "col_offset": 52, "nodeName": "const", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 259, "col_offset": 21, "nodeName": "const", "type": "Any"}, {"lineNumber": 259, "col_offset": 37, "nodeName": "Let", "type": "Any"}, {"lineNumber": 259, "col_offset": 47, "nodeName": "Y", "type": "Any"}, {"lineNumber": 259, "col_offset": 66, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 264, "col_offset": 31, "nodeName": "relay", "type": "Any"}, {"lineNumber": 266, "col_offset": 39, "nodeName": "relay", "type": "Any"}, {"lineNumber": 266, "col_offset": 52, "nodeName": "const", "type": "Any"}, {"lineNumber": 271, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 271, "col_offset": 40, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 271, "col_offset": 46, "nodeName": "UNIT", "type": "Any"}, {"lineNumber": 275, "col_offset": 36, "nodeName": "relay", "type": "Any"}, {"lineNumber": 279, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "error", "type": "Any"}, {"lineNumber": 284, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "error", "type": "Any"}, {"lineNumber": 289, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 291, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 293, "col_offset": 31, "nodeName": "relay", "type": "Any"}, {"lineNumber": 295, "col_offset": 34, "nodeName": "relay", "type": "Any"}, {"lineNumber": 300, "col_offset": 36, "nodeName": "relay", "type": "Any"}, {"lineNumber": 300, "col_offset": 55, "nodeName": "const", "type": "Any"}, {"lineNumber": 303, "col_offset": 39, "nodeName": "relay", "type": "Any"}, {"lineNumber": 303, "col_offset": 55, "nodeName": "X", "type": "Any"}, {"lineNumber": 306, "col_offset": 48, "nodeName": "relay", "type": "Any"}, {"lineNumber": 306, "col_offset": 64, "nodeName": "X", "type": "Any"}, {"lineNumber": 306, "col_offset": 67, "nodeName": "Y", "type": "Any"}, {"lineNumber": 306, "col_offset": 71, "nodeName": "add", "type": "Any"}, {"lineNumber": 306, "col_offset": 81, "nodeName": "X", "type": "Any"}, {"lineNumber": 306, "col_offset": 84, "nodeName": "Y", "type": "Any"}, {"lineNumber": 309, "col_offset": 55, "nodeName": "relay", "type": "Any"}, {"lineNumber": 309, "col_offset": 71, "nodeName": "X_ANNO", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 352, "col_offset": 17, "nodeName": "const", "type": "Any"}, {"lineNumber": 352, "col_offset": 36, "nodeName": "const", "type": "Any"}, {"lineNumber": 352, "col_offset": 52, "nodeName": "const", "type": "Any"}, {"lineNumber": 357, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 357, "col_offset": 23, "nodeName": "error", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 380, "col_offset": 32, "nodeName": "X", "type": "Any"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "Call", "type": "Any"}, {"lineNumber": 395, "col_offset": 23, "nodeName": "constant", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 408, "col_offset": 32, "nodeName": "X", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "Call", "type": "Any"}, {"lineNumber": 409, "col_offset": 23, "nodeName": "id_var", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "Call", "type": "Any"}, {"lineNumber": 423, "col_offset": 23, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 432, "col_offset": 19, "nodeName": "Function", "type": "Any"}, {"lineNumber": 432, "col_offset": 39, "nodeName": "X", "type": "Any"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "Let", "type": "Any"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 465, "col_offset": 31, "nodeName": "relay", "type": "Any"}, {"lineNumber": 465, "col_offset": 42, "nodeName": "get", "type": "Any"}, {"lineNumber": 472, "col_offset": 44, "nodeName": "relay", "type": "Any"}, {"lineNumber": 477, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 477, "col_offset": 49, "nodeName": "builtin_type", "type": "str"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 483, "col_offset": 18, "nodeName": "Var", "type": "Any"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 488, "col_offset": 18, "nodeName": "Var", "type": "Any"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 493, "col_offset": 18, "nodeName": "Var", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 498, "col_offset": 18, "nodeName": "Var", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 509, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 509, "col_offset": 47, "nodeName": "int32", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 520, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 520, "col_offset": 68, "nodeName": "int32", "type": "Any"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 530, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 531, "col_offset": 12, "nodeName": "Function", "type": "Any"}, {"lineNumber": 532, "col_offset": 80, "nodeName": "int32", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 544, "col_offset": 18, "nodeName": "Var", "type": "Any"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 551, "col_offset": 18, "nodeName": "Var", "type": "Any"}, {"lineNumber": 551, "col_offset": 60, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "relay", "type": "Any"}, {"lineNumber": 559, "col_offset": 12, "nodeName": "Var", "type": "Any"}, {"lineNumber": 560, "col_offset": 12, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 570, "col_offset": 45, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 570, "col_offset": 74, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 587, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 594, "col_offset": 15, "nodeName": "my_cons", "type": "Any"}, {"lineNumber": 595, "col_offset": 35, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 622, "col_offset": 12, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 622, "col_offset": 68, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 623, "col_offset": 12, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 623, "col_offset": 41, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 638, "col_offset": 12, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 638, "col_offset": 51, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 639, "col_offset": 12, "nodeName": "Constructor", "type": "Any"}, {"lineNumber": 639, "col_offset": 52, "nodeName": "glob_typ_var", "type": "Any"}, {"lineNumber": 659, "col_offset": 14, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 661, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 662, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 663, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 663, "col_offset": 54, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 664, "col_offset": 26, "nodeName": "relay", "type": "Any"}, {"lineNumber": 665, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 665, "col_offset": 45, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 665, "col_offset": 56, "nodeName": "cons_constructor", "type": "Any"}, {"lineNumber": 665, "col_offset": 74, "nodeName": "nil_constructor", "type": "Any"}, {"lineNumber": 666, "col_offset": 12, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 668, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 669, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 671, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 672, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 673, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 674, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 676, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 678, "col_offset": 15, "nodeName": "relay", "type": "Any"}, {"lineNumber": 689, "col_offset": 21, "nodeName": "is_complete", "type": "bool"}, {"lineNumber": 691, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 691, "col_offset": 38, "nodeName": "input_var", "type": "Any"}, {"lineNumber": 691, "col_offset": 64, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 692, "col_offset": 12, "nodeName": "length_var", "type": "Any"}, {"lineNumber": 718, "col_offset": 59, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 718, "col_offset": 68, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 726, "col_offset": 49, "nodeName": "nil_constructor", "type": "Any"}, {"lineNumber": 744, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 744, "col_offset": 23, "nodeName": "error", "type": "Any"}, {"lineNumber": 754, "col_offset": 14, "nodeName": "LIST_DEFN", "type": "str"}, {"lineNumber": 759, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 759, "col_offset": 23, "nodeName": "error", "type": "Any"}, {"lineNumber": 769, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 769, "col_offset": 23, "nodeName": "error", "type": "Any"}, {"lineNumber": 779, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 779, "col_offset": 23, "nodeName": "error", "type": "Any"}, {"lineNumber": 810, "col_offset": 13, "nodeName": "testing", "type": "Any"}, {"lineNumber": 812, "col_offset": 17, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 820, "col_offset": 19, "nodeName": "name_hint", "type": "Any"}, {"lineNumber": 824, "col_offset": 38, "nodeName": "relay", "type": "Any"}, {"lineNumber": 824, "col_offset": 50, "nodeName": "params", "type": "Any"}, {"lineNumber": 827, "col_offset": 29, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 833, "col_offset": 18, "nodeName": "testing", "type": "Any"}, {"lineNumber": 836, "col_offset": 17, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 837, "col_offset": 4, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 848, "col_offset": 31, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 849, "col_offset": 11, "nodeName": "call", "type": "Any"}, {"lineNumber": 850, "col_offset": 11, "nodeName": "call", "type": "Any"}, {"lineNumber": 851, "col_offset": 11, "nodeName": "call", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 207, "col_offset": 37, "nodeName": "get", "type": "Callable"}, {"lineNumber": 207, "col_offset": 52, "nodeName": "bin_op", "type": "str"}, {"lineNumber": 207, "col_offset": 60, "nodeName": "const", "type": "Any"}, {"lineNumber": 207, "col_offset": 76, "nodeName": "const", "type": "Any"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "meta_op", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "meta_op", "type": "Any"}, {"lineNumber": 251, "col_offset": 52, "nodeName": "relay", "type": "Any"}, {"lineNumber": 259, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 259, "col_offset": 37, "nodeName": "relay", "type": "Any"}, {"lineNumber": 259, "col_offset": 50, "nodeName": "const", "type": "Any"}, {"lineNumber": 266, "col_offset": 52, "nodeName": "relay", "type": "Any"}, {"lineNumber": 271, "col_offset": 52, "nodeName": "const", "type": "Any"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 291, "col_offset": 42, "nodeName": "const", "type": "Any"}, {"lineNumber": 293, "col_offset": 44, "nodeName": "const", "type": "Any"}, {"lineNumber": 293, "col_offset": 60, "nodeName": "const", "type": "Any"}, {"lineNumber": 295, "col_offset": 47, "nodeName": "const", "type": "Any"}, {"lineNumber": 295, "col_offset": 63, "nodeName": "const", "type": "Any"}, {"lineNumber": 295, "col_offset": 79, "nodeName": "const", "type": "Any"}, {"lineNumber": 300, "col_offset": 55, "nodeName": "relay", "type": "Any"}, {"lineNumber": 306, "col_offset": 71, "nodeName": "relay", "type": "Any"}, {"lineNumber": 352, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 352, "col_offset": 36, "nodeName": "relay", "type": "Any"}, {"lineNumber": 352, "col_offset": 52, "nodeName": "relay", "type": "Any"}, {"lineNumber": 357, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 380, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 381, "col_offset": 27, "nodeName": "const", "type": "Any"}, {"lineNumber": 381, "col_offset": 44, "nodeName": "Call", "type": "Any"}, {"lineNumber": 381, "col_offset": 55, "nodeName": "id_func", "type": "Any"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 394, "col_offset": 31, "nodeName": "const", "type": "Any"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 408, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 422, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 422, "col_offset": 31, "nodeName": "Y", "type": "Any"}, {"lineNumber": 422, "col_offset": 35, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 422, "col_offset": 50, "nodeName": "X", "type": "Any"}, {"lineNumber": 422, "col_offset": 53, "nodeName": "Y", "type": "Any"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 432, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 432, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 432, "col_offset": 54, "nodeName": "const", "type": "Any"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 450, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 450, "col_offset": 32, "nodeName": "Function", "type": "Any"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 453, "col_offset": 16, "nodeName": "Call", "type": "Any"}, {"lineNumber": 453, "col_offset": 27, "nodeName": "curried_mult", "type": "Any"}, {"lineNumber": 454, "col_offset": 16, "nodeName": "Call", "type": "Any"}, {"lineNumber": 465, "col_offset": 42, "nodeName": "op", "type": "Any"}, {"lineNumber": 465, "col_offset": 64, "nodeName": "const", "type": "Any"}, {"lineNumber": 483, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 483, "col_offset": 33, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 488, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 488, "col_offset": 33, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 493, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 493, "col_offset": 33, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 498, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 498, "col_offset": 33, "nodeName": "TensorType", "type": "Any"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 508, "col_offset": 27, "nodeName": "FuncType", "type": "Any"}, {"lineNumber": 508, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 509, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 509, "col_offset": 31, "nodeName": "const", "type": "Any"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 519, "col_offset": 27, "nodeName": "FuncType", "type": "Any"}, {"lineNumber": 519, "col_offset": 51, "nodeName": "int32", "type": "Any"}, {"lineNumber": 520, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 520, "col_offset": 52, "nodeName": "const", "type": "Any"}, {"lineNumber": 530, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 530, "col_offset": 27, "nodeName": "FuncType", "type": "Any"}, {"lineNumber": 530, "col_offset": 58, "nodeName": "int32", "type": "Any"}, {"lineNumber": 531, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 532, "col_offset": 64, "nodeName": "const", "type": "Any"}, {"lineNumber": 544, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 544, "col_offset": 33, "nodeName": "TupleType", "type": "Any"}, {"lineNumber": 551, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 551, "col_offset": 33, "nodeName": "TupleType", "type": "Any"}, {"lineNumber": 551, "col_offset": 60, "nodeName": "relay", "type": "Any"}, {"lineNumber": 559, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 559, "col_offset": 27, "nodeName": "TupleType", "type": "Any"}, {"lineNumber": 560, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 570, "col_offset": 45, "nodeName": "relay", "type": "Any"}, {"lineNumber": 622, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 622, "col_offset": 39, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 623, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 638, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 638, "col_offset": 39, "nodeName": "typ_var_a", "type": "Any"}, {"lineNumber": 639, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 639, "col_offset": 40, "nodeName": "typ_var_b", "type": "Any"}, {"lineNumber": 663, "col_offset": 63, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 663, "col_offset": 72, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 674, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 676, "col_offset": 12, "nodeName": "relay", "type": "Any"}, {"lineNumber": 676, "col_offset": 22, "nodeName": "const", "type": "Any"}, {"lineNumber": 676, "col_offset": 38, "nodeName": "Call", "type": "Any"}, {"lineNumber": 676, "col_offset": 49, "nodeName": "length_var", "type": "Any"}, {"lineNumber": 681, "col_offset": 16, "nodeName": "Clause", "type": "Any"}, {"lineNumber": 685, "col_offset": 20, "nodeName": "cons_case", "type": "Any"}, {"lineNumber": 687, "col_offset": 16, "nodeName": "Clause", "type": "Any"}, {"lineNumber": 708, "col_offset": 15, "nodeName": "LIST_DEFN", "type": "str"}, {"lineNumber": 708, "col_offset": 26, "nodeName": "match_keyword", "type": "str"}, {"lineNumber": 744, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 759, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 769, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 779, "col_offset": 23, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 810, "col_offset": 13, "nodeName": "relay", "type": "Any"}, {"lineNumber": 820, "col_offset": 19, "nodeName": "param", "type": "Any"}, {"lineNumber": 824, "col_offset": 17, "nodeName": "str_to_var", "type": "Dict[Any, Any]"}, {"lineNumber": 824, "col_offset": 57, "nodeName": "param", "type": "Any"}, {"lineNumber": 827, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 833, "col_offset": 18, "nodeName": "relay", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 207, "col_offset": 37, "nodeName": "BINARY_OPS", "type": "Dict[str, Any]"}, {"lineNumber": 207, "col_offset": 60, "nodeName": "relay", "type": "Any"}, {"lineNumber": 207, "col_offset": 76, "nodeName": "relay", "type": "Any"}, {"lineNumber": 259, "col_offset": 50, "nodeName": "relay", "type": "Any"}, {"lineNumber": 271, "col_offset": 52, "nodeName": "relay", "type": "Any"}, {"lineNumber": 291, "col_offset": 42, "nodeName": "relay", "type": "Any"}, {"lineNumber": 293, "col_offset": 44, "nodeName": "relay", "type": "Any"}, {"lineNumber": 293, "col_offset": 60, "nodeName": "relay", "type": "Any"}, {"lineNumber": 295, "col_offset": 47, "nodeName": "relay", "type": "Any"}, {"lineNumber": 295, "col_offset": 63, "nodeName": "relay", "type": "Any"}, {"lineNumber": 295, "col_offset": 79, "nodeName": "relay", "type": "Any"}, {"lineNumber": 381, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 381, "col_offset": 44, "nodeName": "relay", "type": "Any"}, {"lineNumber": 394, "col_offset": 31, "nodeName": "relay", "type": "Any"}, {"lineNumber": 409, "col_offset": 32, "nodeName": "const", "type": "Any"}, {"lineNumber": 422, "col_offset": 35, "nodeName": "relay", "type": "Any"}, {"lineNumber": 423, "col_offset": 34, "nodeName": "const", "type": "Any"}, {"lineNumber": 423, "col_offset": 50, "nodeName": "const", "type": "Any"}, {"lineNumber": 432, "col_offset": 54, "nodeName": "relay", "type": "Any"}, {"lineNumber": 450, "col_offset": 32, "nodeName": "relay", "type": "Any"}, {"lineNumber": 450, "col_offset": 48, "nodeName": "Y", "type": "Any"}, {"lineNumber": 450, "col_offset": 52, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 450, "col_offset": 67, "nodeName": "X", "type": "Any"}, {"lineNumber": 450, "col_offset": 70, "nodeName": "Y", "type": "Any"}, {"lineNumber": 453, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 454, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 455, "col_offset": 20, "nodeName": "Call", "type": "Any"}, {"lineNumber": 455, "col_offset": 31, "nodeName": "curried_mult", "type": "Any"}, {"lineNumber": 465, "col_offset": 42, "nodeName": "relay", "type": "Any"}, {"lineNumber": 465, "col_offset": 64, "nodeName": "relay", "type": "Any"}, {"lineNumber": 483, "col_offset": 33, "nodeName": "relay", "type": "Any"}, {"lineNumber": 488, "col_offset": 33, "nodeName": "relay", "type": "Any"}, {"lineNumber": 493, "col_offset": 33, "nodeName": "relay", "type": "Any"}, {"lineNumber": 498, "col_offset": 33, "nodeName": "relay", "type": "Any"}, {"lineNumber": 508, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 509, "col_offset": 31, "nodeName": "relay", "type": "Any"}, {"lineNumber": 519, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 519, "col_offset": 43, "nodeName": "int32", "type": "Any"}, {"lineNumber": 520, "col_offset": 28, "nodeName": "Var", "type": "Any"}, {"lineNumber": 520, "col_offset": 43, "nodeName": "int32", "type": "Any"}, {"lineNumber": 520, "col_offset": 52, "nodeName": "relay", "type": "Any"}, {"lineNumber": 530, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 530, "col_offset": 43, "nodeName": "int32", "type": "Any"}, {"lineNumber": 530, "col_offset": 50, "nodeName": "int32", "type": "Any"}, {"lineNumber": 532, "col_offset": 17, "nodeName": "Var", "type": "Any"}, {"lineNumber": 532, "col_offset": 32, "nodeName": "int32", "type": "Any"}, {"lineNumber": 532, "col_offset": 40, "nodeName": "Var", "type": "Any"}, {"lineNumber": 532, "col_offset": 55, "nodeName": "int32", "type": "Any"}, {"lineNumber": 532, "col_offset": 64, "nodeName": "relay", "type": "Any"}, {"lineNumber": 544, "col_offset": 33, "nodeName": "relay", "type": "Any"}, {"lineNumber": 551, "col_offset": 33, "nodeName": "relay", "type": "Any"}, {"lineNumber": 551, "col_offset": 50, "nodeName": "int32", "type": "Any"}, {"lineNumber": 551, "col_offset": 73, "nodeName": "const", "type": "Any"}, {"lineNumber": 559, "col_offset": 27, "nodeName": "relay", "type": "Any"}, {"lineNumber": 559, "col_offset": 44, "nodeName": "int32", "type": "Any"}, {"lineNumber": 559, "col_offset": 51, "nodeName": "int32", "type": "Any"}, {"lineNumber": 560, "col_offset": 25, "nodeName": "const", "type": "Any"}, {"lineNumber": 560, "col_offset": 41, "nodeName": "const", "type": "Any"}, {"lineNumber": 622, "col_offset": 48, "nodeName": "list_var", "type": "Any"}, {"lineNumber": 622, "col_offset": 57, "nodeName": "typ_var", "type": "Any"}, {"lineNumber": 676, "col_offset": 22, "nodeName": "relay", "type": "Any"}, {"lineNumber": 676, "col_offset": 38, "nodeName": "relay", "type": "Any"}, {"lineNumber": 676, "col_offset": 62, "nodeName": "rest_var", "type": "Any"}, {"lineNumber": 681, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 682, "col_offset": 20, "nodeName": "PatternConstructor", "type": "Any"}, {"lineNumber": 683, "col_offset": 24, "nodeName": "cons_constructor", "type": "Any"}, {"lineNumber": 687, "col_offset": 16, "nodeName": "relay", "type": "Any"}, {"lineNumber": 687, "col_offset": 29, "nodeName": "PatternConstructor", "type": "Any"}, {"lineNumber": 687, "col_offset": 54, "nodeName": "nil_constructor", "type": "Any"}, {"lineNumber": 687, "col_offset": 76, "nodeName": "const", "type": "Any"}, {"lineNumber": 824, "col_offset": 28, "nodeName": "param", "type": "Any"}, {"lineNumber": 381, "col_offset": 65, "nodeName": "const", "type": "Any"}, {"lineNumber": 409, "col_offset": 32, "nodeName": "relay", "type": "Any"}, {"lineNumber": 423, "col_offset": 34, "nodeName": "relay", "type": "Any"}, {"lineNumber": 423, "col_offset": 50, "nodeName": "relay", "type": "Any"}, {"lineNumber": 450, "col_offset": 52, "nodeName": "relay", "type": "Any"}, {"lineNumber": 453, "col_offset": 42, "nodeName": "const", "type": "Any"}, {"lineNumber": 455, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 456, "col_offset": 21, "nodeName": "const", "type": "Any"}, {"lineNumber": 498, "col_offset": 51, "nodeName": "Any", "type": "Any"}, {"lineNumber": 520, "col_offset": 28, "nodeName": "relay", "type": "Any"}, {"lineNumber": 532, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 532, "col_offset": 40, "nodeName": "relay", "type": "Any"}, {"lineNumber": 551, "col_offset": 73, "nodeName": "relay", "type": "Any"}, {"lineNumber": 560, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 560, "col_offset": 41, "nodeName": "relay", "type": "Any"}, {"lineNumber": 682, "col_offset": 20, "nodeName": "relay", "type": "Any"}, {"lineNumber": 687, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 687, "col_offset": 76, "nodeName": "relay", "type": "Any"}, {"lineNumber": 381, "col_offset": 65, "nodeName": "relay", "type": "Any"}, {"lineNumber": 453, "col_offset": 42, "nodeName": "relay", "type": "Any"}, {"lineNumber": 455, "col_offset": 46, "nodeName": "const", "type": "Any"}, {"lineNumber": 456, "col_offset": 21, "nodeName": "relay", "type": "Any"}, {"lineNumber": 498, "col_offset": 51, "nodeName": "tir", "type": "Any"}, {"lineNumber": 683, "col_offset": 43, "nodeName": "PatternWildcard", "type": "Any"}, {"lineNumber": 683, "col_offset": 68, "nodeName": "PatternVar", "type": "Any"}, {"lineNumber": 683, "col_offset": 85, "nodeName": "rest_var", "type": "Any"}, {"lineNumber": 455, "col_offset": 46, "nodeName": "relay", "type": "Any"}, {"lineNumber": 498, "col_offset": 51, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 683, "col_offset": 43, "nodeName": "relay", "type": "Any"}, {"lineNumber": 683, "col_offset": 68, "nodeName": "relay", "type": "Any"}]