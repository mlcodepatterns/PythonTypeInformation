[{"lineNumber": 25, "col_offset": 0, "nodeName": "quantize_test_driver", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "test_float32_to_uint8", "type": "Callable[[], Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "test_float32_to_int8", "type": "Callable[[], Any]"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "test_channelwise_axis_0", "type": "Callable[[], Any]"}, {"lineNumber": 112, "col_offset": 0, "nodeName": "test_channelwise_axis_1", "type": "Callable[[], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "shape", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "shape", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "output_zero_point", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "output_scale", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "quant_args", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "quant_args", "type": "Dict[str, Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 136, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "in_data", "type": "Any"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "const", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "const", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "quantize", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "Function", "type": "Any"}, {"lineNumber": 37, "col_offset": 69, "nodeName": "quantized_output", "type": "Any"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "from_expr", "type": "Any"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "mod", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "rt_mod", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "quantize_test_driver", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "quantize_test_driver", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "quantize_test_driver", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "quantize_test_driver", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "test_float32_to_uint8", "type": "Callable[[], Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "test_float32_to_int8", "type": "Callable[[], Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "test_channelwise_axis_0", "type": "Callable[[], Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "test_channelwise_axis_1", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "relay", "type": "Any"}, {"lineNumber": 27, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 27, "col_offset": 60, "nodeName": "in_dtype", "type": "str"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "relay", "type": "Any"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "quant_args", "type": "Dict[str, Any]"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "relay", "type": "Any"}, {"lineNumber": 29, "col_offset": 31, "nodeName": "quant_args", "type": "Dict[str, Any]"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "op", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "output_scale", "type": "Any"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "output_zero_point", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "axis", "type": "int"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "out_dtype", "type": "str"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "relay", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "free_vars", "type": "Any"}, {"lineNumber": 37, "col_offset": 50, "nodeName": "quantized_output", "type": "Any"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "IRModule", "type": "Any"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "PassContext", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "graph", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "lib", "type": "Any"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "build", "type": "Any"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "mod", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "create", "type": "Any"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "graph", "type": "Any"}, {"lineNumber": 41, "col_offset": 45, "nodeName": "lib", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "set_input", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "set_input", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "res", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "verify_output_data", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "out_dtype", "type": "str"}, {"lineNumber": 57, "col_offset": 36, "nodeName": "int32", "type": "Any"}, {"lineNumber": 57, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "quant_args", "type": "Dict[str, Any]"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "int32", "type": "Any"}, {"lineNumber": 79, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "quant_args", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "astype", "type": "Any"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "astype", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "quant_args", "type": "Dict[str, Any]"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "astype", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "astype", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "quant_args", "type": "Dict[str, Any]"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "qnn", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "transform", "type": "Any"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "relay", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "graph_runtime", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "rt_mod", "type": "Any"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "in_data", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "rt_mod", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "params", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "rt_mod", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 57, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "relay", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "relay", "type": "Any"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 41, "col_offset": 54, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "get_output", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 41, "col_offset": 54, "nodeName": "tvm", "type": "Any"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "rt_mod", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "np", "type": "module"}]