[{"lineNumber": 38, "col_offset": 0, "nodeName": "prob_to_logit", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "test_mgp_getF_v1", "type": "Callable[[], Any]"}, {"lineNumber": 1943, "col_offset": 0, "nodeName": "test_cached_property_v1", "type": "Callable[[], Any]"}, {"lineNumber": 1985, "col_offset": 0, "nodeName": "test_independent_v1", "type": "Callable[[], Any]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "getF", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "getF", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "nd", "type": "Any"}, {"lineNumber": 63, "col_offset": 9, "nodeName": "nd", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "sym", "type": "Any"}, {"lineNumber": 64, "col_offset": 10, "nodeName": "sym", "type": "Any"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 149, "col_offset": 21, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 289, "col_offset": 21, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 371, "col_offset": 25, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 433, "col_offset": 22, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 468, "col_offset": 24, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 528, "col_offset": 31, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 582, "col_offset": 26, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 643, "col_offset": 22, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 652, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 713, "col_offset": 21, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 722, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 782, "col_offset": 20, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 791, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 831, "col_offset": 24, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 840, "col_offset": 4, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 841, "col_offset": 4, "nodeName": "batch_shapes", "type": "List[Optional[Tuple[int, int]]]"}, {"lineNumber": 901, "col_offset": 19, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 910, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 949, "col_offset": 29, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 958, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 995, "col_offset": 16, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 1004, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1045, "col_offset": 21, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 1054, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1115, "col_offset": 26, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 1142, "col_offset": 4, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 1143, "col_offset": 4, "nodeName": "batch_shapes", "type": "List[Optional[Tuple[int, int]]]"}, {"lineNumber": 1144, "col_offset": 4, "nodeName": "sample_shapes", "type": "List[Optional[Union[Tuple[int], Tuple[int, int]]]]"}, {"lineNumber": 1207, "col_offset": 23, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 1220, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1237, "col_offset": 4, "nodeName": "prefix_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1238, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1238, "col_offset": 17, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1286, "col_offset": 24, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 1298, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1347, "col_offset": 31, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 1364, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1398, "col_offset": 26, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 1418, "col_offset": 4, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 1419, "col_offset": 4, "nodeName": "batch_shapes", "type": "List[Optional[Tuple[int, int]]]"}, {"lineNumber": 1420, "col_offset": 4, "nodeName": "sample_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 1511, "col_offset": 32, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 1527, "col_offset": 4, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 1528, "col_offset": 4, "nodeName": "batch_shapes", "type": "List[Optional[Tuple[int, int]]]"}, {"lineNumber": 1529, "col_offset": 4, "nodeName": "sample_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 1590, "col_offset": 39, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 1607, "col_offset": 4, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 1608, "col_offset": 4, "nodeName": "batch_shapes", "type": "List[Optional[Tuple[int, int]]]"}, {"lineNumber": 1609, "col_offset": 4, "nodeName": "sample_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 1659, "col_offset": 18, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 1679, "col_offset": 4, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 1680, "col_offset": 4, "nodeName": "loc_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 1681, "col_offset": 4, "nodeName": "cov_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 1778, "col_offset": 25, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 1787, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1844, "col_offset": 30, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 1860, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1904, "col_offset": 31, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 1924, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1945, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1947, "col_offset": 4, "nodeName": "scale", "type": "float"}, {"lineNumber": 1949, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 1963, "col_offset": 21, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 1968, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1970, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 1976, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1987, "col_offset": 26, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 1998, "col_offset": 4, "nodeName": "event_shapes", "type": "List[Union[Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 1999, "col_offset": 4, "nodeName": "batch_shapes", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 2051, "col_offset": 4, "nodeName": "monte_carlo_test", "type": "bool"}, {"lineNumber": 2052, "col_offset": 4, "nodeName": "repeated_times", "type": "int"}, {"lineNumber": 2053, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 2057, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2057, "col_offset": 17, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 2064, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2075, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2085, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2095, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2095, "col_offset": 17, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 2101, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2101, "col_offset": 17, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 2111, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2122, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2122, "col_offset": 17, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 2129, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2129, "col_offset": 17, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 2134, "col_offset": 4, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 2135, "col_offset": 4, "nodeName": "loc_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 2136, "col_offset": 4, "nodeName": "cov_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 2145, "col_offset": 4, "nodeName": "batch_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 2145, "col_offset": 19, "nodeName": "loc_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 2159, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2171, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2171, "col_offset": 17, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 2188, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2188, "col_offset": 17, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 2210, "col_offset": 21, "nodeName": "StochasticBlock", "type": "Any"}, {"lineNumber": 2223, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2224, "col_offset": 8, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 2241, "col_offset": 23, "nodeName": "StochasticBlock", "type": "Any"}, {"lineNumber": 2250, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2251, "col_offset": 8, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 2265, "col_offset": 22, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 2269, "col_offset": 26, "nodeName": "StochasticBlock", "type": "Any"}, {"lineNumber": 2276, "col_offset": 23, "nodeName": "StochasticBlock", "type": "Any"}, {"lineNumber": 2282, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2283, "col_offset": 8, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 2304, "col_offset": 8, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 2320, "col_offset": 25, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 2334, "col_offset": 4, "nodeName": "_s", "type": "Any"}, {"lineNumber": 2335, "col_offset": 4, "nodeName": "psd_matrix", "type": "Any"}, {"lineNumber": 2377, "col_offset": 59, "nodeName": "constraints_zoo", "type": "List[Union[Tuple[str, Tuple[()], List[Any]], Tuple[str, List[Any], List[Any]]]]"}, {"lineNumber": 2390, "col_offset": 24, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 2424, "col_offset": 4, "nodeName": "test_sample", "type": "Any"}, {"lineNumber": 2426, "col_offset": 45, "nodeName": "constraints_zoo", "type": "List[Union[Tuple[str, Tuple[()]], Tuple[str, List[Any]]]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "utils", "type": "Any"}, {"lineNumber": 63, "col_offset": 9, "nodeName": "mx", "type": "Any"}, {"lineNumber": 64, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 65, "col_offset": 53, "nodeName": "nd", "type": "Any"}, {"lineNumber": 66, "col_offset": 55, "nodeName": "sym", "type": "Any"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "nd", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 90, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "low", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "high", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 105, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "low", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "high", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 119, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "low", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "high", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "low", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "high", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 161, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 175, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 189, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 203, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 203, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 207, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 231, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 231, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 236, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 245, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 245, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 250, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 259, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 259, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 273, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 273, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 277, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 301, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 301, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 306, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "desired_shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 313, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 313, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 313, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 327, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 327, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 327, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 332, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 341, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 341, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 346, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 355, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 355, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 355, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 359, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 383, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 383, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 383, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 386, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 394, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 394, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 394, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 398, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 406, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 406, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 406, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 410, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 418, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 418, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 422, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 444, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 444, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 444, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "rate", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 447, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 453, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 453, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 453, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "rate", "type": "Any"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 457, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 481, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 481, "col_offset": 26, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 481, "col_offset": 39, "nodeName": "product", "type": "Callable"}, {"lineNumber": 481, "col_offset": 57, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "prob", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 484, "col_offset": 16, "nodeName": "prob", "type": "Any"}, {"lineNumber": 485, "col_offset": 11, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 488, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 496, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 496, "col_offset": 26, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 496, "col_offset": 39, "nodeName": "product", "type": "Callable"}, {"lineNumber": 496, "col_offset": 57, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "prob", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 498, "col_offset": 16, "nodeName": "prob", "type": "Any"}, {"lineNumber": 499, "col_offset": 11, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 502, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 510, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 510, "col_offset": 26, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 510, "col_offset": 39, "nodeName": "product", "type": "Callable"}, {"lineNumber": 510, "col_offset": 57, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "prob", "type": "Any"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 513, "col_offset": 16, "nodeName": "prob", "type": "Any"}, {"lineNumber": 514, "col_offset": 11, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 517, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 541, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 541, "col_offset": 26, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 541, "col_offset": 39, "nodeName": "product", "type": "Callable"}, {"lineNumber": 541, "col_offset": 57, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "prob", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 545, "col_offset": 16, "nodeName": "prob", "type": "Any"}, {"lineNumber": 546, "col_offset": 11, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 549, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 558, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 558, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 558, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 559, "col_offset": 12, "nodeName": "func", "type": "str"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 593, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 593, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 593, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 597, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 605, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 605, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 605, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 609, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 617, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 617, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 617, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 621, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 629, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 629, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 629, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 632, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 655, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 655, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 655, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 655, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "concentration", "type": "Any"}, {"lineNumber": 657, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 660, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 669, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 669, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 669, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 670, "col_offset": 8, "nodeName": "concentration", "type": "Any"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 672, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 674, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 676, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 683, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 683, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 683, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "concentration", "type": "Any"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 687, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 688, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 697, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 697, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 697, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "concentration", "type": "Any"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 701, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 725, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 725, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 725, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 725, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 726, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 727, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 730, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 732, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 739, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 739, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 739, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 739, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 742, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 744, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 746, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 753, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 753, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 753, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 755, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 757, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 758, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 767, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 767, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 767, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 767, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 771, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 773, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 774, "col_offset": 8, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 794, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 794, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 794, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 794, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 795, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 797, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 798, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 799, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 808, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 808, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 808, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 808, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 809, "col_offset": 12, "nodeName": "func", "type": "str"}, {"lineNumber": 844, "col_offset": 8, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 844, "col_offset": 21, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 844, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 844, "col_offset": 54, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 844, "col_offset": 68, "nodeName": "batch_shapes", "type": "List[Optional[Tuple[int, int]]]"}, {"lineNumber": 845, "col_offset": 12, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 861, "col_offset": 8, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 861, "col_offset": 21, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 861, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 861, "col_offset": 54, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 862, "col_offset": 12, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 877, "col_offset": 8, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 877, "col_offset": 21, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 877, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 877, "col_offset": 54, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 878, "col_offset": 12, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 913, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 913, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 913, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 913, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 914, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 915, "col_offset": 8, "nodeName": "beta", "type": "Any"}, {"lineNumber": 916, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 917, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 918, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 920, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 927, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 927, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 927, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 927, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 928, "col_offset": 12, "nodeName": "func", "type": "str"}, {"lineNumber": 961, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 961, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 961, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 961, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 962, "col_offset": 8, "nodeName": "df1", "type": "Any"}, {"lineNumber": 963, "col_offset": 8, "nodeName": "df2", "type": "Any"}, {"lineNumber": 964, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 965, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 966, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 968, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 975, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 975, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 975, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 975, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 976, "col_offset": 12, "nodeName": "func", "type": "str"}, {"lineNumber": 1007, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1007, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1007, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1007, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1008, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1009, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1010, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 1011, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1012, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 1013, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1015, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1022, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1022, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1022, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1022, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1023, "col_offset": 12, "nodeName": "func", "type": "str"}, {"lineNumber": 1057, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1057, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1057, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1057, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1058, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1059, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1060, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1061, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 1062, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1064, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1071, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1071, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1071, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1071, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1072, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1073, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1074, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1075, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 1076, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1078, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1085, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1085, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1085, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1085, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1086, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1087, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1088, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1089, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 1090, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1092, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1099, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1099, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1099, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1099, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1100, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1101, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1102, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 1103, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1105, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1147, "col_offset": 8, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1147, "col_offset": 21, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1147, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1147, "col_offset": 54, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 1147, "col_offset": 68, "nodeName": "batch_shapes", "type": "List[Optional[Tuple[int, int]]]"}, {"lineNumber": 1163, "col_offset": 8, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1163, "col_offset": 21, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1163, "col_offset": 34, "nodeName": "sample_shape", "type": "Optional[Union[Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 1163, "col_offset": 50, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1163, "col_offset": 68, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 1163, "col_offset": 82, "nodeName": "batch_shapes", "type": "List[Optional[Tuple[int, int]]]"}, {"lineNumber": 1163, "col_offset": 96, "nodeName": "sample_shapes", "type": "List[Optional[Union[Tuple[int], Tuple[int, int]]]]"}, {"lineNumber": 1181, "col_offset": 8, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1181, "col_offset": 21, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1181, "col_offset": 34, "nodeName": "sample_shape", "type": "Optional[Union[Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 1181, "col_offset": 50, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1181, "col_offset": 68, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 1181, "col_offset": 82, "nodeName": "batch_shapes", "type": "List[Optional[Tuple[int, int]]]"}, {"lineNumber": 1181, "col_offset": 96, "nodeName": "sample_shapes", "type": "List[Optional[Union[Tuple[int], Tuple[int, int]]]]"}, {"lineNumber": 1222, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1222, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1222, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1222, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1223, "col_offset": 12, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1239, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 1240, "col_offset": 8, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1241, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 1242, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1246, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1246, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1246, "col_offset": 26, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1246, "col_offset": 39, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1246, "col_offset": 57, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1247, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 1248, "col_offset": 8, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1249, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 1250, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 1250, "col_offset": 16, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1251, "col_offset": 11, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1253, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 1254, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1256, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1257, "col_offset": 8, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1262, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1262, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1262, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1262, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1263, "col_offset": 12, "nodeName": "func", "type": "str"}, {"lineNumber": 1299, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1299, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1299, "col_offset": 26, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1299, "col_offset": 39, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1299, "col_offset": 57, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1300, "col_offset": 8, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1301, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 1302, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 1302, "col_offset": 16, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1303, "col_offset": 11, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1305, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 1306, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1308, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1309, "col_offset": 8, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1314, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1314, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1314, "col_offset": 26, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1314, "col_offset": 39, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1314, "col_offset": 57, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1315, "col_offset": 8, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1316, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 1317, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 1317, "col_offset": 16, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1318, "col_offset": 11, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1320, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 1321, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1323, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1324, "col_offset": 8, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1329, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1329, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1329, "col_offset": 26, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1329, "col_offset": 39, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1329, "col_offset": 57, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1330, "col_offset": 8, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1331, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 1332, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 1332, "col_offset": 16, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1333, "col_offset": 11, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1335, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 1336, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1338, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1339, "col_offset": 8, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1366, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1366, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1366, "col_offset": 26, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1366, "col_offset": 39, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1366, "col_offset": 57, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1367, "col_offset": 8, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1368, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 1368, "col_offset": 16, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1369, "col_offset": 11, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1372, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 1373, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1378, "col_offset": 8, "nodeName": "desired_shape", "type": "Union[Tuple[Union[Tuple[int], int, Tuple[()], Tuple[int, int]]], Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1381, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1381, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1381, "col_offset": 26, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1381, "col_offset": 39, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1381, "col_offset": 57, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1382, "col_offset": 8, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1383, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 1384, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 1384, "col_offset": 16, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1385, "col_offset": 11, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1387, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 1388, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1390, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1391, "col_offset": 8, "nodeName": "desired_shape", "type": "Union[Tuple[Union[Tuple[int], int, Tuple[()], Tuple[int, int]]], Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1423, "col_offset": 8, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1423, "col_offset": 21, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1423, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1423, "col_offset": 54, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 1423, "col_offset": 68, "nodeName": "batch_shapes", "type": "List[Optional[Tuple[int, int]]]"}, {"lineNumber": 1439, "col_offset": 8, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1439, "col_offset": 21, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1439, "col_offset": 34, "nodeName": "sample_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 1439, "col_offset": 50, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1439, "col_offset": 68, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 1439, "col_offset": 82, "nodeName": "batch_shapes", "type": "List[Optional[Tuple[int, int]]]"}, {"lineNumber": 1439, "col_offset": 96, "nodeName": "sample_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 1458, "col_offset": 8, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1458, "col_offset": 21, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1458, "col_offset": 34, "nodeName": "sample_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 1458, "col_offset": 50, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1458, "col_offset": 68, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 1458, "col_offset": 82, "nodeName": "batch_shapes", "type": "List[Optional[Tuple[int, int]]]"}, {"lineNumber": 1458, "col_offset": 96, "nodeName": "sample_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 1488, "col_offset": 8, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1488, "col_offset": 21, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1488, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1488, "col_offset": 54, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 1488, "col_offset": 68, "nodeName": "batch_shapes", "type": "List[Optional[Tuple[int, int]]]"}, {"lineNumber": 1532, "col_offset": 8, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1532, "col_offset": 21, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1532, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1532, "col_offset": 54, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 1532, "col_offset": 68, "nodeName": "batch_shapes", "type": "List[Optional[Tuple[int, int]]]"}, {"lineNumber": 1548, "col_offset": 8, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1548, "col_offset": 21, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1548, "col_offset": 34, "nodeName": "sample_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 1548, "col_offset": 50, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1548, "col_offset": 68, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 1548, "col_offset": 82, "nodeName": "batch_shapes", "type": "List[Optional[Tuple[int, int]]]"}, {"lineNumber": 1548, "col_offset": 96, "nodeName": "sample_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 1570, "col_offset": 8, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1570, "col_offset": 21, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1570, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1570, "col_offset": 54, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 1570, "col_offset": 68, "nodeName": "batch_shapes", "type": "List[Optional[Tuple[int, int]]]"}, {"lineNumber": 1612, "col_offset": 8, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1612, "col_offset": 21, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1612, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1612, "col_offset": 54, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 1612, "col_offset": 68, "nodeName": "batch_shapes", "type": "List[Optional[Tuple[int, int]]]"}, {"lineNumber": 1633, "col_offset": 8, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1633, "col_offset": 21, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1633, "col_offset": 34, "nodeName": "sample_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 1633, "col_offset": 50, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1633, "col_offset": 68, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 1633, "col_offset": 82, "nodeName": "batch_shapes", "type": "List[Optional[Tuple[int, int]]]"}, {"lineNumber": 1633, "col_offset": 96, "nodeName": "sample_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 1675, "col_offset": 8, "nodeName": "precision", "type": "Any"}, {"lineNumber": 1676, "col_offset": 8, "nodeName": "precision_t", "type": "Any"}, {"lineNumber": 1689, "col_offset": 8, "nodeName": "loc_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 1689, "col_offset": 19, "nodeName": "cov_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 1689, "col_offset": 30, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1689, "col_offset": 45, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1689, "col_offset": 63, "nodeName": "loc_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 1689, "col_offset": 75, "nodeName": "cov_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 1689, "col_offset": 87, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 1690, "col_offset": 12, "nodeName": "cov_type", "type": "str"}, {"lineNumber": 1712, "col_offset": 8, "nodeName": "loc_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 1712, "col_offset": 19, "nodeName": "cov_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 1712, "col_offset": 30, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1712, "col_offset": 45, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1712, "col_offset": 63, "nodeName": "loc_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 1712, "col_offset": 75, "nodeName": "cov_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 1712, "col_offset": 87, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 1713, "col_offset": 12, "nodeName": "cov_type", "type": "str"}, {"lineNumber": 1745, "col_offset": 8, "nodeName": "loc_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 1745, "col_offset": 19, "nodeName": "cov_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 1745, "col_offset": 30, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1745, "col_offset": 45, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1745, "col_offset": 63, "nodeName": "loc_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 1745, "col_offset": 75, "nodeName": "cov_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 1745, "col_offset": 87, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 1746, "col_offset": 12, "nodeName": "cov_type", "type": "str"}, {"lineNumber": 1790, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1790, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1790, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1790, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1791, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1792, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 1793, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1795, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1801, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1801, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1801, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1801, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1802, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1803, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1804, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 1805, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1807, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1808, "col_offset": 8, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1813, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1813, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1813, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1813, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1814, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1815, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1816, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 1817, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1819, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1820, "col_offset": 8, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1825, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1825, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1825, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1825, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1826, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1827, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1828, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 1829, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1831, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1832, "col_offset": 8, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1863, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1863, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1863, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1863, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1864, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1866, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1868, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1869, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 1870, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1879, "col_offset": 8, "nodeName": "loc_expected_grad", "type": "Any"}, {"lineNumber": 1888, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1888, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1888, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1888, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1889, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1891, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1895, "col_offset": 8, "nodeName": "expected_shape", "type": "Any"}, {"lineNumber": 1896, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 1897, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1926, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 1926, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1926, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1926, "col_offset": 46, "nodeName": "shapes", "type": "List[Union[Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 1927, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1929, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1931, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1932, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 1933, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1945, "col_offset": 8, "nodeName": "normal", "type": "Any"}, {"lineNumber": 1946, "col_offset": 4, "nodeName": "attach_grad", "type": "Any"}, {"lineNumber": 1959, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 1961, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1968, "col_offset": 8, "nodeName": "normal", "type": "Any"}, {"lineNumber": 1969, "col_offset": 4, "nodeName": "attach_grad", "type": "Any"}, {"lineNumber": 1970, "col_offset": 10, "nodeName": "DummyBlock", "type": "Type[Any]"}, {"lineNumber": 1972, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 1974, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1976, "col_offset": 8, "nodeName": "normal", "type": "Any"}, {"lineNumber": 1977, "col_offset": 4, "nodeName": "attach_grad", "type": "Any"}, {"lineNumber": 1978, "col_offset": 4, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1980, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 1982, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 2000, "col_offset": 9, "nodeName": "batch_shape", "type": "Union[Tuple[int, int], Tuple[int]]"}, {"lineNumber": 2000, "col_offset": 22, "nodeName": "event_shape", "type": "Union[Tuple[int], Tuple[int, int]]"}, {"lineNumber": 2000, "col_offset": 38, "nodeName": "product", "type": "Callable"}, {"lineNumber": 2000, "col_offset": 56, "nodeName": "batch_shapes", "type": "List[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 2000, "col_offset": 70, "nodeName": "event_shapes", "type": "List[Union[Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 2001, "col_offset": 12, "nodeName": "hybridize", "type": "Union[bool, int]"}, {"lineNumber": 2023, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 2024, "col_offset": 8, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 2032, "col_offset": 8, "nodeName": "kl", "type": "Any"}, {"lineNumber": 2033, "col_offset": 8, "nodeName": "mc_approx", "type": "Any"}, {"lineNumber": 2047, "col_offset": 8, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 2058, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2058, "col_offset": 15, "nodeName": "Uniform", "type": "Any"}, {"lineNumber": 2064, "col_offset": 17, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 2064, "col_offset": 29, "nodeName": "Laplace", "type": "Any"}, {"lineNumber": 2064, "col_offset": 42, "nodeName": "Cauchy", "type": "Any"}, {"lineNumber": 2064, "col_offset": 54, "nodeName": "Gumbel", "type": "Any"}, {"lineNumber": 2065, "col_offset": 12, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2065, "col_offset": 21, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 2075, "col_offset": 17, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 2076, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2076, "col_offset": 15, "nodeName": "Poisson", "type": "Any"}, {"lineNumber": 2079, "col_offset": 11, "nodeName": "monte_carlo_test", "type": "bool"}, {"lineNumber": 2085, "col_offset": 17, "nodeName": "Exponential", "type": "Any"}, {"lineNumber": 2085, "col_offset": 34, "nodeName": "Geometric", "type": "Any"}, {"lineNumber": 2086, "col_offset": 12, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2086, "col_offset": 21, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 2096, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2096, "col_offset": 15, "nodeName": "Pareto", "type": "Any"}, {"lineNumber": 2102, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2102, "col_offset": 15, "nodeName": "HalfNormal", "type": "Any"}, {"lineNumber": 2105, "col_offset": 11, "nodeName": "monte_carlo_test", "type": "bool"}, {"lineNumber": 2111, "col_offset": 17, "nodeName": "Gamma", "type": "Any"}, {"lineNumber": 2111, "col_offset": 28, "nodeName": "Beta", "type": "Any"}, {"lineNumber": 2112, "col_offset": 12, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2112, "col_offset": 21, "nodeName": "shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int], int]]"}, {"lineNumber": 2123, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 2124, "col_offset": 8, "nodeName": "prob", "type": "Any"}, {"lineNumber": 2125, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2130, "col_offset": 8, "nodeName": "prob", "type": "Any"}, {"lineNumber": 2131, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2137, "col_offset": 8, "nodeName": "loc_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 2137, "col_offset": 19, "nodeName": "cov_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 2137, "col_offset": 30, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 2137, "col_offset": 45, "nodeName": "product", "type": "Callable"}, {"lineNumber": 2137, "col_offset": 63, "nodeName": "loc_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 2137, "col_offset": 75, "nodeName": "cov_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 2137, "col_offset": 87, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 2138, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 2139, "col_offset": 8, "nodeName": "_s", "type": "Any"}, {"lineNumber": 2140, "col_offset": 8, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 2141, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2142, "col_offset": 8, "nodeName": "desired_shape", "type": "Any"}, {"lineNumber": 2147, "col_offset": 8, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 2147, "col_offset": 21, "nodeName": "batch_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 2147, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 2147, "col_offset": 54, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 2147, "col_offset": 68, "nodeName": "batch_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 2148, "col_offset": 8, "nodeName": "desired_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 2149, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2149, "col_offset": 15, "nodeName": "Dirichlet", "type": "Any"}, {"lineNumber": 2153, "col_offset": 11, "nodeName": "monte_carlo_test", "type": "bool"}, {"lineNumber": 2159, "col_offset": 17, "nodeName": "Categorical", "type": "Any"}, {"lineNumber": 2159, "col_offset": 34, "nodeName": "OneHotCategorical", "type": "Any"}, {"lineNumber": 2178, "col_offset": 12, "nodeName": "rhs_dist", "type": "Any"}, {"lineNumber": 2178, "col_offset": 24, "nodeName": "rhs_dists", "type": "List[Any]"}, {"lineNumber": 2197, "col_offset": 12, "nodeName": "rhs_dist", "type": "Any"}, {"lineNumber": 2197, "col_offset": 24, "nodeName": "rhs_dists", "type": "List[Any]"}, {"lineNumber": 2225, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 2226, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 2228, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 2229, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 2230, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 2231, "col_offset": 8, "nodeName": "kl", "type": "Any"}, {"lineNumber": 2232, "col_offset": 8, "nodeName": "l2_norm", "type": "Any"}, {"lineNumber": 2252, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 2253, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 2255, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 2256, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 2284, "col_offset": 8, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 2285, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 2290, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 2292, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 2294, "col_offset": 8, "nodeName": "accumulated_loss", "type": "Any"}, {"lineNumber": 2294, "col_offset": 27, "nodeName": "losses", "type": "Any"}, {"lineNumber": 2305, "col_offset": 8, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 2306, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 2311, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 2334, "col_offset": 9, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2377, "col_offset": 9, "nodeName": "constraint_type", "type": "str"}, {"lineNumber": 2377, "col_offset": 26, "nodeName": "constraint_arg", "type": "Union[Tuple[()], List[Any]]"}, {"lineNumber": 2377, "col_offset": 42, "nodeName": "test_samples", "type": "List[Any]"}, {"lineNumber": 2378, "col_offset": 12, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 2424, "col_offset": 18, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2426, "col_offset": 9, "nodeName": "constraint_type", "type": "str"}, {"lineNumber": 2426, "col_offset": 26, "nodeName": "constraint_arg", "type": "Union[Tuple[()], List[Any]]"}, {"lineNumber": 2427, "col_offset": 12, "nodeName": "bijective", "type": "bool"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "log", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "prob", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "log1p", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "dist", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "func", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "out", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "dist", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "func", "type": "Any"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "getF", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "getF", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "getF", "type": "Any"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "getF", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "getF", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 91, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "low", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "low", "type": "Any"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "high", "type": "Any"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "TestUniform", "type": "Type[Any]"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 106, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "low", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "low", "type": "Any"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "high", "type": "Any"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "TestUniform", "type": "Type[Any]"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 115, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 120, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "low", "type": "Any"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "TestUniform", "type": "Type[Any]"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 129, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 129, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 134, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "low", "type": "Any"}, {"lineNumber": 136, "col_offset": 14, "nodeName": "TestUniform", "type": "Type[Any]"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 142, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "normal", "type": "Any"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 162, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 163, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "normal", "type": "Any"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "TestNormal", "type": "Type[Any]"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 171, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 176, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 176, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 177, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 178, "col_offset": 18, "nodeName": "normal", "type": "Any"}, {"lineNumber": 179, "col_offset": 14, "nodeName": "TestNormal", "type": "Type[Any]"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 185, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 190, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 190, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 191, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "TestNormal", "type": "Type[Any]"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 199, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 203, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 204, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 204, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 205, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 206, "col_offset": 14, "nodeName": "TestNormal", "type": "Type[Any]"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 212, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 212, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "laplace", "type": "Any"}, {"lineNumber": 231, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 232, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 232, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 233, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 234, "col_offset": 18, "nodeName": "laplace", "type": "Any"}, {"lineNumber": 235, "col_offset": 14, "nodeName": "TestLaplace", "type": "Type[Any]"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 241, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 241, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 245, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 246, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 246, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 247, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 248, "col_offset": 18, "nodeName": "laplace", "type": "Any"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "TestLaplace", "type": "Type[Any]"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 255, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 255, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 259, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 260, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 261, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 263, "col_offset": 14, "nodeName": "TestLaplace", "type": "Type[Any]"}, {"lineNumber": 266, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 269, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 269, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 273, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 274, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 274, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 275, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 275, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 276, "col_offset": 14, "nodeName": "TestLaplace", "type": "Type[Any]"}, {"lineNumber": 279, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 282, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 282, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "cauchy", "type": "Any"}, {"lineNumber": 301, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 302, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 302, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 303, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 304, "col_offset": 18, "nodeName": "normal", "type": "Any"}, {"lineNumber": 305, "col_offset": 14, "nodeName": "TestCauchy", "type": "Type[Any]"}, {"lineNumber": 308, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 308, "col_offset": 21, "nodeName": "loc", "type": "Any"}, {"lineNumber": 308, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 310, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 310, "col_offset": 31, "nodeName": "desired_shape", "type": "Union[int, Tuple[int, int], Tuple[int], Tuple[()]]"}, {"lineNumber": 313, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 314, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 314, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 315, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 316, "col_offset": 18, "nodeName": "normal", "type": "Any"}, {"lineNumber": 317, "col_offset": 14, "nodeName": "TestCauchy", "type": "Type[Any]"}, {"lineNumber": 320, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 323, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 323, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 327, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 328, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 329, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 329, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "normal", "type": "Any"}, {"lineNumber": 331, "col_offset": 14, "nodeName": "TestCauchy", "type": "Type[Any]"}, {"lineNumber": 334, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 337, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 337, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 341, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 342, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 342, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 343, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 344, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 345, "col_offset": 14, "nodeName": "TestCauchy", "type": "Type[Any]"}, {"lineNumber": 348, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 351, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 351, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 355, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 356, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 356, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 357, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 358, "col_offset": 14, "nodeName": "TestCauchy", "type": "Type[Any]"}, {"lineNumber": 361, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 364, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 364, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 374, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "half_normal", "type": "Any"}, {"lineNumber": 383, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 384, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 385, "col_offset": 14, "nodeName": "TestHalfCauchy", "type": "Type[Any]"}, {"lineNumber": 388, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 389, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 389, "col_offset": 22, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 389, "col_offset": 29, "nodeName": "Number", "type": "Type[numbers.Number]"}, {"lineNumber": 391, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 391, "col_offset": 31, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 394, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 395, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 395, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 396, "col_offset": 18, "nodeName": "abs", "type": "Any"}, {"lineNumber": 397, "col_offset": 14, "nodeName": "TestHalfCauchy", "type": "Type[Any]"}, {"lineNumber": 400, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 401, "col_offset": 17, "nodeName": "logpdf", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 402, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 402, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 406, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 407, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 407, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 408, "col_offset": 18, "nodeName": "abs", "type": "Any"}, {"lineNumber": 409, "col_offset": 14, "nodeName": "TestHalfCauchy", "type": "Type[Any]"}, {"lineNumber": 412, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 413, "col_offset": 17, "nodeName": "cdf", "type": "Any"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 414, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 414, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 418, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 419, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 420, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 421, "col_offset": 14, "nodeName": "TestHalfCauchy", "type": "Type[Any]"}, {"lineNumber": 424, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 425, "col_offset": 17, "nodeName": "ppf", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 426, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 426, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 435, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "poisson", "type": "Any"}, {"lineNumber": 444, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 445, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 445, "col_offset": 43, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[int, int]]"}, {"lineNumber": 446, "col_offset": 14, "nodeName": "TestPoisson", "type": "Type[Any]"}, {"lineNumber": 449, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 450, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 453, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 454, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 454, "col_offset": 43, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[int, int]]"}, {"lineNumber": 455, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 456, "col_offset": 14, "nodeName": "TestPoisson", "type": "Type[Any]"}, {"lineNumber": 459, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 460, "col_offset": 17, "nodeName": "logpmf", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 461, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 461, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 471, "col_offset": 12, "nodeName": "_is_logit", "type": "bool"}, {"lineNumber": 471, "col_offset": 29, "nodeName": "is_logit", "type": "bool"}, {"lineNumber": 472, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 472, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 481, "col_offset": 39, "nodeName": "itertools", "type": "module"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 483, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 486, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 487, "col_offset": 14, "nodeName": "TestGeometric", "type": "Type[Any]"}, {"lineNumber": 487, "col_offset": 40, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 490, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 491, "col_offset": 17, "nodeName": "logpmf", "type": "Any"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 492, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 492, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 496, "col_offset": 39, "nodeName": "itertools", "type": "module"}, {"lineNumber": 497, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 501, "col_offset": 14, "nodeName": "TestGeometric", "type": "Type[Any]"}, {"lineNumber": 501, "col_offset": 40, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 504, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 505, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 506, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 506, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 510, "col_offset": 39, "nodeName": "itertools", "type": "module"}, {"lineNumber": 512, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 515, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 516, "col_offset": 14, "nodeName": "TestGeometric", "type": "Type[Any]"}, {"lineNumber": 516, "col_offset": 39, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 520, "col_offset": 17, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 521, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 521, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 531, "col_offset": 12, "nodeName": "_is_logit", "type": "bool"}, {"lineNumber": 531, "col_offset": 29, "nodeName": "is_logit", "type": "bool"}, {"lineNumber": 532, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 532, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 541, "col_offset": 39, "nodeName": "itertools", "type": "module"}, {"lineNumber": 542, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 543, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 544, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 547, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 548, "col_offset": 14, "nodeName": "TestNegativeBinomial", "type": "Type[Any]"}, {"lineNumber": 548, "col_offset": 47, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 551, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 552, "col_offset": 17, "nodeName": "logpmf", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 554, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 554, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 558, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 560, "col_offset": 16, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 584, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 584, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 588, "col_offset": 12, "nodeName": "exponential", "type": "Any"}, {"lineNumber": 593, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 594, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 594, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 595, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 596, "col_offset": 14, "nodeName": "TestExponential", "type": "Type[Any]"}, {"lineNumber": 599, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 600, "col_offset": 17, "nodeName": "logpdf", "type": "Any"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 601, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 601, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 605, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 606, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 606, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 607, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 608, "col_offset": 14, "nodeName": "TestExponential", "type": "Type[Any]"}, {"lineNumber": 611, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 612, "col_offset": 17, "nodeName": "cdf", "type": "Any"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 613, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 613, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 617, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 618, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 618, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 619, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 620, "col_offset": 14, "nodeName": "TestExponential", "type": "Type[Any]"}, {"lineNumber": 623, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 624, "col_offset": 17, "nodeName": "ppf", "type": "Any"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 625, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 625, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 629, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 630, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 630, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 631, "col_offset": 14, "nodeName": "TestExponential", "type": "Type[Any]"}, {"lineNumber": 634, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 635, "col_offset": 17, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 636, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 636, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 646, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 646, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 649, "col_offset": 12, "nodeName": "weibull", "type": "Any"}, {"lineNumber": 655, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 656, "col_offset": 24, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 657, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 658, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 659, "col_offset": 14, "nodeName": "TestWeibull", "type": "Type[Any]"}, {"lineNumber": 662, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 665, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 665, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 669, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 670, "col_offset": 24, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 671, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 672, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 673, "col_offset": 14, "nodeName": "TestWeibull", "type": "Type[Any]"}, {"lineNumber": 676, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 679, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 679, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 679, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 683, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 684, "col_offset": 24, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 685, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 686, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 687, "col_offset": 14, "nodeName": "TestWeibull", "type": "Type[Any]"}, {"lineNumber": 690, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 693, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 693, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 697, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 698, "col_offset": 24, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 699, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 700, "col_offset": 14, "nodeName": "TestWeibull", "type": "Type[Any]"}, {"lineNumber": 703, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 706, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 706, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 716, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 716, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 719, "col_offset": 12, "nodeName": "pareto", "type": "Any"}, {"lineNumber": 725, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 726, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 727, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 728, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 729, "col_offset": 14, "nodeName": "TestPareto", "type": "Type[Any]"}, {"lineNumber": 732, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 733, "col_offset": 17, "nodeName": "logpdf", "type": "Any"}, {"lineNumber": 735, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 735, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 735, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 739, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 740, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 741, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 742, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 743, "col_offset": 14, "nodeName": "TestPareto", "type": "Type[Any]"}, {"lineNumber": 746, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 747, "col_offset": 17, "nodeName": "cdf", "type": "Any"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 749, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 749, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 753, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 754, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 755, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 756, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 757, "col_offset": 14, "nodeName": "TestPareto", "type": "Type[Any]"}, {"lineNumber": 760, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 761, "col_offset": 17, "nodeName": "ppf", "type": "Any"}, {"lineNumber": 763, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 763, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 763, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 767, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 768, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 769, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 770, "col_offset": 14, "nodeName": "TestPareto", "type": "Type[Any]"}, {"lineNumber": 773, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 774, "col_offset": 17, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 775, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 775, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 775, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 785, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 785, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 788, "col_offset": 12, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 794, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 795, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 795, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 796, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 796, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 797, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 798, "col_offset": 14, "nodeName": "TestGamma", "type": "Type[Any]"}, {"lineNumber": 801, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 804, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 804, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 804, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 808, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 810, "col_offset": 12, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 811, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 812, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 813, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 815, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 834, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 834, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 837, "col_offset": 12, "nodeName": "dirichlet", "type": "Any"}, {"lineNumber": 844, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 848, "col_offset": 12, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 849, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 850, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 852, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 861, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 861, "col_offset": 68, "nodeName": "batch_shapes", "type": "List[Optional[Tuple[int, int]]]"}, {"lineNumber": 865, "col_offset": 12, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 868, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 869, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 871, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 872, "col_offset": 12, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 877, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 877, "col_offset": 68, "nodeName": "batch_shapes", "type": "List[Optional[Tuple[int, int]]]"}, {"lineNumber": 879, "col_offset": 16, "nodeName": "func", "type": "str"}, {"lineNumber": 904, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 904, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 907, "col_offset": 12, "nodeName": "beta_dist", "type": "Any"}, {"lineNumber": 913, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 914, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 914, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 915, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 915, "col_offset": 43, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 916, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 917, "col_offset": 14, "nodeName": "TestBeta", "type": "Type[Any]"}, {"lineNumber": 920, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 921, "col_offset": 17, "nodeName": "logpdf", "type": "Any"}, {"lineNumber": 923, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 923, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 923, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 927, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 929, "col_offset": 12, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 930, "col_offset": 12, "nodeName": "beta", "type": "Any"}, {"lineNumber": 931, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 932, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 934, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 935, "col_offset": 12, "nodeName": "ss_beta", "type": "Any"}, {"lineNumber": 952, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 952, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 955, "col_offset": 12, "nodeName": "beta_dist", "type": "Any"}, {"lineNumber": 961, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 962, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 962, "col_offset": 42, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 963, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 963, "col_offset": 42, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 964, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 965, "col_offset": 14, "nodeName": "TestFisherSnedecor", "type": "Type[Any]"}, {"lineNumber": 968, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 969, "col_offset": 17, "nodeName": "logpdf", "type": "Any"}, {"lineNumber": 971, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 971, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 971, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 975, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 977, "col_offset": 12, "nodeName": "df1", "type": "Any"}, {"lineNumber": 978, "col_offset": 12, "nodeName": "df2", "type": "Any"}, {"lineNumber": 979, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 980, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 982, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 983, "col_offset": 12, "nodeName": "ss_f", "type": "Any"}, {"lineNumber": 998, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 998, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 1001, "col_offset": 12, "nodeName": "t_dist", "type": "Any"}, {"lineNumber": 1007, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1008, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1008, "col_offset": 23, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1009, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1009, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1010, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1010, "col_offset": 37, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1011, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1012, "col_offset": 14, "nodeName": "TestT", "type": "Type[Any]"}, {"lineNumber": 1015, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1018, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1018, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1018, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1022, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1024, "col_offset": 12, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1025, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1026, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 1027, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 1028, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1030, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1031, "col_offset": 12, "nodeName": "ss_f", "type": "Any"}, {"lineNumber": 1048, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 1048, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 1051, "col_offset": 12, "nodeName": "normal", "type": "Any"}, {"lineNumber": 1057, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1058, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1058, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1059, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1059, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1060, "col_offset": 18, "nodeName": "normal", "type": "Any"}, {"lineNumber": 1061, "col_offset": 14, "nodeName": "TestGumbel", "type": "Type[Any]"}, {"lineNumber": 1064, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1067, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1067, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1067, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1071, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1072, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1072, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1073, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1073, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1074, "col_offset": 18, "nodeName": "normal", "type": "Any"}, {"lineNumber": 1075, "col_offset": 14, "nodeName": "TestGumbel", "type": "Type[Any]"}, {"lineNumber": 1078, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1081, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1081, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1081, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1085, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1086, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1086, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1087, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1087, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1088, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1089, "col_offset": 14, "nodeName": "TestGumbel", "type": "Type[Any]"}, {"lineNumber": 1092, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1095, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1095, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1095, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1099, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1100, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1100, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1101, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1101, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1102, "col_offset": 14, "nodeName": "TestGumbel", "type": "Type[Any]"}, {"lineNumber": 1105, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1108, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1108, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1108, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1118, "col_offset": 12, "nodeName": "_num_events", "type": "int"}, {"lineNumber": 1118, "col_offset": 31, "nodeName": "num_events", "type": "int"}, {"lineNumber": 1119, "col_offset": 12, "nodeName": "_total_count", "type": "Any"}, {"lineNumber": 1119, "col_offset": 32, "nodeName": "total_count", "type": "Any"}, {"lineNumber": 1120, "col_offset": 12, "nodeName": "_is_logit", "type": "bool"}, {"lineNumber": 1120, "col_offset": 29, "nodeName": "is_logit", "type": "bool"}, {"lineNumber": 1121, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 1121, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 1122, "col_offset": 12, "nodeName": "_batch_shape", "type": "Any"}, {"lineNumber": 1122, "col_offset": 32, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 1123, "col_offset": 12, "nodeName": "_sample_shape", "type": "None"}, {"lineNumber": 1123, "col_offset": 33, "nodeName": "sample_shape", "type": "None"}, {"lineNumber": 1147, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1148, "col_offset": 12, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1148, "col_offset": 23, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1148, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1151, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 1151, "col_offset": 20, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1152, "col_offset": 15, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1156, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1158, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1159, "col_offset": 12, "nodeName": "desired_shape", "type": "Optional[Union[Tuple[int, int], Tuple[()]]]"}, {"lineNumber": 1163, "col_offset": 50, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1164, "col_offset": 12, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1164, "col_offset": 23, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1164, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1167, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 1167, "col_offset": 20, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1168, "col_offset": 15, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1172, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1174, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1175, "col_offset": 12, "nodeName": "sample_shape", "type": "Optional[Union[Tuple[()], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 1181, "col_offset": 50, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1182, "col_offset": 12, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1182, "col_offset": 23, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1182, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1185, "col_offset": 12, "nodeName": "eps", "type": "Any"}, {"lineNumber": 1185, "col_offset": 18, "nodeName": "eps", "type": "Any"}, {"lineNumber": 1186, "col_offset": 12, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1187, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 1187, "col_offset": 20, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1188, "col_offset": 12, "nodeName": "sample_shape", "type": "Optional[Union[Tuple[()], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 1191, "col_offset": 12, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1192, "col_offset": 12, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1193, "col_offset": 15, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1197, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1199, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1210, "col_offset": 12, "nodeName": "_is_logit", "type": "bool"}, {"lineNumber": 1210, "col_offset": 29, "nodeName": "is_logit", "type": "bool"}, {"lineNumber": 1211, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 1211, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 1212, "col_offset": 12, "nodeName": "_n", "type": "float"}, {"lineNumber": 1212, "col_offset": 22, "nodeName": "n", "type": "float"}, {"lineNumber": 1222, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1224, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 1225, "col_offset": 12, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1226, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 1227, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 1227, "col_offset": 20, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1228, "col_offset": 15, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1230, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1232, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1233, "col_offset": 12, "nodeName": "desired_shape", "type": "Union[Tuple[Union[Tuple[int], int, Tuple[()], Tuple[int, int]]], Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1239, "col_offset": 12, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1240, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1241, "col_offset": 15, "nodeName": "Binomial", "type": "Any"}, {"lineNumber": 1242, "col_offset": 18, "nodeName": "sample_n", "type": "Any"}, {"lineNumber": 1242, "col_offset": 32, "nodeName": "prefix_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1243, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1246, "col_offset": 39, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1247, "col_offset": 12, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1248, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1249, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 1252, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 1253, "col_offset": 14, "nodeName": "TestBinomial", "type": "Type[Any]"}, {"lineNumber": 1253, "col_offset": 39, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1256, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1257, "col_offset": 17, "nodeName": "logpmf", "type": "Any"}, {"lineNumber": 1258, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1258, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1258, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1262, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1264, "col_offset": 16, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1289, "col_offset": 12, "nodeName": "_is_logit", "type": "bool"}, {"lineNumber": 1289, "col_offset": 29, "nodeName": "is_logit", "type": "bool"}, {"lineNumber": 1290, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 1290, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 1299, "col_offset": 39, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1300, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1301, "col_offset": 17, "nodeName": "bernoulli", "type": "Any"}, {"lineNumber": 1304, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 1305, "col_offset": 14, "nodeName": "TestBernoulli", "type": "Type[Any]"}, {"lineNumber": 1305, "col_offset": 40, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1308, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1309, "col_offset": 17, "nodeName": "log", "type": "Any"}, {"lineNumber": 1310, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1310, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1310, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1314, "col_offset": 39, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1315, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1316, "col_offset": 17, "nodeName": "bernoulli", "type": "Any"}, {"lineNumber": 1319, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 1320, "col_offset": 14, "nodeName": "TestBernoulli", "type": "Type[Any]"}, {"lineNumber": 1320, "col_offset": 40, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1323, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1324, "col_offset": 17, "nodeName": "var", "type": "Any"}, {"lineNumber": 1325, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1325, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1325, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1329, "col_offset": 39, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1330, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1331, "col_offset": 17, "nodeName": "bernoulli", "type": "Any"}, {"lineNumber": 1334, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 1335, "col_offset": 14, "nodeName": "TestBernoulli", "type": "Type[Any]"}, {"lineNumber": 1335, "col_offset": 39, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1338, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1339, "col_offset": 17, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 1340, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1340, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1340, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1350, "col_offset": 12, "nodeName": "_is_logit", "type": "bool"}, {"lineNumber": 1350, "col_offset": 29, "nodeName": "is_logit", "type": "bool"}, {"lineNumber": 1351, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 1351, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 1366, "col_offset": 39, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1367, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1370, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 1371, "col_offset": 8, "nodeName": "attach_grad", "type": "Any"}, {"lineNumber": 1372, "col_offset": 14, "nodeName": "TestRelaxedBernoulli", "type": "Type[Any]"}, {"lineNumber": 1372, "col_offset": 45, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1376, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1377, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 1378, "col_offset": 64, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1379, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1379, "col_offset": 35, "nodeName": "desired_shape", "type": "Union[int, Tuple[()], Tuple[Union[Tuple[int], int, Tuple[()], Tuple[int, int]]], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 1381, "col_offset": 39, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1382, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1383, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1386, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 1387, "col_offset": 14, "nodeName": "TestRelaxedBernoulli", "type": "Type[Any]"}, {"lineNumber": 1387, "col_offset": 47, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1390, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1391, "col_offset": 64, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1392, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1392, "col_offset": 31, "nodeName": "desired_shape", "type": "Union[Tuple[Union[Tuple[int], int, Tuple[()], Tuple[int, int]]], int, Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 1401, "col_offset": 12, "nodeName": "_is_logit", "type": "bool"}, {"lineNumber": 1401, "col_offset": 29, "nodeName": "is_logit", "type": "bool"}, {"lineNumber": 1402, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 1402, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 1403, "col_offset": 12, "nodeName": "_batch_shape", "type": "Any"}, {"lineNumber": 1403, "col_offset": 32, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 1404, "col_offset": 12, "nodeName": "_num_events", "type": "int"}, {"lineNumber": 1404, "col_offset": 31, "nodeName": "num_events", "type": "int"}, {"lineNumber": 1405, "col_offset": 12, "nodeName": "_sample_shape", "type": "None"}, {"lineNumber": 1405, "col_offset": 33, "nodeName": "sample_shape", "type": "None"}, {"lineNumber": 1423, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1424, "col_offset": 12, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1424, "col_offset": 23, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1424, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1427, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 1428, "col_offset": 15, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1432, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1434, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1435, "col_offset": 12, "nodeName": "desired_shape", "type": "Optional[Union[Tuple[int, int], Tuple[()]]]"}, {"lineNumber": 1439, "col_offset": 50, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1440, "col_offset": 12, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1440, "col_offset": 23, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1440, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1443, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 1444, "col_offset": 15, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1450, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1452, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1458, "col_offset": 50, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1459, "col_offset": 12, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1459, "col_offset": 23, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1459, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1462, "col_offset": 12, "nodeName": "eps", "type": "Any"}, {"lineNumber": 1462, "col_offset": 18, "nodeName": "eps", "type": "Any"}, {"lineNumber": 1463, "col_offset": 12, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1464, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 1467, "col_offset": 12, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1468, "col_offset": 15, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1472, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1474, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1488, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1489, "col_offset": 12, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1489, "col_offset": 23, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1489, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1492, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 1493, "col_offset": 15, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1497, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1499, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1514, "col_offset": 12, "nodeName": "_is_logit", "type": "bool"}, {"lineNumber": 1514, "col_offset": 29, "nodeName": "is_logit", "type": "bool"}, {"lineNumber": 1515, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 1515, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 1516, "col_offset": 12, "nodeName": "_batch_shape", "type": "Any"}, {"lineNumber": 1516, "col_offset": 32, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 1517, "col_offset": 12, "nodeName": "_num_events", "type": "int"}, {"lineNumber": 1517, "col_offset": 31, "nodeName": "num_events", "type": "int"}, {"lineNumber": 1532, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1533, "col_offset": 12, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1533, "col_offset": 23, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1533, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1536, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 1536, "col_offset": 20, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1537, "col_offset": 15, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1541, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1543, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1544, "col_offset": 12, "nodeName": "desired_shape", "type": "Optional[Union[Tuple[int, int], Tuple[()]]]"}, {"lineNumber": 1548, "col_offset": 50, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1549, "col_offset": 12, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1549, "col_offset": 23, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1549, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1552, "col_offset": 12, "nodeName": "eps", "type": "Any"}, {"lineNumber": 1552, "col_offset": 18, "nodeName": "eps", "type": "Any"}, {"lineNumber": 1553, "col_offset": 12, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1554, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 1554, "col_offset": 20, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1557, "col_offset": 12, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1558, "col_offset": 12, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1559, "col_offset": 15, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1563, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1565, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1570, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1571, "col_offset": 12, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1571, "col_offset": 23, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1571, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1574, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 1574, "col_offset": 20, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1575, "col_offset": 15, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1579, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1581, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1582, "col_offset": 12, "nodeName": "desired_shape", "type": "Optional[Union[Tuple[int, int], Tuple[()]]]"}, {"lineNumber": 1593, "col_offset": 16, "nodeName": "_is_logit", "type": "bool"}, {"lineNumber": 1593, "col_offset": 33, "nodeName": "is_logit", "type": "bool"}, {"lineNumber": 1594, "col_offset": 16, "nodeName": "_func", "type": "str"}, {"lineNumber": 1594, "col_offset": 29, "nodeName": "func", "type": "str"}, {"lineNumber": 1595, "col_offset": 16, "nodeName": "_batch_shape", "type": "Any"}, {"lineNumber": 1595, "col_offset": 36, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 1596, "col_offset": 16, "nodeName": "_num_events", "type": "int"}, {"lineNumber": 1596, "col_offset": 35, "nodeName": "num_events", "type": "int"}, {"lineNumber": 1612, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1613, "col_offset": 12, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1613, "col_offset": 23, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1613, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1616, "col_offset": 12, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1617, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 1617, "col_offset": 20, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1618, "col_offset": 15, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1623, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1628, "col_offset": 12, "nodeName": "desired_shape", "type": "Optional[Union[Tuple[int, int], Tuple[()]]]"}, {"lineNumber": 1633, "col_offset": 50, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1634, "col_offset": 12, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1634, "col_offset": 23, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1634, "col_offset": 36, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1637, "col_offset": 12, "nodeName": "eps", "type": "Any"}, {"lineNumber": 1637, "col_offset": 18, "nodeName": "eps", "type": "Any"}, {"lineNumber": 1638, "col_offset": 12, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1639, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 1639, "col_offset": 20, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1645, "col_offset": 15, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1649, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1651, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1662, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 1662, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 1664, "col_offset": 12, "nodeName": "_param_type", "type": "str"}, {"lineNumber": 1664, "col_offset": 31, "nodeName": "param_type", "type": "str"}, {"lineNumber": 1675, "col_offset": 20, "nodeName": "inv", "type": "Any"}, {"lineNumber": 1675, "col_offset": 34, "nodeName": "cov", "type": "Any"}, {"lineNumber": 1676, "col_offset": 22, "nodeName": "swapaxes", "type": "Any"}, {"lineNumber": 1676, "col_offset": 34, "nodeName": "precision", "type": "Any"}, {"lineNumber": 1683, "col_offset": 25, "nodeName": "s", "type": "Any"}, {"lineNumber": 1689, "col_offset": 45, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1690, "col_offset": 24, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 1691, "col_offset": 16, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1712, "col_offset": 45, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1713, "col_offset": 24, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 1714, "col_offset": 16, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1745, "col_offset": 45, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1746, "col_offset": 24, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 1747, "col_offset": 16, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1781, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 1781, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 1784, "col_offset": 12, "nodeName": "half_normal", "type": "Any"}, {"lineNumber": 1790, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1791, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1791, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1792, "col_offset": 14, "nodeName": "TestHalfNormal", "type": "Type[Any]"}, {"lineNumber": 1795, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1796, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1796, "col_offset": 22, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1796, "col_offset": 29, "nodeName": "Number", "type": "Type[numbers.Number]"}, {"lineNumber": 1798, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1798, "col_offset": 31, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1801, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1802, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1802, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1803, "col_offset": 18, "nodeName": "abs", "type": "Any"}, {"lineNumber": 1804, "col_offset": 14, "nodeName": "TestHalfNormal", "type": "Type[Any]"}, {"lineNumber": 1807, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1808, "col_offset": 17, "nodeName": "logpdf", "type": "Any"}, {"lineNumber": 1809, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1809, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1809, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1813, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1814, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1814, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1815, "col_offset": 18, "nodeName": "abs", "type": "Any"}, {"lineNumber": 1816, "col_offset": 14, "nodeName": "TestHalfNormal", "type": "Type[Any]"}, {"lineNumber": 1819, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1820, "col_offset": 17, "nodeName": "cdf", "type": "Any"}, {"lineNumber": 1821, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1821, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1821, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1825, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1826, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1826, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1827, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1828, "col_offset": 14, "nodeName": "TestHalfNormal", "type": "Type[Any]"}, {"lineNumber": 1831, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1832, "col_offset": 17, "nodeName": "ppf", "type": "Any"}, {"lineNumber": 1833, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1833, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1833, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1847, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 1847, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 1863, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1864, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1864, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int]"}, {"lineNumber": 1865, "col_offset": 8, "nodeName": "attach_grad", "type": "Any"}, {"lineNumber": 1866, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1866, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int]"}, {"lineNumber": 1867, "col_offset": 8, "nodeName": "attach_grad", "type": "Any"}, {"lineNumber": 1868, "col_offset": 18, "nodeName": "normal", "type": "Any"}, {"lineNumber": 1869, "col_offset": 14, "nodeName": "TestAffineTransform", "type": "Type[Any]"}, {"lineNumber": 1873, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1874, "col_offset": 17, "nodeName": "log", "type": "Any"}, {"lineNumber": 1876, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1876, "col_offset": 46, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1878, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 1879, "col_offset": 29, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1882, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1882, "col_offset": 48, "nodeName": "loc_expected_grad", "type": "Any"}, {"lineNumber": 1884, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1884, "col_offset": 50, "nodeName": "scale_expected_grad", "type": "Any"}, {"lineNumber": 1888, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1889, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1889, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int]"}, {"lineNumber": 1890, "col_offset": 8, "nodeName": "attach_grad", "type": "Any"}, {"lineNumber": 1891, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1891, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int]"}, {"lineNumber": 1892, "col_offset": 8, "nodeName": "attach_grad", "type": "Any"}, {"lineNumber": 1894, "col_offset": 12, "nodeName": "shape", "type": "Tuple[Union[Tuple[int, int], Tuple[int], int]]"}, {"lineNumber": 1895, "col_offset": 34, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[Union[Tuple[int, int], Tuple[int], int]], Tuple[int], int]"}, {"lineNumber": 1896, "col_offset": 14, "nodeName": "TestAffineTransform", "type": "Type[Any]"}, {"lineNumber": 1897, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1898, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1898, "col_offset": 31, "nodeName": "expected_shape", "type": "Any"}, {"lineNumber": 1907, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 1907, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 1926, "col_offset": 28, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1927, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1927, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[int, int]]"}, {"lineNumber": 1928, "col_offset": 8, "nodeName": "attach_grad", "type": "Any"}, {"lineNumber": 1929, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1929, "col_offset": 44, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[int, int]]"}, {"lineNumber": 1930, "col_offset": 8, "nodeName": "attach_grad", "type": "Any"}, {"lineNumber": 1931, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1932, "col_offset": 14, "nodeName": "TestComposeTransform", "type": "Type[Any]"}, {"lineNumber": 1936, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1939, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1939, "col_offset": 46, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1945, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1946, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1952, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 1952, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1958, "col_offset": 9, "nodeName": "record", "type": "Any"}, {"lineNumber": 1959, "col_offset": 14, "nodeName": "Dummy", "type": "Type[Any]"}, {"lineNumber": 1959, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 1960, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 1961, "col_offset": 24, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1961, "col_offset": 42, "nodeName": "scale", "type": "float"}, {"lineNumber": 1965, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 1966, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 1968, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1969, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1971, "col_offset": 9, "nodeName": "record", "type": "Any"}, {"lineNumber": 1972, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 1972, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 1973, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 1974, "col_offset": 24, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1974, "col_offset": 42, "nodeName": "scale", "type": "float"}, {"lineNumber": 1976, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1977, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1978, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 1979, "col_offset": 9, "nodeName": "record", "type": "Any"}, {"lineNumber": 1980, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 1980, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 1981, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 1982, "col_offset": 24, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1982, "col_offset": 42, "nodeName": "scale", "type": "float"}, {"lineNumber": 1990, "col_offset": 12, "nodeName": "_event_dim", "type": "int"}, {"lineNumber": 1990, "col_offset": 30, "nodeName": "event_dim", "type": "int"}, {"lineNumber": 1991, "col_offset": 12, "nodeName": "_func", "type": "str"}, {"lineNumber": 1991, "col_offset": 25, "nodeName": "func", "type": "str"}, {"lineNumber": 1994, "col_offset": 12, "nodeName": "base_dist", "type": "Any"}, {"lineNumber": 1995, "col_offset": 12, "nodeName": "reshaped_dist", "type": "Any"}, {"lineNumber": 2000, "col_offset": 38, "nodeName": "itertools", "type": "module"}, {"lineNumber": 2002, "col_offset": 16, "nodeName": "func", "type": "str"}, {"lineNumber": 2023, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 2024, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2024, "col_offset": 27, "nodeName": "shape", "type": "Union[int, Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 2025, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 2025, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 2025, "col_offset": 36, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 2032, "col_offset": 13, "nodeName": "kl_divergence", "type": "Any"}, {"lineNumber": 2032, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 2032, "col_offset": 34, "nodeName": "q", "type": "Any"}, {"lineNumber": 2033, "col_offset": 20, "nodeName": "empirical_kl", "type": "Any"}, {"lineNumber": 2033, "col_offset": 37, "nodeName": "p", "type": "Any"}, {"lineNumber": 2033, "col_offset": 40, "nodeName": "q", "type": "Any"}, {"lineNumber": 2033, "col_offset": 43, "nodeName": "M", "type": "Any"}, {"lineNumber": 2034, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 2048, "col_offset": 15, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2058, "col_offset": 15, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2061, "col_offset": 8, "nodeName": "_test_zero_kl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2061, "col_offset": 54, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2064, "col_offset": 17, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2064, "col_offset": 29, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2064, "col_offset": 42, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2064, "col_offset": 54, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2069, "col_offset": 15, "nodeName": "monte_carlo_test", "type": "bool"}, {"lineNumber": 2076, "col_offset": 15, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2078, "col_offset": 8, "nodeName": "_test_zero_kl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2078, "col_offset": 49, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2085, "col_offset": 17, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2085, "col_offset": 34, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2089, "col_offset": 15, "nodeName": "monte_carlo_test", "type": "bool"}, {"lineNumber": 2096, "col_offset": 15, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2099, "col_offset": 8, "nodeName": "_test_zero_kl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2099, "col_offset": 57, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2102, "col_offset": 15, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2104, "col_offset": 8, "nodeName": "_test_zero_kl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2104, "col_offset": 50, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2111, "col_offset": 17, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2111, "col_offset": 28, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2116, "col_offset": 15, "nodeName": "monte_carlo_test", "type": "bool"}, {"lineNumber": 2123, "col_offset": 12, "nodeName": "randint", "type": "Any"}, {"lineNumber": 2124, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2125, "col_offset": 15, "nodeName": "Binomial", "type": "Any"}, {"lineNumber": 2126, "col_offset": 8, "nodeName": "_test_zero_kl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2126, "col_offset": 22, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2126, "col_offset": 28, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2130, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2131, "col_offset": 15, "nodeName": "Bernoulli", "type": "Any"}, {"lineNumber": 2132, "col_offset": 8, "nodeName": "_test_zero_kl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2132, "col_offset": 22, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2132, "col_offset": 28, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2137, "col_offset": 45, "nodeName": "itertools", "type": "module"}, {"lineNumber": 2138, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2139, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2141, "col_offset": 15, "nodeName": "MultivariateNormal", "type": "Any"}, {"lineNumber": 2141, "col_offset": 38, "nodeName": "loc", "type": "Any"}, {"lineNumber": 2142, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2143, "col_offset": 8, "nodeName": "_test_zero_kl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2143, "col_offset": 22, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2143, "col_offset": 28, "nodeName": "desired_shape", "type": "Any"}, {"lineNumber": 2147, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 2148, "col_offset": 25, "nodeName": "batch_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 2149, "col_offset": 15, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2152, "col_offset": 8, "nodeName": "_test_zero_kl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2152, "col_offset": 50, "nodeName": "desired_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 2159, "col_offset": 17, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2159, "col_offset": 34, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2160, "col_offset": 12, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 2160, "col_offset": 25, "nodeName": "batch_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 2160, "col_offset": 40, "nodeName": "product", "type": "Callable"}, {"lineNumber": 2160, "col_offset": 58, "nodeName": "event_shapes", "type": "List[int]"}, {"lineNumber": 2160, "col_offset": 72, "nodeName": "batch_shapes", "type": "List[Union[Tuple[()], Tuple[int], Tuple[int, int]]]"}, {"lineNumber": 2161, "col_offset": 12, "nodeName": "prob", "type": "Callable[[], Any]"}, {"lineNumber": 2164, "col_offset": 15, "nodeName": "monte_carlo_test", "type": "bool"}, {"lineNumber": 2179, "col_offset": 12, "nodeName": "low", "type": "Any"}, {"lineNumber": 2180, "col_offset": 12, "nodeName": "high", "type": "Any"}, {"lineNumber": 2181, "col_offset": 12, "nodeName": "lhs_dist", "type": "Any"}, {"lineNumber": 2182, "col_offset": 12, "nodeName": "kl", "type": "Any"}, {"lineNumber": 2184, "col_offset": 15, "nodeName": "monte_carlo_test", "type": "bool"}, {"lineNumber": 2198, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 2199, "col_offset": 12, "nodeName": "lhs_dist", "type": "Any"}, {"lineNumber": 2200, "col_offset": 12, "nodeName": "kl", "type": "Any"}, {"lineNumber": 2202, "col_offset": 15, "nodeName": "monte_carlo_test", "type": "bool"}, {"lineNumber": 2216, "col_offset": 12, "nodeName": "qz", "type": "Any"}, {"lineNumber": 2218, "col_offset": 12, "nodeName": "pz", "type": "Any"}, {"lineNumber": 2225, "col_offset": 14, "nodeName": "dummyBlock", "type": "Type[Any]"}, {"lineNumber": 2228, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2229, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 2230, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 2231, "col_offset": 13, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 2232, "col_offset": 18, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 2233, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2233, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2234, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2234, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2235, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2243, "col_offset": 12, "nodeName": "qz", "type": "Any"}, {"lineNumber": 2245, "col_offset": 12, "nodeName": "pz", "type": "Any"}, {"lineNumber": 2252, "col_offset": 14, "nodeName": "problemBlock", "type": "Type[Any]"}, {"lineNumber": 2255, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2256, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 2258, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 2284, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2284, "col_offset": 32, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2285, "col_offset": 14, "nodeName": "StochasticSequential", "type": "Any"}, {"lineNumber": 2286, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 2287, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 2288, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 2289, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 2292, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 2293, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 2293, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 2294, "col_offset": 27, "nodeName": "net", "type": "Any"}, {"lineNumber": 2296, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 2297, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 2299, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 2301, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 2305, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2305, "col_offset": 32, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2306, "col_offset": 14, "nodeName": "StochasticSequential", "type": "Any"}, {"lineNumber": 2307, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 2308, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 2309, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 2310, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 2314, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 2323, "col_offset": 12, "nodeName": "_constraint_type", "type": "Any"}, {"lineNumber": 2326, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 2327, "col_offset": 12, "nodeName": "constraint_param", "type": "Tuple[Any, ...]"}, {"lineNumber": 2334, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 2335, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 2335, "col_offset": 27, "nodeName": "_s", "type": "Any"}, {"lineNumber": 2335, "col_offset": 58, "nodeName": "eye", "type": "Any"}, {"lineNumber": 2379, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 2380, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 2382, "col_offset": 16, "nodeName": "test_sample", "type": "Any"}, {"lineNumber": 2382, "col_offset": 31, "nodeName": "test_samples", "type": "List[Any]"}, {"lineNumber": 2393, "col_offset": 12, "nodeName": "_constraint_type", "type": "Any"}, {"lineNumber": 2396, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 2397, "col_offset": 12, "nodeName": "constraint_param", "type": "Tuple[Any, ...]"}, {"lineNumber": 2402, "col_offset": 15, "nodeName": "bijective", "type": "bool"}, {"lineNumber": 2424, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 2428, "col_offset": 16, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "np", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "np", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "prob", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "out", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "ones", "type": "Any"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "ones", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "ones", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "Uniform", "type": "Any"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "low", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "high", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 85, "col_offset": 57, "nodeName": "_func", "type": "Any"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 107, "col_offset": 49, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 114, "col_offset": 56, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 121, "col_offset": 49, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 122, "col_offset": 41, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 128, "col_offset": 56, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 134, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 135, "col_offset": 49, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "loc", "type": "Any"}, {"lineNumber": 155, "col_offset": 37, "nodeName": "scale", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 156, "col_offset": 48, "nodeName": "normal", "type": "Any"}, {"lineNumber": 156, "col_offset": 56, "nodeName": "_func", "type": "Any"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 164, "col_offset": 40, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 170, "col_offset": 49, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 176, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 178, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 178, "col_offset": 40, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 184, "col_offset": 46, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 190, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 192, "col_offset": 41, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 198, "col_offset": 46, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 204, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "Laplace", "type": "Any"}, {"lineNumber": 225, "col_offset": 34, "nodeName": "loc", "type": "Any"}, {"lineNumber": 225, "col_offset": 39, "nodeName": "scale", "type": "Any"}, {"lineNumber": 226, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 226, "col_offset": 48, "nodeName": "laplace", "type": "Any"}, {"lineNumber": 226, "col_offset": 57, "nodeName": "_func", "type": "Any"}, {"lineNumber": 232, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 234, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 234, "col_offset": 41, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 240, "col_offset": 52, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 246, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 248, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 248, "col_offset": 41, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 254, "col_offset": 49, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 262, "col_offset": 41, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 268, "col_offset": 49, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 274, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 275, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 295, "col_offset": 21, "nodeName": "Cauchy", "type": "Any"}, {"lineNumber": 295, "col_offset": 32, "nodeName": "loc", "type": "Any"}, {"lineNumber": 295, "col_offset": 37, "nodeName": "scale", "type": "Any"}, {"lineNumber": 295, "col_offset": 44, "nodeName": "F", "type": "Any"}, {"lineNumber": 296, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 296, "col_offset": 48, "nodeName": "cauchy", "type": "Any"}, {"lineNumber": 296, "col_offset": 56, "nodeName": "_func", "type": "Any"}, {"lineNumber": 302, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 304, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 304, "col_offset": 40, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 309, "col_offset": 36, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 309, "col_offset": 47, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 309, "col_offset": 54, "nodeName": "Number", "type": "Type[numbers.Number]"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 310, "col_offset": 15, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 314, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 316, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 316, "col_offset": 40, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 322, "col_offset": 51, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 329, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 330, "col_offset": 40, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 336, "col_offset": 48, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 342, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 344, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 344, "col_offset": 41, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 350, "col_offset": 48, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 356, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 377, "col_offset": 26, "nodeName": "HalfCauchy", "type": "Any"}, {"lineNumber": 377, "col_offset": 41, "nodeName": "scale", "type": "Any"}, {"lineNumber": 377, "col_offset": 48, "nodeName": "F", "type": "Any"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 391, "col_offset": 15, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 395, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 396, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 396, "col_offset": 25, "nodeName": "normal", "type": "Any"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 401, "col_offset": 58, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 407, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 408, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 408, "col_offset": 25, "nodeName": "normal", "type": "Any"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 413, "col_offset": 55, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 420, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 420, "col_offset": 41, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 425, "col_offset": 55, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 436, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 439, "col_offset": 22, "nodeName": "Poisson", "type": "Any"}, {"lineNumber": 439, "col_offset": 34, "nodeName": "rate", "type": "Any"}, {"lineNumber": 439, "col_offset": 40, "nodeName": "F", "type": "Any"}, {"lineNumber": 440, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 440, "col_offset": 48, "nodeName": "poisson", "type": "Any"}, {"lineNumber": 440, "col_offset": 57, "nodeName": "_func", "type": "Any"}, {"lineNumber": 445, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 450, "col_offset": 31, "nodeName": "rate", "type": "Any"}, {"lineNumber": 454, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 460, "col_offset": 54, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 470, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 471, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 472, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 475, "col_offset": 70, "nodeName": "_is_logit", "type": "Any"}, {"lineNumber": 477, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 477, "col_offset": 48, "nodeName": "dist", "type": "Any"}, {"lineNumber": 477, "col_offset": 54, "nodeName": "_func", "type": "Any"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 482, "col_offset": 38, "nodeName": "shape", "type": "Union[int, Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 486, "col_offset": 20, "nodeName": "prob_to_logit", "type": "Callable[[Any], Any]"}, {"lineNumber": 486, "col_offset": 34, "nodeName": "param", "type": "Any"}, {"lineNumber": 489, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 491, "col_offset": 17, "nodeName": "geom", "type": "Any"}, {"lineNumber": 491, "col_offset": 54, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 497, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 497, "col_offset": 38, "nodeName": "shape", "type": "Union[int, Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 500, "col_offset": 20, "nodeName": "prob_to_logit", "type": "Callable[[Any], Any]"}, {"lineNumber": 500, "col_offset": 34, "nodeName": "param", "type": "Any"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 512, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 512, "col_offset": 47, "nodeName": "shape", "type": "Union[int, Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 515, "col_offset": 20, "nodeName": "prob_to_logit", "type": "Callable[[Any], Any]"}, {"lineNumber": 515, "col_offset": 34, "nodeName": "param", "type": "Any"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 530, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 531, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 532, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 535, "col_offset": 82, "nodeName": "_is_logit", "type": "Any"}, {"lineNumber": 537, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 537, "col_offset": 48, "nodeName": "dist", "type": "Any"}, {"lineNumber": 537, "col_offset": 54, "nodeName": "_func", "type": "Any"}, {"lineNumber": 543, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 543, "col_offset": 47, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 547, "col_offset": 20, "nodeName": "prob_to_logit", "type": "Callable[[Any], Any]"}, {"lineNumber": 547, "col_offset": 34, "nodeName": "param", "type": "Any"}, {"lineNumber": 550, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 553, "col_offset": 36, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 561, "col_offset": 16, "nodeName": "n", "type": "Any"}, {"lineNumber": 562, "col_offset": 16, "nodeName": "prob", "type": "Any"}, {"lineNumber": 563, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 564, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 564, "col_offset": 24, "nodeName": "prob", "type": "Any"}, {"lineNumber": 565, "col_offset": 19, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 567, "col_offset": 19, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 569, "col_offset": 16, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 570, "col_offset": 16, "nodeName": "ss_nbinom", "type": "Any"}, {"lineNumber": 584, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 585, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 588, "col_offset": 26, "nodeName": "Exponential", "type": "Any"}, {"lineNumber": 588, "col_offset": 42, "nodeName": "scale", "type": "Any"}, {"lineNumber": 588, "col_offset": 49, "nodeName": "F", "type": "Any"}, {"lineNumber": 589, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 589, "col_offset": 48, "nodeName": "exponential", "type": "Any"}, {"lineNumber": 589, "col_offset": 61, "nodeName": "_func", "type": "Any"}, {"lineNumber": 594, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 595, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 595, "col_offset": 51, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 598, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 600, "col_offset": 56, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 606, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 607, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 607, "col_offset": 51, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 612, "col_offset": 53, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 618, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 619, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 619, "col_offset": 51, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 622, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 624, "col_offset": 53, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 630, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 645, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 646, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 649, "col_offset": 22, "nodeName": "Weibull", "type": "Any"}, {"lineNumber": 649, "col_offset": 34, "nodeName": "concentration", "type": "Any"}, {"lineNumber": 649, "col_offset": 49, "nodeName": "scale", "type": "Any"}, {"lineNumber": 649, "col_offset": 56, "nodeName": "F", "type": "Any"}, {"lineNumber": 650, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 650, "col_offset": 48, "nodeName": "weibull", "type": "Any"}, {"lineNumber": 650, "col_offset": 57, "nodeName": "_func", "type": "Any"}, {"lineNumber": 656, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 656, "col_offset": 47, "nodeName": "shape", "type": "Union[int, Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 657, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 657, "col_offset": 39, "nodeName": "shape", "type": "Union[int, Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 658, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 658, "col_offset": 41, "nodeName": "shape", "type": "Union[int, Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 661, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 664, "col_offset": 41, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 670, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 670, "col_offset": 47, "nodeName": "shape", "type": "Union[int, Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 671, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 671, "col_offset": 39, "nodeName": "shape", "type": "Union[int, Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 672, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 672, "col_offset": 41, "nodeName": "shape", "type": "Union[int, Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 675, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 678, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 684, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 684, "col_offset": 47, "nodeName": "shape", "type": "Union[int, Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 685, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 685, "col_offset": 39, "nodeName": "shape", "type": "Union[int, Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 686, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 686, "col_offset": 41, "nodeName": "shape", "type": "Union[int, Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 689, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 692, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 698, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 698, "col_offset": 47, "nodeName": "shape", "type": "Union[int, Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 699, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 699, "col_offset": 39, "nodeName": "shape", "type": "Union[int, Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 702, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 715, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 716, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 719, "col_offset": 21, "nodeName": "Pareto", "type": "Any"}, {"lineNumber": 719, "col_offset": 32, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 719, "col_offset": 39, "nodeName": "scale", "type": "Any"}, {"lineNumber": 719, "col_offset": 46, "nodeName": "F", "type": "Any"}, {"lineNumber": 720, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 720, "col_offset": 48, "nodeName": "pareto", "type": "Any"}, {"lineNumber": 720, "col_offset": 56, "nodeName": "_func", "type": "Any"}, {"lineNumber": 726, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 726, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 727, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 727, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 728, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 728, "col_offset": 47, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 731, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 734, "col_offset": 12, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 740, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 740, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 741, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 741, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 742, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 742, "col_offset": 51, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 745, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 748, "col_offset": 12, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 754, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 754, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 755, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 755, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 756, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 756, "col_offset": 41, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 759, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 762, "col_offset": 12, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 768, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 768, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 769, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 769, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 772, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 784, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 785, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 788, "col_offset": 20, "nodeName": "Gamma", "type": "Any"}, {"lineNumber": 788, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 788, "col_offset": 37, "nodeName": "scale", "type": "Any"}, {"lineNumber": 788, "col_offset": 44, "nodeName": "F", "type": "Any"}, {"lineNumber": 789, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 789, "col_offset": 48, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 789, "col_offset": 55, "nodeName": "_func", "type": "Any"}, {"lineNumber": 795, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 796, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 797, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 797, "col_offset": 41, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 800, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 803, "col_offset": 56, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 810, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 810, "col_offset": 48, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 811, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 811, "col_offset": 48, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 812, "col_offset": 18, "nodeName": "TestGamma", "type": "Type[Any]"}, {"lineNumber": 812, "col_offset": 28, "nodeName": "func", "type": "str"}, {"lineNumber": 815, "col_offset": 21, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 816, "col_offset": 23, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 818, "col_offset": 15, "nodeName": "func", "type": "str"}, {"lineNumber": 819, "col_offset": 16, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 824, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 824, "col_offset": 32, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 824, "col_offset": 40, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 833, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 834, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 837, "col_offset": 24, "nodeName": "Dirichlet", "type": "Any"}, {"lineNumber": 837, "col_offset": 38, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 837, "col_offset": 45, "nodeName": "F", "type": "Any"}, {"lineNumber": 838, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 838, "col_offset": 48, "nodeName": "dirichlet", "type": "Any"}, {"lineNumber": 838, "col_offset": 59, "nodeName": "_func", "type": "Any"}, {"lineNumber": 848, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 849, "col_offset": 18, "nodeName": "TestDirichlet", "type": "Type[Any]"}, {"lineNumber": 852, "col_offset": 21, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 854, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 854, "col_offset": 35, "nodeName": "desired_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 856, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 865, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 866, "col_offset": 25, "nodeName": "dirichlet", "type": "Any"}, {"lineNumber": 868, "col_offset": 18, "nodeName": "TestDirichlet", "type": "Type[Any]"}, {"lineNumber": 871, "col_offset": 21, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 872, "col_offset": 21, "nodeName": "logpdf", "type": "Any"}, {"lineNumber": 872, "col_offset": 64, "nodeName": "np_samples", "type": "Any"}, {"lineNumber": 873, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 873, "col_offset": 32, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 873, "col_offset": 40, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 882, "col_offset": 16, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 883, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 884, "col_offset": 19, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 886, "col_offset": 16, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 887, "col_offset": 16, "nodeName": "ss_dir", "type": "Any"}, {"lineNumber": 903, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 904, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 907, "col_offset": 24, "nodeName": "Beta", "type": "Any"}, {"lineNumber": 907, "col_offset": 33, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 907, "col_offset": 40, "nodeName": "beta", "type": "Any"}, {"lineNumber": 907, "col_offset": 46, "nodeName": "F", "type": "Any"}, {"lineNumber": 908, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 908, "col_offset": 48, "nodeName": "beta_dist", "type": "Any"}, {"lineNumber": 908, "col_offset": 59, "nodeName": "_func", "type": "Any"}, {"lineNumber": 914, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 915, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 916, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 916, "col_offset": 41, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 919, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 922, "col_offset": 34, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 929, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 929, "col_offset": 48, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 930, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 930, "col_offset": 47, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 931, "col_offset": 18, "nodeName": "TestBeta", "type": "Type[Any]"}, {"lineNumber": 931, "col_offset": 27, "nodeName": "func", "type": "str"}, {"lineNumber": 934, "col_offset": 21, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 935, "col_offset": 22, "nodeName": "beta", "type": "Any"}, {"lineNumber": 936, "col_offset": 15, "nodeName": "func", "type": "str"}, {"lineNumber": 937, "col_offset": 16, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 942, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 942, "col_offset": 32, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 942, "col_offset": 40, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 951, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 952, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 955, "col_offset": 24, "nodeName": "FisherSnedecor", "type": "Any"}, {"lineNumber": 955, "col_offset": 43, "nodeName": "df1", "type": "Any"}, {"lineNumber": 955, "col_offset": 48, "nodeName": "df2", "type": "Any"}, {"lineNumber": 955, "col_offset": 53, "nodeName": "F", "type": "Any"}, {"lineNumber": 956, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 956, "col_offset": 48, "nodeName": "beta_dist", "type": "Any"}, {"lineNumber": 956, "col_offset": 59, "nodeName": "_func", "type": "Any"}, {"lineNumber": 962, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 963, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 964, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 964, "col_offset": 41, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 967, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 970, "col_offset": 31, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 977, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 977, "col_offset": 46, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 978, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 978, "col_offset": 46, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 979, "col_offset": 18, "nodeName": "TestFisherSnedecor", "type": "Type[Any]"}, {"lineNumber": 979, "col_offset": 37, "nodeName": "func", "type": "str"}, {"lineNumber": 982, "col_offset": 21, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 983, "col_offset": 19, "nodeName": "f", "type": "Any"}, {"lineNumber": 984, "col_offset": 15, "nodeName": "func", "type": "str"}, {"lineNumber": 985, "col_offset": 16, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 987, "col_offset": 16, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 988, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 988, "col_offset": 32, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 988, "col_offset": 40, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 997, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 998, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1001, "col_offset": 21, "nodeName": "StudentT", "type": "Any"}, {"lineNumber": 1001, "col_offset": 34, "nodeName": "df", "type": "Any"}, {"lineNumber": 1001, "col_offset": 38, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1001, "col_offset": 43, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1001, "col_offset": 50, "nodeName": "F", "type": "Any"}, {"lineNumber": 1002, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 1002, "col_offset": 48, "nodeName": "t_dist", "type": "Any"}, {"lineNumber": 1002, "col_offset": 56, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1008, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 1009, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 1010, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 1011, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 1011, "col_offset": 47, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1014, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1017, "col_offset": 46, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1024, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1024, "col_offset": 27, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1025, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1025, "col_offset": 48, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1026, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1026, "col_offset": 41, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1027, "col_offset": 18, "nodeName": "TestT", "type": "Type[Any]"}, {"lineNumber": 1027, "col_offset": 24, "nodeName": "func", "type": "str"}, {"lineNumber": 1030, "col_offset": 21, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1031, "col_offset": 19, "nodeName": "t", "type": "Any"}, {"lineNumber": 1032, "col_offset": 15, "nodeName": "func", "type": "str"}, {"lineNumber": 1033, "col_offset": 16, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1038, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1038, "col_offset": 32, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1038, "col_offset": 40, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1047, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 1048, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1051, "col_offset": 21, "nodeName": "Gumbel", "type": "Any"}, {"lineNumber": 1051, "col_offset": 32, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1051, "col_offset": 37, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1051, "col_offset": 44, "nodeName": "F", "type": "Any"}, {"lineNumber": 1058, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1059, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 1060, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 1060, "col_offset": 40, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1063, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1066, "col_offset": 59, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1072, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1073, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 1074, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 1074, "col_offset": 40, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1077, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1080, "col_offset": 50, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1086, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1087, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 1088, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 1088, "col_offset": 41, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1091, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1094, "col_offset": 50, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1100, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1101, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 1104, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1117, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 1118, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1119, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1120, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1121, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1122, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1123, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1129, "col_offset": 19, "nodeName": "_is_logit", "type": "Any"}, {"lineNumber": 1133, "col_offset": 15, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1135, "col_offset": 15, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1137, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 1137, "col_offset": 48, "nodeName": "multinomial", "type": "Any"}, {"lineNumber": 1137, "col_offset": 61, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1140, "col_offset": 15, "nodeName": "identity", "type": "Any"}, {"lineNumber": 1140, "col_offset": 27, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 1140, "col_offset": 40, "nodeName": "a", "type": "Any"}, {"lineNumber": 1148, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1149, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 1153, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 1154, "col_offset": 18, "nodeName": "TestMultinomial", "type": "Type[Any]"}, {"lineNumber": 1154, "col_offset": 44, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1155, "col_offset": 34, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1155, "col_offset": 45, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1158, "col_offset": 21, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1159, "col_offset": 28, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1160, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1164, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1165, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 1169, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 1170, "col_offset": 18, "nodeName": "TestMultinomial", "type": "Type[Any]"}, {"lineNumber": 1170, "col_offset": 46, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1171, "col_offset": 34, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1171, "col_offset": 45, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1171, "col_offset": 58, "nodeName": "sample_shape", "type": "Optional[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 1174, "col_offset": 21, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1175, "col_offset": 59, "nodeName": "sample_shape", "type": "Optional[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 1176, "col_offset": 28, "nodeName": "sample_shape", "type": "Optional[Union[Tuple[()], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 1178, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1182, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1183, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 1186, "col_offset": 19, "nodeName": "clip", "type": "Any"}, {"lineNumber": 1186, "col_offset": 27, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1186, "col_offset": 33, "nodeName": "eps", "type": "Any"}, {"lineNumber": 1188, "col_offset": 59, "nodeName": "sample_shape", "type": "Optional[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 1189, "col_offset": 28, "nodeName": "sample_shape", "type": "Optional[Union[Tuple[()], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 1191, "col_offset": 22, "nodeName": "choice", "type": "Any"}, {"lineNumber": 1191, "col_offset": 39, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1192, "col_offset": 22, "nodeName": "one_hot", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1192, "col_offset": 30, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1192, "col_offset": 39, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1194, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 1195, "col_offset": 18, "nodeName": "TestMultinomial", "type": "Type[Any]"}, {"lineNumber": 1195, "col_offset": 46, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1196, "col_offset": 60, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1199, "col_offset": 21, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1201, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1201, "col_offset": 35, "nodeName": "desired_shape", "type": "Any"}, {"lineNumber": 1209, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 1210, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1211, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1212, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1216, "col_offset": 19, "nodeName": "_is_logit", "type": "Any"}, {"lineNumber": 1218, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 1218, "col_offset": 48, "nodeName": "dist", "type": "Any"}, {"lineNumber": 1218, "col_offset": 54, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1224, "col_offset": 16, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1225, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1226, "col_offset": 18, "nodeName": "TestBinomial", "type": "Type[Any]"}, {"lineNumber": 1226, "col_offset": 41, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1229, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 1232, "col_offset": 21, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1233, "col_offset": 68, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1234, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1234, "col_offset": 35, "nodeName": "desired_shape", "type": "Union[int, Tuple[()], Tuple[Union[Tuple[int], int, Tuple[()], Tuple[int, int]]], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 1239, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 1240, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1240, "col_offset": 47, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1241, "col_offset": 15, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1241, "col_offset": 30, "nodeName": "n", "type": "Any"}, {"lineNumber": 1241, "col_offset": 38, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1242, "col_offset": 18, "nodeName": "dist", "type": "Any"}, {"lineNumber": 1243, "col_offset": 15, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1243, "col_offset": 33, "nodeName": "prefix_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1243, "col_offset": 48, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1247, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 1248, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1248, "col_offset": 47, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1252, "col_offset": 20, "nodeName": "prob_to_logit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1252, "col_offset": 34, "nodeName": "param", "type": "Any"}, {"lineNumber": 1255, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1257, "col_offset": 56, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1265, "col_offset": 16, "nodeName": "n", "type": "Any"}, {"lineNumber": 1266, "col_offset": 16, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1267, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 1268, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 1268, "col_offset": 24, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1269, "col_offset": 19, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1271, "col_offset": 19, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1273, "col_offset": 16, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1274, "col_offset": 16, "nodeName": "ss_binom", "type": "Any"}, {"lineNumber": 1288, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 1289, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1290, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1293, "col_offset": 75, "nodeName": "_is_logit", "type": "Any"}, {"lineNumber": 1295, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 1295, "col_offset": 48, "nodeName": "bernoulli", "type": "Any"}, {"lineNumber": 1295, "col_offset": 59, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1300, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1300, "col_offset": 38, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1301, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 1301, "col_offset": 53, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1304, "col_offset": 20, "nodeName": "prob_to_logit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1304, "col_offset": 34, "nodeName": "param", "type": "Any"}, {"lineNumber": 1307, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1309, "col_offset": 17, "nodeName": "_np", "type": "module"}, {"lineNumber": 1309, "col_offset": 25, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 1315, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1315, "col_offset": 38, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1316, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 1316, "col_offset": 53, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1319, "col_offset": 20, "nodeName": "prob_to_logit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1319, "col_offset": 34, "nodeName": "param", "type": "Any"}, {"lineNumber": 1322, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1330, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1330, "col_offset": 38, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1331, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 1331, "col_offset": 53, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 1334, "col_offset": 20, "nodeName": "prob_to_logit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1334, "col_offset": 34, "nodeName": "param", "type": "Any"}, {"lineNumber": 1337, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1349, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 1350, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1351, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1355, "col_offset": 19, "nodeName": "_is_logit", "type": "Any"}, {"lineNumber": 1357, "col_offset": 15, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1359, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 1359, "col_offset": 48, "nodeName": "relaxed_bernoulli", "type": "Any"}, {"lineNumber": 1359, "col_offset": 67, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1362, "col_offset": 15, "nodeName": "log", "type": "Any"}, {"lineNumber": 1362, "col_offset": 22, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1362, "col_offset": 30, "nodeName": "log1p", "type": "Any"}, {"lineNumber": 1367, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1367, "col_offset": 38, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1370, "col_offset": 20, "nodeName": "prob_to_logit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1370, "col_offset": 34, "nodeName": "param", "type": "Any"}, {"lineNumber": 1371, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 1374, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1375, "col_offset": 13, "nodeName": "record", "type": "Any"}, {"lineNumber": 1376, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 1376, "col_offset": 25, "nodeName": "param", "type": "Any"}, {"lineNumber": 1377, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1378, "col_offset": 36, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1378, "col_offset": 47, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1378, "col_offset": 54, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 1378, "col_offset": 25, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1379, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 1382, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1382, "col_offset": 38, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1383, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 1383, "col_offset": 50, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1386, "col_offset": 20, "nodeName": "prob_to_logit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1386, "col_offset": 34, "nodeName": "param", "type": "Any"}, {"lineNumber": 1389, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1391, "col_offset": 36, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1391, "col_offset": 47, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1391, "col_offset": 54, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 1391, "col_offset": 25, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1392, "col_offset": 15, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1400, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 1401, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1402, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1403, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1404, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1405, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1409, "col_offset": 19, "nodeName": "_is_logit", "type": "Any"}, {"lineNumber": 1412, "col_offset": 15, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1414, "col_offset": 15, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1416, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 1416, "col_offset": 48, "nodeName": "categorical", "type": "Any"}, {"lineNumber": 1416, "col_offset": 61, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1424, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1425, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 1427, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 1429, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 1430, "col_offset": 18, "nodeName": "TestCategorical", "type": "Type[Any]"}, {"lineNumber": 1430, "col_offset": 44, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1431, "col_offset": 34, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1431, "col_offset": 47, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1434, "col_offset": 21, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1435, "col_offset": 28, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1436, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1436, "col_offset": 35, "nodeName": "desired_shape", "type": "Optional[Union[Tuple[()], Tuple[int, int]]]"}, {"lineNumber": 1440, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1441, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 1443, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 1445, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 1446, "col_offset": 18, "nodeName": "TestCategorical", "type": "Type[Any]"}, {"lineNumber": 1452, "col_offset": 21, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1453, "col_offset": 28, "nodeName": "sample_shape", "type": "Union[Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 1455, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1455, "col_offset": 35, "nodeName": "desired_shape", "type": "Any"}, {"lineNumber": 1459, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1460, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 1463, "col_offset": 19, "nodeName": "clip", "type": "Any"}, {"lineNumber": 1463, "col_offset": 27, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1463, "col_offset": 33, "nodeName": "eps", "type": "Any"}, {"lineNumber": 1464, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 1465, "col_offset": 28, "nodeName": "sample_shape", "type": "Union[Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 1467, "col_offset": 22, "nodeName": "choice", "type": "Any"}, {"lineNumber": 1467, "col_offset": 39, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1469, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 1470, "col_offset": 18, "nodeName": "TestCategorical", "type": "Type[Any]"}, {"lineNumber": 1470, "col_offset": 46, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1471, "col_offset": 34, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1471, "col_offset": 47, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1474, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 1474, "col_offset": 25, "nodeName": "param", "type": "Any"}, {"lineNumber": 1474, "col_offset": 32, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1476, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1476, "col_offset": 35, "nodeName": "desired_shape", "type": "Any"}, {"lineNumber": 1478, "col_offset": 31, "nodeName": "broadcast_arrays", "type": "Any"}, {"lineNumber": 1480, "col_offset": 15, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 1481, "col_offset": 16, "nodeName": "indices", "type": "Any"}, {"lineNumber": 1484, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1489, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1490, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 1492, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 1494, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 1495, "col_offset": 18, "nodeName": "TestCategorical", "type": "Type[Any]"}, {"lineNumber": 1496, "col_offset": 34, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1496, "col_offset": 45, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1496, "col_offset": 58, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1499, "col_offset": 21, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1502, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1502, "col_offset": 35, "nodeName": "desired_shape", "type": "Any"}, {"lineNumber": 1509, "col_offset": 15, "nodeName": "identity", "type": "Any"}, {"lineNumber": 1509, "col_offset": 27, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 1509, "col_offset": 40, "nodeName": "a", "type": "Any"}, {"lineNumber": 1513, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 1514, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1515, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1516, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1517, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1521, "col_offset": 19, "nodeName": "_is_logit", "type": "Any"}, {"lineNumber": 1523, "col_offset": 15, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1525, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 1525, "col_offset": 48, "nodeName": "categorical", "type": "Any"}, {"lineNumber": 1525, "col_offset": 61, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1533, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1534, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 1538, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 1539, "col_offset": 18, "nodeName": "TestOneHotCategorical", "type": "Type[Any]"}, {"lineNumber": 1540, "col_offset": 26, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1540, "col_offset": 37, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1540, "col_offset": 50, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1543, "col_offset": 21, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1544, "col_offset": 28, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1545, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1549, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1550, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 1553, "col_offset": 19, "nodeName": "clip", "type": "Any"}, {"lineNumber": 1553, "col_offset": 27, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1553, "col_offset": 33, "nodeName": "eps", "type": "Any"}, {"lineNumber": 1555, "col_offset": 28, "nodeName": "sample_shape", "type": "Union[Tuple[int, int], Tuple[int], Tuple[()]]"}, {"lineNumber": 1557, "col_offset": 22, "nodeName": "choice", "type": "Any"}, {"lineNumber": 1557, "col_offset": 39, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1558, "col_offset": 22, "nodeName": "one_hot", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1558, "col_offset": 30, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1558, "col_offset": 39, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1560, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 1561, "col_offset": 18, "nodeName": "TestOneHotCategorical", "type": "Type[Any]"}, {"lineNumber": 1562, "col_offset": 28, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1562, "col_offset": 39, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1562, "col_offset": 52, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1565, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 1565, "col_offset": 25, "nodeName": "param", "type": "Any"}, {"lineNumber": 1565, "col_offset": 32, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1567, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1567, "col_offset": 35, "nodeName": "desired_shape", "type": "Any"}, {"lineNumber": 1571, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1572, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 1576, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 1577, "col_offset": 18, "nodeName": "TestOneHotCategorical", "type": "Type[Any]"}, {"lineNumber": 1578, "col_offset": 37, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1578, "col_offset": 48, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1578, "col_offset": 61, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1581, "col_offset": 21, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1582, "col_offset": 28, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1583, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1592, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 1593, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 1594, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 1595, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 1596, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 1600, "col_offset": 19, "nodeName": "_is_logit", "type": "Any"}, {"lineNumber": 1603, "col_offset": 15, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1605, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 1605, "col_offset": 48, "nodeName": "categorical", "type": "Any"}, {"lineNumber": 1605, "col_offset": 61, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1613, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1614, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 1616, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 1619, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 1620, "col_offset": 12, "nodeName": "attach_grad", "type": "Any"}, {"lineNumber": 1621, "col_offset": 18, "nodeName": "TestRelaxedOneHotCategorical", "type": "Type[Any]"}, {"lineNumber": 1622, "col_offset": 26, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1622, "col_offset": 37, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1622, "col_offset": 50, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1626, "col_offset": 16, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1627, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 1628, "col_offset": 28, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1629, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1630, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1630, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1634, "col_offset": 36, "nodeName": "itertools", "type": "module"}, {"lineNumber": 1635, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 1638, "col_offset": 19, "nodeName": "clip", "type": "Any"}, {"lineNumber": 1638, "col_offset": 27, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1638, "col_offset": 33, "nodeName": "eps", "type": "Any"}, {"lineNumber": 1640, "col_offset": 28, "nodeName": "sample_shape", "type": "Union[Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 1643, "col_offset": 22, "nodeName": "array", "type": "Any"}, {"lineNumber": 1646, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 1647, "col_offset": 18, "nodeName": "TestRelaxedOneHotCategorical", "type": "Type[Any]"}, {"lineNumber": 1648, "col_offset": 28, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1648, "col_offset": 39, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1648, "col_offset": 52, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1651, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 1651, "col_offset": 25, "nodeName": "param", "type": "Any"}, {"lineNumber": 1651, "col_offset": 32, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1653, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1653, "col_offset": 35, "nodeName": "desired_shape", "type": "Any"}, {"lineNumber": 1661, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 1662, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1664, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1667, "col_offset": 18, "nodeName": "MultivariateNormal", "type": "Any"}, {"lineNumber": 1669, "col_offset": 19, "nodeName": "_distribution_method_invoker", "type": "Callable[..., Any]"}, {"lineNumber": 1669, "col_offset": 48, "nodeName": "mvn", "type": "Any"}, {"lineNumber": 1669, "col_offset": 53, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1675, "col_offset": 20, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 1676, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 1677, "col_offset": 16, "nodeName": "precision", "type": "Any"}, {"lineNumber": 1677, "col_offset": 28, "nodeName": "precision_t", "type": "Any"}, {"lineNumber": 1684, "col_offset": 31, "nodeName": "_stable_inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 1684, "col_offset": 43, "nodeName": "s", "type": "Any"}, {"lineNumber": 1685, "col_offset": 32, "nodeName": "cholesky", "type": "Any"}, {"lineNumber": 1685, "col_offset": 51, "nodeName": "s", "type": "Any"}, {"lineNumber": 1690, "col_offset": 24, "nodeName": "cov_func", "type": "Dict[str, Callable[[Any], Any]]"}, {"lineNumber": 1692, "col_offset": 16, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1693, "col_offset": 16, "nodeName": "_s", "type": "Any"}, {"lineNumber": 1699, "col_offset": 16, "nodeName": "cov_param", "type": "Any"}, {"lineNumber": 1700, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 1701, "col_offset": 19, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1705, "col_offset": 16, "nodeName": "desired_shape", "type": "Any"}, {"lineNumber": 1705, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1713, "col_offset": 24, "nodeName": "cov_func", "type": "Dict[str, Callable[[Any], Any]]"}, {"lineNumber": 1715, "col_offset": 16, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1716, "col_offset": 16, "nodeName": "_s", "type": "Any"}, {"lineNumber": 1724, "col_offset": 16, "nodeName": "cov_param", "type": "Any"}, {"lineNumber": 1725, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 1726, "col_offset": 19, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1728, "col_offset": 16, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1734, "col_offset": 16, "nodeName": "samples_t", "type": "Any"}, {"lineNumber": 1736, "col_offset": 16, "nodeName": "loc_t", "type": "Any"}, {"lineNumber": 1739, "col_offset": 16, "nodeName": "scipy_mvn", "type": "Any"}, {"lineNumber": 1740, "col_offset": 16, "nodeName": "ss_out", "type": "Any"}, {"lineNumber": 1746, "col_offset": 24, "nodeName": "cov_func", "type": "Dict[str, Callable[[Any], Any]]"}, {"lineNumber": 1748, "col_offset": 16, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1749, "col_offset": 16, "nodeName": "_s", "type": "Any"}, {"lineNumber": 1755, "col_offset": 16, "nodeName": "cov_param", "type": "Any"}, {"lineNumber": 1756, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 1757, "col_offset": 19, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 1759, "col_offset": 16, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1766, "col_offset": 16, "nodeName": "loc_t", "type": "Any"}, {"lineNumber": 1769, "col_offset": 16, "nodeName": "scipy_mvn", "type": "Any"}, {"lineNumber": 1770, "col_offset": 16, "nodeName": "ss_out", "type": "Any"}, {"lineNumber": 1780, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 1781, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1784, "col_offset": 26, "nodeName": "HalfNormal", "type": "Any"}, {"lineNumber": 1784, "col_offset": 41, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1784, "col_offset": 48, "nodeName": "F", "type": "Any"}, {"lineNumber": 1791, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 1794, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1798, "col_offset": 15, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1802, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 1803, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 1803, "col_offset": 25, "nodeName": "normal", "type": "Any"}, {"lineNumber": 1806, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1808, "col_offset": 56, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1814, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 1815, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 1815, "col_offset": 25, "nodeName": "normal", "type": "Any"}, {"lineNumber": 1818, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1820, "col_offset": 53, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1826, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 1827, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 1827, "col_offset": 41, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1830, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1832, "col_offset": 53, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1846, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 1847, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1850, "col_offset": 25, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 1851, "col_offset": 59, "nodeName": "F", "type": "Any"}, {"lineNumber": 1854, "col_offset": 33, "nodeName": "TransformedDistribution", "type": "Any"}, {"lineNumber": 1855, "col_offset": 16, "nodeName": "std_normal", "type": "Any"}, {"lineNumber": 1855, "col_offset": 28, "nodeName": "transforms", "type": "List[Any]"}, {"lineNumber": 1864, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1865, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1866, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 1867, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1868, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 1868, "col_offset": 40, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int]"}, {"lineNumber": 1871, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1872, "col_offset": 13, "nodeName": "record", "type": "Any"}, {"lineNumber": 1873, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 1873, "col_offset": 25, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1873, "col_offset": 30, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1873, "col_offset": 37, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1874, "col_offset": 17, "nodeName": "_np", "type": "module"}, {"lineNumber": 1876, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1878, "col_offset": 8, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1881, "col_offset": 39, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1882, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1884, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1889, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1890, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1891, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 1892, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1893, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1893, "col_offset": 26, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int]"}, {"lineNumber": 1893, "col_offset": 33, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1894, "col_offset": 21, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int]"}, {"lineNumber": 1898, "col_offset": 15, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1906, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 1907, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1911, "col_offset": 25, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 1912, "col_offset": 59, "nodeName": "F", "type": "Any"}, {"lineNumber": 1913, "col_offset": 25, "nodeName": "ComposeTransform", "type": "Any"}, {"lineNumber": 1918, "col_offset": 33, "nodeName": "TransformedDistribution", "type": "Any"}, {"lineNumber": 1919, "col_offset": 16, "nodeName": "std_normal", "type": "Any"}, {"lineNumber": 1919, "col_offset": 28, "nodeName": "transforms", "type": "Any"}, {"lineNumber": 1927, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1928, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1929, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 1930, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1931, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 1931, "col_offset": 47, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[int, int]]"}, {"lineNumber": 1934, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1935, "col_offset": 13, "nodeName": "record", "type": "Any"}, {"lineNumber": 1936, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 1936, "col_offset": 25, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1936, "col_offset": 30, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1936, "col_offset": 37, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1938, "col_offset": 35, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1939, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1945, "col_offset": 8, "nodeName": "np", "type": "Any"}, {"lineNumber": 1951, "col_offset": 12, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 1952, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1958, "col_offset": 9, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 1960, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 1961, "col_offset": 24, "nodeName": "grad", "type": "Any"}, {"lineNumber": 1961, "col_offset": 50, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1965, "col_offset": 18, "nodeName": "Dummy", "type": "Type[Any]"}, {"lineNumber": 1965, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 1966, "col_offset": 19, "nodeName": "obj", "type": "Any"}, {"lineNumber": 1968, "col_offset": 8, "nodeName": "np", "type": "Any"}, {"lineNumber": 1971, "col_offset": 9, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 1973, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 1974, "col_offset": 24, "nodeName": "grad", "type": "Any"}, {"lineNumber": 1974, "col_offset": 50, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1976, "col_offset": 8, "nodeName": "np", "type": "Any"}, {"lineNumber": 1979, "col_offset": 9, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 1981, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 1982, "col_offset": 24, "nodeName": "grad", "type": "Any"}, {"lineNumber": 1982, "col_offset": 50, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1989, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 1990, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1991, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1994, "col_offset": 24, "nodeName": "Bernoulli", "type": "Any"}, {"lineNumber": 1995, "col_offset": 28, "nodeName": "Independent", "type": "Any"}, {"lineNumber": 1995, "col_offset": 44, "nodeName": "base_dist", "type": "Any"}, {"lineNumber": 1995, "col_offset": 55, "nodeName": "_event_dim", "type": "Any"}, {"lineNumber": 2003, "col_offset": 16, "nodeName": "full_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 2004, "col_offset": 16, "nodeName": "logit", "type": "Any"}, {"lineNumber": 2005, "col_offset": 16, "nodeName": "samples", "type": "Any"}, {"lineNumber": 2006, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 2007, "col_offset": 19, "nodeName": "hybridize", "type": "Union[int, bool]"}, {"lineNumber": 2009, "col_offset": 16, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 2024, "col_offset": 17, "nodeName": "_np", "type": "module"}, {"lineNumber": 2032, "col_offset": 13, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2033, "col_offset": 20, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2034, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 2034, "col_offset": 49, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 2047, "col_offset": 42, "nodeName": "f", "type": "Callable[[], Any]"}, {"lineNumber": 2047, "col_offset": 48, "nodeName": "f", "type": "Callable[[], Any]"}, {"lineNumber": 2047, "col_offset": 53, "nodeName": "param_funcs", "type": "Tuple[Callable[[], Any], Callable[[], Any]]"}, {"lineNumber": 2048, "col_offset": 21, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 2059, "col_offset": 26, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2059, "col_offset": 50, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2060, "col_offset": 27, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2060, "col_offset": 51, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2061, "col_offset": 22, "nodeName": "_dist_factory", "type": "Callable[..., Any]"}, {"lineNumber": 2061, "col_offset": 36, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2061, "col_offset": 42, "nodeName": "low", "type": "Callable[[], Any]"}, {"lineNumber": 2061, "col_offset": 47, "nodeName": "high", "type": "Callable[[], Any]"}, {"lineNumber": 2068, "col_offset": 12, "nodeName": "_test_zero_kl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2068, "col_offset": 59, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2077, "col_offset": 27, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2077, "col_offset": 55, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2078, "col_offset": 22, "nodeName": "_dist_factory", "type": "Callable[..., Any]"}, {"lineNumber": 2078, "col_offset": 36, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2078, "col_offset": 42, "nodeName": "rate", "type": "Callable[[], Any]"}, {"lineNumber": 2088, "col_offset": 12, "nodeName": "_test_zero_kl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2088, "col_offset": 50, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2097, "col_offset": 28, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2098, "col_offset": 28, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2099, "col_offset": 22, "nodeName": "_dist_factory", "type": "Callable[..., Any]"}, {"lineNumber": 2099, "col_offset": 36, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2099, "col_offset": 42, "nodeName": "alpha", "type": "Callable[[], Any]"}, {"lineNumber": 2099, "col_offset": 49, "nodeName": "scale", "type": "Callable[[], Any]"}, {"lineNumber": 2103, "col_offset": 28, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2103, "col_offset": 56, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2104, "col_offset": 22, "nodeName": "_dist_factory", "type": "Callable[..., Any]"}, {"lineNumber": 2104, "col_offset": 36, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2104, "col_offset": 42, "nodeName": "scale", "type": "Callable[[], Any]"}, {"lineNumber": 2115, "col_offset": 12, "nodeName": "_test_zero_kl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2115, "col_offset": 63, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2123, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 2124, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 2124, "col_offset": 47, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2125, "col_offset": 15, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2125, "col_offset": 30, "nodeName": "n", "type": "Any"}, {"lineNumber": 2125, "col_offset": 38, "nodeName": "prob", "type": "Any"}, {"lineNumber": 2130, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 2130, "col_offset": 38, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2131, "col_offset": 15, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2131, "col_offset": 34, "nodeName": "prob", "type": "Any"}, {"lineNumber": 2138, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 2139, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2140, "col_offset": 16, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 2140, "col_offset": 26, "nodeName": "_s", "type": "Any"}, {"lineNumber": 2140, "col_offset": 57, "nodeName": "eye", "type": "Any"}, {"lineNumber": 2140, "col_offset": 64, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 2141, "col_offset": 15, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2141, "col_offset": 47, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 2148, "col_offset": 40, "nodeName": "batch_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 2150, "col_offset": 28, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2152, "col_offset": 22, "nodeName": "_dist_factory", "type": "Callable[..., Any]"}, {"lineNumber": 2152, "col_offset": 36, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2152, "col_offset": 42, "nodeName": "alpha", "type": "Callable[[], Any]"}, {"lineNumber": 2160, "col_offset": 40, "nodeName": "itertools", "type": "module"}, {"lineNumber": 2163, "col_offset": 12, "nodeName": "_test_zero_kl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2163, "col_offset": 66, "nodeName": "batch_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 2173, "col_offset": 12, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 2175, "col_offset": 12, "nodeName": "Gumbel", "type": "Any"}, {"lineNumber": 2179, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2179, "col_offset": 43, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2180, "col_offset": 19, "nodeName": "low", "type": "Any"}, {"lineNumber": 2181, "col_offset": 23, "nodeName": "Uniform", "type": "Any"}, {"lineNumber": 2181, "col_offset": 35, "nodeName": "low", "type": "Any"}, {"lineNumber": 2181, "col_offset": 40, "nodeName": "high", "type": "Any"}, {"lineNumber": 2182, "col_offset": 17, "nodeName": "kl_divergence", "type": "Any"}, {"lineNumber": 2182, "col_offset": 35, "nodeName": "lhs_dist", "type": "Any"}, {"lineNumber": 2182, "col_offset": 45, "nodeName": "rhs_dist", "type": "Any"}, {"lineNumber": 2183, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2183, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2190, "col_offset": 12, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 2192, "col_offset": 12, "nodeName": "Gumbel", "type": "Any"}, {"lineNumber": 2194, "col_offset": 12, "nodeName": "Gamma", "type": "Any"}, {"lineNumber": 2198, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2199, "col_offset": 23, "nodeName": "Exponential", "type": "Any"}, {"lineNumber": 2199, "col_offset": 39, "nodeName": "s", "type": "Any"}, {"lineNumber": 2200, "col_offset": 17, "nodeName": "kl_divergence", "type": "Any"}, {"lineNumber": 2200, "col_offset": 35, "nodeName": "lhs_dist", "type": "Any"}, {"lineNumber": 2200, "col_offset": 45, "nodeName": "rhs_dist", "type": "Any"}, {"lineNumber": 2201, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2201, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2216, "col_offset": 17, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 2216, "col_offset": 28, "nodeName": "loc", "type": "Any"}, {"lineNumber": 2216, "col_offset": 33, "nodeName": "scale", "type": "Any"}, {"lineNumber": 2218, "col_offset": 17, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 2219, "col_offset": 12, "nodeName": "add_loss", "type": "Any"}, {"lineNumber": 2220, "col_offset": 12, "nodeName": "add_loss", "type": "Any"}, {"lineNumber": 2221, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 2227, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 2228, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 2228, "col_offset": 31, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2229, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 2229, "col_offset": 32, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2233, "col_offset": 15, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 2233, "col_offset": 31, "nodeName": "loc", "type": "Any"}, {"lineNumber": 2234, "col_offset": 15, "nodeName": "kl", "type": "Any"}, {"lineNumber": 2234, "col_offset": 27, "nodeName": "loc", "type": "Any"}, {"lineNumber": 2235, "col_offset": 15, "nodeName": "l2_norm", "type": "Any"}, {"lineNumber": 2235, "col_offset": 32, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2243, "col_offset": 17, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 2243, "col_offset": 28, "nodeName": "loc", "type": "Any"}, {"lineNumber": 2243, "col_offset": 33, "nodeName": "scale", "type": "Any"}, {"lineNumber": 2245, "col_offset": 17, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 2246, "col_offset": 12, "nodeName": "add_loss", "type": "Any"}, {"lineNumber": 2247, "col_offset": 12, "nodeName": "add_loss", "type": "Any"}, {"lineNumber": 2248, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 2254, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 2255, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 2255, "col_offset": 31, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2256, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 2256, "col_offset": 32, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2257, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 2257, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 2258, "col_offset": 21, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 2267, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 2272, "col_offset": 12, "nodeName": "add_loss", "type": "Any"}, {"lineNumber": 2273, "col_offset": 12, "nodeName": "add_loss", "type": "Any"}, {"lineNumber": 2274, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 2278, "col_offset": 12, "nodeName": "add_loss", "type": "Any"}, {"lineNumber": 2279, "col_offset": 12, "nodeName": "add_loss", "type": "Any"}, {"lineNumber": 2280, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 2284, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 2286, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 2286, "col_offset": 16, "nodeName": "stochasticBlock", "type": "Type[Any]"}, {"lineNumber": 2287, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 2287, "col_offset": 16, "nodeName": "normalBlock", "type": "Type[Any]"}, {"lineNumber": 2288, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 2288, "col_offset": 16, "nodeName": "stochasticBlock", "type": "Type[Any]"}, {"lineNumber": 2289, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 2289, "col_offset": 16, "nodeName": "normalBlock", "type": "Type[Any]"}, {"lineNumber": 2291, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 2295, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2295, "col_offset": 19, "nodeName": "accumulated_loss", "type": "Any"}, {"lineNumber": 2296, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 2296, "col_offset": 62, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2296, "col_offset": 71, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2298, "col_offset": 12, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 2300, "col_offset": 12, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 2302, "col_offset": 12, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 2305, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 2307, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 2307, "col_offset": 16, "nodeName": "stochasticBlock", "type": "Type[Any]"}, {"lineNumber": 2308, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 2308, "col_offset": 16, "nodeName": "normalBlock", "type": "Type[Any]"}, {"lineNumber": 2309, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 2309, "col_offset": 16, "nodeName": "problemBlock", "type": "Type[Any]"}, {"lineNumber": 2310, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 2310, "col_offset": 16, "nodeName": "normalBlock", "type": "Type[Any]"}, {"lineNumber": 2312, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 2313, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 2313, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 2314, "col_offset": 21, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 2322, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 2323, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 2323, "col_offset": 36, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 2323, "col_offset": 44, "nodeName": "constraint", "type": "Any"}, {"lineNumber": 2323, "col_offset": 60, "nodeName": "constraint_type", "type": "str"}, {"lineNumber": 2326, "col_offset": 20, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 2327, "col_offset": 31, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 2329, "col_offset": 16, "nodeName": "constraint", "type": "Any"}, {"lineNumber": 2331, "col_offset": 16, "nodeName": "constraint", "type": "Any"}, {"lineNumber": 2332, "col_offset": 19, "nodeName": "check", "type": "Any"}, {"lineNumber": 2332, "col_offset": 36, "nodeName": "value", "type": "Any"}, {"lineNumber": 2334, "col_offset": 9, "nodeName": "np", "type": "Any"}, {"lineNumber": 2335, "col_offset": 17, "nodeName": "np", "type": "Any"}, {"lineNumber": 2335, "col_offset": 31, "nodeName": "swapaxes", "type": "Any"}, {"lineNumber": 2335, "col_offset": 43, "nodeName": "_s", "type": "Any"}, {"lineNumber": 2335, "col_offset": 58, "nodeName": "np", "type": "Any"}, {"lineNumber": 2335, "col_offset": 65, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2374, "col_offset": 34, "nodeName": "psd_matrix", "type": "Any"}, {"lineNumber": 2379, "col_offset": 18, "nodeName": "TestConstraint", "type": "Type[Any]"}, {"lineNumber": 2379, "col_offset": 33, "nodeName": "constraint_type", "type": "str"}, {"lineNumber": 2383, "col_offset": 16, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 2392, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 2393, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 2393, "col_offset": 36, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 2393, "col_offset": 44, "nodeName": "constraint", "type": "Any"}, {"lineNumber": 2393, "col_offset": 60, "nodeName": "constraint_type", "type": "str"}, {"lineNumber": 2396, "col_offset": 20, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 2397, "col_offset": 31, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 2399, "col_offset": 16, "nodeName": "constraint", "type": "Any"}, {"lineNumber": 2401, "col_offset": 16, "nodeName": "constraint", "type": "Any"}, {"lineNumber": 2403, "col_offset": 16, "nodeName": "bijector", "type": "Any"}, {"lineNumber": 2404, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 2404, "col_offset": 29, "nodeName": "F", "type": "Any"}, {"lineNumber": 2405, "col_offset": 16, "nodeName": "value", "type": "Any"}, {"lineNumber": 2407, "col_offset": 16, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 2408, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 2408, "col_offset": 35, "nodeName": "F", "type": "Any"}, {"lineNumber": 2409, "col_offset": 16, "nodeName": "value", "type": "Any"}, {"lineNumber": 2410, "col_offset": 20, "nodeName": "value", "type": "Any"}, {"lineNumber": 2424, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 2429, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 2430, "col_offset": 19, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "nd", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "nd", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "sym", "type": "Any"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "sym", "type": "Any"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "nd", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "sym", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "sym", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "nd", "type": "Any"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 85, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 70, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 100, "col_offset": 63, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "low", "type": "Any"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "high", "type": "Any"}, {"lineNumber": 112, "col_offset": 32, "nodeName": "samples", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 114, "col_offset": 56, "nodeName": "samples", "type": "Any"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "low", "type": "Any"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "high", "type": "Any"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "samples", "type": "Any"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 128, "col_offset": 56, "nodeName": "samples", "type": "Any"}, {"lineNumber": 134, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "low", "type": "Any"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "high", "type": "Any"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 156, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 69, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "loc", "type": "Any"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 168, "col_offset": 33, "nodeName": "samples", "type": "Any"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "norm", "type": "Any"}, {"lineNumber": 170, "col_offset": 49, "nodeName": "samples", "type": "Any"}, {"lineNumber": 176, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 178, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "loc", "type": "Any"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 182, "col_offset": 33, "nodeName": "samples", "type": "Any"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "norm", "type": "Any"}, {"lineNumber": 184, "col_offset": 46, "nodeName": "samples", "type": "Any"}, {"lineNumber": 190, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "loc", "type": "Any"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 196, "col_offset": 33, "nodeName": "samples", "type": "Any"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "norm", "type": "Any"}, {"lineNumber": 198, "col_offset": 46, "nodeName": "samples", "type": "Any"}, {"lineNumber": 204, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 209, "col_offset": 21, "nodeName": "loc", "type": "Any"}, {"lineNumber": 209, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 210, "col_offset": 17, "nodeName": "norm", "type": "Any"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 226, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 70, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 232, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 234, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "loc", "type": "Any"}, {"lineNumber": 238, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 238, "col_offset": 33, "nodeName": "samples", "type": "Any"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "laplace", "type": "Any"}, {"lineNumber": 240, "col_offset": 52, "nodeName": "samples", "type": "Any"}, {"lineNumber": 246, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 248, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 252, "col_offset": 21, "nodeName": "loc", "type": "Any"}, {"lineNumber": 252, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 252, "col_offset": 33, "nodeName": "samples", "type": "Any"}, {"lineNumber": 253, "col_offset": 17, "nodeName": "laplace", "type": "Any"}, {"lineNumber": 254, "col_offset": 49, "nodeName": "samples", "type": "Any"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 266, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "loc", "type": "Any"}, {"lineNumber": 266, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 266, "col_offset": 33, "nodeName": "samples", "type": "Any"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "laplace", "type": "Any"}, {"lineNumber": 268, "col_offset": 49, "nodeName": "samples", "type": "Any"}, {"lineNumber": 274, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 275, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 279, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "loc", "type": "Any"}, {"lineNumber": 279, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "laplace", "type": "Any"}, {"lineNumber": 295, "col_offset": 21, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 296, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 296, "col_offset": 69, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 302, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 304, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 314, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 316, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 320, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "loc", "type": "Any"}, {"lineNumber": 320, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 320, "col_offset": 33, "nodeName": "samples", "type": "Any"}, {"lineNumber": 321, "col_offset": 17, "nodeName": "cauchy", "type": "Any"}, {"lineNumber": 322, "col_offset": 51, "nodeName": "samples", "type": "Any"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 329, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 334, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 334, "col_offset": 21, "nodeName": "loc", "type": "Any"}, {"lineNumber": 334, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 334, "col_offset": 33, "nodeName": "samples", "type": "Any"}, {"lineNumber": 335, "col_offset": 17, "nodeName": "cauchy", "type": "Any"}, {"lineNumber": 336, "col_offset": 48, "nodeName": "samples", "type": "Any"}, {"lineNumber": 342, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 344, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 348, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 348, "col_offset": 21, "nodeName": "loc", "type": "Any"}, {"lineNumber": 348, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 348, "col_offset": 33, "nodeName": "samples", "type": "Any"}, {"lineNumber": 349, "col_offset": 17, "nodeName": "cauchy", "type": "Any"}, {"lineNumber": 350, "col_offset": 48, "nodeName": "samples", "type": "Any"}, {"lineNumber": 356, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 361, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 361, "col_offset": 21, "nodeName": "loc", "type": "Any"}, {"lineNumber": 361, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 362, "col_offset": 17, "nodeName": "cauchy", "type": "Any"}, {"lineNumber": 377, "col_offset": 26, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 378, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 378, "col_offset": 27, "nodeName": "half_normal", "type": "Any"}, {"lineNumber": 378, "col_offset": 40, "nodeName": "_func", "type": "Any"}, {"lineNumber": 378, "col_offset": 53, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 388, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 388, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 395, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 396, "col_offset": 25, "nodeName": "random", "type": "Any"}, {"lineNumber": 396, "col_offset": 47, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 400, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 400, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 400, "col_offset": 28, "nodeName": "samples", "type": "Any"}, {"lineNumber": 401, "col_offset": 17, "nodeName": "halfcauchy", "type": "Any"}, {"lineNumber": 401, "col_offset": 58, "nodeName": "samples", "type": "Any"}, {"lineNumber": 407, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 408, "col_offset": 25, "nodeName": "random", "type": "Any"}, {"lineNumber": 408, "col_offset": 47, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 412, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 412, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 412, "col_offset": 28, "nodeName": "samples", "type": "Any"}, {"lineNumber": 413, "col_offset": 17, "nodeName": "halfcauchy", "type": "Any"}, {"lineNumber": 413, "col_offset": 55, "nodeName": "samples", "type": "Any"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 420, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 424, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 424, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 424, "col_offset": 28, "nodeName": "samples", "type": "Any"}, {"lineNumber": 425, "col_offset": 17, "nodeName": "halfcauchy", "type": "Any"}, {"lineNumber": 425, "col_offset": 55, "nodeName": "samples", "type": "Any"}, {"lineNumber": 439, "col_offset": 22, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 440, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 440, "col_offset": 70, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 445, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 449, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 449, "col_offset": 21, "nodeName": "rate", "type": "Any"}, {"lineNumber": 454, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 455, "col_offset": 18, "nodeName": "randint", "type": "Any"}, {"lineNumber": 455, "col_offset": 42, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[int, int]]"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 459, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 459, "col_offset": 21, "nodeName": "rate", "type": "Any"}, {"lineNumber": 459, "col_offset": 27, "nodeName": "samples", "type": "Any"}, {"lineNumber": 460, "col_offset": 17, "nodeName": "poisson", "type": "Any"}, {"lineNumber": 460, "col_offset": 54, "nodeName": "samples", "type": "Any"}, {"lineNumber": 475, "col_offset": 70, "nodeName": "self", "type": "Any"}, {"lineNumber": 475, "col_offset": 19, "nodeName": "Geometric", "type": "Any"}, {"lineNumber": 476, "col_offset": 16, "nodeName": "Geometric", "type": "Any"}, {"lineNumber": 477, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 477, "col_offset": 67, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 483, "col_offset": 17, "nodeName": "randint", "type": "Any"}, {"lineNumber": 489, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 490, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 490, "col_offset": 21, "nodeName": "param", "type": "Any"}, {"lineNumber": 490, "col_offset": 28, "nodeName": "sample", "type": "Any"}, {"lineNumber": 491, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 491, "col_offset": 32, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 491, "col_offset": 54, "nodeName": "prob", "type": "Any"}, {"lineNumber": 497, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 504, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 504, "col_offset": 21, "nodeName": "param", "type": "Any"}, {"lineNumber": 505, "col_offset": 17, "nodeName": "geom", "type": "Any"}, {"lineNumber": 512, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 519, "col_offset": 21, "nodeName": "param", "type": "Any"}, {"lineNumber": 520, "col_offset": 17, "nodeName": "geom", "type": "Any"}, {"lineNumber": 535, "col_offset": 82, "nodeName": "self", "type": "Any"}, {"lineNumber": 535, "col_offset": 19, "nodeName": "NegativeBinomial", "type": "Any"}, {"lineNumber": 536, "col_offset": 16, "nodeName": "NegativeBinomial", "type": "Any"}, {"lineNumber": 537, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 537, "col_offset": 67, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 542, "col_offset": 12, "nodeName": "randint", "type": "Any"}, {"lineNumber": 543, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 544, "col_offset": 17, "nodeName": "randint", "type": "Any"}, {"lineNumber": 550, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 551, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 551, "col_offset": 21, "nodeName": "n", "type": "Any"}, {"lineNumber": 551, "col_offset": 24, "nodeName": "param", "type": "Any"}, {"lineNumber": 551, "col_offset": 31, "nodeName": "sample", "type": "Any"}, {"lineNumber": 552, "col_offset": 17, "nodeName": "nbinom", "type": "Any"}, {"lineNumber": 553, "col_offset": 36, "nodeName": "sample", "type": "Any"}, {"lineNumber": 561, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 562, "col_offset": 23, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 563, "col_offset": 22, "nodeName": "TestNegativeBinomial", "type": "Type[Any]"}, {"lineNumber": 563, "col_offset": 43, "nodeName": "func", "type": "str"}, {"lineNumber": 563, "col_offset": 49, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 566, "col_offset": 20, "nodeName": "param", "type": "Any"}, {"lineNumber": 569, "col_offset": 25, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 570, "col_offset": 28, "nodeName": "nbinom", "type": "Any"}, {"lineNumber": 571, "col_offset": 19, "nodeName": "func", "type": "str"}, {"lineNumber": 572, "col_offset": 20, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 574, "col_offset": 20, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 575, "col_offset": 16, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 575, "col_offset": 36, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 575, "col_offset": 44, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 588, "col_offset": 26, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 589, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 589, "col_offset": 74, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 594, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 595, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 598, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 599, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 599, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 599, "col_offset": 28, "nodeName": "samples", "type": "Any"}, {"lineNumber": 600, "col_offset": 17, "nodeName": "expon", "type": "Any"}, {"lineNumber": 600, "col_offset": 56, "nodeName": "samples", "type": "Any"}, {"lineNumber": 606, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 607, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 611, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 611, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 611, "col_offset": 28, "nodeName": "samples", "type": "Any"}, {"lineNumber": 612, "col_offset": 17, "nodeName": "expon", "type": "Any"}, {"lineNumber": 612, "col_offset": 53, "nodeName": "samples", "type": "Any"}, {"lineNumber": 618, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 619, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 622, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 623, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 623, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 623, "col_offset": 28, "nodeName": "samples", "type": "Any"}, {"lineNumber": 624, "col_offset": 17, "nodeName": "expon", "type": "Any"}, {"lineNumber": 624, "col_offset": 53, "nodeName": "samples", "type": "Any"}, {"lineNumber": 630, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 634, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 634, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 635, "col_offset": 17, "nodeName": "expon", "type": "Any"}, {"lineNumber": 649, "col_offset": 22, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 650, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 650, "col_offset": 70, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 656, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 657, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 658, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 661, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 662, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 662, "col_offset": 21, "nodeName": "concentration", "type": "Any"}, {"lineNumber": 662, "col_offset": 36, "nodeName": "scale", "type": "Any"}, {"lineNumber": 662, "col_offset": 43, "nodeName": "samples", "type": "Any"}, {"lineNumber": 663, "col_offset": 17, "nodeName": "weibull_min", "type": "Any"}, {"lineNumber": 664, "col_offset": 41, "nodeName": "samples", "type": "Any"}, {"lineNumber": 670, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 671, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 672, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 675, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 676, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 676, "col_offset": 21, "nodeName": "concentration", "type": "Any"}, {"lineNumber": 676, "col_offset": 36, "nodeName": "scale", "type": "Any"}, {"lineNumber": 676, "col_offset": 43, "nodeName": "samples", "type": "Any"}, {"lineNumber": 677, "col_offset": 17, "nodeName": "weibull_min", "type": "Any"}, {"lineNumber": 678, "col_offset": 38, "nodeName": "samples", "type": "Any"}, {"lineNumber": 684, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 685, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 686, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 689, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 690, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 690, "col_offset": 21, "nodeName": "concentration", "type": "Any"}, {"lineNumber": 690, "col_offset": 36, "nodeName": "scale", "type": "Any"}, {"lineNumber": 690, "col_offset": 43, "nodeName": "samples", "type": "Any"}, {"lineNumber": 691, "col_offset": 17, "nodeName": "weibull_min", "type": "Any"}, {"lineNumber": 692, "col_offset": 38, "nodeName": "samples", "type": "Any"}, {"lineNumber": 698, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 699, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 702, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 703, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 703, "col_offset": 21, "nodeName": "concentration", "type": "Any"}, {"lineNumber": 703, "col_offset": 36, "nodeName": "scale", "type": "Any"}, {"lineNumber": 704, "col_offset": 17, "nodeName": "weibull_min", "type": "Any"}, {"lineNumber": 719, "col_offset": 21, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 720, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 720, "col_offset": 69, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 726, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 727, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 728, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 731, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 732, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 732, "col_offset": 21, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 732, "col_offset": 28, "nodeName": "scale", "type": "Any"}, {"lineNumber": 732, "col_offset": 35, "nodeName": "samples", "type": "Any"}, {"lineNumber": 733, "col_offset": 17, "nodeName": "pareto", "type": "Any"}, {"lineNumber": 734, "col_offset": 12, "nodeName": "samples", "type": "Any"}, {"lineNumber": 740, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 741, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 742, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 745, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 746, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 746, "col_offset": 21, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 746, "col_offset": 28, "nodeName": "scale", "type": "Any"}, {"lineNumber": 746, "col_offset": 35, "nodeName": "samples", "type": "Any"}, {"lineNumber": 747, "col_offset": 17, "nodeName": "pareto", "type": "Any"}, {"lineNumber": 748, "col_offset": 12, "nodeName": "samples", "type": "Any"}, {"lineNumber": 754, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 755, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 756, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 759, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 760, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 760, "col_offset": 21, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 760, "col_offset": 28, "nodeName": "scale", "type": "Any"}, {"lineNumber": 760, "col_offset": 35, "nodeName": "samples", "type": "Any"}, {"lineNumber": 761, "col_offset": 17, "nodeName": "pareto", "type": "Any"}, {"lineNumber": 762, "col_offset": 12, "nodeName": "samples", "type": "Any"}, {"lineNumber": 768, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 769, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 772, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 773, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 773, "col_offset": 21, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 773, "col_offset": 28, "nodeName": "scale", "type": "Any"}, {"lineNumber": 774, "col_offset": 17, "nodeName": "pareto", "type": "Any"}, {"lineNumber": 788, "col_offset": 20, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 789, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 789, "col_offset": 68, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 795, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 796, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 797, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 800, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 801, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 801, "col_offset": 21, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 801, "col_offset": 28, "nodeName": "scale", "type": "Any"}, {"lineNumber": 801, "col_offset": 35, "nodeName": "samples", "type": "Any"}, {"lineNumber": 802, "col_offset": 17, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 803, "col_offset": 56, "nodeName": "samples", "type": "Any"}, {"lineNumber": 810, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 811, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 814, "col_offset": 16, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 816, "col_offset": 23, "nodeName": "ss", "type": "Any"}, {"lineNumber": 819, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 820, "col_offset": 17, "nodeName": "func", "type": "str"}, {"lineNumber": 821, "col_offset": 16, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 823, "col_offset": 16, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 837, "col_offset": 24, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 838, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 838, "col_offset": 72, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 847, "col_offset": 16, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 847, "col_offset": 67, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 848, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 848, "col_offset": 43, "nodeName": "desired_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 851, "col_offset": 16, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 854, "col_offset": 19, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 856, "col_offset": 32, "nodeName": "sum", "type": "Any"}, {"lineNumber": 856, "col_offset": 48, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 864, "col_offset": 16, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 864, "col_offset": 67, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 865, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 865, "col_offset": 43, "nodeName": "desired_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 866, "col_offset": 25, "nodeName": "random", "type": "Any"}, {"lineNumber": 867, "col_offset": 36, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 867, "col_offset": 54, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 870, "col_offset": 16, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 882, "col_offset": 24, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 883, "col_offset": 22, "nodeName": "TestDirichlet", "type": "Type[Any]"}, {"lineNumber": 883, "col_offset": 36, "nodeName": "func", "type": "str"}, {"lineNumber": 886, "col_offset": 25, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 887, "col_offset": 25, "nodeName": "dirichlet", "type": "Any"}, {"lineNumber": 888, "col_offset": 19, "nodeName": "func", "type": "str"}, {"lineNumber": 889, "col_offset": 20, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 894, "col_offset": 16, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 894, "col_offset": 36, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 894, "col_offset": 44, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 907, "col_offset": 24, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 908, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 908, "col_offset": 72, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 914, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 915, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 916, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 919, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 920, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 920, "col_offset": 21, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 920, "col_offset": 28, "nodeName": "beta", "type": "Any"}, {"lineNumber": 920, "col_offset": 34, "nodeName": "samples", "type": "Any"}, {"lineNumber": 921, "col_offset": 17, "nodeName": "beta", "type": "Any"}, {"lineNumber": 922, "col_offset": 34, "nodeName": "samples", "type": "Any"}, {"lineNumber": 929, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 930, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 933, "col_offset": 16, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 935, "col_offset": 22, "nodeName": "ss", "type": "Any"}, {"lineNumber": 935, "col_offset": 30, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 935, "col_offset": 47, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 937, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 938, "col_offset": 17, "nodeName": "func", "type": "str"}, {"lineNumber": 939, "col_offset": 16, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 941, "col_offset": 16, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 955, "col_offset": 24, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 956, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 956, "col_offset": 72, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 962, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 963, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 964, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 967, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 968, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 968, "col_offset": 21, "nodeName": "df1", "type": "Any"}, {"lineNumber": 968, "col_offset": 26, "nodeName": "df2", "type": "Any"}, {"lineNumber": 968, "col_offset": 31, "nodeName": "samples", "type": "Any"}, {"lineNumber": 969, "col_offset": 17, "nodeName": "f", "type": "Any"}, {"lineNumber": 970, "col_offset": 31, "nodeName": "samples", "type": "Any"}, {"lineNumber": 977, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 978, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 981, "col_offset": 16, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 983, "col_offset": 19, "nodeName": "ss", "type": "Any"}, {"lineNumber": 985, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 987, "col_offset": 25, "nodeName": "var", "type": "Any"}, {"lineNumber": 1001, "col_offset": 21, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1002, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 1002, "col_offset": 69, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 1009, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 1010, "col_offset": 13, "nodeName": "np", "type": "Any"}, {"lineNumber": 1011, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 1014, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 1015, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 1015, "col_offset": 21, "nodeName": "df", "type": "Any"}, {"lineNumber": 1015, "col_offset": 25, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1015, "col_offset": 30, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1015, "col_offset": 37, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1016, "col_offset": 17, "nodeName": "t", "type": "Any"}, {"lineNumber": 1017, "col_offset": 46, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1024, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 1025, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 1026, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 1029, "col_offset": 16, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1031, "col_offset": 19, "nodeName": "ss", "type": "Any"}, {"lineNumber": 1033, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1034, "col_offset": 17, "nodeName": "func", "type": "str"}, {"lineNumber": 1035, "col_offset": 16, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1037, "col_offset": 16, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1051, "col_offset": 21, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1052, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 1052, "col_offset": 27, "nodeName": "normal", "type": "Any"}, {"lineNumber": 1052, "col_offset": 35, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1052, "col_offset": 48, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 1058, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 1059, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 1060, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 1063, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 1064, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 1064, "col_offset": 21, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1064, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1064, "col_offset": 33, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1065, "col_offset": 17, "nodeName": "gumbel_r", "type": "Any"}, {"lineNumber": 1066, "col_offset": 59, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1072, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 1073, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 1074, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 1077, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 1078, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 1078, "col_offset": 21, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1078, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1078, "col_offset": 33, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1079, "col_offset": 17, "nodeName": "gumbel_r", "type": "Any"}, {"lineNumber": 1080, "col_offset": 50, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1086, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 1087, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 1088, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 1091, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 1092, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 1092, "col_offset": 21, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1092, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1092, "col_offset": 33, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1093, "col_offset": 17, "nodeName": "gumbel_r", "type": "Any"}, {"lineNumber": 1094, "col_offset": 50, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1100, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 1101, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 1104, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 1105, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 1105, "col_offset": 21, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1105, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1106, "col_offset": 17, "nodeName": "gumbel_r", "type": "Any"}, {"lineNumber": 1129, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1130, "col_offset": 16, "nodeName": "Multinomial", "type": "Any"}, {"lineNumber": 1130, "col_offset": 32, "nodeName": "_num_events", "type": "Any"}, {"lineNumber": 1133, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1134, "col_offset": 23, "nodeName": "sample", "type": "Any"}, {"lineNumber": 1134, "col_offset": 42, "nodeName": "_batch_shape", "type": "Any"}, {"lineNumber": 1135, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1136, "col_offset": 23, "nodeName": "sample_n", "type": "Any"}, {"lineNumber": 1136, "col_offset": 44, "nodeName": "_sample_shape", "type": "Any"}, {"lineNumber": 1137, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 1137, "col_offset": 74, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 1140, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 1149, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 1149, "col_offset": 28, "nodeName": "dirichlet", "type": "Any"}, {"lineNumber": 1153, "col_offset": 24, "nodeName": "log", "type": "Any"}, {"lineNumber": 1153, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 1154, "col_offset": 57, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1157, "col_offset": 16, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1159, "col_offset": 43, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1160, "col_offset": 19, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1160, "col_offset": 35, "nodeName": "desired_shape", "type": "Optional[Union[Tuple[int, int], Tuple[()]]]"}, {"lineNumber": 1165, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 1165, "col_offset": 28, "nodeName": "dirichlet", "type": "Any"}, {"lineNumber": 1169, "col_offset": 24, "nodeName": "log", "type": "Any"}, {"lineNumber": 1169, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 1170, "col_offset": 59, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1173, "col_offset": 16, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1175, "col_offset": 33, "nodeName": "sample_shape", "type": "Optional[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 1177, "col_offset": 17, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1178, "col_offset": 19, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1178, "col_offset": 35, "nodeName": "desired_shape", "type": "Any"}, {"lineNumber": 1183, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 1183, "col_offset": 28, "nodeName": "dirichlet", "type": "Any"}, {"lineNumber": 1185, "col_offset": 18, "nodeName": "finfo", "type": "Any"}, {"lineNumber": 1186, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 1186, "col_offset": 42, "nodeName": "eps", "type": "Any"}, {"lineNumber": 1188, "col_offset": 33, "nodeName": "sample_shape", "type": "Optional[Union[Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 1190, "col_offset": 17, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1191, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 1191, "col_offset": 57, "nodeName": "desired_shape", "type": "Any"}, {"lineNumber": 1194, "col_offset": 24, "nodeName": "log", "type": "Any"}, {"lineNumber": 1194, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 1196, "col_offset": 34, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1198, "col_offset": 16, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1201, "col_offset": 19, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1216, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1217, "col_offset": 16, "nodeName": "Binomial", "type": "Any"}, {"lineNumber": 1218, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 1218, "col_offset": 67, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 1224, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 1225, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 1225, "col_offset": 51, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1229, "col_offset": 24, "nodeName": "prob_to_logit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1229, "col_offset": 38, "nodeName": "param", "type": "Any"}, {"lineNumber": 1231, "col_offset": 16, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1233, "col_offset": 40, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1233, "col_offset": 51, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1233, "col_offset": 58, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 1233, "col_offset": 29, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1234, "col_offset": 19, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1239, "col_offset": 12, "nodeName": "_np", "type": "module"}, {"lineNumber": 1240, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 1243, "col_offset": 48, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1247, "col_offset": 12, "nodeName": "_np", "type": "module"}, {"lineNumber": 1248, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 1249, "col_offset": 17, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1249, "col_offset": 38, "nodeName": "n", "type": "Any"}, {"lineNumber": 1253, "col_offset": 52, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 1253, "col_offset": 58, "nodeName": "n", "type": "Any"}, {"lineNumber": 1255, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 1256, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 1256, "col_offset": 21, "nodeName": "param", "type": "Any"}, {"lineNumber": 1256, "col_offset": 28, "nodeName": "sample", "type": "Any"}, {"lineNumber": 1257, "col_offset": 17, "nodeName": "binom", "type": "Any"}, {"lineNumber": 1257, "col_offset": 56, "nodeName": "sample", "type": "Any"}, {"lineNumber": 1265, "col_offset": 20, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1266, "col_offset": 23, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1267, "col_offset": 22, "nodeName": "TestBinomial", "type": "Type[Any]"}, {"lineNumber": 1267, "col_offset": 35, "nodeName": "func", "type": "str"}, {"lineNumber": 1267, "col_offset": 41, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1270, "col_offset": 20, "nodeName": "param", "type": "Any"}, {"lineNumber": 1273, "col_offset": 25, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1274, "col_offset": 27, "nodeName": "binom", "type": "Any"}, {"lineNumber": 1275, "col_offset": 19, "nodeName": "func", "type": "str"}, {"lineNumber": 1276, "col_offset": 20, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1278, "col_offset": 20, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1279, "col_offset": 16, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1279, "col_offset": 36, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1279, "col_offset": 44, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 1293, "col_offset": 75, "nodeName": "self", "type": "Any"}, {"lineNumber": 1293, "col_offset": 24, "nodeName": "Bernoulli", "type": "Any"}, {"lineNumber": 1294, "col_offset": 16, "nodeName": "Bernoulli", "type": "Any"}, {"lineNumber": 1295, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 1295, "col_offset": 72, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 1300, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 1301, "col_offset": 17, "nodeName": "npx", "type": "Any"}, {"lineNumber": 1307, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 1308, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 1308, "col_offset": 21, "nodeName": "param", "type": "Any"}, {"lineNumber": 1308, "col_offset": 28, "nodeName": "sample", "type": "Any"}, {"lineNumber": 1309, "col_offset": 25, "nodeName": "bernoulli", "type": "Any"}, {"lineNumber": 1309, "col_offset": 42, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1309, "col_offset": 60, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1315, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 1316, "col_offset": 17, "nodeName": "npx", "type": "Any"}, {"lineNumber": 1322, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 1323, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 1323, "col_offset": 21, "nodeName": "param", "type": "Any"}, {"lineNumber": 1324, "col_offset": 17, "nodeName": "bernoulli", "type": "Any"}, {"lineNumber": 1330, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 1331, "col_offset": 17, "nodeName": "npx", "type": "Any"}, {"lineNumber": 1337, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 1338, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 1338, "col_offset": 21, "nodeName": "param", "type": "Any"}, {"lineNumber": 1339, "col_offset": 17, "nodeName": "bernoulli", "type": "Any"}, {"lineNumber": 1355, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1356, "col_offset": 16, "nodeName": "RelaxedBernoulli", "type": "Any"}, {"lineNumber": 1357, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1358, "col_offset": 23, "nodeName": "sample", "type": "Any"}, {"lineNumber": 1359, "col_offset": 67, "nodeName": "self", "type": "Any"}, {"lineNumber": 1359, "col_offset": 80, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 1362, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 1362, "col_offset": 30, "nodeName": "np", "type": "Any"}, {"lineNumber": 1362, "col_offset": 40, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1367, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 1374, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 1375, "col_offset": 13, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 1379, "col_offset": 15, "nodeName": "param", "type": "Any"}, {"lineNumber": 1382, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 1383, "col_offset": 17, "nodeName": "np", "type": "Any"}, {"lineNumber": 1389, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 1390, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 1390, "col_offset": 21, "nodeName": "param", "type": "Any"}, {"lineNumber": 1390, "col_offset": 28, "nodeName": "sample", "type": "Any"}, {"lineNumber": 1409, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1410, "col_offset": 16, "nodeName": "Categorical", "type": "Any"}, {"lineNumber": 1410, "col_offset": 32, "nodeName": "_num_events", "type": "Any"}, {"lineNumber": 1412, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1413, "col_offset": 23, "nodeName": "sample", "type": "Any"}, {"lineNumber": 1413, "col_offset": 42, "nodeName": "_batch_shape", "type": "Any"}, {"lineNumber": 1414, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1415, "col_offset": 23, "nodeName": "sample_n", "type": "Any"}, {"lineNumber": 1415, "col_offset": 44, "nodeName": "_sample_shape", "type": "Any"}, {"lineNumber": 1416, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 1416, "col_offset": 74, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 1425, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 1425, "col_offset": 28, "nodeName": "dirichlet", "type": "Any"}, {"lineNumber": 1427, "col_offset": 20, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1429, "col_offset": 24, "nodeName": "log", "type": "Any"}, {"lineNumber": 1429, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 1433, "col_offset": 16, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1435, "col_offset": 43, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1436, "col_offset": 19, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1441, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 1441, "col_offset": 28, "nodeName": "dirichlet", "type": "Any"}, {"lineNumber": 1443, "col_offset": 20, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1445, "col_offset": 24, "nodeName": "log", "type": "Any"}, {"lineNumber": 1445, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 1447, "col_offset": 43, "nodeName": "use_logit", "type": "bool"}, {"lineNumber": 1447, "col_offset": 66, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1448, "col_offset": 45, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1448, "col_offset": 71, "nodeName": "sample_shape", "type": "Union[Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 1451, "col_offset": 16, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1454, "col_offset": 17, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1455, "col_offset": 19, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1460, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 1460, "col_offset": 28, "nodeName": "dirichlet", "type": "Any"}, {"lineNumber": 1462, "col_offset": 18, "nodeName": "finfo", "type": "Any"}, {"lineNumber": 1463, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 1463, "col_offset": 42, "nodeName": "eps", "type": "Any"}, {"lineNumber": 1464, "col_offset": 20, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1466, "col_offset": 17, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1467, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 1467, "col_offset": 57, "nodeName": "desired_shape", "type": "Any"}, {"lineNumber": 1469, "col_offset": 24, "nodeName": "log", "type": "Any"}, {"lineNumber": 1469, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 1473, "col_offset": 16, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1476, "col_offset": 19, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1478, "col_offset": 31, "nodeName": "np", "type": "Any"}, {"lineNumber": 1479, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 1479, "col_offset": 23, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1479, "col_offset": 30, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 1479, "col_offset": 45, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1480, "col_offset": 15, "nodeName": "indices", "type": "Any"}, {"lineNumber": 1481, "col_offset": 26, "nodeName": "indices", "type": "Any"}, {"lineNumber": 1484, "col_offset": 32, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1484, "col_offset": 50, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 1490, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 1490, "col_offset": 28, "nodeName": "dirichlet", "type": "Any"}, {"lineNumber": 1492, "col_offset": 20, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1494, "col_offset": 24, "nodeName": "log", "type": "Any"}, {"lineNumber": 1494, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 1498, "col_offset": 16, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1500, "col_offset": 29, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1501, "col_offset": 17, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1502, "col_offset": 19, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1509, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 1521, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1522, "col_offset": 16, "nodeName": "OneHotCategorical", "type": "Any"}, {"lineNumber": 1523, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1524, "col_offset": 23, "nodeName": "sample", "type": "Any"}, {"lineNumber": 1524, "col_offset": 42, "nodeName": "_batch_shape", "type": "Any"}, {"lineNumber": 1525, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 1525, "col_offset": 74, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 1534, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 1534, "col_offset": 28, "nodeName": "dirichlet", "type": "Any"}, {"lineNumber": 1538, "col_offset": 24, "nodeName": "log", "type": "Any"}, {"lineNumber": 1538, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 1542, "col_offset": 16, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1544, "col_offset": 43, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1545, "col_offset": 19, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1545, "col_offset": 35, "nodeName": "desired_shape", "type": "Optional[Union[Tuple[int, int], Tuple[()]]]"}, {"lineNumber": 1550, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 1550, "col_offset": 28, "nodeName": "dirichlet", "type": "Any"}, {"lineNumber": 1552, "col_offset": 18, "nodeName": "finfo", "type": "Any"}, {"lineNumber": 1553, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 1553, "col_offset": 42, "nodeName": "eps", "type": "Any"}, {"lineNumber": 1556, "col_offset": 17, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1557, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 1557, "col_offset": 57, "nodeName": "desired_shape", "type": "Any"}, {"lineNumber": 1560, "col_offset": 24, "nodeName": "log", "type": "Any"}, {"lineNumber": 1560, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 1564, "col_offset": 16, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1567, "col_offset": 19, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1572, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 1572, "col_offset": 28, "nodeName": "dirichlet", "type": "Any"}, {"lineNumber": 1576, "col_offset": 24, "nodeName": "log", "type": "Any"}, {"lineNumber": 1576, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 1580, "col_offset": 16, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1582, "col_offset": 43, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1583, "col_offset": 19, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1600, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1601, "col_offset": 16, "nodeName": "RelaxedOneHotCategorical", "type": "Any"}, {"lineNumber": 1603, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1604, "col_offset": 23, "nodeName": "sample", "type": "Any"}, {"lineNumber": 1604, "col_offset": 42, "nodeName": "_batch_shape", "type": "Any"}, {"lineNumber": 1605, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 1605, "col_offset": 74, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 1614, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 1614, "col_offset": 28, "nodeName": "dirichlet", "type": "Any"}, {"lineNumber": 1616, "col_offset": 19, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1619, "col_offset": 24, "nodeName": "log", "type": "Any"}, {"lineNumber": 1619, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 1620, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 1624, "col_offset": 16, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1625, "col_offset": 17, "nodeName": "record", "type": "Any"}, {"lineNumber": 1626, "col_offset": 25, "nodeName": "net", "type": "Any"}, {"lineNumber": 1626, "col_offset": 29, "nodeName": "param", "type": "Any"}, {"lineNumber": 1627, "col_offset": 12, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1628, "col_offset": 43, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1629, "col_offset": 19, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1629, "col_offset": 35, "nodeName": "desired_shape", "type": "Optional[Union[Tuple[()], Tuple[int, int]]]"}, {"lineNumber": 1630, "col_offset": 19, "nodeName": "grad", "type": "Any"}, {"lineNumber": 1630, "col_offset": 39, "nodeName": "param", "type": "Any"}, {"lineNumber": 1635, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 1635, "col_offset": 28, "nodeName": "dirichlet", "type": "Any"}, {"lineNumber": 1637, "col_offset": 18, "nodeName": "finfo", "type": "Any"}, {"lineNumber": 1638, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 1638, "col_offset": 42, "nodeName": "eps", "type": "Any"}, {"lineNumber": 1641, "col_offset": 17, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1643, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 1643, "col_offset": 31, "nodeName": "dirichlet", "type": "Any"}, {"lineNumber": 1646, "col_offset": 24, "nodeName": "log", "type": "Any"}, {"lineNumber": 1646, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 1650, "col_offset": 16, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1653, "col_offset": 19, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1667, "col_offset": 18, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1667, "col_offset": 45, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1669, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 1669, "col_offset": 66, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 1675, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 1685, "col_offset": 32, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 1692, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1693, "col_offset": 21, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1694, "col_offset": 16, "nodeName": "attach_grad", "type": "Any"}, {"lineNumber": 1695, "col_offset": 16, "nodeName": "attach_grad", "type": "Any"}, {"lineNumber": 1699, "col_offset": 47, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 1700, "col_offset": 22, "nodeName": "TestMVN", "type": "Type[Any]"}, {"lineNumber": 1700, "col_offset": 40, "nodeName": "cov_type", "type": "str"}, {"lineNumber": 1704, "col_offset": 20, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1706, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1706, "col_offset": 39, "nodeName": "desired_shape", "type": "Any"}, {"lineNumber": 1707, "col_offset": 16, "nodeName": "backward", "type": "Any"}, {"lineNumber": 1708, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1708, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1709, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1709, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1715, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1716, "col_offset": 21, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1717, "col_offset": 26, "nodeName": "normal", "type": "Any"}, {"lineNumber": 1719, "col_offset": 16, "nodeName": "attach_grad", "type": "Any"}, {"lineNumber": 1720, "col_offset": 16, "nodeName": "attach_grad", "type": "Any"}, {"lineNumber": 1724, "col_offset": 47, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 1725, "col_offset": 22, "nodeName": "TestMVN", "type": "Type[Any]"}, {"lineNumber": 1725, "col_offset": 42, "nodeName": "cov_type", "type": "str"}, {"lineNumber": 1728, "col_offset": 25, "nodeName": "net", "type": "Any"}, {"lineNumber": 1728, "col_offset": 29, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1728, "col_offset": 34, "nodeName": "cov_param", "type": "Any"}, {"lineNumber": 1728, "col_offset": 45, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1729, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1730, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1731, "col_offset": 20, "nodeName": "mx_out_t", "type": "Any"}, {"lineNumber": 1733, "col_offset": 20, "nodeName": "mx_out_t", "type": "Any"}, {"lineNumber": 1736, "col_offset": 24, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1739, "col_offset": 28, "nodeName": "multivariate_normal", "type": "Any"}, {"lineNumber": 1739, "col_offset": 51, "nodeName": "loc_t", "type": "Any"}, {"lineNumber": 1739, "col_offset": 58, "nodeName": "sigma_t", "type": "Any"}, {"lineNumber": 1740, "col_offset": 25, "nodeName": "logpdf", "type": "Any"}, {"lineNumber": 1740, "col_offset": 42, "nodeName": "samples_t", "type": "Any"}, {"lineNumber": 1741, "col_offset": 16, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1741, "col_offset": 36, "nodeName": "mx_out_t", "type": "Any"}, {"lineNumber": 1741, "col_offset": 46, "nodeName": "ss_out", "type": "Any"}, {"lineNumber": 1748, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1749, "col_offset": 21, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1750, "col_offset": 16, "nodeName": "attach_grad", "type": "Any"}, {"lineNumber": 1751, "col_offset": 16, "nodeName": "attach_grad", "type": "Any"}, {"lineNumber": 1755, "col_offset": 47, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 1756, "col_offset": 22, "nodeName": "TestMVN", "type": "Type[Any]"}, {"lineNumber": 1756, "col_offset": 41, "nodeName": "cov_type", "type": "str"}, {"lineNumber": 1759, "col_offset": 25, "nodeName": "net", "type": "Any"}, {"lineNumber": 1759, "col_offset": 29, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1759, "col_offset": 34, "nodeName": "cov_param", "type": "Any"}, {"lineNumber": 1760, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1761, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1762, "col_offset": 20, "nodeName": "mx_out_t", "type": "Any"}, {"lineNumber": 1764, "col_offset": 20, "nodeName": "mx_out_t", "type": "Any"}, {"lineNumber": 1766, "col_offset": 24, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1769, "col_offset": 28, "nodeName": "multivariate_normal", "type": "Any"}, {"lineNumber": 1769, "col_offset": 51, "nodeName": "loc_t", "type": "Any"}, {"lineNumber": 1769, "col_offset": 58, "nodeName": "sigma_t", "type": "Any"}, {"lineNumber": 1770, "col_offset": 25, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 1771, "col_offset": 16, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 1771, "col_offset": 36, "nodeName": "mx_out_t", "type": "Any"}, {"lineNumber": 1771, "col_offset": 46, "nodeName": "ss_out", "type": "Any"}, {"lineNumber": 1784, "col_offset": 26, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1785, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 1785, "col_offset": 27, "nodeName": "half_normal", "type": "Any"}, {"lineNumber": 1785, "col_offset": 40, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1785, "col_offset": 53, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 1791, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 1794, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 1795, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 1795, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1802, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 1803, "col_offset": 25, "nodeName": "random", "type": "Any"}, {"lineNumber": 1803, "col_offset": 47, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1806, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 1807, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 1807, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1807, "col_offset": 28, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1808, "col_offset": 17, "nodeName": "halfnorm", "type": "Any"}, {"lineNumber": 1808, "col_offset": 56, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1814, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 1815, "col_offset": 25, "nodeName": "random", "type": "Any"}, {"lineNumber": 1815, "col_offset": 47, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1818, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 1819, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 1819, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1819, "col_offset": 28, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1820, "col_offset": 17, "nodeName": "halfnorm", "type": "Any"}, {"lineNumber": 1820, "col_offset": 53, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1826, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 1827, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 1830, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 1831, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 1831, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1831, "col_offset": 28, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1832, "col_offset": 17, "nodeName": "halfnorm", "type": "Any"}, {"lineNumber": 1832, "col_offset": 53, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1850, "col_offset": 25, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1850, "col_offset": 36, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 1850, "col_offset": 52, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1851, "col_offset": 36, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 1851, "col_offset": 51, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1852, "col_offset": 26, "nodeName": "AffineTransform", "type": "Any"}, {"lineNumber": 1853, "col_offset": 26, "nodeName": "AffineTransform", "type": "Any"}, {"lineNumber": 1854, "col_offset": 33, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1856, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1856, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 1857, "col_offset": 23, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 1857, "col_offset": 31, "nodeName": "transformed_normal", "type": "Any"}, {"lineNumber": 1857, "col_offset": 51, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1858, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 1858, "col_offset": 27, "nodeName": "transformed_normal", "type": "Any"}, {"lineNumber": 1858, "col_offset": 47, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1858, "col_offset": 60, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 1864, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 1866, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 1868, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 1871, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 1872, "col_offset": 13, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 1875, "col_offset": 54, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1876, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1881, "col_offset": 12, "nodeName": "power", "type": "Any"}, {"lineNumber": 1881, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1882, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 1884, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 1889, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 1891, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 1897, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 1897, "col_offset": 21, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1897, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1897, "col_offset": 33, "nodeName": "expected_shape", "type": "Any"}, {"lineNumber": 1911, "col_offset": 25, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1911, "col_offset": 36, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 1911, "col_offset": 52, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1912, "col_offset": 36, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 1912, "col_offset": 51, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1913, "col_offset": 25, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1918, "col_offset": 33, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1920, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1920, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 1921, "col_offset": 23, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 1921, "col_offset": 31, "nodeName": "transformed_normal", "type": "Any"}, {"lineNumber": 1921, "col_offset": 51, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1922, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 1922, "col_offset": 27, "nodeName": "transformed_normal", "type": "Any"}, {"lineNumber": 1922, "col_offset": 47, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1922, "col_offset": 60, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 1927, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 1929, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 1931, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 1934, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 1935, "col_offset": 13, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 1937, "col_offset": 17, "nodeName": "lognorm", "type": "Any"}, {"lineNumber": 1938, "col_offset": 35, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1939, "col_offset": 28, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1956, "col_offset": 19, "nodeName": "scale", "type": "float"}, {"lineNumber": 1956, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 1960, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 1961, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 1961, "col_offset": 50, "nodeName": "np", "type": "Any"}, {"lineNumber": 1974, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 1974, "col_offset": 50, "nodeName": "np", "type": "Any"}, {"lineNumber": 1982, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 1982, "col_offset": 50, "nodeName": "np", "type": "Any"}, {"lineNumber": 1994, "col_offset": 24, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1994, "col_offset": 44, "nodeName": "logit", "type": "Any"}, {"lineNumber": 1995, "col_offset": 28, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1995, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 1996, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 1996, "col_offset": 27, "nodeName": "reshaped_dist", "type": "Any"}, {"lineNumber": 1996, "col_offset": 42, "nodeName": "_func", "type": "Any"}, {"lineNumber": 1996, "col_offset": 55, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 2003, "col_offset": 29, "nodeName": "batch_shape", "type": "Union[Tuple[int], Tuple[int, int]]"}, {"lineNumber": 2003, "col_offset": 43, "nodeName": "event_shape", "type": "Union[Tuple[int], Tuple[int, int]]"}, {"lineNumber": 2004, "col_offset": 24, "nodeName": "normal", "type": "Any"}, {"lineNumber": 2005, "col_offset": 26, "nodeName": "round", "type": "Any"}, {"lineNumber": 2006, "col_offset": 22, "nodeName": "TestIndependent", "type": "Type[Any]"}, {"lineNumber": 2006, "col_offset": 56, "nodeName": "func", "type": "str"}, {"lineNumber": 2009, "col_offset": 25, "nodeName": "net", "type": "Any"}, {"lineNumber": 2009, "col_offset": 29, "nodeName": "logit", "type": "Any"}, {"lineNumber": 2009, "col_offset": 36, "nodeName": "samples", "type": "Any"}, {"lineNumber": 2010, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2010, "col_offset": 39, "nodeName": "batch_shape", "type": "Union[Tuple[int], Tuple[int, int]]"}, {"lineNumber": 2023, "col_offset": 17, "nodeName": "kl_divergence", "type": "Any"}, {"lineNumber": 2023, "col_offset": 35, "nodeName": "p", "type": "Any"}, {"lineNumber": 2023, "col_offset": 38, "nodeName": "p", "type": "Any"}, {"lineNumber": 2034, "col_offset": 28, "nodeName": "mc_approx", "type": "Any"}, {"lineNumber": 2034, "col_offset": 49, "nodeName": "kl", "type": "Any"}, {"lineNumber": 2047, "col_offset": 25, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 2047, "col_offset": 34, "nodeName": "f", "type": "Callable[[], Any]"}, {"lineNumber": 2047, "col_offset": 18, "nodeName": "f", "type": "Callable[[], Any]"}, {"lineNumber": 2059, "col_offset": 26, "nodeName": "random", "type": "Any"}, {"lineNumber": 2060, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 2066, "col_offset": 30, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2066, "col_offset": 55, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2067, "col_offset": 32, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2067, "col_offset": 60, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2068, "col_offset": 26, "nodeName": "_dist_factory", "type": "Callable[..., Any]"}, {"lineNumber": 2068, "col_offset": 40, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2068, "col_offset": 46, "nodeName": "loc", "type": "Callable[[], Any]"}, {"lineNumber": 2068, "col_offset": 51, "nodeName": "scale", "type": "Callable[[], Any]"}, {"lineNumber": 2077, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 2087, "col_offset": 28, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2088, "col_offset": 26, "nodeName": "_dist_factory", "type": "Callable[..., Any]"}, {"lineNumber": 2088, "col_offset": 40, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2088, "col_offset": 46, "nodeName": "s", "type": "Callable[[], Any]"}, {"lineNumber": 2097, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 2097, "col_offset": 51, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2098, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 2098, "col_offset": 51, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2103, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 2113, "col_offset": 33, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2113, "col_offset": 61, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2114, "col_offset": 33, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2114, "col_offset": 61, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2115, "col_offset": 26, "nodeName": "_dist_factory", "type": "Callable[..., Any]"}, {"lineNumber": 2115, "col_offset": 40, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2115, "col_offset": 46, "nodeName": "param1", "type": "Callable[[], Any]"}, {"lineNumber": 2115, "col_offset": 54, "nodeName": "param2", "type": "Callable[[], Any]"}, {"lineNumber": 2123, "col_offset": 12, "nodeName": "_np", "type": "module"}, {"lineNumber": 2124, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 2130, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 2138, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 2138, "col_offset": 32, "nodeName": "loc_shape", "type": "Union[Tuple[int], Tuple[()], Tuple[int, int]]"}, {"lineNumber": 2139, "col_offset": 13, "nodeName": "np", "type": "Any"}, {"lineNumber": 2139, "col_offset": 31, "nodeName": "cov_shape", "type": "Union[Tuple[int, int], Tuple[int], Tuple[()]]"}, {"lineNumber": 2140, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 2140, "col_offset": 30, "nodeName": "swapaxes", "type": "Any"}, {"lineNumber": 2140, "col_offset": 42, "nodeName": "_s", "type": "Any"}, {"lineNumber": 2140, "col_offset": 57, "nodeName": "np", "type": "Any"}, {"lineNumber": 2142, "col_offset": 25, "nodeName": "loc", "type": "Any"}, {"lineNumber": 2150, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 2162, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 2163, "col_offset": 26, "nodeName": "_dist_factory", "type": "Callable[..., Any]"}, {"lineNumber": 2163, "col_offset": 40, "nodeName": "dist", "type": "Any"}, {"lineNumber": 2163, "col_offset": 46, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 2163, "col_offset": 59, "nodeName": "prob", "type": "Callable[[], Any]"}, {"lineNumber": 2173, "col_offset": 12, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2173, "col_offset": 23, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2173, "col_offset": 48, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2174, "col_offset": 23, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2174, "col_offset": 51, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2175, "col_offset": 12, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2175, "col_offset": 23, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2175, "col_offset": 48, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2176, "col_offset": 23, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2176, "col_offset": 51, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2179, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 2180, "col_offset": 25, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2180, "col_offset": 53, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2181, "col_offset": 23, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2182, "col_offset": 17, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2183, "col_offset": 19, "nodeName": "kl", "type": "Any"}, {"lineNumber": 2183, "col_offset": 31, "nodeName": "low", "type": "Any"}, {"lineNumber": 2190, "col_offset": 12, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2190, "col_offset": 23, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2190, "col_offset": 48, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2191, "col_offset": 23, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2191, "col_offset": 51, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2192, "col_offset": 12, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2192, "col_offset": 23, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2192, "col_offset": 48, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2193, "col_offset": 23, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2193, "col_offset": 51, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2194, "col_offset": 12, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2194, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2194, "col_offset": 50, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2195, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2195, "col_offset": 50, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2198, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 2198, "col_offset": 39, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2199, "col_offset": 23, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2200, "col_offset": 17, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2201, "col_offset": 19, "nodeName": "kl", "type": "Any"}, {"lineNumber": 2201, "col_offset": 31, "nodeName": "s", "type": "Any"}, {"lineNumber": 2216, "col_offset": 17, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2218, "col_offset": 17, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2218, "col_offset": 28, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 2218, "col_offset": 44, "nodeName": "loc", "type": "Any"}, {"lineNumber": 2218, "col_offset": 50, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 2218, "col_offset": 65, "nodeName": "scale", "type": "Any"}, {"lineNumber": 2219, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 2219, "col_offset": 26, "nodeName": "kl_divergence", "type": "Any"}, {"lineNumber": 2219, "col_offset": 44, "nodeName": "qz", "type": "Any"}, {"lineNumber": 2219, "col_offset": 48, "nodeName": "pz", "type": "Any"}, {"lineNumber": 2220, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 2220, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 2221, "col_offset": 19, "nodeName": "qz", "type": "Any"}, {"lineNumber": 2227, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 2228, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 2229, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 2230, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 2230, "col_offset": 21, "nodeName": "loc", "type": "Any"}, {"lineNumber": 2230, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 2231, "col_offset": 13, "nodeName": "losses", "type": "Any"}, {"lineNumber": 2232, "col_offset": 18, "nodeName": "losses", "type": "Any"}, {"lineNumber": 2243, "col_offset": 17, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2245, "col_offset": 17, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2245, "col_offset": 28, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 2245, "col_offset": 44, "nodeName": "loc", "type": "Any"}, {"lineNumber": 2245, "col_offset": 50, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 2245, "col_offset": 65, "nodeName": "scale", "type": "Any"}, {"lineNumber": 2246, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 2246, "col_offset": 26, "nodeName": "kl_divergence", "type": "Any"}, {"lineNumber": 2246, "col_offset": 44, "nodeName": "qz", "type": "Any"}, {"lineNumber": 2246, "col_offset": 48, "nodeName": "pz", "type": "Any"}, {"lineNumber": 2247, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 2247, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 2248, "col_offset": 19, "nodeName": "qz", "type": "Any"}, {"lineNumber": 2254, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 2255, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 2256, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 2257, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 2272, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 2272, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 2273, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 2273, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 2278, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 2278, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 2279, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 2279, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 2291, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 2292, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 2292, "col_offset": 21, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 2293, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2293, "col_offset": 45, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2296, "col_offset": 62, "nodeName": "_np", "type": "module"}, {"lineNumber": 2298, "col_offset": 46, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2298, "col_offset": 55, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2300, "col_offset": 46, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2300, "col_offset": 55, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2302, "col_offset": 46, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2302, "col_offset": 55, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2312, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 2313, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 2323, "col_offset": 44, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2328, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2328, "col_offset": 19, "nodeName": "constraint_param", "type": "Tuple[Any, ...]"}, {"lineNumber": 2329, "col_offset": 29, "nodeName": "_constraint_type", "type": "Any"}, {"lineNumber": 2331, "col_offset": 29, "nodeName": "_constraint_type", "type": "Any"}, {"lineNumber": 2332, "col_offset": 19, "nodeName": "constraint", "type": "Any"}, {"lineNumber": 2335, "col_offset": 31, "nodeName": "np", "type": "Any"}, {"lineNumber": 2335, "col_offset": 65, "nodeName": "_s", "type": "Any"}, {"lineNumber": 2339, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2341, "col_offset": 22, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2341, "col_offset": 40, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2342, "col_offset": 23, "nodeName": "rand", "type": "Any"}, {"lineNumber": 2343, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2343, "col_offset": 44, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2344, "col_offset": 23, "nodeName": "rand", "type": "Any"}, {"lineNumber": 2345, "col_offset": 30, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2346, "col_offset": 30, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2346, "col_offset": 49, "nodeName": "rand", "type": "Any"}, {"lineNumber": 2347, "col_offset": 29, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2348, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 2349, "col_offset": 33, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2350, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 2351, "col_offset": 37, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2352, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 2353, "col_offset": 25, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2353, "col_offset": 45, "nodeName": "rand", "type": "Any"}, {"lineNumber": 2354, "col_offset": 27, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2354, "col_offset": 47, "nodeName": "rand", "type": "Any"}, {"lineNumber": 2355, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2355, "col_offset": 41, "nodeName": "rand", "type": "Any"}, {"lineNumber": 2356, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2356, "col_offset": 43, "nodeName": "rand", "type": "Any"}, {"lineNumber": 2357, "col_offset": 32, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2358, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 2359, "col_offset": 34, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2360, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 2362, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 2364, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 2365, "col_offset": 26, "nodeName": "rand", "type": "Any"}, {"lineNumber": 2366, "col_offset": 29, "nodeName": "rand", "type": "Any"}, {"lineNumber": 2371, "col_offset": 25, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 2372, "col_offset": 33, "nodeName": "tril", "type": "Any"}, {"lineNumber": 2373, "col_offset": 31, "nodeName": "cholesky", "type": "Any"}, {"lineNumber": 2373, "col_offset": 50, "nodeName": "psd_matrix", "type": "Any"}, {"lineNumber": 2381, "col_offset": 16, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 2383, "col_offset": 25, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 2384, "col_offset": 16, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 2384, "col_offset": 36, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 2393, "col_offset": 44, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2398, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2398, "col_offset": 19, "nodeName": "constraint_param", "type": "Tuple[Any, ...]"}, {"lineNumber": 2399, "col_offset": 29, "nodeName": "_constraint_type", "type": "Any"}, {"lineNumber": 2401, "col_offset": 29, "nodeName": "_constraint_type", "type": "Any"}, {"lineNumber": 2403, "col_offset": 27, "nodeName": "biject_to", "type": "Any"}, {"lineNumber": 2403, "col_offset": 41, "nodeName": "constraint", "type": "Any"}, {"lineNumber": 2404, "col_offset": 16, "nodeName": "bijector", "type": "Any"}, {"lineNumber": 2405, "col_offset": 24, "nodeName": "bijector", "type": "Any"}, {"lineNumber": 2405, "col_offset": 33, "nodeName": "value", "type": "Any"}, {"lineNumber": 2407, "col_offset": 33, "nodeName": "transform_to", "type": "Any"}, {"lineNumber": 2407, "col_offset": 50, "nodeName": "constraint", "type": "Any"}, {"lineNumber": 2408, "col_offset": 16, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 2409, "col_offset": 24, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 2409, "col_offset": 39, "nodeName": "value", "type": "Any"}, {"lineNumber": 2410, "col_offset": 27, "nodeName": "check", "type": "Any"}, {"lineNumber": 2410, "col_offset": 44, "nodeName": "value", "type": "Any"}, {"lineNumber": 2415, "col_offset": 25, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2416, "col_offset": 27, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2417, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2418, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2419, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2420, "col_offset": 30, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2421, "col_offset": 27, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2429, "col_offset": 22, "nodeName": "TestDomainMap", "type": "Type[Any]"}, {"lineNumber": 2429, "col_offset": 36, "nodeName": "constraint_type", "type": "str"}, {"lineNumber": 2429, "col_offset": 53, "nodeName": "bijective", "type": "bool"}, {"lineNumber": 2432, "col_offset": 53, "nodeName": "net", "type": "Any"}, {"lineNumber": 2433, "col_offset": 20, "nodeName": "test_sample", "type": "Any"}, {"lineNumber": 2434, "col_offset": 16, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "TestUniform", "type": "Type[Any]"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "np", "type": "Any"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "low", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "high", "type": "Any"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "samples", "type": "Any"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 100, "col_offset": 63, "nodeName": "samples", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "np", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "np", "type": "Any"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "np", "type": "Any"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "TestNormal", "type": "Type[Any]"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 210, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 221, "col_offset": 18, "nodeName": "TestLaplace", "type": "Type[Any]"}, {"lineNumber": 221, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 239, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 240, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 253, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 253, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 254, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 267, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 280, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 281, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 292, "col_offset": 18, "nodeName": "TestCauchy", "type": "Type[Any]"}, {"lineNumber": 292, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 321, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 321, "col_offset": 27, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 322, "col_offset": 27, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 335, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 335, "col_offset": 27, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 336, "col_offset": 27, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 349, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 349, "col_offset": 27, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 350, "col_offset": 27, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 362, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 362, "col_offset": 27, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 363, "col_offset": 27, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 373, "col_offset": 18, "nodeName": "TestHalfCauchy", "type": "Type[Any]"}, {"lineNumber": 373, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 378, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 396, "col_offset": 25, "nodeName": "np", "type": "Any"}, {"lineNumber": 401, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 401, "col_offset": 34, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 408, "col_offset": 25, "nodeName": "np", "type": "Any"}, {"lineNumber": 413, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 413, "col_offset": 34, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 425, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 425, "col_offset": 34, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 436, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 436, "col_offset": 18, "nodeName": "TestPoisson", "type": "Type[Any]"}, {"lineNumber": 436, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 455, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 460, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 470, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 470, "col_offset": 18, "nodeName": "TestGeometric", "type": "Type[Any]"}, {"lineNumber": 470, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 475, "col_offset": 19, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 475, "col_offset": 39, "nodeName": "params", "type": "Any"}, {"lineNumber": 476, "col_offset": 16, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 476, "col_offset": 35, "nodeName": "params", "type": "Any"}, {"lineNumber": 483, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 483, "col_offset": 47, "nodeName": "shape", "type": "Union[int, Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 491, "col_offset": 32, "nodeName": "sample", "type": "Any"}, {"lineNumber": 505, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 505, "col_offset": 25, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 520, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 520, "col_offset": 25, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 530, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 530, "col_offset": 18, "nodeName": "TestNegativeBinomial", "type": "Type[Any]"}, {"lineNumber": 530, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 535, "col_offset": 19, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 535, "col_offset": 42, "nodeName": "n", "type": "Any"}, {"lineNumber": 535, "col_offset": 51, "nodeName": "params", "type": "Any"}, {"lineNumber": 536, "col_offset": 16, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 536, "col_offset": 39, "nodeName": "n", "type": "Any"}, {"lineNumber": 536, "col_offset": 47, "nodeName": "params", "type": "Any"}, {"lineNumber": 542, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 542, "col_offset": 42, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 544, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 544, "col_offset": 47, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 552, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 562, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 562, "col_offset": 55, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 566, "col_offset": 28, "nodeName": "prob_to_logit", "type": "Callable[[Any], Any]"}, {"lineNumber": 566, "col_offset": 42, "nodeName": "param", "type": "Any"}, {"lineNumber": 568, "col_offset": 20, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 570, "col_offset": 28, "nodeName": "ss", "type": "Any"}, {"lineNumber": 572, "col_offset": 29, "nodeName": "mean", "type": "Any"}, {"lineNumber": 574, "col_offset": 29, "nodeName": "var", "type": "Any"}, {"lineNumber": 585, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 585, "col_offset": 18, "nodeName": "TestExponential", "type": "Type[Any]"}, {"lineNumber": 585, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 600, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 612, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 624, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 635, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 645, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 645, "col_offset": 18, "nodeName": "TestWeibull", "type": "Type[Any]"}, {"lineNumber": 645, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 663, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 677, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 691, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 704, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 715, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 715, "col_offset": 18, "nodeName": "TestPareto", "type": "Type[Any]"}, {"lineNumber": 715, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 733, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 747, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 761, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 774, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 784, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 784, "col_offset": 18, "nodeName": "TestGamma", "type": "Type[Any]"}, {"lineNumber": 784, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 802, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 810, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 811, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 814, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 815, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 815, "col_offset": 25, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 815, "col_offset": 32, "nodeName": "scale", "type": "Any"}, {"lineNumber": 816, "col_offset": 34, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 817, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 819, "col_offset": 25, "nodeName": "ss_gamma", "type": "Any"}, {"lineNumber": 821, "col_offset": 25, "nodeName": "var", "type": "Any"}, {"lineNumber": 823, "col_offset": 25, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 833, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 833, "col_offset": 18, "nodeName": "TestDirichlet", "type": "Type[Any]"}, {"lineNumber": 833, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 847, "col_offset": 31, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 848, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 851, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 852, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 852, "col_offset": 25, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 856, "col_offset": 32, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 856, "col_offset": 48, "nodeName": "_np", "type": "module"}, {"lineNumber": 856, "col_offset": 62, "nodeName": "sum", "type": "Any"}, {"lineNumber": 864, "col_offset": 31, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 865, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 866, "col_offset": 25, "nodeName": "_np", "type": "module"}, {"lineNumber": 870, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 871, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 871, "col_offset": 25, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 872, "col_offset": 21, "nodeName": "dirichlet", "type": "Any"}, {"lineNumber": 881, "col_offset": 20, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 881, "col_offset": 71, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 882, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 882, "col_offset": 47, "nodeName": "desired_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 885, "col_offset": 20, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 887, "col_offset": 25, "nodeName": "ss", "type": "Any"}, {"lineNumber": 889, "col_offset": 29, "nodeName": "mean", "type": "Any"}, {"lineNumber": 890, "col_offset": 21, "nodeName": "func", "type": "str"}, {"lineNumber": 891, "col_offset": 20, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 893, "col_offset": 20, "nodeName": "np_out", "type": "Any"}, {"lineNumber": 903, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 903, "col_offset": 18, "nodeName": "TestBeta", "type": "Type[Any]"}, {"lineNumber": 903, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 921, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 921, "col_offset": 25, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 921, "col_offset": 42, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 929, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 930, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 933, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 934, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 934, "col_offset": 25, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 934, "col_offset": 32, "nodeName": "beta", "type": "Any"}, {"lineNumber": 935, "col_offset": 30, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 935, "col_offset": 47, "nodeName": "beta", "type": "Any"}, {"lineNumber": 937, "col_offset": 25, "nodeName": "ss_beta", "type": "Any"}, {"lineNumber": 939, "col_offset": 25, "nodeName": "var", "type": "Any"}, {"lineNumber": 941, "col_offset": 25, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 951, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 951, "col_offset": 18, "nodeName": "TestFisherSnedecor", "type": "Type[Any]"}, {"lineNumber": 951, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 969, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 977, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 978, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 981, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 982, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 982, "col_offset": 25, "nodeName": "df1", "type": "Any"}, {"lineNumber": 982, "col_offset": 30, "nodeName": "df2", "type": "Any"}, {"lineNumber": 983, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 983, "col_offset": 47, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 985, "col_offset": 25, "nodeName": "ss_f", "type": "Any"}, {"lineNumber": 987, "col_offset": 25, "nodeName": "ss_f", "type": "Any"}, {"lineNumber": 997, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 997, "col_offset": 18, "nodeName": "TestT", "type": "Type[Any]"}, {"lineNumber": 997, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 1016, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 1025, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 1026, "col_offset": 17, "nodeName": "np", "type": "Any"}, {"lineNumber": 1029, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 1030, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 1030, "col_offset": 25, "nodeName": "df", "type": "Any"}, {"lineNumber": 1030, "col_offset": 29, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1030, "col_offset": 34, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1031, "col_offset": 37, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1031, "col_offset": 57, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1033, "col_offset": 25, "nodeName": "ss_f", "type": "Any"}, {"lineNumber": 1035, "col_offset": 25, "nodeName": "var", "type": "Any"}, {"lineNumber": 1037, "col_offset": 25, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 1047, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1047, "col_offset": 18, "nodeName": "TestGumbel", "type": "Type[Any]"}, {"lineNumber": 1047, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 1052, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 1065, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 1079, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 1079, "col_offset": 29, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1080, "col_offset": 29, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1093, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 1093, "col_offset": 29, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1094, "col_offset": 29, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1106, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 1106, "col_offset": 29, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1107, "col_offset": 29, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1117, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1117, "col_offset": 18, "nodeName": "TestMultinomial", "type": "Type[Any]"}, {"lineNumber": 1117, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 1130, "col_offset": 16, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1130, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 1130, "col_offset": 55, "nodeName": "params", "type": "Any"}, {"lineNumber": 1130, "col_offset": 75, "nodeName": "_total_count", "type": "Any"}, {"lineNumber": 1134, "col_offset": 23, "nodeName": "multinomial", "type": "Any"}, {"lineNumber": 1134, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 1136, "col_offset": 23, "nodeName": "multinomial", "type": "Any"}, {"lineNumber": 1136, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 1149, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 1150, "col_offset": 36, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1150, "col_offset": 54, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1153, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 1154, "col_offset": 57, "nodeName": "random", "type": "Any"}, {"lineNumber": 1157, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 1158, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 1158, "col_offset": 25, "nodeName": "param", "type": "Any"}, {"lineNumber": 1160, "col_offset": 52, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1165, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 1166, "col_offset": 36, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1166, "col_offset": 54, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1169, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 1170, "col_offset": 59, "nodeName": "random", "type": "Any"}, {"lineNumber": 1173, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 1174, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 1174, "col_offset": 25, "nodeName": "param", "type": "Any"}, {"lineNumber": 1177, "col_offset": 32, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1178, "col_offset": 52, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1183, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 1184, "col_offset": 36, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1184, "col_offset": 54, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1185, "col_offset": 18, "nodeName": "_np", "type": "module"}, {"lineNumber": 1190, "col_offset": 32, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1191, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 1194, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 1196, "col_offset": 34, "nodeName": "random", "type": "Any"}, {"lineNumber": 1198, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 1199, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 1199, "col_offset": 25, "nodeName": "param", "type": "Any"}, {"lineNumber": 1199, "col_offset": 32, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1209, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1209, "col_offset": 18, "nodeName": "TestBinomial", "type": "Type[Any]"}, {"lineNumber": 1209, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 1217, "col_offset": 16, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1217, "col_offset": 31, "nodeName": "_n", "type": "Any"}, {"lineNumber": 1217, "col_offset": 45, "nodeName": "params", "type": "Any"}, {"lineNumber": 1224, "col_offset": 16, "nodeName": "_np", "type": "module"}, {"lineNumber": 1225, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 1226, "col_offset": 54, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 1226, "col_offset": 60, "nodeName": "n", "type": "Any"}, {"lineNumber": 1231, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 1232, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 1232, "col_offset": 25, "nodeName": "param", "type": "Any"}, {"lineNumber": 1249, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 1249, "col_offset": 46, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1257, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 1257, "col_offset": 28, "nodeName": "n", "type": "Any"}, {"lineNumber": 1265, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 1266, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 1266, "col_offset": 55, "nodeName": "shape", "type": "Union[Tuple[int], int, Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1270, "col_offset": 28, "nodeName": "prob_to_logit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1270, "col_offset": 42, "nodeName": "param", "type": "Any"}, {"lineNumber": 1272, "col_offset": 20, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1274, "col_offset": 27, "nodeName": "ss", "type": "Any"}, {"lineNumber": 1274, "col_offset": 38, "nodeName": "n", "type": "Any"}, {"lineNumber": 1276, "col_offset": 29, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1278, "col_offset": 29, "nodeName": "var", "type": "Any"}, {"lineNumber": 1288, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1288, "col_offset": 18, "nodeName": "TestBernoulli", "type": "Type[Any]"}, {"lineNumber": 1288, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 1293, "col_offset": 24, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1293, "col_offset": 44, "nodeName": "params", "type": "Any"}, {"lineNumber": 1294, "col_offset": 16, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1294, "col_offset": 35, "nodeName": "params", "type": "Any"}, {"lineNumber": 1309, "col_offset": 25, "nodeName": "ss", "type": "Any"}, {"lineNumber": 1309, "col_offset": 42, "nodeName": "sample", "type": "Any"}, {"lineNumber": 1309, "col_offset": 60, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1324, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 1324, "col_offset": 30, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1339, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 1339, "col_offset": 30, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1349, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1349, "col_offset": 18, "nodeName": "TestRelaxedBernoulli", "type": "Type[Any]"}, {"lineNumber": 1349, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 1356, "col_offset": 16, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1356, "col_offset": 49, "nodeName": "params", "type": "Any"}, {"lineNumber": 1358, "col_offset": 23, "nodeName": "relaxed_bernoulli", "type": "Any"}, {"lineNumber": 1400, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1400, "col_offset": 18, "nodeName": "TestCategorical", "type": "Type[Any]"}, {"lineNumber": 1400, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 1410, "col_offset": 16, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1410, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 1410, "col_offset": 55, "nodeName": "params", "type": "Any"}, {"lineNumber": 1413, "col_offset": 23, "nodeName": "categorical", "type": "Any"}, {"lineNumber": 1413, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 1415, "col_offset": 23, "nodeName": "categorical", "type": "Any"}, {"lineNumber": 1415, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 1425, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 1426, "col_offset": 36, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1426, "col_offset": 54, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1429, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 1433, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 1434, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 1434, "col_offset": 25, "nodeName": "param", "type": "Any"}, {"lineNumber": 1441, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 1442, "col_offset": 36, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1442, "col_offset": 54, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1445, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 1451, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 1452, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 1452, "col_offset": 25, "nodeName": "param", "type": "Any"}, {"lineNumber": 1454, "col_offset": 32, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1460, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 1461, "col_offset": 36, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1461, "col_offset": 54, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1462, "col_offset": 18, "nodeName": "_np", "type": "module"}, {"lineNumber": 1466, "col_offset": 32, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1467, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 1469, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 1473, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 1479, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 1479, "col_offset": 30, "nodeName": "np", "type": "Any"}, {"lineNumber": 1482, "col_offset": 30, "nodeName": "take_along_axis", "type": "Any"}, {"lineNumber": 1483, "col_offset": 16, "nodeName": "log_pmf", "type": "Any"}, {"lineNumber": 1484, "col_offset": 32, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1484, "col_offset": 50, "nodeName": "expect_log_prob", "type": "Any"}, {"lineNumber": 1490, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 1491, "col_offset": 36, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1491, "col_offset": 54, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1494, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 1498, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 1499, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 1499, "col_offset": 25, "nodeName": "param", "type": "Any"}, {"lineNumber": 1501, "col_offset": 32, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1513, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1513, "col_offset": 18, "nodeName": "TestOneHotCategorical", "type": "Type[Any]"}, {"lineNumber": 1513, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 1522, "col_offset": 16, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1522, "col_offset": 49, "nodeName": "_num_events", "type": "Any"}, {"lineNumber": 1522, "col_offset": 72, "nodeName": "params", "type": "Any"}, {"lineNumber": 1524, "col_offset": 23, "nodeName": "categorical", "type": "Any"}, {"lineNumber": 1524, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 1534, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 1535, "col_offset": 36, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1535, "col_offset": 54, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1538, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 1542, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 1543, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 1543, "col_offset": 25, "nodeName": "param", "type": "Any"}, {"lineNumber": 1545, "col_offset": 52, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1550, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 1551, "col_offset": 36, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1551, "col_offset": 54, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1552, "col_offset": 18, "nodeName": "_np", "type": "module"}, {"lineNumber": 1556, "col_offset": 32, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1557, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 1560, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 1564, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 1572, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 1573, "col_offset": 36, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1573, "col_offset": 54, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1576, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 1580, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 1581, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 1581, "col_offset": 25, "nodeName": "param", "type": "Any"}, {"lineNumber": 1584, "col_offset": 16, "nodeName": "desired_shape", "type": "Optional[Union[Tuple[int, int], Tuple[()]]]"}, {"lineNumber": 1584, "col_offset": 33, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1592, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1592, "col_offset": 22, "nodeName": "TestRelaxedOneHotCategorical", "type": "Type[Any]"}, {"lineNumber": 1592, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 1601, "col_offset": 16, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1602, "col_offset": 38, "nodeName": "_num_events", "type": "Any"}, {"lineNumber": 1602, "col_offset": 61, "nodeName": "params", "type": "Any"}, {"lineNumber": 1604, "col_offset": 23, "nodeName": "categorical", "type": "Any"}, {"lineNumber": 1604, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 1614, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 1615, "col_offset": 36, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1615, "col_offset": 54, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1619, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 1624, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 1625, "col_offset": 17, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 1629, "col_offset": 52, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1630, "col_offset": 19, "nodeName": "param", "type": "Any"}, {"lineNumber": 1635, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 1636, "col_offset": 36, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1636, "col_offset": 54, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1637, "col_offset": 18, "nodeName": "_np", "type": "module"}, {"lineNumber": 1641, "col_offset": 32, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 1643, "col_offset": 31, "nodeName": "random", "type": "Any"}, {"lineNumber": 1644, "col_offset": 36, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1644, "col_offset": 54, "nodeName": "desired_shape", "type": "Any"}, {"lineNumber": 1646, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 1650, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 1661, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1661, "col_offset": 18, "nodeName": "TestMVN", "type": "Type[Any]"}, {"lineNumber": 1661, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 1667, "col_offset": 53, "nodeName": "_param_type", "type": "Any"}, {"lineNumber": 1667, "col_offset": 71, "nodeName": "cov", "type": "Any"}, {"lineNumber": 1685, "col_offset": 32, "nodeName": "np", "type": "Any"}, {"lineNumber": 1692, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 1693, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 1694, "col_offset": 16, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1695, "col_offset": 16, "nodeName": "_s", "type": "Any"}, {"lineNumber": 1697, "col_offset": 24, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 1697, "col_offset": 34, "nodeName": "_s", "type": "Any"}, {"lineNumber": 1698, "col_offset": 35, "nodeName": "eye", "type": "Any"}, {"lineNumber": 1698, "col_offset": 42, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1699, "col_offset": 28, "nodeName": "cov_func", "type": "Dict[str, Callable[[Any], Any]]"}, {"lineNumber": 1702, "col_offset": 20, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1703, "col_offset": 21, "nodeName": "record", "type": "Any"}, {"lineNumber": 1704, "col_offset": 29, "nodeName": "net", "type": "Any"}, {"lineNumber": 1704, "col_offset": 33, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1704, "col_offset": 38, "nodeName": "cov_param", "type": "Any"}, {"lineNumber": 1705, "col_offset": 33, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1706, "col_offset": 23, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1707, "col_offset": 16, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1708, "col_offset": 23, "nodeName": "grad", "type": "Any"}, {"lineNumber": 1708, "col_offset": 41, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1709, "col_offset": 23, "nodeName": "grad", "type": "Any"}, {"lineNumber": 1709, "col_offset": 40, "nodeName": "_s", "type": "Any"}, {"lineNumber": 1715, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 1716, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 1717, "col_offset": 26, "nodeName": "random", "type": "Any"}, {"lineNumber": 1718, "col_offset": 20, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 1718, "col_offset": 34, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1718, "col_offset": 40, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 1719, "col_offset": 16, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1720, "col_offset": 16, "nodeName": "_s", "type": "Any"}, {"lineNumber": 1722, "col_offset": 24, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 1722, "col_offset": 34, "nodeName": "_s", "type": "Any"}, {"lineNumber": 1723, "col_offset": 35, "nodeName": "eye", "type": "Any"}, {"lineNumber": 1723, "col_offset": 42, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1724, "col_offset": 28, "nodeName": "cov_func", "type": "Dict[str, Callable[[Any], Any]]"}, {"lineNumber": 1727, "col_offset": 20, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1729, "col_offset": 23, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1729, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1730, "col_offset": 19, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1731, "col_offset": 31, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1733, "col_offset": 31, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1734, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1739, "col_offset": 28, "nodeName": "ss", "type": "Any"}, {"lineNumber": 1740, "col_offset": 25, "nodeName": "scipy_mvn", "type": "Any"}, {"lineNumber": 1748, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 1749, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 1750, "col_offset": 16, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1751, "col_offset": 16, "nodeName": "_s", "type": "Any"}, {"lineNumber": 1753, "col_offset": 24, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 1753, "col_offset": 34, "nodeName": "_s", "type": "Any"}, {"lineNumber": 1754, "col_offset": 35, "nodeName": "eye", "type": "Any"}, {"lineNumber": 1754, "col_offset": 42, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1755, "col_offset": 28, "nodeName": "cov_func", "type": "Dict[str, Callable[[Any], Any]]"}, {"lineNumber": 1758, "col_offset": 20, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 1760, "col_offset": 23, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1760, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1761, "col_offset": 19, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1762, "col_offset": 31, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1764, "col_offset": 31, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1769, "col_offset": 28, "nodeName": "ss", "type": "Any"}, {"lineNumber": 1770, "col_offset": 25, "nodeName": "scipy_mvn", "type": "Any"}, {"lineNumber": 1780, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1780, "col_offset": 18, "nodeName": "TestHalfNormal", "type": "Type[Any]"}, {"lineNumber": 1780, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 1785, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 1803, "col_offset": 25, "nodeName": "np", "type": "Any"}, {"lineNumber": 1808, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 1808, "col_offset": 32, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1815, "col_offset": 25, "nodeName": "np", "type": "Any"}, {"lineNumber": 1820, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 1820, "col_offset": 32, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1832, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 1832, "col_offset": 32, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1846, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1846, "col_offset": 18, "nodeName": "TestAffineTransform", "type": "Type[Any]"}, {"lineNumber": 1846, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 1850, "col_offset": 36, "nodeName": "np", "type": "Any"}, {"lineNumber": 1851, "col_offset": 36, "nodeName": "np", "type": "Any"}, {"lineNumber": 1852, "col_offset": 26, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1852, "col_offset": 59, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1853, "col_offset": 26, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1853, "col_offset": 50, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1857, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 1858, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 1874, "col_offset": 25, "nodeName": "norm", "type": "Any"}, {"lineNumber": 1875, "col_offset": 54, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1879, "col_offset": 30, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1879, "col_offset": 40, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1879, "col_offset": 47, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1880, "col_offset": 31, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1880, "col_offset": 41, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1881, "col_offset": 12, "nodeName": "np", "type": "Any"}, {"lineNumber": 1882, "col_offset": 28, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1884, "col_offset": 28, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1906, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1906, "col_offset": 18, "nodeName": "TestComposeTransform", "type": "Type[Any]"}, {"lineNumber": 1906, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 1911, "col_offset": 36, "nodeName": "np", "type": "Any"}, {"lineNumber": 1912, "col_offset": 36, "nodeName": "np", "type": "Any"}, {"lineNumber": 1914, "col_offset": 16, "nodeName": "AffineTransform", "type": "Any"}, {"lineNumber": 1915, "col_offset": 16, "nodeName": "AffineTransform", "type": "Any"}, {"lineNumber": 1916, "col_offset": 16, "nodeName": "ExpTransform", "type": "Any"}, {"lineNumber": 1921, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 1922, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 1937, "col_offset": 17, "nodeName": "ss", "type": "Any"}, {"lineNumber": 1951, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1951, "col_offset": 18, "nodeName": "Dummy", "type": "Type[Any]"}, {"lineNumber": 1951, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 1956, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 1989, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1989, "col_offset": 18, "nodeName": "TestIndependent", "type": "Type[Any]"}, {"lineNumber": 1989, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 1996, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 2004, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 2004, "col_offset": 52, "nodeName": "full_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 2005, "col_offset": 26, "nodeName": "np", "type": "Any"}, {"lineNumber": 2005, "col_offset": 35, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 2006, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2006, "col_offset": 42, "nodeName": "event_shape", "type": "Union[Tuple[int], Tuple[int, int]]"}, {"lineNumber": 2008, "col_offset": 20, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 2010, "col_offset": 23, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 2023, "col_offset": 17, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2059, "col_offset": 26, "nodeName": "np", "type": "Any"}, {"lineNumber": 2060, "col_offset": 27, "nodeName": "np", "type": "Any"}, {"lineNumber": 2066, "col_offset": 30, "nodeName": "random", "type": "Any"}, {"lineNumber": 2067, "col_offset": 32, "nodeName": "random", "type": "Any"}, {"lineNumber": 2077, "col_offset": 27, "nodeName": "np", "type": "Any"}, {"lineNumber": 2087, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 2087, "col_offset": 51, "nodeName": "shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int], int]"}, {"lineNumber": 2097, "col_offset": 28, "nodeName": "np", "type": "Any"}, {"lineNumber": 2098, "col_offset": 28, "nodeName": "np", "type": "Any"}, {"lineNumber": 2103, "col_offset": 28, "nodeName": "np", "type": "Any"}, {"lineNumber": 2113, "col_offset": 33, "nodeName": "random", "type": "Any"}, {"lineNumber": 2114, "col_offset": 33, "nodeName": "random", "type": "Any"}, {"lineNumber": 2138, "col_offset": 45, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 2139, "col_offset": 44, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 2139, "col_offset": 57, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 2140, "col_offset": 30, "nodeName": "np", "type": "Any"}, {"lineNumber": 2142, "col_offset": 31, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 2150, "col_offset": 28, "nodeName": "np", "type": "Any"}, {"lineNumber": 2151, "col_offset": 28, "nodeName": "desired_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 2162, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 2162, "col_offset": 29, "nodeName": "dirichlet", "type": "Any"}, {"lineNumber": 2173, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 2174, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 2175, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 2176, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 2179, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 2180, "col_offset": 25, "nodeName": "random", "type": "Any"}, {"lineNumber": 2190, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 2191, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 2192, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 2193, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 2194, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 2195, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 2198, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 2218, "col_offset": 28, "nodeName": "np", "type": "Any"}, {"lineNumber": 2218, "col_offset": 50, "nodeName": "np", "type": "Any"}, {"lineNumber": 2219, "col_offset": 26, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2231, "col_offset": 13, "nodeName": "net", "type": "Any"}, {"lineNumber": 2232, "col_offset": 18, "nodeName": "net", "type": "Any"}, {"lineNumber": 2245, "col_offset": 28, "nodeName": "np", "type": "Any"}, {"lineNumber": 2245, "col_offset": 50, "nodeName": "np", "type": "Any"}, {"lineNumber": 2246, "col_offset": 26, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2258, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 2258, "col_offset": 25, "nodeName": "loc", "type": "Any"}, {"lineNumber": 2258, "col_offset": 30, "nodeName": "scale", "type": "Any"}, {"lineNumber": 2293, "col_offset": 36, "nodeName": "_np", "type": "module"}, {"lineNumber": 2298, "col_offset": 46, "nodeName": "_np", "type": "module"}, {"lineNumber": 2300, "col_offset": 46, "nodeName": "_np", "type": "module"}, {"lineNumber": 2302, "col_offset": 46, "nodeName": "_np", "type": "module"}, {"lineNumber": 2314, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 2314, "col_offset": 25, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 2322, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2322, "col_offset": 18, "nodeName": "TestConstraint", "type": "Type[Any]"}, {"lineNumber": 2322, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 2329, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2331, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2331, "col_offset": 52, "nodeName": "constraint_param", "type": "Tuple[Any, ...]"}, {"lineNumber": 2339, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 2341, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 2341, "col_offset": 40, "nodeName": "np", "type": "Any"}, {"lineNumber": 2342, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 2343, "col_offset": 26, "nodeName": "np", "type": "Any"}, {"lineNumber": 2343, "col_offset": 44, "nodeName": "np", "type": "Any"}, {"lineNumber": 2344, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 2345, "col_offset": 30, "nodeName": "np", "type": "Any"}, {"lineNumber": 2346, "col_offset": 30, "nodeName": "np", "type": "Any"}, {"lineNumber": 2346, "col_offset": 49, "nodeName": "random", "type": "Any"}, {"lineNumber": 2347, "col_offset": 29, "nodeName": "np", "type": "Any"}, {"lineNumber": 2347, "col_offset": 47, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2349, "col_offset": 33, "nodeName": "np", "type": "Any"}, {"lineNumber": 2349, "col_offset": 51, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2351, "col_offset": 37, "nodeName": "np", "type": "Any"}, {"lineNumber": 2351, "col_offset": 55, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2353, "col_offset": 25, "nodeName": "np", "type": "Any"}, {"lineNumber": 2353, "col_offset": 45, "nodeName": "random", "type": "Any"}, {"lineNumber": 2354, "col_offset": 27, "nodeName": "np", "type": "Any"}, {"lineNumber": 2354, "col_offset": 47, "nodeName": "random", "type": "Any"}, {"lineNumber": 2355, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 2355, "col_offset": 41, "nodeName": "random", "type": "Any"}, {"lineNumber": 2356, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 2356, "col_offset": 43, "nodeName": "random", "type": "Any"}, {"lineNumber": 2357, "col_offset": 32, "nodeName": "np", "type": "Any"}, {"lineNumber": 2359, "col_offset": 34, "nodeName": "np", "type": "Any"}, {"lineNumber": 2361, "col_offset": 29, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2363, "col_offset": 31, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2365, "col_offset": 26, "nodeName": "random", "type": "Any"}, {"lineNumber": 2366, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 2371, "col_offset": 25, "nodeName": "npx", "type": "Any"}, {"lineNumber": 2371, "col_offset": 37, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2372, "col_offset": 33, "nodeName": "np", "type": "Any"}, {"lineNumber": 2372, "col_offset": 41, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2373, "col_offset": 31, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 2381, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 2384, "col_offset": 44, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 2392, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2392, "col_offset": 18, "nodeName": "TestDomainMap", "type": "Type[Any]"}, {"lineNumber": 2392, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 2399, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2401, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2401, "col_offset": 52, "nodeName": "constraint_param", "type": "Tuple[Any, ...]"}, {"lineNumber": 2403, "col_offset": 27, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2407, "col_offset": 33, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 2410, "col_offset": 27, "nodeName": "constraint", "type": "Any"}, {"lineNumber": 2415, "col_offset": 25, "nodeName": "random", "type": "Any"}, {"lineNumber": 2416, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 2417, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 2418, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 2419, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 2420, "col_offset": 30, "nodeName": "random", "type": "Any"}, {"lineNumber": 2421, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 2431, "col_offset": 20, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 2433, "col_offset": 34, "nodeName": "constraint_arg", "type": "Union[List[Any], Tuple[()]]"}, {"lineNumber": 2434, "col_offset": 36, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 2435, "col_offset": 36, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "ss", "type": "Any"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "low", "type": "Any"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "low", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "low", "type": "Any"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "loc", "type": "Any"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "scale", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "loc", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "scale", "type": "Any"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "loc", "type": "Any"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "scale", "type": "Any"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "loc", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "scale", "type": "Any"}, {"lineNumber": 239, "col_offset": 28, "nodeName": "loc", "type": "Any"}, {"lineNumber": 240, "col_offset": 28, "nodeName": "scale", "type": "Any"}, {"lineNumber": 253, "col_offset": 28, "nodeName": "loc", "type": "Any"}, {"lineNumber": 254, "col_offset": 28, "nodeName": "scale", "type": "Any"}, {"lineNumber": 267, "col_offset": 28, "nodeName": "loc", "type": "Any"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "scale", "type": "Any"}, {"lineNumber": 280, "col_offset": 28, "nodeName": "loc", "type": "Any"}, {"lineNumber": 281, "col_offset": 28, "nodeName": "scale", "type": "Any"}, {"lineNumber": 321, "col_offset": 27, "nodeName": "loc", "type": "Any"}, {"lineNumber": 322, "col_offset": 27, "nodeName": "scale", "type": "Any"}, {"lineNumber": 335, "col_offset": 27, "nodeName": "loc", "type": "Any"}, {"lineNumber": 336, "col_offset": 27, "nodeName": "scale", "type": "Any"}, {"lineNumber": 349, "col_offset": 27, "nodeName": "loc", "type": "Any"}, {"lineNumber": 350, "col_offset": 27, "nodeName": "scale", "type": "Any"}, {"lineNumber": 362, "col_offset": 27, "nodeName": "loc", "type": "Any"}, {"lineNumber": 363, "col_offset": 27, "nodeName": "scale", "type": "Any"}, {"lineNumber": 401, "col_offset": 34, "nodeName": "scale", "type": "Any"}, {"lineNumber": 413, "col_offset": 34, "nodeName": "scale", "type": "Any"}, {"lineNumber": 425, "col_offset": 34, "nodeName": "scale", "type": "Any"}, {"lineNumber": 455, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 460, "col_offset": 31, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 483, "col_offset": 17, "nodeName": "np", "type": "Any"}, {"lineNumber": 505, "col_offset": 25, "nodeName": "prob", "type": "Any"}, {"lineNumber": 520, "col_offset": 25, "nodeName": "prob", "type": "Any"}, {"lineNumber": 542, "col_offset": 12, "nodeName": "np", "type": "Any"}, {"lineNumber": 544, "col_offset": 17, "nodeName": "np", "type": "Any"}, {"lineNumber": 552, "col_offset": 29, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 552, "col_offset": 44, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 561, "col_offset": 20, "nodeName": "randint", "type": "Any"}, {"lineNumber": 562, "col_offset": 23, "nodeName": "np", "type": "Any"}, {"lineNumber": 568, "col_offset": 20, "nodeName": "net", "type": "Any"}, {"lineNumber": 569, "col_offset": 25, "nodeName": "net", "type": "Any"}, {"lineNumber": 569, "col_offset": 29, "nodeName": "n", "type": "Any"}, {"lineNumber": 569, "col_offset": 32, "nodeName": "param", "type": "Any"}, {"lineNumber": 570, "col_offset": 40, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 572, "col_offset": 29, "nodeName": "ss_nbinom", "type": "Any"}, {"lineNumber": 574, "col_offset": 29, "nodeName": "ss_nbinom", "type": "Any"}, {"lineNumber": 600, "col_offset": 32, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 612, "col_offset": 32, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 624, "col_offset": 32, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 635, "col_offset": 32, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 663, "col_offset": 34, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 664, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 677, "col_offset": 34, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 678, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 691, "col_offset": 34, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 692, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 704, "col_offset": 34, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 705, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 733, "col_offset": 29, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 733, "col_offset": 52, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 747, "col_offset": 29, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 747, "col_offset": 52, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 761, "col_offset": 29, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 761, "col_offset": 52, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 774, "col_offset": 29, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 774, "col_offset": 52, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 802, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 803, "col_offset": 32, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 816, "col_offset": 34, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 817, "col_offset": 38, "nodeName": "scale", "type": "Any"}, {"lineNumber": 821, "col_offset": 25, "nodeName": "ss_gamma", "type": "Any"}, {"lineNumber": 823, "col_offset": 25, "nodeName": "ss_gamma", "type": "Any"}, {"lineNumber": 856, "col_offset": 62, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 867, "col_offset": 21, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 871, "col_offset": 32, "nodeName": "array", "type": "Any"}, {"lineNumber": 871, "col_offset": 41, "nodeName": "np_samples", "type": "Any"}, {"lineNumber": 872, "col_offset": 21, "nodeName": "ss", "type": "Any"}, {"lineNumber": 881, "col_offset": 35, "nodeName": "batch_shape", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 882, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 885, "col_offset": 20, "nodeName": "net", "type": "Any"}, {"lineNumber": 886, "col_offset": 25, "nodeName": "net", "type": "Any"}, {"lineNumber": 886, "col_offset": 29, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 887, "col_offset": 44, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 889, "col_offset": 29, "nodeName": "ss_dir", "type": "Any"}, {"lineNumber": 891, "col_offset": 29, "nodeName": "var", "type": "Any"}, {"lineNumber": 893, "col_offset": 29, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 921, "col_offset": 25, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 921, "col_offset": 42, "nodeName": "beta", "type": "Any"}, {"lineNumber": 939, "col_offset": 25, "nodeName": "ss_beta", "type": "Any"}, {"lineNumber": 941, "col_offset": 25, "nodeName": "ss_beta", "type": "Any"}, {"lineNumber": 969, "col_offset": 26, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 969, "col_offset": 45, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 983, "col_offset": 28, "nodeName": "df1", "type": "Any"}, {"lineNumber": 983, "col_offset": 47, "nodeName": "df2", "type": "Any"}, {"lineNumber": 1016, "col_offset": 35, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1017, "col_offset": 25, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1031, "col_offset": 37, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1031, "col_offset": 57, "nodeName": "df", "type": "Any"}, {"lineNumber": 1035, "col_offset": 25, "nodeName": "ss_f", "type": "Any"}, {"lineNumber": 1037, "col_offset": 25, "nodeName": "ss_f", "type": "Any"}, {"lineNumber": 1065, "col_offset": 33, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1066, "col_offset": 35, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1079, "col_offset": 29, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1080, "col_offset": 29, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1093, "col_offset": 29, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1094, "col_offset": 29, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1106, "col_offset": 29, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1107, "col_offset": 29, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1130, "col_offset": 75, "nodeName": "self", "type": "Any"}, {"lineNumber": 1149, "col_offset": 28, "nodeName": "_np", "type": "module"}, {"lineNumber": 1154, "col_offset": 57, "nodeName": "_np", "type": "module"}, {"lineNumber": 1165, "col_offset": 28, "nodeName": "_np", "type": "module"}, {"lineNumber": 1170, "col_offset": 59, "nodeName": "_np", "type": "module"}, {"lineNumber": 1183, "col_offset": 28, "nodeName": "_np", "type": "module"}, {"lineNumber": 1196, "col_offset": 34, "nodeName": "_np", "type": "module"}, {"lineNumber": 1217, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 1249, "col_offset": 17, "nodeName": "np", "type": "Any"}, {"lineNumber": 1257, "col_offset": 33, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1265, "col_offset": 20, "nodeName": "_np", "type": "module"}, {"lineNumber": 1266, "col_offset": 23, "nodeName": "np", "type": "Any"}, {"lineNumber": 1267, "col_offset": 54, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 1267, "col_offset": 60, "nodeName": "n", "type": "Any"}, {"lineNumber": 1272, "col_offset": 20, "nodeName": "net", "type": "Any"}, {"lineNumber": 1273, "col_offset": 25, "nodeName": "net", "type": "Any"}, {"lineNumber": 1273, "col_offset": 29, "nodeName": "param", "type": "Any"}, {"lineNumber": 1274, "col_offset": 43, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1276, "col_offset": 29, "nodeName": "ss_binom", "type": "Any"}, {"lineNumber": 1278, "col_offset": 29, "nodeName": "ss_binom", "type": "Any"}, {"lineNumber": 1324, "col_offset": 30, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1339, "col_offset": 30, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1425, "col_offset": 28, "nodeName": "_np", "type": "module"}, {"lineNumber": 1441, "col_offset": 28, "nodeName": "_np", "type": "module"}, {"lineNumber": 1460, "col_offset": 28, "nodeName": "_np", "type": "module"}, {"lineNumber": 1482, "col_offset": 30, "nodeName": "_np", "type": "module"}, {"lineNumber": 1483, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 1490, "col_offset": 28, "nodeName": "_np", "type": "module"}, {"lineNumber": 1522, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 1534, "col_offset": 28, "nodeName": "_np", "type": "module"}, {"lineNumber": 1550, "col_offset": 28, "nodeName": "_np", "type": "module"}, {"lineNumber": 1572, "col_offset": 28, "nodeName": "_np", "type": "module"}, {"lineNumber": 1602, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 1614, "col_offset": 28, "nodeName": "_np", "type": "module"}, {"lineNumber": 1635, "col_offset": 28, "nodeName": "_np", "type": "module"}, {"lineNumber": 1643, "col_offset": 31, "nodeName": "_np", "type": "module"}, {"lineNumber": 1667, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 1692, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 1692, "col_offset": 40, "nodeName": "loc_shape", "type": "Union[Tuple[int], Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1693, "col_offset": 21, "nodeName": "np", "type": "Any"}, {"lineNumber": 1693, "col_offset": 39, "nodeName": "cov_shape", "type": "Union[Tuple[int], Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1697, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 1697, "col_offset": 38, "nodeName": "swapaxes", "type": "Any"}, {"lineNumber": 1698, "col_offset": 20, "nodeName": "_s", "type": "Any"}, {"lineNumber": 1698, "col_offset": 35, "nodeName": "np", "type": "Any"}, {"lineNumber": 1699, "col_offset": 37, "nodeName": "cov_type", "type": "str"}, {"lineNumber": 1702, "col_offset": 20, "nodeName": "net", "type": "Any"}, {"lineNumber": 1703, "col_offset": 21, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 1705, "col_offset": 39, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 1708, "col_offset": 23, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1709, "col_offset": 23, "nodeName": "_s", "type": "Any"}, {"lineNumber": 1715, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 1715, "col_offset": 40, "nodeName": "loc_shape", "type": "Union[Tuple[int], Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1716, "col_offset": 21, "nodeName": "np", "type": "Any"}, {"lineNumber": 1716, "col_offset": 39, "nodeName": "cov_shape", "type": "Union[Tuple[int], Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1717, "col_offset": 26, "nodeName": "np", "type": "Any"}, {"lineNumber": 1718, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 1718, "col_offset": 40, "nodeName": "np", "type": "Any"}, {"lineNumber": 1718, "col_offset": 53, "nodeName": "_s", "type": "Any"}, {"lineNumber": 1722, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 1722, "col_offset": 38, "nodeName": "swapaxes", "type": "Any"}, {"lineNumber": 1723, "col_offset": 20, "nodeName": "_s", "type": "Any"}, {"lineNumber": 1723, "col_offset": 35, "nodeName": "np", "type": "Any"}, {"lineNumber": 1724, "col_offset": 37, "nodeName": "cov_type", "type": "str"}, {"lineNumber": 1727, "col_offset": 20, "nodeName": "net", "type": "Any"}, {"lineNumber": 1729, "col_offset": 39, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1731, "col_offset": 31, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1748, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 1748, "col_offset": 40, "nodeName": "loc_shape", "type": "Union[Tuple[int], Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1749, "col_offset": 21, "nodeName": "np", "type": "Any"}, {"lineNumber": 1749, "col_offset": 39, "nodeName": "cov_shape", "type": "Union[Tuple[int], Tuple[()], Tuple[int, int]]"}, {"lineNumber": 1753, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 1753, "col_offset": 38, "nodeName": "swapaxes", "type": "Any"}, {"lineNumber": 1754, "col_offset": 20, "nodeName": "_s", "type": "Any"}, {"lineNumber": 1754, "col_offset": 35, "nodeName": "np", "type": "Any"}, {"lineNumber": 1755, "col_offset": 37, "nodeName": "cov_type", "type": "str"}, {"lineNumber": 1758, "col_offset": 20, "nodeName": "net", "type": "Any"}, {"lineNumber": 1760, "col_offset": 39, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 1762, "col_offset": 31, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1808, "col_offset": 32, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1820, "col_offset": 32, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1832, "col_offset": 32, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1850, "col_offset": 36, "nodeName": "F", "type": "Any"}, {"lineNumber": 1851, "col_offset": 36, "nodeName": "F", "type": "Any"}, {"lineNumber": 1874, "col_offset": 25, "nodeName": "ss", "type": "Any"}, {"lineNumber": 1874, "col_offset": 33, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1875, "col_offset": 33, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 1911, "col_offset": 36, "nodeName": "F", "type": "Any"}, {"lineNumber": 1912, "col_offset": 36, "nodeName": "F", "type": "Any"}, {"lineNumber": 1914, "col_offset": 16, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1914, "col_offset": 49, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1915, "col_offset": 16, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1915, "col_offset": 40, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1916, "col_offset": 16, "nodeName": "mgp", "type": "Any"}, {"lineNumber": 1937, "col_offset": 30, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 2004, "col_offset": 24, "nodeName": "np", "type": "Any"}, {"lineNumber": 2005, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 2005, "col_offset": 58, "nodeName": "full_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 2008, "col_offset": 20, "nodeName": "net", "type": "Any"}, {"lineNumber": 2066, "col_offset": 30, "nodeName": "np", "type": "Any"}, {"lineNumber": 2067, "col_offset": 32, "nodeName": "np", "type": "Any"}, {"lineNumber": 2087, "col_offset": 28, "nodeName": "np", "type": "Any"}, {"lineNumber": 2113, "col_offset": 33, "nodeName": "np", "type": "Any"}, {"lineNumber": 2114, "col_offset": 33, "nodeName": "np", "type": "Any"}, {"lineNumber": 2151, "col_offset": 45, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 2162, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 2162, "col_offset": 70, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 2162, "col_offset": 88, "nodeName": "batch_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 2173, "col_offset": 23, "nodeName": "np", "type": "Any"}, {"lineNumber": 2174, "col_offset": 23, "nodeName": "np", "type": "Any"}, {"lineNumber": 2175, "col_offset": 23, "nodeName": "np", "type": "Any"}, {"lineNumber": 2176, "col_offset": 23, "nodeName": "np", "type": "Any"}, {"lineNumber": 2180, "col_offset": 25, "nodeName": "np", "type": "Any"}, {"lineNumber": 2190, "col_offset": 23, "nodeName": "np", "type": "Any"}, {"lineNumber": 2191, "col_offset": 23, "nodeName": "np", "type": "Any"}, {"lineNumber": 2192, "col_offset": 23, "nodeName": "np", "type": "Any"}, {"lineNumber": 2193, "col_offset": 23, "nodeName": "np", "type": "Any"}, {"lineNumber": 2194, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 2195, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 2218, "col_offset": 28, "nodeName": "F", "type": "Any"}, {"lineNumber": 2218, "col_offset": 50, "nodeName": "F", "type": "Any"}, {"lineNumber": 2220, "col_offset": 27, "nodeName": "loc", "type": "Any"}, {"lineNumber": 2245, "col_offset": 28, "nodeName": "F", "type": "Any"}, {"lineNumber": 2245, "col_offset": 50, "nodeName": "F", "type": "Any"}, {"lineNumber": 2247, "col_offset": 27, "nodeName": "loc", "type": "Any"}, {"lineNumber": 2296, "col_offset": 28, "nodeName": "accumulated_loss", "type": "Any"}, {"lineNumber": 2298, "col_offset": 12, "nodeName": "accumulated_loss", "type": "Any"}, {"lineNumber": 2300, "col_offset": 12, "nodeName": "accumulated_loss", "type": "Any"}, {"lineNumber": 2302, "col_offset": 12, "nodeName": "accumulated_loss", "type": "Any"}, {"lineNumber": 2339, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 2340, "col_offset": 25, "nodeName": "randint", "type": "Any"}, {"lineNumber": 2342, "col_offset": 23, "nodeName": "np", "type": "Any"}, {"lineNumber": 2344, "col_offset": 23, "nodeName": "np", "type": "Any"}, {"lineNumber": 2346, "col_offset": 49, "nodeName": "np", "type": "Any"}, {"lineNumber": 2347, "col_offset": 47, "nodeName": "np", "type": "Any"}, {"lineNumber": 2348, "col_offset": 13, "nodeName": "randint", "type": "Any"}, {"lineNumber": 2349, "col_offset": 51, "nodeName": "np", "type": "Any"}, {"lineNumber": 2350, "col_offset": 13, "nodeName": "randint", "type": "Any"}, {"lineNumber": 2351, "col_offset": 55, "nodeName": "np", "type": "Any"}, {"lineNumber": 2352, "col_offset": 13, "nodeName": "randint", "type": "Any"}, {"lineNumber": 2353, "col_offset": 45, "nodeName": "np", "type": "Any"}, {"lineNumber": 2354, "col_offset": 47, "nodeName": "np", "type": "Any"}, {"lineNumber": 2355, "col_offset": 41, "nodeName": "np", "type": "Any"}, {"lineNumber": 2356, "col_offset": 43, "nodeName": "np", "type": "Any"}, {"lineNumber": 2358, "col_offset": 13, "nodeName": "randint", "type": "Any"}, {"lineNumber": 2360, "col_offset": 13, "nodeName": "randint", "type": "Any"}, {"lineNumber": 2361, "col_offset": 29, "nodeName": "np", "type": "Any"}, {"lineNumber": 2362, "col_offset": 13, "nodeName": "randint", "type": "Any"}, {"lineNumber": 2363, "col_offset": 31, "nodeName": "np", "type": "Any"}, {"lineNumber": 2364, "col_offset": 13, "nodeName": "randint", "type": "Any"}, {"lineNumber": 2365, "col_offset": 26, "nodeName": "np", "type": "Any"}, {"lineNumber": 2366, "col_offset": 29, "nodeName": "np", "type": "Any"}, {"lineNumber": 2367, "col_offset": 33, "nodeName": "randint", "type": "Any"}, {"lineNumber": 2369, "col_offset": 36, "nodeName": "randint", "type": "Any"}, {"lineNumber": 2371, "col_offset": 37, "nodeName": "random", "type": "Any"}, {"lineNumber": 2372, "col_offset": 41, "nodeName": "random", "type": "Any"}, {"lineNumber": 2373, "col_offset": 31, "nodeName": "np", "type": "Any"}, {"lineNumber": 2383, "col_offset": 25, "nodeName": "net", "type": "Any"}, {"lineNumber": 2383, "col_offset": 29, "nodeName": "test_sample", "type": "Any"}, {"lineNumber": 2384, "col_offset": 44, "nodeName": "test_sample", "type": "Any"}, {"lineNumber": 2415, "col_offset": 25, "nodeName": "np", "type": "Any"}, {"lineNumber": 2416, "col_offset": 27, "nodeName": "np", "type": "Any"}, {"lineNumber": 2417, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 2418, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 2419, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 2420, "col_offset": 30, "nodeName": "np", "type": "Any"}, {"lineNumber": 2421, "col_offset": 27, "nodeName": "np", "type": "Any"}, {"lineNumber": 2431, "col_offset": 20, "nodeName": "net", "type": "Any"}, {"lineNumber": 2434, "col_offset": 36, "nodeName": "constrained_out", "type": "Any"}, {"lineNumber": 2435, "col_offset": 36, "nodeName": "constraint_status", "type": "Any"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "low", "type": "Any"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "high", "type": "Any"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "low", "type": "Any"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "high", "type": "Any"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "low", "type": "Any"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "high", "type": "Any"}, {"lineNumber": 141, "col_offset": 36, "nodeName": "low", "type": "Any"}, {"lineNumber": 460, "col_offset": 31, "nodeName": "rate", "type": "Any"}, {"lineNumber": 552, "col_offset": 29, "nodeName": "n", "type": "Any"}, {"lineNumber": 552, "col_offset": 44, "nodeName": "prob", "type": "Any"}, {"lineNumber": 561, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 561, "col_offset": 50, "nodeName": "shape", "type": "Union[Tuple[int, int], Tuple[int], int, Tuple[()]]"}, {"lineNumber": 570, "col_offset": 40, "nodeName": "n", "type": "Any"}, {"lineNumber": 570, "col_offset": 59, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 600, "col_offset": 32, "nodeName": "scale", "type": "Any"}, {"lineNumber": 612, "col_offset": 32, "nodeName": "scale", "type": "Any"}, {"lineNumber": 624, "col_offset": 32, "nodeName": "scale", "type": "Any"}, {"lineNumber": 635, "col_offset": 32, "nodeName": "scale", "type": "Any"}, {"lineNumber": 663, "col_offset": 34, "nodeName": "concentration", "type": "Any"}, {"lineNumber": 664, "col_offset": 17, "nodeName": "scale", "type": "Any"}, {"lineNumber": 677, "col_offset": 34, "nodeName": "concentration", "type": "Any"}, {"lineNumber": 678, "col_offset": 17, "nodeName": "scale", "type": "Any"}, {"lineNumber": 691, "col_offset": 34, "nodeName": "concentration", "type": "Any"}, {"lineNumber": 692, "col_offset": 17, "nodeName": "scale", "type": "Any"}, {"lineNumber": 704, "col_offset": 34, "nodeName": "concentration", "type": "Any"}, {"lineNumber": 705, "col_offset": 38, "nodeName": "scale", "type": "Any"}, {"lineNumber": 733, "col_offset": 29, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 733, "col_offset": 52, "nodeName": "scale", "type": "Any"}, {"lineNumber": 747, "col_offset": 29, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 747, "col_offset": 52, "nodeName": "scale", "type": "Any"}, {"lineNumber": 761, "col_offset": 29, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 761, "col_offset": 52, "nodeName": "scale", "type": "Any"}, {"lineNumber": 774, "col_offset": 29, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 774, "col_offset": 52, "nodeName": "scale", "type": "Any"}, {"lineNumber": 802, "col_offset": 28, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 803, "col_offset": 32, "nodeName": "scale", "type": "Any"}, {"lineNumber": 871, "col_offset": 32, "nodeName": "np", "type": "Any"}, {"lineNumber": 872, "col_offset": 40, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 887, "col_offset": 44, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 891, "col_offset": 29, "nodeName": "ss_dir", "type": "Any"}, {"lineNumber": 893, "col_offset": 29, "nodeName": "ss_dir", "type": "Any"}, {"lineNumber": 969, "col_offset": 26, "nodeName": "df1", "type": "Any"}, {"lineNumber": 969, "col_offset": 45, "nodeName": "df2", "type": "Any"}, {"lineNumber": 1016, "col_offset": 35, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1017, "col_offset": 25, "nodeName": "df", "type": "Any"}, {"lineNumber": 1065, "col_offset": 33, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1066, "col_offset": 35, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1150, "col_offset": 21, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1166, "col_offset": 21, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1184, "col_offset": 21, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1257, "col_offset": 33, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1274, "col_offset": 43, "nodeName": "prob", "type": "Any"}, {"lineNumber": 1426, "col_offset": 21, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1442, "col_offset": 21, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1461, "col_offset": 21, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1483, "col_offset": 25, "nodeName": "indices", "type": "Any"}, {"lineNumber": 1491, "col_offset": 21, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1535, "col_offset": 21, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1551, "col_offset": 21, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1573, "col_offset": 21, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1615, "col_offset": 21, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1636, "col_offset": 21, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1644, "col_offset": 21, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1692, "col_offset": 53, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1693, "col_offset": 52, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1693, "col_offset": 65, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1697, "col_offset": 38, "nodeName": "np", "type": "Any"}, {"lineNumber": 1715, "col_offset": 53, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1716, "col_offset": 52, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1716, "col_offset": 65, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1722, "col_offset": 38, "nodeName": "np", "type": "Any"}, {"lineNumber": 1734, "col_offset": 28, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1734, "col_offset": 48, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1736, "col_offset": 24, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1736, "col_offset": 40, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1737, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1737, "col_offset": 44, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1738, "col_offset": 40, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1748, "col_offset": 53, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1749, "col_offset": 52, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1749, "col_offset": 65, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1753, "col_offset": 38, "nodeName": "np", "type": "Any"}, {"lineNumber": 1766, "col_offset": 24, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1766, "col_offset": 40, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1767, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1767, "col_offset": 44, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1768, "col_offset": 40, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 1874, "col_offset": 33, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1875, "col_offset": 33, "nodeName": "scale", "type": "Any"}, {"lineNumber": 1937, "col_offset": 30, "nodeName": "scale", "type": "Any"}, {"lineNumber": 2005, "col_offset": 35, "nodeName": "np", "type": "Any"}, {"lineNumber": 2162, "col_offset": 29, "nodeName": "_np", "type": "module"}, {"lineNumber": 2340, "col_offset": 25, "nodeName": "random", "type": "Any"}, {"lineNumber": 2348, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2350, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2352, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2358, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2360, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2362, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2364, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2367, "col_offset": 33, "nodeName": "random", "type": "Any"}, {"lineNumber": 2369, "col_offset": 36, "nodeName": "random", "type": "Any"}, {"lineNumber": 2371, "col_offset": 37, "nodeName": "np", "type": "Any"}, {"lineNumber": 2372, "col_offset": 41, "nodeName": "np", "type": "Any"}, {"lineNumber": 2383, "col_offset": 43, "nodeName": "constraint_arg", "type": "Union[List[Any], Tuple[()]]"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "high", "type": "Any"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "low", "type": "Any"}, {"lineNumber": 561, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 570, "col_offset": 59, "nodeName": "prob", "type": "Any"}, {"lineNumber": 872, "col_offset": 40, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 1733, "col_offset": 31, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 1734, "col_offset": 28, "nodeName": "samples", "type": "Any"}, {"lineNumber": 1736, "col_offset": 24, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1737, "col_offset": 26, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 1764, "col_offset": 31, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 1766, "col_offset": 24, "nodeName": "loc", "type": "Any"}, {"lineNumber": 1767, "col_offset": 26, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 1937, "col_offset": 53, "nodeName": "exp", "type": "Any"}, {"lineNumber": 1938, "col_offset": 12, "nodeName": "loc", "type": "Any"}, {"lineNumber": 2162, "col_offset": 55, "nodeName": "event_shape", "type": "int"}, {"lineNumber": 2340, "col_offset": 25, "nodeName": "np", "type": "Any"}, {"lineNumber": 2348, "col_offset": 13, "nodeName": "np", "type": "Any"}, {"lineNumber": 2350, "col_offset": 13, "nodeName": "np", "type": "Any"}, {"lineNumber": 2352, "col_offset": 13, "nodeName": "np", "type": "Any"}, {"lineNumber": 2358, "col_offset": 13, "nodeName": "np", "type": "Any"}, {"lineNumber": 2360, "col_offset": 13, "nodeName": "np", "type": "Any"}, {"lineNumber": 2362, "col_offset": 13, "nodeName": "np", "type": "Any"}, {"lineNumber": 2364, "col_offset": 13, "nodeName": "np", "type": "Any"}, {"lineNumber": 2367, "col_offset": 33, "nodeName": "np", "type": "Any"}, {"lineNumber": 2369, "col_offset": 36, "nodeName": "np", "type": "Any"}, {"lineNumber": 1733, "col_offset": 31, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1764, "col_offset": 31, "nodeName": "mx_out", "type": "Any"}, {"lineNumber": 1937, "col_offset": 53, "nodeName": "np", "type": "Any"}]