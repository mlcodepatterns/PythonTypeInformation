[{"lineNumber": 31, "col_offset": 0, "nodeName": "_prepare_op_inputs", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "_run_nd_operator_performance_test", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 146, "col_offset": 0, "nodeName": "run_op_benchmarks", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "no_backward", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "kwargs_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "args_list", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "inp", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "op_benchmark_result", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "op_benchmark_result", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "op_benchmark_result", "type": "List[Dict[Any, List[Any]]]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "op", "type": "Any"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "ops", "type": "Union[Any, List[Any]]"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "op_benchmark_result", "type": "List[Dict[Any, List[Any]]]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "mx_op_benchmark_results", "type": "List[Dict[Any, List[Any]]]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "mx_op_benchmark_results", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "mx_op_benchmark_results", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "args_list", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "kwargs_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 56, "col_offset": 7, "nodeName": "profiler", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "run_backward", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "args_list", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "args_list", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 46, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "args_list", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "kwargs_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "_prepare_op_inputs", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 48, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 131, "col_offset": 56, "nodeName": "run_backward", "type": "Any"}, {"lineNumber": 131, "col_offset": 70, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 131, "col_offset": 77, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "ops", "type": "List[Any]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "op", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "op_params", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "items", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "mx_op_benchmark_results", "type": "List[Dict[Any, List[Any]]]"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "cur_op_res", "type": "List[Dict[Any, List[Any]]]"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "merge_map_list", "type": "Any"}, {"lineNumber": 167, "col_offset": 45, "nodeName": "mx_op_benchmark_results", "type": "List[Dict[Any, List[Any]]]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "value", "type": "Any"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "benchmark_helper_func", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "benchmark_helper_func", "type": "Any"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "profiler", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "run_backward", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "benchmark_helper_func", "type": "Any"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "op", "type": "Any"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "benchmark_helper_func", "type": "Any"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "op", "type": "Any"}, {"lineNumber": 73, "col_offset": 41, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "op", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "idx", "type": "int"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "kwargs_list", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "profiler_output", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "idx", "type": "int"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "profiler_output", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 97, "col_offset": 46, "nodeName": "mx", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "ops", "type": "Any"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "ops", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "nd", "type": "Any"}, {"lineNumber": 138, "col_offset": 26, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "benchmark_result", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "benchmark_result", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "ops", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "prepare_op_inputs", "type": "Any"}, {"lineNumber": 151, "col_offset": 35, "nodeName": "op", "type": "Any"}, {"lineNumber": 151, "col_offset": 39, "nodeName": "op_params", "type": "Any"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "no_backward", "type": "List[str]"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "run_performance_test", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "inp", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "kwargs_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "cpp_profile", "type": "Any"}, {"lineNumber": 58, "col_offset": 48, "nodeName": "nd_forward_backward_and_profile", "type": "Any"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "cpp_profile", "type": "Any"}, {"lineNumber": 60, "col_offset": 48, "nodeName": "nd_forward_and_profile", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "benchmark_helper_func", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "benchmark_helper_func", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 73, "col_offset": 49, "nodeName": "args_list", "type": "Any"}, {"lineNumber": 77, "col_offset": 56, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "profiler_output", "type": "Any"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "benchmark_helper_func", "type": "Any"}, {"lineNumber": 80, "col_offset": 55, "nodeName": "op", "type": "Any"}, {"lineNumber": 80, "col_offset": 59, "nodeName": "runs", "type": "Any"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "merge_map_list", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 84, "col_offset": 52, "nodeName": "profiler_output", "type": "Any"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 86, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 86, "col_offset": 49, "nodeName": "args_list", "type": "Any"}, {"lineNumber": 86, "col_offset": 60, "nodeName": "kwargs_list", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "profiler_output", "type": "Any"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "benchmark_helper_func", "type": "Any"}, {"lineNumber": 87, "col_offset": 55, "nodeName": "op", "type": "Any"}, {"lineNumber": 87, "col_offset": 59, "nodeName": "runs", "type": "Any"}, {"lineNumber": 87, "col_offset": 65, "nodeName": "args", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "merge_map_list", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 91, "col_offset": 52, "nodeName": "profiler_output", "type": "Any"}, {"lineNumber": 92, "col_offset": 59, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "mx", "type": "Any"}, {"lineNumber": 138, "col_offset": 26, "nodeName": "op", "type": "Any"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "_run_nd_operator_performance_test", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 65, "nodeName": "op", "type": "Any"}, {"lineNumber": 139, "col_offset": 69, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 139, "col_offset": 77, "nodeName": "run_backward", "type": "Any"}, {"lineNumber": 139, "col_offset": 91, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 139, "col_offset": 99, "nodeName": "runs", "type": "Any"}, {"lineNumber": 139, "col_offset": 105, "nodeName": "args_list", "type": "List[Any]"}, {"lineNumber": 139, "col_offset": 116, "nodeName": "kwargs_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 139, "col_offset": 129, "nodeName": "profiler", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 141, "col_offset": 84, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "op_benchmark_result", "type": "List[Dict[Any, List[Any]]]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "op_params", "type": "Any"}, {"lineNumber": 158, "col_offset": 42, "nodeName": "op_params", "type": "Any"}, {"lineNumber": 160, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 160, "col_offset": 59, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 161, "col_offset": 51, "nodeName": "profiler", "type": "Any"}, {"lineNumber": 162, "col_offset": 49, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 163, "col_offset": 49, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 163, "col_offset": 62, "nodeName": "runs", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "key", "type": "Any"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "PARAMS_OF_TYPE_NDARRAY", "type": "List[str]"}, {"lineNumber": 39, "col_offset": 49, "nodeName": "key", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "key", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "PARAMS_OF_TYPE_NDARRAY", "type": "List[str]"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "value", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "python_profile", "type": "Any"}, {"lineNumber": 63, "col_offset": 51, "nodeName": "nd_forward_backward_and_profile", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "python_profile", "type": "Any"}, {"lineNumber": 65, "col_offset": 51, "nodeName": "nd_forward_and_profile", "type": "Any"}, {"lineNumber": 71, "col_offset": 55, "nodeName": "kwargs_list", "type": "Any"}, {"lineNumber": 73, "col_offset": 65, "nodeName": "kwargs_list", "type": "Any"}, {"lineNumber": 77, "col_offset": 56, "nodeName": "op", "type": "Any"}, {"lineNumber": 80, "col_offset": 71, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 87, "col_offset": 73, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 92, "col_offset": 59, "nodeName": "op", "type": "Any"}, {"lineNumber": 141, "col_offset": 84, "nodeName": "op", "type": "Any"}, {"lineNumber": 159, "col_offset": 55, "nodeName": "op_params", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "args_list", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "get_mx_ndarray", "type": "Any"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "get_mx_ndarray", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 83, "col_offset": 74, "nodeName": "profiler_output", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "op_benchmark_result", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 90, "col_offset": 74, "nodeName": "profiler_output", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "op_benchmark_result", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 40, "col_offset": 52, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 40, "col_offset": 67, "nodeName": "value", "type": "Any"}, {"lineNumber": 41, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 42, "col_offset": 60, "nodeName": "normal", "type": "Any"}, {"lineNumber": 43, "col_offset": 60, "nodeName": "run_backward", "type": "Any"}, {"lineNumber": 45, "col_offset": 49, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 45, "col_offset": 64, "nodeName": "value", "type": "Any"}, {"lineNumber": 46, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 47, "col_offset": 57, "nodeName": "normal", "type": "Any"}, {"lineNumber": 48, "col_offset": 57, "nodeName": "run_backward", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "key", "type": "Any"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 42, "col_offset": 60, "nodeName": "nd", "type": "Any"}, {"lineNumber": 47, "col_offset": 57, "nodeName": "nd", "type": "Any"}, {"lineNumber": 83, "col_offset": 57, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "op", "type": "Any"}, {"lineNumber": 90, "col_offset": 57, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "op", "type": "Any"}, {"lineNumber": 83, "col_offset": 64, "nodeName": "idx", "type": "int"}, {"lineNumber": 90, "col_offset": 64, "nodeName": "idx", "type": "int"}]