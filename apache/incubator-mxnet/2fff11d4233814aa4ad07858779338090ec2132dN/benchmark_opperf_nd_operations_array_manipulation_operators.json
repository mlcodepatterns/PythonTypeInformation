[{"lineNumber": 72, "col_offset": 0, "nodeName": "run_rearrange_operators_benchmarks", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "run_shape_operators_benchmarks", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "run_expanding_operators_benchmarks", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 0, "nodeName": "run_rounding_operators_benchmarks", "type": "Callable[..., Any]"}, {"lineNumber": 200, "col_offset": 0, "nodeName": "run_join_split_operators_benchmarks", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "mx_rearrange_ops", "type": "Dict[Any, Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "mx_rearrange_op_results", "type": "Dict[Any, Any]"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "mx_rearrange_op_results", "type": "Dict[Any, Any]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "mx_shape_ops", "type": "Dict[Any, Any]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "mx_shape_op_results", "type": "Dict[Any, Any]"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "mx_shape_op_results", "type": "Dict[Any, Any]"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "mx_expanding_ops", "type": "Dict[Any, Any]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "mx_expanding_op_results", "type": "Dict[Any, Any]"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "mx_expanding_op_results", "type": "Dict[Any, Any]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "mx_rounding_ops", "type": "Dict[Any, Any]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "mx_rounding_op_results", "type": "Dict[Any, Any]"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "mx_rounding_op_results", "type": "Dict[Any, Any]"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "mx_join_split_op_results", "type": "Dict[Any, Any]"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "mx_join_split_op_results", "type": "Dict[Any, Any]"}, {"lineNumber": 72, "col_offset": 43, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "get_all_rearrange_operators", "type": "Callable[[], Dict[Any, Any]]"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "run_op_benchmarks", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Dict[Any, Any]]"}, {"lineNumber": 100, "col_offset": 48, "nodeName": "mx_rearrange_ops", "type": "Dict[Any, Any]"}, {"lineNumber": 100, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 100, "col_offset": 73, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 100, "col_offset": 78, "nodeName": "profiler", "type": "Any"}, {"lineNumber": 100, "col_offset": 88, "nodeName": "int64_tensor", "type": "Any"}, {"lineNumber": 100, "col_offset": 102, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 100, "col_offset": 110, "nodeName": "runs", "type": "Any"}, {"lineNumber": 104, "col_offset": 39, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "get_all_shape_operators", "type": "Callable[[], Dict[Any, Any]]"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "run_op_benchmarks", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Dict[Any, Any]]"}, {"lineNumber": 132, "col_offset": 44, "nodeName": "mx_shape_ops", "type": "Dict[Any, Any]"}, {"lineNumber": 132, "col_offset": 58, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 132, "col_offset": 65, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 132, "col_offset": 70, "nodeName": "profiler", "type": "Any"}, {"lineNumber": 132, "col_offset": 80, "nodeName": "int64_tensor", "type": "Any"}, {"lineNumber": 132, "col_offset": 94, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 132, "col_offset": 102, "nodeName": "runs", "type": "Any"}, {"lineNumber": 136, "col_offset": 43, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "get_all_expanding_operators", "type": "Callable[[], Dict[Any, Any]]"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "run_op_benchmarks", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Dict[Any, Any]]"}, {"lineNumber": 164, "col_offset": 48, "nodeName": "mx_expanding_ops", "type": "Dict[Any, Any]"}, {"lineNumber": 164, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 164, "col_offset": 73, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 164, "col_offset": 78, "nodeName": "profiler", "type": "Any"}, {"lineNumber": 164, "col_offset": 88, "nodeName": "int64_tensor", "type": "Any"}, {"lineNumber": 164, "col_offset": 102, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 164, "col_offset": 110, "nodeName": "runs", "type": "Any"}, {"lineNumber": 168, "col_offset": 42, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "get_all_rounding_operators", "type": "Callable[[], Dict[Any, Any]]"}, {"lineNumber": 196, "col_offset": 29, "nodeName": "run_op_benchmarks", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Dict[Any, Any]]"}, {"lineNumber": 196, "col_offset": 47, "nodeName": "mx_rounding_ops", "type": "Dict[Any, Any]"}, {"lineNumber": 196, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 196, "col_offset": 71, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 196, "col_offset": 76, "nodeName": "profiler", "type": "Any"}, {"lineNumber": 196, "col_offset": 86, "nodeName": "int64_tensor", "type": "Any"}, {"lineNumber": 196, "col_offset": 100, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 196, "col_offset": 108, "nodeName": "runs", "type": "Any"}, {"lineNumber": 200, "col_offset": 44, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 226, "col_offset": 27, "nodeName": "run_performance_test", "type": "Callable[..., List[Any]]"}, {"lineNumber": 239, "col_offset": 26, "nodeName": "run_performance_test", "type": "Callable[..., List[Any]]"}, {"lineNumber": 252, "col_offset": 26, "nodeName": "run_performance_test", "type": "Callable[..., List[Any]]"}, {"lineNumber": 263, "col_offset": 31, "nodeName": "merge_map_list", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 72, "col_offset": 43, "nodeName": "mx", "type": "Any"}, {"lineNumber": 104, "col_offset": 39, "nodeName": "mx", "type": "Any"}, {"lineNumber": 136, "col_offset": 43, "nodeName": "mx", "type": "Any"}, {"lineNumber": 168, "col_offset": 42, "nodeName": "mx", "type": "Any"}, {"lineNumber": 200, "col_offset": 44, "nodeName": "mx", "type": "Any"}, {"lineNumber": 228, "col_offset": 60, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 229, "col_offset": 58, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 230, "col_offset": 63, "nodeName": "profiler", "type": "Any"}, {"lineNumber": 235, "col_offset": 61, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 236, "col_offset": 59, "nodeName": "runs", "type": "Any"}, {"lineNumber": 241, "col_offset": 60, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 242, "col_offset": 58, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 243, "col_offset": 63, "nodeName": "profiler", "type": "Any"}, {"lineNumber": 248, "col_offset": 61, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 249, "col_offset": 59, "nodeName": "runs", "type": "Any"}, {"lineNumber": 254, "col_offset": 60, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 255, "col_offset": 58, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 256, "col_offset": 63, "nodeName": "profiler", "type": "Any"}, {"lineNumber": 261, "col_offset": 61, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 262, "col_offset": 59, "nodeName": "runs", "type": "Any"}, {"lineNumber": 263, "col_offset": 91, "nodeName": "stack_benchmark_res", "type": "List[Any]"}, {"lineNumber": 226, "col_offset": 49, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 226, "col_offset": 57, "nodeName": "MX_OP_MODULE", "type": "module"}, {"lineNumber": 239, "col_offset": 48, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 239, "col_offset": 56, "nodeName": "MX_OP_MODULE", "type": "module"}, {"lineNumber": 252, "col_offset": 48, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 252, "col_offset": 56, "nodeName": "MX_OP_MODULE", "type": "module"}, {"lineNumber": 263, "col_offset": 46, "nodeName": "concat_benchmark_res", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 69, "nodeName": "split_benchmark_res", "type": "List[Any]"}, {"lineNumber": 231, "col_offset": 71, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 232, "col_offset": 71, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 233, "col_offset": 71, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 257, "col_offset": 71, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 258, "col_offset": 71, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 259, "col_offset": 71, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 231, "col_offset": 71, "nodeName": "nd", "type": "Any"}, {"lineNumber": 232, "col_offset": 71, "nodeName": "nd", "type": "Any"}, {"lineNumber": 233, "col_offset": 71, "nodeName": "nd", "type": "Any"}, {"lineNumber": 257, "col_offset": 71, "nodeName": "nd", "type": "Any"}, {"lineNumber": 258, "col_offset": 71, "nodeName": "nd", "type": "Any"}, {"lineNumber": 259, "col_offset": 71, "nodeName": "nd", "type": "Any"}]