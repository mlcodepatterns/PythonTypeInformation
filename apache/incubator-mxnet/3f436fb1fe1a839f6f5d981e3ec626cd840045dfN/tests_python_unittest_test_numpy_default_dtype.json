[{"lineNumber": 62, "col_offset": 0, "nodeName": "_add_dtype_workload_array", "type": "Callable[[], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "_add_dtype_workload_ones", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "_add_dtype_workload_zeros", "type": "Callable[[], Any]"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "_add_dtype_workload_eye", "type": "Callable[[], Any]"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "_add_dtype_workload_full", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "_add_dtype_workload_identity", "type": "Callable[[], Any]"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "_add_dtype_workload_linspace", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "_add_dtype_workload_logspace", "type": "Callable[[], Any]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "_add_dtype_workload_mean", "type": "Callable[[], Any]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "_add_dtype_workload_hanning", "type": "Callable[[], Any]"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "_add_dtype_workload_hamming", "type": "Callable[[], Any]"}, {"lineNumber": 112, "col_offset": 0, "nodeName": "_add_dtype_workload_blackman", "type": "Callable[[], Any]"}, {"lineNumber": 116, "col_offset": 0, "nodeName": "_add_dtype_workload_random_uniform", "type": "Callable[[], Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "_add_dtype_workload_random_normal", "type": "Callable[[], Any]"}, {"lineNumber": 124, "col_offset": 0, "nodeName": "_add_dtype_workload_random_gamma", "type": "Callable[[], Any]"}, {"lineNumber": 128, "col_offset": 0, "nodeName": "_add_dtype_workload_random_chisquare", "type": "Callable[[], Any]"}, {"lineNumber": 132, "col_offset": 0, "nodeName": "_add_dtype_workload_true_divide", "type": "Callable[[], Any]"}, {"lineNumber": 138, "col_offset": 0, "nodeName": "_prepare_workloads", "type": "Callable[[], Any]"}, {"lineNumber": 166, "col_offset": 0, "nodeName": "check_deepnp_default_dtype", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 0, "nodeName": "check_default_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 0, "nodeName": "test_default_float_dtype", "type": "Callable[[], Any]"}, {"lineNumber": 196, "col_offset": 0, "nodeName": "test_np_indices_default_dtype", "type": "Callable[[], Any]"}, {"lineNumber": 211, "col_offset": 0, "nodeName": "test_np_arange_default_dtype", "type": "Callable[[], Any]"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "get_workloads", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "_args", "type": "Dict[Union[str, Any], Union[List[Union[Dict[str, Union[Tuple[List[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Tuple[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[int], Dict[str, int]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Tuple[int, int], int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[float, float], Dict[str, int]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[bool, int]]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[float, float], Dict[str, int]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[bool, int]]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[float, int]]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Any], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, int], Dict[str, int]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, float, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Any, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, float], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, Any], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]]]"}, {"lineNumber": 157, "col_offset": 0, "nodeName": "_prepare_workloads", "type": "Callable[[], Any]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "op_list", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "check_np_indices_default_dtype", "type": "Callable[[], Any]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "check_deepnp_indices_default_dtype", "type": "Callable[[], Any]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "check_np_indices_default_dtype", "type": "Callable[[], Any]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "check_deepnp_indices_default_dtype", "type": "Callable[[], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "_add_dtype_workload_array", "type": "Callable[[], Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "_add_dtype_workload_ones", "type": "Callable[[], Any]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "_add_dtype_workload_zeros", "type": "Callable[[], Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "_add_dtype_workload_eye", "type": "Callable[[], Any]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "_add_dtype_workload_full", "type": "Callable[[], Any]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "_add_dtype_workload_identity", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "_add_dtype_workload_linspace", "type": "Callable[[], Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "_add_dtype_workload_logspace", "type": "Callable[[], Any]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "_add_dtype_workload_mean", "type": "Callable[[], Any]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "_add_dtype_workload_hanning", "type": "Callable[[], Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "_add_dtype_workload_hamming", "type": "Callable[[], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "_add_dtype_workload_blackman", "type": "Callable[[], Any]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "_add_dtype_workload_random_gamma", "type": "Callable[[], Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "_add_dtype_workload_random_uniform", "type": "Callable[[], Any]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "_add_dtype_workload_random_normal", "type": "Callable[[], Any]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "_add_dtype_workload_true_divide", "type": "Callable[[], Any]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "_add_dtype_workload_random_chisquare", "type": "Callable[[], Any]"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "workloads", "type": "Optional[Union[List[Union[Dict[str, Union[Tuple[List[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Tuple[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[int], Dict[str, int]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Tuple[int, int], int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[float, float], Dict[str, int]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[bool, int]]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[float, float], Dict[str, int]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[bool, int]]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[float, int]]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Any], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, int], Dict[str, int]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, float, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Any, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, float], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, Any], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]]]]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "strs", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "workload", "type": "Union[Dict[str, Union[Tuple[int, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Tuple[int, int], int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, float], Dict[str, int]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[bool, int]]]], Dict[str, Union[Tuple[List[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[float, int]]]], Dict[str, Union[Tuple[Any], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Tuple[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[int, int], Dict[str, int]]], Dict[str, Union[Tuple[int, float, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[int], Dict[str, int]]], Dict[str, Union[Tuple[Any, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, float], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, Any], Dict[nothing, nothing]]]]"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "workloads", "type": "Optional[Union[List[Union[Dict[str, Union[Tuple[int, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Tuple[int, int], int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[float, float], Dict[str, int]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[bool, int]]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[List[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[float, float], Dict[str, int]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[bool, int]]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[float, int]]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Any], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Tuple[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, int], Dict[str, int]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, float, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[int], Dict[str, int]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Any, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, float], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, Any], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]]]]"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "name", "type": "str"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "_args", "type": "Dict[Union[str, Any], Union[List[Union[Dict[str, Union[Tuple[List[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Tuple[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[int], Dict[str, int]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Tuple[int, int], int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[float, float], Dict[str, int]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[bool, int]]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[float, float], Dict[str, int]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[bool, int]]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[float, int]]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Any], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, int], Dict[str, int]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, float, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Any, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, float], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, Any], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "name", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "randint", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 133, "col_offset": 47, "nodeName": "array", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 134, "col_offset": 47, "nodeName": "array", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 135, "col_offset": 52, "nodeName": "array", "type": "Any"}, {"lineNumber": 173, "col_offset": 37, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "get_workloads", "type": "Callable[[Any], Any]"}, {"lineNumber": 174, "col_offset": 49, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "split", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "workloads", "type": "Optional[Union[List[Union[Dict[str, Union[Tuple[int, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Tuple[int, int], int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[float, float], Dict[str, int]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[bool, int]]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[List[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[float, float], Dict[str, int]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[bool, int]]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[float, int]]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Any], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Tuple[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, int], Dict[str, int]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, float, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[int], Dict[str, int]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Any, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, float], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, Any], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]]]]"}, {"lineNumber": 182, "col_offset": 38, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 184, "col_offset": 82, "nodeName": "name", "type": "Any"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "system", "type": "Callable[[], str]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "check_default_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "_NUMPY_DTYPE_DEFAULT_FUNC_LIST", "type": "List[str]"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "system", "type": "Callable[[], str]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "check_deepnp_indices_default_dtype", "type": "Callable[[], Any]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "check_np_indices_default_dtype", "type": "Any"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "system", "type": "Callable[[], str]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "check_deepnp_indices_default_dtype", "type": "Callable[[], Any]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "check_np_indices_default_dtype", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "_args", "type": "Dict[Union[str, Any], Union[List[Union[Dict[str, Union[Tuple[List[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Tuple[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[int], Dict[str, int]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Tuple[int, int], int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[float, float], Dict[str, int]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[bool, int]]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[float, float], Dict[str, int]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[bool, int]]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[float, int]]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Any], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, int], Dict[str, int]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, float, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Any, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, float], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, Any], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]]]"}, {"lineNumber": 34, "col_offset": 51, "nodeName": "args", "type": "Tuple[List[int]]"}, {"lineNumber": 34, "col_offset": 67, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "_args", "type": "Dict[Union[str, Any], Union[List[Union[Dict[str, Union[Tuple[List[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Tuple[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[int], Dict[str, int]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Tuple[int, int], int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[float, float], Dict[str, int]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[bool, int]]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[float, float], Dict[str, int]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[bool, int]]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[float, int]]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Any], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, int], Dict[str, int]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, float, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Any, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, float], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, Any], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]]]"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "random", "type": "Any"}, {"lineNumber": 133, "col_offset": 47, "nodeName": "np", "type": "Any"}, {"lineNumber": 133, "col_offset": 69, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 134, "col_offset": 47, "nodeName": "np", "type": "Any"}, {"lineNumber": 134, "col_offset": 69, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 135, "col_offset": 52, "nodeName": "np", "type": "Any"}, {"lineNumber": 135, "col_offset": 74, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "strs", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "np", "type": "Any"}, {"lineNumber": 177, "col_offset": 29, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "check_np_default_dtype", "type": "Any"}, {"lineNumber": 186, "col_offset": 35, "nodeName": "op", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "check_deepnp_default_dtype", "type": "Any"}, {"lineNumber": 187, "col_offset": 39, "nodeName": "op", "type": "Any"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "platform", "type": "module"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "platform", "type": "module"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 205, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "platform", "type": "module"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "name", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "_args", "type": "Dict[Union[str, Any], Union[List[Union[Dict[str, Union[Tuple[List[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Tuple[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[int], Dict[str, int]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Tuple[int, int], int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[float, float], Dict[str, int]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[bool, int]]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[float, float], Dict[str, int]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[bool, int]]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[float, int]]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Any], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, int], Dict[str, int]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, float, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[Any, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, float], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, Any], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Union[Dict[str, Union[Tuple[int, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]], List[Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]]]]"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "np", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "strs", "type": "Any"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "name", "type": "str"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "np", "type": "Any"}, {"lineNumber": 179, "col_offset": 47, "nodeName": "strs", "type": "Any"}, {"lineNumber": 186, "col_offset": 40, "nodeName": "workload", "type": "Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Tuple[int, int], int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Tuple[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[int, int], Dict[str, int]]], Dict[str, Union[Tuple[int, float, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, float], Dict[str, int]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[bool, int]]]], Dict[str, Union[Tuple[int], Dict[str, int]]], Dict[str, Union[Tuple[List[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, float], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, Any], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[float, int]]]], Dict[str, Union[Tuple[int, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any], Dict[nothing, nothing]]]]"}, {"lineNumber": 186, "col_offset": 60, "nodeName": "workload", "type": "Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Tuple[int, int], int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Tuple[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[int, int], Dict[str, int]]], Dict[str, Union[Tuple[int, float, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, float], Dict[str, int]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[bool, int]]]], Dict[str, Union[Tuple[int], Dict[str, int]]], Dict[str, Union[Tuple[List[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, float], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, Any], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[float, int]]]], Dict[str, Union[Tuple[int, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any], Dict[nothing, nothing]]]]"}, {"lineNumber": 187, "col_offset": 44, "nodeName": "workload", "type": "Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Tuple[int, int], int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Tuple[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[int, int], Dict[str, int]]], Dict[str, Union[Tuple[int, float, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, float], Dict[str, int]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[bool, int]]]], Dict[str, Union[Tuple[int], Dict[str, int]]], Dict[str, Union[Tuple[List[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, float], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, Any], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[float, int]]]], Dict[str, Union[Tuple[int, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any], Dict[nothing, nothing]]]]"}, {"lineNumber": 187, "col_offset": 64, "nodeName": "workload", "type": "Union[Dict[str, Union[Tuple[int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Tuple[int, int], int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Tuple[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[int, int], Dict[str, int]]], Dict[str, Union[Tuple[int, float, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, float], Dict[str, int]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[bool, int]]]], Dict[str, Union[Tuple[int], Dict[str, int]]], Dict[str, Union[Tuple[List[int]], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any, float], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, Any], Dict[nothing, nothing]]], Dict[str, Union[Tuple[float, float], Dict[str, Union[float, int]]]], Dict[str, Union[Tuple[int, int], Dict[nothing, nothing]]], Dict[str, Union[Tuple[Any], Dict[nothing, nothing]]]]"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "indices", "type": "Any"}, {"lineNumber": 205, "col_offset": 19, "nodeName": "indices", "type": "Any"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "arange", "type": "Any"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "arange", "type": "Any"}, {"lineNumber": 179, "col_offset": 37, "nodeName": "strs", "type": "Any"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 205, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "np", "type": "Any"}]