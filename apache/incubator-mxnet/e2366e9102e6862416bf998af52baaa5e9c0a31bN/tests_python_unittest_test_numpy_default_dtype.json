[{"lineNumber": 63, "col_offset": 0, "nodeName": "_add_dtype_workload_array", "type": "Callable[[], Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "_add_dtype_workload_ones", "type": "Callable[[], Any]"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "_add_dtype_workload_zeros", "type": "Callable[[], Any]"}, {"lineNumber": 77, "col_offset": 0, "nodeName": "_add_dtype_workload_eye", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "_add_dtype_workload_full", "type": "Callable[[], Any]"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "_add_dtype_workload_identity", "type": "Callable[[], Any]"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "_add_dtype_workload_linspace", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "_add_dtype_workload_logspace", "type": "Callable[[], Any]"}, {"lineNumber": 101, "col_offset": 0, "nodeName": "_add_dtype_workload_mean", "type": "Callable[[], Any]"}, {"lineNumber": 105, "col_offset": 0, "nodeName": "_add_dtype_workload_hanning", "type": "Callable[[], Any]"}, {"lineNumber": 109, "col_offset": 0, "nodeName": "_add_dtype_workload_hamming", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "_add_dtype_workload_blackman", "type": "Callable[[], Any]"}, {"lineNumber": 117, "col_offset": 0, "nodeName": "_add_dtype_workload_random_uniform", "type": "Callable[[], Any]"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "_add_dtype_workload_random_normal", "type": "Callable[[], Any]"}, {"lineNumber": 125, "col_offset": 0, "nodeName": "_add_dtype_workload_random_gamma", "type": "Callable[[], Any]"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "_add_dtype_workload_random_chisquare", "type": "Callable[[], Any]"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "_add_dtype_workload_true_divide", "type": "Callable[[], Any]"}, {"lineNumber": 139, "col_offset": 0, "nodeName": "_prepare_workloads", "type": "Callable[[], Any]"}, {"lineNumber": 167, "col_offset": 0, "nodeName": "check_deepnp_default_dtype", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 0, "nodeName": "check_default_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 0, "nodeName": "test_default_float_dtype", "type": "Callable[[], Any]"}, {"lineNumber": 198, "col_offset": 0, "nodeName": "test_np_indices_default_dtype", "type": "Callable[[], Any]"}, {"lineNumber": 213, "col_offset": 0, "nodeName": "test_np_arange_default_dtype", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "_args", "type": "Dict[Union[str, Any], Union[List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[List[int]]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int]]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[str, int], Tuple[int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int, int], int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, bool]], Tuple[float, float]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, bool]], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, float]], Tuple[float, float]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Any]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[int, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int, float, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Any, int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any, float]]], Dict[str, Union[Dict[nothing, nothing], Tuple[float, Any]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]]]"}, {"lineNumber": 158, "col_offset": 0, "nodeName": "_prepare_workloads", "type": "Callable[[], Any]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "op_list", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "add_workload", "type": "Callable[..., Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "_add_dtype_workload_array", "type": "Callable[[], Any]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "_add_dtype_workload_ones", "type": "Callable[[], Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "_add_dtype_workload_zeros", "type": "Callable[[], Any]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "_add_dtype_workload_eye", "type": "Callable[[], Any]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "_add_dtype_workload_full", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "_add_dtype_workload_identity", "type": "Callable[[], Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "_add_dtype_workload_linspace", "type": "Callable[[], Any]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "_add_dtype_workload_logspace", "type": "Callable[[], Any]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "_add_dtype_workload_mean", "type": "Callable[[], Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "_add_dtype_workload_hanning", "type": "Callable[[], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "_add_dtype_workload_hamming", "type": "Callable[[], Any]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "_add_dtype_workload_blackman", "type": "Callable[[], Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "_add_dtype_workload_random_gamma", "type": "Callable[[], Any]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "_add_dtype_workload_random_uniform", "type": "Callable[[], Any]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "_add_dtype_workload_random_normal", "type": "Callable[[], Any]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "_add_dtype_workload_true_divide", "type": "Callable[[], Any]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "_add_dtype_workload_random_chisquare", "type": "Callable[[], Any]"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "workloads", "type": "Optional[Union[List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[List[int]]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int]]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[str, int], Tuple[int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int, int], int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, bool]], Tuple[float, float]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, bool]], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, float]], Tuple[float, float]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Any]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[int, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int, float, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Any, int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any, float]]], Dict[str, Union[Dict[nothing, nothing], Tuple[float, Any]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]]]]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "strs", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "workload", "type": "Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int, float, int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any, int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any, float]]], Dict[str, Union[Dict[nothing, nothing], Tuple[float, Any]]], Dict[str, Union[Dict[nothing, nothing], Tuple[List[int]]]], Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int]]]], Dict[str, Union[Dict[nothing, nothing], Tuple[int, int]]], Dict[str, Union[Dict[str, int], Tuple[int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int, int], int]]], Dict[str, Union[Dict[str, int], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, bool]], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, float]], Tuple[float, float]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any]]], Dict[str, Union[Dict[str, int], Tuple[int, int]]]]"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "workloads", "type": "Optional[Union[List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int, float, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Any, int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any, float]]], Dict[str, Union[Dict[nothing, nothing], Tuple[float, Any]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[List[int]]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int]]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[str, int], Tuple[int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int, int], int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, bool]], Tuple[float, float]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, bool]], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, float]], Tuple[float, float]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Any]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[int, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]]]]"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "name", "type": "str"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "_args", "type": "Dict[Union[str, Any], Union[List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[List[int]]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int]]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[str, int], Tuple[int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int, int], int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, bool]], Tuple[float, float]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, bool]], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, float]], Tuple[float, float]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Any]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[int, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int, float, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Any, int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any, float]]], Dict[str, Union[Dict[nothing, nothing], Tuple[float, Any]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "name", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "randint", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 134, "col_offset": 47, "nodeName": "array", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 135, "col_offset": 47, "nodeName": "array", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 136, "col_offset": 52, "nodeName": "array", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 37, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "get_workloads", "type": "Callable[[Any], Any]"}, {"lineNumber": 175, "col_offset": 49, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "split", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "workloads", "type": "Optional[Union[List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int, float, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Any, int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any, float]]], Dict[str, Union[Dict[nothing, nothing], Tuple[float, Any]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[List[int]]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int]]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[str, int], Tuple[int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int, int], int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, bool]], Tuple[float, float]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, bool]], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, float]], Tuple[float, float]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Any]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[int, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]]]]"}, {"lineNumber": 183, "col_offset": 38, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 185, "col_offset": 82, "nodeName": "name", "type": "Any"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "system", "type": "Callable[[], str]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "check_default_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 28, "nodeName": "_NUMPY_DTYPE_DEFAULT_FUNC_LIST", "type": "List[str]"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "system", "type": "Callable[[], str]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "check_deepnp_indices_default_dtype", "type": "Callable[[], Any]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "check_np_indices_default_dtype", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "system", "type": "Callable[[], str]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "check_deepnp_indices_default_dtype", "type": "Callable[[], Any]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "check_np_indices_default_dtype", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "_args", "type": "Dict[Union[str, Any], Union[List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[List[int]]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int]]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[str, int], Tuple[int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int, int], int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, bool]], Tuple[float, float]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, bool]], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, float]], Tuple[float, float]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Any]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[int, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int, float, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Any, int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any, float]]], Dict[str, Union[Dict[nothing, nothing], Tuple[float, Any]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]]]"}, {"lineNumber": 35, "col_offset": 51, "nodeName": "args", "type": "Tuple[List[int]]"}, {"lineNumber": 35, "col_offset": 67, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "_args", "type": "Dict[Union[str, Any], Union[List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[List[int]]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int]]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[str, int], Tuple[int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int, int], int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, bool]], Tuple[float, float]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, bool]], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, float]], Tuple[float, float]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Any]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[int, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int, float, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Any, int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any, float]]], Dict[str, Union[Dict[nothing, nothing], Tuple[float, Any]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]]]"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "random", "type": "Any"}, {"lineNumber": 134, "col_offset": 47, "nodeName": "np", "type": "Any"}, {"lineNumber": 134, "col_offset": 69, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 135, "col_offset": 47, "nodeName": "np", "type": "Any"}, {"lineNumber": 135, "col_offset": 69, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 136, "col_offset": 52, "nodeName": "np", "type": "Any"}, {"lineNumber": 136, "col_offset": 74, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "strs", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "np", "type": "Any"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "op_name", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "check_np_default_dtype", "type": "Any"}, {"lineNumber": 187, "col_offset": 35, "nodeName": "op", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "check_deepnp_default_dtype", "type": "Any"}, {"lineNumber": 188, "col_offset": 39, "nodeName": "op", "type": "Any"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "platform", "type": "module"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "platform", "type": "module"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "platform", "type": "module"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 34, "col_offset": 33, "nodeName": "name", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "_args", "type": "Dict[Union[str, Any], Union[List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[List[int]]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int]]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[str, int], Tuple[int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int, int], int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, bool]], Tuple[float, float]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, bool]], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, float]], Tuple[float, float]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Any]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[str, int], Tuple[int, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int, float, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Any, int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any, float]]], Dict[str, Union[Dict[nothing, nothing], Tuple[float, Any]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Union[Dict[str, Union[Dict[nothing, nothing], Tuple[int, int]]], Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]], List[Dict[str, Union[Dict[str, Any], Tuple[Any, ...]]]]]]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "np", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "strs", "type": "Any"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "DtypeOpArgMngr", "type": "Type[DtypeOpArgMngr]"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "name", "type": "str"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "np", "type": "Any"}, {"lineNumber": 180, "col_offset": 47, "nodeName": "strs", "type": "Any"}, {"lineNumber": 187, "col_offset": 40, "nodeName": "workload", "type": "Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int]]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any]]], Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[str, int], Tuple[int, int]]], Dict[str, Union[Dict[str, int], Tuple[int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[int, float, int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int, int], int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any, int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any, float]]], Dict[str, Union[Dict[nothing, nothing], Tuple[float, Any]]], Dict[str, Union[Dict[nothing, nothing], Tuple[List[int]]]], Dict[str, Union[Dict[str, int], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, bool]], Tuple[float, float]]], Dict[str, Union[Dict[nothing, nothing], Tuple[int, int]]], Dict[str, Union[Dict[str, Union[int, float]], Tuple[float, float]]]]"}, {"lineNumber": 187, "col_offset": 60, "nodeName": "workload", "type": "Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int]]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any]]], Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[str, int], Tuple[int, int]]], Dict[str, Union[Dict[str, int], Tuple[int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[int, float, int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int, int], int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any, int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any, float]]], Dict[str, Union[Dict[nothing, nothing], Tuple[float, Any]]], Dict[str, Union[Dict[nothing, nothing], Tuple[List[int]]]], Dict[str, Union[Dict[str, int], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, bool]], Tuple[float, float]]], Dict[str, Union[Dict[nothing, nothing], Tuple[int, int]]], Dict[str, Union[Dict[str, Union[int, float]], Tuple[float, float]]]]"}, {"lineNumber": 188, "col_offset": 44, "nodeName": "workload", "type": "Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int]]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any]]], Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[str, int], Tuple[int, int]]], Dict[str, Union[Dict[str, int], Tuple[int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[int, float, int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int, int], int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any, int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any, float]]], Dict[str, Union[Dict[nothing, nothing], Tuple[float, Any]]], Dict[str, Union[Dict[nothing, nothing], Tuple[List[int]]]], Dict[str, Union[Dict[str, int], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, bool]], Tuple[float, float]]], Dict[str, Union[Dict[nothing, nothing], Tuple[int, int]]], Dict[str, Union[Dict[str, Union[int, float]], Tuple[float, float]]]]"}, {"lineNumber": 188, "col_offset": 64, "nodeName": "workload", "type": "Union[Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int]]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any]]], Dict[str, Union[Dict[nothing, nothing], Tuple[int]]], Dict[str, Union[Dict[str, int], Tuple[int, int]]], Dict[str, Union[Dict[str, int], Tuple[int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[int, float, int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Tuple[int, int], int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any, int]]], Dict[str, Union[Dict[nothing, nothing], Tuple[Any, float]]], Dict[str, Union[Dict[nothing, nothing], Tuple[float, Any]]], Dict[str, Union[Dict[nothing, nothing], Tuple[List[int]]]], Dict[str, Union[Dict[str, int], Tuple[float, float]]], Dict[str, Union[Dict[str, Union[int, bool]], Tuple[float, float]]], Dict[str, Union[Dict[nothing, nothing], Tuple[int, int]]], Dict[str, Union[Dict[str, Union[int, float]], Tuple[float, float]]]]"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "indices", "type": "Any"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "indices", "type": "Any"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "arange", "type": "Any"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "arange", "type": "Any"}, {"lineNumber": 180, "col_offset": 37, "nodeName": "strs", "type": "Any"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "np", "type": "Any"}]