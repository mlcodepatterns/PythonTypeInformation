[{"lineNumber": 30, "col_offset": 0, "nodeName": "test_learning_rate", "type": "Callable[[], Any]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "test_learning_rate_expect_user_warning", "type": "Callable[[], Any]"}, {"lineNumber": 324, "col_offset": 0, "nodeName": "test_sgld", "type": "Callable[[], Any]"}, {"lineNumber": 836, "col_offset": 0, "nodeName": "test_adagrad", "type": "Callable[[], Any]"}, {"lineNumber": 882, "col_offset": 0, "nodeName": "test_adadelta", "type": "Callable[[], Any]"}, {"lineNumber": 903, "col_offset": 0, "nodeName": "test_dcasgd", "type": "Callable[[], Any]"}, {"lineNumber": 924, "col_offset": 0, "nodeName": "test_factor_scheduler", "type": "Callable[[], Any]"}, {"lineNumber": 939, "col_offset": 0, "nodeName": "test_multifactor_scheduler", "type": "Callable[[], Any]"}, {"lineNumber": 955, "col_offset": 0, "nodeName": "test_poly_scheduler", "type": "Callable[[], Any]"}, {"lineNumber": 970, "col_offset": 0, "nodeName": "test_cosine_scheduler", "type": "Callable[[], Any]"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 378, "col_offset": 19, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 612, "col_offset": 19, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 769, "col_offset": 22, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "o1", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "lr_s", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "o2", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "base_lr", "type": "float"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "lr_s", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "o3", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "lr_s", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "o", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "opt1", "type": "Type[PySparseSGD]"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "PySparseSGD", "type": "Type[PySparseSGD]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "NAG", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "NAG", "type": "Any"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "LARS", "type": "Any"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "LARS", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "eta_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "mom_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "LAMB", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 267, "col_offset": 11, "nodeName": "LAMB", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "bc_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "lb_options", "type": "List[Union[Dict[str, None], Dict[str, float]]]"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "ub_options", "type": "List[Union[Dict[str, None], Dict[str, int]]]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 297, "col_offset": 11, "nodeName": "LANS", "type": "Any"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 298, "col_offset": 11, "nodeName": "LANS", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "lb_options", "type": "List[Union[Dict[str, None], Dict[str, float]]]"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "ub_options", "type": "List[Union[Dict[str, None], Dict[str, int]]]"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 326, "col_offset": 11, "nodeName": "SGLD", "type": "Any"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 327, "col_offset": 11, "nodeName": "SGLD", "type": "Any"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "ns_options", "type": "List[int]"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "seed", "type": "int"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "ns_options", "type": "List[int]"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 353, "col_offset": 11, "nodeName": "FTML", "type": "Any"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 354, "col_offset": 11, "nodeName": "FTML", "type": "Any"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 378, "col_offset": 19, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 454, "col_offset": 11, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 455, "col_offset": 11, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "opt1", "type": "Type[PySparseAdam]"}, {"lineNumber": 481, "col_offset": 11, "nodeName": "PySparseAdam", "type": "Type[PySparseAdam]"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 482, "col_offset": 11, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 526, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 526, "col_offset": 11, "nodeName": "Adamax", "type": "Any"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 527, "col_offset": 11, "nodeName": "Adamax", "type": "Any"}, {"lineNumber": 528, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 550, "col_offset": 11, "nodeName": "Signum", "type": "Any"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 551, "col_offset": 11, "nodeName": "Signum", "type": "Any"}, {"lineNumber": 552, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 555, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 556, "col_offset": 4, "nodeName": "wd_lh_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "lr_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 579, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "RMSProp", "type": "Any"}, {"lineNumber": 580, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 580, "col_offset": 11, "nodeName": "RMSProp", "type": "Any"}, {"lineNumber": 581, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 582, "col_offset": 4, "nodeName": "rho_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 584, "col_offset": 4, "nodeName": "cw_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "center_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 586, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 588, "col_offset": 4, "nodeName": "mom_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 589, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 612, "col_offset": 19, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 692, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 692, "col_offset": 11, "nodeName": "Ftrl", "type": "Any"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 693, "col_offset": 11, "nodeName": "Ftrl", "type": "Any"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 695, "col_offset": 4, "nodeName": "lamda1_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 698, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 699, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 719, "col_offset": 4, "nodeName": "opt1", "type": "Type[PySparseFtrl]"}, {"lineNumber": 719, "col_offset": 11, "nodeName": "PySparseFtrl", "type": "Type[PySparseFtrl]"}, {"lineNumber": 720, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 720, "col_offset": 11, "nodeName": "Ftrl", "type": "Any"}, {"lineNumber": 721, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 722, "col_offset": 4, "nodeName": "lamda1_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 723, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 724, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 725, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 726, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 746, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 746, "col_offset": 11, "nodeName": "Nadam", "type": "Any"}, {"lineNumber": 747, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 747, "col_offset": 11, "nodeName": "Nadam", "type": "Any"}, {"lineNumber": 748, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 749, "col_offset": 4, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 750, "col_offset": 4, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 751, "col_offset": 4, "nodeName": "schedule_decay_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 752, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 753, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 754, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 755, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 758, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 769, "col_offset": 22, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 838, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 838, "col_offset": 11, "nodeName": "AdaGrad", "type": "Any"}, {"lineNumber": 839, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 839, "col_offset": 11, "nodeName": "AdaGrad", "type": "Any"}, {"lineNumber": 840, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 841, "col_offset": 4, "nodeName": "eps_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 842, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 843, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 844, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 847, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "opt1", "type": "Type[PySparseAdaGrad]"}, {"lineNumber": 860, "col_offset": 11, "nodeName": "PySparseAdaGrad", "type": "Type[PySparseAdaGrad]"}, {"lineNumber": 861, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 861, "col_offset": 11, "nodeName": "AdaGrad", "type": "Any"}, {"lineNumber": 862, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 863, "col_offset": 4, "nodeName": "eps_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 864, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 865, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 866, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 869, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 884, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 884, "col_offset": 11, "nodeName": "AdaDelta", "type": "Any"}, {"lineNumber": 885, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 885, "col_offset": 11, "nodeName": "AdaDelta", "type": "Any"}, {"lineNumber": 886, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 887, "col_offset": 4, "nodeName": "rho_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "eps_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 889, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 890, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 891, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 894, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 905, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 905, "col_offset": 11, "nodeName": "DCASGD", "type": "Any"}, {"lineNumber": 906, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 906, "col_offset": 11, "nodeName": "DCASGD", "type": "Any"}, {"lineNumber": 907, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 908, "col_offset": 4, "nodeName": "lamda_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 909, "col_offset": 4, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 910, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 911, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 912, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 915, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 925, "col_offset": 4, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 926, "col_offset": 4, "nodeName": "step", "type": "int"}, {"lineNumber": 927, "col_offset": 4, "nodeName": "factor", "type": "float"}, {"lineNumber": 940, "col_offset": 4, "nodeName": "base_lr", "type": "float"}, {"lineNumber": 941, "col_offset": 4, "nodeName": "steps", "type": "List[int]"}, {"lineNumber": 942, "col_offset": 4, "nodeName": "factor", "type": "float"}, {"lineNumber": 956, "col_offset": 4, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 957, "col_offset": 4, "nodeName": "final_lr", "type": "int"}, {"lineNumber": 958, "col_offset": 4, "nodeName": "steps", "type": "int"}, {"lineNumber": 972, "col_offset": 4, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 973, "col_offset": 4, "nodeName": "final_lr", "type": "float"}, {"lineNumber": 974, "col_offset": 4, "nodeName": "steps", "type": "int"}, {"lineNumber": 975, "col_offset": 4, "nodeName": "cosine_sched", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "set_learning_rate", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "FactorScheduler", "type": "Any"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "FactorScheduler", "type": "Any"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "FactorScheduler", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "mx", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "momentum", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "momentum", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "float32", "type": "Any"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "float32", "type": "Any"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 251, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 251, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 267, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 281, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 281, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 297, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 298, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 311, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 311, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 326, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 327, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 353, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 354, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 365, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 365, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 378, "col_offset": 19, "nodeName": "mx", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 383, "col_offset": 21, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 384, "col_offset": 21, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 385, "col_offset": 23, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "lazy_update", "type": "Any"}, {"lineNumber": 386, "col_offset": 27, "nodeName": "lazy_update", "type": "Any"}, {"lineNumber": 454, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 455, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 465, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 465, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 482, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 492, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 492, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 526, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 527, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 537, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 537, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 550, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 551, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 562, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 562, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 580, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 592, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 592, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 612, "col_offset": 19, "nodeName": "mx", "type": "Any"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "lamda1", "type": "Any"}, {"lineNumber": 633, "col_offset": 22, "nodeName": "lamda1", "type": "Any"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "beta", "type": "Any"}, {"lineNumber": 634, "col_offset": 20, "nodeName": "beta", "type": "Any"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 635, "col_offset": 18, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 692, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 693, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 702, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 702, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 720, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 729, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 729, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 746, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 747, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 758, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 758, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 769, "col_offset": 22, "nodeName": "mx", "type": "Any"}, {"lineNumber": 790, "col_offset": 8, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 790, "col_offset": 23, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 838, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 839, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 847, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 847, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 861, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 869, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 869, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 884, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 885, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 894, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 894, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 905, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 906, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 915, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 915, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 928, "col_offset": 12, "nodeName": "FactorScheduler", "type": "Any"}, {"lineNumber": 928, "col_offset": 44, "nodeName": "step", "type": "int"}, {"lineNumber": 928, "col_offset": 50, "nodeName": "factor", "type": "float"}, {"lineNumber": 932, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 933, "col_offset": 25, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 933, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 934, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 935, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 936, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 943, "col_offset": 12, "nodeName": "MultiFactorScheduler", "type": "Any"}, {"lineNumber": 943, "col_offset": 49, "nodeName": "steps", "type": "List[int]"}, {"lineNumber": 943, "col_offset": 56, "nodeName": "factor", "type": "float"}, {"lineNumber": 947, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 948, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 948, "col_offset": 46, "nodeName": "base_lr", "type": "float"}, {"lineNumber": 949, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 950, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 951, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 952, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 959, "col_offset": 17, "nodeName": "PolyScheduler", "type": "Any"}, {"lineNumber": 959, "col_offset": 47, "nodeName": "steps", "type": "int"}, {"lineNumber": 962, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 963, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 964, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 964, "col_offset": 52, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 967, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 967, "col_offset": 54, "nodeName": "final_lr", "type": "int"}, {"lineNumber": 975, "col_offset": 19, "nodeName": "CosineScheduler", "type": "Any"}, {"lineNumber": 975, "col_offset": 51, "nodeName": "steps", "type": "int"}, {"lineNumber": 976, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 976, "col_offset": 52, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 977, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 977, "col_offset": 56, "nodeName": "final_lr", "type": "float"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "o1", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "o1", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 37, "col_offset": 45, "nodeName": "lr_s", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "o2", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "o2", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "o2", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 43, "col_offset": 45, "nodeName": "lr_s", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "o3", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "lr_s", "type": "Any"}, {"lineNumber": 52, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "set_learning_rate", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 68, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 71, "col_offset": 53, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 71, "col_offset": 65, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 72, "col_offset": 40, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 72, "col_offset": 52, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 72, "col_offset": 64, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "momentum", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "weight", "type": "Any"}, {"lineNumber": 129, "col_offset": 27, "nodeName": "grad", "type": "Any"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "state", "type": "Any"}, {"lineNumber": 129, "col_offset": 42, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 129, "col_offset": 46, "nodeName": "indices", "type": "Any"}, {"lineNumber": 129, "col_offset": 55, "nodeName": "weights", "type": "Any"}, {"lineNumber": 129, "col_offset": 64, "nodeName": "grads", "type": "Any"}, {"lineNumber": 129, "col_offset": 71, "nodeName": "states", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "lr", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "wd", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "num_rows", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 173, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 175, "col_offset": 40, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 175, "col_offset": 53, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 175, "col_offset": 65, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 176, "col_offset": 40, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 176, "col_offset": 52, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 197, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 200, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 200, "col_offset": 40, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 200, "col_offset": 53, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 200, "col_offset": 65, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 201, "col_offset": 40, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 201, "col_offset": 52, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 223, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 226, "col_offset": 40, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 226, "col_offset": 53, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 226, "col_offset": 65, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 227, "col_offset": 40, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 227, "col_offset": 52, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 227, "col_offset": 64, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 250, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 251, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 251, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 252, "col_offset": 40, "nodeName": "eta_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 252, "col_offset": 53, "nodeName": "mom_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 252, "col_offset": 66, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 252, "col_offset": 78, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 253, "col_offset": 40, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 253, "col_offset": 52, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 253, "col_offset": 64, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 267, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 281, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 281, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 282, "col_offset": 40, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 282, "col_offset": 55, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 282, "col_offset": 70, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 282, "col_offset": 82, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 283, "col_offset": 40, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 283, "col_offset": 52, "nodeName": "bc_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 283, "col_offset": 64, "nodeName": "lb_options", "type": "List[Union[Dict[str, None], Dict[str, float]]]"}, {"lineNumber": 283, "col_offset": 76, "nodeName": "ub_options", "type": "List[Union[Dict[str, None], Dict[str, int]]]"}, {"lineNumber": 284, "col_offset": 40, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 284, "col_offset": 52, "nodeName": "agg_options", "type": "List[Dict[str, int]]"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 297, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 298, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 311, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 311, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 312, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 312, "col_offset": 40, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 312, "col_offset": 55, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 312, "col_offset": 70, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 312, "col_offset": 82, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 313, "col_offset": 40, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 313, "col_offset": 52, "nodeName": "lb_options", "type": "List[Union[Dict[str, None], Dict[str, float]]]"}, {"lineNumber": 313, "col_offset": 64, "nodeName": "ub_options", "type": "List[Union[Dict[str, None], Dict[str, int]]]"}, {"lineNumber": 314, "col_offset": 40, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 314, "col_offset": 52, "nodeName": "agg_options", "type": "List[Dict[str, int]]"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 326, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 327, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 334, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 337, "col_offset": 22, "nodeName": "float16", "type": "Any"}, {"lineNumber": 337, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "params", "type": "Union[Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]]]"}, {"lineNumber": 353, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 354, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 363, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 365, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 365, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 366, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 366, "col_offset": 40, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 366, "col_offset": 55, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 366, "col_offset": 70, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 367, "col_offset": 40, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 367, "col_offset": 52, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 367, "col_offset": 64, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 367, "col_offset": 76, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 416, "col_offset": 19, "nodeName": "weight", "type": "Any"}, {"lineNumber": 416, "col_offset": 27, "nodeName": "grad", "type": "Any"}, {"lineNumber": 416, "col_offset": 33, "nodeName": "state", "type": "Any"}, {"lineNumber": 416, "col_offset": 42, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 416, "col_offset": 46, "nodeName": "indices", "type": "Any"}, {"lineNumber": 416, "col_offset": 55, "nodeName": "weights", "type": "Any"}, {"lineNumber": 416, "col_offset": 64, "nodeName": "grads", "type": "Any"}, {"lineNumber": 416, "col_offset": 71, "nodeName": "states", "type": "Any"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "lr", "type": "Any"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "wd", "type": "Any"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 422, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "num_rows", "type": "Any"}, {"lineNumber": 425, "col_offset": 12, "nodeName": "coef1", "type": "Any"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "coef2", "type": "Any"}, {"lineNumber": 427, "col_offset": 12, "nodeName": "lr", "type": "Any"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "row", "type": "int"}, {"lineNumber": 454, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 455, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 464, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 465, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 465, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 466, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 466, "col_offset": 40, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 466, "col_offset": 55, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 466, "col_offset": 70, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 467, "col_offset": 40, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 467, "col_offset": 52, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 467, "col_offset": 64, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 467, "col_offset": 76, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 468, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 482, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 491, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 492, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 492, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 493, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 493, "col_offset": 40, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 493, "col_offset": 55, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 493, "col_offset": 70, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 494, "col_offset": 40, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 494, "col_offset": 52, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 494, "col_offset": 64, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 494, "col_offset": 76, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 495, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 526, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 527, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 536, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 537, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 537, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 538, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 538, "col_offset": 40, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 538, "col_offset": 55, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 538, "col_offset": 70, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 539, "col_offset": 40, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 539, "col_offset": 52, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 539, "col_offset": 64, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 539, "col_offset": 76, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 540, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 550, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 551, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 561, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 562, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 562, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 563, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 563, "col_offset": 40, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 563, "col_offset": 52, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 563, "col_offset": 64, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 564, "col_offset": 40, "nodeName": "wd_lh_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 564, "col_offset": 55, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 564, "col_offset": 68, "nodeName": "lr_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 565, "col_offset": 40, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 565, "col_offset": 52, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 566, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 580, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 591, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 592, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 592, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "rtol", "type": "float"}, {"lineNumber": 594, "col_offset": 14, "nodeName": "atol", "type": "float"}, {"lineNumber": 596, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 596, "col_offset": 40, "nodeName": "rho_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 596, "col_offset": 53, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 596, "col_offset": 65, "nodeName": "cw_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 597, "col_offset": 40, "nodeName": "center_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 597, "col_offset": 56, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 597, "col_offset": 68, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 598, "col_offset": 40, "nodeName": "mom_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 598, "col_offset": 53, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 598, "col_offset": 65, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 599, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 657, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 657, "col_offset": 19, "nodeName": "weight", "type": "Any"}, {"lineNumber": 657, "col_offset": 27, "nodeName": "grad", "type": "Any"}, {"lineNumber": 657, "col_offset": 33, "nodeName": "state", "type": "Any"}, {"lineNumber": 657, "col_offset": 42, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 657, "col_offset": 46, "nodeName": "indices", "type": "Any"}, {"lineNumber": 657, "col_offset": 55, "nodeName": "weights", "type": "Any"}, {"lineNumber": 657, "col_offset": 64, "nodeName": "grads", "type": "Any"}, {"lineNumber": 657, "col_offset": 71, "nodeName": "states", "type": "Any"}, {"lineNumber": 659, "col_offset": 12, "nodeName": "wd", "type": "Any"}, {"lineNumber": 660, "col_offset": 12, "nodeName": "lr", "type": "Any"}, {"lineNumber": 661, "col_offset": 12, "nodeName": "num_rows", "type": "Any"}, {"lineNumber": 663, "col_offset": 19, "nodeName": "state", "type": "Any"}, {"lineNumber": 664, "col_offset": 16, "nodeName": "row", "type": "int"}, {"lineNumber": 692, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 693, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 701, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 702, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 702, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 703, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 703, "col_offset": 40, "nodeName": "lamda1_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 703, "col_offset": 56, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 704, "col_offset": 40, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 704, "col_offset": 52, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 705, "col_offset": 40, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 705, "col_offset": 52, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 706, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 720, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 728, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 729, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 729, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 730, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 730, "col_offset": 40, "nodeName": "lamda1_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 730, "col_offset": 56, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 731, "col_offset": 40, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 731, "col_offset": 52, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 732, "col_offset": 40, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 732, "col_offset": 52, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 733, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 746, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 747, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 757, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 758, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 758, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 759, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 759, "col_offset": 40, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 759, "col_offset": 55, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 759, "col_offset": 70, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 760, "col_offset": 40, "nodeName": "schedule_decay_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 760, "col_offset": 64, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 760, "col_offset": 76, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 761, "col_offset": 40, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 761, "col_offset": 52, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 762, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 788, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 790, "col_offset": 8, "nodeName": "self", "type": "PySparseAdaGrad"}, {"lineNumber": 793, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 793, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 793, "col_offset": 41, "nodeName": "context", "type": "Any"}, {"lineNumber": 811, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 811, "col_offset": 19, "nodeName": "weight", "type": "Any"}, {"lineNumber": 811, "col_offset": 27, "nodeName": "grad", "type": "Any"}, {"lineNumber": 811, "col_offset": 33, "nodeName": "state", "type": "Any"}, {"lineNumber": 811, "col_offset": 42, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 811, "col_offset": 46, "nodeName": "indices", "type": "Any"}, {"lineNumber": 811, "col_offset": 55, "nodeName": "weights", "type": "Any"}, {"lineNumber": 811, "col_offset": 64, "nodeName": "grads", "type": "Any"}, {"lineNumber": 811, "col_offset": 71, "nodeName": "states", "type": "Any"}, {"lineNumber": 813, "col_offset": 12, "nodeName": "wd", "type": "Any"}, {"lineNumber": 814, "col_offset": 12, "nodeName": "lr", "type": "Any"}, {"lineNumber": 815, "col_offset": 12, "nodeName": "num_rows", "type": "Any"}, {"lineNumber": 817, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 817, "col_offset": 22, "nodeName": "state", "type": "Any"}, {"lineNumber": 818, "col_offset": 16, "nodeName": "row", "type": "int"}, {"lineNumber": 838, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 839, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 846, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 847, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 847, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 848, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 848, "col_offset": 40, "nodeName": "eps_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 848, "col_offset": 53, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 849, "col_offset": 40, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 849, "col_offset": 52, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 849, "col_offset": 64, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 850, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 861, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 868, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 869, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 869, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 870, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 870, "col_offset": 40, "nodeName": "eps_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 870, "col_offset": 53, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 871, "col_offset": 40, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 871, "col_offset": 52, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 871, "col_offset": 64, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 872, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 884, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 885, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 893, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 894, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 894, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 895, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 895, "col_offset": 40, "nodeName": "rho_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 895, "col_offset": 53, "nodeName": "eps_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 895, "col_offset": 66, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 896, "col_offset": 40, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 896, "col_offset": 52, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 896, "col_offset": 64, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 897, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 905, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 906, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 914, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 915, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 915, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 916, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 916, "col_offset": 40, "nodeName": "lamda_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 916, "col_offset": 55, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 916, "col_offset": 68, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 917, "col_offset": 40, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 917, "col_offset": 52, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 917, "col_offset": 64, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 918, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 928, "col_offset": 12, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 928, "col_offset": 87, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 931, "col_offset": 12, "nodeName": "sched", "type": "Any"}, {"lineNumber": 932, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 932, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 933, "col_offset": 12, "nodeName": "sched", "type": "Any"}, {"lineNumber": 934, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 934, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 934, "col_offset": 47, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 934, "col_offset": 57, "nodeName": "factor", "type": "float"}, {"lineNumber": 935, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 935, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 935, "col_offset": 66, "nodeName": "factor", "type": "float"}, {"lineNumber": 936, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 936, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 943, "col_offset": 12, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 943, "col_offset": 72, "nodeName": "base_lr", "type": "float"}, {"lineNumber": 946, "col_offset": 11, "nodeName": "sched", "type": "Any"}, {"lineNumber": 947, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 947, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 948, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 948, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 949, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 949, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 949, "col_offset": 46, "nodeName": "base_lr", "type": "float"}, {"lineNumber": 949, "col_offset": 56, "nodeName": "factor", "type": "float"}, {"lineNumber": 950, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 950, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 950, "col_offset": 46, "nodeName": "base_lr", "type": "float"}, {"lineNumber": 950, "col_offset": 56, "nodeName": "factor", "type": "float"}, {"lineNumber": 951, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 951, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 951, "col_offset": 65, "nodeName": "factor", "type": "float"}, {"lineNumber": 952, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 952, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 952, "col_offset": 66, "nodeName": "factor", "type": "float"}, {"lineNumber": 959, "col_offset": 17, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 959, "col_offset": 62, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 959, "col_offset": 87, "nodeName": "final_lr", "type": "int"}, {"lineNumber": 962, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 962, "col_offset": 35, "nodeName": "poly_sched", "type": "Any"}, {"lineNumber": 963, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 963, "col_offset": 35, "nodeName": "poly_sched", "type": "Any"}, {"lineNumber": 964, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 964, "col_offset": 35, "nodeName": "poly_sched", "type": "Any"}, {"lineNumber": 965, "col_offset": 12, "nodeName": "poly_sched", "type": "Any"}, {"lineNumber": 965, "col_offset": 31, "nodeName": "poly_sched", "type": "Any"}, {"lineNumber": 966, "col_offset": 12, "nodeName": "poly_sched", "type": "Any"}, {"lineNumber": 967, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 967, "col_offset": 35, "nodeName": "poly_sched", "type": "Any"}, {"lineNumber": 967, "col_offset": 46, "nodeName": "steps", "type": "int"}, {"lineNumber": 975, "col_offset": 19, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 975, "col_offset": 66, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 975, "col_offset": 84, "nodeName": "final_lr", "type": "float"}, {"lineNumber": 976, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 976, "col_offset": 35, "nodeName": "cosine_sched", "type": "Any"}, {"lineNumber": 977, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 977, "col_offset": 35, "nodeName": "cosine_sched", "type": "Any"}, {"lineNumber": 977, "col_offset": 48, "nodeName": "steps", "type": "int"}, {"lineNumber": 978, "col_offset": 12, "nodeName": "cosine_sched", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "mx", "type": "Any"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "mx", "type": "Any"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "mx", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "mx", "type": "Any"}, {"lineNumber": 52, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "o", "type": "Any"}, {"lineNumber": 68, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "float16", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "float16", "type": "Any"}, {"lineNumber": 96, "col_offset": 56, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 96, "col_offset": 73, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "context", "type": "Any"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "_get_lr", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "_get_wd", "type": "Any"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "_update_count", "type": "Any"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "index", "type": "Any"}, {"lineNumber": 133, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "momentum", "type": "Any"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "row", "type": "int"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "mom", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "state", "type": "Any"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "row", "type": "int"}, {"lineNumber": 173, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 179, "col_offset": 84, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 179, "col_offset": 92, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 182, "col_offset": 84, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 182, "col_offset": 92, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 197, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 200, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 202, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 204, "col_offset": 85, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 204, "col_offset": 93, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 207, "col_offset": 85, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 207, "col_offset": 93, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 223, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 228, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 234, "col_offset": 30, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 234, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 250, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 254, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 254, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 260, "col_offset": 30, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 260, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 282, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 285, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 291, "col_offset": 30, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 291, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 312, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 315, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 315, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 321, "col_offset": 30, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 321, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 334, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 337, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 337, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 338, "col_offset": 26, "nodeName": "product", "type": "Callable"}, {"lineNumber": 338, "col_offset": 44, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 338, "col_offset": 56, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 338, "col_offset": 68, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 338, "col_offset": 80, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 339, "col_offset": 16, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "atol", "type": "float"}, {"lineNumber": 344, "col_offset": 16, "nodeName": "rtol", "type": "float"}, {"lineNumber": 363, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 366, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 368, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 368, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 374, "col_offset": 30, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 374, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 382, "col_offset": 57, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 382, "col_offset": 74, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 397, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 397, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 397, "col_offset": 42, "nodeName": "context", "type": "Any"}, {"lineNumber": 398, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 398, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 398, "col_offset": 42, "nodeName": "context", "type": "Any"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "_update_count", "type": "Any"}, {"lineNumber": 417, "col_offset": 31, "nodeName": "index", "type": "Any"}, {"lineNumber": 418, "col_offset": 17, "nodeName": "_get_lr", "type": "Any"}, {"lineNumber": 418, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 419, "col_offset": 17, "nodeName": "_get_wd", "type": "Any"}, {"lineNumber": 419, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "_index_update_count", "type": "Any"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "mean", "type": "Any"}, {"lineNumber": 422, "col_offset": 18, "nodeName": "variance", "type": "Any"}, {"lineNumber": 423, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 427, "col_offset": 37, "nodeName": "coef1", "type": "Any"}, {"lineNumber": 429, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 429, "col_offset": 29, "nodeName": "num_rows", "type": "Any"}, {"lineNumber": 436, "col_offset": 29, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 442, "col_offset": 29, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 445, "col_offset": 33, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 464, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 466, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 468, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 468, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 473, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 474, "col_offset": 66, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 474, "col_offset": 74, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 491, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 493, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 495, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 495, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 501, "col_offset": 85, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 501, "col_offset": 93, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 504, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 505, "col_offset": 84, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 506, "col_offset": 30, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 509, "col_offset": 85, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 510, "col_offset": 30, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 513, "col_offset": 84, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 514, "col_offset": 30, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 516, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 517, "col_offset": 85, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 518, "col_offset": 30, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 536, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 538, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 540, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 540, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 544, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 544, "col_offset": 60, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 544, "col_offset": 68, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 561, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 563, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 566, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 566, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 570, "col_offset": 12, "nodeName": "rtol", "type": "float"}, {"lineNumber": 570, "col_offset": 18, "nodeName": "atol", "type": "float"}, {"lineNumber": 571, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 572, "col_offset": 66, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 572, "col_offset": 74, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 591, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 594, "col_offset": 37, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 594, "col_offset": 46, "nodeName": "float16", "type": "Any"}, {"lineNumber": 596, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 599, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 599, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 603, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 604, "col_offset": 66, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 604, "col_offset": 74, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 632, "col_offset": 45, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 638, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 638, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 638, "col_offset": 42, "nodeName": "context", "type": "Any"}, {"lineNumber": 639, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 639, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 639, "col_offset": 42, "nodeName": "context", "type": "Any"}, {"lineNumber": 658, "col_offset": 12, "nodeName": "_update_count", "type": "Any"}, {"lineNumber": 658, "col_offset": 31, "nodeName": "index", "type": "Any"}, {"lineNumber": 659, "col_offset": 17, "nodeName": "_get_wd", "type": "Any"}, {"lineNumber": 659, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 660, "col_offset": 17, "nodeName": "_get_lr", "type": "Any"}, {"lineNumber": 660, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 661, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 663, "col_offset": 12, "nodeName": "z", "type": "Any"}, {"lineNumber": 663, "col_offset": 15, "nodeName": "n", "type": "Any"}, {"lineNumber": 664, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 664, "col_offset": 29, "nodeName": "num_rows", "type": "Any"}, {"lineNumber": 665, "col_offset": 16, "nodeName": "all_zeros", "type": "Any"}, {"lineNumber": 666, "col_offset": 19, "nodeName": "all_zeros", "type": "Any"}, {"lineNumber": 668, "col_offset": 29, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 673, "col_offset": 16, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 675, "col_offset": 16, "nodeName": "denom", "type": "Any"}, {"lineNumber": 676, "col_offset": 16, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 676, "col_offset": 25, "nodeName": "denom", "type": "Any"}, {"lineNumber": 677, "col_offset": 16, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 677, "col_offset": 25, "nodeName": "lr", "type": "Any"}, {"lineNumber": 681, "col_offset": 16, "nodeName": "denom", "type": "Any"}, {"lineNumber": 681, "col_offset": 25, "nodeName": "beta", "type": "Any"}, {"lineNumber": 682, "col_offset": 16, "nodeName": "denom", "type": "Any"}, {"lineNumber": 682, "col_offset": 25, "nodeName": "lr", "type": "Any"}, {"lineNumber": 683, "col_offset": 16, "nodeName": "denom", "type": "Any"}, {"lineNumber": 683, "col_offset": 25, "nodeName": "wd", "type": "Any"}, {"lineNumber": 684, "col_offset": 16, "nodeName": "d", "type": "Any"}, {"lineNumber": 701, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 703, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 706, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 706, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 710, "col_offset": 12, "nodeName": "rtol", "type": "float"}, {"lineNumber": 710, "col_offset": 18, "nodeName": "atol", "type": "float"}, {"lineNumber": 711, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 712, "col_offset": 66, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 712, "col_offset": 74, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 728, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 730, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 733, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 733, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 737, "col_offset": 12, "nodeName": "rtol", "type": "float"}, {"lineNumber": 737, "col_offset": 18, "nodeName": "atol", "type": "float"}, {"lineNumber": 738, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 738, "col_offset": 60, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 739, "col_offset": 30, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 757, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 759, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 762, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 762, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 766, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 766, "col_offset": 60, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 766, "col_offset": 68, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 788, "col_offset": 60, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 789, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 793, "col_offset": 15, "nodeName": "nd", "type": "Any"}, {"lineNumber": 793, "col_offset": 27, "nodeName": "weight", "type": "Any"}, {"lineNumber": 793, "col_offset": 41, "nodeName": "weight", "type": "Any"}, {"lineNumber": 793, "col_offset": 63, "nodeName": "stype", "type": "Any"}, {"lineNumber": 812, "col_offset": 12, "nodeName": "_update_count", "type": "Any"}, {"lineNumber": 812, "col_offset": 31, "nodeName": "index", "type": "Any"}, {"lineNumber": 813, "col_offset": 17, "nodeName": "_get_wd", "type": "Any"}, {"lineNumber": 813, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 814, "col_offset": 17, "nodeName": "_get_lr", "type": "Any"}, {"lineNumber": 814, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 815, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 818, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 818, "col_offset": 29, "nodeName": "num_rows", "type": "Any"}, {"lineNumber": 819, "col_offset": 16, "nodeName": "all_zeros", "type": "Any"}, {"lineNumber": 820, "col_offset": 19, "nodeName": "all_zeros", "type": "Any"}, {"lineNumber": 822, "col_offset": 29, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 829, "col_offset": 16, "nodeName": "denom", "type": "Any"}, {"lineNumber": 830, "col_offset": 16, "nodeName": "denom", "type": "Any"}, {"lineNumber": 830, "col_offset": 25, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 846, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 848, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 850, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 850, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 851, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 851, "col_offset": 24, "nodeName": "float16", "type": "Any"}, {"lineNumber": 853, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 854, "col_offset": 66, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 854, "col_offset": 74, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 868, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 870, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 872, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 872, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 873, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 873, "col_offset": 24, "nodeName": "float16", "type": "Any"}, {"lineNumber": 893, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 895, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 897, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 897, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 898, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 898, "col_offset": 24, "nodeName": "float16", "type": "Any"}, {"lineNumber": 900, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 900, "col_offset": 60, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 900, "col_offset": 68, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 914, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 916, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 918, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 918, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 919, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 919, "col_offset": 24, "nodeName": "float16", "type": "Any"}, {"lineNumber": 921, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 921, "col_offset": 60, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 921, "col_offset": 68, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 928, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 932, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 934, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 935, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 935, "col_offset": 47, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 935, "col_offset": 57, "nodeName": "factor", "type": "float"}, {"lineNumber": 936, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 943, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 947, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 948, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 949, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 950, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 951, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 951, "col_offset": 46, "nodeName": "base_lr", "type": "float"}, {"lineNumber": 951, "col_offset": 56, "nodeName": "factor", "type": "float"}, {"lineNumber": 952, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 952, "col_offset": 47, "nodeName": "base_lr", "type": "float"}, {"lineNumber": 952, "col_offset": 57, "nodeName": "factor", "type": "float"}, {"lineNumber": 959, "col_offset": 17, "nodeName": "mx", "type": "Any"}, {"lineNumber": 962, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 963, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 963, "col_offset": 51, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 963, "col_offset": 57, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 964, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 967, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 975, "col_offset": 19, "nodeName": "mx", "type": "Any"}, {"lineNumber": 976, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 977, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "param", "type": "Union[Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any], Dict[str, int]]"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "params", "type": "Union[Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]]]"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 80, "col_offset": 42, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "PySparseSGD", "type": "Type[PySparseSGD]"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "nd", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "weight", "type": "Any"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "weight", "type": "Any"}, {"lineNumber": 111, "col_offset": 67, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 133, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "num_rows", "type": "Any"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "grad_row", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "all_zeros", "type": "Any"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "all_zeros", "type": "Any"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 148, "col_offset": 33, "nodeName": "num_rows", "type": "Any"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "grad_row", "type": "Any"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "all_zeros", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "all_zeros", "type": "Any"}, {"lineNumber": 153, "col_offset": 33, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "momentum", "type": "Any"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "param", "type": "Union[Dict[nothing, nothing], Dict[str, float], Dict[str, Any], Dict[str, int]]"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "params", "type": "Union[Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]]]"}, {"lineNumber": 178, "col_offset": 30, "nodeName": "opt1", "type": "Type[PySparseSGD]"}, {"lineNumber": 179, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 181, "col_offset": 30, "nodeName": "opt1", "type": "Type[PySparseSGD]"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 202, "col_offset": 30, "nodeName": "param", "type": "Union[Dict[nothing, nothing], Dict[str, Any], Dict[str, float], Dict[str, int]]"}, {"lineNumber": 202, "col_offset": 39, "nodeName": "params", "type": "Union[Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]]]"}, {"lineNumber": 203, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 204, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 206, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 207, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 228, "col_offset": 30, "nodeName": "param", "type": "Union[Dict[str, float], Dict[str, bool], Dict[str, Any], Dict[nothing, nothing], Dict[str, int]]"}, {"lineNumber": 228, "col_offset": 39, "nodeName": "params", "type": "Union[Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]]]"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 232, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 233, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 254, "col_offset": 39, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 258, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 259, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 285, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 285, "col_offset": 39, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 289, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 290, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 315, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 315, "col_offset": 39, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 316, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 319, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 320, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 338, "col_offset": 26, "nodeName": "itertools", "type": "module"}, {"lineNumber": 339, "col_offset": 25, "nodeName": "k", "type": "str"}, {"lineNumber": 339, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "compare_optimizer_noise_seeded", "type": "Any"}, {"lineNumber": 347, "col_offset": 47, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 347, "col_offset": 55, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 347, "col_offset": 62, "nodeName": "seed", "type": "int"}, {"lineNumber": 368, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 368, "col_offset": 39, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 369, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 372, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 373, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 382, "col_offset": 14, "nodeName": "PySparseAdam", "type": "Type[PySparseAdam]"}, {"lineNumber": 382, "col_offset": 28, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 397, "col_offset": 16, "nodeName": "nd", "type": "Any"}, {"lineNumber": 397, "col_offset": 28, "nodeName": "weight", "type": "Any"}, {"lineNumber": 397, "col_offset": 42, "nodeName": "weight", "type": "Any"}, {"lineNumber": 397, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 398, "col_offset": 16, "nodeName": "nd", "type": "Any"}, {"lineNumber": 398, "col_offset": 28, "nodeName": "weight", "type": "Any"}, {"lineNumber": 398, "col_offset": 42, "nodeName": "weight", "type": "Any"}, {"lineNumber": 398, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 418, "col_offset": 17, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 419, "col_offset": 17, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 420, "col_offset": 41, "nodeName": "index", "type": "Any"}, {"lineNumber": 423, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 425, "col_offset": 25, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 425, "col_offset": 39, "nodeName": "t", "type": "Any"}, {"lineNumber": 426, "col_offset": 25, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 426, "col_offset": 39, "nodeName": "t", "type": "Any"}, {"lineNumber": 427, "col_offset": 18, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 427, "col_offset": 28, "nodeName": "coef2", "type": "Any"}, {"lineNumber": 431, "col_offset": 28, "nodeName": "almost_equal", "type": "Any"}, {"lineNumber": 434, "col_offset": 19, "nodeName": "all_zeros", "type": "Any"}, {"lineNumber": 434, "col_offset": 33, "nodeName": "lazy_update", "type": "Any"}, {"lineNumber": 436, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 436, "col_offset": 29, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 438, "col_offset": 19, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 440, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 440, "col_offset": 29, "nodeName": "wd", "type": "Any"}, {"lineNumber": 442, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 442, "col_offset": 29, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 443, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 445, "col_offset": 16, "nodeName": "variance", "type": "Any"}, {"lineNumber": 445, "col_offset": 33, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 446, "col_offset": 16, "nodeName": "variance", "type": "Any"}, {"lineNumber": 448, "col_offset": 16, "nodeName": "weight", "type": "Any"}, {"lineNumber": 468, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 468, "col_offset": 39, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 469, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 469, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 473, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 474, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 495, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 495, "col_offset": 39, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 496, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 496, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 500, "col_offset": 30, "nodeName": "opt1", "type": "Type[PySparseAdam]"}, {"lineNumber": 501, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 504, "col_offset": 30, "nodeName": "opt1", "type": "Type[PySparseAdam]"}, {"lineNumber": 505, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 508, "col_offset": 30, "nodeName": "opt1", "type": "Type[PySparseAdam]"}, {"lineNumber": 509, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 512, "col_offset": 30, "nodeName": "opt1", "type": "Type[PySparseAdam]"}, {"lineNumber": 513, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 516, "col_offset": 30, "nodeName": "opt1", "type": "Type[PySparseAdam]"}, {"lineNumber": 517, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 540, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 540, "col_offset": 39, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 541, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 541, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 544, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 544, "col_offset": 45, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 566, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 566, "col_offset": 39, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 567, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 567, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 570, "col_offset": 41, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 570, "col_offset": 50, "nodeName": "float16", "type": "Any"}, {"lineNumber": 571, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 572, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 573, "col_offset": 40, "nodeName": "rtol", "type": "float"}, {"lineNumber": 573, "col_offset": 51, "nodeName": "atol", "type": "float"}, {"lineNumber": 594, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 599, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 599, "col_offset": 39, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 600, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 600, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 603, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 604, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 605, "col_offset": 35, "nodeName": "rtol", "type": "float"}, {"lineNumber": 605, "col_offset": 46, "nodeName": "atol", "type": "float"}, {"lineNumber": 606, "col_offset": 15, "nodeName": "default_context", "type": "Any"}, {"lineNumber": 606, "col_offset": 36, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 607, "col_offset": 16, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 609, "col_offset": 34, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 609, "col_offset": 42, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 632, "col_offset": 14, "nodeName": "PySparseFtrl", "type": "Type[PySparseFtrl]"}, {"lineNumber": 632, "col_offset": 28, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 638, "col_offset": 16, "nodeName": "nd", "type": "Any"}, {"lineNumber": 638, "col_offset": 28, "nodeName": "weight", "type": "Any"}, {"lineNumber": 638, "col_offset": 42, "nodeName": "weight", "type": "Any"}, {"lineNumber": 638, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 639, "col_offset": 16, "nodeName": "nd", "type": "Any"}, {"lineNumber": 639, "col_offset": 28, "nodeName": "weight", "type": "Any"}, {"lineNumber": 639, "col_offset": 42, "nodeName": "weight", "type": "Any"}, {"lineNumber": 639, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 658, "col_offset": 12, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 659, "col_offset": 17, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 660, "col_offset": 17, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 661, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 665, "col_offset": 28, "nodeName": "almost_equal", "type": "Any"}, {"lineNumber": 668, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 668, "col_offset": 29, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 669, "col_offset": 19, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 674, "col_offset": 16, "nodeName": "n", "type": "Any"}, {"lineNumber": 674, "col_offset": 26, "nodeName": "square", "type": "Any"}, {"lineNumber": 675, "col_offset": 24, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 678, "col_offset": 16, "nodeName": "z", "type": "Any"}, {"lineNumber": 681, "col_offset": 25, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 685, "col_offset": 16, "nodeName": "weight", "type": "Any"}, {"lineNumber": 685, "col_offset": 36, "nodeName": "denom", "type": "Any"}, {"lineNumber": 706, "col_offset": 30, "nodeName": "param", "type": "Union[Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int], Dict[str, Any]]"}, {"lineNumber": 706, "col_offset": 39, "nodeName": "params", "type": "Union[Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]]]"}, {"lineNumber": 707, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 707, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 710, "col_offset": 41, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 710, "col_offset": 50, "nodeName": "float16", "type": "Any"}, {"lineNumber": 711, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 712, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 713, "col_offset": 35, "nodeName": "rtol", "type": "float"}, {"lineNumber": 713, "col_offset": 46, "nodeName": "atol", "type": "float"}, {"lineNumber": 733, "col_offset": 30, "nodeName": "param", "type": "Union[Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any], Dict[str, int]]"}, {"lineNumber": 733, "col_offset": 39, "nodeName": "params", "type": "Union[Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]]]"}, {"lineNumber": 734, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 734, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 737, "col_offset": 41, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 737, "col_offset": 50, "nodeName": "float16", "type": "Any"}, {"lineNumber": 738, "col_offset": 30, "nodeName": "opt1", "type": "Type[PySparseFtrl]"}, {"lineNumber": 738, "col_offset": 45, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 740, "col_offset": 35, "nodeName": "rtol", "type": "float"}, {"lineNumber": 740, "col_offset": 46, "nodeName": "atol", "type": "float"}, {"lineNumber": 762, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 762, "col_offset": 39, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 763, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 763, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 766, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 766, "col_offset": 45, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 788, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 788, "col_offset": 14, "nodeName": "PySparseAdaGrad", "type": "Type[PySparseAdaGrad]"}, {"lineNumber": 788, "col_offset": 31, "nodeName": "self", "type": "PySparseAdaGrad"}, {"lineNumber": 793, "col_offset": 15, "nodeName": "mx", "type": "Any"}, {"lineNumber": 793, "col_offset": 63, "nodeName": "weight", "type": "Any"}, {"lineNumber": 812, "col_offset": 12, "nodeName": "self", "type": "PySparseAdaGrad"}, {"lineNumber": 813, "col_offset": 17, "nodeName": "self", "type": "PySparseAdaGrad"}, {"lineNumber": 814, "col_offset": 17, "nodeName": "self", "type": "PySparseAdaGrad"}, {"lineNumber": 815, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 819, "col_offset": 28, "nodeName": "almost_equal", "type": "Any"}, {"lineNumber": 822, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 822, "col_offset": 29, "nodeName": "self", "type": "PySparseAdaGrad"}, {"lineNumber": 823, "col_offset": 19, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 825, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 825, "col_offset": 29, "nodeName": "wd", "type": "Any"}, {"lineNumber": 828, "col_offset": 16, "nodeName": "history", "type": "Any"}, {"lineNumber": 828, "col_offset": 32, "nodeName": "square", "type": "Any"}, {"lineNumber": 829, "col_offset": 24, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 830, "col_offset": 25, "nodeName": "self", "type": "PySparseAdaGrad"}, {"lineNumber": 833, "col_offset": 16, "nodeName": "weight", "type": "Any"}, {"lineNumber": 833, "col_offset": 48, "nodeName": "denom", "type": "Any"}, {"lineNumber": 850, "col_offset": 30, "nodeName": "param", "type": "Union[Dict[nothing, nothing], Dict[str, float], Dict[str, Any], Dict[str, int]]"}, {"lineNumber": 850, "col_offset": 39, "nodeName": "params", "type": "Union[Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]]]"}, {"lineNumber": 851, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 852, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 853, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 854, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 872, "col_offset": 30, "nodeName": "param", "type": "Union[Dict[nothing, nothing], Dict[str, float], Dict[str, Any], Dict[str, int]]"}, {"lineNumber": 872, "col_offset": 39, "nodeName": "params", "type": "Union[Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, int]]]"}, {"lineNumber": 873, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 874, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 875, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 876, "col_offset": 16, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 876, "col_offset": 85, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 876, "col_offset": 93, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 878, "col_offset": 16, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 878, "col_offset": 85, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 878, "col_offset": 93, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 897, "col_offset": 30, "nodeName": "param", "type": "Union[Dict[str, float], Dict[nothing, nothing], Dict[str, Any], Dict[str, int]]"}, {"lineNumber": 897, "col_offset": 39, "nodeName": "params", "type": "Union[Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, Any]]]"}, {"lineNumber": 898, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 899, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 900, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 900, "col_offset": 45, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 918, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 918, "col_offset": 39, "nodeName": "params", "type": "Any"}, {"lineNumber": 919, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 920, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 921, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 921, "col_offset": 45, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 947, "col_offset": 53, "nodeName": "base_lr", "type": "float"}, {"lineNumber": 73, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 73, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 73, "col_offset": 58, "nodeName": "items", "type": "Callable"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 66, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 83, "col_offset": 34, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "mx", "type": "Any"}, {"lineNumber": 111, "col_offset": 67, "nodeName": "weight", "type": "Any"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "almost_equal", "type": "Any"}, {"lineNumber": 138, "col_offset": 59, "nodeName": "grad_row", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "wd", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "weight", "type": "Any"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "lr", "type": "Any"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "almost_equal", "type": "Any"}, {"lineNumber": 150, "col_offset": 59, "nodeName": "grad_row", "type": "Any"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 153, "col_offset": 33, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 156, "col_offset": 33, "nodeName": "wd", "type": "Any"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "mom", "type": "Any"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "mom", "type": "Any"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "lr", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "weight", "type": "Any"}, {"lineNumber": 159, "col_offset": 35, "nodeName": "mom", "type": "Any"}, {"lineNumber": 177, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 177, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 177, "col_offset": 58, "nodeName": "items", "type": "Callable"}, {"lineNumber": 178, "col_offset": 37, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 179, "col_offset": 76, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 181, "col_offset": 37, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 182, "col_offset": 76, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 202, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 202, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 202, "col_offset": 58, "nodeName": "items", "type": "Callable"}, {"lineNumber": 203, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 204, "col_offset": 77, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 206, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 207, "col_offset": 77, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 228, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 228, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 228, "col_offset": 58, "nodeName": "items", "type": "Callable"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 66, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 232, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 233, "col_offset": 58, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 254, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 254, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 254, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 66, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 258, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 259, "col_offset": 58, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 285, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 285, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 285, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 286, "col_offset": 66, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 289, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 290, "col_offset": 58, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 315, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 315, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 315, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 316, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 316, "col_offset": 66, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 319, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 320, "col_offset": 58, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 339, "col_offset": 34, "nodeName": "param", "type": "Union[Dict[nothing, nothing], Dict[str, bool], Dict[str, int], Dict[str, Any], Dict[str, float]]"}, {"lineNumber": 339, "col_offset": 43, "nodeName": "params", "type": "Union[Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]]]"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 340, "col_offset": 29, "nodeName": "float16", "type": "Any"}, {"lineNumber": 343, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 343, "col_offset": 40, "nodeName": "float16", "type": "Any"}, {"lineNumber": 344, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 344, "col_offset": 40, "nodeName": "float16", "type": "Any"}, {"lineNumber": 345, "col_offset": 47, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 346, "col_offset": 47, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 347, "col_offset": 73, "nodeName": "atol", "type": "float"}, {"lineNumber": 347, "col_offset": 84, "nodeName": "rtol", "type": "float"}, {"lineNumber": 368, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 368, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 368, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 369, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 369, "col_offset": 66, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 372, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 373, "col_offset": 58, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 397, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 397, "col_offset": 64, "nodeName": "weight", "type": "Any"}, {"lineNumber": 398, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 398, "col_offset": 64, "nodeName": "weight", "type": "Any"}, {"lineNumber": 425, "col_offset": 25, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 426, "col_offset": 25, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 427, "col_offset": 18, "nodeName": "math", "type": "module"}, {"lineNumber": 431, "col_offset": 28, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 431, "col_offset": 55, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 432, "col_offset": 55, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 434, "col_offset": 33, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 436, "col_offset": 21, "nodeName": "row", "type": "int"}, {"lineNumber": 438, "col_offset": 19, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 439, "col_offset": 20, "nodeName": "clip", "type": "Any"}, {"lineNumber": 439, "col_offset": 63, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "row", "type": "int"}, {"lineNumber": 440, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 442, "col_offset": 21, "nodeName": "row", "type": "int"}, {"lineNumber": 443, "col_offset": 21, "nodeName": "row", "type": "int"}, {"lineNumber": 443, "col_offset": 29, "nodeName": "grad", "type": "Any"}, {"lineNumber": 443, "col_offset": 47, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 445, "col_offset": 25, "nodeName": "row", "type": "int"}, {"lineNumber": 446, "col_offset": 25, "nodeName": "row", "type": "int"}, {"lineNumber": 446, "col_offset": 38, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 446, "col_offset": 52, "nodeName": "square", "type": "Any"}, {"lineNumber": 448, "col_offset": 23, "nodeName": "row", "type": "int"}, {"lineNumber": 448, "col_offset": 31, "nodeName": "lr", "type": "Any"}, {"lineNumber": 448, "col_offset": 77, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 468, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 468, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 468, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 469, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 469, "col_offset": 66, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 473, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 474, "col_offset": 58, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 495, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 495, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 495, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 496, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 496, "col_offset": 66, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 500, "col_offset": 56, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 501, "col_offset": 77, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 504, "col_offset": 55, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 505, "col_offset": 76, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 508, "col_offset": 56, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 509, "col_offset": 77, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 512, "col_offset": 55, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 513, "col_offset": 76, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 516, "col_offset": 56, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 517, "col_offset": 77, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 540, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 540, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 540, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 541, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 542, "col_offset": 46, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 544, "col_offset": 37, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 544, "col_offset": 52, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 566, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 566, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 566, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 567, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 568, "col_offset": 46, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 570, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 571, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 572, "col_offset": 58, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 599, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 599, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 599, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 600, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 601, "col_offset": 46, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 603, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 604, "col_offset": 58, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 606, "col_offset": 36, "nodeName": "mx", "type": "Any"}, {"lineNumber": 607, "col_offset": 34, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 608, "col_offset": 34, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 609, "col_offset": 76, "nodeName": "rtol", "type": "float"}, {"lineNumber": 609, "col_offset": 87, "nodeName": "atol", "type": "float"}, {"lineNumber": 638, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 638, "col_offset": 64, "nodeName": "weight", "type": "Any"}, {"lineNumber": 639, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 639, "col_offset": 64, "nodeName": "weight", "type": "Any"}, {"lineNumber": 665, "col_offset": 28, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 665, "col_offset": 55, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 665, "col_offset": 76, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 668, "col_offset": 21, "nodeName": "row", "type": "int"}, {"lineNumber": 669, "col_offset": 19, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 670, "col_offset": 20, "nodeName": "clip", "type": "Any"}, {"lineNumber": 670, "col_offset": 63, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 673, "col_offset": 26, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 674, "col_offset": 18, "nodeName": "row", "type": "int"}, {"lineNumber": 674, "col_offset": 26, "nodeName": "nd", "type": "Any"}, {"lineNumber": 674, "col_offset": 39, "nodeName": "grad", "type": "Any"}, {"lineNumber": 675, "col_offset": 24, "nodeName": "nd", "type": "Any"}, {"lineNumber": 675, "col_offset": 35, "nodeName": "n", "type": "Any"}, {"lineNumber": 678, "col_offset": 18, "nodeName": "row", "type": "int"}, {"lineNumber": 678, "col_offset": 26, "nodeName": "grad", "type": "Any"}, {"lineNumber": 678, "col_offset": 38, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 684, "col_offset": 20, "nodeName": "sign", "type": "Any"}, {"lineNumber": 684, "col_offset": 41, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 685, "col_offset": 23, "nodeName": "row", "type": "int"}, {"lineNumber": 685, "col_offset": 32, "nodeName": "d", "type": "Any"}, {"lineNumber": 706, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 706, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 706, "col_offset": 58, "nodeName": "items", "type": "Callable"}, {"lineNumber": 707, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 708, "col_offset": 46, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 710, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 711, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 712, "col_offset": 58, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 733, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 733, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 733, "col_offset": 58, "nodeName": "items", "type": "Callable"}, {"lineNumber": 734, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 735, "col_offset": 46, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 737, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 738, "col_offset": 37, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 738, "col_offset": 52, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 762, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 762, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 762, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 763, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 764, "col_offset": 46, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 766, "col_offset": 37, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 766, "col_offset": 52, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 819, "col_offset": 28, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 819, "col_offset": 55, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 819, "col_offset": 76, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 822, "col_offset": 21, "nodeName": "row", "type": "int"}, {"lineNumber": 823, "col_offset": 19, "nodeName": "self", "type": "PySparseAdaGrad"}, {"lineNumber": 824, "col_offset": 20, "nodeName": "clip", "type": "Any"}, {"lineNumber": 824, "col_offset": 63, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 825, "col_offset": 21, "nodeName": "row", "type": "int"}, {"lineNumber": 825, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 828, "col_offset": 24, "nodeName": "row", "type": "int"}, {"lineNumber": 828, "col_offset": 32, "nodeName": "nd", "type": "Any"}, {"lineNumber": 828, "col_offset": 45, "nodeName": "grad", "type": "Any"}, {"lineNumber": 829, "col_offset": 24, "nodeName": "nd", "type": "Any"}, {"lineNumber": 829, "col_offset": 35, "nodeName": "history", "type": "Any"}, {"lineNumber": 833, "col_offset": 23, "nodeName": "row", "type": "int"}, {"lineNumber": 833, "col_offset": 31, "nodeName": "lr", "type": "Any"}, {"lineNumber": 850, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 850, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 850, "col_offset": 58, "nodeName": "items", "type": "Callable"}, {"lineNumber": 852, "col_offset": 16, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 853, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 854, "col_offset": 58, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 872, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 872, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 872, "col_offset": 58, "nodeName": "items", "type": "Callable"}, {"lineNumber": 874, "col_offset": 16, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 875, "col_offset": 15, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 876, "col_offset": 34, "nodeName": "opt1", "type": "Type[PySparseAdaGrad]"}, {"lineNumber": 876, "col_offset": 49, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 878, "col_offset": 34, "nodeName": "opt1", "type": "Type[PySparseAdaGrad]"}, {"lineNumber": 878, "col_offset": 49, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 897, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 897, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 897, "col_offset": 58, "nodeName": "items", "type": "Callable"}, {"lineNumber": 899, "col_offset": 16, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 900, "col_offset": 37, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 900, "col_offset": 52, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 918, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 918, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 918, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 920, "col_offset": 16, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 921, "col_offset": 37, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 921, "col_offset": 52, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 73, "col_offset": 58, "nodeName": "param", "type": "Union[Dict[str, int], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any], Dict[str, float]]"}, {"lineNumber": 75, "col_offset": 45, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 63, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 62, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 82, "col_offset": 63, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 62, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 63, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 88, "col_offset": 62, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 89, "col_offset": 50, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 138, "col_offset": 69, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 138, "col_offset": 83, "nodeName": "grad_row", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "row", "type": "int"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "grad", "type": "Any"}, {"lineNumber": 143, "col_offset": 36, "nodeName": "clip", "type": "Any"}, {"lineNumber": 143, "col_offset": 79, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "row", "type": "int"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "weight", "type": "Any"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "row", "type": "int"}, {"lineNumber": 145, "col_offset": 40, "nodeName": "grad", "type": "Any"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 150, "col_offset": 69, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 150, "col_offset": 83, "nodeName": "grad_row", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "row", "type": "int"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "grad", "type": "Any"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "clip", "type": "Any"}, {"lineNumber": 155, "col_offset": 79, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "row", "type": "int"}, {"lineNumber": 156, "col_offset": 38, "nodeName": "weight", "type": "Any"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "row", "type": "int"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "row", "type": "int"}, {"lineNumber": 158, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "row", "type": "int"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "row", "type": "int"}, {"lineNumber": 177, "col_offset": 58, "nodeName": "param", "type": "Union[Dict[nothing, nothing], Dict[str, int], Dict[str, float], Dict[str, Any]]"}, {"lineNumber": 202, "col_offset": 58, "nodeName": "param", "type": "Union[Dict[nothing, nothing], Dict[str, float], Dict[str, Any], Dict[str, int]]"}, {"lineNumber": 228, "col_offset": 58, "nodeName": "param", "type": "Union[Dict[str, int], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]]"}, {"lineNumber": 230, "col_offset": 45, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 254, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 256, "col_offset": 45, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 285, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 287, "col_offset": 45, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 315, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 317, "col_offset": 45, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 339, "col_offset": 54, "nodeName": "k", "type": "str"}, {"lineNumber": 339, "col_offset": 57, "nodeName": "v", "type": "Any"}, {"lineNumber": 339, "col_offset": 62, "nodeName": "items", "type": "Callable"}, {"lineNumber": 340, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 340, "col_offset": 70, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 343, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 344, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 345, "col_offset": 54, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 346, "col_offset": 54, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 368, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 370, "col_offset": 45, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 431, "col_offset": 28, "nodeName": "mx", "type": "Any"}, {"lineNumber": 432, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 432, "col_offset": 69, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 439, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 439, "col_offset": 31, "nodeName": "grad", "type": "Any"}, {"lineNumber": 439, "col_offset": 43, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 439, "col_offset": 63, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 440, "col_offset": 41, "nodeName": "row", "type": "int"}, {"lineNumber": 443, "col_offset": 34, "nodeName": "row", "type": "int"}, {"lineNumber": 443, "col_offset": 47, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 446, "col_offset": 38, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 446, "col_offset": 52, "nodeName": "nd", "type": "Any"}, {"lineNumber": 446, "col_offset": 65, "nodeName": "grad", "type": "Any"}, {"lineNumber": 448, "col_offset": 36, "nodeName": "mean", "type": "Any"}, {"lineNumber": 448, "col_offset": 49, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 448, "col_offset": 77, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 468, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 470, "col_offset": 45, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 495, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 497, "col_offset": 45, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 540, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 542, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 566, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 568, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 599, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 601, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 607, "col_offset": 63, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 608, "col_offset": 62, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 665, "col_offset": 28, "nodeName": "mx", "type": "Any"}, {"lineNumber": 665, "col_offset": 76, "nodeName": "np", "type": "module"}, {"lineNumber": 665, "col_offset": 90, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 670, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 670, "col_offset": 31, "nodeName": "grad", "type": "Any"}, {"lineNumber": 670, "col_offset": 43, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 670, "col_offset": 63, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 673, "col_offset": 26, "nodeName": "nd", "type": "Any"}, {"lineNumber": 673, "col_offset": 37, "nodeName": "n", "type": "Any"}, {"lineNumber": 674, "col_offset": 26, "nodeName": "mx", "type": "Any"}, {"lineNumber": 674, "col_offset": 44, "nodeName": "row", "type": "int"}, {"lineNumber": 675, "col_offset": 24, "nodeName": "mx", "type": "Any"}, {"lineNumber": 675, "col_offset": 37, "nodeName": "row", "type": "int"}, {"lineNumber": 678, "col_offset": 31, "nodeName": "row", "type": "int"}, {"lineNumber": 678, "col_offset": 46, "nodeName": "weight", "type": "Any"}, {"lineNumber": 684, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 684, "col_offset": 31, "nodeName": "z", "type": "Any"}, {"lineNumber": 684, "col_offset": 41, "nodeName": "nd", "type": "Any"}, {"lineNumber": 684, "col_offset": 75, "nodeName": "lamda1", "type": "Any"}, {"lineNumber": 706, "col_offset": 58, "nodeName": "param", "type": "Union[Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int], Dict[str, Any]]"}, {"lineNumber": 708, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 733, "col_offset": 58, "nodeName": "param", "type": "Union[Dict[nothing, nothing], Dict[str, bool], Dict[str, Any], Dict[str, float], Dict[str, int]]"}, {"lineNumber": 735, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 762, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 764, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 819, "col_offset": 28, "nodeName": "mx", "type": "Any"}, {"lineNumber": 819, "col_offset": 76, "nodeName": "np", "type": "module"}, {"lineNumber": 819, "col_offset": 90, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 824, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 824, "col_offset": 31, "nodeName": "grad", "type": "Any"}, {"lineNumber": 824, "col_offset": 43, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 824, "col_offset": 63, "nodeName": "self", "type": "PySparseAdaGrad"}, {"lineNumber": 825, "col_offset": 41, "nodeName": "row", "type": "int"}, {"lineNumber": 828, "col_offset": 32, "nodeName": "mx", "type": "Any"}, {"lineNumber": 828, "col_offset": 50, "nodeName": "row", "type": "int"}, {"lineNumber": 829, "col_offset": 24, "nodeName": "mx", "type": "Any"}, {"lineNumber": 829, "col_offset": 43, "nodeName": "row", "type": "int"}, {"lineNumber": 833, "col_offset": 36, "nodeName": "grad", "type": "Any"}, {"lineNumber": 850, "col_offset": 58, "nodeName": "param", "type": "Union[Dict[str, float], Dict[str, int], Dict[str, Any], Dict[nothing, nothing]]"}, {"lineNumber": 872, "col_offset": 58, "nodeName": "param", "type": "Union[Dict[str, int], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]]"}, {"lineNumber": 876, "col_offset": 41, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 876, "col_offset": 77, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 878, "col_offset": 41, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 878, "col_offset": 77, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 897, "col_offset": 58, "nodeName": "param", "type": "Union[Dict[str, float], Dict[nothing, nothing], Dict[str, int], Dict[str, Any]]"}, {"lineNumber": 918, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "grad", "type": "Any"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "mx", "type": "Any"}, {"lineNumber": 138, "col_offset": 69, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "row", "type": "int"}, {"lineNumber": 143, "col_offset": 36, "nodeName": "nd", "type": "Any"}, {"lineNumber": 143, "col_offset": 47, "nodeName": "grad", "type": "Any"}, {"lineNumber": 143, "col_offset": 59, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 143, "col_offset": 79, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 144, "col_offset": 45, "nodeName": "row", "type": "int"}, {"lineNumber": 145, "col_offset": 45, "nodeName": "row", "type": "int"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "grad", "type": "Any"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "mx", "type": "Any"}, {"lineNumber": 150, "col_offset": 69, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "row", "type": "int"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "nd", "type": "Any"}, {"lineNumber": 155, "col_offset": 47, "nodeName": "grad", "type": "Any"}, {"lineNumber": 155, "col_offset": 59, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 155, "col_offset": 79, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "row", "type": "int"}, {"lineNumber": 158, "col_offset": 42, "nodeName": "row", "type": "int"}, {"lineNumber": 339, "col_offset": 62, "nodeName": "param", "type": "Union[Dict[str, int], Dict[str, float], Dict[nothing, nothing], Dict[str, Any], Dict[str, bool]]"}, {"lineNumber": 341, "col_offset": 52, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 431, "col_offset": 55, "nodeName": "grad", "type": "Any"}, {"lineNumber": 439, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 439, "col_offset": 36, "nodeName": "row", "type": "int"}, {"lineNumber": 439, "col_offset": 43, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 439, "col_offset": 87, "nodeName": "grad", "type": "Any"}, {"lineNumber": 446, "col_offset": 52, "nodeName": "mx", "type": "Any"}, {"lineNumber": 446, "col_offset": 70, "nodeName": "row", "type": "int"}, {"lineNumber": 446, "col_offset": 80, "nodeName": "grad", "type": "Any"}, {"lineNumber": 448, "col_offset": 41, "nodeName": "row", "type": "int"}, {"lineNumber": 448, "col_offset": 49, "nodeName": "nd", "type": "Any"}, {"lineNumber": 448, "col_offset": 60, "nodeName": "variance", "type": "Any"}, {"lineNumber": 665, "col_offset": 55, "nodeName": "grad", "type": "Any"}, {"lineNumber": 670, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 670, "col_offset": 36, "nodeName": "row", "type": "int"}, {"lineNumber": 670, "col_offset": 43, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 670, "col_offset": 87, "nodeName": "grad", "type": "Any"}, {"lineNumber": 673, "col_offset": 26, "nodeName": "mx", "type": "Any"}, {"lineNumber": 673, "col_offset": 39, "nodeName": "row", "type": "int"}, {"lineNumber": 678, "col_offset": 53, "nodeName": "row", "type": "int"}, {"lineNumber": 684, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 684, "col_offset": 33, "nodeName": "row", "type": "int"}, {"lineNumber": 684, "col_offset": 41, "nodeName": "mx", "type": "Any"}, {"lineNumber": 684, "col_offset": 55, "nodeName": "abs", "type": "Any"}, {"lineNumber": 684, "col_offset": 75, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 819, "col_offset": 55, "nodeName": "grad", "type": "Any"}, {"lineNumber": 824, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 824, "col_offset": 36, "nodeName": "row", "type": "int"}, {"lineNumber": 824, "col_offset": 43, "nodeName": "self", "type": "PySparseAdaGrad"}, {"lineNumber": 824, "col_offset": 87, "nodeName": "grad", "type": "Any"}, {"lineNumber": 833, "col_offset": 41, "nodeName": "row", "type": "int"}, {"lineNumber": 137, "col_offset": 36, "nodeName": "row", "type": "int"}, {"lineNumber": 143, "col_offset": 36, "nodeName": "mx", "type": "Any"}, {"lineNumber": 143, "col_offset": 52, "nodeName": "row", "type": "int"}, {"lineNumber": 143, "col_offset": 59, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "row", "type": "int"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "mx", "type": "Any"}, {"lineNumber": 155, "col_offset": 52, "nodeName": "row", "type": "int"}, {"lineNumber": 155, "col_offset": 59, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 431, "col_offset": 60, "nodeName": "row", "type": "int"}, {"lineNumber": 432, "col_offset": 69, "nodeName": "grad", "type": "Any"}, {"lineNumber": 439, "col_offset": 92, "nodeName": "row", "type": "int"}, {"lineNumber": 446, "col_offset": 85, "nodeName": "row", "type": "int"}, {"lineNumber": 448, "col_offset": 49, "nodeName": "mx", "type": "Any"}, {"lineNumber": 448, "col_offset": 69, "nodeName": "row", "type": "int"}, {"lineNumber": 665, "col_offset": 60, "nodeName": "row", "type": "int"}, {"lineNumber": 665, "col_offset": 90, "nodeName": "grad", "type": "Any"}, {"lineNumber": 670, "col_offset": 92, "nodeName": "row", "type": "int"}, {"lineNumber": 684, "col_offset": 55, "nodeName": "nd", "type": "Any"}, {"lineNumber": 684, "col_offset": 65, "nodeName": "z", "type": "Any"}, {"lineNumber": 819, "col_offset": 60, "nodeName": "row", "type": "int"}, {"lineNumber": 819, "col_offset": 90, "nodeName": "grad", "type": "Any"}, {"lineNumber": 824, "col_offset": 92, "nodeName": "row", "type": "int"}, {"lineNumber": 432, "col_offset": 74, "nodeName": "row", "type": "int"}, {"lineNumber": 665, "col_offset": 95, "nodeName": "row", "type": "int"}, {"lineNumber": 684, "col_offset": 55, "nodeName": "mx", "type": "Any"}, {"lineNumber": 684, "col_offset": 67, "nodeName": "row", "type": "int"}, {"lineNumber": 819, "col_offset": 95, "nodeName": "row", "type": "int"}]