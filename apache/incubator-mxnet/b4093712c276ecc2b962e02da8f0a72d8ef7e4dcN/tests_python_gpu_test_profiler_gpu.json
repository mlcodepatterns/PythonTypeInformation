[{"lineNumber": 32, "col_offset": 0, "nodeName": "test_gpu_memory_profiler_symbolic", "type": "Callable[[], Any]"}, {"lineNumber": 112, "col_offset": 0, "nodeName": "test_gpu_memory_profiler_gluon", "type": "Callable[[], Any]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "curr_path", "type": "str"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "set_default_context", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "executor", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "c", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 24, "col_offset": 34, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "curr_path", "type": "str"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "enable_profiler", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "set_state", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "B", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "C", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "_simple_bind", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "copyto", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "copyto", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "forward", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "backward", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "waitall", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "set_state", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "dump", "type": "Any"}, {"lineNumber": 88, "col_offset": 76, "nodeName": "csv_file", "type": "file"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "csv_reader", "type": "csv.DictReader"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "csv_reader", "type": "csv.DictReader"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "expected_alloc_entry", "type": "Dict[str, str]"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "expected_alloc_entries", "type": "List[Dict[str, str]]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "csv_reader", "type": "csv.DictReader"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "enable_profiler", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "set_state", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "backward", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "waitall", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "set_state", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "dump", "type": "Any"}, {"lineNumber": 165, "col_offset": 76, "nodeName": "csv_file", "type": "file"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "csv_reader", "type": "csv.DictReader"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "csv_reader", "type": "csv.DictReader"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "csv_reader", "type": "csv.DictReader"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "mx", "type": "Any"}, {"lineNumber": 24, "col_offset": 34, "nodeName": "mx", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "path", "type": "module"}, {"lineNumber": 26, "col_offset": 44, "nodeName": "expanduser", "type": "Callable"}, {"lineNumber": 26, "col_offset": 63, "nodeName": "__file__", "type": "str"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "sys", "type": "module"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "profiler", "type": "Any"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "scope", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "dot", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "A", "type": "Any"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "B", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "C", "type": "Any"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "scope", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "arg_dict", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "arg_dict", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "executor", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "executor", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "executor", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "nd", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "profiler", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "profiler", "type": "Any"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "DictReader", "type": "Type[csv.DictReader]"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "csv_file", "type": "file"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "entry_found", "type": "bool"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "csv_reader", "type": "csv.DictReader"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "entry_found", "type": "bool"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "seek", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "profiler", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 122, "col_offset": 14, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "sym", "type": "Any"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "record", "type": "Any"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "nd", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "profiler", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "profiler", "type": "Any"}, {"lineNumber": 165, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "DictReader", "type": "Type[csv.DictReader]"}, {"lineNumber": 166, "col_offset": 36, "nodeName": "csv_file", "type": "file"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "values", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "expected_arg_size", "type": "str"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "entry_found", "type": "bool"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "csv_reader", "type": "csv.DictReader"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "entry_found", "type": "bool"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "seek", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "os", "type": "module"}, {"lineNumber": 26, "col_offset": 44, "nodeName": "path", "type": "module"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "profiler", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "sym", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "sym", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "mx", "type": "Any"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "profiler", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "executor", "type": "Any"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "executor", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "csv", "type": "module"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "seek", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "csv_file", "type": "file"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 122, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "mx", "type": "Any"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "csv", "type": "module"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "seek", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 182, "col_offset": 32, "nodeName": "expected_arg_name", "type": "Any"}, {"lineNumber": 183, "col_offset": 32, "nodeName": "expected_arg_size", "type": "str"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "csv_file", "type": "file"}, {"lineNumber": 26, "col_offset": 44, "nodeName": "os", "type": "module"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 60, "col_offset": 40, "nodeName": "size", "type": "Any"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "size", "type": "Any"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "size", "type": "Any"}, {"lineNumber": 66, "col_offset": 40, "nodeName": "size", "type": "Any"}, {"lineNumber": 68, "col_offset": 40, "nodeName": "size", "type": "Any"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "size", "type": "Any"}, {"lineNumber": 72, "col_offset": 40, "nodeName": "size", "type": "Any"}, {"lineNumber": 88, "col_offset": 49, "nodeName": "getpid", "type": "Callable[[], int]"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "csv_file", "type": "file"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "entry_found", "type": "bool"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "expected_alloc_entry", "type": "Dict[str, str]"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "expected_alloc_entry", "type": "Dict[str, str]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "mx", "type": "Any"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "mx", "type": "Any"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 165, "col_offset": 49, "nodeName": "getpid", "type": "Callable[[], int]"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "param", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "csv_file", "type": "file"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "entry_found", "type": "bool"}, {"lineNumber": 60, "col_offset": 40, "nodeName": "a", "type": "Any"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "b", "type": "Any"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "c", "type": "Any"}, {"lineNumber": 66, "col_offset": 40, "nodeName": "a", "type": "Any"}, {"lineNumber": 68, "col_offset": 40, "nodeName": "b", "type": "Any"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "a", "type": "Any"}, {"lineNumber": 72, "col_offset": 40, "nodeName": "b", "type": "Any"}, {"lineNumber": 88, "col_offset": 49, "nodeName": "os", "type": "module"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 129, "col_offset": 46, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 165, "col_offset": 49, "nodeName": "os", "type": "module"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 170, "col_offset": 46, "nodeName": "attr", "type": "Any"}, {"lineNumber": 172, "col_offset": 40, "nodeName": "prod", "type": "Any"}, {"lineNumber": 172, "col_offset": 48, "nodeName": "shape", "type": "Any"}, {"lineNumber": 176, "col_offset": 44, "nodeName": "expected_arg_name", "type": "Any"}, {"lineNumber": 177, "col_offset": 44, "nodeName": "expected_arg_size", "type": "str"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "values", "type": "Callable"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 96, "col_offset": 44, "nodeName": "expected_alloc_entry", "type": "Dict[str, str]"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 97, "col_offset": 44, "nodeName": "expected_alloc_entry", "type": "Dict[str, str]"}, {"lineNumber": 129, "col_offset": 46, "nodeName": "mx", "type": "Any"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "values", "type": "Callable"}, {"lineNumber": 172, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 48, "nodeName": "param", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 170, "col_offset": 46, "nodeName": "var", "type": "Any"}, {"lineNumber": 170, "col_offset": 46, "nodeName": "param", "type": "Any"}]