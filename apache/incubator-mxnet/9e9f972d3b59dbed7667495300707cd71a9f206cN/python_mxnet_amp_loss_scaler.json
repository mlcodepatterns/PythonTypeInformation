[{"lineNumber": 26, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "_loss_scale", "type": "float"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "_next_loss_scale", "type": "float"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "_loss_scale", "type": "float"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "_max_loss_scale", "type": "float"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "_scale_seq_len", "type": "int"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "_unskipped", "type": "int"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "_loss_scale", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "has_overflow", "type": "bool"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "_loss_scale", "type": "float"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "_next_loss_scale", "type": "float"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "has_overflow", "type": "bool"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "has_overflow", "type": "bool"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "LossScaler"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "LossScaler"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "self", "type": "LossScaler"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "LossScaler"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "LossScaler"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "LossScaler"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "is_np_array", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "all_finite_f", "type": "Any"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "multi_all_finite", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "ones_f", "type": "Any"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "all_finite_f", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "multi_all_finite", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "ones_f", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "chunk_size", "type": "int"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "valid_params", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "gpu_output", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "nb_params", "type": "int"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "idx", "type": "int"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "LossScaler"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "self", "type": "LossScaler"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "_next_loss_scale", "type": "float"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "_unskipped", "type": "int"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "_unskipped", "type": "int"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "_unskipped", "type": "int"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "_scale_seq_len", "type": "int"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "_unskipped", "type": "int"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "_next_loss_scale", "type": "float"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "_internal", "type": "Any"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "pause", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "ones_f", "type": "Any"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "valid_params", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "nb_params", "type": "int"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "chunk_size", "type": "int"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "self", "type": "LossScaler"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "_loss_scale", "type": "float"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "LossScaler"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 61, "nodeName": "_next_loss_scale", "type": "float"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "self", "type": "LossScaler"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "self", "type": "LossScaler"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "self", "type": "LossScaler"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "self", "type": "LossScaler"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "LossScaler"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "min", "type": "Callable"}, {"lineNumber": 72, "col_offset": 40, "nodeName": "_max_loss_scale", "type": "float"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 61, "nodeName": "_next_loss_scale", "type": "float"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "ag", "type": "Any"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "_grad", "type": "Any"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "p", "type": "Any"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "params", "type": "Any"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "context", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "all_finite_f", "type": "Any"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "self", "type": "LossScaler"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 67, "col_offset": 61, "nodeName": "self", "type": "LossScaler"}, {"lineNumber": 72, "col_offset": 40, "nodeName": "self", "type": "LossScaler"}, {"lineNumber": 72, "col_offset": 62, "nodeName": "_loss_scale", "type": "float"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 73, "col_offset": 61, "nodeName": "self", "type": "LossScaler"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "p", "type": "Any"}, {"lineNumber": 55, "col_offset": 58, "nodeName": "_grad", "type": "Any"}, {"lineNumber": 61, "col_offset": 52, "nodeName": "gpu_output", "type": "Any"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "gpu_output", "type": "Any"}, {"lineNumber": 72, "col_offset": 62, "nodeName": "self", "type": "LossScaler"}, {"lineNumber": 55, "col_offset": 58, "nodeName": "p", "type": "Any"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "valid_params", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "valid_params", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "idx", "type": "int"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "valid_params", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 47, "nodeName": "idx", "type": "int"}, {"lineNumber": 59, "col_offset": 51, "nodeName": "chunk_size", "type": "int"}, {"lineNumber": 60, "col_offset": 57, "nodeName": "idx", "type": "int"}, {"lineNumber": 60, "col_offset": 61, "nodeName": "idx", "type": "int"}, {"lineNumber": 60, "col_offset": 65, "nodeName": "chunk_size", "type": "int"}]