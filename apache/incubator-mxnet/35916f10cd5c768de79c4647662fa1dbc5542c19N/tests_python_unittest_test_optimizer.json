[{"lineNumber": 30, "col_offset": 0, "nodeName": "test_learning_rate", "type": "Callable[[], Any]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "test_learning_rate_expect_user_warning", "type": "Callable[[], Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "test_lr_wd_mult", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "test_sgd", "type": "Callable[[], Any]"}, {"lineNumber": 187, "col_offset": 0, "nodeName": "test_sparse_sgd", "type": "Callable[[], Any]"}, {"lineNumber": 210, "col_offset": 0, "nodeName": "test_std_sparse_sgd", "type": "Callable[[], Any]"}, {"lineNumber": 234, "col_offset": 0, "nodeName": "test_nag", "type": "Callable[[], Any]"}, {"lineNumber": 259, "col_offset": 0, "nodeName": "test_lars", "type": "Callable[[], Any]"}, {"lineNumber": 284, "col_offset": 0, "nodeName": "test_lamb", "type": "Callable[[], Any]"}, {"lineNumber": 314, "col_offset": 0, "nodeName": "test_sgld", "type": "Callable[[], Any]"}, {"lineNumber": 340, "col_offset": 0, "nodeName": "test_ftml", "type": "Callable[[], Any]"}, {"lineNumber": 440, "col_offset": 0, "nodeName": "test_adam", "type": "Callable[[], Any]"}, {"lineNumber": 466, "col_offset": 0, "nodeName": "test_sparse_adam", "type": "Callable[[], Any]"}, {"lineNumber": 533, "col_offset": 0, "nodeName": "test_signum", "type": "Callable[[], Any]"}, {"lineNumber": 561, "col_offset": 0, "nodeName": "test_rms", "type": "Callable[[], Any]"}, {"lineNumber": 699, "col_offset": 0, "nodeName": "test_sparse_ftrl", "type": "Callable[[], Any]"}, {"lineNumber": 725, "col_offset": 0, "nodeName": "test_nadam", "type": "Callable[[], Any]"}, {"lineNumber": 817, "col_offset": 0, "nodeName": "test_adagrad", "type": "Callable[[], Any]"}, {"lineNumber": 838, "col_offset": 0, "nodeName": "test_sparse_adagrad", "type": "Callable[[], Any]"}, {"lineNumber": 862, "col_offset": 0, "nodeName": "test_adadelta", "type": "Callable[[], Any]"}, {"lineNumber": 883, "col_offset": 0, "nodeName": "test_dcasgd", "type": "Callable[[], Any]"}, {"lineNumber": 904, "col_offset": 0, "nodeName": "test_factor_scheduler", "type": "Callable[[], Any]"}, {"lineNumber": 919, "col_offset": 0, "nodeName": "test_multifactor_scheduler", "type": "Callable[[], Any]"}, {"lineNumber": 935, "col_offset": 0, "nodeName": "test_poly_scheduler", "type": "Callable[[], Any]"}, {"lineNumber": 950, "col_offset": 0, "nodeName": "test_cosine_scheduler", "type": "Callable[[], Any]"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 367, "col_offset": 19, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 596, "col_offset": 19, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 750, "col_offset": 22, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "o1", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "lr_s", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "o2", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "base_lr", "type": "float"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "lr_s", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "o3", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "lr_s", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "o", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "bias", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "fc1", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "fc2", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "args1", "type": "Dict[Any, Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "args2", "type": "Dict[Any, Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "opt1", "type": "Type[PySparseSGD]"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "PySparseSGD", "type": "Type[PySparseSGD]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 236, "col_offset": 11, "nodeName": "NAG", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "NAG", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "LARS", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 262, "col_offset": 11, "nodeName": "LARS", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "eta_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "mom_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 286, "col_offset": 11, "nodeName": "LAMB", "type": "Any"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "LAMB", "type": "Any"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "bc_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "lb_options", "type": "List[Union[Dict[str, None], Dict[str, float]]]"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "ub_options", "type": "List[Union[Dict[str, None], Dict[str, int]]]"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 316, "col_offset": 11, "nodeName": "SGLD", "type": "Any"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 317, "col_offset": 11, "nodeName": "SGLD", "type": "Any"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "ns_options", "type": "List[int]"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "seed", "type": "int"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "ns_options", "type": "List[int]"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 342, "col_offset": 11, "nodeName": "FTML", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 343, "col_offset": 11, "nodeName": "FTML", "type": "Any"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 367, "col_offset": 19, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 442, "col_offset": 11, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 443, "col_offset": 11, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "opt1", "type": "Type[PySparseAdam]"}, {"lineNumber": 468, "col_offset": 11, "nodeName": "PySparseAdam", "type": "Type[PySparseAdam]"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 469, "col_offset": 11, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 512, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 512, "col_offset": 11, "nodeName": "Adamax", "type": "Any"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 513, "col_offset": 11, "nodeName": "Adamax", "type": "Any"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 518, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 535, "col_offset": 11, "nodeName": "Signum", "type": "Any"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 536, "col_offset": 11, "nodeName": "Signum", "type": "Any"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "wd_lh_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 542, "col_offset": 4, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "lr_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 544, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 563, "col_offset": 11, "nodeName": "RMSProp", "type": "Any"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 564, "col_offset": 11, "nodeName": "RMSProp", "type": "Any"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "rho_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 567, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 568, "col_offset": 4, "nodeName": "cw_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 569, "col_offset": 4, "nodeName": "center_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "mom_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 573, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 596, "col_offset": 19, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 675, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 675, "col_offset": 11, "nodeName": "Ftrl", "type": "Any"}, {"lineNumber": 676, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 676, "col_offset": 11, "nodeName": "Ftrl", "type": "Any"}, {"lineNumber": 677, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 678, "col_offset": 4, "nodeName": "lamda1_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 679, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 680, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 681, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 682, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 701, "col_offset": 4, "nodeName": "opt1", "type": "Type[PySparseFtrl]"}, {"lineNumber": 701, "col_offset": 11, "nodeName": "PySparseFtrl", "type": "Type[PySparseFtrl]"}, {"lineNumber": 702, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 702, "col_offset": 11, "nodeName": "Ftrl", "type": "Any"}, {"lineNumber": 703, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 704, "col_offset": 4, "nodeName": "lamda1_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 705, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 706, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 707, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 708, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 727, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 727, "col_offset": 11, "nodeName": "Nadam", "type": "Any"}, {"lineNumber": 728, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 728, "col_offset": 11, "nodeName": "Nadam", "type": "Any"}, {"lineNumber": 729, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 730, "col_offset": 4, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 731, "col_offset": 4, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 732, "col_offset": 4, "nodeName": "schedule_decay_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 733, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 734, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 735, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 736, "col_offset": 4, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 739, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 750, "col_offset": 22, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 819, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 819, "col_offset": 11, "nodeName": "AdaGrad", "type": "Any"}, {"lineNumber": 820, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 820, "col_offset": 11, "nodeName": "AdaGrad", "type": "Any"}, {"lineNumber": 821, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 822, "col_offset": 4, "nodeName": "eps_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 823, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 824, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 825, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 828, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 840, "col_offset": 4, "nodeName": "opt1", "type": "Type[PySparseAdaGrad]"}, {"lineNumber": 840, "col_offset": 11, "nodeName": "PySparseAdaGrad", "type": "Type[PySparseAdaGrad]"}, {"lineNumber": 841, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 841, "col_offset": 11, "nodeName": "AdaGrad", "type": "Any"}, {"lineNumber": 842, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 843, "col_offset": 4, "nodeName": "eps_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 844, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 845, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 846, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 849, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 864, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 864, "col_offset": 11, "nodeName": "AdaDelta", "type": "Any"}, {"lineNumber": 865, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 865, "col_offset": 11, "nodeName": "AdaDelta", "type": "Any"}, {"lineNumber": 866, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 867, "col_offset": 4, "nodeName": "rho_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 868, "col_offset": 4, "nodeName": "eps_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 869, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 870, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 871, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 874, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 885, "col_offset": 4, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 885, "col_offset": 11, "nodeName": "DCASGD", "type": "Any"}, {"lineNumber": 886, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 886, "col_offset": 11, "nodeName": "DCASGD", "type": "Any"}, {"lineNumber": 887, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "lamda_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 889, "col_offset": 4, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 890, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 891, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 892, "col_offset": 4, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 895, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 905, "col_offset": 4, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 906, "col_offset": 4, "nodeName": "step", "type": "int"}, {"lineNumber": 907, "col_offset": 4, "nodeName": "factor", "type": "float"}, {"lineNumber": 920, "col_offset": 4, "nodeName": "base_lr", "type": "float"}, {"lineNumber": 921, "col_offset": 4, "nodeName": "steps", "type": "List[int]"}, {"lineNumber": 922, "col_offset": 4, "nodeName": "factor", "type": "float"}, {"lineNumber": 936, "col_offset": 4, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 937, "col_offset": 4, "nodeName": "final_lr", "type": "int"}, {"lineNumber": 938, "col_offset": 4, "nodeName": "steps", "type": "int"}, {"lineNumber": 952, "col_offset": 4, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 953, "col_offset": 4, "nodeName": "final_lr", "type": "float"}, {"lineNumber": 954, "col_offset": 4, "nodeName": "steps", "type": "int"}, {"lineNumber": 955, "col_offset": 4, "nodeName": "cosine_sched", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "set_learning_rate", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "FactorScheduler", "type": "Any"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "FactorScheduler", "type": "Any"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "FactorScheduler", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 60, "col_offset": 10, "nodeName": "FullyConnected", "type": "Any"}, {"lineNumber": 61, "col_offset": 10, "nodeName": "FullyConnected", "type": "Any"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "Module", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "bind", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "init_params", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "args1", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "forward", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "backward", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "update", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "args2", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "lr_mult", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "wd_mult", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "almost_equal", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "mx", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "momentum", "type": "Any"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "momentum", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 198, "col_offset": 18, "nodeName": "float32", "type": "Any"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 222, "col_offset": 18, "nodeName": "float32", "type": "Any"}, {"lineNumber": 236, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 247, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 247, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 262, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 272, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 272, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 286, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 301, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 301, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 316, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 317, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 342, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 343, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 354, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 354, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 367, "col_offset": 19, "nodeName": "mx", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 372, "col_offset": 21, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 373, "col_offset": 21, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 374, "col_offset": 23, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "lazy_update", "type": "Any"}, {"lineNumber": 375, "col_offset": 27, "nodeName": "lazy_update", "type": "Any"}, {"lineNumber": 442, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 443, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 453, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 453, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 469, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 479, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 479, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 512, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 513, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 523, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 523, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 535, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 536, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 547, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 547, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 563, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 564, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 576, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 576, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 596, "col_offset": 19, "nodeName": "mx", "type": "Any"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "lamda1", "type": "Any"}, {"lineNumber": 617, "col_offset": 22, "nodeName": "lamda1", "type": "Any"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "beta", "type": "Any"}, {"lineNumber": 618, "col_offset": 20, "nodeName": "beta", "type": "Any"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 619, "col_offset": 18, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 675, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 676, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 685, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 685, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 702, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 711, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 711, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 727, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 728, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 739, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 739, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 750, "col_offset": 22, "nodeName": "mx", "type": "Any"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 771, "col_offset": 23, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 819, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 820, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 828, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 828, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 841, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 849, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 849, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 864, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 865, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 874, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 874, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 885, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 886, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 895, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 895, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 908, "col_offset": 12, "nodeName": "FactorScheduler", "type": "Any"}, {"lineNumber": 908, "col_offset": 44, "nodeName": "step", "type": "int"}, {"lineNumber": 908, "col_offset": 50, "nodeName": "factor", "type": "float"}, {"lineNumber": 912, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 913, "col_offset": 25, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 913, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 915, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 916, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 923, "col_offset": 12, "nodeName": "MultiFactorScheduler", "type": "Any"}, {"lineNumber": 923, "col_offset": 49, "nodeName": "steps", "type": "List[int]"}, {"lineNumber": 923, "col_offset": 56, "nodeName": "factor", "type": "float"}, {"lineNumber": 927, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 928, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 928, "col_offset": 46, "nodeName": "base_lr", "type": "float"}, {"lineNumber": 929, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 930, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 931, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 932, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 939, "col_offset": 17, "nodeName": "PolyScheduler", "type": "Any"}, {"lineNumber": 939, "col_offset": 47, "nodeName": "steps", "type": "int"}, {"lineNumber": 942, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 943, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 944, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 944, "col_offset": 52, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 947, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 947, "col_offset": 54, "nodeName": "final_lr", "type": "int"}, {"lineNumber": 955, "col_offset": 19, "nodeName": "CosineScheduler", "type": "Any"}, {"lineNumber": 955, "col_offset": 51, "nodeName": "steps", "type": "int"}, {"lineNumber": 956, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 956, "col_offset": 52, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 957, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 957, "col_offset": 56, "nodeName": "final_lr", "type": "float"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "o1", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "o1", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 37, "col_offset": 45, "nodeName": "lr_s", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "o2", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "o2", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "o2", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 43, "col_offset": 45, "nodeName": "lr_s", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "o3", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "lr_s", "type": "Any"}, {"lineNumber": 52, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "set_learning_rate", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "sym", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "sym", "type": "Any"}, {"lineNumber": 60, "col_offset": 10, "nodeName": "sym", "type": "Any"}, {"lineNumber": 60, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 60, "col_offset": 48, "nodeName": "bias", "type": "Any"}, {"lineNumber": 61, "col_offset": 10, "nodeName": "sym", "type": "Any"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "fc1", "type": "Any"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "mod", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "fc2", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "mod", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "DataBatch", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "get_outputs", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "mod", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "args1", "type": "Dict[Any, Any]"}, {"lineNumber": 77, "col_offset": 59, "nodeName": "args2", "type": "Dict[Any, Any]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "almost_equal", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "almost_equal", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 93, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 96, "col_offset": 53, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 96, "col_offset": 65, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 97, "col_offset": 40, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 97, "col_offset": 52, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 97, "col_offset": 64, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "momentum", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "weight", "type": "Any"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "grad", "type": "Any"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "state", "type": "Any"}, {"lineNumber": 154, "col_offset": 42, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 154, "col_offset": 46, "nodeName": "indices", "type": "Any"}, {"lineNumber": 154, "col_offset": 55, "nodeName": "weights", "type": "Any"}, {"lineNumber": 154, "col_offset": 64, "nodeName": "grads", "type": "Any"}, {"lineNumber": 154, "col_offset": 71, "nodeName": "states", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "lr", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "wd", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "num_rows", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 197, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 198, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 199, "col_offset": 40, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 199, "col_offset": 53, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 199, "col_offset": 65, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 200, "col_offset": 40, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 200, "col_offset": 52, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 220, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 222, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 223, "col_offset": 40, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 223, "col_offset": 53, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 223, "col_offset": 65, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 224, "col_offset": 40, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 224, "col_offset": 52, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 236, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 245, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 247, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 247, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 248, "col_offset": 40, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 248, "col_offset": 53, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 248, "col_offset": 65, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 249, "col_offset": 40, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 249, "col_offset": 52, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 249, "col_offset": 64, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 262, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 271, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 272, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 272, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 273, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 273, "col_offset": 40, "nodeName": "eta_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 273, "col_offset": 53, "nodeName": "mom_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 273, "col_offset": 66, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 273, "col_offset": 78, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 274, "col_offset": 40, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 274, "col_offset": 52, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 274, "col_offset": 64, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 286, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 301, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 301, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 302, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 302, "col_offset": 40, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 302, "col_offset": 55, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 302, "col_offset": 70, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 302, "col_offset": 82, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 303, "col_offset": 40, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 303, "col_offset": 52, "nodeName": "bc_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 303, "col_offset": 64, "nodeName": "lb_options", "type": "List[Union[Dict[str, None], Dict[str, float]]]"}, {"lineNumber": 303, "col_offset": 76, "nodeName": "ub_options", "type": "List[Union[Dict[str, None], Dict[str, int]]]"}, {"lineNumber": 304, "col_offset": 40, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 304, "col_offset": 52, "nodeName": "agg_options", "type": "List[Dict[str, int]]"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 316, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 317, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 324, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 327, "col_offset": 22, "nodeName": "float16", "type": "Any"}, {"lineNumber": 327, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "params", "type": "Union[Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]]]"}, {"lineNumber": 342, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 343, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 352, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 354, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 354, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 355, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 355, "col_offset": 40, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 355, "col_offset": 55, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 355, "col_offset": 70, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 356, "col_offset": 40, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 356, "col_offset": 52, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 356, "col_offset": 64, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 356, "col_offset": 76, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 405, "col_offset": 19, "nodeName": "weight", "type": "Any"}, {"lineNumber": 405, "col_offset": 27, "nodeName": "grad", "type": "Any"}, {"lineNumber": 405, "col_offset": 33, "nodeName": "state", "type": "Any"}, {"lineNumber": 405, "col_offset": 42, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 405, "col_offset": 46, "nodeName": "indices", "type": "Any"}, {"lineNumber": 405, "col_offset": 55, "nodeName": "weights", "type": "Any"}, {"lineNumber": 405, "col_offset": 64, "nodeName": "grads", "type": "Any"}, {"lineNumber": 405, "col_offset": 71, "nodeName": "states", "type": "Any"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "lr", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "wd", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 411, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "num_rows", "type": "Any"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "coef1", "type": "Any"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "coef2", "type": "Any"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "lr", "type": "Any"}, {"lineNumber": 418, "col_offset": 16, "nodeName": "row", "type": "int"}, {"lineNumber": 442, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 443, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 452, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 453, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 453, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 454, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 454, "col_offset": 40, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 454, "col_offset": 55, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 454, "col_offset": 70, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 455, "col_offset": 40, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 455, "col_offset": 52, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 455, "col_offset": 64, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 455, "col_offset": 76, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 469, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 478, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 479, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 479, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 480, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 480, "col_offset": 40, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 480, "col_offset": 55, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 480, "col_offset": 70, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 481, "col_offset": 40, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 481, "col_offset": 52, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 481, "col_offset": 64, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 481, "col_offset": 76, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 482, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 512, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 513, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 522, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 523, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 523, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 524, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 524, "col_offset": 40, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 524, "col_offset": 55, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 524, "col_offset": 70, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 525, "col_offset": 40, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 525, "col_offset": 52, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 525, "col_offset": 64, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 525, "col_offset": 76, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 526, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 535, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 536, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 546, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 547, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 547, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 548, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 548, "col_offset": 40, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 548, "col_offset": 52, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 548, "col_offset": 64, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 549, "col_offset": 40, "nodeName": "wd_lh_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 549, "col_offset": 55, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 549, "col_offset": 68, "nodeName": "lr_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 550, "col_offset": 40, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 550, "col_offset": 52, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 551, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 563, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 564, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 575, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 576, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 576, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "rtol", "type": "float"}, {"lineNumber": 578, "col_offset": 14, "nodeName": "atol", "type": "float"}, {"lineNumber": 580, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 580, "col_offset": 40, "nodeName": "rho_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 580, "col_offset": 53, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 580, "col_offset": 65, "nodeName": "cw_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 581, "col_offset": 40, "nodeName": "center_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 581, "col_offset": 56, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 581, "col_offset": 68, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 582, "col_offset": 40, "nodeName": "mom_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 582, "col_offset": 53, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 582, "col_offset": 65, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 583, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 641, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 641, "col_offset": 19, "nodeName": "weight", "type": "Any"}, {"lineNumber": 641, "col_offset": 27, "nodeName": "grad", "type": "Any"}, {"lineNumber": 641, "col_offset": 33, "nodeName": "state", "type": "Any"}, {"lineNumber": 641, "col_offset": 42, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 641, "col_offset": 46, "nodeName": "indices", "type": "Any"}, {"lineNumber": 641, "col_offset": 55, "nodeName": "weights", "type": "Any"}, {"lineNumber": 641, "col_offset": 64, "nodeName": "grads", "type": "Any"}, {"lineNumber": 641, "col_offset": 71, "nodeName": "states", "type": "Any"}, {"lineNumber": 643, "col_offset": 12, "nodeName": "wd", "type": "Any"}, {"lineNumber": 644, "col_offset": 12, "nodeName": "lr", "type": "Any"}, {"lineNumber": 645, "col_offset": 12, "nodeName": "num_rows", "type": "Any"}, {"lineNumber": 647, "col_offset": 19, "nodeName": "state", "type": "Any"}, {"lineNumber": 648, "col_offset": 16, "nodeName": "row", "type": "int"}, {"lineNumber": 675, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 676, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 684, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 685, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 685, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 686, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 686, "col_offset": 40, "nodeName": "lamda1_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 686, "col_offset": 56, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 687, "col_offset": 40, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 687, "col_offset": 52, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 688, "col_offset": 40, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 688, "col_offset": 52, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 689, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 702, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 710, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 711, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 711, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 712, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 712, "col_offset": 40, "nodeName": "lamda1_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 712, "col_offset": 56, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 713, "col_offset": 40, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 713, "col_offset": 52, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 714, "col_offset": 40, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 714, "col_offset": 52, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 715, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 727, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 728, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 738, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 739, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 739, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 740, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 740, "col_offset": 40, "nodeName": "beta1_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 740, "col_offset": 55, "nodeName": "beta2_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 740, "col_offset": 70, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 741, "col_offset": 40, "nodeName": "schedule_decay_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 741, "col_offset": 64, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 741, "col_offset": 76, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 742, "col_offset": 40, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 742, "col_offset": 52, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 743, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "self", "type": "PySparseAdaGrad"}, {"lineNumber": 774, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 774, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 774, "col_offset": 41, "nodeName": "context", "type": "Any"}, {"lineNumber": 792, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 792, "col_offset": 19, "nodeName": "weight", "type": "Any"}, {"lineNumber": 792, "col_offset": 27, "nodeName": "grad", "type": "Any"}, {"lineNumber": 792, "col_offset": 33, "nodeName": "state", "type": "Any"}, {"lineNumber": 792, "col_offset": 42, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 792, "col_offset": 46, "nodeName": "indices", "type": "Any"}, {"lineNumber": 792, "col_offset": 55, "nodeName": "weights", "type": "Any"}, {"lineNumber": 792, "col_offset": 64, "nodeName": "grads", "type": "Any"}, {"lineNumber": 792, "col_offset": 71, "nodeName": "states", "type": "Any"}, {"lineNumber": 794, "col_offset": 12, "nodeName": "wd", "type": "Any"}, {"lineNumber": 795, "col_offset": 12, "nodeName": "lr", "type": "Any"}, {"lineNumber": 796, "col_offset": 12, "nodeName": "num_rows", "type": "Any"}, {"lineNumber": 798, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 798, "col_offset": 22, "nodeName": "state", "type": "Any"}, {"lineNumber": 799, "col_offset": 16, "nodeName": "row", "type": "int"}, {"lineNumber": 819, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 820, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 827, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 828, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 828, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 829, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 829, "col_offset": 40, "nodeName": "eps_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 829, "col_offset": 53, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 830, "col_offset": 40, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 830, "col_offset": 52, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 830, "col_offset": 64, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 831, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 841, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 848, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 849, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 849, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 850, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 850, "col_offset": 40, "nodeName": "eps_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 850, "col_offset": 53, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 851, "col_offset": 40, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 851, "col_offset": 52, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 851, "col_offset": 64, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 852, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 864, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 865, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 873, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 874, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 874, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 875, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 875, "col_offset": 40, "nodeName": "rho_options", "type": "List[Dict[str, float]]"}, {"lineNumber": 875, "col_offset": 53, "nodeName": "eps_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 875, "col_offset": 66, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 876, "col_offset": 40, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 876, "col_offset": 52, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 876, "col_offset": 64, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 877, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 885, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 886, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 894, "col_offset": 59, "nodeName": "inf", "type": "Any"}, {"lineNumber": 895, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 895, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 896, "col_offset": 22, "nodeName": "product", "type": "Callable"}, {"lineNumber": 896, "col_offset": 40, "nodeName": "lamda_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 896, "col_offset": 55, "nodeName": "mom_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 896, "col_offset": 68, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 897, "col_offset": 40, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 897, "col_offset": 52, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 897, "col_offset": 64, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 898, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 908, "col_offset": 12, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 908, "col_offset": 87, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 911, "col_offset": 12, "nodeName": "sched", "type": "Any"}, {"lineNumber": 912, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 912, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 913, "col_offset": 12, "nodeName": "sched", "type": "Any"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 914, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 914, "col_offset": 47, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 914, "col_offset": 57, "nodeName": "factor", "type": "float"}, {"lineNumber": 915, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 915, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 915, "col_offset": 66, "nodeName": "factor", "type": "float"}, {"lineNumber": 916, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 916, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 923, "col_offset": 12, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 923, "col_offset": 72, "nodeName": "base_lr", "type": "float"}, {"lineNumber": 926, "col_offset": 11, "nodeName": "sched", "type": "Any"}, {"lineNumber": 927, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 927, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 928, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 928, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 929, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 929, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 929, "col_offset": 46, "nodeName": "base_lr", "type": "float"}, {"lineNumber": 929, "col_offset": 56, "nodeName": "factor", "type": "float"}, {"lineNumber": 930, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 930, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 930, "col_offset": 46, "nodeName": "base_lr", "type": "float"}, {"lineNumber": 930, "col_offset": 56, "nodeName": "factor", "type": "float"}, {"lineNumber": 931, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 931, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 931, "col_offset": 65, "nodeName": "factor", "type": "float"}, {"lineNumber": 932, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 932, "col_offset": 35, "nodeName": "sched", "type": "Any"}, {"lineNumber": 932, "col_offset": 66, "nodeName": "factor", "type": "float"}, {"lineNumber": 939, "col_offset": 17, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 939, "col_offset": 62, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 939, "col_offset": 87, "nodeName": "final_lr", "type": "int"}, {"lineNumber": 942, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 942, "col_offset": 35, "nodeName": "poly_sched", "type": "Any"}, {"lineNumber": 943, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 943, "col_offset": 35, "nodeName": "poly_sched", "type": "Any"}, {"lineNumber": 944, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 944, "col_offset": 35, "nodeName": "poly_sched", "type": "Any"}, {"lineNumber": 945, "col_offset": 12, "nodeName": "poly_sched", "type": "Any"}, {"lineNumber": 945, "col_offset": 31, "nodeName": "poly_sched", "type": "Any"}, {"lineNumber": 946, "col_offset": 12, "nodeName": "poly_sched", "type": "Any"}, {"lineNumber": 947, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 947, "col_offset": 35, "nodeName": "poly_sched", "type": "Any"}, {"lineNumber": 947, "col_offset": 46, "nodeName": "steps", "type": "int"}, {"lineNumber": 955, "col_offset": 19, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 955, "col_offset": 66, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 955, "col_offset": 84, "nodeName": "final_lr", "type": "float"}, {"lineNumber": 956, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 956, "col_offset": 35, "nodeName": "cosine_sched", "type": "Any"}, {"lineNumber": 957, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 957, "col_offset": 35, "nodeName": "cosine_sched", "type": "Any"}, {"lineNumber": 957, "col_offset": 48, "nodeName": "steps", "type": "int"}, {"lineNumber": 958, "col_offset": 12, "nodeName": "cosine_sched", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "mx", "type": "Any"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "mx", "type": "Any"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "mx", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "mx", "type": "Any"}, {"lineNumber": 52, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "o", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 60, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 61, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 63, "col_offset": 62, "nodeName": "default_context", "type": "Any"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "Uniform", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "k", "type": "Any"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "v", "type": "Any"}, {"lineNumber": 68, "col_offset": 40, "nodeName": "items", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "io", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "mod", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "k", "type": "Any"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "v", "type": "Any"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "items", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "mod", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "mod", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "args1", "type": "Dict[Any, Any]"}, {"lineNumber": 78, "col_offset": 61, "nodeName": "args2", "type": "Dict[Any, Any]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "args1", "type": "Dict[Any, Any]"}, {"lineNumber": 79, "col_offset": 63, "nodeName": "args2", "type": "Dict[Any, Any]"}, {"lineNumber": 93, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "float16", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "float16", "type": "Any"}, {"lineNumber": 121, "col_offset": 56, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 121, "col_offset": 73, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 136, "col_offset": 45, "nodeName": "context", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "_get_lr", "type": "Any"}, {"lineNumber": 155, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "_get_wd", "type": "Any"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "_update_count", "type": "Any"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "index", "type": "Any"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "momentum", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "row", "type": "int"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "mom", "type": "Any"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "state", "type": "Any"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "row", "type": "int"}, {"lineNumber": 197, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 203, "col_offset": 84, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 203, "col_offset": 92, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 206, "col_offset": 84, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 206, "col_offset": 92, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 220, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 227, "col_offset": 85, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 227, "col_offset": 93, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 230, "col_offset": 85, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 230, "col_offset": 93, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 245, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 250, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 256, "col_offset": 30, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 256, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 271, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 273, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 275, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 275, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 281, "col_offset": 30, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 281, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 302, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 305, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 305, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 311, "col_offset": 30, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 311, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 324, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 327, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 327, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 328, "col_offset": 26, "nodeName": "product", "type": "Callable"}, {"lineNumber": 328, "col_offset": 44, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 328, "col_offset": 56, "nodeName": "wd_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 328, "col_offset": 68, "nodeName": "mp_options", "type": "List[Dict[str, bool]]"}, {"lineNumber": 328, "col_offset": 80, "nodeName": "agg_options", "type": "List[Union[Dict[str, int], Dict[str, Any]]]"}, {"lineNumber": 329, "col_offset": 16, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "atol", "type": "float"}, {"lineNumber": 334, "col_offset": 16, "nodeName": "rtol", "type": "float"}, {"lineNumber": 352, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 355, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 357, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 357, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 363, "col_offset": 30, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 363, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 371, "col_offset": 57, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 371, "col_offset": 74, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 386, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 386, "col_offset": 42, "nodeName": "context", "type": "Any"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 387, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 387, "col_offset": 42, "nodeName": "context", "type": "Any"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "_update_count", "type": "Any"}, {"lineNumber": 406, "col_offset": 31, "nodeName": "index", "type": "Any"}, {"lineNumber": 407, "col_offset": 17, "nodeName": "_get_lr", "type": "Any"}, {"lineNumber": 407, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 408, "col_offset": 17, "nodeName": "_get_wd", "type": "Any"}, {"lineNumber": 408, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 409, "col_offset": 16, "nodeName": "_index_update_count", "type": "Any"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "mean", "type": "Any"}, {"lineNumber": 411, "col_offset": 18, "nodeName": "variance", "type": "Any"}, {"lineNumber": 412, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 416, "col_offset": 37, "nodeName": "coef1", "type": "Any"}, {"lineNumber": 418, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 418, "col_offset": 29, "nodeName": "num_rows", "type": "Any"}, {"lineNumber": 425, "col_offset": 29, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 431, "col_offset": 29, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 434, "col_offset": 33, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 452, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 454, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 456, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 456, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 462, "col_offset": 66, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 462, "col_offset": 74, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 478, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 480, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 482, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 482, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 488, "col_offset": 85, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 488, "col_offset": 93, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 491, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 492, "col_offset": 84, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 493, "col_offset": 30, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 495, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 496, "col_offset": 85, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 497, "col_offset": 30, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 500, "col_offset": 84, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 501, "col_offset": 30, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 504, "col_offset": 85, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 505, "col_offset": 30, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 522, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 524, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 526, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 526, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 530, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 530, "col_offset": 60, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 530, "col_offset": 68, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 546, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 548, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 551, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 551, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 555, "col_offset": 12, "nodeName": "rtol", "type": "float"}, {"lineNumber": 555, "col_offset": 18, "nodeName": "atol", "type": "float"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 557, "col_offset": 66, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 557, "col_offset": 74, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 575, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 578, "col_offset": 37, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 578, "col_offset": 46, "nodeName": "float16", "type": "Any"}, {"lineNumber": 580, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 583, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 583, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 587, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 588, "col_offset": 66, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 588, "col_offset": 74, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 616, "col_offset": 45, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 622, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 622, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 622, "col_offset": 42, "nodeName": "context", "type": "Any"}, {"lineNumber": 623, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 623, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 623, "col_offset": 42, "nodeName": "context", "type": "Any"}, {"lineNumber": 642, "col_offset": 12, "nodeName": "_update_count", "type": "Any"}, {"lineNumber": 642, "col_offset": 31, "nodeName": "index", "type": "Any"}, {"lineNumber": 643, "col_offset": 17, "nodeName": "_get_wd", "type": "Any"}, {"lineNumber": 643, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 644, "col_offset": 17, "nodeName": "_get_lr", "type": "Any"}, {"lineNumber": 644, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 645, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 647, "col_offset": 12, "nodeName": "z", "type": "Any"}, {"lineNumber": 647, "col_offset": 15, "nodeName": "n", "type": "Any"}, {"lineNumber": 648, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 648, "col_offset": 29, "nodeName": "num_rows", "type": "Any"}, {"lineNumber": 649, "col_offset": 16, "nodeName": "all_zeros", "type": "Any"}, {"lineNumber": 650, "col_offset": 19, "nodeName": "all_zeros", "type": "Any"}, {"lineNumber": 652, "col_offset": 29, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 657, "col_offset": 16, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 659, "col_offset": 16, "nodeName": "denom", "type": "Any"}, {"lineNumber": 660, "col_offset": 16, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 660, "col_offset": 25, "nodeName": "denom", "type": "Any"}, {"lineNumber": 661, "col_offset": 16, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 661, "col_offset": 25, "nodeName": "lr", "type": "Any"}, {"lineNumber": 665, "col_offset": 16, "nodeName": "denom", "type": "Any"}, {"lineNumber": 665, "col_offset": 25, "nodeName": "beta", "type": "Any"}, {"lineNumber": 666, "col_offset": 16, "nodeName": "denom", "type": "Any"}, {"lineNumber": 666, "col_offset": 25, "nodeName": "lr", "type": "Any"}, {"lineNumber": 667, "col_offset": 16, "nodeName": "denom", "type": "Any"}, {"lineNumber": 667, "col_offset": 25, "nodeName": "wd", "type": "Any"}, {"lineNumber": 668, "col_offset": 16, "nodeName": "d", "type": "Any"}, {"lineNumber": 684, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 686, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 689, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 689, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 693, "col_offset": 12, "nodeName": "rtol", "type": "float"}, {"lineNumber": 693, "col_offset": 18, "nodeName": "atol", "type": "float"}, {"lineNumber": 694, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 695, "col_offset": 66, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 695, "col_offset": 74, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 710, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 712, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 715, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 715, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 719, "col_offset": 12, "nodeName": "rtol", "type": "float"}, {"lineNumber": 719, "col_offset": 18, "nodeName": "atol", "type": "float"}, {"lineNumber": 720, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 720, "col_offset": 60, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 721, "col_offset": 30, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 738, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 740, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 743, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 743, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 747, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 747, "col_offset": 60, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 747, "col_offset": 68, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 769, "col_offset": 60, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 770, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 774, "col_offset": 15, "nodeName": "nd", "type": "Any"}, {"lineNumber": 774, "col_offset": 27, "nodeName": "weight", "type": "Any"}, {"lineNumber": 774, "col_offset": 41, "nodeName": "weight", "type": "Any"}, {"lineNumber": 774, "col_offset": 63, "nodeName": "stype", "type": "Any"}, {"lineNumber": 793, "col_offset": 12, "nodeName": "_update_count", "type": "Any"}, {"lineNumber": 793, "col_offset": 31, "nodeName": "index", "type": "Any"}, {"lineNumber": 794, "col_offset": 17, "nodeName": "_get_wd", "type": "Any"}, {"lineNumber": 794, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 795, "col_offset": 17, "nodeName": "_get_lr", "type": "Any"}, {"lineNumber": 795, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 796, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 799, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 799, "col_offset": 29, "nodeName": "num_rows", "type": "Any"}, {"lineNumber": 800, "col_offset": 16, "nodeName": "all_zeros", "type": "Any"}, {"lineNumber": 801, "col_offset": 19, "nodeName": "all_zeros", "type": "Any"}, {"lineNumber": 803, "col_offset": 29, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 810, "col_offset": 16, "nodeName": "denom", "type": "Any"}, {"lineNumber": 811, "col_offset": 16, "nodeName": "denom", "type": "Any"}, {"lineNumber": 811, "col_offset": 25, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 827, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 829, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 831, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 831, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 832, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 832, "col_offset": 24, "nodeName": "float16", "type": "Any"}, {"lineNumber": 834, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 835, "col_offset": 66, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 835, "col_offset": 74, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 848, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 850, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 852, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 852, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 853, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 853, "col_offset": 24, "nodeName": "float16", "type": "Any"}, {"lineNumber": 873, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 875, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 877, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 877, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 878, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 878, "col_offset": 24, "nodeName": "float16", "type": "Any"}, {"lineNumber": 880, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 880, "col_offset": 60, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 880, "col_offset": 68, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 894, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 896, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 898, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 898, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 899, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 899, "col_offset": 24, "nodeName": "float16", "type": "Any"}, {"lineNumber": 901, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 901, "col_offset": 60, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 901, "col_offset": 68, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 908, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 912, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 915, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 915, "col_offset": 47, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 915, "col_offset": 57, "nodeName": "factor", "type": "float"}, {"lineNumber": 916, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 923, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 927, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 928, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 929, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 930, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 931, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 931, "col_offset": 46, "nodeName": "base_lr", "type": "float"}, {"lineNumber": 931, "col_offset": 56, "nodeName": "factor", "type": "float"}, {"lineNumber": 932, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 932, "col_offset": 47, "nodeName": "base_lr", "type": "float"}, {"lineNumber": 932, "col_offset": 57, "nodeName": "factor", "type": "float"}, {"lineNumber": 939, "col_offset": 17, "nodeName": "mx", "type": "Any"}, {"lineNumber": 942, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 943, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 943, "col_offset": 51, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 943, "col_offset": 57, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 944, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 947, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 955, "col_offset": 19, "nodeName": "mx", "type": "Any"}, {"lineNumber": 956, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 957, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "init", "type": "Any"}, {"lineNumber": 68, "col_offset": 40, "nodeName": "args1", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "args2", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "mx", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "mx", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "param", "type": "Union[Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any], Dict[str, int]]"}, {"lineNumber": 98, "col_offset": 39, "nodeName": "params", "type": "Union[Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]]]"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 109, "col_offset": 34, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "PySparseSGD", "type": "Type[PySparseSGD]"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "nd", "type": "Any"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "weight", "type": "Any"}, {"lineNumber": 136, "col_offset": 45, "nodeName": "weight", "type": "Any"}, {"lineNumber": 136, "col_offset": 67, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "num_rows", "type": "Any"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "grad_row", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "all_zeros", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "all_zeros", "type": "Any"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 173, "col_offset": 33, "nodeName": "num_rows", "type": "Any"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "grad_row", "type": "Any"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "all_zeros", "type": "Any"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "all_zeros", "type": "Any"}, {"lineNumber": 178, "col_offset": 33, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 182, "col_offset": 32, "nodeName": "momentum", "type": "Any"}, {"lineNumber": 201, "col_offset": 30, "nodeName": "param", "type": "Union[Dict[nothing, nothing], Dict[str, float], Dict[str, Any], Dict[str, int]]"}, {"lineNumber": 201, "col_offset": 39, "nodeName": "params", "type": "Union[Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]]]"}, {"lineNumber": 202, "col_offset": 30, "nodeName": "opt1", "type": "Type[PySparseSGD]"}, {"lineNumber": 203, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "opt1", "type": "Type[PySparseSGD]"}, {"lineNumber": 206, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "param", "type": "Union[Dict[nothing, nothing], Dict[str, float], Dict[str, int], Dict[str, Any]]"}, {"lineNumber": 225, "col_offset": 39, "nodeName": "params", "type": "Union[Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]]]"}, {"lineNumber": 226, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 227, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 230, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 250, "col_offset": 30, "nodeName": "param", "type": "Union[Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int], Dict[str, Any]]"}, {"lineNumber": 250, "col_offset": 39, "nodeName": "params", "type": "Union[Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]]]"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 255, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 275, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 275, "col_offset": 39, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 279, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 280, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 305, "col_offset": 39, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 306, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 309, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 310, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 328, "col_offset": 26, "nodeName": "itertools", "type": "module"}, {"lineNumber": 329, "col_offset": 25, "nodeName": "k", "type": "str"}, {"lineNumber": 329, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 335, "col_offset": 16, "nodeName": "compare_optimizer_noise_seeded", "type": "Any"}, {"lineNumber": 337, "col_offset": 47, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 337, "col_offset": 55, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 337, "col_offset": 62, "nodeName": "seed", "type": "int"}, {"lineNumber": 357, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 357, "col_offset": 39, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 358, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 361, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 362, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 371, "col_offset": 14, "nodeName": "PySparseAdam", "type": "Type[PySparseAdam]"}, {"lineNumber": 371, "col_offset": 28, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "nd", "type": "Any"}, {"lineNumber": 386, "col_offset": 28, "nodeName": "weight", "type": "Any"}, {"lineNumber": 386, "col_offset": 42, "nodeName": "weight", "type": "Any"}, {"lineNumber": 386, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "nd", "type": "Any"}, {"lineNumber": 387, "col_offset": 28, "nodeName": "weight", "type": "Any"}, {"lineNumber": 387, "col_offset": 42, "nodeName": "weight", "type": "Any"}, {"lineNumber": 387, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 407, "col_offset": 17, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 408, "col_offset": 17, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 409, "col_offset": 16, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 409, "col_offset": 41, "nodeName": "index", "type": "Any"}, {"lineNumber": 412, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 414, "col_offset": 25, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 414, "col_offset": 39, "nodeName": "t", "type": "Any"}, {"lineNumber": 415, "col_offset": 25, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 415, "col_offset": 39, "nodeName": "t", "type": "Any"}, {"lineNumber": 416, "col_offset": 18, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 416, "col_offset": 28, "nodeName": "coef2", "type": "Any"}, {"lineNumber": 420, "col_offset": 28, "nodeName": "almost_equal", "type": "Any"}, {"lineNumber": 423, "col_offset": 19, "nodeName": "all_zeros", "type": "Any"}, {"lineNumber": 423, "col_offset": 33, "nodeName": "lazy_update", "type": "Any"}, {"lineNumber": 425, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 425, "col_offset": 29, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 427, "col_offset": 19, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 429, "col_offset": 29, "nodeName": "wd", "type": "Any"}, {"lineNumber": 431, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 431, "col_offset": 29, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 432, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 434, "col_offset": 16, "nodeName": "variance", "type": "Any"}, {"lineNumber": 434, "col_offset": 33, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 435, "col_offset": 16, "nodeName": "variance", "type": "Any"}, {"lineNumber": 437, "col_offset": 16, "nodeName": "weight", "type": "Any"}, {"lineNumber": 456, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 456, "col_offset": 39, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 457, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 457, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 461, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 462, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 482, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 482, "col_offset": 39, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 483, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 483, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 487, "col_offset": 30, "nodeName": "opt1", "type": "Type[PySparseAdam]"}, {"lineNumber": 488, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 491, "col_offset": 30, "nodeName": "opt1", "type": "Type[PySparseAdam]"}, {"lineNumber": 492, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 495, "col_offset": 30, "nodeName": "opt1", "type": "Type[PySparseAdam]"}, {"lineNumber": 496, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 499, "col_offset": 30, "nodeName": "opt1", "type": "Type[PySparseAdam]"}, {"lineNumber": 500, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 503, "col_offset": 30, "nodeName": "opt1", "type": "Type[PySparseAdam]"}, {"lineNumber": 504, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 526, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 526, "col_offset": 39, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 527, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 527, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 530, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 530, "col_offset": 45, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 551, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 551, "col_offset": 39, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 552, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 552, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 555, "col_offset": 41, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 555, "col_offset": 50, "nodeName": "float16", "type": "Any"}, {"lineNumber": 556, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 557, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 558, "col_offset": 40, "nodeName": "rtol", "type": "float"}, {"lineNumber": 558, "col_offset": 51, "nodeName": "atol", "type": "float"}, {"lineNumber": 578, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 583, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 583, "col_offset": 39, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 584, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 584, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 587, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 588, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 589, "col_offset": 35, "nodeName": "rtol", "type": "float"}, {"lineNumber": 589, "col_offset": 46, "nodeName": "atol", "type": "float"}, {"lineNumber": 590, "col_offset": 15, "nodeName": "default_context", "type": "Any"}, {"lineNumber": 590, "col_offset": 36, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 591, "col_offset": 16, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 593, "col_offset": 34, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 593, "col_offset": 42, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 616, "col_offset": 14, "nodeName": "PySparseFtrl", "type": "Type[PySparseFtrl]"}, {"lineNumber": 616, "col_offset": 28, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 622, "col_offset": 16, "nodeName": "nd", "type": "Any"}, {"lineNumber": 622, "col_offset": 28, "nodeName": "weight", "type": "Any"}, {"lineNumber": 622, "col_offset": 42, "nodeName": "weight", "type": "Any"}, {"lineNumber": 622, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 623, "col_offset": 16, "nodeName": "nd", "type": "Any"}, {"lineNumber": 623, "col_offset": 28, "nodeName": "weight", "type": "Any"}, {"lineNumber": 623, "col_offset": 42, "nodeName": "weight", "type": "Any"}, {"lineNumber": 623, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 642, "col_offset": 12, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 643, "col_offset": 17, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 644, "col_offset": 17, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 645, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 649, "col_offset": 28, "nodeName": "almost_equal", "type": "Any"}, {"lineNumber": 652, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 652, "col_offset": 29, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 653, "col_offset": 19, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 658, "col_offset": 16, "nodeName": "n", "type": "Any"}, {"lineNumber": 658, "col_offset": 26, "nodeName": "square", "type": "Any"}, {"lineNumber": 659, "col_offset": 24, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 662, "col_offset": 16, "nodeName": "z", "type": "Any"}, {"lineNumber": 665, "col_offset": 25, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 669, "col_offset": 16, "nodeName": "weight", "type": "Any"}, {"lineNumber": 669, "col_offset": 36, "nodeName": "denom", "type": "Any"}, {"lineNumber": 689, "col_offset": 30, "nodeName": "param", "type": "Union[Dict[str, float], Dict[str, bool], Dict[str, int], Dict[nothing, nothing], Dict[str, Any]]"}, {"lineNumber": 689, "col_offset": 39, "nodeName": "params", "type": "Union[Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]]]"}, {"lineNumber": 690, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 690, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 693, "col_offset": 41, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 693, "col_offset": 50, "nodeName": "float16", "type": "Any"}, {"lineNumber": 694, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 695, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 696, "col_offset": 35, "nodeName": "rtol", "type": "float"}, {"lineNumber": 696, "col_offset": 46, "nodeName": "atol", "type": "float"}, {"lineNumber": 715, "col_offset": 30, "nodeName": "param", "type": "Union[Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any], Dict[str, int]]"}, {"lineNumber": 715, "col_offset": 39, "nodeName": "params", "type": "Union[Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]]]"}, {"lineNumber": 716, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 716, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 719, "col_offset": 41, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 719, "col_offset": 50, "nodeName": "float16", "type": "Any"}, {"lineNumber": 720, "col_offset": 30, "nodeName": "opt1", "type": "Type[PySparseFtrl]"}, {"lineNumber": 720, "col_offset": 45, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 722, "col_offset": 35, "nodeName": "rtol", "type": "float"}, {"lineNumber": 722, "col_offset": 46, "nodeName": "atol", "type": "float"}, {"lineNumber": 743, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 743, "col_offset": 39, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 744, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 744, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 747, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 747, "col_offset": 45, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 769, "col_offset": 14, "nodeName": "PySparseAdaGrad", "type": "Type[PySparseAdaGrad]"}, {"lineNumber": 769, "col_offset": 31, "nodeName": "self", "type": "PySparseAdaGrad"}, {"lineNumber": 774, "col_offset": 15, "nodeName": "mx", "type": "Any"}, {"lineNumber": 774, "col_offset": 63, "nodeName": "weight", "type": "Any"}, {"lineNumber": 793, "col_offset": 12, "nodeName": "self", "type": "PySparseAdaGrad"}, {"lineNumber": 794, "col_offset": 17, "nodeName": "self", "type": "PySparseAdaGrad"}, {"lineNumber": 795, "col_offset": 17, "nodeName": "self", "type": "PySparseAdaGrad"}, {"lineNumber": 796, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 800, "col_offset": 28, "nodeName": "almost_equal", "type": "Any"}, {"lineNumber": 803, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 803, "col_offset": 29, "nodeName": "self", "type": "PySparseAdaGrad"}, {"lineNumber": 804, "col_offset": 19, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 806, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 806, "col_offset": 29, "nodeName": "wd", "type": "Any"}, {"lineNumber": 809, "col_offset": 16, "nodeName": "history", "type": "Any"}, {"lineNumber": 809, "col_offset": 32, "nodeName": "square", "type": "Any"}, {"lineNumber": 810, "col_offset": 24, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 811, "col_offset": 25, "nodeName": "self", "type": "PySparseAdaGrad"}, {"lineNumber": 814, "col_offset": 16, "nodeName": "weight", "type": "Any"}, {"lineNumber": 814, "col_offset": 48, "nodeName": "denom", "type": "Any"}, {"lineNumber": 831, "col_offset": 30, "nodeName": "param", "type": "Union[Dict[str, float], Dict[nothing, nothing], Dict[str, int], Dict[str, Any]]"}, {"lineNumber": 831, "col_offset": 39, "nodeName": "params", "type": "Union[Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, int]]]"}, {"lineNumber": 832, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 833, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 834, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 835, "col_offset": 30, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 852, "col_offset": 30, "nodeName": "param", "type": "Union[Dict[str, float], Dict[str, Any], Dict[nothing, nothing], Dict[str, int]]"}, {"lineNumber": 852, "col_offset": 39, "nodeName": "params", "type": "Union[Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]]]"}, {"lineNumber": 853, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 854, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 855, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 856, "col_offset": 16, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 856, "col_offset": 85, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 856, "col_offset": 93, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 858, "col_offset": 16, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 858, "col_offset": 85, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 858, "col_offset": 93, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 877, "col_offset": 30, "nodeName": "param", "type": "Union[Dict[str, float], Dict[nothing, nothing], Dict[str, Any], Dict[str, int]]"}, {"lineNumber": 877, "col_offset": 39, "nodeName": "params", "type": "Union[Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float], Dict[str, float], Dict[nothing, nothing], Dict[str, int]]]"}, {"lineNumber": 878, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 879, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 880, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 880, "col_offset": 45, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 898, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 898, "col_offset": 39, "nodeName": "params", "type": "Any"}, {"lineNumber": 899, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 900, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 901, "col_offset": 30, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 901, "col_offset": 45, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 927, "col_offset": 53, "nodeName": "base_lr", "type": "float"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "mx", "type": "Any"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 98, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 98, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 98, "col_offset": 58, "nodeName": "items", "type": "Callable"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 66, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "mx", "type": "Any"}, {"lineNumber": 136, "col_offset": 67, "nodeName": "weight", "type": "Any"}, {"lineNumber": 162, "col_offset": 31, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "almost_equal", "type": "Any"}, {"lineNumber": 163, "col_offset": 59, "nodeName": "grad_row", "type": "Any"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 169, "col_offset": 33, "nodeName": "wd", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "weight", "type": "Any"}, {"lineNumber": 170, "col_offset": 35, "nodeName": "lr", "type": "Any"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "almost_equal", "type": "Any"}, {"lineNumber": 175, "col_offset": 59, "nodeName": "grad_row", "type": "Any"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 178, "col_offset": 33, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "wd", "type": "Any"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "mom", "type": "Any"}, {"lineNumber": 182, "col_offset": 32, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "mom", "type": "Any"}, {"lineNumber": 183, "col_offset": 32, "nodeName": "lr", "type": "Any"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "weight", "type": "Any"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "mom", "type": "Any"}, {"lineNumber": 201, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 201, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 201, "col_offset": 58, "nodeName": "items", "type": "Callable"}, {"lineNumber": 202, "col_offset": 37, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 203, "col_offset": 76, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 205, "col_offset": 37, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 206, "col_offset": 76, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 225, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 225, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 225, "col_offset": 58, "nodeName": "items", "type": "Callable"}, {"lineNumber": 226, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 227, "col_offset": 77, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 229, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 230, "col_offset": 77, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 250, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 250, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 250, "col_offset": 58, "nodeName": "items", "type": "Callable"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 251, "col_offset": 66, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 254, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 255, "col_offset": 58, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 275, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 275, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 275, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 66, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 279, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 280, "col_offset": 58, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 305, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 305, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 305, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 306, "col_offset": 66, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 309, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 310, "col_offset": 58, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 329, "col_offset": 34, "nodeName": "param", "type": "Union[Dict[str, float], Dict[str, bool], Dict[str, int], Dict[str, Any], Dict[nothing, nothing]]"}, {"lineNumber": 329, "col_offset": 43, "nodeName": "params", "type": "Union[Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, int]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]], Tuple[Dict[str, float], Dict[str, float], Dict[str, bool], Dict[str, int]]]"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 330, "col_offset": 29, "nodeName": "float16", "type": "Any"}, {"lineNumber": 333, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 333, "col_offset": 40, "nodeName": "float16", "type": "Any"}, {"lineNumber": 334, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 334, "col_offset": 40, "nodeName": "float16", "type": "Any"}, {"lineNumber": 335, "col_offset": 47, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 336, "col_offset": 47, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 337, "col_offset": 73, "nodeName": "atol", "type": "float"}, {"lineNumber": 337, "col_offset": 84, "nodeName": "rtol", "type": "float"}, {"lineNumber": 357, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 357, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 357, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 358, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 358, "col_offset": 66, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 361, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 362, "col_offset": 58, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 386, "col_offset": 64, "nodeName": "weight", "type": "Any"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 387, "col_offset": 64, "nodeName": "weight", "type": "Any"}, {"lineNumber": 414, "col_offset": 25, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 415, "col_offset": 25, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 416, "col_offset": 18, "nodeName": "math", "type": "module"}, {"lineNumber": 420, "col_offset": 28, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 420, "col_offset": 55, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 421, "col_offset": 55, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 423, "col_offset": 33, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 425, "col_offset": 21, "nodeName": "row", "type": "int"}, {"lineNumber": 427, "col_offset": 19, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 428, "col_offset": 20, "nodeName": "clip", "type": "Any"}, {"lineNumber": 428, "col_offset": 63, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 429, "col_offset": 21, "nodeName": "row", "type": "int"}, {"lineNumber": 429, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 431, "col_offset": 21, "nodeName": "row", "type": "int"}, {"lineNumber": 432, "col_offset": 21, "nodeName": "row", "type": "int"}, {"lineNumber": 432, "col_offset": 29, "nodeName": "grad", "type": "Any"}, {"lineNumber": 432, "col_offset": 47, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 434, "col_offset": 25, "nodeName": "row", "type": "int"}, {"lineNumber": 435, "col_offset": 25, "nodeName": "row", "type": "int"}, {"lineNumber": 435, "col_offset": 38, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 435, "col_offset": 52, "nodeName": "square", "type": "Any"}, {"lineNumber": 437, "col_offset": 23, "nodeName": "row", "type": "int"}, {"lineNumber": 437, "col_offset": 31, "nodeName": "lr", "type": "Any"}, {"lineNumber": 437, "col_offset": 77, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 456, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 456, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 456, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 457, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 457, "col_offset": 66, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 461, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 462, "col_offset": 58, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 482, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 482, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 482, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 483, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 483, "col_offset": 66, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 487, "col_offset": 56, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 488, "col_offset": 77, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 491, "col_offset": 55, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 492, "col_offset": 76, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 495, "col_offset": 56, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 496, "col_offset": 77, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 499, "col_offset": 55, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 500, "col_offset": 76, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 503, "col_offset": 56, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 504, "col_offset": 77, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 526, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 526, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 526, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 527, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 528, "col_offset": 46, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 530, "col_offset": 37, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 530, "col_offset": 52, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 551, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 551, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 551, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 552, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 553, "col_offset": 46, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 555, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 556, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 557, "col_offset": 58, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 583, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 583, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 583, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 584, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 585, "col_offset": 46, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 587, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 588, "col_offset": 58, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 590, "col_offset": 36, "nodeName": "mx", "type": "Any"}, {"lineNumber": 591, "col_offset": 34, "nodeName": "opt1", "type": "Any"}, {"lineNumber": 592, "col_offset": 34, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 593, "col_offset": 76, "nodeName": "rtol", "type": "float"}, {"lineNumber": 593, "col_offset": 87, "nodeName": "atol", "type": "float"}, {"lineNumber": 622, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 622, "col_offset": 64, "nodeName": "weight", "type": "Any"}, {"lineNumber": 623, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 623, "col_offset": 64, "nodeName": "weight", "type": "Any"}, {"lineNumber": 649, "col_offset": 28, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 649, "col_offset": 55, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 649, "col_offset": 76, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 652, "col_offset": 21, "nodeName": "row", "type": "int"}, {"lineNumber": 653, "col_offset": 19, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 654, "col_offset": 20, "nodeName": "clip", "type": "Any"}, {"lineNumber": 654, "col_offset": 63, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 657, "col_offset": 26, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 658, "col_offset": 18, "nodeName": "row", "type": "int"}, {"lineNumber": 658, "col_offset": 26, "nodeName": "nd", "type": "Any"}, {"lineNumber": 658, "col_offset": 39, "nodeName": "grad", "type": "Any"}, {"lineNumber": 659, "col_offset": 24, "nodeName": "nd", "type": "Any"}, {"lineNumber": 659, "col_offset": 35, "nodeName": "n", "type": "Any"}, {"lineNumber": 662, "col_offset": 18, "nodeName": "row", "type": "int"}, {"lineNumber": 662, "col_offset": 26, "nodeName": "grad", "type": "Any"}, {"lineNumber": 662, "col_offset": 38, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 668, "col_offset": 20, "nodeName": "sign", "type": "Any"}, {"lineNumber": 668, "col_offset": 41, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 669, "col_offset": 23, "nodeName": "row", "type": "int"}, {"lineNumber": 669, "col_offset": 32, "nodeName": "d", "type": "Any"}, {"lineNumber": 689, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 689, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 689, "col_offset": 58, "nodeName": "items", "type": "Callable"}, {"lineNumber": 690, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 691, "col_offset": 46, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 693, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 694, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 695, "col_offset": 58, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 715, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 715, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 715, "col_offset": 58, "nodeName": "items", "type": "Callable"}, {"lineNumber": 716, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 717, "col_offset": 46, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 719, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 720, "col_offset": 37, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 720, "col_offset": 52, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 743, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 743, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 743, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 744, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 745, "col_offset": 46, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 747, "col_offset": 37, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 747, "col_offset": 52, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 800, "col_offset": 28, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 800, "col_offset": 55, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 800, "col_offset": 76, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 803, "col_offset": 21, "nodeName": "row", "type": "int"}, {"lineNumber": 804, "col_offset": 19, "nodeName": "self", "type": "PySparseAdaGrad"}, {"lineNumber": 805, "col_offset": 20, "nodeName": "clip", "type": "Any"}, {"lineNumber": 805, "col_offset": 63, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 806, "col_offset": 21, "nodeName": "row", "type": "int"}, {"lineNumber": 806, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 809, "col_offset": 24, "nodeName": "row", "type": "int"}, {"lineNumber": 809, "col_offset": 32, "nodeName": "nd", "type": "Any"}, {"lineNumber": 809, "col_offset": 45, "nodeName": "grad", "type": "Any"}, {"lineNumber": 810, "col_offset": 24, "nodeName": "nd", "type": "Any"}, {"lineNumber": 810, "col_offset": 35, "nodeName": "history", "type": "Any"}, {"lineNumber": 814, "col_offset": 23, "nodeName": "row", "type": "int"}, {"lineNumber": 814, "col_offset": 31, "nodeName": "lr", "type": "Any"}, {"lineNumber": 831, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 831, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 831, "col_offset": 58, "nodeName": "items", "type": "Callable"}, {"lineNumber": 833, "col_offset": 16, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 834, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 835, "col_offset": 58, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 852, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 852, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 852, "col_offset": 58, "nodeName": "items", "type": "Callable"}, {"lineNumber": 854, "col_offset": 16, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 855, "col_offset": 15, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 856, "col_offset": 34, "nodeName": "opt1", "type": "Type[PySparseAdaGrad]"}, {"lineNumber": 856, "col_offset": 49, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 858, "col_offset": 34, "nodeName": "opt1", "type": "Type[PySparseAdaGrad]"}, {"lineNumber": 858, "col_offset": 49, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 877, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 877, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 877, "col_offset": 58, "nodeName": "items", "type": "Callable"}, {"lineNumber": 879, "col_offset": 16, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 880, "col_offset": 37, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 880, "col_offset": 52, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 898, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 898, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 898, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 900, "col_offset": 16, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 901, "col_offset": 37, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 901, "col_offset": 52, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 98, "col_offset": 58, "nodeName": "param", "type": "Union[Dict[str, int], Dict[str, float], Dict[nothing, nothing], Dict[str, bool], Dict[str, Any]]"}, {"lineNumber": 100, "col_offset": 45, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 63, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 104, "col_offset": 62, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 107, "col_offset": 63, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 62, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 63, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 113, "col_offset": 62, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 114, "col_offset": 50, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 163, "col_offset": 69, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 163, "col_offset": 83, "nodeName": "grad_row", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "row", "type": "int"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "grad", "type": "Any"}, {"lineNumber": 168, "col_offset": 36, "nodeName": "clip", "type": "Any"}, {"lineNumber": 168, "col_offset": 79, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "row", "type": "int"}, {"lineNumber": 169, "col_offset": 38, "nodeName": "weight", "type": "Any"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "row", "type": "int"}, {"lineNumber": 170, "col_offset": 40, "nodeName": "grad", "type": "Any"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 175, "col_offset": 69, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 175, "col_offset": 83, "nodeName": "grad_row", "type": "Any"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "row", "type": "int"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "grad", "type": "Any"}, {"lineNumber": 180, "col_offset": 36, "nodeName": "clip", "type": "Any"}, {"lineNumber": 180, "col_offset": 79, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "row", "type": "int"}, {"lineNumber": 181, "col_offset": 38, "nodeName": "weight", "type": "Any"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "row", "type": "int"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "row", "type": "int"}, {"lineNumber": 183, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "row", "type": "int"}, {"lineNumber": 184, "col_offset": 39, "nodeName": "row", "type": "int"}, {"lineNumber": 201, "col_offset": 58, "nodeName": "param", "type": "Union[Dict[str, float], Dict[nothing, nothing], Dict[str, int], Dict[str, Any]]"}, {"lineNumber": 225, "col_offset": 58, "nodeName": "param", "type": "Union[Dict[nothing, nothing], Dict[str, Any], Dict[str, float], Dict[str, int]]"}, {"lineNumber": 250, "col_offset": 58, "nodeName": "param", "type": "Union[Dict[str, float], Dict[str, bool], Dict[str, int], Dict[str, Any], Dict[nothing, nothing]]"}, {"lineNumber": 252, "col_offset": 45, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 275, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 277, "col_offset": 45, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 305, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 307, "col_offset": 45, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 329, "col_offset": 54, "nodeName": "k", "type": "str"}, {"lineNumber": 329, "col_offset": 57, "nodeName": "v", "type": "Any"}, {"lineNumber": 329, "col_offset": 62, "nodeName": "items", "type": "Callable"}, {"lineNumber": 330, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 330, "col_offset": 70, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 333, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 334, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 335, "col_offset": 54, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 336, "col_offset": 54, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 357, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 359, "col_offset": 45, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 420, "col_offset": 28, "nodeName": "mx", "type": "Any"}, {"lineNumber": 421, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 421, "col_offset": 69, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 428, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 428, "col_offset": 31, "nodeName": "grad", "type": "Any"}, {"lineNumber": 428, "col_offset": 43, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 428, "col_offset": 63, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 429, "col_offset": 41, "nodeName": "row", "type": "int"}, {"lineNumber": 432, "col_offset": 34, "nodeName": "row", "type": "int"}, {"lineNumber": 432, "col_offset": 47, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 435, "col_offset": 38, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 435, "col_offset": 52, "nodeName": "nd", "type": "Any"}, {"lineNumber": 435, "col_offset": 65, "nodeName": "grad", "type": "Any"}, {"lineNumber": 437, "col_offset": 36, "nodeName": "mean", "type": "Any"}, {"lineNumber": 437, "col_offset": 49, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 437, "col_offset": 77, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 456, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 458, "col_offset": 45, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 482, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 484, "col_offset": 45, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 526, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 528, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 551, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 553, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 583, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 585, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 591, "col_offset": 63, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 592, "col_offset": 62, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 649, "col_offset": 28, "nodeName": "mx", "type": "Any"}, {"lineNumber": 649, "col_offset": 76, "nodeName": "np", "type": "module"}, {"lineNumber": 649, "col_offset": 90, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 654, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 654, "col_offset": 31, "nodeName": "grad", "type": "Any"}, {"lineNumber": 654, "col_offset": 43, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 654, "col_offset": 63, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 657, "col_offset": 26, "nodeName": "nd", "type": "Any"}, {"lineNumber": 657, "col_offset": 37, "nodeName": "n", "type": "Any"}, {"lineNumber": 658, "col_offset": 26, "nodeName": "mx", "type": "Any"}, {"lineNumber": 658, "col_offset": 44, "nodeName": "row", "type": "int"}, {"lineNumber": 659, "col_offset": 24, "nodeName": "mx", "type": "Any"}, {"lineNumber": 659, "col_offset": 37, "nodeName": "row", "type": "int"}, {"lineNumber": 662, "col_offset": 31, "nodeName": "row", "type": "int"}, {"lineNumber": 662, "col_offset": 46, "nodeName": "weight", "type": "Any"}, {"lineNumber": 668, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 668, "col_offset": 31, "nodeName": "z", "type": "Any"}, {"lineNumber": 668, "col_offset": 41, "nodeName": "nd", "type": "Any"}, {"lineNumber": 668, "col_offset": 75, "nodeName": "lamda1", "type": "Any"}, {"lineNumber": 689, "col_offset": 58, "nodeName": "param", "type": "Union[Dict[str, float], Dict[str, Any], Dict[nothing, nothing], Dict[str, bool], Dict[str, int]]"}, {"lineNumber": 691, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 715, "col_offset": 58, "nodeName": "param", "type": "Union[Dict[str, bool], Dict[str, Any], Dict[str, float], Dict[str, int], Dict[nothing, nothing]]"}, {"lineNumber": 717, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 743, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 745, "col_offset": 59, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 800, "col_offset": 28, "nodeName": "mx", "type": "Any"}, {"lineNumber": 800, "col_offset": 76, "nodeName": "np", "type": "module"}, {"lineNumber": 800, "col_offset": 90, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 805, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 805, "col_offset": 31, "nodeName": "grad", "type": "Any"}, {"lineNumber": 805, "col_offset": 43, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 805, "col_offset": 63, "nodeName": "self", "type": "PySparseAdaGrad"}, {"lineNumber": 806, "col_offset": 41, "nodeName": "row", "type": "int"}, {"lineNumber": 809, "col_offset": 32, "nodeName": "mx", "type": "Any"}, {"lineNumber": 809, "col_offset": 50, "nodeName": "row", "type": "int"}, {"lineNumber": 810, "col_offset": 24, "nodeName": "mx", "type": "Any"}, {"lineNumber": 810, "col_offset": 43, "nodeName": "row", "type": "int"}, {"lineNumber": 814, "col_offset": 36, "nodeName": "grad", "type": "Any"}, {"lineNumber": 831, "col_offset": 58, "nodeName": "param", "type": "Union[Dict[str, float], Dict[str, int], Dict[nothing, nothing], Dict[str, Any]]"}, {"lineNumber": 852, "col_offset": 58, "nodeName": "param", "type": "Union[Dict[str, int], Dict[str, float], Dict[nothing, nothing], Dict[str, Any]]"}, {"lineNumber": 856, "col_offset": 41, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 856, "col_offset": 77, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 858, "col_offset": 41, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 858, "col_offset": 77, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 877, "col_offset": 58, "nodeName": "param", "type": "Union[Dict[str, float], Dict[str, int], Dict[nothing, nothing], Dict[str, Any]]"}, {"lineNumber": 898, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "mx", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int], Tuple[int, int], Tuple[int]]]"}, {"lineNumber": 162, "col_offset": 31, "nodeName": "grad", "type": "Any"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "mx", "type": "Any"}, {"lineNumber": 163, "col_offset": 69, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 29, "nodeName": "row", "type": "int"}, {"lineNumber": 168, "col_offset": 36, "nodeName": "nd", "type": "Any"}, {"lineNumber": 168, "col_offset": 47, "nodeName": "grad", "type": "Any"}, {"lineNumber": 168, "col_offset": 59, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 168, "col_offset": 79, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 169, "col_offset": 45, "nodeName": "row", "type": "int"}, {"lineNumber": 170, "col_offset": 45, "nodeName": "row", "type": "int"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "grad", "type": "Any"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "mx", "type": "Any"}, {"lineNumber": 175, "col_offset": 69, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "row", "type": "int"}, {"lineNumber": 180, "col_offset": 36, "nodeName": "nd", "type": "Any"}, {"lineNumber": 180, "col_offset": 47, "nodeName": "grad", "type": "Any"}, {"lineNumber": 180, "col_offset": 59, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 180, "col_offset": 79, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 181, "col_offset": 45, "nodeName": "row", "type": "int"}, {"lineNumber": 183, "col_offset": 42, "nodeName": "row", "type": "int"}, {"lineNumber": 329, "col_offset": 62, "nodeName": "param", "type": "Union[Dict[str, float], Dict[str, Any], Dict[str, bool], Dict[nothing, nothing], Dict[str, int]]"}, {"lineNumber": 331, "col_offset": 52, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 420, "col_offset": 55, "nodeName": "grad", "type": "Any"}, {"lineNumber": 428, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 428, "col_offset": 36, "nodeName": "row", "type": "int"}, {"lineNumber": 428, "col_offset": 43, "nodeName": "self", "type": "PySparseAdam"}, {"lineNumber": 428, "col_offset": 87, "nodeName": "grad", "type": "Any"}, {"lineNumber": 435, "col_offset": 52, "nodeName": "mx", "type": "Any"}, {"lineNumber": 435, "col_offset": 70, "nodeName": "row", "type": "int"}, {"lineNumber": 435, "col_offset": 80, "nodeName": "grad", "type": "Any"}, {"lineNumber": 437, "col_offset": 41, "nodeName": "row", "type": "int"}, {"lineNumber": 437, "col_offset": 49, "nodeName": "nd", "type": "Any"}, {"lineNumber": 437, "col_offset": 60, "nodeName": "variance", "type": "Any"}, {"lineNumber": 649, "col_offset": 55, "nodeName": "grad", "type": "Any"}, {"lineNumber": 654, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 654, "col_offset": 36, "nodeName": "row", "type": "int"}, {"lineNumber": 654, "col_offset": 43, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 654, "col_offset": 87, "nodeName": "grad", "type": "Any"}, {"lineNumber": 657, "col_offset": 26, "nodeName": "mx", "type": "Any"}, {"lineNumber": 657, "col_offset": 39, "nodeName": "row", "type": "int"}, {"lineNumber": 662, "col_offset": 53, "nodeName": "row", "type": "int"}, {"lineNumber": 668, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 668, "col_offset": 33, "nodeName": "row", "type": "int"}, {"lineNumber": 668, "col_offset": 41, "nodeName": "mx", "type": "Any"}, {"lineNumber": 668, "col_offset": 55, "nodeName": "abs", "type": "Any"}, {"lineNumber": 668, "col_offset": 75, "nodeName": "self", "type": "PySparseFtrl"}, {"lineNumber": 800, "col_offset": 55, "nodeName": "grad", "type": "Any"}, {"lineNumber": 805, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 805, "col_offset": 36, "nodeName": "row", "type": "int"}, {"lineNumber": 805, "col_offset": 43, "nodeName": "self", "type": "PySparseAdaGrad"}, {"lineNumber": 805, "col_offset": 87, "nodeName": "grad", "type": "Any"}, {"lineNumber": 814, "col_offset": 41, "nodeName": "row", "type": "int"}, {"lineNumber": 162, "col_offset": 36, "nodeName": "row", "type": "int"}, {"lineNumber": 168, "col_offset": 36, "nodeName": "mx", "type": "Any"}, {"lineNumber": 168, "col_offset": 52, "nodeName": "row", "type": "int"}, {"lineNumber": 168, "col_offset": 59, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 174, "col_offset": 36, "nodeName": "row", "type": "int"}, {"lineNumber": 180, "col_offset": 36, "nodeName": "mx", "type": "Any"}, {"lineNumber": 180, "col_offset": 52, "nodeName": "row", "type": "int"}, {"lineNumber": 180, "col_offset": 59, "nodeName": "self", "type": "PySparseSGD"}, {"lineNumber": 420, "col_offset": 60, "nodeName": "row", "type": "int"}, {"lineNumber": 421, "col_offset": 69, "nodeName": "grad", "type": "Any"}, {"lineNumber": 428, "col_offset": 92, "nodeName": "row", "type": "int"}, {"lineNumber": 435, "col_offset": 85, "nodeName": "row", "type": "int"}, {"lineNumber": 437, "col_offset": 49, "nodeName": "mx", "type": "Any"}, {"lineNumber": 437, "col_offset": 69, "nodeName": "row", "type": "int"}, {"lineNumber": 649, "col_offset": 60, "nodeName": "row", "type": "int"}, {"lineNumber": 649, "col_offset": 90, "nodeName": "grad", "type": "Any"}, {"lineNumber": 654, "col_offset": 92, "nodeName": "row", "type": "int"}, {"lineNumber": 668, "col_offset": 55, "nodeName": "nd", "type": "Any"}, {"lineNumber": 668, "col_offset": 65, "nodeName": "z", "type": "Any"}, {"lineNumber": 800, "col_offset": 60, "nodeName": "row", "type": "int"}, {"lineNumber": 800, "col_offset": 90, "nodeName": "grad", "type": "Any"}, {"lineNumber": 805, "col_offset": 92, "nodeName": "row", "type": "int"}, {"lineNumber": 421, "col_offset": 74, "nodeName": "row", "type": "int"}, {"lineNumber": 649, "col_offset": 95, "nodeName": "row", "type": "int"}, {"lineNumber": 668, "col_offset": 55, "nodeName": "mx", "type": "Any"}, {"lineNumber": 668, "col_offset": 67, "nodeName": "row", "type": "int"}, {"lineNumber": 800, "col_offset": 95, "nodeName": "row", "type": "int"}]