[{"lineNumber": 29, "col_offset": 0, "nodeName": "save_symbol", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "save_params", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "save_dict", "type": "Dict[str, Any]"}, {"lineNumber": 43, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "calib_inception_models", "type": "List[str]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "models", "type": "Union[List[str], List[Any]]"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "gluon_models", "type": "Union[List[str], List[Any]]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "shape", "type": "None"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "result_before1", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 197, "col_offset": 7, "nodeName": "run_dummy_inference", "type": "Any"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "logger", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "save", "type": "Any"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "fname", "type": "Any"}, {"lineNumber": 36, "col_offset": 7, "nodeName": "logger", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "save", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "fname", "type": "Any"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "save_dict", "type": "Dict[str, Any]"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "calib_inception_models", "type": "List[str]"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "basicConfig", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "setLevel", "type": "Callable[[Union[int, str]], None]"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "INFO", "type": "int"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "gluon_models", "type": "Union[List[str], List[Any]]"}, {"lineNumber": 181, "col_offset": 39, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 181, "col_offset": 100, "nodeName": "gluon_models", "type": "Union[List[str], List[Any]]"}, {"lineNumber": 183, "col_offset": 7, "nodeName": "model", "type": "Any"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "segmentation_models", "type": "List[str]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 191, "col_offset": 10, "nodeName": "get_model", "type": "Any"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "model", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "forward", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "export", "type": "Any"}, {"lineNumber": 195, "col_offset": 10, "nodeName": "convert_hybrid_block", "type": "Any"}, {"lineNumber": 195, "col_offset": 35, "nodeName": "net", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "export", "type": "Any"}, {"lineNumber": 197, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "result_after", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "result_after", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "info", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "sym", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "info", "type": "Any"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "k", "type": "Any"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "as_in_context", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "save_dict", "type": "Dict[str, Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "nd", "type": "Any"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "calib_ssd_models", "type": "List[str]"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 170, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 170, "col_offset": 53, "nodeName": "models", "type": "Union[List[str], List[Any]]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "logging", "type": "module"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "logging", "type": "module"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 183, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 185, "col_offset": 9, "nodeName": "model", "type": "Any"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "calib_ssd_models", "type": "List[str]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 191, "col_offset": 10, "nodeName": "model_zoo", "type": "Any"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 193, "col_offset": 33, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "model", "type": "Any"}, {"lineNumber": 195, "col_offset": 10, "nodeName": "amp", "type": "Any"}, {"lineNumber": 195, "col_offset": 61, "nodeName": "cast_optional_params", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "model", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "forward", "type": "Any"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "forward", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "logger", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 31, "col_offset": 59, "nodeName": "fname", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "logger", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 37, "col_offset": 59, "nodeName": "fname", "type": "Any"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 38, "col_offset": 49, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 38, "col_offset": 63, "nodeName": "k", "type": "Any"}, {"lineNumber": 38, "col_offset": 66, "nodeName": "v", "type": "Any"}, {"lineNumber": 38, "col_offset": 71, "nodeName": "items", "type": "Any"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "k", "type": "Any"}, {"lineNumber": 39, "col_offset": 38, "nodeName": "as_in_context", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 185, "col_offset": 9, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 187, "col_offset": 9, "nodeName": "model", "type": "Any"}, {"lineNumber": 187, "col_offset": 23, "nodeName": "calib_inception_models", "type": "List[str]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 191, "col_offset": 10, "nodeName": "gluoncv", "type": "Any"}, {"lineNumber": 193, "col_offset": 33, "nodeName": "random", "type": "Any"}, {"lineNumber": 193, "col_offset": 60, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 195, "col_offset": 61, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "net", "type": "Any"}, {"lineNumber": 199, "col_offset": 35, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "net", "type": "Any"}, {"lineNumber": 200, "col_offset": 35, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 38, "col_offset": 49, "nodeName": "mx", "type": "Any"}, {"lineNumber": 38, "col_offset": 71, "nodeName": "arg_params", "type": "Any"}, {"lineNumber": 39, "col_offset": 38, "nodeName": "v", "type": "Any"}, {"lineNumber": 39, "col_offset": 54, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 39, "col_offset": 68, "nodeName": "k", "type": "Any"}, {"lineNumber": 39, "col_offset": 71, "nodeName": "v", "type": "Any"}, {"lineNumber": 39, "col_offset": 76, "nodeName": "items", "type": "Any"}, {"lineNumber": 187, "col_offset": 9, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 193, "col_offset": 33, "nodeName": "nd", "type": "Any"}, {"lineNumber": 199, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 199, "col_offset": 62, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 199, "col_offset": 75, "nodeName": "float32", "type": "Any"}, {"lineNumber": 200, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 200, "col_offset": 62, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 200, "col_offset": 75, "nodeName": "float32", "type": "Any"}, {"lineNumber": 39, "col_offset": 54, "nodeName": "mx", "type": "Any"}, {"lineNumber": 39, "col_offset": 76, "nodeName": "aux_params", "type": "Any"}, {"lineNumber": 193, "col_offset": 33, "nodeName": "mx", "type": "Any"}, {"lineNumber": 199, "col_offset": 35, "nodeName": "nd", "type": "Any"}, {"lineNumber": 199, "col_offset": 75, "nodeName": "np", "type": "module"}, {"lineNumber": 199, "col_offset": 91, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 200, "col_offset": 35, "nodeName": "nd", "type": "Any"}, {"lineNumber": 200, "col_offset": 75, "nodeName": "np", "type": "module"}, {"lineNumber": 200, "col_offset": 91, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 199, "col_offset": 35, "nodeName": "mx", "type": "Any"}, {"lineNumber": 199, "col_offset": 91, "nodeName": "mx", "type": "Any"}, {"lineNumber": 200, "col_offset": 35, "nodeName": "mx", "type": "Any"}, {"lineNumber": 200, "col_offset": 91, "nodeName": "mx", "type": "Any"}]