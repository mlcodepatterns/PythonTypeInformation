[{"lineNumber": 34, "col_offset": 0, "nodeName": "test_create_np_param", "type": "Callable[[], Any]"}, {"lineNumber": 184, "col_offset": 0, "nodeName": "test_parameters_zero_grad", "type": "Callable[[], Any]"}, {"lineNumber": 201, "col_offset": 0, "nodeName": "check_gluon_save_load", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 231, "col_offset": 0, "nodeName": "hashable_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 480, "col_offset": 0, "nodeName": "test_concatenate", "type": "Callable[[], Any]"}, {"lineNumber": 508, "col_offset": 0, "nodeName": "test_pixelshuffle1d", "type": "Callable[[], Any]"}, {"lineNumber": 525, "col_offset": 0, "nodeName": "test_pixelshuffle2d", "type": "Callable[[], Any]"}, {"lineNumber": 556, "col_offset": 0, "nodeName": "test_pixelshuffle3d", "type": "Callable[[], Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "check_block_params", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "random_slice_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "hybrid_forward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "hybrid_forward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "hybrid_forward", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "hybrid_forward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "regressor", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "total_loss", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "t", "type": "int"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "updater", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "label", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "weighting", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "label", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "weighting", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "L", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "L", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "const_arr", "type": "Any"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "hybrid_forward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "out_np", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "prefix", "type": "str"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "input_names", "type": "Union[str, List[str]]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "loaded_out", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "ele", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "tuple_idx", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 295, "col_offset": 17, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]]"}, {"lineNumber": 383, "col_offset": 16, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "hybrid_forward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 395, "col_offset": 16, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "hybrid_forward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 412, "col_offset": 14, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "hybrid_forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "foo", "type": "Any"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "foo", "type": "Any"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "model2", "type": "Any"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 510, "col_offset": 4, "nodeName": "nchan", "type": "int"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "up_x", "type": "int"}, {"lineNumber": 512, "col_offset": 4, "nodeName": "nx", "type": "int"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "shape_before", "type": "Tuple[int, int, int]"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "shape_after", "type": "Tuple[int, int, int]"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "nchan", "type": "int"}, {"lineNumber": 528, "col_offset": 4, "nodeName": "up_x", "type": "int"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "up_y", "type": "int"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "nx", "type": "int"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "ny", "type": "int"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "shape_before", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "shape_after", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "nchan", "type": "int"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "up_x", "type": "int"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "up_y", "type": "int"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "up_z", "type": "int"}, {"lineNumber": 562, "col_offset": 4, "nodeName": "nx", "type": "int"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "ny", "type": "int"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "nz", "type": "int"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "shape_before", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "shape_after", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 567, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 568, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 569, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 36, "col_offset": 7, "nodeName": "K", "type": "int"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "N", "type": "int"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "Uniform", "type": "Any"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "LinearRegression", "type": "Type[Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "regressor", "type": "Any"}, {"lineNumber": 100, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "TotalLoss", "type": "Type[Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "Trainer", "type": "Any"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "delattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], None]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "Updater", "type": "Any"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "updater", "type": "Any"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "L1Loss", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "L1Loss", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "L1Loss", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "L2Loss", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "L2Loss", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "L2Loss", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "SoftmaxCrossEntropyLoss", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "L", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "L", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 164, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "foo", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 214, "col_offset": 10, "nodeName": "net_builder", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 217, "col_offset": 10, "nodeName": "net", "type": "Any"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "export", "type": "Any"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "prefix", "type": "str"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "imports", "type": "Any"}, {"lineNumber": 223, "col_offset": 45, "nodeName": "input_names", "type": "Union[str, List[str]]"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "remove", "type": "Callable[[Union[str, unicode]], None]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "remove", "type": "Callable[[Union[str, unicode]], None]"}, {"lineNumber": 227, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "out_np", "type": "Any"}, {"lineNumber": 228, "col_offset": 32, "nodeName": "loaded_out", "type": "Any"}, {"lineNumber": 252, "col_offset": 11, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "index", "type": "List[Union[slice, int]]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "step_switch", "type": "int"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "cache", "type": "Set[Tuple[Tuple[Any, ...], Tuple[Any, ...]]]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 321, "col_offset": 35, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 328, "col_offset": 36, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "hybrid_forward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 338, "col_offset": 36, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 345, "col_offset": 36, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 372, "col_offset": 30, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 383, "col_offset": 16, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "check_gluon_save_load", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 392, "col_offset": 26, "nodeName": "Case1", "type": "Type[Any]"}, {"lineNumber": 395, "col_offset": 16, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "check_gluon_save_load", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 405, "col_offset": 26, "nodeName": "Case2", "type": "Type[Any]"}, {"lineNumber": 412, "col_offset": 14, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 420, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 421, "col_offset": 10, "nodeName": "Foo", "type": "Type[Any]"}, {"lineNumber": 422, "col_offset": 11, "nodeName": "foo", "type": "Any"}, {"lineNumber": 422, "col_offset": 15, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 424, "col_offset": 10, "nodeName": "Foo", "type": "Type[Any]"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 426, "col_offset": 11, "nodeName": "foo", "type": "Any"}, {"lineNumber": 426, "col_offset": 15, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 428, "col_offset": 11, "nodeName": "same", "type": "Any"}, {"lineNumber": 435, "col_offset": 16, "nodeName": "LeakyReLU", "type": "Any"}, {"lineNumber": 436, "col_offset": 10, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 443, "col_offset": 16, "nodeName": "PReLU", "type": "Any"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 445, "col_offset": 10, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "ELU", "type": "Any"}, {"lineNumber": 453, "col_offset": 10, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 460, "col_offset": 16, "nodeName": "SELU", "type": "Any"}, {"lineNumber": 461, "col_offset": 10, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 468, "col_offset": 16, "nodeName": "GELU", "type": "Any"}, {"lineNumber": 469, "col_offset": 10, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 476, "col_offset": 16, "nodeName": "Swish", "type": "Any"}, {"lineNumber": 477, "col_offset": 10, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 482, "col_offset": 12, "nodeName": "HybridConcatenate", "type": "Any"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 486, "col_offset": 13, "nodeName": "Concatenate", "type": "Any"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 495, "col_offset": 9, "nodeName": "model2", "type": "Any"}, {"lineNumber": 496, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 497, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "wait_to_read", "type": "Any"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "wait_to_read", "type": "Any"}, {"lineNumber": 504, "col_offset": 12, "nodeName": "Identity", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 506, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 506, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 513, "col_offset": 37, "nodeName": "nx", "type": "int"}, {"lineNumber": 514, "col_offset": 22, "nodeName": "nchan", "type": "int"}, {"lineNumber": 515, "col_offset": 12, "nodeName": "PixelShuffle1D", "type": "Any"}, {"lineNumber": 515, "col_offset": 30, "nodeName": "up_x", "type": "int"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 516, "col_offset": 60, "nodeName": "shape_before", "type": "Tuple[int, int, int]"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 517, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 518, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 518, "col_offset": 22, "nodeName": "shape_after", "type": "Tuple[int, int, int]"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 532, "col_offset": 44, "nodeName": "nx", "type": "int"}, {"lineNumber": 532, "col_offset": 48, "nodeName": "ny", "type": "int"}, {"lineNumber": 533, "col_offset": 22, "nodeName": "nchan", "type": "int"}, {"lineNumber": 534, "col_offset": 12, "nodeName": "PixelShuffle2D", "type": "Any"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 535, "col_offset": 60, "nodeName": "shape_before", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 536, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 537, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 537, "col_offset": 22, "nodeName": "shape_after", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 565, "col_offset": 51, "nodeName": "nx", "type": "int"}, {"lineNumber": 565, "col_offset": 55, "nodeName": "ny", "type": "int"}, {"lineNumber": 565, "col_offset": 59, "nodeName": "nz", "type": "int"}, {"lineNumber": 566, "col_offset": 22, "nodeName": "nchan", "type": "int"}, {"lineNumber": 567, "col_offset": 12, "nodeName": "PixelShuffle3D", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 568, "col_offset": 53, "nodeName": "shape_before", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 569, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 570, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 570, "col_offset": 22, "nodeName": "shape_after", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "TestBlock", "type": "Type[Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "check_block_params", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "TestBlock1", "type": "Type[Any]"}, {"lineNumber": 67, "col_offset": 49, "nodeName": "NDArray", "type": "Any"}, {"lineNumber": 67, "col_offset": 64, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "check_block_params", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "TestBlock1", "type": "Type[Any]"}, {"lineNumber": 68, "col_offset": 48, "nodeName": "NDArray", "type": "Any"}, {"lineNumber": 68, "col_offset": 63, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "check_block_params", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 69, "col_offset": 46, "nodeName": "TestBlock2", "type": "Any"}, {"lineNumber": 69, "col_offset": 65, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 69, "col_offset": 77, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "check_block_params", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 46, "nodeName": "TestBlock2", "type": "Any"}, {"lineNumber": 70, "col_offset": 64, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 70, "col_offset": 76, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "h_relu", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "regressor", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "Uniform", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "regressor", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "total_loss", "type": "Any"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "np", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "np", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "loss", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "loss", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "loss", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "loss", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "loss", "type": "Any"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "loss", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "np", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "np", "type": "Any"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "loss", "type": "Any"}, {"lineNumber": 155, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 164, "col_offset": 65, "nodeName": "_np", "type": "module"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 174, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 176, "col_offset": 14, "nodeName": "Foo", "type": "Type[Any]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "foo", "type": "Any"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "net", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "values", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "values", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "data_l", "type": "Any"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "out", "type": "Any"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "uuid4", "type": "Callable[[], uuid.UUID]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "SymbolBlock", "type": "Any"}, {"lineNumber": 222, "col_offset": 45, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 222, "col_offset": 69, "nodeName": "prefix", "type": "str"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 225, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 225, "col_offset": 38, "nodeName": "prefix", "type": "str"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 226, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 226, "col_offset": 38, "nodeName": "prefix", "type": "str"}, {"lineNumber": 248, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "ele", "type": "Any"}, {"lineNumber": 248, "col_offset": 27, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 260, "col_offset": 22, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 261, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "r", "type": "int"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "s", "type": "int"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "e", "type": "int"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 282, "col_offset": 21, "nodeName": "index", "type": "List[Union[slice, int]]"}, {"lineNumber": 296, "col_offset": 16, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "normal", "type": "Any"}, {"lineNumber": 297, "col_offset": 38, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "normal", "type": "Any"}, {"lineNumber": 298, "col_offset": 38, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 299, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "index1", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "index2", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 306, "col_offset": 43, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 311, "col_offset": 43, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 321, "col_offset": 35, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 328, "col_offset": 36, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 338, "col_offset": 36, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 345, "col_offset": 36, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 372, "col_offset": 30, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "check_gluon_hybridize_consistency", "type": "Any"}, {"lineNumber": 375, "col_offset": 42, "nodeName": "IntegerIndexing", "type": "Type[Any]"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "layer", "type": "Any"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "layer1", "type": "Any"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "layer2", "type": "Any"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 403, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 418, "col_offset": 19, "nodeName": "mask", "type": "Any"}, {"lineNumber": 420, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "foo", "type": "Any"}, {"lineNumber": 428, "col_offset": 11, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 428, "col_offset": 30, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 428, "col_offset": 46, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 435, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 436, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 443, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 445, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 453, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 460, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 461, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 468, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 469, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 476, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 477, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 482, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 483, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 484, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 485, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 486, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "model2", "type": "Any"}, {"lineNumber": 487, "col_offset": 15, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "model2", "type": "Any"}, {"lineNumber": 488, "col_offset": 15, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "model2", "type": "Any"}, {"lineNumber": 489, "col_offset": 15, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 492, "col_offset": 21, "nodeName": "Xavier", "type": "Any"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "model2", "type": "Any"}, {"lineNumber": 493, "col_offset": 22, "nodeName": "Xavier", "type": "Any"}, {"lineNumber": 494, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 495, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 496, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 497, "col_offset": 11, "nodeName": "x2", "type": "Any"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 504, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 506, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 506, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 513, "col_offset": 23, "nodeName": "nchan", "type": "int"}, {"lineNumber": 513, "col_offset": 31, "nodeName": "up_x", "type": "int"}, {"lineNumber": 514, "col_offset": 29, "nodeName": "nx", "type": "int"}, {"lineNumber": 514, "col_offset": 34, "nodeName": "up_x", "type": "int"}, {"lineNumber": 515, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "np", "type": "Any"}, {"lineNumber": 516, "col_offset": 22, "nodeName": "arange", "type": "Any"}, {"lineNumber": 518, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 532, "col_offset": 38, "nodeName": "up_y", "type": "int"}, {"lineNumber": 533, "col_offset": 29, "nodeName": "nx", "type": "int"}, {"lineNumber": 533, "col_offset": 34, "nodeName": "up_x", "type": "int"}, {"lineNumber": 533, "col_offset": 40, "nodeName": "ny", "type": "int"}, {"lineNumber": 533, "col_offset": 45, "nodeName": "up_y", "type": "int"}, {"lineNumber": 534, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 534, "col_offset": 31, "nodeName": "up_x", "type": "int"}, {"lineNumber": 534, "col_offset": 37, "nodeName": "up_y", "type": "int"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "np", "type": "Any"}, {"lineNumber": 535, "col_offset": 22, "nodeName": "arange", "type": "Any"}, {"lineNumber": 537, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 565, "col_offset": 45, "nodeName": "up_z", "type": "int"}, {"lineNumber": 566, "col_offset": 29, "nodeName": "nx", "type": "int"}, {"lineNumber": 566, "col_offset": 34, "nodeName": "up_x", "type": "int"}, {"lineNumber": 566, "col_offset": 40, "nodeName": "ny", "type": "int"}, {"lineNumber": 566, "col_offset": 45, "nodeName": "up_y", "type": "int"}, {"lineNumber": 566, "col_offset": 51, "nodeName": "nz", "type": "int"}, {"lineNumber": 566, "col_offset": 56, "nodeName": "up_z", "type": "int"}, {"lineNumber": 567, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 567, "col_offset": 31, "nodeName": "up_x", "type": "int"}, {"lineNumber": 567, "col_offset": 37, "nodeName": "up_y", "type": "int"}, {"lineNumber": 567, "col_offset": 43, "nodeName": "up_z", "type": "int"}, {"lineNumber": 570, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "expected_type", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "dot", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "w", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "dot", "type": "Any"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "w", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "nd", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "M", "type": "int"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "K", "type": "int"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "mx", "type": "Any"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "mx", "type": "Any"}, {"lineNumber": 67, "col_offset": 49, "nodeName": "nd", "type": "Any"}, {"lineNumber": 68, "col_offset": 48, "nodeName": "nd", "type": "Any"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "as_np_ndarray", "type": "Any"}, {"lineNumber": 69, "col_offset": 65, "nodeName": "np", "type": "Any"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "as_np_ndarray", "type": "Any"}, {"lineNumber": 70, "col_offset": 64, "nodeName": "np", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "w1", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "relu", "type": "Any"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "h", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "dot", "type": "Any"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "w2", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "sum", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "init", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "np", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "np", "type": "Any"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "regressor", "type": "Any"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "record", "type": "Any"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "regressor", "type": "Any"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "total_loss", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "output", "type": "Any"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "mx", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "np", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "sum", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "sum", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "sum", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "sum", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "sum", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "sum", "type": "Any"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "output", "type": "Any"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "label", "type": "Any"}, {"lineNumber": 155, "col_offset": 27, "nodeName": "_np", "type": "module"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "output", "type": "Any"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "label", "type": "Any"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "weighting", "type": "Any"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "_np", "type": "module"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "Constant", "type": "Any"}, {"lineNumber": 169, "col_offset": 41, "nodeName": "const_arr", "type": "Any"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "np", "type": "Any"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "const_arr", "type": "Any"}, {"lineNumber": 174, "col_offset": 54, "nodeName": "const_arr", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "foo", "type": "Any"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 181, "col_offset": 58, "nodeName": "const_arr", "type": "Any"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "data_l", "type": "Any"}, {"lineNumber": 221, "col_offset": 51, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 221, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 221, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 223, "col_offset": 69, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 223, "col_offset": 93, "nodeName": "prefix", "type": "str"}, {"lineNumber": 227, "col_offset": 17, "nodeName": "net_imported", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "ele", "type": "Any"}, {"lineNumber": 260, "col_offset": 22, "nodeName": "random", "type": "module"}, {"lineNumber": 261, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 261, "col_offset": 27, "nodeName": "shape", "type": "Union[Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "r", "type": "int"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 274, "col_offset": 15, "nodeName": "step_switch", "type": "int"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 300, "col_offset": 21, "nodeName": "random_slice_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 300, "col_offset": 40, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 301, "col_offset": 21, "nodeName": "random_slice_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 301, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 302, "col_offset": 67, "nodeName": "cache", "type": "Set[Tuple[Tuple[Any, ...], Tuple[Any, ...]]]"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 306, "col_offset": 43, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 311, "col_offset": 43, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "check_gluon_hybridize_consistency", "type": "Any"}, {"lineNumber": 315, "col_offset": 46, "nodeName": "TestSlicingSingleSymbol1", "type": "Type[Any]"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "check_gluon_hybridize_consistency", "type": "Any"}, {"lineNumber": 317, "col_offset": 46, "nodeName": "TestSlicingSingleSymbol2", "type": "Type[Any]"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 325, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 326, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 331, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 334, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 335, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 340, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 342, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 343, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 349, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 350, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "check_gluon_hybridize_consistency", "type": "Any"}, {"lineNumber": 354, "col_offset": 16, "nodeName": "TestSlicingWithSplit", "type": "Type[Any]"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "check_gluon_hybridize_consistency", "type": "Any"}, {"lineNumber": 358, "col_offset": 46, "nodeName": "TestSlicingWithSplit2", "type": "Type[Any]"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "check_gluon_hybridize_consistency", "type": "Any"}, {"lineNumber": 362, "col_offset": 16, "nodeName": "TestSlicingWithHSplit", "type": "Type[Any]"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "check_gluon_hybridize_consistency", "type": "Any"}, {"lineNumber": 366, "col_offset": 16, "nodeName": "TestSlicingWithVSplit", "type": "Type[Any]"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 386, "col_offset": 25, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 389, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 389, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 391, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 392, "col_offset": 34, "nodeName": "normal", "type": "Any"}, {"lineNumber": 393, "col_offset": 34, "nodeName": "normal", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 398, "col_offset": 26, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 399, "col_offset": 26, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 402, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 402, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 403, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 405, "col_offset": 34, "nodeName": "normal", "type": "Any"}, {"lineNumber": 406, "col_offset": 34, "nodeName": "normal", "type": "Any"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 417, "col_offset": 45, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 420, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 428, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 428, "col_offset": 30, "nodeName": "out1", "type": "Any"}, {"lineNumber": 428, "col_offset": 46, "nodeName": "out2", "type": "Any"}, {"lineNumber": 436, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 445, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 453, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 461, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 469, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 477, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 483, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 484, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 485, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 487, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 488, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 489, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 492, "col_offset": 21, "nodeName": "init", "type": "Any"}, {"lineNumber": 493, "col_offset": 22, "nodeName": "init", "type": "Any"}, {"lineNumber": 494, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 495, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "np", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "mx", "type": "Any"}, {"lineNumber": 516, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 516, "col_offset": 35, "nodeName": "prod", "type": "Any"}, {"lineNumber": 516, "col_offset": 44, "nodeName": "shape_before", "type": "Tuple[int, int, int]"}, {"lineNumber": 532, "col_offset": 23, "nodeName": "nchan", "type": "int"}, {"lineNumber": 532, "col_offset": 31, "nodeName": "up_x", "type": "int"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "mx", "type": "Any"}, {"lineNumber": 535, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 535, "col_offset": 35, "nodeName": "prod", "type": "Any"}, {"lineNumber": 535, "col_offset": 44, "nodeName": "shape_before", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 565, "col_offset": 38, "nodeName": "up_y", "type": "int"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "arange", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "F", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "mx", "type": "Any"}, {"lineNumber": 67, "col_offset": 49, "nodeName": "mx", "type": "Any"}, {"lineNumber": 68, "col_offset": 48, "nodeName": "mx", "type": "Any"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "npx", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "h_relu", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "mx", "type": "Any"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "np", "type": "Any"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "loss", "type": "Any"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 136, "col_offset": 37, "nodeName": "label", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "np", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "loss", "type": "Any"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "label", "type": "Any"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "np", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "loss", "type": "Any"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 140, "col_offset": 37, "nodeName": "label", "type": "Any"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "weighting", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "np", "type": "Any"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "loss", "type": "Any"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "label", "type": "Any"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "np", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "loss", "type": "Any"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "label", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "np", "type": "Any"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "loss", "type": "Any"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "label", "type": "Any"}, {"lineNumber": 147, "col_offset": 44, "nodeName": "weighting", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "astype", "type": "Any"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "foo", "type": "Any"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 181, "col_offset": 44, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 198, "col_offset": 52, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 221, "col_offset": 79, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 227, "col_offset": 31, "nodeName": "data_l", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 249, "col_offset": 21, "nodeName": "__reduce__", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "shape", "type": "Union[Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "r", "type": "int"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 273, "col_offset": 31, "nodeName": "s", "type": "int"}, {"lineNumber": 273, "col_offset": 38, "nodeName": "shape", "type": "Union[Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 275, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "step_switch", "type": "int"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "e", "type": "int"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "s", "type": "int"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "np", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "np", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "cache", "type": "Set[Tuple[Tuple[Any, ...], Tuple[Any, ...]]]"}, {"lineNumber": 315, "col_offset": 73, "nodeName": "x", "type": "Any"}, {"lineNumber": 315, "col_offset": 76, "nodeName": "y", "type": "Any"}, {"lineNumber": 317, "col_offset": 73, "nodeName": "x", "type": "Any"}, {"lineNumber": 317, "col_offset": 76, "nodeName": "y", "type": "Any"}, {"lineNumber": 323, "col_offset": 20, "nodeName": "split", "type": "Any"}, {"lineNumber": 323, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 324, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 325, "col_offset": 20, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 325, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 331, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 331, "col_offset": 29, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 334, "col_offset": 20, "nodeName": "split", "type": "Any"}, {"lineNumber": 334, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 335, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 336, "col_offset": 23, "nodeName": "layer", "type": "Any"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "hsplit", "type": "Any"}, {"lineNumber": 340, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 341, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 342, "col_offset": 20, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 342, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 347, "col_offset": 20, "nodeName": "vsplit", "type": "Any"}, {"lineNumber": 347, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 348, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 349, "col_offset": 20, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 349, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 352, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 352, "col_offset": 30, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 354, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 357, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 357, "col_offset": 15, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 357, "col_offset": 31, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 357, "col_offset": 48, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 357, "col_offset": 65, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 358, "col_offset": 70, "nodeName": "x", "type": "Any"}, {"lineNumber": 358, "col_offset": 73, "nodeName": "y", "type": "Any"}, {"lineNumber": 360, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 360, "col_offset": 15, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 360, "col_offset": 30, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 362, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 364, "col_offset": 30, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 366, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 374, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 376, "col_offset": 43, "nodeName": "ones", "type": "Any"}, {"lineNumber": 376, "col_offset": 54, "nodeName": "data_shape", "type": "Union[Tuple[int], Tuple[int, int]]"}, {"lineNumber": 386, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 389, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 391, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 392, "col_offset": 34, "nodeName": "random", "type": "Any"}, {"lineNumber": 393, "col_offset": 34, "nodeName": "random", "type": "Any"}, {"lineNumber": 398, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 399, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 402, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 404, "col_offset": 19, "nodeName": "layer1", "type": "Any"}, {"lineNumber": 404, "col_offset": 46, "nodeName": "layer2", "type": "Any"}, {"lineNumber": 405, "col_offset": 34, "nodeName": "random", "type": "Any"}, {"lineNumber": 406, "col_offset": 34, "nodeName": "random", "type": "Any"}, {"lineNumber": 420, "col_offset": 19, "nodeName": "mx", "type": "Any"}, {"lineNumber": 436, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 445, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 453, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 461, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 469, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 477, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 492, "col_offset": 21, "nodeName": "mx", "type": "Any"}, {"lineNumber": 493, "col_offset": 22, "nodeName": "mx", "type": "Any"}, {"lineNumber": 494, "col_offset": 14, "nodeName": "mx", "type": "Any"}, {"lineNumber": 495, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "mx", "type": "Any"}, {"lineNumber": 516, "col_offset": 22, "nodeName": "mx", "type": "Any"}, {"lineNumber": 516, "col_offset": 35, "nodeName": "_np", "type": "module"}, {"lineNumber": 535, "col_offset": 22, "nodeName": "mx", "type": "Any"}, {"lineNumber": 535, "col_offset": 35, "nodeName": "_np", "type": "module"}, {"lineNumber": 565, "col_offset": 23, "nodeName": "nchan", "type": "int"}, {"lineNumber": 565, "col_offset": 31, "nodeName": "up_x", "type": "int"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "np", "type": "Any"}, {"lineNumber": 568, "col_offset": 21, "nodeName": "prod", "type": "Any"}, {"lineNumber": 568, "col_offset": 30, "nodeName": "shape_before", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "TestBlock1", "type": "Type[Any]"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "K", "type": "int"}, {"lineNumber": 51, "col_offset": 52, "nodeName": "N", "type": "int"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "TestBlock2", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 49, "nodeName": "K", "type": "int"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "N", "type": "int"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "F", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "LinearRegression", "type": "Type[Any]"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 51, "nodeName": "num_input_dim", "type": "int"}, {"lineNumber": 79, "col_offset": 66, "nodeName": "num_hidden_dim", "type": "int"}, {"lineNumber": 81, "col_offset": 51, "nodeName": "num_hidden_dim", "type": "int"}, {"lineNumber": 81, "col_offset": 67, "nodeName": "num_output_dim", "type": "int"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "F", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "_np", "type": "module"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "Foo", "type": "Type[Any]"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "np", "type": "Any"}, {"lineNumber": 181, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "mx", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 221, "col_offset": 85, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 221, "col_offset": 89, "nodeName": "data_l", "type": "Any"}, {"lineNumber": 249, "col_offset": 21, "nodeName": "ele", "type": "Any"}, {"lineNumber": 262, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "index", "type": "List[Union[slice, int]]"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "index", "type": "List[Union[slice, int]]"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 272, "col_offset": 34, "nodeName": "shape", "type": "Union[Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 273, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 275, "col_offset": 16, "nodeName": "index", "type": "List[Union[slice, int]]"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 275, "col_offset": 35, "nodeName": "s", "type": "int"}, {"lineNumber": 275, "col_offset": 38, "nodeName": "e", "type": "int"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 302, "col_offset": 16, "nodeName": "hashable_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 302, "col_offset": 31, "nodeName": "index1", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 302, "col_offset": 40, "nodeName": "hashable_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 302, "col_offset": 55, "nodeName": "index2", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "hashable_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 304, "col_offset": 38, "nodeName": "index1", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 304, "col_offset": 47, "nodeName": "hashable_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 304, "col_offset": 62, "nodeName": "index2", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 323, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 323, "col_offset": 34, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 325, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 331, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 334, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 336, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 340, "col_offset": 35, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 342, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 347, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 347, "col_offset": 35, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 349, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 374, "col_offset": 25, "nodeName": "idx", "type": "int"}, {"lineNumber": 376, "col_offset": 43, "nodeName": "np", "type": "Any"}, {"lineNumber": 377, "col_offset": 63, "nodeName": "a", "type": "Any"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 385, "col_offset": 18, "nodeName": "Case1", "type": "Type[Any]"}, {"lineNumber": 385, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 386, "col_offset": 25, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 389, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 391, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 391, "col_offset": 44, "nodeName": "y", "type": "Any"}, {"lineNumber": 392, "col_offset": 34, "nodeName": "np", "type": "Any"}, {"lineNumber": 393, "col_offset": 34, "nodeName": "np", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 397, "col_offset": 18, "nodeName": "Case2", "type": "Type[Any]"}, {"lineNumber": 397, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 398, "col_offset": 26, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 399, "col_offset": 26, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 402, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 404, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 404, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 404, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 404, "col_offset": 58, "nodeName": "y", "type": "Any"}, {"lineNumber": 405, "col_offset": 34, "nodeName": "np", "type": "Any"}, {"lineNumber": 406, "col_offset": 34, "nodeName": "np", "type": "Any"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 414, "col_offset": 18, "nodeName": "Foo", "type": "Type[Any]"}, {"lineNumber": 414, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 417, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 436, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 445, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 453, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 461, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 469, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 477, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "mx", "type": "Any"}, {"lineNumber": 568, "col_offset": 21, "nodeName": "_np", "type": "module"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "pred", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "label", "type": "Any"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "grad", "type": "Any"}, {"lineNumber": 198, "col_offset": 52, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "random", "type": "module"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "index", "type": "List[Union[slice, int]]"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 272, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "index", "type": "List[Union[slice, int]]"}, {"lineNumber": 279, "col_offset": 29, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 279, "col_offset": 35, "nodeName": "e", "type": "int"}, {"lineNumber": 279, "col_offset": 38, "nodeName": "s", "type": "int"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "index", "type": "List[Union[slice, int]]"}, {"lineNumber": 281, "col_offset": 29, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 281, "col_offset": 35, "nodeName": "s", "type": "int"}, {"lineNumber": 281, "col_offset": 38, "nodeName": "e", "type": "int"}, {"lineNumber": 301, "col_offset": 40, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 301, "col_offset": 52, "nodeName": "index1", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 313, "col_offset": 59, "nodeName": "index2", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 323, "col_offset": 20, "nodeName": "F", "type": "Any"}, {"lineNumber": 325, "col_offset": 20, "nodeName": "F", "type": "Any"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "TestSlicingWithSplit2", "type": "Type[Any]"}, {"lineNumber": 330, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 331, "col_offset": 29, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 334, "col_offset": 20, "nodeName": "F", "type": "Any"}, {"lineNumber": 336, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 336, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "F", "type": "Any"}, {"lineNumber": 342, "col_offset": 20, "nodeName": "F", "type": "Any"}, {"lineNumber": 347, "col_offset": 20, "nodeName": "F", "type": "Any"}, {"lineNumber": 349, "col_offset": 20, "nodeName": "F", "type": "Any"}, {"lineNumber": 355, "col_offset": 37, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 363, "col_offset": 37, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 367, "col_offset": 37, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 376, "col_offset": 43, "nodeName": "mx", "type": "Any"}, {"lineNumber": 377, "col_offset": 65, "nodeName": "idx", "type": "int"}, {"lineNumber": 392, "col_offset": 34, "nodeName": "mx", "type": "Any"}, {"lineNumber": 393, "col_offset": 34, "nodeName": "mx", "type": "Any"}, {"lineNumber": 405, "col_offset": 34, "nodeName": "mx", "type": "Any"}, {"lineNumber": 406, "col_offset": 34, "nodeName": "mx", "type": "Any"}, {"lineNumber": 417, "col_offset": 21, "nodeName": "np", "type": "Any"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "v", "type": "Any"}, {"lineNumber": 198, "col_offset": 52, "nodeName": "np", "type": "Any"}, {"lineNumber": 198, "col_offset": 69, "nodeName": "grad", "type": "Any"}, {"lineNumber": 267, "col_offset": 48, "nodeName": "shape", "type": "Union[Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 267, "col_offset": 58, "nodeName": "shape", "type": "Union[Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 301, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 308, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 308, "col_offset": 33, "nodeName": "index1", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 308, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 308, "col_offset": 49, "nodeName": "index1", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 319, "col_offset": 78, "nodeName": "index2", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 355, "col_offset": 37, "nodeName": "_np", "type": "module"}, {"lineNumber": 363, "col_offset": 37, "nodeName": "_np", "type": "module"}, {"lineNumber": 367, "col_offset": 37, "nodeName": "_np", "type": "module"}, {"lineNumber": 417, "col_offset": 21, "nodeName": "F", "type": "Any"}, {"lineNumber": 198, "col_offset": 52, "nodeName": "mx", "type": "Any"}, {"lineNumber": 198, "col_offset": 69, "nodeName": "v", "type": "Any"}, {"lineNumber": 267, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 267, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 313, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 313, "col_offset": 34, "nodeName": "index1", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 313, "col_offset": 44, "nodeName": "y", "type": "Any"}, {"lineNumber": 313, "col_offset": 50, "nodeName": "index1", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 316, "col_offset": 70, "nodeName": "a", "type": "Any"}, {"lineNumber": 316, "col_offset": 76, "nodeName": "index1", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 316, "col_offset": 86, "nodeName": "b", "type": "Any"}, {"lineNumber": 316, "col_offset": 92, "nodeName": "index1", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 355, "col_offset": 53, "nodeName": "split", "type": "Any"}, {"lineNumber": 355, "col_offset": 63, "nodeName": "a", "type": "Any"}, {"lineNumber": 363, "col_offset": 53, "nodeName": "hsplit", "type": "Any"}, {"lineNumber": 363, "col_offset": 64, "nodeName": "a", "type": "Any"}, {"lineNumber": 367, "col_offset": 53, "nodeName": "vsplit", "type": "Any"}, {"lineNumber": 367, "col_offset": 64, "nodeName": "a", "type": "Any"}, {"lineNumber": 319, "col_offset": 47, "nodeName": "a", "type": "Any"}, {"lineNumber": 319, "col_offset": 53, "nodeName": "index1", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 319, "col_offset": 63, "nodeName": "b", "type": "Any"}, {"lineNumber": 319, "col_offset": 69, "nodeName": "index1", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 355, "col_offset": 53, "nodeName": "_np", "type": "module"}, {"lineNumber": 355, "col_offset": 66, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 363, "col_offset": 53, "nodeName": "_np", "type": "module"}, {"lineNumber": 363, "col_offset": 67, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 367, "col_offset": 53, "nodeName": "_np", "type": "module"}, {"lineNumber": 367, "col_offset": 67, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}]