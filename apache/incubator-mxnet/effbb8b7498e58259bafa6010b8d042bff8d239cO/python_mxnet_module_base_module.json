[{"lineNumber": 37, "col_offset": 0, "nodeName": "_check_input_names", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "_check_names_match", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "_parse_data_desc", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "names", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "actual", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "data_shapes", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "list_arguments", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "candidates", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "throw", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "throw", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "_check_names_match", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "data_names", "type": "Any"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "data_shapes", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 7, "nodeName": "label_shapes", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "label_shapes", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "data_shapes", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "label_shapes", "type": "Union[List[Any], Any]"}, {"lineNumber": 180, "col_offset": 30, "nodeName": "logging", "type": "module"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "logger", "type": "Any"}, {"lineNumber": 181, "col_offset": 22, "nodeName": "logger", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "binded", "type": "bool"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "for_training", "type": "bool"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "inputs_need_grad", "type": "bool"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "params_initialized", "type": "bool"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "optimizer_initialized", "type": "bool"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "_symbol", "type": "None"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "_total_exec_bytes", "type": "int"}, {"lineNumber": 732, "col_offset": 8, "nodeName": "save_dict", "type": "Any"}, {"lineNumber": 733, "col_offset": 8, "nodeName": "arg_params", "type": "Dict[Any, Any]"}, {"lineNumber": 734, "col_offset": 8, "nodeName": "aux_params", "type": "Dict[Any, Any]"}, {"lineNumber": 1067, "col_offset": 15, "nodeName": "_symbol", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "data_shapes", "type": "Any"}, {"lineNumber": 61, "col_offset": 7, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "data_names", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "actual", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 72, "col_offset": 70, "nodeName": "x", "type": "Any"}, {"lineNumber": 72, "col_offset": 75, "nodeName": "data_shapes", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "_check_names_match", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "label_names", "type": "Any"}, {"lineNumber": 76, "col_offset": 40, "nodeName": "label_shapes", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "_check_names_match", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "label_names", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "BaseModule"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "BaseModule"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "BaseModule"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "BaseModule"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "BaseModule"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "BaseModule"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "BaseModule"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "BaseModule"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "forward", "type": "Callable[..., Any]"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "data_batch", "type": "Any"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "binded", "type": "bool"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "binded", "type": "bool"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "binded", "type": "bool"}, {"lineNumber": 413, "col_offset": 54, "nodeName": "Uniform", "type": "Any"}, {"lineNumber": 495, "col_offset": 15, "nodeName": "num_epoch", "type": "Any"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "bind", "type": "Callable[..., Any]"}, {"lineNumber": 589, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 594, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 602, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 611, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 616, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 638, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 640, "col_offset": 38, "nodeName": "Uniform", "type": "Any"}, {"lineNumber": 669, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "init_params", "type": "Callable[..., Any]"}, {"lineNumber": 714, "col_offset": 33, "nodeName": "get_params", "type": "Callable[[], Any]"}, {"lineNumber": 732, "col_offset": 20, "nodeName": "load", "type": "Any"}, {"lineNumber": 732, "col_offset": 33, "nodeName": "fname", "type": "Any"}, {"lineNumber": 735, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 735, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 735, "col_offset": 24, "nodeName": "items", "type": "Any"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "set_params", "type": "Callable[..., Any]"}, {"lineNumber": 743, "col_offset": 24, "nodeName": "arg_params", "type": "Dict[Any, Any]"}, {"lineNumber": 743, "col_offset": 36, "nodeName": "aux_params", "type": "Dict[Any, Any]"}, {"lineNumber": 765, "col_offset": 15, "nodeName": "binded", "type": "bool"}, {"lineNumber": 780, "col_offset": 15, "nodeName": "binded", "type": "bool"}, {"lineNumber": 785, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 815, "col_offset": 11, "nodeName": "sparse_row_id_fn", "type": "Any"}, {"lineNumber": 855, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 877, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 907, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 939, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 964, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 985, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 1029, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 1054, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 1067, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "arg", "type": "Any"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "typename", "type": "Any"}, {"lineNumber": 51, "col_offset": 40, "nodeName": "name", "type": "Any"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "msg", "type": "str"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "msg", "type": "str"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "msg", "type": "str"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "msg", "type": "str"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "DataDesc", "type": "Any"}, {"lineNumber": 72, "col_offset": 53, "nodeName": "DataDesc", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 75, "col_offset": 75, "nodeName": "x", "type": "Any"}, {"lineNumber": 75, "col_offset": 80, "nodeName": "label_shapes", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "BaseModule"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "self", "type": "BaseModule"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "self", "type": "BaseModule"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "self", "type": "BaseModule"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "self", "type": "BaseModule"}, {"lineNumber": 497, "col_offset": 30, "nodeName": "provide_data", "type": "Any"}, {"lineNumber": 497, "col_offset": 68, "nodeName": "provide_label", "type": "Any"}, {"lineNumber": 498, "col_offset": 50, "nodeName": "force_rebind", "type": "Any"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "self", "type": "BaseModule"}, {"lineNumber": 697, "col_offset": 54, "nodeName": "arg_params", "type": "Dict[Any, Any]"}, {"lineNumber": 697, "col_offset": 77, "nodeName": "aux_params", "type": "Dict[Any, Any]"}, {"lineNumber": 698, "col_offset": 39, "nodeName": "allow_missing", "type": "bool"}, {"lineNumber": 698, "col_offset": 65, "nodeName": "force_init", "type": "bool"}, {"lineNumber": 699, "col_offset": 37, "nodeName": "allow_extra", "type": "bool"}, {"lineNumber": 714, "col_offset": 33, "nodeName": "self", "type": "BaseModule"}, {"lineNumber": 732, "col_offset": 20, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 735, "col_offset": 24, "nodeName": "save_dict", "type": "Any"}, {"lineNumber": 736, "col_offset": 12, "nodeName": "arg_type", "type": "Any"}, {"lineNumber": 736, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 736, "col_offset": 29, "nodeName": "split", "type": "Any"}, {"lineNumber": 737, "col_offset": 15, "nodeName": "arg_type", "type": "Any"}, {"lineNumber": 738, "col_offset": 35, "nodeName": "value", "type": "Any"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "self", "type": "BaseModule"}, {"lineNumber": 765, "col_offset": 15, "nodeName": "self", "type": "BaseModule"}, {"lineNumber": 780, "col_offset": 15, "nodeName": "self", "type": "BaseModule"}, {"lineNumber": 816, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "names", "type": "Any"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "join", "type": "Callable"}, {"lineNumber": 51, "col_offset": 58, "nodeName": "candidates", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "data_shapes", "type": "Any"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 63, "col_offset": 46, "nodeName": "data_names", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 72, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "DataDesc", "type": "Any"}, {"lineNumber": 75, "col_offset": 58, "nodeName": "DataDesc", "type": "Any"}, {"lineNumber": 497, "col_offset": 30, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 497, "col_offset": 68, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 736, "col_offset": 29, "nodeName": "k", "type": "Any"}, {"lineNumber": 738, "col_offset": 16, "nodeName": "arg_params", "type": "Dict[Any, Any]"}, {"lineNumber": 739, "col_offset": 17, "nodeName": "arg_type", "type": "Any"}, {"lineNumber": 740, "col_offset": 35, "nodeName": "value", "type": "Any"}, {"lineNumber": 816, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 816, "col_offset": 26, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 75, "col_offset": 68, "nodeName": "x", "type": "Any"}, {"lineNumber": 738, "col_offset": 27, "nodeName": "name", "type": "Any"}, {"lineNumber": 740, "col_offset": 16, "nodeName": "aux_params", "type": "Dict[Any, Any]"}, {"lineNumber": 742, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 740, "col_offset": 27, "nodeName": "name", "type": "Any"}, {"lineNumber": 742, "col_offset": 57, "nodeName": "fname", "type": "Any"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "arg", "type": "Any"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "arg", "type": "Any"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "arg", "type": "Any"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "arg", "type": "Any"}]