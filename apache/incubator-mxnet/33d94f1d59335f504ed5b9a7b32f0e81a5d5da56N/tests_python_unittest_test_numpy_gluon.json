[{"lineNumber": 33, "col_offset": 0, "nodeName": "test_create_np_param", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "test_optimizer_with_np_ndarrays", "type": "Callable[[], Any]"}, {"lineNumber": 115, "col_offset": 0, "nodeName": "test_optimizer_backward_compat", "type": "Callable[[], Any]"}, {"lineNumber": 123, "col_offset": 0, "nodeName": "test_np_loss_ndarray", "type": "Callable[[], Any]"}, {"lineNumber": 156, "col_offset": 0, "nodeName": "test_np_get_constant", "type": "Callable[[], Any]"}, {"lineNumber": 178, "col_offset": 0, "nodeName": "test_parameters_zero_grad", "type": "Callable[[], Any]"}, {"lineNumber": 195, "col_offset": 0, "nodeName": "check_gluon_save_load", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 225, "col_offset": 0, "nodeName": "hashable_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 249, "col_offset": 0, "nodeName": "test_symbolic_basic_slicing", "type": "Callable[[], Any]"}, {"lineNumber": 373, "col_offset": 0, "nodeName": "test_net_symbol_save_load", "type": "Callable[[], Any]"}, {"lineNumber": 400, "col_offset": 0, "nodeName": "test_hybridize_boolean_dtype", "type": "Callable[[], Any]"}, {"lineNumber": 421, "col_offset": 0, "nodeName": "test_optimize_for", "type": "Callable[[], Any]"}, {"lineNumber": 443, "col_offset": 0, "nodeName": "test_activations_leakyrelu", "type": "Callable[[], Any]"}, {"lineNumber": 451, "col_offset": 0, "nodeName": "test_activations_prelu", "type": "Callable[[], Any]"}, {"lineNumber": 459, "col_offset": 0, "nodeName": "test_activations_elu", "type": "Callable[[], Any]"}, {"lineNumber": 466, "col_offset": 0, "nodeName": "test_activations_selu", "type": "Callable[[], Any]"}, {"lineNumber": 473, "col_offset": 0, "nodeName": "test_activations_gelu", "type": "Callable[[], Any]"}, {"lineNumber": 480, "col_offset": 0, "nodeName": "test_activations_swish", "type": "Callable[[], Any]"}, {"lineNumber": 486, "col_offset": 0, "nodeName": "test_concatenate", "type": "Callable[[], Any]"}, {"lineNumber": 507, "col_offset": 0, "nodeName": "test_identity", "type": "Callable[[], Any]"}, {"lineNumber": 513, "col_offset": 0, "nodeName": "test_pixelshuffle1d", "type": "Callable[[], Any]"}, {"lineNumber": 530, "col_offset": 0, "nodeName": "test_pixelshuffle2d", "type": "Callable[[], Any]"}, {"lineNumber": 561, "col_offset": 0, "nodeName": "test_pixelshuffle3d", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "regressor", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "total_loss", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "t", "type": "int"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "updater", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "label", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "weighting", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "label", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "weighting", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "L", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "L", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "const_arr", "type": "Any"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "out_np", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "prefix", "type": "str"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "input_names", "type": "Union[str, List[str]]"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "loaded_out", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "ele", "type": "Any"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "tuple_idx", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 288, "col_offset": 17, "nodeName": "shapes", "type": "List[Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]]"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 402, "col_offset": 14, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "foo", "type": "Any"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "foo", "type": "Any"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 423, "col_offset": 20, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 431, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "model2", "type": "Any"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 509, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 510, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "nchan", "type": "int"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "up_x", "type": "int"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "nx", "type": "int"}, {"lineNumber": 518, "col_offset": 4, "nodeName": "shape_before", "type": "Tuple[int, int, int]"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "shape_after", "type": "Tuple[int, int, int]"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 521, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "nchan", "type": "int"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "up_x", "type": "int"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "up_y", "type": "int"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "nx", "type": "int"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "ny", "type": "int"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "shape_before", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "shape_after", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "nchan", "type": "int"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "up_x", "type": "int"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "up_y", "type": "int"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "up_z", "type": "int"}, {"lineNumber": 567, "col_offset": 4, "nodeName": "nx", "type": "int"}, {"lineNumber": 568, "col_offset": 4, "nodeName": "ny", "type": "int"}, {"lineNumber": 569, "col_offset": 4, "nodeName": "nz", "type": "int"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "shape_before", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "shape_after", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 573, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 574, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "K", "type": "int"}, {"lineNumber": 34, "col_offset": 10, "nodeName": "N", "type": "int"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "Uniform", "type": "Any"}, {"lineNumber": 64, "col_offset": 48, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "LinearRegression", "type": "Type[Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "regressor", "type": "Any"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "TotalLoss", "type": "Type[Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 103, "col_offset": 14, "nodeName": "Trainer", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "delattr", "type": "Callable[[Any, Union[bytearray, bytes, str]], None]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "Updater", "type": "Any"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "updater", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "L1Loss", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "L1Loss", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "L1Loss", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "L2Loss", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "L2Loss", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "L2Loss", "type": "Any"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "SoftmaxCrossEntropyLoss", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "L", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "L", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 158, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "foo", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 208, "col_offset": 10, "nodeName": "net_builder", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 211, "col_offset": 10, "nodeName": "net", "type": "Any"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "export", "type": "Any"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "prefix", "type": "str"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "imports", "type": "Any"}, {"lineNumber": 217, "col_offset": 45, "nodeName": "input_names", "type": "Union[List[str], str]"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "out_np", "type": "Any"}, {"lineNumber": 222, "col_offset": 32, "nodeName": "loaded_out", "type": "Any"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 246, "col_offset": 17, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "index", "type": "List[Union[slice, int]]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "step_switch", "type": "int"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "cache", "type": "Set[Tuple[Tuple[Any, ...], Tuple[Any, ...]]]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 314, "col_offset": 35, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 321, "col_offset": 36, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 331, "col_offset": 36, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 338, "col_offset": 36, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "data_shape", "type": "Any"}, {"lineNumber": 362, "col_offset": 20, "nodeName": "idx", "type": "Any"}, {"lineNumber": 365, "col_offset": 30, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "check_gluon_save_load", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 384, "col_offset": 26, "nodeName": "Case1", "type": "Type[Any]"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "check_gluon_save_load", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 397, "col_offset": 26, "nodeName": "Case2", "type": "Type[Any]"}, {"lineNumber": 402, "col_offset": 14, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 410, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 411, "col_offset": 10, "nodeName": "Foo", "type": "Type[Any]"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "foo", "type": "Any"}, {"lineNumber": 412, "col_offset": 15, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 414, "col_offset": 10, "nodeName": "Foo", "type": "Type[Any]"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 416, "col_offset": 11, "nodeName": "foo", "type": "Any"}, {"lineNumber": 416, "col_offset": 15, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 418, "col_offset": 11, "nodeName": "same", "type": "Any"}, {"lineNumber": 423, "col_offset": 20, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 434, "col_offset": 10, "nodeName": "TestBlock", "type": "Type[Any]"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 438, "col_offset": 10, "nodeName": "net", "type": "Any"}, {"lineNumber": 438, "col_offset": 14, "nodeName": "a", "type": "Any"}, {"lineNumber": 438, "col_offset": 17, "nodeName": "b", "type": "Any"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "optimize_for", "type": "Any"}, {"lineNumber": 439, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 439, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 440, "col_offset": 11, "nodeName": "net", "type": "Any"}, {"lineNumber": 440, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 440, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 446, "col_offset": 16, "nodeName": "LeakyReLU", "type": "Any"}, {"lineNumber": 447, "col_offset": 10, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 453, "col_offset": 16, "nodeName": "PReLU", "type": "Any"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 455, "col_offset": 10, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 461, "col_offset": 16, "nodeName": "ELU", "type": "Any"}, {"lineNumber": 462, "col_offset": 10, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 468, "col_offset": 16, "nodeName": "SELU", "type": "Any"}, {"lineNumber": 469, "col_offset": 10, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 475, "col_offset": 16, "nodeName": "GELU", "type": "Any"}, {"lineNumber": 476, "col_offset": 10, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 482, "col_offset": 16, "nodeName": "Swish", "type": "Any"}, {"lineNumber": 483, "col_offset": 10, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "HybridConcatenate", "type": "Any"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 492, "col_offset": 13, "nodeName": "Concatenate", "type": "Any"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 501, "col_offset": 9, "nodeName": "model2", "type": "Any"}, {"lineNumber": 502, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 503, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "wait_to_read", "type": "Any"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "wait_to_read", "type": "Any"}, {"lineNumber": 509, "col_offset": 12, "nodeName": "Identity", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 511, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 518, "col_offset": 37, "nodeName": "nx", "type": "int"}, {"lineNumber": 519, "col_offset": 22, "nodeName": "nchan", "type": "int"}, {"lineNumber": 520, "col_offset": 12, "nodeName": "PixelShuffle1D", "type": "Any"}, {"lineNumber": 520, "col_offset": 30, "nodeName": "up_x", "type": "int"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 521, "col_offset": 60, "nodeName": "shape_before", "type": "Tuple[int, int, int]"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 522, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 523, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 523, "col_offset": 22, "nodeName": "shape_after", "type": "Tuple[int, int, int]"}, {"lineNumber": 524, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 537, "col_offset": 44, "nodeName": "nx", "type": "int"}, {"lineNumber": 537, "col_offset": 48, "nodeName": "ny", "type": "int"}, {"lineNumber": 538, "col_offset": 22, "nodeName": "nchan", "type": "int"}, {"lineNumber": 539, "col_offset": 12, "nodeName": "PixelShuffle2D", "type": "Any"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 540, "col_offset": 60, "nodeName": "shape_before", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 541, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 542, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 542, "col_offset": 22, "nodeName": "shape_after", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 570, "col_offset": 51, "nodeName": "nx", "type": "int"}, {"lineNumber": 570, "col_offset": 55, "nodeName": "ny", "type": "int"}, {"lineNumber": 570, "col_offset": 59, "nodeName": "nz", "type": "int"}, {"lineNumber": 571, "col_offset": 22, "nodeName": "nchan", "type": "int"}, {"lineNumber": 572, "col_offset": 12, "nodeName": "PixelShuffle3D", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 573, "col_offset": 53, "nodeName": "shape_before", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 574, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 575, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 575, "col_offset": 22, "nodeName": "shape_after", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 580, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "TestBlock", "type": "Type[Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 64, "col_offset": 48, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "check_block_params", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "TestBlock1", "type": "Type[Any]"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "NDArray", "type": "Any"}, {"lineNumber": 65, "col_offset": 64, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "check_block_params", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "TestBlock1", "type": "Type[Any]"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "NDArray", "type": "Any"}, {"lineNumber": 66, "col_offset": 63, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "check_block_params", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 46, "nodeName": "TestBlock2", "type": "Any"}, {"lineNumber": 67, "col_offset": 65, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 67, "col_offset": 77, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "check_block_params", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "TestBlock2", "type": "Any"}, {"lineNumber": 68, "col_offset": 64, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 68, "col_offset": 76, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "h_relu", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "regressor", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "Uniform", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "regressor", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "total_loss", "type": "Any"}, {"lineNumber": 103, "col_offset": 14, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 120, "col_offset": 32, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "np", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "np", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "loss", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "loss", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "loss", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "loss", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "loss", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "loss", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "np", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "np", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "loss", "type": "Any"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 158, "col_offset": 65, "nodeName": "_np", "type": "module"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 168, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 168, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 170, "col_offset": 14, "nodeName": "Foo", "type": "Type[Any]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "foo", "type": "Any"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "net", "type": "Any"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "values", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "values", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "data_l", "type": "Any"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "out", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "uuid4", "type": "Callable[[], uuid.UUID]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "SymbolBlock", "type": "Any"}, {"lineNumber": 216, "col_offset": 45, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 216, "col_offset": 69, "nodeName": "prefix", "type": "str"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 219, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 219, "col_offset": 38, "nodeName": "prefix", "type": "str"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 220, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 220, "col_offset": 38, "nodeName": "prefix", "type": "str"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 242, "col_offset": 22, "nodeName": "ele", "type": "Any"}, {"lineNumber": 242, "col_offset": 27, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "r", "type": "int"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "s", "type": "int"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "e", "type": "int"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 275, "col_offset": 21, "nodeName": "index", "type": "List[Union[slice, int]]"}, {"lineNumber": 289, "col_offset": 16, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "normal", "type": "Any"}, {"lineNumber": 290, "col_offset": 38, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "normal", "type": "Any"}, {"lineNumber": 291, "col_offset": 38, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 292, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "index1", "type": "Tuple[Union[int, slice], ...]"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "index2", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 299, "col_offset": 43, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 304, "col_offset": 43, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 314, "col_offset": 35, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 321, "col_offset": 36, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 331, "col_offset": 36, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 338, "col_offset": 36, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 365, "col_offset": 30, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "check_gluon_hybridize_consistency", "type": "Any"}, {"lineNumber": 368, "col_offset": 42, "nodeName": "IntegerIndexing", "type": "Type[Any]"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "layer", "type": "Any"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "layer1", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "layer2", "type": "Any"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 408, "col_offset": 19, "nodeName": "mask", "type": "Any"}, {"lineNumber": 410, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "foo", "type": "Any"}, {"lineNumber": 418, "col_offset": 11, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 418, "col_offset": 30, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 418, "col_offset": 46, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "d", "type": "Any"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 429, "col_offset": 19, "nodeName": "res", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 446, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 447, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 453, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "act_layer", "type": "Any"}, {"lineNumber": 455, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 461, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 462, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 468, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 469, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 475, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 476, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 482, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 483, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 489, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 490, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 491, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 492, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "model2", "type": "Any"}, {"lineNumber": 493, "col_offset": 15, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "model2", "type": "Any"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "model2", "type": "Any"}, {"lineNumber": 495, "col_offset": 15, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 498, "col_offset": 21, "nodeName": "Xavier", "type": "Any"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "model2", "type": "Any"}, {"lineNumber": 499, "col_offset": 22, "nodeName": "Xavier", "type": "Any"}, {"lineNumber": 500, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 501, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 502, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 503, "col_offset": 11, "nodeName": "x2", "type": "Any"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 509, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 511, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 511, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 518, "col_offset": 23, "nodeName": "nchan", "type": "int"}, {"lineNumber": 518, "col_offset": 31, "nodeName": "up_x", "type": "int"}, {"lineNumber": 519, "col_offset": 29, "nodeName": "nx", "type": "int"}, {"lineNumber": 519, "col_offset": 34, "nodeName": "up_x", "type": "int"}, {"lineNumber": 520, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "np", "type": "Any"}, {"lineNumber": 521, "col_offset": 22, "nodeName": "arange", "type": "Any"}, {"lineNumber": 523, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 537, "col_offset": 38, "nodeName": "up_y", "type": "int"}, {"lineNumber": 538, "col_offset": 29, "nodeName": "nx", "type": "int"}, {"lineNumber": 538, "col_offset": 34, "nodeName": "up_x", "type": "int"}, {"lineNumber": 538, "col_offset": 40, "nodeName": "ny", "type": "int"}, {"lineNumber": 538, "col_offset": 45, "nodeName": "up_y", "type": "int"}, {"lineNumber": 539, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 539, "col_offset": 31, "nodeName": "up_x", "type": "int"}, {"lineNumber": 539, "col_offset": 37, "nodeName": "up_y", "type": "int"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "np", "type": "Any"}, {"lineNumber": 540, "col_offset": 22, "nodeName": "arange", "type": "Any"}, {"lineNumber": 542, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 570, "col_offset": 45, "nodeName": "up_z", "type": "int"}, {"lineNumber": 571, "col_offset": 29, "nodeName": "nx", "type": "int"}, {"lineNumber": 571, "col_offset": 34, "nodeName": "up_x", "type": "int"}, {"lineNumber": 571, "col_offset": 40, "nodeName": "ny", "type": "int"}, {"lineNumber": 571, "col_offset": 45, "nodeName": "up_y", "type": "int"}, {"lineNumber": 571, "col_offset": 51, "nodeName": "nz", "type": "int"}, {"lineNumber": 571, "col_offset": 56, "nodeName": "up_z", "type": "int"}, {"lineNumber": 572, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 572, "col_offset": 31, "nodeName": "up_x", "type": "int"}, {"lineNumber": 572, "col_offset": 37, "nodeName": "up_y", "type": "int"}, {"lineNumber": 572, "col_offset": 43, "nodeName": "up_z", "type": "int"}, {"lineNumber": 575, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "expected_type", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "dot", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "w", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "dot", "type": "Any"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "w", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "nd", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "M", "type": "int"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "K", "type": "int"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "mx", "type": "Any"}, {"lineNumber": 64, "col_offset": 48, "nodeName": "mx", "type": "Any"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "nd", "type": "Any"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "nd", "type": "Any"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "as_np_ndarray", "type": "Any"}, {"lineNumber": 67, "col_offset": 65, "nodeName": "np", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "as_np_ndarray", "type": "Any"}, {"lineNumber": 68, "col_offset": 64, "nodeName": "np", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "w1", "type": "Any"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "relu", "type": "Any"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "h", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "dot", "type": "Any"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "w2", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "sum", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "init", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "np", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "np", "type": "Any"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "regressor", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "record", "type": "Any"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "regressor", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "total_loss", "type": "Any"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "output", "type": "Any"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "mx", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 120, "col_offset": 32, "nodeName": "np", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "sum", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "sum", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "sum", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "sum", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "sum", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "sum", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "output", "type": "Any"}, {"lineNumber": 149, "col_offset": 21, "nodeName": "label", "type": "Any"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "_np", "type": "module"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "output", "type": "Any"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "label", "type": "Any"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "weighting", "type": "Any"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "_np", "type": "module"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "Constant", "type": "Any"}, {"lineNumber": 163, "col_offset": 41, "nodeName": "const_arr", "type": "Any"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "np", "type": "Any"}, {"lineNumber": 168, "col_offset": 31, "nodeName": "const_arr", "type": "Any"}, {"lineNumber": 168, "col_offset": 54, "nodeName": "const_arr", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "foo", "type": "Any"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 175, "col_offset": 58, "nodeName": "const_arr", "type": "Any"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 215, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 215, "col_offset": 32, "nodeName": "data_l", "type": "Any"}, {"lineNumber": 215, "col_offset": 51, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 215, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 215, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 217, "col_offset": 69, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 217, "col_offset": 93, "nodeName": "prefix", "type": "str"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "net_imported", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "ele", "type": "Any"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "random", "type": "module"}, {"lineNumber": 254, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 254, "col_offset": 27, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[int, int, int], Tuple[()], Tuple[int, int]]"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "r", "type": "int"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "step_switch", "type": "int"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 293, "col_offset": 21, "nodeName": "random_slice_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 293, "col_offset": 40, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 294, "col_offset": 21, "nodeName": "random_slice_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 294, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 295, "col_offset": 67, "nodeName": "cache", "type": "Set[Tuple[Tuple[Any, ...], Tuple[Any, ...]]]"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 299, "col_offset": 43, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 304, "col_offset": 43, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "check_gluon_hybridize_consistency", "type": "Any"}, {"lineNumber": 308, "col_offset": 46, "nodeName": "TestSlicingSingleSymbol1", "type": "Type[Any]"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "check_gluon_hybridize_consistency", "type": "Any"}, {"lineNumber": 310, "col_offset": 46, "nodeName": "TestSlicingSingleSymbol2", "type": "Type[Any]"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 334, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 335, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 336, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 340, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 342, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 343, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "check_gluon_hybridize_consistency", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "TestSlicingWithSplit", "type": "Type[Any]"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "check_gluon_hybridize_consistency", "type": "Any"}, {"lineNumber": 351, "col_offset": 46, "nodeName": "TestSlicingWithSplit2", "type": "Type[Any]"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "check_gluon_hybridize_consistency", "type": "Any"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "TestSlicingWithHSplit", "type": "Type[Any]"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "check_gluon_hybridize_consistency", "type": "Any"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "TestSlicingWithVSplit", "type": "Type[Any]"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 381, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 383, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 384, "col_offset": 34, "nodeName": "normal", "type": "Any"}, {"lineNumber": 385, "col_offset": 34, "nodeName": "normal", "type": "Any"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 390, "col_offset": 26, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 391, "col_offset": 26, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 394, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 395, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 397, "col_offset": 34, "nodeName": "normal", "type": "Any"}, {"lineNumber": 398, "col_offset": 34, "nodeName": "normal", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 407, "col_offset": 45, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 410, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 418, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 418, "col_offset": 30, "nodeName": "out1", "type": "Any"}, {"lineNumber": 418, "col_offset": 46, "nodeName": "out2", "type": "Any"}, {"lineNumber": 425, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 426, "col_offset": 21, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 428, "col_offset": 18, "nodeName": "hybrid_forward", "type": "Any"}, {"lineNumber": 428, "col_offset": 40, "nodeName": "F", "type": "Any"}, {"lineNumber": 428, "col_offset": 43, "nodeName": "a", "type": "Any"}, {"lineNumber": 428, "col_offset": 46, "nodeName": "b", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "np", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "np", "type": "Any"}, {"lineNumber": 447, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 455, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 462, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 469, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 476, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 483, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 489, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 490, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 491, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 493, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 495, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 498, "col_offset": 21, "nodeName": "init", "type": "Any"}, {"lineNumber": 499, "col_offset": 22, "nodeName": "init", "type": "Any"}, {"lineNumber": 500, "col_offset": 14, "nodeName": "np", "type": "Any"}, {"lineNumber": 501, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "np", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "mx", "type": "Any"}, {"lineNumber": 521, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 521, "col_offset": 35, "nodeName": "prod", "type": "Any"}, {"lineNumber": 521, "col_offset": 44, "nodeName": "shape_before", "type": "Tuple[int, int, int]"}, {"lineNumber": 537, "col_offset": 23, "nodeName": "nchan", "type": "int"}, {"lineNumber": 537, "col_offset": 31, "nodeName": "up_x", "type": "int"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "mx", "type": "Any"}, {"lineNumber": 540, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 540, "col_offset": 35, "nodeName": "prod", "type": "Any"}, {"lineNumber": 540, "col_offset": 44, "nodeName": "shape_before", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 570, "col_offset": 38, "nodeName": "up_y", "type": "int"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "arange", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "F", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "np", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "mx", "type": "Any"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "mx", "type": "Any"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "mx", "type": "Any"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "npx", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "h_relu", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "mx", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "np", "type": "Any"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "loss", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "label", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "np", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "loss", "type": "Any"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 133, "col_offset": 37, "nodeName": "label", "type": "Any"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "np", "type": "Any"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "loss", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 135, "col_offset": 37, "nodeName": "label", "type": "Any"}, {"lineNumber": 135, "col_offset": 44, "nodeName": "weighting", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "np", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "loss", "type": "Any"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "label", "type": "Any"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "np", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "loss", "type": "Any"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 140, "col_offset": 37, "nodeName": "label", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "np", "type": "Any"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "loss", "type": "Any"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 142, "col_offset": 37, "nodeName": "label", "type": "Any"}, {"lineNumber": 142, "col_offset": 44, "nodeName": "weighting", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "astype", "type": "Any"}, {"lineNumber": 166, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "foo", "type": "Any"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 175, "col_offset": 44, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 192, "col_offset": 32, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 192, "col_offset": 52, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 215, "col_offset": 79, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 221, "col_offset": 31, "nodeName": "data_l", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 243, "col_offset": 21, "nodeName": "__reduce__", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[int, int, int], Tuple[()], Tuple[int, int]]"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "r", "type": "int"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 266, "col_offset": 31, "nodeName": "s", "type": "int"}, {"lineNumber": 266, "col_offset": 38, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[int, int, int], Tuple[()], Tuple[int, int]]"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "step_switch", "type": "int"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "e", "type": "int"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "s", "type": "int"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "np", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "np", "type": "Any"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "cache", "type": "Set[Tuple[Tuple[Any, ...], Tuple[Any, ...]]]"}, {"lineNumber": 308, "col_offset": 73, "nodeName": "x", "type": "Any"}, {"lineNumber": 308, "col_offset": 76, "nodeName": "y", "type": "Any"}, {"lineNumber": 310, "col_offset": 73, "nodeName": "x", "type": "Any"}, {"lineNumber": 310, "col_offset": 76, "nodeName": "y", "type": "Any"}, {"lineNumber": 316, "col_offset": 20, "nodeName": "split", "type": "Any"}, {"lineNumber": 316, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 317, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 318, "col_offset": 20, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 318, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 324, "col_offset": 29, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 327, "col_offset": 20, "nodeName": "split", "type": "Any"}, {"lineNumber": 327, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 328, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 329, "col_offset": 23, "nodeName": "layer", "type": "Any"}, {"lineNumber": 333, "col_offset": 20, "nodeName": "hsplit", "type": "Any"}, {"lineNumber": 333, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 334, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 335, "col_offset": 20, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 335, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "vsplit", "type": "Any"}, {"lineNumber": 340, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 341, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 342, "col_offset": 20, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 342, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 345, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 345, "col_offset": 15, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 345, "col_offset": 30, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 347, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 350, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 350, "col_offset": 15, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 350, "col_offset": 31, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 350, "col_offset": 48, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 350, "col_offset": 65, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 351, "col_offset": 70, "nodeName": "x", "type": "Any"}, {"lineNumber": 351, "col_offset": 73, "nodeName": "y", "type": "Any"}, {"lineNumber": 353, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 353, "col_offset": 15, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 353, "col_offset": 30, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 355, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 357, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 357, "col_offset": 15, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 357, "col_offset": 30, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 359, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 367, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 369, "col_offset": 43, "nodeName": "ones", "type": "Any"}, {"lineNumber": 369, "col_offset": 54, "nodeName": "data_shape", "type": "Any"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 383, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 384, "col_offset": 34, "nodeName": "random", "type": "Any"}, {"lineNumber": 385, "col_offset": 34, "nodeName": "random", "type": "Any"}, {"lineNumber": 390, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 391, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 396, "col_offset": 19, "nodeName": "layer1", "type": "Any"}, {"lineNumber": 396, "col_offset": 46, "nodeName": "layer2", "type": "Any"}, {"lineNumber": 397, "col_offset": 34, "nodeName": "random", "type": "Any"}, {"lineNumber": 398, "col_offset": 34, "nodeName": "random", "type": "Any"}, {"lineNumber": 410, "col_offset": 19, "nodeName": "mx", "type": "Any"}, {"lineNumber": 426, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 428, "col_offset": 18, "nodeName": "d", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "mx", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "mx", "type": "Any"}, {"lineNumber": 447, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 455, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 462, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 469, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 476, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 483, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 498, "col_offset": 21, "nodeName": "mx", "type": "Any"}, {"lineNumber": 499, "col_offset": 22, "nodeName": "mx", "type": "Any"}, {"lineNumber": 500, "col_offset": 14, "nodeName": "mx", "type": "Any"}, {"lineNumber": 501, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "mx", "type": "Any"}, {"lineNumber": 521, "col_offset": 22, "nodeName": "mx", "type": "Any"}, {"lineNumber": 521, "col_offset": 35, "nodeName": "_np", "type": "module"}, {"lineNumber": 540, "col_offset": 22, "nodeName": "mx", "type": "Any"}, {"lineNumber": 540, "col_offset": 35, "nodeName": "_np", "type": "module"}, {"lineNumber": 570, "col_offset": 23, "nodeName": "nchan", "type": "int"}, {"lineNumber": 570, "col_offset": 31, "nodeName": "up_x", "type": "int"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "np", "type": "Any"}, {"lineNumber": 573, "col_offset": 21, "nodeName": "prod", "type": "Any"}, {"lineNumber": 573, "col_offset": 30, "nodeName": "shape_before", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "TestBlock1", "type": "Type[Any]"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 49, "nodeName": "K", "type": "int"}, {"lineNumber": 49, "col_offset": 52, "nodeName": "N", "type": "int"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "TestBlock2", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 49, "nodeName": "K", "type": "int"}, {"lineNumber": 58, "col_offset": 52, "nodeName": "N", "type": "int"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "F", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "LinearRegression", "type": "Type[Any]"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 51, "nodeName": "num_input_dim", "type": "int"}, {"lineNumber": 76, "col_offset": 66, "nodeName": "num_hidden_dim", "type": "int"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "num_hidden_dim", "type": "int"}, {"lineNumber": 78, "col_offset": 67, "nodeName": "num_output_dim", "type": "int"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "F", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "_np", "type": "module"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "Foo", "type": "Type[Any]"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 166, "col_offset": 37, "nodeName": "np", "type": "Any"}, {"lineNumber": 175, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "mx", "type": "Any"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 215, "col_offset": 85, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 215, "col_offset": 89, "nodeName": "data_l", "type": "Any"}, {"lineNumber": 243, "col_offset": 21, "nodeName": "ele", "type": "Any"}, {"lineNumber": 255, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "index", "type": "List[Union[slice, int]]"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "index", "type": "List[Union[slice, int]]"}, {"lineNumber": 260, "col_offset": 29, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 265, "col_offset": 34, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[int, int, int], Tuple[()], Tuple[int, int]]"}, {"lineNumber": 266, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "index", "type": "List[Union[slice, int]]"}, {"lineNumber": 268, "col_offset": 29, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "s", "type": "int"}, {"lineNumber": 268, "col_offset": 38, "nodeName": "e", "type": "int"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "hashable_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 295, "col_offset": 31, "nodeName": "index1", "type": "Tuple[Union[int, slice], ...]"}, {"lineNumber": 295, "col_offset": 40, "nodeName": "hashable_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 295, "col_offset": 55, "nodeName": "index2", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 297, "col_offset": 23, "nodeName": "hashable_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 297, "col_offset": 38, "nodeName": "index1", "type": "Tuple[Union[int, slice], ...]"}, {"lineNumber": 297, "col_offset": 47, "nodeName": "hashable_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 297, "col_offset": 62, "nodeName": "index2", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 316, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 316, "col_offset": 34, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 318, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 324, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 327, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 329, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 333, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 333, "col_offset": 35, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 335, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 340, "col_offset": 35, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 342, "col_offset": 20, "nodeName": "np", "type": "Any"}, {"lineNumber": 367, "col_offset": 25, "nodeName": "idx", "type": "Any"}, {"lineNumber": 369, "col_offset": 43, "nodeName": "np", "type": "Any"}, {"lineNumber": 370, "col_offset": 63, "nodeName": "a", "type": "Any"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 377, "col_offset": 18, "nodeName": "Case1", "type": "Type[Any]"}, {"lineNumber": 377, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 383, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 383, "col_offset": 44, "nodeName": "y", "type": "Any"}, {"lineNumber": 384, "col_offset": 34, "nodeName": "np", "type": "Any"}, {"lineNumber": 385, "col_offset": 34, "nodeName": "np", "type": "Any"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 389, "col_offset": 18, "nodeName": "Case2", "type": "Type[Any]"}, {"lineNumber": 389, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 390, "col_offset": 26, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 391, "col_offset": 26, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 396, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 396, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 396, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 396, "col_offset": 58, "nodeName": "y", "type": "Any"}, {"lineNumber": 397, "col_offset": 34, "nodeName": "np", "type": "Any"}, {"lineNumber": 398, "col_offset": 34, "nodeName": "np", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 404, "col_offset": 18, "nodeName": "Foo", "type": "Type[Any]"}, {"lineNumber": 404, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 407, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 425, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 425, "col_offset": 18, "nodeName": "TestBlock", "type": "Type[Any]"}, {"lineNumber": 425, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 426, "col_offset": 21, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 428, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 447, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 455, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 462, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 469, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 476, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 483, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "mx", "type": "Any"}, {"lineNumber": 573, "col_offset": 21, "nodeName": "_np", "type": "module"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "pred", "type": "Any"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "label", "type": "Any"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 192, "col_offset": 32, "nodeName": "grad", "type": "Any"}, {"lineNumber": 192, "col_offset": 52, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 260, "col_offset": 29, "nodeName": "random", "type": "module"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "index", "type": "List[Union[slice, int]]"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 265, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "index", "type": "List[Union[slice, int]]"}, {"lineNumber": 272, "col_offset": 29, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 272, "col_offset": 35, "nodeName": "e", "type": "int"}, {"lineNumber": 272, "col_offset": 38, "nodeName": "s", "type": "int"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "index", "type": "List[Union[slice, int]]"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 274, "col_offset": 35, "nodeName": "s", "type": "int"}, {"lineNumber": 274, "col_offset": 38, "nodeName": "e", "type": "int"}, {"lineNumber": 294, "col_offset": 40, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 294, "col_offset": 52, "nodeName": "index1", "type": "Tuple[Union[int, slice], ...]"}, {"lineNumber": 306, "col_offset": 59, "nodeName": "index2", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 316, "col_offset": 20, "nodeName": "F", "type": "Any"}, {"lineNumber": 318, "col_offset": 20, "nodeName": "F", "type": "Any"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 323, "col_offset": 22, "nodeName": "TestSlicingWithSplit2", "type": "Type[Any]"}, {"lineNumber": 323, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 324, "col_offset": 29, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 327, "col_offset": 20, "nodeName": "F", "type": "Any"}, {"lineNumber": 329, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 329, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 333, "col_offset": 20, "nodeName": "F", "type": "Any"}, {"lineNumber": 335, "col_offset": 20, "nodeName": "F", "type": "Any"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "F", "type": "Any"}, {"lineNumber": 342, "col_offset": 20, "nodeName": "F", "type": "Any"}, {"lineNumber": 348, "col_offset": 37, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 356, "col_offset": 37, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 360, "col_offset": 37, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 369, "col_offset": 43, "nodeName": "mx", "type": "Any"}, {"lineNumber": 370, "col_offset": 65, "nodeName": "idx", "type": "Any"}, {"lineNumber": 384, "col_offset": 34, "nodeName": "mx", "type": "Any"}, {"lineNumber": 385, "col_offset": 34, "nodeName": "mx", "type": "Any"}, {"lineNumber": 397, "col_offset": 34, "nodeName": "mx", "type": "Any"}, {"lineNumber": 398, "col_offset": 34, "nodeName": "mx", "type": "Any"}, {"lineNumber": 407, "col_offset": 21, "nodeName": "np", "type": "Any"}, {"lineNumber": 426, "col_offset": 21, "nodeName": "mx", "type": "Any"}, {"lineNumber": 192, "col_offset": 32, "nodeName": "v", "type": "Any"}, {"lineNumber": 192, "col_offset": 52, "nodeName": "np", "type": "Any"}, {"lineNumber": 192, "col_offset": 69, "nodeName": "grad", "type": "Any"}, {"lineNumber": 260, "col_offset": 48, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[int, int, int], Tuple[()], Tuple[int, int]]"}, {"lineNumber": 260, "col_offset": 58, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[int, int, int], Tuple[()], Tuple[int, int]]"}, {"lineNumber": 294, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 301, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 301, "col_offset": 33, "nodeName": "index1", "type": "Tuple[Union[int, slice], ...]"}, {"lineNumber": 301, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 301, "col_offset": 49, "nodeName": "index1", "type": "Tuple[Union[int, slice], ...]"}, {"lineNumber": 312, "col_offset": 78, "nodeName": "index2", "type": "Tuple[Union[slice, int], ...]"}, {"lineNumber": 348, "col_offset": 37, "nodeName": "_np", "type": "module"}, {"lineNumber": 356, "col_offset": 37, "nodeName": "_np", "type": "module"}, {"lineNumber": 360, "col_offset": 37, "nodeName": "_np", "type": "module"}, {"lineNumber": 407, "col_offset": 21, "nodeName": "F", "type": "Any"}, {"lineNumber": 192, "col_offset": 52, "nodeName": "mx", "type": "Any"}, {"lineNumber": 192, "col_offset": 69, "nodeName": "v", "type": "Any"}, {"lineNumber": 260, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 260, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 306, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 306, "col_offset": 34, "nodeName": "index1", "type": "Tuple[Union[int, slice], ...]"}, {"lineNumber": 306, "col_offset": 44, "nodeName": "y", "type": "Any"}, {"lineNumber": 306, "col_offset": 50, "nodeName": "index1", "type": "Tuple[Union[int, slice], ...]"}, {"lineNumber": 309, "col_offset": 70, "nodeName": "a", "type": "Any"}, {"lineNumber": 309, "col_offset": 76, "nodeName": "index1", "type": "Tuple[Union[int, slice], ...]"}, {"lineNumber": 309, "col_offset": 86, "nodeName": "b", "type": "Any"}, {"lineNumber": 309, "col_offset": 92, "nodeName": "index1", "type": "Tuple[Union[int, slice], ...]"}, {"lineNumber": 348, "col_offset": 53, "nodeName": "split", "type": "Any"}, {"lineNumber": 348, "col_offset": 63, "nodeName": "a", "type": "Any"}, {"lineNumber": 356, "col_offset": 53, "nodeName": "hsplit", "type": "Any"}, {"lineNumber": 356, "col_offset": 64, "nodeName": "a", "type": "Any"}, {"lineNumber": 360, "col_offset": 53, "nodeName": "vsplit", "type": "Any"}, {"lineNumber": 360, "col_offset": 64, "nodeName": "a", "type": "Any"}, {"lineNumber": 312, "col_offset": 47, "nodeName": "a", "type": "Any"}, {"lineNumber": 312, "col_offset": 53, "nodeName": "index1", "type": "Tuple[Union[int, slice], ...]"}, {"lineNumber": 312, "col_offset": 63, "nodeName": "b", "type": "Any"}, {"lineNumber": 312, "col_offset": 69, "nodeName": "index1", "type": "Tuple[Union[int, slice], ...]"}, {"lineNumber": 348, "col_offset": 53, "nodeName": "_np", "type": "module"}, {"lineNumber": 348, "col_offset": 66, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 356, "col_offset": 53, "nodeName": "_np", "type": "module"}, {"lineNumber": 356, "col_offset": 67, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}, {"lineNumber": 360, "col_offset": 53, "nodeName": "_np", "type": "module"}, {"lineNumber": 360, "col_offset": 67, "nodeName": "shape", "type": "Union[Tuple[int, int, int, int], Tuple[int, int, int], Tuple[int, int], Tuple[int], Tuple[int, int, int, int, int], Tuple[()]]"}]