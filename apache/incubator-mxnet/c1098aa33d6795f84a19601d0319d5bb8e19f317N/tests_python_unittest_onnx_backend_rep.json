[{"lineNumber": 38, "col_offset": 22, "nodeName": "BackendRep", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "BackendRep", "type": "Any"}, {"lineNumber": 22, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "arg_params", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "arg_params", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "aux_params", "type": "Any"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "aux_params", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "device", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "data_names", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "data_forward", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "arg_params", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "args", "type": "Dict[nothing, nothing]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "exe", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "net", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "device", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "net_inputs", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "net_outputs", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "result", "type": "Union[List[numpy.ndarray], List[Any]]"}, {"lineNumber": 23, "col_offset": 10, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "MXNetBackendRep"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "MXNetBackendRep"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "MXNetBackendRep"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "MXNetBackendRep"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "device", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "idx", "type": "int"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 72, "col_offset": 41, "nodeName": "data_names", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "val", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "self", "type": "MXNetBackendRep"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "_bind", "type": "Any"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "forward", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "exe", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "GluonBackendRep"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "GluonBackendRep"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "device", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "net", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "net_outputs", "type": "Any"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "net_outputs", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "result", "type": "List[numpy.ndarray]"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "self", "type": "MXNetBackendRep"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "graph_input", "type": "Any"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "idx", "type": "int"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "arg_params", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "val", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "data_names", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "data_forward", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "args", "type": "Dict[nothing, nothing]"}, {"lineNumber": 83, "col_offset": 59, "nodeName": "aux_params", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "exe", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "self", "type": "GluonBackendRep"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "array", "type": "Any"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 126, "col_offset": 56, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 126, "col_offset": 70, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "self", "type": "GluonBackendRep"}, {"lineNumber": 127, "col_offset": 32, "nodeName": "net_inputs", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "mx", "type": "Any"}, {"lineNumber": 68, "col_offset": 53, "nodeName": "list_inputs", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "idx", "type": "int"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "data_forward", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "array", "type": "Any"}, {"lineNumber": 74, "col_offset": 44, "nodeName": "val", "type": "Any"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "self", "type": "MXNetBackendRep"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "arg_params", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "self", "type": "MXNetBackendRep"}, {"lineNumber": 83, "col_offset": 59, "nodeName": "self", "type": "MXNetBackendRep"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "mx", "type": "Any"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "nd", "type": "Any"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "o", "type": "Any"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 53, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "graph_input", "type": "Any"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "arg_params", "type": "Any"}, {"lineNumber": 69, "col_offset": 64, "nodeName": "graph_input", "type": "Any"}, {"lineNumber": 69, "col_offset": 83, "nodeName": "aux_params", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "nd", "type": "Any"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "self", "type": "MXNetBackendRep"}, {"lineNumber": 78, "col_offset": 38, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "data_names", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "data_forward", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "array", "type": "Any"}, {"lineNumber": 80, "col_offset": 48, "nodeName": "val", "type": "Any"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "output", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "o", "type": "Any"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 53, "nodeName": "self", "type": "MXNetBackendRep"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "self", "type": "MXNetBackendRep"}, {"lineNumber": 69, "col_offset": 83, "nodeName": "self", "type": "MXNetBackendRep"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "mx", "type": "Any"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "nd", "type": "Any"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "output", "type": "Any"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "mx", "type": "Any"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "net_outputs", "type": "Any"}]