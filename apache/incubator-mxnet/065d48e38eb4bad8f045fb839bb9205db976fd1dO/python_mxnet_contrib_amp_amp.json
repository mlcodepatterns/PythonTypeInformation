[{"lineNumber": 46, "col_offset": 0, "nodeName": "_cast_symbol_NDArray", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "_get_fun_to_wrap", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 205, "col_offset": 0, "nodeName": "_wrap_loss_output_functions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 240, "col_offset": 0, "nodeName": "scale_loss", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 288, "col_offset": 0, "nodeName": "init_trainer", "type": "Callable[[Any], Any]"}, {"lineNumber": 331, "col_offset": 0, "nodeName": "unscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 739, "col_offset": 0, "nodeName": "list_fp16_ops", "type": "Callable[[], Any]"}, {"lineNumber": 744, "col_offset": 0, "nodeName": "list_fp32_ops", "type": "Callable[[], Any]"}, {"lineNumber": 749, "col_offset": 0, "nodeName": "list_fp16_fp32_ops", "type": "Callable[[], Any]"}, {"lineNumber": 754, "col_offset": 0, "nodeName": "list_conditional_fp32_ops", "type": "Callable[[], Any]"}, {"lineNumber": 236, "col_offset": 0, "nodeName": "_amp_initialized", "type": "bool"}, {"lineNumber": 237, "col_offset": 0, "nodeName": "_amp_loss_scale_initialized", "type": "bool"}, {"lineNumber": 238, "col_offset": 0, "nodeName": "_loss_scaler", "type": "None"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "float_types", "type": "Tuple[Any, Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "module_internal", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "submodule_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "op_name_prefix", "type": "Any"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "_OP_NAME_PREFIX_LIST", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "wrap_list", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "wrap_list", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "wrap_list", "type": "Any"}, {"lineNumber": 185, "col_offset": 37, "nodeName": "wrap_list", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "WIDEST_TYPE_CASTS", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "LOSS_OUTPUT_FUNCTIONS", "type": "Any"}, {"lineNumber": 299, "col_offset": 11, "nodeName": "_amp_initialized", "type": "bool"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "original_conditional_op_names", "type": "List[Any]"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "conditional_op_names", "type": "List[Any]"}, {"lineNumber": 413, "col_offset": 4, "nodeName": "param_names", "type": "List[Any]"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "param_vals", "type": "List[Any]"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "indptr", "type": "List[int]"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "conditional_fp32_op", "type": "Any"}, {"lineNumber": 416, "col_offset": 31, "nodeName": "conditional_fp32_ops", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "original_conditional_fp32_op", "type": "Any"}, {"lineNumber": 430, "col_offset": 40, "nodeName": "CONDITIONAL_FP32_FUNCS", "type": "Any"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "common_ops", "type": "Set[Any]"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "common_ops", "type": "Set[Any]"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "common_ops", "type": "Set[Any]"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "combined_ops", "type": "Set[Any]"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "illegal_ops", "type": "Set[Any]"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "widest_dtype_ops", "type": "Any"}, {"lineNumber": 457, "col_offset": 23, "nodeName": "WIDEST_TYPE_CASTS", "type": "Any"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "target_dtype", "type": "Any"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "model_param_names", "type": "List[Any]"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "str_keys", "type": "List[Any]"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "sdata", "type": "List[int]"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 478, "col_offset": 13, "nodeName": "data_names", "type": "List[Any]"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "param_names", "type": "List[Any]"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "data_names", "type": "List[Any]"}, {"lineNumber": 574, "col_offset": 4, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "sym_name", "type": "Any"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "sym_name", "type": "Any"}, {"lineNumber": 630, "col_offset": 18, "nodeName": "_cached_graph", "type": "Any"}, {"lineNumber": 631, "col_offset": 4, "nodeName": "input_names", "type": "List[Any]"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "inp", "type": "Any"}, {"lineNumber": 632, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 639, "col_offset": 4, "nodeName": "arg_names", "type": "Set[Any]"}, {"lineNumber": 640, "col_offset": 4, "nodeName": "aux_names", "type": "Set[Any]"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "arg_dict", "type": "Dict[str, Any]"}, {"lineNumber": 645, "col_offset": 4, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "ret", "type": "Any"}, {"lineNumber": 674, "col_offset": 11, "nodeName": "ret", "type": "Any"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "sym_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 712, "col_offset": 11, "nodeName": "params_initialized", "type": "Any"}, {"lineNumber": 737, "col_offset": 11, "nodeName": "result_mod", "type": "Any"}, {"lineNumber": 742, "col_offset": 11, "nodeName": "FP16_FUNCS", "type": "Any"}, {"lineNumber": 747, "col_offset": 11, "nodeName": "FP32_FUNCS", "type": "Any"}, {"lineNumber": 752, "col_offset": 11, "nodeName": "FP16_FP32_FUNCS", "type": "Any"}, {"lineNumber": 757, "col_offset": 11, "nodeName": "CONDITIONAL_FP32_FUNCS", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "float16", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 48, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "s", "type": "Any"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "Symbol", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "module", "type": "Any"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "_get_op_name_prefix", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "func_name", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "cur_module", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "__module__", "type": "Any"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "__module__", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "__doc__", "type": "Any"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "__doc__", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "_new_fun", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "__module__", "type": "Any"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "__module__", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "__doc__", "type": "Any"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "__doc__", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "_new_fun", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 148, "col_offset": 28, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "__module__", "type": "Any"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "__module__", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "__doc__", "type": "Any"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "__doc__", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "_new_fun", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "_symbol_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 82, "nodeName": "_ndarray_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "base", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "target_precision_ops", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "FP16_FUNCS", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "fp32_ops", "type": "Any"}, {"lineNumber": 172, "col_offset": 54, "nodeName": "FP32_FUNCS", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "conditional_fp32_ops", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "CONDITIONAL_FP32_FUNCS", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "arg", "type": "Any"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "arg_values", "type": "Any"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 206, "col_offset": 7, "nodeName": "module", "type": "Any"}, {"lineNumber": 206, "col_offset": 17, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "_amp_loss_scaler", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 244, "col_offset": 35, "nodeName": "_amp_original_scale", "type": "Any"}, {"lineNumber": 245, "col_offset": 35, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 246, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 246, "col_offset": 18, "nodeName": "loss", "type": "Any"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "_amp_initialized", "type": "bool"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "_amp_initialized", "type": "bool"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "target_dtype", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "_loss_scaler", "type": "Any"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "_amp_loss_scale_initialized", "type": "bool"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "_amp_loss_scale_initialized", "type": "bool"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "loss_scaler", "type": "Any"}, {"lineNumber": 302, "col_offset": 22, "nodeName": "_loss_scaler", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "loss_scaler", "type": "Any"}, {"lineNumber": 306, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 306, "col_offset": 18, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 306, "col_offset": 40, "nodeName": "Trainer", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "_amp_loss_scaler", "type": "Any"}, {"lineNumber": 307, "col_offset": 48, "nodeName": "loss_scaler", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "_amp_original_scale", "type": "Any"}, {"lineNumber": 308, "col_offset": 51, "nodeName": "_scale", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "skip_update", "type": "Any"}, {"lineNumber": 309, "col_offset": 22, "nodeName": "wait_and_update", "type": "Any"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "update_multi_precision", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "launch_check_overflow", "type": "Any"}, {"lineNumber": 317, "col_offset": 32, "nodeName": "launch_check_overflow", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "_old_update", "type": "Any"}, {"lineNumber": 318, "col_offset": 43, "nodeName": "_update", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "_update", "type": "types.MethodType"}, {"lineNumber": 340, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 340, "col_offset": 18, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 340, "col_offset": 40, "nodeName": "Trainer", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "valid_grads", "type": "List[Any]"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "grads", "type": "Any"}, {"lineNumber": 342, "col_offset": 21, "nodeName": "valid_grads", "type": "List[Any]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "_scale", "type": "float"}, {"lineNumber": 391, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 391, "col_offset": 22, "nodeName": "sym", "type": "Any"}, {"lineNumber": 391, "col_offset": 27, "nodeName": "Symbol", "type": "Any"}, {"lineNumber": 393, "col_offset": 7, "nodeName": "target_dtype", "type": "Any"}, {"lineNumber": 396, "col_offset": 7, "nodeName": "target_dtype_ops", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "target_dtype_ops", "type": "Any"}, {"lineNumber": 399, "col_offset": 27, "nodeName": "FP16_FUNCS", "type": "Any"}, {"lineNumber": 401, "col_offset": 7, "nodeName": "fp32_ops", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "fp32_ops", "type": "Any"}, {"lineNumber": 404, "col_offset": 19, "nodeName": "FP32_FUNCS", "type": "Any"}, {"lineNumber": 406, "col_offset": 7, "nodeName": "conditional_fp32_ops", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "conditional_fp32_ops", "type": "Any"}, {"lineNumber": 409, "col_offset": 31, "nodeName": "CONDITIONAL_FP32_FUNCS", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "param_vals", "type": "List[Any]"}, {"lineNumber": 425, "col_offset": 7, "nodeName": "excluded_sym_names", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "excluded_sym_names", "type": "List[nothing]"}, {"lineNumber": 430, "col_offset": 40, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 435, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 436, "col_offset": 89, "nodeName": "common_ops", "type": "Set[Any]"}, {"lineNumber": 438, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 439, "col_offset": 101, "nodeName": "common_ops", "type": "Set[Any]"}, {"lineNumber": 441, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 442, "col_offset": 93, "nodeName": "common_ops", "type": "Set[Any]"}, {"lineNumber": 444, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 445, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 448, "col_offset": 18, "nodeName": "combined_ops", "type": "Set[Any]"}, {"lineNumber": 448, "col_offset": 33, "nodeName": "all_fp16_fp32_ops", "type": "Set[Any]"}, {"lineNumber": 449, "col_offset": 15, "nodeName": "illegal_ops", "type": "Set[Any]"}, {"lineNumber": 455, "col_offset": 59, "nodeName": "illegal_ops", "type": "Set[Any]"}, {"lineNumber": 457, "col_offset": 23, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 458, "col_offset": 19, "nodeName": "_DTYPE_NP_TO_MX", "type": "Any"}, {"lineNumber": 463, "col_offset": 16, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 464, "col_offset": 7, "nodeName": "data_names", "type": "List[Any]"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "data_names", "type": "List[Any]"}, {"lineNumber": 466, "col_offset": 12, "nodeName": "sym_name", "type": "Any"}, {"lineNumber": 472, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 481, "col_offset": 11, "nodeName": "c_str_array", "type": "Any"}, {"lineNumber": 481, "col_offset": 23, "nodeName": "str_keys", "type": "List[Any]"}, {"lineNumber": 483, "col_offset": 10, "nodeName": "SymbolHandle", "type": "Any"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "check_call", "type": "Any"}, {"lineNumber": 507, "col_offset": 11, "nodeName": "Symbol", "type": "Any"}, {"lineNumber": 507, "col_offset": 18, "nodeName": "out", "type": "Any"}, {"lineNumber": 549, "col_offset": 7, "nodeName": "excluded_sym_names", "type": "Any"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "excluded_sym_names", "type": "List[nothing]"}, {"lineNumber": 556, "col_offset": 7, "nodeName": "target_dtype", "type": "Any"}, {"lineNumber": 559, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 559, "col_offset": 22, "nodeName": "sym", "type": "Any"}, {"lineNumber": 559, "col_offset": 27, "nodeName": "Symbol", "type": "Any"}, {"lineNumber": 560, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 560, "col_offset": 22, "nodeName": "arg_params", "type": "Any"}, {"lineNumber": 560, "col_offset": 34, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 561, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 561, "col_offset": 22, "nodeName": "aux_params", "type": "Any"}, {"lineNumber": 561, "col_offset": 34, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 566, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 568, "col_offset": 10, "nodeName": "convert_symbol", "type": "Callable[..., Any]"}, {"lineNumber": 568, "col_offset": 25, "nodeName": "sym", "type": "Any"}, {"lineNumber": 568, "col_offset": 30, "nodeName": "target_dtype", "type": "Any"}, {"lineNumber": 568, "col_offset": 44, "nodeName": "target_dtype_ops", "type": "Any"}, {"lineNumber": 569, "col_offset": 25, "nodeName": "fp32_ops", "type": "Any"}, {"lineNumber": 569, "col_offset": 35, "nodeName": "conditional_fp32_ops", "type": "Any"}, {"lineNumber": 570, "col_offset": 25, "nodeName": "excluded_sym_names", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 570, "col_offset": 45, "nodeName": "data_names", "type": "List[Any]"}, {"lineNumber": 571, "col_offset": 25, "nodeName": "cast_optional_params", "type": "Any"}, {"lineNumber": 574, "col_offset": 16, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 575, "col_offset": 20, "nodeName": "list_arguments", "type": "Any"}, {"lineNumber": 581, "col_offset": 20, "nodeName": "list_auxiliary_states", "type": "Any"}, {"lineNumber": 588, "col_offset": 11, "nodeName": "sym", "type": "Any"}, {"lineNumber": 588, "col_offset": 16, "nodeName": "arg_params", "type": "Any"}, {"lineNumber": 588, "col_offset": 28, "nodeName": "aux_params", "type": "Any"}, {"lineNumber": 592, "col_offset": 54, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 623, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 623, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 623, "col_offset": 29, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 624, "col_offset": 11, "nodeName": "_cached_graph", "type": "Any"}, {"lineNumber": 630, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 630, "col_offset": 12, "nodeName": "sym", "type": "Any"}, {"lineNumber": 630, "col_offset": 18, "nodeName": "block", "type": "Any"}, {"lineNumber": 634, "col_offset": 20, "nodeName": "convert_symbol", "type": "Callable[..., Any]"}, {"lineNumber": 634, "col_offset": 35, "nodeName": "sym", "type": "Any"}, {"lineNumber": 634, "col_offset": 40, "nodeName": "target_dtype", "type": "Any"}, {"lineNumber": 634, "col_offset": 54, "nodeName": "target_dtype_ops", "type": "Any"}, {"lineNumber": 635, "col_offset": 35, "nodeName": "fp32_ops", "type": "Any"}, {"lineNumber": 635, "col_offset": 45, "nodeName": "conditional_fp32_ops", "type": "Any"}, {"lineNumber": 636, "col_offset": 35, "nodeName": "excluded_sym_names", "type": "Any"}, {"lineNumber": 639, "col_offset": 16, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 640, "col_offset": 16, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 645, "col_offset": 16, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 646, "col_offset": 14, "nodeName": "param", "type": "Any"}, {"lineNumber": 646, "col_offset": 23, "nodeName": "items", "type": "Any"}, {"lineNumber": 663, "col_offset": 10, "nodeName": "SymbolBlock", "type": "Any"}, {"lineNumber": 663, "col_offset": 22, "nodeName": "converted_sym", "type": "Any"}, {"lineNumber": 663, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 664, "col_offset": 13, "nodeName": "param", "type": "Any"}, {"lineNumber": 664, "col_offset": 22, "nodeName": "items", "type": "Any"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "arg_param_name", "type": "str"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "aux_param_name", "type": "str"}, {"lineNumber": 673, "col_offset": 4, "nodeName": "load_dict", "type": "Any"}, {"lineNumber": 673, "col_offset": 35, "nodeName": "arg_dict", "type": "Dict[str, Any]"}, {"lineNumber": 708, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 708, "col_offset": 22, "nodeName": "bucketing_mod", "type": "Any"}, {"lineNumber": 708, "col_offset": 37, "nodeName": "BucketingModule", "type": "Any"}, {"lineNumber": 712, "col_offset": 11, "nodeName": "bucketing_mod", "type": "Any"}, {"lineNumber": 714, "col_offset": 4, "nodeName": "arg_params", "type": "Any"}, {"lineNumber": 714, "col_offset": 16, "nodeName": "aux_params", "type": "Any"}, {"lineNumber": 714, "col_offset": 29, "nodeName": "_arg_params", "type": "Any"}, {"lineNumber": 714, "col_offset": 69, "nodeName": "_aux_params", "type": "Any"}, {"lineNumber": 715, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 715, "col_offset": 13, "nodeName": "val", "type": "Any"}, {"lineNumber": 715, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 725, "col_offset": 17, "nodeName": "load_dict", "type": "Any"}, {"lineNumber": 725, "col_offset": 43, "nodeName": "sym_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 742, "col_offset": 11, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 747, "col_offset": 11, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 752, "col_offset": 11, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 757, "col_offset": 11, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "amp_cast", "type": "Any"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "s", "type": "Any"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "s", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "NDArray", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "base", "type": "Any"}, {"lineNumber": 63, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "func_name", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "cur_module", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "func_name", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "cur_module", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "module_internal", "type": "Any"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "func_name", "type": "Any"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "cur_module", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "module_internal", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "func_name", "type": "Any"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "cur_module", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "module", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "new_args", "type": "List[nothing]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "args", "type": "Tuple[()]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "_new_fun", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "f", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "_new_fun", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "f", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "_new_fun", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "sym", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "aux", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "atomic_sym", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "wrapped_sym", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "wrapped_sym", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "_new_fun", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "f", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "_new_fun", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "f", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "_new_fun", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "symbols", "type": "List[Union[Tuple[List[Any], int, Any], Tuple[Dict[Union[str, int], Any], str, Any]]]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "is_symbol", "type": "bool"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "_new_fun", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 28, "nodeName": "f", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "_new_fun", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "f", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "_new_fun", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "module", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "target_precision_ops", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "f_to_wrap", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "fp32_ops", "type": "Any"}, {"lineNumber": 172, "col_offset": 54, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "f_to_wrap", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 183, "col_offset": 40, "nodeName": "conditional_fp32_ops", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "f_to_wrap", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "lists", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "f_to_wrap", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 214, "col_offset": 40, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "__module__", "type": "Any"}, {"lineNumber": 215, "col_offset": 42, "nodeName": "__module__", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "__doc__", "type": "Any"}, {"lineNumber": 216, "col_offset": 39, "nodeName": "__doc__", "type": "Any"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "_scaling_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 224, "col_offset": 40, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "__module__", "type": "Any"}, {"lineNumber": 225, "col_offset": 42, "nodeName": "__module__", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "__doc__", "type": "Any"}, {"lineNumber": 226, "col_offset": 39, "nodeName": "__doc__", "type": "Any"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "_warning_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "lists", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "f_to_wrap", "type": "Any"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 245, "col_offset": 35, "nodeName": "_amp_loss_scaler", "type": "Any"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 246, "col_offset": 31, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "target_dtype", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 279, "col_offset": 32, "nodeName": "target_dtype", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "_wrap_symbol_functions", "type": "Callable[..., Any]"}, {"lineNumber": 280, "col_offset": 31, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 280, "col_offset": 39, "nodeName": "target_dtype", "type": "Any"}, {"lineNumber": 280, "col_offset": 53, "nodeName": "target_precision_ops", "type": "Any"}, {"lineNumber": 281, "col_offset": 31, "nodeName": "conditional_fp32_ops", "type": "Any"}, {"lineNumber": 281, "col_offset": 53, "nodeName": "fp32_ops", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "_wrap_symbol_functions", "type": "Callable[..., Any]"}, {"lineNumber": 282, "col_offset": 31, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 282, "col_offset": 40, "nodeName": "target_dtype", "type": "Any"}, {"lineNumber": 282, "col_offset": 54, "nodeName": "target_precision_ops", "type": "Any"}, {"lineNumber": 283, "col_offset": 31, "nodeName": "conditional_fp32_ops", "type": "Any"}, {"lineNumber": 283, "col_offset": 53, "nodeName": "fp32_ops", "type": "Any"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "LossScaler", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "_wrap_loss_output_functions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 285, "col_offset": 36, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 285, "col_offset": 45, "nodeName": "_loss_scaler", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "_wrap_loss_output_functions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 286, "col_offset": 36, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 286, "col_offset": 44, "nodeName": "_loss_scaler", "type": "Any"}, {"lineNumber": 304, "col_offset": 22, "nodeName": "LossScaler", "type": "Any"}, {"lineNumber": 306, "col_offset": 40, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 308, "col_offset": 51, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 309, "col_offset": 22, "nodeName": "_amp_loss_scaler", "type": "Any"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "MethodType", "type": "Type[types.MethodType]"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "new_update_multi_precision", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 316, "col_offset": 51, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 317, "col_offset": 32, "nodeName": "_amp_loss_scaler", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 318, "col_offset": 43, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 322, "col_offset": 39, "nodeName": "MethodType", "type": "Type[types.MethodType]"}, {"lineNumber": 322, "col_offset": 50, "nodeName": "new_update", "type": "Callable[..., Any]"}, {"lineNumber": 322, "col_offset": 62, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 324, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 324, "col_offset": 20, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 324, "col_offset": 42, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 340, "col_offset": 40, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 341, "col_offset": 23, "nodeName": "_grad", "type": "Any"}, {"lineNumber": 344, "col_offset": 16, "nodeName": "g", "type": "Any"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "grads", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 347, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 347, "col_offset": 20, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 347, "col_offset": 42, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 394, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 397, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 397, "col_offset": 26, "nodeName": "target_dtype_ops", "type": "Any"}, {"lineNumber": 397, "col_offset": 44, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 399, "col_offset": 27, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 402, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 402, "col_offset": 26, "nodeName": "fp32_ops", "type": "Any"}, {"lineNumber": 402, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 404, "col_offset": 19, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 407, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 407, "col_offset": 26, "nodeName": "conditional_fp32_ops", "type": "Any"}, {"lineNumber": 407, "col_offset": 48, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 409, "col_offset": 31, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 420, "col_offset": 22, "nodeName": "conditional_fp32_op", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 426, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 426, "col_offset": 26, "nodeName": "excluded_sym_names", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 426, "col_offset": 46, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 430, "col_offset": 40, "nodeName": "lists", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 434, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 434, "col_offset": 21, "nodeName": "target_dtype_ops", "type": "Any"}, {"lineNumber": 434, "col_offset": 41, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 434, "col_offset": 45, "nodeName": "fp32_ops", "type": "Any"}, {"lineNumber": 435, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 435, "col_offset": 15, "nodeName": "common_ops", "type": "Set[Any]"}, {"lineNumber": 437, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 437, "col_offset": 21, "nodeName": "target_dtype_ops", "type": "Any"}, {"lineNumber": 437, "col_offset": 41, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 437, "col_offset": 45, "nodeName": "conditional_op_names", "type": "List[Any]"}, {"lineNumber": 438, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 438, "col_offset": 15, "nodeName": "common_ops", "type": "Set[Any]"}, {"lineNumber": 440, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "conditional_op_names", "type": "List[Any]"}, {"lineNumber": 440, "col_offset": 45, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 440, "col_offset": 49, "nodeName": "fp32_ops", "type": "Any"}, {"lineNumber": 441, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 441, "col_offset": 15, "nodeName": "common_ops", "type": "Set[Any]"}, {"lineNumber": 444, "col_offset": 53, "nodeName": "conditional_op_names", "type": "List[Any]"}, {"lineNumber": 446, "col_offset": 61, "nodeName": "original_conditional_op_names", "type": "List[Any]"}, {"lineNumber": 457, "col_offset": 23, "nodeName": "lists", "type": "Any"}, {"lineNumber": 458, "col_offset": 35, "nodeName": "type", "type": "Any"}, {"lineNumber": 463, "col_offset": 16, "nodeName": "sym", "type": "Any"}, {"lineNumber": 466, "col_offset": 24, "nodeName": "list_inputs", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 479, "col_offset": 24, "nodeName": "k", "type": "Any"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 484, "col_offset": 15, "nodeName": "MXReducePrecisionSymbol", "type": "Any"}, {"lineNumber": 484, "col_offset": 44, "nodeName": "handle", "type": "Any"}, {"lineNumber": 506, "col_offset": 44, "nodeName": "keys", "type": "Any"}, {"lineNumber": 557, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 563, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 563, "col_offset": 44, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 574, "col_offset": 16, "nodeName": "sym", "type": "Any"}, {"lineNumber": 575, "col_offset": 20, "nodeName": "sym", "type": "Any"}, {"lineNumber": 581, "col_offset": 20, "nodeName": "sym", "type": "Any"}, {"lineNumber": 624, "col_offset": 11, "nodeName": "block", "type": "Any"}, {"lineNumber": 625, "col_offset": 14, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 633, "col_offset": 27, "nodeName": "name", "type": "Any"}, {"lineNumber": 636, "col_offset": 66, "nodeName": "input_names", "type": "List[Any]"}, {"lineNumber": 637, "col_offset": 56, "nodeName": "cast_optional_params", "type": "Any"}, {"lineNumber": 639, "col_offset": 20, "nodeName": "list_arguments", "type": "Any"}, {"lineNumber": 640, "col_offset": 20, "nodeName": "list_auxiliary_states", "type": "Any"}, {"lineNumber": 645, "col_offset": 16, "nodeName": "converted_sym", "type": "Any"}, {"lineNumber": 647, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 647, "col_offset": 19, "nodeName": "arg_names", "type": "Set[Any]"}, {"lineNumber": 665, "col_offset": 36, "nodeName": "key", "type": "Any"}, {"lineNumber": 669, "col_offset": 36, "nodeName": "key", "type": "Any"}, {"lineNumber": 673, "col_offset": 49, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 709, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 709, "col_offset": 15, "nodeName": "_buckets", "type": "Any"}, {"lineNumber": 714, "col_offset": 29, "nodeName": "_curr_module", "type": "Any"}, {"lineNumber": 714, "col_offset": 69, "nodeName": "_curr_module", "type": "Any"}, {"lineNumber": 715, "col_offset": 20, "nodeName": "_buckets", "type": "Any"}, {"lineNumber": 716, "col_offset": 62, "nodeName": "convert_model", "type": "Callable[..., Any]"}, {"lineNumber": 716, "col_offset": 76, "nodeName": "_symbol", "type": "Any"}, {"lineNumber": 717, "col_offset": 76, "nodeName": "arg_params", "type": "Any"}, {"lineNumber": 718, "col_offset": 76, "nodeName": "aux_params", "type": "Any"}, {"lineNumber": 725, "col_offset": 17, "nodeName": "BucketingModule", "type": "Any"}, {"lineNumber": 726, "col_offset": 51, "nodeName": "_sym_gen", "type": "Any"}, {"lineNumber": 727, "col_offset": 54, "nodeName": "result_arg_params", "type": "Any"}, {"lineNumber": 728, "col_offset": 54, "nodeName": "result_aux_params", "type": "Any"}, {"lineNumber": 729, "col_offset": 62, "nodeName": "_default_bucket_key", "type": "Any"}, {"lineNumber": 730, "col_offset": 50, "nodeName": "logger", "type": "Any"}, {"lineNumber": 731, "col_offset": 51, "nodeName": "_context", "type": "Any"}, {"lineNumber": 732, "col_offset": 58, "nodeName": "_work_load_list", "type": "Any"}, {"lineNumber": 733, "col_offset": 61, "nodeName": "_fixed_param_names", "type": "Any"}, {"lineNumber": 734, "col_offset": 55, "nodeName": "_state_names", "type": "Any"}, {"lineNumber": 735, "col_offset": 54, "nodeName": "_group2ctxs", "type": "Any"}, {"lineNumber": 736, "col_offset": 62, "nodeName": "_compression_params", "type": "Any"}, {"lineNumber": 742, "col_offset": 11, "nodeName": "lists", "type": "Any"}, {"lineNumber": 747, "col_offset": 11, "nodeName": "lists", "type": "Any"}, {"lineNumber": 752, "col_offset": 11, "nodeName": "lists", "type": "Any"}, {"lineNumber": 757, "col_offset": 11, "nodeName": "lists", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "s", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "submodule_dict", "type": "Any"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "name", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "cond_arg", "type": "None"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "new_args", "type": "List[nothing]"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "k", "type": "str"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "f", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "cond_arg", "type": "None"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "f", "type": "Any"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "get_children", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "list_auxiliary_states", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "_gen_atomic_symbol", "type": "Any"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "atomic_sym", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "_set_attr", "type": "Any"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "arg", "type": "Any"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 120, "col_offset": 36, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "k", "type": "str"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "arg", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "items", "type": "Callable"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "is_symbol", "type": "bool"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "widest_type", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "target_dtype", "type": "Any"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "symbols", "type": "List[Union[Tuple[List[Any], int, Any], Tuple[Dict[Union[str, int], Any], str, Any]]]"}, {"lineNumber": 135, "col_offset": 39, "nodeName": "symbols", "type": "List[Union[Tuple[List[Any], int, Any], Tuple[Dict[Union[str, int], Any], str, Any]]]"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "sym_to_check", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "casted_syms", "type": "Any"}, {"lineNumber": 144, "col_offset": 39, "nodeName": "symbols", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "f", "type": "Any"}, {"lineNumber": 153, "col_offset": 45, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 153, "col_offset": 53, "nodeName": "Symbol", "type": "Any"}, {"lineNumber": 153, "col_offset": 61, "nodeName": "symbol_contrib", "type": "Any"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "op_name_prefix", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "lists", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "cur_module", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "_get_fun_to_wrap", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 164, "col_offset": 52, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 164, "col_offset": 62, "nodeName": "module", "type": "Any"}, {"lineNumber": 164, "col_offset": 70, "nodeName": "submodule_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "cur_module", "type": "Any"}, {"lineNumber": 165, "col_offset": 44, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "cur_module", "type": "Any"}, {"lineNumber": 166, "col_offset": 32, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "cur_module", "type": "Any"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 172, "col_offset": 54, "nodeName": "lists", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 175, "col_offset": 22, "nodeName": "cur_module", "type": "Any"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "_get_fun_to_wrap", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 175, "col_offset": 52, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 175, "col_offset": 62, "nodeName": "module", "type": "Any"}, {"lineNumber": 175, "col_offset": 70, "nodeName": "submodule_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "cur_module", "type": "Any"}, {"lineNumber": 176, "col_offset": 44, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "cur_module", "type": "Any"}, {"lineNumber": 177, "col_offset": 32, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "cur_module", "type": "Any"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "lists", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "cur_module", "type": "Any"}, {"lineNumber": 187, "col_offset": 35, "nodeName": "_get_fun_to_wrap", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 187, "col_offset": 52, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 187, "col_offset": 62, "nodeName": "module", "type": "Any"}, {"lineNumber": 187, "col_offset": 70, "nodeName": "submodule_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 188, "col_offset": 32, "nodeName": "cur_module", "type": "Any"}, {"lineNumber": 188, "col_offset": 44, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "cur_module", "type": "Any"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "cur_module", "type": "Any"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "cur_module", "type": "Any"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "_get_fun_to_wrap", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 197, "col_offset": 52, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 197, "col_offset": 62, "nodeName": "module", "type": "Any"}, {"lineNumber": 197, "col_offset": 70, "nodeName": "submodule_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "cur_module", "type": "Any"}, {"lineNumber": 198, "col_offset": 44, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 199, "col_offset": 20, "nodeName": "cur_module", "type": "Any"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "cur_module", "type": "Any"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "_scaling_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 214, "col_offset": 40, "nodeName": "f", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "_scaling_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 215, "col_offset": 42, "nodeName": "f", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "_scaling_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 216, "col_offset": 39, "nodeName": "f", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "_warning_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 224, "col_offset": 40, "nodeName": "f", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "_warning_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 225, "col_offset": 42, "nodeName": "f", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "_warning_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 226, "col_offset": 39, "nodeName": "f", "type": "Any"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 231, "col_offset": 32, "nodeName": "module", "type": "Any"}, {"lineNumber": 231, "col_offset": 40, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 232, "col_offset": 20, "nodeName": "module", "type": "Any"}, {"lineNumber": 232, "col_offset": 28, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 245, "col_offset": 35, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 249, "col_offset": 65, "nodeName": "loss", "type": "Any"}, {"lineNumber": 275, "col_offset": 43, "nodeName": "float16", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 309, "col_offset": 22, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 316, "col_offset": 51, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 317, "col_offset": 32, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "launch_check_overflow", "type": "Any"}, {"lineNumber": 320, "col_offset": 34, "nodeName": "_params", "type": "Any"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "_old_update", "type": "Any"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "ignore_stale_grad", "type": "Any"}, {"lineNumber": 324, "col_offset": 42, "nodeName": "opt", "type": "Any"}, {"lineNumber": 326, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 341, "col_offset": 23, "nodeName": "p", "type": "Any"}, {"lineNumber": 341, "col_offset": 35, "nodeName": "p", "type": "Any"}, {"lineNumber": 341, "col_offset": 40, "nodeName": "_params", "type": "Any"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "_scale", "type": "Any"}, {"lineNumber": 347, "col_offset": 42, "nodeName": "opt", "type": "Any"}, {"lineNumber": 349, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 351, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 399, "col_offset": 27, "nodeName": "lists", "type": "Any"}, {"lineNumber": 404, "col_offset": 19, "nodeName": "lists", "type": "Any"}, {"lineNumber": 409, "col_offset": 31, "nodeName": "lists", "type": "Any"}, {"lineNumber": 417, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 417, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 417, "col_offset": 59, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 417, "col_offset": 94, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 418, "col_offset": 16, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 418, "col_offset": 51, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "indptr", "type": "List[int]"}, {"lineNumber": 421, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 421, "col_offset": 26, "nodeName": "param_vals", "type": "List[Any]"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "param_names", "type": "List[Any]"}, {"lineNumber": 422, "col_offset": 27, "nodeName": "conditional_fp32_op", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "conditional_op_names", "type": "List[Any]"}, {"lineNumber": 423, "col_offset": 36, "nodeName": "conditional_fp32_op", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "original_conditional_op_names", "type": "List[Any]"}, {"lineNumber": 431, "col_offset": 45, "nodeName": "original_conditional_fp32_op", "type": "Any"}, {"lineNumber": 444, "col_offset": 23, "nodeName": "target_dtype_ops", "type": "Any"}, {"lineNumber": 444, "col_offset": 42, "nodeName": "fp32_ops", "type": "Any"}, {"lineNumber": 446, "col_offset": 30, "nodeName": "FP16_FP32_FUNCS", "type": "Any"}, {"lineNumber": 466, "col_offset": 24, "nodeName": "sym", "type": "Any"}, {"lineNumber": 472, "col_offset": 29, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 472, "col_offset": 54, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 472, "col_offset": 58, "nodeName": "data_names", "type": "List[Any]"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "str_keys", "type": "List[Any]"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "sdata", "type": "List[int]"}, {"lineNumber": 484, "col_offset": 15, "nodeName": "_LIB", "type": "Any"}, {"lineNumber": 484, "col_offset": 44, "nodeName": "sym", "type": "Any"}, {"lineNumber": 485, "col_offset": 44, "nodeName": "byref", "type": "Callable[..., ctypes._CArgObject]"}, {"lineNumber": 485, "col_offset": 57, "nodeName": "out", "type": "Any"}, {"lineNumber": 486, "col_offset": 44, "nodeName": "mx_uint", "type": "Any"}, {"lineNumber": 487, "col_offset": 44, "nodeName": "c_array_buf", "type": "Any"}, {"lineNumber": 487, "col_offset": 56, "nodeName": "c_int", "type": "Type[ctypes.c_int]"}, {"lineNumber": 488, "col_offset": 44, "nodeName": "mx_uint", "type": "Any"}, {"lineNumber": 489, "col_offset": 44, "nodeName": "c_array_buf", "type": "Any"}, {"lineNumber": 489, "col_offset": 56, "nodeName": "c_int", "type": "Type[ctypes.c_int]"}, {"lineNumber": 490, "col_offset": 44, "nodeName": "byref", "type": "Callable[..., ctypes._CArgObject]"}, {"lineNumber": 491, "col_offset": 44, "nodeName": "c_int", "type": "Type[ctypes.c_int]"}, {"lineNumber": 491, "col_offset": 57, "nodeName": "cast_optional_params", "type": "Any"}, {"lineNumber": 492, "col_offset": 44, "nodeName": "mx_uint", "type": "Any"}, {"lineNumber": 493, "col_offset": 44, "nodeName": "mx_uint", "type": "Any"}, {"lineNumber": 494, "col_offset": 44, "nodeName": "mx_uint", "type": "Any"}, {"lineNumber": 495, "col_offset": 44, "nodeName": "mx_uint", "type": "Any"}, {"lineNumber": 496, "col_offset": 44, "nodeName": "mx_uint", "type": "Any"}, {"lineNumber": 497, "col_offset": 44, "nodeName": "mx_uint", "type": "Any"}, {"lineNumber": 498, "col_offset": 44, "nodeName": "c_str_array", "type": "Any"}, {"lineNumber": 498, "col_offset": 56, "nodeName": "target_dtype_ops", "type": "Any"}, {"lineNumber": 499, "col_offset": 44, "nodeName": "c_str_array", "type": "Any"}, {"lineNumber": 499, "col_offset": 56, "nodeName": "fp32_ops", "type": "Any"}, {"lineNumber": 500, "col_offset": 44, "nodeName": "c_str_array", "type": "Any"}, {"lineNumber": 500, "col_offset": 56, "nodeName": "widest_dtype_ops", "type": "Any"}, {"lineNumber": 501, "col_offset": 44, "nodeName": "c_str_array", "type": "Any"}, {"lineNumber": 501, "col_offset": 56, "nodeName": "conditional_op_names", "type": "List[Any]"}, {"lineNumber": 502, "col_offset": 44, "nodeName": "c_str_array", "type": "Any"}, {"lineNumber": 502, "col_offset": 56, "nodeName": "excluded_sym_names", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 503, "col_offset": 44, "nodeName": "c_str_array", "type": "Any"}, {"lineNumber": 503, "col_offset": 56, "nodeName": "param_names", "type": "List[Any]"}, {"lineNumber": 504, "col_offset": 44, "nodeName": "c_str_array", "type": "Any"}, {"lineNumber": 504, "col_offset": 56, "nodeName": "param_vals", "type": "List[Any]"}, {"lineNumber": 505, "col_offset": 44, "nodeName": "c_str_array", "type": "Any"}, {"lineNumber": 505, "col_offset": 56, "nodeName": "model_param_names", "type": "List[Any]"}, {"lineNumber": 551, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 551, "col_offset": 26, "nodeName": "excluded_sym_names", "type": "List[nothing]"}, {"lineNumber": 551, "col_offset": 46, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 563, "col_offset": 23, "nodeName": "keys", "type": "Any"}, {"lineNumber": 563, "col_offset": 49, "nodeName": "keys", "type": "Any"}, {"lineNumber": 566, "col_offset": 22, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 566, "col_offset": 47, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 566, "col_offset": 51, "nodeName": "param_names", "type": "List[Any]"}, {"lineNumber": 576, "col_offset": 11, "nodeName": "sym_name", "type": "Any"}, {"lineNumber": 576, "col_offset": 23, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 578, "col_offset": 16, "nodeName": "typ", "type": "Any"}, {"lineNumber": 582, "col_offset": 11, "nodeName": "sym_name", "type": "Any"}, {"lineNumber": 582, "col_offset": 23, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 584, "col_offset": 16, "nodeName": "typ", "type": "Any"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "input_names", "type": "List[Any]"}, {"lineNumber": 633, "col_offset": 27, "nodeName": "inp", "type": "Any"}, {"lineNumber": 639, "col_offset": 20, "nodeName": "converted_sym", "type": "Any"}, {"lineNumber": 640, "col_offset": 20, "nodeName": "converted_sym", "type": "Any"}, {"lineNumber": 646, "col_offset": 23, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 648, "col_offset": 12, "nodeName": "arg_dict", "type": "Dict[str, Any]"}, {"lineNumber": 648, "col_offset": 38, "nodeName": "_reduce", "type": "Any"}, {"lineNumber": 654, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 654, "col_offset": 27, "nodeName": "aux_names", "type": "Set[Any]"}, {"lineNumber": 655, "col_offset": 12, "nodeName": "arg_dict", "type": "Dict[str, Any]"}, {"lineNumber": 655, "col_offset": 38, "nodeName": "_reduce", "type": "Any"}, {"lineNumber": 664, "col_offset": 22, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 666, "col_offset": 11, "nodeName": "arg_param_name", "type": "str"}, {"lineNumber": 666, "col_offset": 29, "nodeName": "arg_dict", "type": "Dict[str, Any]"}, {"lineNumber": 666, "col_offset": 42, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 666, "col_offset": 57, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 667, "col_offset": 12, "nodeName": "cast", "type": "Any"}, {"lineNumber": 667, "col_offset": 23, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 670, "col_offset": 11, "nodeName": "aux_param_name", "type": "str"}, {"lineNumber": 670, "col_offset": 29, "nodeName": "arg_dict", "type": "Dict[str, Any]"}, {"lineNumber": 670, "col_offset": 42, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 670, "col_offset": 57, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 671, "col_offset": 12, "nodeName": "cast", "type": "Any"}, {"lineNumber": 671, "col_offset": 23, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 673, "col_offset": 4, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 709, "col_offset": 15, "nodeName": "bucketing_mod", "type": "Any"}, {"lineNumber": 714, "col_offset": 29, "nodeName": "bucketing_mod", "type": "Any"}, {"lineNumber": 714, "col_offset": 69, "nodeName": "bucketing_mod", "type": "Any"}, {"lineNumber": 715, "col_offset": 20, "nodeName": "bucketing_mod", "type": "Any"}, {"lineNumber": 716, "col_offset": 76, "nodeName": "val", "type": "Any"}, {"lineNumber": 719, "col_offset": 89, "nodeName": "target_dtype", "type": "Any"}, {"lineNumber": 720, "col_offset": 93, "nodeName": "target_dtype_ops", "type": "Any"}, {"lineNumber": 721, "col_offset": 85, "nodeName": "fp32_ops", "type": "Any"}, {"lineNumber": 722, "col_offset": 97, "nodeName": "conditional_fp32_ops", "type": "Any"}, {"lineNumber": 723, "col_offset": 95, "nodeName": "excluded_sym_names", "type": "Any"}, {"lineNumber": 724, "col_offset": 97, "nodeName": "cast_optional_params", "type": "Any"}, {"lineNumber": 726, "col_offset": 51, "nodeName": "bucketing_mod", "type": "Any"}, {"lineNumber": 729, "col_offset": 62, "nodeName": "bucketing_mod", "type": "Any"}, {"lineNumber": 730, "col_offset": 50, "nodeName": "bucketing_mod", "type": "Any"}, {"lineNumber": 731, "col_offset": 51, "nodeName": "bucketing_mod", "type": "Any"}, {"lineNumber": 732, "col_offset": 58, "nodeName": "bucketing_mod", "type": "Any"}, {"lineNumber": 733, "col_offset": 61, "nodeName": "bucketing_mod", "type": "Any"}, {"lineNumber": 734, "col_offset": 55, "nodeName": "bucketing_mod", "type": "Any"}, {"lineNumber": 735, "col_offset": 54, "nodeName": "bucketing_mod", "type": "Any"}, {"lineNumber": 736, "col_offset": 62, "nodeName": "bucketing_mod", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "float_types", "type": "Tuple[Any, Any]"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "device_type", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "amp_cast", "type": "Any"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "s", "type": "Any"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 66, "col_offset": 40, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "map", "type": "Callable"}, {"lineNumber": 86, "col_offset": 81, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "_cast_symbol_NDArray", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 46, "nodeName": "v", "type": "Any"}, {"lineNumber": 88, "col_offset": 49, "nodeName": "target_dtype", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "args", "type": "Tuple[()]"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "sym", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "sym", "type": "Any"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "map", "type": "Callable"}, {"lineNumber": 105, "col_offset": 59, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "sym", "type": "Any"}, {"lineNumber": 107, "col_offset": 38, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "wrapped_sym", "type": "Any"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "name", "type": "Any"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "arg", "type": "Any"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "is_symbol", "type": "bool"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[Union[str, int], Any]"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "arg", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "is_symbol", "type": "bool"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "_", "type": "Union[List[Any], Dict[Union[str, int], Any]]"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "_", "type": "Union[int, str]"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "arg", "type": "Any"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "arr", "type": "Union[List[Any], Dict[Union[str, int], Any]]"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "index", "type": "Union[int, str]"}, {"lineNumber": 135, "col_offset": 32, "nodeName": "arg", "type": "Any"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 141, "col_offset": 30, "nodeName": "amp_multicast", "type": "Any"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "arr", "type": "Any"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "index", "type": "Any"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "arg", "type": "Any"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "arg", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[Union[str, int], Any]"}, {"lineNumber": 166, "col_offset": 42, "nodeName": "_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 166, "col_offset": 51, "nodeName": "f_to_wrap", "type": "Any"}, {"lineNumber": 166, "col_offset": 62, "nodeName": "target_dtype", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "op", "type": "Any"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 177, "col_offset": 42, "nodeName": "_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 51, "nodeName": "f_to_wrap", "type": "Any"}, {"lineNumber": 177, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "op", "type": "Any"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 189, "col_offset": 42, "nodeName": "_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 189, "col_offset": 51, "nodeName": "f_to_wrap", "type": "Any"}, {"lineNumber": 189, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "op", "type": "Any"}, {"lineNumber": 191, "col_offset": 35, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 199, "col_offset": 42, "nodeName": "_symbol_widest_wrapper", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 65, "nodeName": "f_to_wrap", "type": "Any"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "op", "type": "Any"}, {"lineNumber": 201, "col_offset": 35, "nodeName": "fun_name", "type": "Any"}, {"lineNumber": 209, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 212, "col_offset": 43, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "f", "type": "Any"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 222, "col_offset": 73, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "f", "type": "Any"}, {"lineNumber": 232, "col_offset": 38, "nodeName": "_wrapper", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 47, "nodeName": "f_to_wrap", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "l", "type": "Any"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 247, "col_offset": 72, "nodeName": "l", "type": "Any"}, {"lineNumber": 247, "col_offset": 77, "nodeName": "loss", "type": "Any"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "_amp_loss_scaler", "type": "Any"}, {"lineNumber": 275, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 313, "col_offset": 19, "nodeName": "skip_update", "type": "Any"}, {"lineNumber": 314, "col_offset": 16, "nodeName": "old_update_multi_precision", "type": "Any"}, {"lineNumber": 314, "col_offset": 48, "nodeName": "index", "type": "Any"}, {"lineNumber": 314, "col_offset": 55, "nodeName": "weight", "type": "Any"}, {"lineNumber": 314, "col_offset": 63, "nodeName": "grad", "type": "Any"}, {"lineNumber": 314, "col_offset": 69, "nodeName": "state", "type": "Any"}, {"lineNumber": 320, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 341, "col_offset": 40, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 341, "col_offset": 72, "nodeName": "_grad", "type": "Any"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "g", "type": "Any"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 417, "col_offset": 26, "nodeName": "conditional_fp32_op", "type": "Any"}, {"lineNumber": 417, "col_offset": 70, "nodeName": "conditional_fp32_op", "type": "Any"}, {"lineNumber": 418, "col_offset": 27, "nodeName": "conditional_fp32_op", "type": "Any"}, {"lineNumber": 446, "col_offset": 30, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 458, "col_offset": 35, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 458, "col_offset": 44, "nodeName": "target_dtype", "type": "Any"}, {"lineNumber": 467, "col_offset": 19, "nodeName": "sym_name", "type": "Any"}, {"lineNumber": 467, "col_offset": 31, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 468, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 468, "col_offset": 34, "nodeName": "sym_name", "type": "Any"}, {"lineNumber": 471, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 471, "col_offset": 34, "nodeName": "sym_name", "type": "Any"}, {"lineNumber": 472, "col_offset": 33, "nodeName": "list_inputs", "type": "Any"}, {"lineNumber": 485, "col_offset": 44, "nodeName": "ctypes", "type": "module"}, {"lineNumber": 486, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 486, "col_offset": 56, "nodeName": "sdata", "type": "List[int]"}, {"lineNumber": 487, "col_offset": 56, "nodeName": "ctypes", "type": "module"}, {"lineNumber": 487, "col_offset": 70, "nodeName": "array", "type": "Type[array.array[Any]]"}, {"lineNumber": 487, "col_offset": 81, "nodeName": "sdata", "type": "List[int]"}, {"lineNumber": 488, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 488, "col_offset": 56, "nodeName": "indptr", "type": "List[int]"}, {"lineNumber": 489, "col_offset": 56, "nodeName": "ctypes", "type": "module"}, {"lineNumber": 489, "col_offset": 70, "nodeName": "array", "type": "Type[array.array[Any]]"}, {"lineNumber": 489, "col_offset": 81, "nodeName": "indptr", "type": "List[int]"}, {"lineNumber": 490, "col_offset": 44, "nodeName": "ctypes", "type": "module"}, {"lineNumber": 490, "col_offset": 57, "nodeName": "c_int", "type": "Type[ctypes.c_int]"}, {"lineNumber": 490, "col_offset": 70, "nodeName": "target_dtype", "type": "Any"}, {"lineNumber": 491, "col_offset": 44, "nodeName": "ctypes", "type": "module"}, {"lineNumber": 492, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 492, "col_offset": 56, "nodeName": "target_dtype_ops", "type": "Any"}, {"lineNumber": 493, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 493, "col_offset": 56, "nodeName": "fp32_ops", "type": "Any"}, {"lineNumber": 494, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 494, "col_offset": 56, "nodeName": "widest_dtype_ops", "type": "Any"}, {"lineNumber": 495, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 495, "col_offset": 56, "nodeName": "conditional_op_names", "type": "List[Any]"}, {"lineNumber": 496, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 496, "col_offset": 56, "nodeName": "excluded_sym_names", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 497, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 497, "col_offset": 56, "nodeName": "model_param_names", "type": "List[Any]"}, {"lineNumber": 563, "col_offset": 23, "nodeName": "arg_params", "type": "Any"}, {"lineNumber": 563, "col_offset": 49, "nodeName": "aux_params", "type": "Any"}, {"lineNumber": 566, "col_offset": 26, "nodeName": "list_inputs", "type": "Any"}, {"lineNumber": 576, "col_offset": 52, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 578, "col_offset": 22, "nodeName": "_DTYPE_MX_TO_NP", "type": "Any"}, {"lineNumber": 579, "col_offset": 16, "nodeName": "arg_params", "type": "Any"}, {"lineNumber": 579, "col_offset": 39, "nodeName": "astype", "type": "Any"}, {"lineNumber": 579, "col_offset": 67, "nodeName": "typ", "type": "Any"}, {"lineNumber": 582, "col_offset": 52, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 584, "col_offset": 22, "nodeName": "_DTYPE_MX_TO_NP", "type": "Any"}, {"lineNumber": 585, "col_offset": 16, "nodeName": "aux_params", "type": "Any"}, {"lineNumber": 585, "col_offset": 39, "nodeName": "astype", "type": "Any"}, {"lineNumber": 585, "col_offset": 67, "nodeName": "typ", "type": "Any"}, {"lineNumber": 646, "col_offset": 23, "nodeName": "block", "type": "Any"}, {"lineNumber": 648, "col_offset": 38, "nodeName": "param", "type": "Any"}, {"lineNumber": 649, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 649, "col_offset": 23, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 651, "col_offset": 20, "nodeName": "typ", "type": "Any"}, {"lineNumber": 655, "col_offset": 38, "nodeName": "param", "type": "Any"}, {"lineNumber": 656, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 656, "col_offset": 23, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 658, "col_offset": 20, "nodeName": "typ", "type": "Any"}, {"lineNumber": 664, "col_offset": 22, "nodeName": "ret", "type": "Any"}, {"lineNumber": 666, "col_offset": 42, "nodeName": "param", "type": "Any"}, {"lineNumber": 667, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 670, "col_offset": 42, "nodeName": "param", "type": "Any"}, {"lineNumber": 671, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 673, "col_offset": 4, "nodeName": "ret", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "context", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 54, "col_offset": 45, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 88, "col_offset": 67, "nodeName": "k", "type": "str"}, {"lineNumber": 88, "col_offset": 70, "nodeName": "v", "type": "Any"}, {"lineNumber": 88, "col_offset": 75, "nodeName": "items", "type": "Callable"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "sym", "type": "Any"}, {"lineNumber": 121, "col_offset": 36, "nodeName": "Symbol", "type": "Any"}, {"lineNumber": 121, "col_offset": 44, "nodeName": "NDArray", "type": "Any"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "is_symbol", "type": "bool"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "Symbol", "type": "Any"}, {"lineNumber": 125, "col_offset": 44, "nodeName": "NDArray", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 127, "col_offset": 32, "nodeName": "is_symbol", "type": "bool"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "arg", "type": "Any"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "NDArray", "type": "Any"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "map", "type": "Callable"}, {"lineNumber": 140, "col_offset": 56, "nodeName": "symbols", "type": "List[Union[Tuple[List[Any], int, Any], Tuple[Dict[Union[str, int], Any], str, Any]]]"}, {"lineNumber": 141, "col_offset": 30, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 141, "col_offset": 52, "nodeName": "sym_to_check", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "map", "type": "Callable"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "arr", "type": "Any"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 168, "col_offset": 45, "nodeName": "_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 54, "nodeName": "f_to_wrap", "type": "Any"}, {"lineNumber": 168, "col_offset": 65, "nodeName": "target_dtype", "type": "Any"}, {"lineNumber": 177, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 179, "col_offset": 45, "nodeName": "_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 179, "col_offset": 54, "nodeName": "f_to_wrap", "type": "Any"}, {"lineNumber": 179, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 189, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 75, "nodeName": "arg", "type": "Any"}, {"lineNumber": 189, "col_offset": 80, "nodeName": "arg_values", "type": "Any"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 191, "col_offset": 45, "nodeName": "_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 191, "col_offset": 54, "nodeName": "f_to_wrap", "type": "Any"}, {"lineNumber": 191, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 201, "col_offset": 45, "nodeName": "_symbol_widest_wrapper", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 68, "nodeName": "f_to_wrap", "type": "Any"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 210, "col_offset": 66, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 212, "col_offset": 43, "nodeName": "ls", "type": "Any"}, {"lineNumber": 213, "col_offset": 26, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 213, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "logging", "type": "module"}, {"lineNumber": 222, "col_offset": 73, "nodeName": "f", "type": "Any"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 223, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "_amp_loss_scaler", "type": "Any"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 314, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 329, "col_offset": 56, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 329, "col_offset": 61, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 341, "col_offset": 72, "nodeName": "p", "type": "Any"}, {"lineNumber": 352, "col_offset": 56, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 352, "col_offset": 61, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 446, "col_offset": 30, "nodeName": "lists", "type": "Any"}, {"lineNumber": 458, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 468, "col_offset": 16, "nodeName": "data_names", "type": "List[Any]"}, {"lineNumber": 470, "col_offset": 34, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 471, "col_offset": 16, "nodeName": "data_names", "type": "List[Any]"}, {"lineNumber": 472, "col_offset": 33, "nodeName": "sym", "type": "Any"}, {"lineNumber": 490, "col_offset": 57, "nodeName": "ctypes", "type": "module"}, {"lineNumber": 566, "col_offset": 26, "nodeName": "sym", "type": "Any"}, {"lineNumber": 576, "col_offset": 62, "nodeName": "sym_name", "type": "Any"}, {"lineNumber": 577, "col_offset": 15, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 579, "col_offset": 27, "nodeName": "sym_name", "type": "Any"}, {"lineNumber": 582, "col_offset": 62, "nodeName": "sym_name", "type": "Any"}, {"lineNumber": 583, "col_offset": 15, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 585, "col_offset": 27, "nodeName": "sym_name", "type": "Any"}, {"lineNumber": 648, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 649, "col_offset": 52, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 651, "col_offset": 26, "nodeName": "_DTYPE_MX_TO_NP", "type": "Any"}, {"lineNumber": 652, "col_offset": 20, "nodeName": "arg_dict", "type": "Dict[str, Any]"}, {"lineNumber": 652, "col_offset": 46, "nodeName": "astype", "type": "Any"}, {"lineNumber": 652, "col_offset": 77, "nodeName": "typ", "type": "Any"}, {"lineNumber": 655, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 656, "col_offset": 52, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 658, "col_offset": 26, "nodeName": "_DTYPE_MX_TO_NP", "type": "Any"}, {"lineNumber": 659, "col_offset": 20, "nodeName": "arg_dict", "type": "Dict[str, Any]"}, {"lineNumber": 659, "col_offset": 46, "nodeName": "astype", "type": "Any"}, {"lineNumber": 659, "col_offset": 77, "nodeName": "typ", "type": "Any"}, {"lineNumber": 666, "col_offset": 57, "nodeName": "arg_dict", "type": "Dict[str, Any]"}, {"lineNumber": 667, "col_offset": 23, "nodeName": "arg_dict", "type": "Dict[str, Any]"}, {"lineNumber": 670, "col_offset": 57, "nodeName": "arg_dict", "type": "Dict[str, Any]"}, {"lineNumber": 671, "col_offset": 23, "nodeName": "arg_dict", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 86, "col_offset": 42, "nodeName": "_cast_symbol_NDArray", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 86, "col_offset": 66, "nodeName": "target_dtype", "type": "Any"}, {"lineNumber": 88, "col_offset": 75, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 105, "col_offset": 56, "nodeName": "x", "type": "Any"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "symbols", "type": "List[Union[Tuple[List[Any], int, Any], Tuple[Dict[Union[str, int], Any], str, Any]]]"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 122, "col_offset": 45, "nodeName": "arg", "type": "Any"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 123, "col_offset": 56, "nodeName": "arg", "type": "Any"}, {"lineNumber": 123, "col_offset": 61, "nodeName": "Symbol", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "symbols", "type": "List[Union[Tuple[List[Any], int, Any], Tuple[Dict[Union[str, int], Any], str, Any]]]"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[Union[str, int], Any]"}, {"lineNumber": 126, "col_offset": 44, "nodeName": "k", "type": "str"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "arg", "type": "Any"}, {"lineNumber": 127, "col_offset": 45, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 127, "col_offset": 56, "nodeName": "arg", "type": "Any"}, {"lineNumber": 127, "col_offset": 61, "nodeName": "Symbol", "type": "Any"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 133, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "widest_type", "type": "Any"}, {"lineNumber": 134, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 136, "col_offset": 36, "nodeName": "widest_type", "type": "Any"}, {"lineNumber": 136, "col_offset": 52, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 136, "col_offset": 65, "nodeName": "target_dtype", "type": "Any"}, {"lineNumber": 137, "col_offset": 24, "nodeName": "arr", "type": "Union[Dict[Union[str, int], Any], List[Any]]"}, {"lineNumber": 137, "col_offset": 37, "nodeName": "amp_cast", "type": "Any"}, {"lineNumber": 137, "col_offset": 54, "nodeName": "arg", "type": "Any"}, {"lineNumber": 141, "col_offset": 78, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 141, "col_offset": 82, "nodeName": "sym_to_check", "type": "List[Any]"}, {"lineNumber": 143, "col_offset": 35, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 143, "col_offset": 39, "nodeName": "symbols", "type": "List[Union[Tuple[List[Any], int, Any], Tuple[Dict[Union[str, int], Any], str, Any]]]"}, {"lineNumber": 143, "col_offset": 48, "nodeName": "casted_syms", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "index", "type": "Any"}, {"lineNumber": 179, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 78, "nodeName": "arg", "type": "Any"}, {"lineNumber": 191, "col_offset": 83, "nodeName": "arg_values", "type": "Any"}, {"lineNumber": 210, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 210, "col_offset": 66, "nodeName": "ls", "type": "Any"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "optimizer_or_trainer", "type": "Any"}, {"lineNumber": 470, "col_offset": 44, "nodeName": "sym_name", "type": "Any"}, {"lineNumber": 577, "col_offset": 25, "nodeName": "sym_name", "type": "Any"}, {"lineNumber": 578, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 579, "col_offset": 39, "nodeName": "arg_params", "type": "Any"}, {"lineNumber": 583, "col_offset": 25, "nodeName": "sym_name", "type": "Any"}, {"lineNumber": 584, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 585, "col_offset": 39, "nodeName": "aux_params", "type": "Any"}, {"lineNumber": 649, "col_offset": 62, "nodeName": "name", "type": "Any"}, {"lineNumber": 650, "col_offset": 19, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 656, "col_offset": 62, "nodeName": "name", "type": "Any"}, {"lineNumber": 657, "col_offset": 19, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 666, "col_offset": 66, "nodeName": "arg_param_name", "type": "str"}, {"lineNumber": 667, "col_offset": 32, "nodeName": "arg_param_name", "type": "str"}, {"lineNumber": 670, "col_offset": 66, "nodeName": "aux_param_name", "type": "str"}, {"lineNumber": 671, "col_offset": 32, "nodeName": "aux_param_name", "type": "str"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "aux", "type": "Any"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "arg", "type": "Any"}, {"lineNumber": 133, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "arg", "type": "Any"}, {"lineNumber": 136, "col_offset": 52, "nodeName": "arg", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "index", "type": "Union[str, int]"}, {"lineNumber": 137, "col_offset": 37, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 137, "col_offset": 65, "nodeName": "widest_type", "type": "Any"}, {"lineNumber": 140, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 579, "col_offset": 50, "nodeName": "sym_name", "type": "Any"}, {"lineNumber": 585, "col_offset": 50, "nodeName": "sym_name", "type": "Any"}, {"lineNumber": 650, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 651, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 652, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 652, "col_offset": 46, "nodeName": "arg_dict", "type": "Dict[str, Any]"}, {"lineNumber": 657, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 658, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 659, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 659, "col_offset": 46, "nodeName": "arg_dict", "type": "Dict[str, Any]"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 142, "col_offset": 70, "nodeName": "x_y", "type": "Any"}, {"lineNumber": 578, "col_offset": 42, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 584, "col_offset": 42, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 142, "col_offset": 48, "nodeName": "x_y", "type": "Any"}, {"lineNumber": 142, "col_offset": 59, "nodeName": "x_y", "type": "Any"}, {"lineNumber": 578, "col_offset": 52, "nodeName": "sym_name", "type": "Any"}, {"lineNumber": 584, "col_offset": 52, "nodeName": "sym_name", "type": "Any"}, {"lineNumber": 651, "col_offset": 46, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 652, "col_offset": 64, "nodeName": "name", "type": "Any"}, {"lineNumber": 658, "col_offset": 46, "nodeName": "attr_dict", "type": "Any"}, {"lineNumber": 659, "col_offset": 64, "nodeName": "name", "type": "Any"}, {"lineNumber": 651, "col_offset": 56, "nodeName": "name", "type": "Any"}, {"lineNumber": 658, "col_offset": 56, "nodeName": "name", "type": "Any"}]