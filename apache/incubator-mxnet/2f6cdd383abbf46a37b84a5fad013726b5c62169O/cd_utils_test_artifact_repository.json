[{"lineNumber": 26, "col_offset": 33, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 26, "col_offset": 33, "nodeName": "unittest", "type": "module"}, {"lineNumber": 36, "col_offset": 77, "nodeName": "Namespace", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "ns", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "libmxnet", "type": "Any"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "libmxnet_path", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "git_sha", "type": "Any"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "git_sha", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "variant", "type": "Any"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "variant", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "os", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "operating_system", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "libtype", "type": "Any"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "libtype", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "bucket", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "bucket", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "licenses", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "licenses", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "dependencies", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "dependencies", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "ns", "type": "Any"}, {"lineNumber": 36, "col_offset": 77, "nodeName": "argparse", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "not_sucessful", "type": "int"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "side_effect", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "platform", "type": "str"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "platform", "type": "str"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "return_value", "type": "Dict[str, str]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "platform", "type": "str"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "platform", "type": "str"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "return_value", "type": "bytes"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "cuda_version", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "return_value", "type": "bytes"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "cuda_version", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "not_sucessful", "type": "int"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "side_effect", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "return_value", "type": "Dict[str, bool]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "return_value", "type": "Dict[str, bool]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "return_value", "type": "Dict[str, bool]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "return_value", "type": "Dict[str, bool]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "return_value", "type": "None"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "return_value", "type": "Dict[str, bool]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "return_value", "type": "None"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "return_value", "type": "None"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "return_value", "type": "None"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "return_value", "type": "None"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "return_value", "type": "None"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "key_prefix", "type": "str"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "key_prefix", "type": "str"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "key_prefix", "type": "str"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "download_fileobj", "type": "unittest.mock.MagicMock"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "mock_fopen", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "key_prefix", "type": "str"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "download_fileobj", "type": "unittest.mock.MagicMock"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "mock_fopen", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "key_prefix", "type": "str"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "upload_fileobj", "type": "unittest.mock.MagicMock"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "mock_fopen", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "side_effect", "type": "List[bool]"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "glob", "type": "Callable[[Any], Any]"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "mock_fopen", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 526, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "Namespace", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "ns", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "ns", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "ns", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "ns", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "ns", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "ns", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "ns", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "ns", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "CalledProcessError", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "mock_open", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 54, "nodeName": "path_mock", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "mock_open", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 54, "nodeName": "path_mock", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "mock_props", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "mock_sys", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "mock_sys", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "get_cuda_version", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "cuda_version", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "get_cuda_version", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "cuda_version", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "CalledProcessError", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "mock_features", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "mock_features", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "mock_features", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "mock_cuda_version", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "mock_features", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "mock_cuda_version", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "mock_features", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "mock_features", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "mock_cuda_version", "type": "Any"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "create_argparse_namespace", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "probe", "type": "Any"}, {"lineNumber": 230, "col_offset": 14, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "git_sha", "type": "Any"}, {"lineNumber": 239, "col_offset": 20, "nodeName": "create_argparse_namespace", "type": "Callable[..., Any]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "create_argparse_namespace", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "probe", "type": "Any"}, {"lineNumber": 252, "col_offset": 14, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "os", "type": "Any"}, {"lineNumber": 261, "col_offset": 20, "nodeName": "create_argparse_namespace", "type": "Callable[..., Any]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "create_argparse_namespace", "type": "Callable[..., Any]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "probe", "type": "Any"}, {"lineNumber": 273, "col_offset": 14, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "variant", "type": "Any"}, {"lineNumber": 282, "col_offset": 20, "nodeName": "create_argparse_namespace", "type": "Callable[..., Any]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "create_argparse_namespace", "type": "Callable[..., Any]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "probe", "type": "Any"}, {"lineNumber": 294, "col_offset": 14, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "bucket", "type": "Any"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "create_argparse_namespace", "type": "Callable[..., Any]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 312, "col_offset": 20, "nodeName": "create_argparse_namespace", "type": "Callable[..., Any]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 323, "col_offset": 20, "nodeName": "create_argparse_namespace", "type": "Callable[..., Any]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 368, "col_offset": 24, "nodeName": "s3_keys", "type": "List[Dict[str, str]]"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "mock_s3", "type": "Any"}, {"lineNumber": 372, "col_offset": 35, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 373, "col_offset": 21, "nodeName": "mock_open", "type": "Callable[..., Any]"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "dest", "type": "Any"}, {"lineNumber": 407, "col_offset": 24, "nodeName": "s3_keys", "type": "List[Dict[str, str]]"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "mock_s3", "type": "Any"}, {"lineNumber": 411, "col_offset": 35, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 412, "col_offset": 21, "nodeName": "mock_open", "type": "Callable[..., Any]"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "dest", "type": "str"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "mock_s3", "type": "Any"}, {"lineNumber": 444, "col_offset": 33, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 445, "col_offset": 21, "nodeName": "mock_open", "type": "Callable[..., Any]"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "mock_exists", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "mock_isfile", "type": "Any"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "mock_exists", "type": "Any"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "mock_isfile", "type": "Any"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "mock_exists", "type": "Any"}, {"lineNumber": 481, "col_offset": 53, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "mock_isfile", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "mock_glob", "type": "Any"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 505, "col_offset": 21, "nodeName": "mock_open", "type": "Callable[..., Any]"}, {"lineNumber": 520, "col_offset": 15, "nodeName": "create_argparse_namespace", "type": "Callable[..., Any]"}, {"lineNumber": 521, "col_offset": 48, "nodeName": "ctx", "type": "unittest.case._AssertRaisesContext[RuntimeError]"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 526, "col_offset": 22, "nodeName": "create_argparse_namespace", "type": "Callable[..., Any]"}, {"lineNumber": 527, "col_offset": 48, "nodeName": "ctx", "type": "unittest.case._AssertRaisesContext[RuntimeError]"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "argparse", "type": "Any"}, {"lineNumber": 58, "col_offset": 77, "nodeName": "not_sucessful", "type": "int"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "get_commit_id_from_cmd", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "dict", "type": "Type[unittest.mock._patch_dict]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "dict", "type": "Type[unittest.mock._patch_dict]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "dict", "type": "Type[unittest.mock._patch_dict]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "probe_commit_id", "type": "Any"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "properties", "type": "str"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "is_file", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "properties", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestArtifactRepositoryTool"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "properties", "type": "Any"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "properties", "type": "str"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "is_file", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "properties", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestArtifactRepositoryTool"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "properties", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "probe_operating_system", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "probe_operating_system", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "probe_operating_system", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "probe_operating_system", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 87, "nodeName": "not_sucessful", "type": "int"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "get_cuda_version", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "probe_mxnet_variant", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "probe_mxnet_variant", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "probe_mxnet_variant", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "probe_mxnet_variant", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 203, "col_offset": 26, "nodeName": "probe_mxnet_variant", "type": "Any"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "probe_mxnet_variant", "type": "Any"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "dict", "type": "Type[unittest.mock._patch_dict]"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "TestArtifactRepositoryTool", "type": "Type[TestArtifactRepositoryTool]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 239, "col_offset": 20, "nodeName": "TestArtifactRepositoryTool", "type": "Type[TestArtifactRepositoryTool]"}, {"lineNumber": 241, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 241, "col_offset": 31, "nodeName": "SystemExit", "type": "Type[SystemExit]"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "probe", "type": "Any"}, {"lineNumber": 242, "col_offset": 18, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "TestArtifactRepositoryTool", "type": "Type[TestArtifactRepositoryTool]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 261, "col_offset": 20, "nodeName": "TestArtifactRepositoryTool", "type": "Type[TestArtifactRepositoryTool]"}, {"lineNumber": 263, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 263, "col_offset": 31, "nodeName": "SystemExit", "type": "Type[SystemExit]"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "probe", "type": "Any"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "TestArtifactRepositoryTool", "type": "Type[TestArtifactRepositoryTool]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 282, "col_offset": 20, "nodeName": "TestArtifactRepositoryTool", "type": "Type[TestArtifactRepositoryTool]"}, {"lineNumber": 284, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 284, "col_offset": 31, "nodeName": "SystemExit", "type": "Type[SystemExit]"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "probe", "type": "Any"}, {"lineNumber": 285, "col_offset": 18, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "TestArtifactRepositoryTool", "type": "Type[TestArtifactRepositoryTool]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "TestArtifactRepositoryTool", "type": "Type[TestArtifactRepositoryTool]"}, {"lineNumber": 305, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 305, "col_offset": 31, "nodeName": "SystemExit", "type": "Type[SystemExit]"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "probe", "type": "Any"}, {"lineNumber": 306, "col_offset": 18, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 312, "col_offset": 20, "nodeName": "TestArtifactRepositoryTool", "type": "Type[TestArtifactRepositoryTool]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "TestArtifactRepositoryTool"}, {"lineNumber": 317, "col_offset": 25, "nodeName": "get_s3_key_prefix", "type": "Any"}, {"lineNumber": 317, "col_offset": 43, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 323, "col_offset": 20, "nodeName": "TestArtifactRepositoryTool", "type": "Type[TestArtifactRepositoryTool]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "self", "type": "TestArtifactRepositoryTool"}, {"lineNumber": 328, "col_offset": 25, "nodeName": "get_s3_key_prefix", "type": "Any"}, {"lineNumber": 328, "col_offset": 43, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 340, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 340, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "try_s3_download", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 352, "col_offset": 25, "nodeName": "try_s3_download", "type": "Any"}, {"lineNumber": 375, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 375, "col_offset": 47, "nodeName": "mock_fopen", "type": "Any"}, {"lineNumber": 376, "col_offset": 19, "nodeName": "join", "type": "Any"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "assert_has_calls", "type": "Any"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "assert_has_calls", "type": "Callable[..., None]"}, {"lineNumber": 414, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 414, "col_offset": 47, "nodeName": "mock_fopen", "type": "Any"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "assert_has_calls", "type": "Any"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "assert_has_calls", "type": "Callable[..., None]"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "join", "type": "Any"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "join", "type": "Any"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "join", "type": "Any"}, {"lineNumber": 447, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 447, "col_offset": 47, "nodeName": "mock_fopen", "type": "Any"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "s3_upload", "type": "Any"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "assert_has_calls", "type": "Callable[..., None]"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 463, "col_offset": 24, "nodeName": "is_file", "type": "Any"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 473, "col_offset": 25, "nodeName": "is_file", "type": "Any"}, {"lineNumber": 481, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 481, "col_offset": 31, "nodeName": "FileNotFoundError", "type": "Type[FileNotFoundError]"}, {"lineNumber": 482, "col_offset": 12, "nodeName": "is_file", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 483, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 483, "col_offset": 29, "nodeName": "exception", "type": "Any"}, {"lineNumber": 483, "col_offset": 45, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "self", "type": "TestArtifactRepositoryTool"}, {"lineNumber": 489, "col_offset": 29, "nodeName": "sanitize_path_array", "type": "Any"}, {"lineNumber": 498, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 499, "col_offset": 29, "nodeName": "sanitize_path_array", "type": "Any"}, {"lineNumber": 506, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 506, "col_offset": 47, "nodeName": "mock_fopen", "type": "Any"}, {"lineNumber": 507, "col_offset": 24, "nodeName": "create_argparse_namespace", "type": "Callable[..., Any]"}, {"lineNumber": 511, "col_offset": 12, "nodeName": "write_libmxnet_meta", "type": "Any"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "called_with", "type": "Any"}, {"lineNumber": 520, "col_offset": 15, "nodeName": "TestArtifactRepositoryTool", "type": "Type[TestArtifactRepositoryTool]"}, {"lineNumber": 521, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 521, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 522, "col_offset": 12, "nodeName": "push_artifact", "type": "Any"}, {"lineNumber": 522, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "self", "type": "TestArtifactRepositoryTool"}, {"lineNumber": 523, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 523, "col_offset": 29, "nodeName": "exception", "type": "RuntimeError"}, {"lineNumber": 526, "col_offset": 22, "nodeName": "TestArtifactRepositoryTool", "type": "Type[TestArtifactRepositoryTool]"}, {"lineNumber": 527, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 527, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 528, "col_offset": 12, "nodeName": "push_artifact", "type": "Any"}, {"lineNumber": 528, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "self", "type": "TestArtifactRepositoryTool"}, {"lineNumber": 529, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 529, "col_offset": 29, "nodeName": "exception", "type": "RuntimeError"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "TestArtifactRepositoryTool"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "probe_commit_id", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "TestArtifactRepositoryTool"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "probe_commit_id", "type": "Any"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "TestArtifactRepositoryTool"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "probe_commit_id", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "path_mock", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "mock", "type": "Any"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "get_linux_os_release_properties", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "path_mock", "type": "Any"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 111, "col_offset": 51, "nodeName": "mock", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "get_linux_os_release_properties", "type": "Any"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "self", "type": "TestArtifactRepositoryTool"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "probe_artifact_repository_bucket", "type": "Any"}, {"lineNumber": 241, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 263, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 284, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 340, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 341, "col_offset": 59, "nodeName": "key_prefix", "type": "str"}, {"lineNumber": 352, "col_offset": 72, "nodeName": "key_prefix", "type": "str"}, {"lineNumber": 362, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 362, "col_offset": 41, "nodeName": "key_prefix", "type": "str"}, {"lineNumber": 363, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 363, "col_offset": 49, "nodeName": "key_prefix", "type": "str"}, {"lineNumber": 364, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 364, "col_offset": 54, "nodeName": "key_prefix", "type": "str"}, {"lineNumber": 376, "col_offset": 19, "nodeName": "path", "type": "Any"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 377, "col_offset": 28, "nodeName": "try_s3_download", "type": "Any"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "mock_makedirs", "type": "Any"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "download_fileobj", "type": "unittest.mock.MagicMock"}, {"lineNumber": 401, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 401, "col_offset": 41, "nodeName": "key_prefix", "type": "str"}, {"lineNumber": 402, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 402, "col_offset": 49, "nodeName": "key_prefix", "type": "str"}, {"lineNumber": 403, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 403, "col_offset": 54, "nodeName": "key_prefix", "type": "str"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 416, "col_offset": 28, "nodeName": "try_s3_download", "type": "Any"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "mock_makedirs", "type": "Any"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "download_fileobj", "type": "unittest.mock.MagicMock"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "path", "type": "Any"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "path", "type": "Any"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "path", "type": "Any"}, {"lineNumber": 448, "col_offset": 53, "nodeName": "key_prefix", "type": "str"}, {"lineNumber": 448, "col_offset": 71, "nodeName": "paths", "type": "List[Any]"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "upload_fileobj", "type": "unittest.mock.MagicMock"}, {"lineNumber": 481, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 483, "col_offset": 29, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 507, "col_offset": 24, "nodeName": "TestArtifactRepositoryTool", "type": "Type[TestArtifactRepositoryTool]"}, {"lineNumber": 511, "col_offset": 37, "nodeName": "fake_args", "type": "Any"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "mock_fopen", "type": "Any"}, {"lineNumber": 512, "col_offset": 47, "nodeName": "join", "type": "Any"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 521, "col_offset": 13, "nodeName": "self", "type": "TestArtifactRepositoryTool"}, {"lineNumber": 523, "col_offset": 29, "nodeName": "ctx", "type": "unittest.case._AssertRaisesContext[RuntimeError]"}, {"lineNumber": 527, "col_offset": 13, "nodeName": "self", "type": "TestArtifactRepositoryTool"}, {"lineNumber": 529, "col_offset": 29, "nodeName": "ctx", "type": "unittest.case._AssertRaisesContext[RuntimeError]"}, {"lineNumber": 36, "col_offset": 57, "nodeName": "List", "type": "Any"}, {"lineNumber": 376, "col_offset": 19, "nodeName": "os", "type": "Any"}, {"lineNumber": 377, "col_offset": 75, "nodeName": "key_prefix", "type": "str"}, {"lineNumber": 377, "col_offset": 99, "nodeName": "dest", "type": "Any"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 381, "col_offset": 35, "nodeName": "dest", "type": "Any"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 383, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "mock_s3", "type": "Any"}, {"lineNumber": 388, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 389, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 416, "col_offset": 75, "nodeName": "key_prefix", "type": "str"}, {"lineNumber": 416, "col_offset": 99, "nodeName": "dest", "type": "str"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 420, "col_offset": 35, "nodeName": "dest", "type": "str"}, {"lineNumber": 421, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 422, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "mock_s3", "type": "Any"}, {"lineNumber": 427, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 428, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "os", "type": "Any"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "os", "type": "Any"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "os", "type": "Any"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "mock_s3", "type": "Any"}, {"lineNumber": 450, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 451, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 512, "col_offset": 47, "nodeName": "path", "type": "Any"}, {"lineNumber": 36, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "mock", "type": "module"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "mock", "type": "module"}, {"lineNumber": 382, "col_offset": 35, "nodeName": "join", "type": "Any"}, {"lineNumber": 382, "col_offset": 48, "nodeName": "dest", "type": "Any"}, {"lineNumber": 383, "col_offset": 16, "nodeName": "mock", "type": "module"}, {"lineNumber": 383, "col_offset": 35, "nodeName": "join", "type": "Any"}, {"lineNumber": 383, "col_offset": 48, "nodeName": "dest", "type": "Any"}, {"lineNumber": 388, "col_offset": 16, "nodeName": "mock", "type": "module"}, {"lineNumber": 388, "col_offset": 60, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 389, "col_offset": 16, "nodeName": "mock", "type": "module"}, {"lineNumber": 389, "col_offset": 60, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "mock", "type": "module"}, {"lineNumber": 390, "col_offset": 60, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "mock", "type": "module"}, {"lineNumber": 421, "col_offset": 16, "nodeName": "mock", "type": "module"}, {"lineNumber": 421, "col_offset": 35, "nodeName": "join", "type": "Any"}, {"lineNumber": 421, "col_offset": 48, "nodeName": "dest", "type": "str"}, {"lineNumber": 422, "col_offset": 16, "nodeName": "mock", "type": "module"}, {"lineNumber": 422, "col_offset": 35, "nodeName": "join", "type": "Any"}, {"lineNumber": 422, "col_offset": 48, "nodeName": "dest", "type": "str"}, {"lineNumber": 427, "col_offset": 16, "nodeName": "mock", "type": "module"}, {"lineNumber": 427, "col_offset": 60, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 428, "col_offset": 16, "nodeName": "mock", "type": "module"}, {"lineNumber": 428, "col_offset": 60, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "mock", "type": "module"}, {"lineNumber": 429, "col_offset": 60, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 450, "col_offset": 16, "nodeName": "mock", "type": "module"}, {"lineNumber": 450, "col_offset": 43, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 451, "col_offset": 16, "nodeName": "mock", "type": "module"}, {"lineNumber": 451, "col_offset": 43, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "mock", "type": "module"}, {"lineNumber": 452, "col_offset": 43, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 512, "col_offset": 47, "nodeName": "os", "type": "Any"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "mock_fopen", "type": "Any"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 382, "col_offset": 35, "nodeName": "path", "type": "Any"}, {"lineNumber": 383, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 383, "col_offset": 35, "nodeName": "path", "type": "Any"}, {"lineNumber": 388, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 388, "col_offset": 60, "nodeName": "mock", "type": "module"}, {"lineNumber": 389, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 389, "col_offset": 60, "nodeName": "mock", "type": "module"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 390, "col_offset": 60, "nodeName": "mock", "type": "module"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 421, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 421, "col_offset": 35, "nodeName": "path", "type": "Any"}, {"lineNumber": 422, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 422, "col_offset": 35, "nodeName": "path", "type": "Any"}, {"lineNumber": 427, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 427, "col_offset": 60, "nodeName": "mock", "type": "module"}, {"lineNumber": 428, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 428, "col_offset": 60, "nodeName": "mock", "type": "module"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 429, "col_offset": 60, "nodeName": "mock", "type": "module"}, {"lineNumber": 450, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 450, "col_offset": 43, "nodeName": "mock", "type": "module"}, {"lineNumber": 451, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 451, "col_offset": 43, "nodeName": "mock", "type": "module"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 452, "col_offset": 43, "nodeName": "mock", "type": "module"}, {"lineNumber": 382, "col_offset": 35, "nodeName": "os", "type": "Any"}, {"lineNumber": 383, "col_offset": 35, "nodeName": "os", "type": "Any"}, {"lineNumber": 388, "col_offset": 60, "nodeName": "unittest", "type": "module"}, {"lineNumber": 388, "col_offset": 83, "nodeName": "s3_keys", "type": "List[Dict[str, str]]"}, {"lineNumber": 389, "col_offset": 60, "nodeName": "unittest", "type": "module"}, {"lineNumber": 389, "col_offset": 83, "nodeName": "s3_keys", "type": "List[Dict[str, str]]"}, {"lineNumber": 390, "col_offset": 60, "nodeName": "unittest", "type": "module"}, {"lineNumber": 390, "col_offset": 83, "nodeName": "s3_keys", "type": "List[Dict[str, str]]"}, {"lineNumber": 421, "col_offset": 35, "nodeName": "os", "type": "Any"}, {"lineNumber": 422, "col_offset": 35, "nodeName": "os", "type": "Any"}, {"lineNumber": 427, "col_offset": 60, "nodeName": "unittest", "type": "module"}, {"lineNumber": 427, "col_offset": 83, "nodeName": "s3_keys", "type": "List[Dict[str, str]]"}, {"lineNumber": 428, "col_offset": 60, "nodeName": "unittest", "type": "module"}, {"lineNumber": 428, "col_offset": 83, "nodeName": "s3_keys", "type": "List[Dict[str, str]]"}, {"lineNumber": 429, "col_offset": 60, "nodeName": "unittest", "type": "module"}, {"lineNumber": 429, "col_offset": 83, "nodeName": "s3_keys", "type": "List[Dict[str, str]]"}, {"lineNumber": 450, "col_offset": 43, "nodeName": "unittest", "type": "module"}, {"lineNumber": 451, "col_offset": 43, "nodeName": "unittest", "type": "module"}, {"lineNumber": 452, "col_offset": 43, "nodeName": "unittest", "type": "module"}]