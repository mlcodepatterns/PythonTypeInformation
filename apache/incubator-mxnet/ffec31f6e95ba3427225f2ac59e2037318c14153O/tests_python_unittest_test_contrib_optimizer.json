[{"lineNumber": 62, "col_offset": 0, "nodeName": "test_group_adagrad", "type": "Callable[[], Any]"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "test_adamw", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "opt1", "type": "Type[PyGroupAdaGrad]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "PyGroupAdaGrad", "type": "Type[PyGroupAdaGrad]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "GroupAdaGrad", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "eps_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "weight", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "weight_ref", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "grad", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "weight_fp16", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "grad_fp16", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "weight_fp16_ref", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "grad_rescale", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "m_ref", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "v_ref", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "weight_ref", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "m_test", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "v_test", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "weight_test", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "m_fp32", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "v_fp32", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "weight_fp32", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "grad_rescale", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "m_ref", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "v_ref", "type": "Any"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "weight_ref", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "weight_fp16_ref", "type": "Any"}, {"lineNumber": 194, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "mx", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "float_stable_eps", "type": "Any"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "eps", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "wd", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "state", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "div", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "div", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "float32", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "options", "type": "Union[Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float]], Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float]]]"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "copy", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "eta", "type": "int"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "lr", "type": "int"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "wd", "type": "int"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "beta1", "type": "float"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "beta2", "type": "float"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "eta", "type": "int"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "lr", "type": "int"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "wd", "type": "int"}, {"lineNumber": 107, "col_offset": 57, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "beta1", "type": "float"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "beta2", "type": "float"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "adamw_update", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "weight", "type": "Any"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "grad", "type": "Any"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "m", "type": "Any"}, {"lineNumber": 111, "col_offset": 48, "nodeName": "v", "type": "Any"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "nan", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "adamw_update", "type": "Any"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "weight", "type": "Any"}, {"lineNumber": 117, "col_offset": 39, "nodeName": "grad", "type": "Any"}, {"lineNumber": 117, "col_offset": 45, "nodeName": "m", "type": "Any"}, {"lineNumber": 117, "col_offset": 48, "nodeName": "v", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "adamw_update", "type": "Any"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "weight", "type": "Any"}, {"lineNumber": 123, "col_offset": 39, "nodeName": "grad", "type": "Any"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "m", "type": "Any"}, {"lineNumber": 123, "col_offset": 48, "nodeName": "v", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "adamw_update", "type": "Any"}, {"lineNumber": 129, "col_offset": 31, "nodeName": "weight", "type": "Any"}, {"lineNumber": 129, "col_offset": 39, "nodeName": "grad", "type": "Any"}, {"lineNumber": 129, "col_offset": 45, "nodeName": "m", "type": "Any"}, {"lineNumber": 129, "col_offset": 48, "nodeName": "v", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "copy", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "mp_adamw_update", "type": "Any"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "weight_fp16", "type": "Any"}, {"lineNumber": 138, "col_offset": 47, "nodeName": "grad_fp16", "type": "Any"}, {"lineNumber": 138, "col_offset": 58, "nodeName": "m", "type": "Any"}, {"lineNumber": 138, "col_offset": 61, "nodeName": "v", "type": "Any"}, {"lineNumber": 138, "col_offset": 64, "nodeName": "weight", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "mp_adamw_update", "type": "Any"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "weight_fp16", "type": "Any"}, {"lineNumber": 144, "col_offset": 47, "nodeName": "grad_fp16", "type": "Any"}, {"lineNumber": 144, "col_offset": 58, "nodeName": "m", "type": "Any"}, {"lineNumber": 144, "col_offset": 61, "nodeName": "v", "type": "Any"}, {"lineNumber": 144, "col_offset": 64, "nodeName": "weight", "type": "Any"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "nan", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "mp_adamw_update", "type": "Any"}, {"lineNumber": 150, "col_offset": 34, "nodeName": "weight_fp16", "type": "Any"}, {"lineNumber": 150, "col_offset": 47, "nodeName": "grad_fp16", "type": "Any"}, {"lineNumber": 150, "col_offset": 58, "nodeName": "m", "type": "Any"}, {"lineNumber": 150, "col_offset": 61, "nodeName": "v", "type": "Any"}, {"lineNumber": 150, "col_offset": 64, "nodeName": "weight", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "mp_adamw_update", "type": "Any"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "weight_fp16", "type": "Any"}, {"lineNumber": 156, "col_offset": 47, "nodeName": "grad_fp16", "type": "Any"}, {"lineNumber": 156, "col_offset": 58, "nodeName": "m", "type": "Any"}, {"lineNumber": 156, "col_offset": 61, "nodeName": "v", "type": "Any"}, {"lineNumber": 156, "col_offset": 64, "nodeName": "weight", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "grad", "type": "Any"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "weight", "type": "Any"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "adamw_update", "type": "Any"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "weight_test", "type": "Any"}, {"lineNumber": 170, "col_offset": 44, "nodeName": "grad", "type": "Any"}, {"lineNumber": 170, "col_offset": 50, "nodeName": "m_test", "type": "Any"}, {"lineNumber": 170, "col_offset": 58, "nodeName": "v_test", "type": "Any"}, {"lineNumber": 171, "col_offset": 31, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 179, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "weight", "type": "Any"}, {"lineNumber": 184, "col_offset": 22, "nodeName": "astype", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "mp_adamw_update", "type": "Any"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "weight_fp16", "type": "Any"}, {"lineNumber": 186, "col_offset": 47, "nodeName": "grad_fp16", "type": "Any"}, {"lineNumber": 186, "col_offset": 58, "nodeName": "m_fp32", "type": "Any"}, {"lineNumber": 186, "col_offset": 66, "nodeName": "v_fp32", "type": "Any"}, {"lineNumber": 186, "col_offset": 74, "nodeName": "weight_fp32", "type": "Any"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "runmodule", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "PyGroupAdaGrad"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "context", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "_update_count", "type": "Any"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "index", "type": "Any"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "_get_lr", "type": "Any"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "index", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "_get_wd", "type": "Any"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "index", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "wd", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "mean", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "product", "type": "Callable"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "eps_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 71, "col_offset": 54, "nodeName": "cg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 71, "col_offset": 66, "nodeName": "rg_options", "type": "List[Union[Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "option", "type": "Union[Dict[str, float], Dict[nothing, nothing]]"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "options", "type": "Union[Tuple[Dict[str, float], Dict[str, float], Dict[nothing, nothing]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[nothing, nothing]], Tuple[Dict[str, float], Dict[str, float], Dict[str, float]], Tuple[Dict[nothing, nothing], Dict[nothing, nothing], Dict[str, float]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[nothing, nothing]], Tuple[Dict[nothing, nothing], Dict[str, float], Dict[str, float]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[nothing, nothing]], Tuple[Dict[str, float], Dict[nothing, nothing], Dict[str, float]]]"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "weight", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 101, "col_offset": 38, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "nd", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 43, "nodeName": "weight", "type": "Any"}, {"lineNumber": 112, "col_offset": 53, "nodeName": "kwargs", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 114, "col_offset": 60, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 118, "col_offset": 53, "nodeName": "weight", "type": "Any"}, {"lineNumber": 118, "col_offset": 63, "nodeName": "kwargs", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 120, "col_offset": 60, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 124, "col_offset": 46, "nodeName": "nan", "type": "Any"}, {"lineNumber": 124, "col_offset": 58, "nodeName": "weight", "type": "Any"}, {"lineNumber": 124, "col_offset": 68, "nodeName": "kwargs", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 126, "col_offset": 60, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 130, "col_offset": 46, "nodeName": "inf", "type": "Any"}, {"lineNumber": 130, "col_offset": 58, "nodeName": "weight", "type": "Any"}, {"lineNumber": 130, "col_offset": 68, "nodeName": "kwargs", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 132, "col_offset": 60, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "weight", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "weight_fp16", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 139, "col_offset": 49, "nodeName": "nan", "type": "Any"}, {"lineNumber": 139, "col_offset": 61, "nodeName": "weight_fp16", "type": "Any"}, {"lineNumber": 139, "col_offset": 76, "nodeName": "kwargs", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 140, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 140, "col_offset": 60, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 141, "col_offset": 65, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 46, "nodeName": "weight_fp16", "type": "Any"}, {"lineNumber": 145, "col_offset": 61, "nodeName": "kwargs", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 146, "col_offset": 60, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 147, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 147, "col_offset": 65, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 151, "col_offset": 34, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 151, "col_offset": 49, "nodeName": "inf", "type": "Any"}, {"lineNumber": 151, "col_offset": 61, "nodeName": "weight_fp16", "type": "Any"}, {"lineNumber": 151, "col_offset": 76, "nodeName": "kwargs", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 152, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 152, "col_offset": 60, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 153, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 153, "col_offset": 65, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "rescale_grad", "type": "Any"}, {"lineNumber": 157, "col_offset": 56, "nodeName": "weight_fp16", "type": "Any"}, {"lineNumber": 157, "col_offset": 71, "nodeName": "kwargs", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 158, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 158, "col_offset": 60, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 159, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 159, "col_offset": 65, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "beta1", "type": "float"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "m", "type": "Any"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "grad_rescale", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "beta2", "type": "float"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "v", "type": "Any"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "eta", "type": "int"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "m", "type": "Any"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "v", "type": "Any"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "weight", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 171, "col_offset": 49, "nodeName": "weight_test", "type": "Any"}, {"lineNumber": 171, "col_offset": 64, "nodeName": "kwargs", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 172, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 172, "col_offset": 60, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 173, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 173, "col_offset": 55, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 174, "col_offset": 55, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "m", "type": "Any"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "v", "type": "Any"}, {"lineNumber": 179, "col_offset": 18, "nodeName": "weight", "type": "Any"}, {"lineNumber": 180, "col_offset": 34, "nodeName": "astype", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "beta1", "type": "float"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "m_fp32", "type": "Any"}, {"lineNumber": 181, "col_offset": 37, "nodeName": "grad_rescale", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "beta2", "type": "float"}, {"lineNumber": 182, "col_offset": 18, "nodeName": "v_fp32", "type": "Any"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "eta", "type": "int"}, {"lineNumber": 184, "col_offset": 22, "nodeName": "weight_ref", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 187, "col_offset": 52, "nodeName": "weight_fp16", "type": "Any"}, {"lineNumber": 187, "col_offset": 67, "nodeName": "kwargs", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 188, "col_offset": 55, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 189, "col_offset": 55, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 190, "col_offset": 60, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 191, "col_offset": 65, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "nose", "type": "Any"}, {"lineNumber": 38, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "nd", "type": "Any"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 44, "col_offset": 56, "nodeName": "stype", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "PyGroupAdaGrad"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "self", "type": "PyGroupAdaGrad"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "self", "type": "PyGroupAdaGrad"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "self", "type": "PyGroupAdaGrad"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "self", "type": "PyGroupAdaGrad"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "clip", "type": "Any"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "grad", "type": "Any"}, {"lineNumber": 56, "col_offset": 57, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "nd", "type": "Any"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "square", "type": "Any"}, {"lineNumber": 57, "col_offset": 46, "nodeName": "grad", "type": "Any"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "lr", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "grad", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "itertools", "type": "module"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "compare_optimizer", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "nd", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "nd", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "nd", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "nd", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "mx", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "nd", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "weight_ref", "type": "Any"}, {"lineNumber": 114, "col_offset": 60, "nodeName": "weight", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "nd", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "weight_ref", "type": "Any"}, {"lineNumber": 120, "col_offset": 60, "nodeName": "weight", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "nd", "type": "Any"}, {"lineNumber": 124, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "weight_ref", "type": "Any"}, {"lineNumber": 126, "col_offset": 60, "nodeName": "weight", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "nd", "type": "Any"}, {"lineNumber": 130, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "weight_ref", "type": "Any"}, {"lineNumber": 132, "col_offset": 60, "nodeName": "weight", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "nd", "type": "Any"}, {"lineNumber": 139, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 140, "col_offset": 38, "nodeName": "weight_ref", "type": "Any"}, {"lineNumber": 140, "col_offset": 60, "nodeName": "weight", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "weight_fp16_ref", "type": "Any"}, {"lineNumber": 141, "col_offset": 65, "nodeName": "weight_fp16", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "nd", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "weight_ref", "type": "Any"}, {"lineNumber": 146, "col_offset": 60, "nodeName": "weight", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 147, "col_offset": 38, "nodeName": "weight_fp16_ref", "type": "Any"}, {"lineNumber": 147, "col_offset": 65, "nodeName": "weight_fp16", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "nd", "type": "Any"}, {"lineNumber": 151, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 152, "col_offset": 38, "nodeName": "weight_ref", "type": "Any"}, {"lineNumber": 152, "col_offset": 60, "nodeName": "weight", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 153, "col_offset": 38, "nodeName": "weight_fp16_ref", "type": "Any"}, {"lineNumber": 153, "col_offset": 65, "nodeName": "weight_fp16", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "nd", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 158, "col_offset": 38, "nodeName": "weight_ref", "type": "Any"}, {"lineNumber": 158, "col_offset": 60, "nodeName": "weight", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 159, "col_offset": 38, "nodeName": "weight_fp16_ref", "type": "Any"}, {"lineNumber": 159, "col_offset": 65, "nodeName": "weight_fp16", "type": "Any"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "beta1", "type": "float"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "beta2", "type": "float"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "grad_rescale", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "nd", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 172, "col_offset": 38, "nodeName": "weight_ref", "type": "Any"}, {"lineNumber": 172, "col_offset": 60, "nodeName": "weight_test", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 173, "col_offset": 38, "nodeName": "m_ref", "type": "Any"}, {"lineNumber": 173, "col_offset": 55, "nodeName": "m_test", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "v_ref", "type": "Any"}, {"lineNumber": 174, "col_offset": 55, "nodeName": "v_test", "type": "Any"}, {"lineNumber": 180, "col_offset": 34, "nodeName": "grad_fp16", "type": "Any"}, {"lineNumber": 181, "col_offset": 30, "nodeName": "beta1", "type": "float"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "beta2", "type": "float"}, {"lineNumber": 182, "col_offset": 38, "nodeName": "grad_rescale", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "nd", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "m_ref", "type": "Any"}, {"lineNumber": 188, "col_offset": 55, "nodeName": "m_fp32", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "v_ref", "type": "Any"}, {"lineNumber": 189, "col_offset": 55, "nodeName": "v_fp32", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "weight_ref", "type": "Any"}, {"lineNumber": 190, "col_offset": 60, "nodeName": "weight_fp32", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "weight_fp16_ref", "type": "Any"}, {"lineNumber": 191, "col_offset": 65, "nodeName": "weight_fp16", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "PyGroupAdaGrad", "type": "Type[PyGroupAdaGrad]"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "self", "type": "PyGroupAdaGrad"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "weight", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "mx", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "shape", "type": "Any"}, {"lineNumber": 44, "col_offset": 56, "nodeName": "weight", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "nd", "type": "Any"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "clip_gradient", "type": "Any"}, {"lineNumber": 56, "col_offset": 57, "nodeName": "self", "type": "PyGroupAdaGrad"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "mx", "type": "Any"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "nd", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "nd", "type": "Any"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "history", "type": "Any"}, {"lineNumber": 58, "col_offset": 47, "nodeName": "float_stable_eps", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "option", "type": "Union[Dict[str, float], Dict[nothing, nothing]]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "opt1", "type": "Type[PyGroupAdaGrad]"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "opt1", "type": "Type[PyGroupAdaGrad]"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "opt1", "type": "Type[PyGroupAdaGrad]"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "opt2", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "mx", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "mx", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "mx", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 165, "col_offset": 72, "nodeName": "weight", "type": "Any"}, {"lineNumber": 165, "col_offset": 81, "nodeName": "wd", "type": "int"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 183, "col_offset": 72, "nodeName": "weight", "type": "Any"}, {"lineNumber": 183, "col_offset": 81, "nodeName": "wd", "type": "int"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "weight", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "mx", "type": "Any"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "self", "type": "PyGroupAdaGrad"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "mx", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "mx", "type": "Any"}, {"lineNumber": 58, "col_offset": 47, "nodeName": "self", "type": "PyGroupAdaGrad"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 165, "col_offset": 37, "nodeName": "m_ref", "type": "Any"}, {"lineNumber": 165, "col_offset": 61, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 183, "col_offset": 37, "nodeName": "m_ref", "type": "Any"}, {"lineNumber": 183, "col_offset": 61, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 165, "col_offset": 46, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 183, "col_offset": 46, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 165, "col_offset": 46, "nodeName": "v_ref", "type": "Any"}, {"lineNumber": 183, "col_offset": 46, "nodeName": "v_ref", "type": "Any"}]