[{"lineNumber": 25, "col_offset": 0, "nodeName": "test_print_summary", "type": "Callable[[], Any]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "graphviz_exists", "type": "Callable[[], Any]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "test_plot_network", "type": "Callable[[], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "bias", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "emb1", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "bn1", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "act1", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "mp1", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "fc1", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "fc2", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "sc1", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "shape", "type": "Dict[str, Tuple[int, int, int]]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "Convolution", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "BatchNorm", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "Pooling", "type": "Any"}, {"lineNumber": 33, "col_offset": 10, "nodeName": "FullyConnected", "type": "Any"}, {"lineNumber": 34, "col_offset": 10, "nodeName": "FullyConnected", "type": "Any"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "SliceChannel", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "print_summary", "type": "Any"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "sc1", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "shape", "type": "Dict[str, Tuple[int, int, int]]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "print_summary", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "sc1", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "shape", "type": "Dict[str, Tuple[int, int, int]]"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 53, "col_offset": 10, "nodeName": "FullyConnected", "type": "Any"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 55, "col_offset": 10, "nodeName": "FullyConnected", "type": "Any"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "SoftmaxOutput", "type": "Any"}, {"lineNumber": 57, "col_offset": 49, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "sym", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "sym", "type": "Any"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 28, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 29, "col_offset": 40, "nodeName": "emb1", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 30, "col_offset": 37, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "bn1", "type": "Any"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "act1", "type": "Any"}, {"lineNumber": 33, "col_offset": 10, "nodeName": "sym", "type": "Any"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "mp1", "type": "Any"}, {"lineNumber": 33, "col_offset": 47, "nodeName": "bias", "type": "Any"}, {"lineNumber": 34, "col_offset": 10, "nodeName": "sym", "type": "Any"}, {"lineNumber": 34, "col_offset": 37, "nodeName": "fc1", "type": "Any"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "fc2", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "viz", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "viz", "type": "Any"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "sym", "type": "Any"}, {"lineNumber": 53, "col_offset": 10, "nodeName": "sym", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "net", "type": "Any"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "sym", "type": "Any"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "net", "type": "Any"}, {"lineNumber": 55, "col_offset": 10, "nodeName": "sym", "type": "Any"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "net", "type": "Any"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "sym", "type": "Any"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "net", "type": "Any"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "plot_network", "type": "Any"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "net", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 62, "col_offset": 78, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 62, "col_offset": 82, "nodeName": "message", "type": "Warning"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "message", "type": "Warning"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 33, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 34, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 53, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 55, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "warnings", "type": "module"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "viz", "type": "Any"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "mx", "type": "Any"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 62, "col_offset": 82, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "np", "type": "module"}]