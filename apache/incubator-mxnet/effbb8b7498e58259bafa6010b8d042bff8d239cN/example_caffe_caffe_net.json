[{"lineNumber": 25, "col_offset": 0, "nodeName": "get_mlp", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "get_lenet", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "get_network_from_json_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "parse_args", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "act1", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "act2", "type": "Any"}, {"lineNumber": 36, "col_offset": 7, "nodeName": "use_caffe_loss", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "act1", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "act2", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "act3", "type": "Any"}, {"lineNumber": 75, "col_offset": 7, "nodeName": "use_caffe_loss", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "lenet", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "network", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "network", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 125, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "use_caffe_loss", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "caffe_loss", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "use_caffe_data", "type": "Any"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "caffe_data", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "data_shape", "type": "Tuple[()]"}, {"lineNumber": 142, "col_offset": 7, "nodeName": "use_caffe_loss", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "CaffeOp", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "CaffeOp", "type": "Any"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "CaffeOp", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "CaffeOp", "type": "Any"}, {"lineNumber": 34, "col_offset": 10, "nodeName": "CaffeOp", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "label", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "CaffeOp", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "CaffeOp", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "CaffeOp", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "CaffeOp", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "CaffeOp", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "CaffeOp", "type": "Any"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "CaffeOp", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "CaffeOp", "type": "Any"}, {"lineNumber": 73, "col_offset": 10, "nodeName": "CaffeOp", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "label", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "lenet", "type": "Any"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "load", "type": "Any"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "parse_args", "type": "Callable[[], Any]"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 131, "col_offset": 7, "nodeName": "network", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "data_shape", "type": "Tuple[int]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 28, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 30, "col_offset": 36, "nodeName": "fc1", "type": "Any"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "act1", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 33, "col_offset": 36, "nodeName": "fc2", "type": "Any"}, {"lineNumber": 34, "col_offset": 10, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 34, "col_offset": 35, "nodeName": "act2", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "CaffeLoss", "type": "Any"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "SoftmaxOutput", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "act1", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "pool1", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "conv2", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "act2", "type": "Any"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "pool2", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "fc1", "type": "Any"}, {"lineNumber": 73, "col_offset": 10, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "act3", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "CaffeLoss", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "SoftmaxOutput", "type": "Any"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "sym", "type": "Any"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 92, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 94, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 98, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 102, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 104, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 108, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 110, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 112, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 114, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 116, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 118, "col_offset": 44, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 120, "col_offset": 50, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 131, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 133, "col_offset": 14, "nodeName": "get_mlp", "type": "Callable[[], Any]"}, {"lineNumber": 134, "col_offset": 9, "nodeName": "network", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "net", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "net", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 34, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 38, "col_offset": 39, "nodeName": "fc3", "type": "Any"}, {"lineNumber": 38, "col_offset": 50, "nodeName": "label", "type": "Any"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "fc3", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "mx", "type": "Any"}, {"lineNumber": 73, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "fc2", "type": "Any"}, {"lineNumber": 77, "col_offset": 52, "nodeName": "label", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 80, "col_offset": 45, "nodeName": "fc2", "type": "Any"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "mx", "type": "Any"}, {"lineNumber": 134, "col_offset": 9, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "use_caffe_data", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "data_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "get_lenet", "type": "Callable[[], Any]"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "get_network_from_json_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "network", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "train_model", "type": "Any"}, {"lineNumber": 143, "col_offset": 35, "nodeName": "get_iterator", "type": "Any"}, {"lineNumber": 143, "col_offset": 48, "nodeName": "data_shape", "type": "Union[Tuple[int, int, int], Tuple[int], Tuple[()]]"}, {"lineNumber": 143, "col_offset": 60, "nodeName": "use_caffe_data", "type": "Any"}, {"lineNumber": 143, "col_offset": 77, "nodeName": "Caffe", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "train_model", "type": "Any"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "get_iterator", "type": "Any"}, {"lineNumber": 145, "col_offset": 48, "nodeName": "data_shape", "type": "Union[Tuple[int, int, int], Tuple[int], Tuple[()]]"}, {"lineNumber": 145, "col_offset": 60, "nodeName": "use_caffe_data", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "mx", "type": "Any"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "mx", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 143, "col_offset": 77, "nodeName": "metric", "type": "Any"}, {"lineNumber": 143, "col_offset": 77, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 143, "col_offset": 77, "nodeName": "mx", "type": "Any"}]