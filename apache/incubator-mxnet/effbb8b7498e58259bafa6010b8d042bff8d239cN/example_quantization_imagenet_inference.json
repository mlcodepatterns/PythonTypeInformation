[{"lineNumber": 29, "col_offset": 0, "nodeName": "download_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "load_model", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "advance_data_iter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "score", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 0, "nodeName": "low_precison_convert", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 0, "nodeName": "benchmark_score", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "cur_path", "type": "str"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "symbol_file_path", "type": "str"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "param_file_path", "type": "str"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "save_dict", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "arg_params", "type": "Dict[Any, Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "aux_params", "type": "Dict[Any, Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "has_next_batch", "type": "bool"}, {"lineNumber": 62, "col_offset": 10, "nodeName": "has_next_batch", "type": "bool"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "tic", "type": "float"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "num", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "speed", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "cur_path", "type": "str"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "symbol_file_path", "type": "str"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "sym", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 152, "col_offset": 7, "nodeName": "low_precision", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "batch", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "dry_run", "type": "int"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 186, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "symbol_file", "type": "Any"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "symbol_file", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 232, "col_offset": 17, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "data_nthreads", "type": "Any"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "data_nthreads", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "rgb_mean", "type": "Any"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "rgb_mean", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "rgb_mean", "type": "List[float]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "mean_args", "type": "Dict[str, float]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "rgb_std", "type": "Any"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "rgb_std", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "rgb_std", "type": "List[float]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "std_args", "type": "Dict[str, float]"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "combine_mean_std", "type": "Dict[str, float]"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "label_name", "type": "Any"}, {"lineNumber": 250, "col_offset": 17, "nodeName": "label_name", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "image_shape", "type": "Any"}, {"lineNumber": 253, "col_offset": 18, "nodeName": "image_shape", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "data_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "data_layer_type", "type": "Any"}, {"lineNumber": 257, "col_offset": 22, "nodeName": "data_layer_type", "type": "Any"}, {"lineNumber": 259, "col_offset": 7, "nodeName": "low_precision", "type": "Any"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "logger", "type": "None"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "download", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "dataset_url", "type": "str"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "dataset_dir", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "cur_path", "type": "str"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "symbol_file", "type": "Any"}, {"lineNumber": 38, "col_offset": 7, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "load", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "symbol_file_path", "type": "str"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "cur_path", "type": "str"}, {"lineNumber": 42, "col_offset": 45, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 43, "col_offset": 7, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "load", "type": "Any"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "param_file_path", "type": "str"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "items", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "arg_params", "type": "Dict[Any, Any]"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "aux_params", "type": "Dict[Any, Any]"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "n", "type": "Any"}, {"lineNumber": 59, "col_offset": 7, "nodeName": "n", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "data_iter", "type": "Any"}, {"lineNumber": 77, "col_offset": 10, "nodeName": "Module", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "bind", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "arg_params", "type": "Any"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "aux_params", "type": "Any"}, {"lineNumber": 83, "col_offset": 10, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "m", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "metrics", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "num", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "num", "type": "Union[int, Any]"}, {"lineNumber": 95, "col_offset": 7, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "m", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "metrics", "type": "List[Any]"}, {"lineNumber": 104, "col_offset": 7, "nodeName": "low_precision", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "convert_model", "type": "Any"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "sym", "type": "Any"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "arg_params", "type": "Dict[Any, Any]"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "aux_params", "type": "Dict[Any, Any]"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 133, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "cur_path", "type": "str"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "symbol_file", "type": "Any"}, {"lineNumber": 134, "col_offset": 7, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 136, "col_offset": 10, "nodeName": "load", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "symbol_file_path", "type": "str"}, {"lineNumber": 137, "col_offset": 10, "nodeName": "Module", "type": "Any"}, {"lineNumber": 138, "col_offset": 7, "nodeName": "data_layer_type", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "bind", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "init_params", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 166, "col_offset": 7, "nodeName": "data_layer_type", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "DataBatch", "type": "Any"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 187, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 220, "col_offset": 7, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "basicConfig", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "setLevel", "type": "Callable[[Union[int, str]], None]"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "INFO", "type": "int"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 232, "col_offset": 17, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 247, "col_offset": 28, "nodeName": "mean_args", "type": "Dict[str, float]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 248, "col_offset": 28, "nodeName": "std_args", "type": "Dict[str, float]"}, {"lineNumber": 250, "col_offset": 17, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 253, "col_offset": 18, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 257, "col_offset": 22, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 259, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 265, "col_offset": 7, "nodeName": "benchmark", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 266, "col_offset": 18, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 290, "col_offset": 11, "nodeName": "low_precision", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "num_inference_images", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "info", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "realpath", "type": "Callable"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "__file__", "type": "str"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "sym", "type": "Any"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "path", "type": "module"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "nd", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "save_dict", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "tp", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "split", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "tp", "type": "Any"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "v", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "tp", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "v", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "create", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "create", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "metrics", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 77, "col_offset": 10, "nodeName": "mod", "type": "Any"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "sym", "type": "Any"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "devs", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "provide_data", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "provide_label", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 83, "col_offset": 10, "nodeName": "time", "type": "module"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "forward", "type": "Any"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "batch", "type": "Any"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "tic", "type": "float"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 58, "nodeName": "speed", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "warn", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "excluded_sym_names", "type": "List[str]"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "amp", "type": "Any"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "low_precision", "type": "Any"}, {"lineNumber": 127, "col_offset": 48, "nodeName": "excluded_sym_names", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "realpath", "type": "Callable"}, {"lineNumber": 132, "col_offset": 48, "nodeName": "__file__", "type": "str"}, {"lineNumber": 133, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 10, "nodeName": "sym", "type": "Any"}, {"lineNumber": 137, "col_offset": 10, "nodeName": "mod", "type": "Any"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "sym", "type": "Any"}, {"lineNumber": 137, "col_offset": 44, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "DataDesc", "type": "Any"}, {"lineNumber": 141, "col_offset": 9, "nodeName": "data_layer_type", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "arg_params", "type": "Any"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "aux_params", "type": "Any"}, {"lineNumber": 153, "col_offset": 33, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 154, "col_offset": 38, "nodeName": "low_precison_convert", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 59, "nodeName": "symbol_file", "type": "Any"}, {"lineNumber": 155, "col_offset": 59, "nodeName": "low_precision", "type": "Any"}, {"lineNumber": 156, "col_offset": 59, "nodeName": "sym", "type": "Any"}, {"lineNumber": 156, "col_offset": 64, "nodeName": "arg_params", "type": "Any"}, {"lineNumber": 157, "col_offset": 59, "nodeName": "aux_params", "type": "Any"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "Module", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "bind", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "arg_params", "type": "Any"}, {"lineNumber": 163, "col_offset": 35, "nodeName": "aux_params", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "io", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "dry_run", "type": "int"}, {"lineNumber": 176, "col_offset": 27, "nodeName": "num_batches", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "i", "type": "int"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "dry_run", "type": "int"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "tic", "type": "float"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "forward", "type": "Any"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "batch", "type": "Any"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "get_outputs", "type": "Any"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "num_batches", "type": "Any"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 184, "col_offset": 49, "nodeName": "tic", "type": "float"}, {"lineNumber": 187, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 189, "col_offset": 44, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 190, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 191, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 192, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 193, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 194, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 195, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 196, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 197, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 198, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 199, "col_offset": 54, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 200, "col_offset": 56, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 203, "col_offset": 53, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 207, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 211, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 214, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 220, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 222, "col_offset": 9, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "logging", "type": "module"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "logging", "type": "module"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 236, "col_offset": 50, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 239, "col_offset": 34, "nodeName": "rgb_mean", "type": "Any"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 240, "col_offset": 22, "nodeName": "i", "type": "Any"}, {"lineNumber": 240, "col_offset": 29, "nodeName": "i", "type": "Any"}, {"lineNumber": 241, "col_offset": 27, "nodeName": "rgb_mean", "type": "List[float]"}, {"lineNumber": 241, "col_offset": 50, "nodeName": "rgb_mean", "type": "List[float]"}, {"lineNumber": 241, "col_offset": 73, "nodeName": "rgb_mean", "type": "List[float]"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 243, "col_offset": 33, "nodeName": "rgb_std", "type": "Any"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "i", "type": "Any"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "i", "type": "Any"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "rgb_std", "type": "List[float]"}, {"lineNumber": 245, "col_offset": 46, "nodeName": "rgb_std", "type": "List[float]"}, {"lineNumber": 245, "col_offset": 67, "nodeName": "rgb_std", "type": "List[float]"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "combine_mean_std", "type": "Dict[str, float]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "combine_mean_std", "type": "Dict[str, float]"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 251, "col_offset": 36, "nodeName": "label_name", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 260, "col_offset": 11, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 265, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 266, "col_offset": 18, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "download_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 267, "col_offset": 70, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "ImageRecordIter", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "sym", "type": "Any"}, {"lineNumber": 288, "col_offset": 13, "nodeName": "arg_params", "type": "Dict[Any, Any]"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "aux_params", "type": "Dict[Any, Any]"}, {"lineNumber": 288, "col_offset": 38, "nodeName": "load_model", "type": "Callable[..., Any]"}, {"lineNumber": 288, "col_offset": 49, "nodeName": "symbol_file", "type": "Any"}, {"lineNumber": 288, "col_offset": 62, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 288, "col_offset": 74, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 290, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "advance_data_iter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 297, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 297, "col_offset": 39, "nodeName": "num_skipped_batches", "type": "Any"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "num_inference_batches", "type": "Any"}, {"lineNumber": 299, "col_offset": 60, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "score", "type": "Callable[..., Any]"}, {"lineNumber": 301, "col_offset": 14, "nodeName": "sym", "type": "Any"}, {"lineNumber": 301, "col_offset": 19, "nodeName": "arg_params", "type": "Any"}, {"lineNumber": 301, "col_offset": 31, "nodeName": "aux_params", "type": "Any"}, {"lineNumber": 301, "col_offset": 43, "nodeName": "data", "type": "Any"}, {"lineNumber": 301, "col_offset": 56, "nodeName": "label_name", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "benchmark_score", "type": "Callable[..., Any]"}, {"lineNumber": 305, "col_offset": 32, "nodeName": "symbol_file", "type": "Any"}, {"lineNumber": 305, "col_offset": 45, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 305, "col_offset": 50, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 306, "col_offset": 32, "nodeName": "num_inference_batches", "type": "Any"}, {"lineNumber": 306, "col_offset": 60, "nodeName": "data_layer_type", "type": "Any"}, {"lineNumber": 306, "col_offset": 77, "nodeName": "low_precision", "type": "Any"}, {"lineNumber": 306, "col_offset": 97, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 307, "col_offset": 53, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 307, "col_offset": 65, "nodeName": "speed", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "logger", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 39, "col_offset": 52, "nodeName": "symbol_file_path", "type": "str"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "mx", "type": "Any"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "os", "type": "module"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 44, "col_offset": 52, "nodeName": "param_file_path", "type": "str"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "arg_params", "type": "Dict[Any, Any]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "aux_params", "type": "Dict[Any, Any]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "next", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "n", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "data_iter", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "has_next_batch", "type": "bool"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 77, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 77, "col_offset": 63, "nodeName": "label_name", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "update_metric", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "m", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "label", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "max_num_examples", "type": "Any"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "num", "type": "Any"}, {"lineNumber": 90, "col_offset": 51, "nodeName": "max_num_examples", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 96, "col_offset": 58, "nodeName": "num", "type": "Union[int, Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "find", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "excluded_sym_names", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 133, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 135, "col_offset": 52, "nodeName": "symbol_file_path", "type": "str"}, {"lineNumber": 136, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 137, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "io", "type": "Any"}, {"lineNumber": 140, "col_offset": 45, "nodeName": "int8", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "DataDesc", "type": "Any"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "DataDesc", "type": "Any"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "dshape", "type": "Any"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "Xavier", "type": "Any"}, {"lineNumber": 153, "col_offset": 33, "nodeName": "mod", "type": "Any"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "mod", "type": "Any"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "sym", "type": "Any"}, {"lineNumber": 158, "col_offset": 48, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "data_shapes", "type": "Any"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "data_shapes", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 178, "col_offset": 18, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "mod", "type": "Any"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "wait_to_read", "type": "Any"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "mx", "type": "Any"}, {"lineNumber": 222, "col_offset": 9, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 225, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 240, "col_offset": 34, "nodeName": "split", "type": "Any"}, {"lineNumber": 244, "col_offset": 33, "nodeName": "split", "type": "Any"}, {"lineNumber": 254, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 254, "col_offset": 28, "nodeName": "i", "type": "Any"}, {"lineNumber": 254, "col_offset": 35, "nodeName": "i", "type": "Any"}, {"lineNumber": 255, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 255, "col_offset": 46, "nodeName": "data_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 260, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "low_precision", "type": "Any"}, {"lineNumber": 262, "col_offset": 13, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 268, "col_offset": 50, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "io", "type": "Any"}, {"lineNumber": 272, "col_offset": 24, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 274, "col_offset": 31, "nodeName": "data_nthreads", "type": "Any"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 276, "col_offset": 23, "nodeName": "data_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 277, "col_offset": 23, "nodeName": "label_name", "type": "Any"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "shuffle_dataset", "type": "Any"}, {"lineNumber": 281, "col_offset": 31, "nodeName": "shuffle_chunk_seed", "type": "Any"}, {"lineNumber": 282, "col_offset": 17, "nodeName": "shuffle_seed", "type": "Any"}, {"lineNumber": 283, "col_offset": 18, "nodeName": "data_layer_type", "type": "Any"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 285, "col_offset": 14, "nodeName": "combine_mean_std", "type": "Dict[str, float]"}, {"lineNumber": 291, "col_offset": 42, "nodeName": "low_precison_convert", "type": "Callable[..., Any]"}, {"lineNumber": 291, "col_offset": 63, "nodeName": "symbol_file", "type": "Any"}, {"lineNumber": 292, "col_offset": 63, "nodeName": "low_precision", "type": "Any"}, {"lineNumber": 293, "col_offset": 63, "nodeName": "sym", "type": "Any"}, {"lineNumber": 293, "col_offset": 68, "nodeName": "arg_params", "type": "Dict[Any, Any]"}, {"lineNumber": 294, "col_offset": 63, "nodeName": "aux_params", "type": "Dict[Any, Any]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 296, "col_offset": 54, "nodeName": "num_skipped_batches", "type": "Any"}, {"lineNumber": 297, "col_offset": 39, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 300, "col_offset": 55, "nodeName": "symbol_file", "type": "Any"}, {"lineNumber": 301, "col_offset": 50, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 302, "col_offset": 29, "nodeName": "num_inference_images", "type": "Any"}, {"lineNumber": 302, "col_offset": 58, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 304, "col_offset": 55, "nodeName": "symbol_file", "type": "Any"}, {"lineNumber": 306, "col_offset": 32, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 306, "col_offset": 77, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 31, "col_offset": 73, "nodeName": "dataset_url", "type": "Any"}, {"lineNumber": 31, "col_offset": 86, "nodeName": "dataset_dir", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "data_iter", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "mod", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "batch", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "time", "type": "module"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "get", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "find", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "excluded_sym_names", "type": "Any"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "mx", "type": "Any"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "data_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 140, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "io", "type": "Any"}, {"lineNumber": 143, "col_offset": 45, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "io", "type": "Any"}, {"lineNumber": 146, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "init", "type": "Any"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "mx", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "dshape", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "_", "type": "Any"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "mod", "type": "Any"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "_", "type": "Any"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "mod", "type": "Any"}, {"lineNumber": 178, "col_offset": 18, "nodeName": "time", "type": "module"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "time", "type": "module"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "mx", "type": "Any"}, {"lineNumber": 225, "col_offset": 68, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 240, "col_offset": 34, "nodeName": "rgb_mean", "type": "Any"}, {"lineNumber": 244, "col_offset": 33, "nodeName": "rgb_std", "type": "Any"}, {"lineNumber": 254, "col_offset": 40, "nodeName": "split", "type": "Any"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 262, "col_offset": 13, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "low_precision", "type": "Any"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "mx", "type": "Any"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 281, "col_offset": 31, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 282, "col_offset": 17, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 292, "col_offset": 63, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 296, "col_offset": 54, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "mx", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "mx", "type": "Any"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "m", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "excluded_sym_names", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "mx", "type": "Any"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "data_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 143, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "mx", "type": "Any"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "data_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 146, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "mx", "type": "Any"}, {"lineNumber": 225, "col_offset": 68, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 254, "col_offset": 40, "nodeName": "image_shape", "type": "Any"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "find", "type": "Any"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "find", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "excluded_sym_names", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 162, "col_offset": 50, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "find", "type": "Any"}, {"lineNumber": 111, "col_offset": 49, "nodeName": "find", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "find", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "excluded_sym_names", "type": "Any"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 111, "col_offset": 49, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "find", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "excluded_sym_names", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "excluded_sym_names", "type": "Any"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "find", "type": "Any"}, {"lineNumber": 117, "col_offset": 52, "nodeName": "find", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "excluded_sym_names", "type": "Any"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 117, "col_offset": 52, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "find", "type": "Any"}, {"lineNumber": 119, "col_offset": 52, "nodeName": "find", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "find", "type": "Any"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 119, "col_offset": 52, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "model_name", "type": "Any"}]