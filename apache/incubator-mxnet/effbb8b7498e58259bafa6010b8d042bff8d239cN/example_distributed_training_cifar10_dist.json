[{"lineNumber": 54, "col_offset": 0, "nodeName": "transform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "evaluate_accuracy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 150, "col_offset": 0, "nodeName": "forward_backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 163, "col_offset": 0, "nodeName": "train_batch", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "store", "type": "Any"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "num_outputs", "type": "int"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "batch_size_per_gpu", "type": "int"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "epochs", "type": "int"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "gpus_per_machine", "type": "int"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "ctx", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "net", "type": "Any"}, {"lineNumber": 103, "col_offset": 0, "nodeName": "softmax_cross_entropy", "type": "Any"}, {"lineNumber": 106, "col_offset": 0, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 146, "col_offset": 0, "nodeName": "loss", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "epoch", "type": "int"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "create", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "batch_size_per_gpu", "type": "int"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "gpus_per_machine", "type": "int"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "DataLoader", "type": "Any"}, {"lineNumber": 89, "col_offset": 95, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "DataLoader", "type": "Any"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 97, "col_offset": 6, "nodeName": "resnet18_v1", "type": "Any"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "SoftmaxCrossEntropyLoss", "type": "Any"}, {"lineNumber": 106, "col_offset": 10, "nodeName": "Trainer", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "acc", "type": "Any"}, {"lineNumber": 146, "col_offset": 7, "nodeName": "SoftmaxCrossEntropyLoss", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "l", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "label", "type": "Any"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "label", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "this_batch_size", "type": "Any"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "epochs", "type": "int"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "batch_num", "type": "int"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "test_accuracy", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "kv", "type": "Any"}, {"lineNumber": 48, "col_offset": 7, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "i", "type": "int"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "part_len", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "end", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "part_len", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "data", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "transform", "type": "Any"}, {"lineNumber": 89, "col_offset": 83, "nodeName": "transform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "transform", "type": "Any"}, {"lineNumber": 93, "col_offset": 83, "nodeName": "transform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 6, "nodeName": "vision", "type": "Any"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "Xavier", "type": "Any"}, {"lineNumber": 100, "col_offset": 54, "nodeName": "ctx", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "loss", "type": "Any"}, {"lineNumber": 106, "col_offset": 10, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 106, "col_offset": 87, "nodeName": "store", "type": "Any"}, {"lineNumber": 124, "col_offset": 10, "nodeName": "Accuracy", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 127, "col_offset": 38, "nodeName": "data_iterator", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "label", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 146, "col_offset": 7, "nodeName": "loss", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "batch_list", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "split_and_load", "type": "Any"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 179, "col_offset": 44, "nodeName": "context", "type": "List[Any]"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "batch_list", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "split_and_load", "type": "Any"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "label", "type": "Any"}, {"lineNumber": 183, "col_offset": 46, "nodeName": "context", "type": "List[Any]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "forward_backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 186, "col_offset": 21, "nodeName": "network", "type": "Any"}, {"lineNumber": 186, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 186, "col_offset": 36, "nodeName": "label", "type": "Any"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "step", "type": "Any"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "this_batch_size", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "batch_num", "type": "int"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "evaluate_accuracy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 206, "col_offset": 38, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 206, "col_offset": 49, "nodeName": "net", "type": "Any"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 48, "col_offset": 7, "nodeName": "mx", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "gpus_per_machine", "type": "int"}, {"lineNumber": 55, "col_offset": 65, "nodeName": "astype", "type": "Any"}, {"lineNumber": 55, "col_offset": 78, "nodeName": "float32", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "SplitSampler"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "length", "type": "int"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "num_parts", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "SplitSampler"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "part_len", "type": "Any"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "part_index", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "SplitSampler"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "start", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "part_len", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "self", "type": "SplitSampler"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "SplitSampler", "type": "Type[SplitSampler]"}, {"lineNumber": 90, "col_offset": 63, "nodeName": "num_workers", "type": "Any"}, {"lineNumber": 90, "col_offset": 82, "nodeName": "rank", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "init", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "net", "type": "Any"}, {"lineNumber": 124, "col_offset": 10, "nodeName": "metric", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "label", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "as_in_context", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "as_in_context", "type": "Any"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "network", "type": "Any"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "output", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 146, "col_offset": 7, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 153, "col_offset": 9, "nodeName": "record", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "utils", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "utils", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "gluon_trainer", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "train_batch", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "batch", "type": "Any"}, {"lineNumber": 201, "col_offset": 27, "nodeName": "ctx", "type": "List[Any]"}, {"lineNumber": 201, "col_offset": 32, "nodeName": "net", "type": "Any"}, {"lineNumber": 201, "col_offset": 37, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 55, "col_offset": 65, "nodeName": "label", "type": "Any"}, {"lineNumber": 55, "col_offset": 78, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "self", "type": "SplitSampler"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "self", "type": "SplitSampler"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "self", "type": "SplitSampler"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "start", "type": "Any"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "end", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "CIFAR10", "type": "Any"}, {"lineNumber": 90, "col_offset": 63, "nodeName": "store", "type": "Any"}, {"lineNumber": 90, "col_offset": 82, "nodeName": "store", "type": "Any"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "CIFAR10", "type": "Any"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "net", "type": "Any"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "mx", "type": "Any"}, {"lineNumber": 124, "col_offset": 10, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "ctx", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "label", "type": "Any"}, {"lineNumber": 131, "col_offset": 36, "nodeName": "ctx", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "nd", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "acc", "type": "Any"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 139, "col_offset": 45, "nodeName": "label", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "acc", "type": "Any"}, {"lineNumber": 153, "col_offset": 9, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "loss", "type": "Any"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "Y", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "l", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "batch_list", "type": "Any"}, {"lineNumber": 207, "col_offset": 37, "nodeName": "epoch", "type": "int"}, {"lineNumber": 207, "col_offset": 44, "nodeName": "test_accuracy", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "sys", "type": "module"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "nd", "type": "Any"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "astype", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "self", "type": "SplitSampler"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "self", "type": "SplitSampler"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "vision", "type": "Any"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "vision", "type": "Any"}, {"lineNumber": 124, "col_offset": 10, "nodeName": "mx", "type": "Any"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "network", "type": "Any"}, {"lineNumber": 155, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "X", "type": "Any"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "Y", "type": "Any"}, {"lineNumber": 155, "col_offset": 50, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 155, "col_offset": 54, "nodeName": "data", "type": "Any"}, {"lineNumber": 155, "col_offset": 60, "nodeName": "label", "type": "Any"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "gluon", "type": "Any"}]