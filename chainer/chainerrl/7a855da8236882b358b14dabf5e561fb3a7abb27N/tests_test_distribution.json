[{"lineNumber": 24, "col_offset": 30, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 234, "col_offset": 46, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "install_aliases", "type": "Any"}, {"lineNumber": 24, "col_offset": 30, "nodeName": "unittest", "type": "module"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 234, "col_offset": 46, "nodeName": "unittest", "type": "module"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "standard_library", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "wrap_by_variable", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "batch_ps", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "a", "type": "int"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "a", "type": "int"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "kl", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "another", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "values", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "wrap_by_variable", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "batch_ps", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "a", "type": "int"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "a", "type": "int"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "kl", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "another", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "sample_prob", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "sample_log_prob", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "kl", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "kl", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "another", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "distrib", "type": "chainerrl.distribution.ContinuousDeterministicDistribution"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "another", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "rand", "type": "Any"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 27, "col_offset": 54, "nodeName": "n", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "distrib", "type": "chainerrl.distribution.SoftmaxDistribution"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "b", "type": "int"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "batch_log_p", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "kl", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "another", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "logits", "type": "Any"}, {"lineNumber": 80, "col_offset": 46, "nodeName": "logits", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "rand", "type": "Any"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 91, "col_offset": 54, "nodeName": "n", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "distrib", "type": "chainerrl.distribution.MellowmaxDistribution"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "b", "type": "int"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "batch_log_p", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "kl", "type": "Any"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 143, "col_offset": 39, "nodeName": "another", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 144, "col_offset": 46, "nodeName": "values", "type": "Any"}, {"lineNumber": 155, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 157, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "GaussianDistribution", "type": "Type[chainerrl.distribution.GaussianDistribution]"}, {"lineNumber": 158, "col_offset": 57, "nodeName": "mean", "type": "Any"}, {"lineNumber": 158, "col_offset": 68, "nodeName": "var", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 169, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 169, "col_offset": 55, "nodeName": "mean", "type": "Any"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "prob", "type": "Any"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "sample", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 185, "col_offset": 26, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 185, "col_offset": 48, "nodeName": "sample", "type": "Any"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 186, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "kl", "type": "Any"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 213, "col_offset": 19, "nodeName": "GaussianDistribution", "type": "Type[chainerrl.distribution.GaussianDistribution]"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "kl", "type": "Any"}, {"lineNumber": 216, "col_offset": 29, "nodeName": "standard", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "gaussian_kl_divergence", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "mean", "type": "Any"}, {"lineNumber": 218, "col_offset": 31, "nodeName": "ln_var", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 220, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 224, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 225, "col_offset": 39, "nodeName": "another", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 226, "col_offset": 44, "nodeName": "mean", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "var", "type": "Any"}, {"lineNumber": 227, "col_offset": 43, "nodeName": "var", "type": "Any"}, {"lineNumber": 238, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 239, "col_offset": 23, "nodeName": "ContinuousDeterministicDistribution", "type": "Type[chainerrl.distribution.ContinuousDeterministicDistribution]"}, {"lineNumber": 239, "col_offset": 72, "nodeName": "x", "type": "Any"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 245, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 245, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 251, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 251, "col_offset": 55, "nodeName": "x", "type": "Any"}, {"lineNumber": 254, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 255, "col_offset": 39, "nodeName": "another", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 256, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "SoftmaxDistribution", "type": "Type[chainerrl.distribution.SoftmaxDistribution]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "SoftmaxDistribution", "type": "Type[chainerrl.distribution.SoftmaxDistribution]"}, {"lineNumber": 32, "col_offset": 60, "nodeName": "logits", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 37, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 40, "col_offset": 44, "nodeName": "n", "type": "Any"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "prob", "type": "Any"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "batch_ps", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 54, "nodeName": "ones", "type": "Any"}, {"lineNumber": 53, "col_offset": 62, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "prob", "type": "Any"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "data", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 80, "col_offset": 46, "nodeName": "another", "type": "Any"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "MellowmaxDistribution", "type": "Type[chainerrl.distribution.MellowmaxDistribution]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "MellowmaxDistribution", "type": "Type[chainerrl.distribution.MellowmaxDistribution]"}, {"lineNumber": 96, "col_offset": 62, "nodeName": "values", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 104, "col_offset": 44, "nodeName": "n", "type": "Any"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "prob", "type": "Any"}, {"lineNumber": 110, "col_offset": 40, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 117, "col_offset": 39, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 117, "col_offset": 43, "nodeName": "batch_ps", "type": "List[Any]"}, {"lineNumber": 117, "col_offset": 54, "nodeName": "ones", "type": "Any"}, {"lineNumber": 117, "col_offset": 62, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "prob", "type": "Any"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 123, "col_offset": 48, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 125, "col_offset": 43, "nodeName": "data", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 144, "col_offset": 46, "nodeName": "another", "type": "Any"}, {"lineNumber": 155, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "distribution", "type": "module"}, {"lineNumber": 158, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 68, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 162, "col_offset": 43, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 163, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 163, "col_offset": 57, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 167, "col_offset": 35, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 167, "col_offset": 50, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 168, "col_offset": 47, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 168, "col_offset": 64, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 169, "col_offset": 35, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 169, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "desired_pdf", "type": "Any"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 185, "col_offset": 26, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 186, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 203, "col_offset": 33, "nodeName": "desired_entropy", "type": "Any"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 213, "col_offset": 19, "nodeName": "distribution", "type": "module"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "functions", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 218, "col_offset": 31, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 219, "col_offset": 35, "nodeName": "sum", "type": "Any"}, {"lineNumber": 220, "col_offset": 35, "nodeName": "chainer_kl", "type": "Any"}, {"lineNumber": 224, "col_offset": 18, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 226, "col_offset": 44, "nodeName": "another", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 227, "col_offset": 43, "nodeName": "another", "type": "Any"}, {"lineNumber": 238, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 239, "col_offset": 23, "nodeName": "distribution", "type": "module"}, {"lineNumber": 239, "col_offset": 72, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 243, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 243, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 243, "col_offset": 43, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 244, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 244, "col_offset": 57, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 245, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 245, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 249, "col_offset": 35, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 249, "col_offset": 50, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 250, "col_offset": 47, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 250, "col_offset": 64, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 251, "col_offset": 35, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 251, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 254, "col_offset": 18, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 256, "col_offset": 41, "nodeName": "another", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "distribution", "type": "module"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "logits", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "distribution", "type": "module"}, {"lineNumber": 32, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 37, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 40, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 45, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 50, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "p", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "batch_ps", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 57, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 60, "col_offset": 43, "nodeName": "log", "type": "Any"}, {"lineNumber": 60, "col_offset": 50, "nodeName": "data", "type": "Any"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "batch_log_p", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "distribution", "type": "module"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "values", "type": "Any"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "distribution", "type": "module"}, {"lineNumber": 96, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 104, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 39, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 109, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 111, "col_offset": 48, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 114, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "p", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "batch_ps", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 121, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 124, "col_offset": 43, "nodeName": "log", "type": "Any"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "data", "type": "Any"}, {"lineNumber": 125, "col_offset": 43, "nodeName": "batch_log_p", "type": "Any"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "rand", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 43, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 163, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 50, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 168, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "identity", "type": "Any"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 178, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 185, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "identity", "type": "Any"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 190, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 193, "col_offset": 23, "nodeName": "desired_pdf", "type": "Any"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "identity", "type": "Any"}, {"lineNumber": 198, "col_offset": 31, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 218, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 219, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 224, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 238, "col_offset": 29, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 243, "col_offset": 43, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 244, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 50, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 250, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 250, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 254, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "sample", "type": "Any"}, {"lineNumber": 39, "col_offset": 48, "nodeName": "b", "type": "int"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "sample", "type": "Any"}, {"lineNumber": 40, "col_offset": 40, "nodeName": "b", "type": "int"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "a", "type": "int"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "b", "type": "int"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "a", "type": "int"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 50, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "kl", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "b", "type": "int"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 36, "nodeName": "sample", "type": "Any"}, {"lineNumber": 103, "col_offset": 48, "nodeName": "b", "type": "int"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "sample", "type": "Any"}, {"lineNumber": 104, "col_offset": 40, "nodeName": "b", "type": "int"}, {"lineNumber": 109, "col_offset": 34, "nodeName": "a", "type": "int"}, {"lineNumber": 109, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 48, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "b", "type": "int"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "a", "type": "int"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "kl", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "b", "type": "int"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 28, "nodeName": "b", "type": "int"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "multivariate_normal", "type": "Any"}, {"lineNumber": 178, "col_offset": 30, "nodeName": "cov", "type": "Any"}, {"lineNumber": 178, "col_offset": 39, "nodeName": "sample", "type": "Any"}, {"lineNumber": 178, "col_offset": 51, "nodeName": "b", "type": "int"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "sample_prob", "type": "Any"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "b", "type": "int"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 187, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 188, "col_offset": 28, "nodeName": "b", "type": "int"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "multivariate_normal", "type": "Any"}, {"lineNumber": 190, "col_offset": 30, "nodeName": "cov", "type": "Any"}, {"lineNumber": 190, "col_offset": 39, "nodeName": "sample", "type": "Any"}, {"lineNumber": 190, "col_offset": 51, "nodeName": "b", "type": "int"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "sample_log_prob", "type": "Any"}, {"lineNumber": 192, "col_offset": 37, "nodeName": "b", "type": "int"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 198, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "b", "type": "int"}, {"lineNumber": 200, "col_offset": 30, "nodeName": "multivariate_normal", "type": "Any"}, {"lineNumber": 201, "col_offset": 30, "nodeName": "cov", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "b", "type": "int"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "kl", "type": "Any"}, {"lineNumber": 209, "col_offset": 24, "nodeName": "b", "type": "int"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 209, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 214, "col_offset": 44, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 214, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 215, "col_offset": 42, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 215, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 219, "col_offset": 35, "nodeName": "kl", "type": "Any"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 42, "nodeName": "kl", "type": "Any"}, {"lineNumber": 75, "col_offset": 50, "nodeName": "b", "type": "int"}, {"lineNumber": 139, "col_offset": 42, "nodeName": "kl", "type": "Any"}, {"lineNumber": 139, "col_offset": 50, "nodeName": "b", "type": "int"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "stats", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 187, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "stats", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 198, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 200, "col_offset": 30, "nodeName": "stats", "type": "Any"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 209, "col_offset": 42, "nodeName": "kl", "type": "Any"}, {"lineNumber": 209, "col_offset": 50, "nodeName": "b", "type": "int"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 214, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 214, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "b", "type": "int"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "b", "type": "int"}, {"lineNumber": 200, "col_offset": 30, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 201, "col_offset": 26, "nodeName": "b", "type": "int"}]