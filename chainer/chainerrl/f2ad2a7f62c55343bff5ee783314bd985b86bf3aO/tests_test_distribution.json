[{"lineNumber": 24, "col_offset": 30, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "install_aliases", "type": "Any"}, {"lineNumber": 24, "col_offset": 30, "nodeName": "unittest", "type": "module"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "unittest", "type": "module"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "standard_library", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "distrib", "type": "chainerrl.distribution.SoftmaxDistribution"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "batch_ps", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "a", "type": "int"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "a", "type": "int"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "sample_prob", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "sample_log_prob", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "distrib", "type": "chainerrl.distribution.ContinuousDeterministicDistribution"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "rand", "type": "Any"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 27, "col_offset": 54, "nodeName": "n", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "SoftmaxDistribution", "type": "Type[chainerrl.distribution.SoftmaxDistribution]"}, {"lineNumber": 28, "col_offset": 56, "nodeName": "logits", "type": "Any"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "b", "type": "int"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "batch_log_p", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 78, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 80, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "GaussianDistribution", "type": "Type[chainerrl.distribution.GaussianDistribution]"}, {"lineNumber": 81, "col_offset": 57, "nodeName": "mean", "type": "Any"}, {"lineNumber": 81, "col_offset": 68, "nodeName": "var", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 92, "col_offset": 55, "nodeName": "mean", "type": "Any"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "prob", "type": "Any"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "sample", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 108, "col_offset": 48, "nodeName": "sample", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 137, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "ContinuousDeterministicDistribution", "type": "Type[chainerrl.distribution.ContinuousDeterministicDistribution]"}, {"lineNumber": 138, "col_offset": 72, "nodeName": "x", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 144, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 150, "col_offset": 55, "nodeName": "x", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "distribution", "type": "module"}, {"lineNumber": 28, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "n", "type": "Any"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "prob", "type": "Any"}, {"lineNumber": 42, "col_offset": 40, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 49, "col_offset": 43, "nodeName": "batch_ps", "type": "List[Any]"}, {"lineNumber": 49, "col_offset": 54, "nodeName": "ones", "type": "Any"}, {"lineNumber": 49, "col_offset": 62, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "prob", "type": "Any"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 57, "col_offset": 43, "nodeName": "data", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "distribution", "type": "module"}, {"lineNumber": 81, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 68, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 86, "col_offset": 57, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 90, "col_offset": 50, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 91, "col_offset": 47, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 91, "col_offset": 64, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 92, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "desired_pdf", "type": "Any"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "desired_entropy", "type": "Any"}, {"lineNumber": 137, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "distribution", "type": "module"}, {"lineNumber": 138, "col_offset": 72, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 142, "col_offset": 43, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 143, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 143, "col_offset": 57, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 144, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 148, "col_offset": 35, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 148, "col_offset": 50, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 149, "col_offset": 47, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 149, "col_offset": 64, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 150, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "sample", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "sample", "type": "Any"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 41, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 43, "col_offset": 39, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 43, "col_offset": 48, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "p", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "batch_ps", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 53, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "log", "type": "Any"}, {"lineNumber": 56, "col_offset": 50, "nodeName": "data", "type": "Any"}, {"lineNumber": 57, "col_offset": 43, "nodeName": "batch_log_p", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "rand", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 50, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 91, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "identity", "type": "Any"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "identity", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "desired_pdf", "type": "Any"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "identity", "type": "Any"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 43, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 143, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 50, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 149, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 43, "nodeName": "b", "type": "int"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "b", "type": "int"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "a", "type": "int"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 48, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "b", "type": "int"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 34, "nodeName": "a", "type": "int"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 50, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "b", "type": "int"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "multivariate_normal", "type": "Any"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "cov", "type": "Any"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "sample", "type": "Any"}, {"lineNumber": 101, "col_offset": 51, "nodeName": "b", "type": "int"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "sample_prob", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "b", "type": "int"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "b", "type": "int"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "multivariate_normal", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "cov", "type": "Any"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "sample", "type": "Any"}, {"lineNumber": 113, "col_offset": 51, "nodeName": "b", "type": "int"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "sample_log_prob", "type": "Any"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "b", "type": "int"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "b", "type": "int"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "multivariate_normal", "type": "Any"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "cov", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "b", "type": "int"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "stats", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "stats", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 121, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "stats", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "b", "type": "int"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "b", "type": "int"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "b", "type": "int"}]