[{"lineNumber": 11, "col_offset": 0, "nodeName": "names_of_links", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "test_chainlist", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "test_chain", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "test_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "test_sequential", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "ch", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 12, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 17, "col_offset": 13, "nodeName": "ChainList", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "to_factorized_noisy", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "ch", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "Chain", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "l1", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "l2", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "l3", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "to_factorized_noisy", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "ch", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "Sequence", "type": "Type[chainerrl.links.sequence.Sequence]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "relu", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "to_factorized_noisy", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "model", "type": "chainerrl.links.sequence.Sequence"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "relu", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "cleargrads", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "model", "type": "chainerrl.links.sequence.Sequence"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "params", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 88, "col_offset": 40, "nodeName": "relu", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "to_factorized_noisy", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "model", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "relu", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "params", "type": "Any"}, {"lineNumber": 17, "col_offset": 13, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "PReLU", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestToFactorizedNoisy"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "names_of_links", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 27, "nodeName": "ch", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestToFactorizedNoisy"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "names_of_links", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "ch", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "init_scope", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "ch", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "ch", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "ch", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "PReLU", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestToFactorizedNoisy"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "names_of_links", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "ch", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestToFactorizedNoisy"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "names_of_links", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "ch", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "links", "type": "module"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "functions", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestToFactorizedNoisy"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "names_of_links", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "model", "type": "chainerrl.links.sequence.Sequence"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestToFactorizedNoisy"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "layers", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "functions", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestToFactorizedNoisy"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "names_of_links", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "model", "type": "chainerrl.links.sequence.Sequence"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestToFactorizedNoisy"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "layers", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "functions", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "model", "type": "chainerrl.links.sequence.Sequence"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "model", "type": "chainerrl.links.sequence.Sequence"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "grad", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "functions", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "names_of_links", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "model", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "_layers", "type": "Any"}, {"lineNumber": 88, "col_offset": 40, "nodeName": "functions", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "names_of_links", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "model", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "_layers", "type": "Any"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "functions", "type": "Any"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 100, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "grad", "type": "Any"}, {"lineNumber": 12, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 12, "col_offset": 31, "nodeName": "_", "type": "Any"}, {"lineNumber": 12, "col_offset": 36, "nodeName": "namedlinks", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "links", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "links", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "links", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "ch", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "links", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "links", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "links", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "chainerrl", "type": "module"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "links", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "links", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "model", "type": "chainerrl.links.sequence.Sequence"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "model", "type": "chainerrl.links.sequence.Sequence"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "numpy", "type": "module"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "sum", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "self", "type": "TestToFactorizedNoisy"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "p", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "links", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "links", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 88, "col_offset": 40, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "numpy", "type": "module"}, {"lineNumber": 100, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "numpy", "type": "module"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "sum", "type": "Any"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "p", "type": "Any"}, {"lineNumber": 12, "col_offset": 36, "nodeName": "link", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "functions", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "functions", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "chainer", "type": "Any"}]