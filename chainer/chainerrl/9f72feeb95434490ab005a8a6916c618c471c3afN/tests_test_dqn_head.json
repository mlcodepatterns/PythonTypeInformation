[{"lineNumber": 22, "col_offset": 0, "nodeName": "generate_different_two_states", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "_TestDQNHead", "type": "Type[_TestDQNHead]"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "_TestDQNHead", "type": "Type[_TestDQNHead]"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "install_aliases", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "sample_state", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "pos", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "standard_library", "type": "Any"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 27, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "copy", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "copy", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "randint", "type": "Any"}, {"lineNumber": 30, "col_offset": 28, "nodeName": "size", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "head", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "va", "type": "float"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "vb", "type": "float"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "n_actions", "type": "int"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "head", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "action", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "qa", "type": "float"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "qb", "type": "float"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "n_actions", "type": "int"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "head", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "pi", "type": "chainerrl.policies.softmax_policy.FCSoftmaxPolicy"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "pa", "type": "float"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "pb", "type": "float"}, {"lineNumber": 27, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "sample_state", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "sample_state", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 30, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "pos", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "pos", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "a", "type": "Any"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 34, "col_offset": 49, "nodeName": "b", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "create_head", "type": "Any"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "FCTailVFunction", "type": "Type[chainerrl.links.fc_tail_v_function.FCTailVFunction]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "head", "type": "Any"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "n_output_channels", "type": "Any"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "create_optimizer", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "setup", "type": "Any"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "v_func", "type": "chainerrl.links.fc_tail_v_function.FCTailVFunction"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "generate_different_two_states", "type": "Callable[[], Any]"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "va", "type": "float"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "vb", "type": "float"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "create_head", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "FCTailQFunction", "type": "Type[chainerrl.links.fc_tail_q_function.FCTailQFunction]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "head", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "n_output_channels", "type": "Any"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "create_optimizer", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "setup", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "q_func", "type": "chainerrl.links.fc_tail_q_function.FCTailQFunction"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "generate_different_two_states", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 82, "col_offset": 64, "nodeName": "int32", "type": "Any"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "qa", "type": "float"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "qb", "type": "float"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "create_head", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "FCSoftmaxPolicy", "type": "Type[chainerrl.policies.softmax_policy.FCSoftmaxPolicy]"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "n_output_channels", "type": "Any"}, {"lineNumber": 105, "col_offset": 62, "nodeName": "n_actions", "type": "int"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "create_optimizer", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "setup", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "generate_different_two_states", "type": "Callable[[], Any]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "pout", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "loss_a", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "loss_b", "type": "Any"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "pa", "type": "float"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "pb", "type": "float"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "NatureDQNHead", "type": "Type[chainerrl.links.dqn_head.NatureDQNHead]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "NIPSDQNHead", "type": "Type[chainerrl.links.dqn_head.NIPSDQNHead]"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "rand", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "fc_tail_v_function", "type": "module"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "head", "type": "Any"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "zerograds", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "zerograds", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "va", "type": "float"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "vb", "type": "float"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "fc_tail_q_function", "type": "module"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "head", "type": "Any"}, {"lineNumber": 78, "col_offset": 52, "nodeName": "n_actions", "type": "int"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 82, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "zerograds", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "zerograds", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "qa", "type": "float"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "qb", "type": "float"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "policies", "type": "module"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "head", "type": "Any"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "ChainList", "type": "Any"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "head", "type": "Any"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "pi", "type": "chainerrl.policies.softmax_policy.FCSoftmaxPolicy"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "pi", "type": "chainerrl.policies.softmax_policy.FCSoftmaxPolicy"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "pout_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "s", "type": "Any"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "softmax_cross_entropy", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "logits", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "compute_loss", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 34, "nodeName": "a", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "compute_loss", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "b", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "zerograds", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "zerograds", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "dqn_head", "type": "module"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "dqn_head", "type": "module"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "v_func", "type": "chainerrl.links.fc_tail_v_function.FCTailVFunction"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "v_func", "type": "chainerrl.links.fc_tail_v_function.FCTailVFunction"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "v_func", "type": "chainerrl.links.fc_tail_v_function.FCTailVFunction"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "a", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "v_func", "type": "chainerrl.links.fc_tail_v_function.FCTailVFunction"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "randint", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "n_actions", "type": "int"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "q_func", "type": "chainerrl.links.fc_tail_q_function.FCTailQFunction"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "q_func", "type": "chainerrl.links.fc_tail_q_function.FCTailQFunction"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "evaluate_actions", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 46, "nodeName": "action", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "evaluate_actions", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 46, "nodeName": "action", "type": "Any"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "head", "type": "Any"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "s", "type": "Any"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "F", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "pout", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "loss_a", "type": "Any"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "loss_b", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "head", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "pi", "type": "chainerrl.policies.softmax_policy.FCSoftmaxPolicy"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "loss_a", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "loss_b", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "all_prob", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "all_prob", "type": "Any"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "v_func", "type": "chainerrl.links.fc_tail_v_function.FCTailVFunction"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "a", "type": "Any"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "v_func", "type": "chainerrl.links.fc_tail_v_function.FCTailVFunction"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "b", "type": "Any"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "evaluate_actions", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "action", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "evaluate_actions", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 47, "nodeName": "action", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "q_func", "type": "chainerrl.links.fc_tail_q_function.FCTailQFunction"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "a", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "q_func", "type": "chainerrl.links.fc_tail_q_function.FCTailQFunction"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 45, "nodeName": "gt_label", "type": "int"}, {"lineNumber": 117, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "pi", "type": "chainerrl.policies.softmax_policy.FCSoftmaxPolicy"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "pi", "type": "chainerrl.policies.softmax_policy.FCSoftmaxPolicy"}, {"lineNumber": 117, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "head", "type": "Any"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "a", "type": "Any"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "head", "type": "Any"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "b", "type": "Any"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "q_func", "type": "chainerrl.links.fc_tail_q_function.FCTailQFunction"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "a", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "q_func", "type": "chainerrl.links.fc_tail_q_function.FCTailQFunction"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "b", "type": "Any"}]