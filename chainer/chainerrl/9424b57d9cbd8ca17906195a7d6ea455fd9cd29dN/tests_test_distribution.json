[{"lineNumber": 289, "col_offset": 0, "nodeName": "_assert_array_in_range", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "test_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "test_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "test_prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "test_log_prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "test_sample_with_log_prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "test_entropy", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "test_most_probable", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "test_self_kl", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "test_copy", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "test_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "test_prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "test_log_prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "test_sample_with_log_prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "test_entropy", "type": "Callable[[Any], Any]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "test_most_probable", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "test_self_kl", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "test_copy", "type": "Callable[[Any], Any]"}, {"lineNumber": 203, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "test_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "test_most_probable", "type": "Callable[[Any], Any]"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "test_prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "test_log_prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "test_sample_with_log_prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "test_entropy", "type": "Callable[[Any], Any]"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "test_self_kl", "type": "Callable[[Any], Any]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "test_kl", "type": "Callable[[Any], Any]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "test_copy", "type": "Callable[[Any], Any]"}, {"lineNumber": 300, "col_offset": 39, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "test_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "test_most_probable", "type": "Callable[[Any], Any]"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "test_sample_with_log_prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "test_entropy", "type": "Callable[[Any], Any]"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "test_kl", "type": "Callable[[Any], Any]"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "test_copy", "type": "Callable[[Any], Any]"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "test_repr", "type": "Callable[[Any], Any]"}, {"lineNumber": 356, "col_offset": 46, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "test_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "test_most_probable", "type": "Callable[[Any], Any]"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "test_copy", "type": "Callable[[Any], Any]"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "install_aliases", "type": "Any"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "unittest", "type": "module"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 203, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 300, "col_offset": 39, "nodeName": "unittest", "type": "module"}, {"lineNumber": 356, "col_offset": 46, "nodeName": "unittest", "type": "module"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "standard_library", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "counter", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "wrap_by_variable", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "batch_ps", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "a", "type": "int"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "a", "type": "int"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "kl", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "another", "type": "chainerrl.distribution.SoftmaxDistribution"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "values", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "wrap_by_variable", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "batch_ps", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "a", "type": "int"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "a", "type": "int"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "kl", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "another", "type": "chainerrl.distribution.MellowmaxDistribution"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "sample_prob", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "sample_log_prob", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 255, "col_offset": 18, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "kl", "type": "Any"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "kl", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "another", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 290, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 290, "col_offset": 22, "nodeName": "array", "type": "Any"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "low", "type": "Any"}, {"lineNumber": 291, "col_offset": 17, "nodeName": "high", "type": "Any"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "assert_array_less", "type": "Any"}, {"lineNumber": 292, "col_offset": 59, "nodeName": "array", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "assert_array_less", "type": "Any"}, {"lineNumber": 293, "col_offset": 33, "nodeName": "array", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 317, "col_offset": 24, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "another", "type": "chainerrl.distribution.SquashedGaussianDistribution"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "distrib", "type": "chainerrl.distribution.ContinuousDeterministicDistribution"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "another", "type": "chainerrl.distribution.ContinuousDeterministicDistribution"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "xp", "type": "module"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "_test", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "_test", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "rand", "type": "Any"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 62, "col_offset": 54, "nodeName": "n", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "sample", "type": "Callable[[], Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "b", "type": "int"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "batch_log_p", "type": "Any"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "log_p", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "distrib", "type": "chainerrl.distribution.SoftmaxDistribution"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "distrib", "type": "chainerrl.distribution.SoftmaxDistribution"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "kl", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "distrib", "type": "chainerrl.distribution.SoftmaxDistribution"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "distrib", "type": "chainerrl.distribution.SoftmaxDistribution"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "another", "type": "chainerrl.distribution.SoftmaxDistribution"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "logits", "type": "Any"}, {"lineNumber": 126, "col_offset": 46, "nodeName": "logits", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "rand", "type": "Any"}, {"lineNumber": 137, "col_offset": 37, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 137, "col_offset": 54, "nodeName": "n", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "distrib", "type": "chainerrl.distribution.MellowmaxDistribution"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "sample", "type": "Callable[[], Any]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "b", "type": "int"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "batch_log_p", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "log_p", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "distrib", "type": "chainerrl.distribution.MellowmaxDistribution"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "distrib", "type": "chainerrl.distribution.MellowmaxDistribution"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "kl", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "distrib", "type": "chainerrl.distribution.MellowmaxDistribution"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "distrib", "type": "chainerrl.distribution.MellowmaxDistribution"}, {"lineNumber": 195, "col_offset": 39, "nodeName": "another", "type": "chainerrl.distribution.MellowmaxDistribution"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 196, "col_offset": 46, "nodeName": "values", "type": "Any"}, {"lineNumber": 207, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "float32", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "GaussianDistribution", "type": "Type[chainerrl.distribution.GaussianDistribution]"}, {"lineNumber": 211, "col_offset": 57, "nodeName": "mean", "type": "Any"}, {"lineNumber": 211, "col_offset": 68, "nodeName": "var", "type": "Any"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "sample", "type": "Callable[[], Any]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 222, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 222, "col_offset": 56, "nodeName": "mean", "type": "Any"}, {"lineNumber": 225, "col_offset": 17, "nodeName": "sample", "type": "Callable[[], Any]"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 226, "col_offset": 40, "nodeName": "sample", "type": "Any"}, {"lineNumber": 227, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 227, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "sample", "type": "Callable[[], Any]"}, {"lineNumber": 238, "col_offset": 26, "nodeName": "log_prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 238, "col_offset": 48, "nodeName": "sample", "type": "Any"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 239, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 249, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "log_p", "type": "Any"}, {"lineNumber": 255, "col_offset": 18, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 256, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 256, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 265, "col_offset": 13, "nodeName": "kl", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 266, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 266, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "GaussianDistribution", "type": "Type[chainerrl.distribution.GaussianDistribution]"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "kl", "type": "Callable[[Any], Any]"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "standard", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 276, "col_offset": 21, "nodeName": "gaussian_kl_divergence", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "mean", "type": "Any"}, {"lineNumber": 277, "col_offset": 31, "nodeName": "ln_var", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 279, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 283, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 284, "col_offset": 39, "nodeName": "another", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 285, "col_offset": 44, "nodeName": "mean", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "var", "type": "Any"}, {"lineNumber": 286, "col_offset": 43, "nodeName": "var", "type": "Any"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 292, "col_offset": 33, "nodeName": "full_like", "type": "Any"}, {"lineNumber": 292, "col_offset": 46, "nodeName": "array", "type": "Any"}, {"lineNumber": 292, "col_offset": 53, "nodeName": "low", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 293, "col_offset": 40, "nodeName": "full_like", "type": "Any"}, {"lineNumber": 293, "col_offset": 53, "nodeName": "array", "type": "Any"}, {"lineNumber": 293, "col_offset": 60, "nodeName": "high", "type": "Any"}, {"lineNumber": 304, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 306, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "SquashedGaussianDistribution", "type": "Type[chainerrl.distribution.SquashedGaussianDistribution]"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "mean", "type": "Any"}, {"lineNumber": 308, "col_offset": 23, "nodeName": "var", "type": "Any"}, {"lineNumber": 311, "col_offset": 17, "nodeName": "sample", "type": "Callable[[], Any]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "_assert_array_in_range", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 314, "col_offset": 31, "nodeName": "array", "type": "Any"}, {"lineNumber": 317, "col_offset": 24, "nodeName": "distrib", "type": "chainerrl.distribution.SquashedGaussianDistribution"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "_assert_array_in_range", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 322, "col_offset": 31, "nodeName": "array", "type": "Any"}, {"lineNumber": 325, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "log_p", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 340, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 341, "col_offset": 26, "nodeName": "another", "type": "chainerrl.distribution.SquashedGaussianDistribution"}, {"lineNumber": 341, "col_offset": 35, "nodeName": "SquashedGaussianDistribution", "type": "Type[chainerrl.distribution.SquashedGaussianDistribution]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 342, "col_offset": 25, "nodeName": "distrib", "type": "chainerrl.distribution.SquashedGaussianDistribution"}, {"lineNumber": 342, "col_offset": 39, "nodeName": "another", "type": "chainerrl.distribution.SquashedGaussianDistribution"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 343, "col_offset": 44, "nodeName": "mean", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 344, "col_offset": 35, "nodeName": "mean", "type": "Any"}, {"lineNumber": 344, "col_offset": 46, "nodeName": "array", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 345, "col_offset": 25, "nodeName": "var", "type": "Any"}, {"lineNumber": 345, "col_offset": 43, "nodeName": "var", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 346, "col_offset": 35, "nodeName": "var", "type": "Any"}, {"lineNumber": 346, "col_offset": 45, "nodeName": "array", "type": "Any"}, {"lineNumber": 360, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 361, "col_offset": 23, "nodeName": "ContinuousDeterministicDistribution", "type": "Type[chainerrl.distribution.ContinuousDeterministicDistribution]"}, {"lineNumber": 361, "col_offset": 72, "nodeName": "x", "type": "Any"}, {"lineNumber": 364, "col_offset": 17, "nodeName": "sample", "type": "Callable[[], Any]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 366, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 367, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 367, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "distrib", "type": "chainerrl.distribution.ContinuousDeterministicDistribution"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 372, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 373, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 373, "col_offset": 56, "nodeName": "x", "type": "Any"}, {"lineNumber": 376, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 377, "col_offset": 25, "nodeName": "distrib", "type": "chainerrl.distribution.ContinuousDeterministicDistribution"}, {"lineNumber": 377, "col_offset": 39, "nodeName": "another", "type": "chainerrl.distribution.ContinuousDeterministicDistribution"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 378, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "use", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "xp", "type": "Any"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "batch_probs", "type": "Any"}, {"lineNumber": 33, "col_offset": 52, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "counter", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "batch_probs", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "SoftmaxDistribution", "type": "Type[chainerrl.distribution.SoftmaxDistribution]"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "SoftmaxDistribution", "type": "Type[chainerrl.distribution.SoftmaxDistribution]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "logits", "type": "Any"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "distrib", "type": "chainerrl.distribution.SoftmaxDistribution"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 45, "nodeName": "n", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 93, "col_offset": 43, "nodeName": "batch_ps", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "ones", "type": "Any"}, {"lineNumber": 93, "col_offset": 62, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 40, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "log_prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 48, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "array", "type": "Any"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "sample_with_log_prob", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "log_prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 42, "nodeName": "y", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "array", "type": "Any"}, {"lineNumber": 107, "col_offset": 56, "nodeName": "array", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "distrib", "type": "chainerrl.distribution.SoftmaxDistribution"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "distrib", "type": "chainerrl.distribution.SoftmaxDistribution"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "distrib", "type": "chainerrl.distribution.SoftmaxDistribution"}, {"lineNumber": 126, "col_offset": 46, "nodeName": "another", "type": "chainerrl.distribution.SoftmaxDistribution"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 137, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 27, "nodeName": "MellowmaxDistribution", "type": "Type[chainerrl.distribution.MellowmaxDistribution]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "MellowmaxDistribution", "type": "Type[chainerrl.distribution.MellowmaxDistribution]"}, {"lineNumber": 142, "col_offset": 62, "nodeName": "values", "type": "Any"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "distrib", "type": "chainerrl.distribution.MellowmaxDistribution"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 146, "col_offset": 43, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 147, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 45, "nodeName": "n", "type": "Any"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 163, "col_offset": 39, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "batch_ps", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 54, "nodeName": "ones", "type": "Any"}, {"lineNumber": 163, "col_offset": 62, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 40, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "log_prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 48, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 171, "col_offset": 43, "nodeName": "array", "type": "Any"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "sample_with_log_prob", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "log_prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 42, "nodeName": "y", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "array", "type": "Any"}, {"lineNumber": 177, "col_offset": 56, "nodeName": "array", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "distrib", "type": "chainerrl.distribution.MellowmaxDistribution"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "distrib", "type": "chainerrl.distribution.MellowmaxDistribution"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "distrib", "type": "chainerrl.distribution.MellowmaxDistribution"}, {"lineNumber": 196, "col_offset": 46, "nodeName": "another", "type": "chainerrl.distribution.MellowmaxDistribution"}, {"lineNumber": 207, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "distribution", "type": "module"}, {"lineNumber": 211, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 68, "nodeName": "self", "type": "Any"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 215, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 215, "col_offset": 43, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 216, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 216, "col_offset": 57, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 220, "col_offset": 35, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 220, "col_offset": 50, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 221, "col_offset": 47, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 221, "col_offset": 64, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 222, "col_offset": 35, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 222, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 17, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 227, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "desired_pdf", "type": "Any"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 238, "col_offset": 26, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 239, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 250, "col_offset": 26, "nodeName": "sample_with_log_prob", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 251, "col_offset": 20, "nodeName": "log_prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 251, "col_offset": 42, "nodeName": "y", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 252, "col_offset": 43, "nodeName": "array", "type": "Any"}, {"lineNumber": 252, "col_offset": 56, "nodeName": "array", "type": "Any"}, {"lineNumber": 255, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 256, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 262, "col_offset": 34, "nodeName": "desired_entropy", "type": "Any"}, {"lineNumber": 265, "col_offset": 13, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 266, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "distribution", "type": "module"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 276, "col_offset": 21, "nodeName": "functions", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 277, "col_offset": 31, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 278, "col_offset": 35, "nodeName": "sum", "type": "Any"}, {"lineNumber": 279, "col_offset": 35, "nodeName": "chainer_kl", "type": "Any"}, {"lineNumber": 283, "col_offset": 18, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 285, "col_offset": 44, "nodeName": "another", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 286, "col_offset": 43, "nodeName": "another", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 292, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 293, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 304, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 306, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "distribution", "type": "module"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 308, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 311, "col_offset": 17, "nodeName": "distrib", "type": "chainerrl.distribution.SquashedGaussianDistribution"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 312, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 312, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 312, "col_offset": 43, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 313, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 313, "col_offset": 57, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 314, "col_offset": 31, "nodeName": "sample", "type": "Any"}, {"lineNumber": 317, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 318, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 318, "col_offset": 35, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 318, "col_offset": 50, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 319, "col_offset": 47, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 319, "col_offset": 64, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 321, "col_offset": 33, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 321, "col_offset": 41, "nodeName": "mean", "type": "Any"}, {"lineNumber": 322, "col_offset": 31, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 326, "col_offset": 15, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 326, "col_offset": 26, "nodeName": "sample_with_log_prob", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 327, "col_offset": 20, "nodeName": "log_prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 327, "col_offset": 42, "nodeName": "y", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 329, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 329, "col_offset": 29, "nodeName": "array", "type": "Any"}, {"lineNumber": 332, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 332, "col_offset": 31, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "distrib", "type": "chainerrl.distribution.SquashedGaussianDistribution"}, {"lineNumber": 336, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 336, "col_offset": 31, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "kl", "type": "Callable[[Any], Any]"}, {"lineNumber": 337, "col_offset": 28, "nodeName": "distrib", "type": "chainerrl.distribution.SquashedGaussianDistribution"}, {"lineNumber": 340, "col_offset": 18, "nodeName": "distrib", "type": "chainerrl.distribution.SquashedGaussianDistribution"}, {"lineNumber": 341, "col_offset": 35, "nodeName": "distribution", "type": "module"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 342, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "distrib", "type": "chainerrl.distribution.SquashedGaussianDistribution"}, {"lineNumber": 343, "col_offset": 44, "nodeName": "another", "type": "chainerrl.distribution.SquashedGaussianDistribution"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 344, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 344, "col_offset": 46, "nodeName": "mean", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 345, "col_offset": 25, "nodeName": "distrib", "type": "chainerrl.distribution.SquashedGaussianDistribution"}, {"lineNumber": 345, "col_offset": 43, "nodeName": "another", "type": "chainerrl.distribution.SquashedGaussianDistribution"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 346, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 346, "col_offset": 45, "nodeName": "var", "type": "Any"}, {"lineNumber": 349, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 349, "col_offset": 53, "nodeName": "distrib", "type": "chainerrl.distribution.SquashedGaussianDistribution"}, {"lineNumber": 360, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 361, "col_offset": 23, "nodeName": "distribution", "type": "module"}, {"lineNumber": 361, "col_offset": 72, "nodeName": "self", "type": "Any"}, {"lineNumber": 364, "col_offset": 17, "nodeName": "distrib", "type": "chainerrl.distribution.ContinuousDeterministicDistribution"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 365, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 365, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 365, "col_offset": 43, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 366, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 366, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 366, "col_offset": 57, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 367, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 367, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 371, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 371, "col_offset": 35, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 371, "col_offset": 50, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 372, "col_offset": 25, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 372, "col_offset": 47, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 372, "col_offset": 64, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 373, "col_offset": 35, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 373, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 376, "col_offset": 18, "nodeName": "distrib", "type": "chainerrl.distribution.ContinuousDeterministicDistribution"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 377, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "distrib", "type": "chainerrl.distribution.ContinuousDeterministicDistribution"}, {"lineNumber": 378, "col_offset": 41, "nodeName": "another", "type": "chainerrl.distribution.ContinuousDeterministicDistribution"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 52, "nodeName": "batch_probs", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "sample_discrete_actions", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 53, "nodeName": "batch_probs", "type": "Any"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "distribution", "type": "module"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "logits", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "beta", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "min_prob", "type": "Any"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "distribution", "type": "module"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "beta", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "min_prob", "type": "Any"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "array", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 80, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 85, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "distrib", "type": "chainerrl.distribution.SoftmaxDistribution"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 87, "col_offset": 48, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "min_prob", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "p", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "batch_ps", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 39, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 97, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "distrib", "type": "chainerrl.distribution.SoftmaxDistribution"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "distrib", "type": "chainerrl.distribution.SoftmaxDistribution"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "log", "type": "Any"}, {"lineNumber": 100, "col_offset": 50, "nodeName": "array", "type": "Any"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "batch_log_p", "type": "Any"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "distrib", "type": "chainerrl.distribution.SoftmaxDistribution"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "distrib", "type": "chainerrl.distribution.SoftmaxDistribution"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "log_p", "type": "Any"}, {"lineNumber": 107, "col_offset": 56, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 27, "nodeName": "distribution", "type": "module"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "values", "type": "Any"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "distribution", "type": "module"}, {"lineNumber": 142, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 43, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 147, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "array", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 150, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 39, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 155, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "distrib", "type": "chainerrl.distribution.MellowmaxDistribution"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 157, "col_offset": 48, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 37, "nodeName": "p", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "batch_ps", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 167, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "distrib", "type": "chainerrl.distribution.MellowmaxDistribution"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "distrib", "type": "chainerrl.distribution.MellowmaxDistribution"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 170, "col_offset": 43, "nodeName": "log", "type": "Any"}, {"lineNumber": 170, "col_offset": 50, "nodeName": "array", "type": "Any"}, {"lineNumber": 171, "col_offset": 43, "nodeName": "batch_log_p", "type": "Any"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "distrib", "type": "chainerrl.distribution.MellowmaxDistribution"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "distrib", "type": "chainerrl.distribution.MellowmaxDistribution"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "log_p", "type": "Any"}, {"lineNumber": 177, "col_offset": 56, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "normal", "type": "Any"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 43, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 216, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 216, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 220, "col_offset": 50, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 221, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 221, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "identity", "type": "Any"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 229, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 231, "col_offset": 39, "nodeName": "array", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 19, "nodeName": "identity", "type": "Any"}, {"lineNumber": 240, "col_offset": 31, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 243, "col_offset": 39, "nodeName": "array", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 246, "col_offset": 23, "nodeName": "desired_pdf", "type": "Any"}, {"lineNumber": 250, "col_offset": 26, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 251, "col_offset": 20, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 252, "col_offset": 43, "nodeName": "log_p", "type": "Any"}, {"lineNumber": 252, "col_offset": 56, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "identity", "type": "Any"}, {"lineNumber": 257, "col_offset": 31, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 265, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 268, "col_offset": 29, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 276, "col_offset": 21, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 277, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 278, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 283, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 304, "col_offset": 29, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 305, "col_offset": 19, "nodeName": "rand", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 306, "col_offset": 29, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 311, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 312, "col_offset": 43, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 313, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 313, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 318, "col_offset": 50, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 319, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 319, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 321, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 321, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 326, "col_offset": 26, "nodeName": "distrib", "type": "chainerrl.distribution.SquashedGaussianDistribution"}, {"lineNumber": 327, "col_offset": 20, "nodeName": "distrib", "type": "chainerrl.distribution.SquashedGaussianDistribution"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 329, "col_offset": 16, "nodeName": "log_p", "type": "Any"}, {"lineNumber": 329, "col_offset": 29, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 332, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 336, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "distrib", "type": "chainerrl.distribution.SquashedGaussianDistribution"}, {"lineNumber": 337, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 340, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 344, "col_offset": 46, "nodeName": "another", "type": "chainerrl.distribution.SquashedGaussianDistribution"}, {"lineNumber": 345, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 346, "col_offset": 45, "nodeName": "another", "type": "chainerrl.distribution.SquashedGaussianDistribution"}, {"lineNumber": 349, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 359, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 360, "col_offset": 29, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 364, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 365, "col_offset": 43, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 366, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 366, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 371, "col_offset": 50, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 372, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 372, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 376, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "get_device_from_id", "type": "Any"}, {"lineNumber": 24, "col_offset": 44, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "distribution", "type": "module"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "batch_probs", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "counter", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "sample", "type": "Any"}, {"lineNumber": 79, "col_offset": 49, "nodeName": "b", "type": "int"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "sample", "type": "Any"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "b", "type": "int"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "a", "type": "int"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 48, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "b", "type": "int"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "a", "type": "int"}, {"lineNumber": 97, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 50, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "kl", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "b", "type": "int"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 43, "nodeName": "array", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "sample", "type": "Any"}, {"lineNumber": 149, "col_offset": 49, "nodeName": "b", "type": "int"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "sample", "type": "Any"}, {"lineNumber": 150, "col_offset": 41, "nodeName": "b", "type": "int"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "a", "type": "int"}, {"lineNumber": 155, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 48, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 159, "col_offset": 34, "nodeName": "b", "type": "int"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 34, "nodeName": "a", "type": "int"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 50, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "kl", "type": "Any"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "b", "type": "int"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 43, "nodeName": "array", "type": "Any"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 228, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 229, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 229, "col_offset": 28, "nodeName": "b", "type": "int"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "multivariate_normal", "type": "Any"}, {"lineNumber": 231, "col_offset": 30, "nodeName": "cov", "type": "Any"}, {"lineNumber": 231, "col_offset": 39, "nodeName": "sample", "type": "Any"}, {"lineNumber": 231, "col_offset": 52, "nodeName": "b", "type": "int"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "sample_prob", "type": "Any"}, {"lineNumber": 233, "col_offset": 34, "nodeName": "b", "type": "int"}, {"lineNumber": 240, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 240, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 241, "col_offset": 28, "nodeName": "b", "type": "int"}, {"lineNumber": 242, "col_offset": 26, "nodeName": "multivariate_normal", "type": "Any"}, {"lineNumber": 243, "col_offset": 30, "nodeName": "cov", "type": "Any"}, {"lineNumber": 243, "col_offset": 39, "nodeName": "sample", "type": "Any"}, {"lineNumber": 243, "col_offset": 52, "nodeName": "b", "type": "int"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "sample_log_prob", "type": "Any"}, {"lineNumber": 245, "col_offset": 38, "nodeName": "b", "type": "int"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 251, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 257, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 257, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 28, "nodeName": "b", "type": "int"}, {"lineNumber": 259, "col_offset": 30, "nodeName": "multivariate_normal", "type": "Any"}, {"lineNumber": 260, "col_offset": 30, "nodeName": "cov", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 262, "col_offset": 30, "nodeName": "b", "type": "int"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "kl", "type": "Any"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "b", "type": "int"}, {"lineNumber": 268, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 268, "col_offset": 43, "nodeName": "array", "type": "Any"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 273, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 273, "col_offset": 44, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 273, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 274, "col_offset": 25, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 274, "col_offset": 42, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 274, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 278, "col_offset": 35, "nodeName": "kl", "type": "Any"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 304, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 306, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 326, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 327, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 359, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 360, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "batch_indices", "type": "Any"}, {"lineNumber": 121, "col_offset": 43, "nodeName": "kl", "type": "Any"}, {"lineNumber": 121, "col_offset": 52, "nodeName": "b", "type": "int"}, {"lineNumber": 191, "col_offset": 43, "nodeName": "kl", "type": "Any"}, {"lineNumber": 191, "col_offset": 52, "nodeName": "b", "type": "int"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 207, "col_offset": 35, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 209, "col_offset": 37, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 209, "col_offset": 54, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 228, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "stats", "type": "Any"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 240, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 242, "col_offset": 26, "nodeName": "stats", "type": "Any"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 257, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 30, "nodeName": "stats", "type": "Any"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 268, "col_offset": 43, "nodeName": "kl", "type": "Any"}, {"lineNumber": 268, "col_offset": 52, "nodeName": "b", "type": "int"}, {"lineNumber": 273, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 274, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 274, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 274, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 305, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 359, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 231, "col_offset": 26, "nodeName": "b", "type": "int"}, {"lineNumber": 242, "col_offset": 26, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 243, "col_offset": 26, "nodeName": "b", "type": "int"}, {"lineNumber": 259, "col_offset": 30, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 260, "col_offset": 26, "nodeName": "b", "type": "int"}]