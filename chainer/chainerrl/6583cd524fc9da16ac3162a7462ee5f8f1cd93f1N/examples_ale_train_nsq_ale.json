[{"lineNumber": 34, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "install_aliases", "type": "Any"}, {"lineNumber": 11, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 11, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "outdir", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "sample_env", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 99, "col_offset": 7, "nodeName": "demo", "type": "Any"}, {"lineNumber": 121, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "standard_library", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 58, "col_offset": 7, "nodeName": "seed", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "prepare_output_dir", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "outdir", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "make_env", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "sample_env", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "Discrete", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "opt", "type": "chainerrl.optimizers.rmsprop_async.RMSpropAsync"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "rand", "type": "float"}, {"lineNumber": 99, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "agent", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "explorer", "type": "chainerrl.explorers.epsilon_greedy.ConstantEpsilonGreedy"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 43, "col_offset": 42, "nodeName": "int", "type": "Type[builtins.int]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "str", "type": "Type[builtins.str]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "int", "type": "Type[builtins.int]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "int", "type": "Type[builtins.int]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "int", "type": "Type[builtins.int]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "str", "type": "Type[builtins.str]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 52, "col_offset": 49, "nodeName": "int", "type": "Type[builtins.int]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 53, "col_offset": 46, "nodeName": "int", "type": "Type[builtins.int]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "str", "type": "Type[builtins.str]"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 58, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "set_random_seed", "type": "Callable[[Any], None]"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "seed", "type": "Any"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 63, "col_offset": 48, "nodeName": "outdir", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "ALE", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "rom", "type": "Any"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "spaces", "type": "module"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "DiscreteActionValue", "type": "Type[chainerrl.action_value.DiscreteActionValue]"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "RMSpropAsync", "type": "Type[chainerrl.optimizers.rmsprop_async.RMSpropAsync]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "setup", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "q_func", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "rand", "type": "float"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "epsilon_target", "type": "float"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "LinearDecayEpsilonGreedy", "type": "Type[chainerrl.explorers.epsilon_greedy.LinearDecayEpsilonGreedy]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "epsilon_target", "type": "float"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "final_exploration_frames", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "sample", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "setLevel", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "INFO", "type": "int"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "NSQ", "type": "Any"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "process_idx", "type": "int"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "q_func", "type": "Any"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "opt", "type": "chainerrl.optimizers.rmsprop_async.RMSpropAsync"}, {"lineNumber": 100, "col_offset": 14, "nodeName": "make_env", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "make_agent", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "eval_performance", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "ConstantEpsilonGreedy", "type": "Type[chainerrl.explorers.epsilon_greedy.ConstantEpsilonGreedy]"}, {"lineNumber": 109, "col_offset": 47, "nodeName": "sample", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "train_agent_async", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "random_seed", "type": "module"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 63, "col_offset": 48, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "ale", "type": "module"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "use_sdl", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "sequence", "type": "module"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "NIPSDQNHead", "type": "Type[chainerrl.links.dqn_head.NIPSDQNHead]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "n", "type": "Any"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "rmsprop_async", "type": "module"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "opt", "type": "chainerrl.optimizers.rmsprop_async.RMSpropAsync"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "rand", "type": "float"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "epsilon_target", "type": "float"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "epsilon_target", "type": "float"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "logger", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "logging", "type": "module"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "nsq", "type": "module"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "explorer", "type": "chainerrl.explorers.epsilon_greedy.LinearDecayEpsilonGreedy"}, {"lineNumber": 97, "col_offset": 46, "nodeName": "dqn_phi", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "agent", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "eval_n_runs", "type": "Any"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "eval_n_runs", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "mean", "type": "Any"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "median", "type": "Any"}, {"lineNumber": 107, "col_offset": 44, "nodeName": "stdev", "type": "Any"}, {"lineNumber": 109, "col_offset": 47, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "outdir", "type": "Any"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "processes", "type": "Any"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "make_env", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "make_agent", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "profile", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "steps", "type": "Any"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "eval_n_runs", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "eval_frequency", "type": "Any"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "explorer", "type": "chainerrl.explorers.epsilon_greedy.ConstantEpsilonGreedy"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 67, "col_offset": 55, "nodeName": "test", "type": "bool"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "dqn_head", "type": "module"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "explorer", "type": "chainerrl.explorers.epsilon_greedy.LinearDecayEpsilonGreedy"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "args", "type": "argparse.Namespace"}]