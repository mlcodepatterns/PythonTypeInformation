[{"lineNumber": 405, "col_offset": 0, "nodeName": "exp_return_of_episode", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "test_append_and_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "test_append_and_terminate", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "test_stop_current_episode", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "test_save_and_load", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "test_append_and_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "test_save_and_load", "type": "Callable[[Any], Any]"}, {"lineNumber": 270, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "test_append_and_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "test_capacity", "type": "Callable[[Any], Any]"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "test_save_and_load", "type": "Callable[[Any], Any]"}, {"lineNumber": 427, "col_offset": 42, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "test_append_and_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 485, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "test", "type": "Callable[[Any], Any]"}, {"lineNumber": 535, "col_offset": 40, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "test", "type": "Callable[[Any], Any]"}, {"lineNumber": 577, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 579, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "_sample1", "type": "Callable[[Any], Any]"}, {"lineNumber": 588, "col_offset": 4, "nodeName": "_set1", "type": "Callable[[Any], Any]"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "test_fail_noupdate", "type": "Callable[[Any], Any]"}, {"lineNumber": 595, "col_offset": 4, "nodeName": "test_fail_update_first", "type": "Callable[[Any], Any]"}, {"lineNumber": 598, "col_offset": 4, "nodeName": "test_fail_doubleupdate", "type": "Callable[[Any], Any]"}, {"lineNumber": 604, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "test_batch_experiences", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 270, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 427, "col_offset": 42, "nodeName": "unittest", "type": "module"}, {"lineNumber": 485, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 535, "col_offset": 40, "nodeName": "unittest", "type": "module"}, {"lineNumber": 577, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 604, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "s1", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "s2", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "s1", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "s2", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "s2", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "s5", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 243, "col_offset": 17, "nodeName": "s5", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "s2e", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 273, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "s1", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "s2", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "s3", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "s3", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "s4", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 332, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 352, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 353, "col_offset": 20, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "s2", "type": "Any"}, {"lineNumber": 406, "col_offset": 11, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 498, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 546, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 551, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "experiences", "type": "List[List[Dict[Any, Any]]]"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 24, "col_offset": 42, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 24, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 59, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "item", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "s2", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 99, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "stop_current_episode", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 121, "col_offset": 42, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 121, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "filename", "type": "str"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 144, "col_offset": 42, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 150, "col_offset": 18, "nodeName": "filename", "type": "str"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "EpisodicReplayBuffer", "type": "Any"}, {"lineNumber": 174, "col_offset": 50, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "trans", "type": "Dict[Any, Any]"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "n_episodes", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "ep", "type": "Any"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "s", "type": "Any"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 18, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "EpisodicReplayBuffer", "type": "Any"}, {"lineNumber": 207, "col_offset": 50, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "stop_current_episode", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "stop_current_episode", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "n_episodes", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 228, "col_offset": 32, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 229, "col_offset": 18, "nodeName": "filename", "type": "str"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "EpisodicReplayBuffer", "type": "Any"}, {"lineNumber": 232, "col_offset": 50, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 238, "col_offset": 18, "nodeName": "filename", "type": "str"}, {"lineNumber": 241, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "sample_episodes", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "n_episodes", "type": "Any"}, {"lineNumber": 273, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "PrioritizedReplayBuffer", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 285, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 285, "col_offset": 23, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 291, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 299, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 299, "col_offset": 38, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 300, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 302, "col_offset": 29, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 305, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 318, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "assertNotAlmostEqual", "type": "Callable"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 323, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 328, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 332, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 333, "col_offset": 11, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 336, "col_offset": 15, "nodeName": "PrioritizedReplayBuffer", "type": "Any"}, {"lineNumber": 336, "col_offset": 53, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 338, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 338, "col_offset": 23, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 342, "col_offset": 36, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 345, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 349, "col_offset": 36, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 352, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 353, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 355, "col_offset": 18, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 357, "col_offset": 15, "nodeName": "PrioritizedReplayBuffer", "type": "Any"}, {"lineNumber": 357, "col_offset": 53, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 361, "col_offset": 23, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 362, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 362, "col_offset": 23, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 367, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 367, "col_offset": 38, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 368, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 370, "col_offset": 29, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 377, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 377, "col_offset": 32, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 378, "col_offset": 18, "nodeName": "filename", "type": "str"}, {"lineNumber": 381, "col_offset": 15, "nodeName": "PrioritizedReplayBuffer", "type": "Any"}, {"lineNumber": 381, "col_offset": 53, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 388, "col_offset": 18, "nodeName": "filename", "type": "str"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 394, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 430, "col_offset": 15, "nodeName": "PrioritizedEpisodicReplayBuffer", "type": "Any"}, {"lineNumber": 443, "col_offset": 16, "nodeName": "trans", "type": "Dict[Any, Any]"}, {"lineNumber": 443, "col_offset": 25, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 447, "col_offset": 25, "nodeName": "n_episodes", "type": "Any"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 455, "col_offset": 15, "nodeName": "return_sample_weights", "type": "Any"}, {"lineNumber": 462, "col_offset": 15, "nodeName": "wait_priority_after_sampling", "type": "Any"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 466, "col_offset": 15, "nodeName": "return_sample_weights", "type": "Any"}, {"lineNumber": 472, "col_offset": 15, "nodeName": "wait_priority_after_sampling", "type": "Any"}, {"lineNumber": 475, "col_offset": 16, "nodeName": "ep", "type": "Any"}, {"lineNumber": 475, "col_offset": 22, "nodeName": "s", "type": "Any"}, {"lineNumber": 489, "col_offset": 11, "nodeName": "replay_buffer_type", "type": "Any"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 498, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 503, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 508, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "stop_current_episode", "type": "Any"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "stop_current_episode", "type": "Any"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 538, "col_offset": 11, "nodeName": "replay_buffer_type", "type": "Any"}, {"lineNumber": 539, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 546, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 551, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 556, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "stop_current_episode", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "stop_current_episode", "type": "Any"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 580, "col_offset": 20, "nodeName": "PrioritizedReplayBuffer", "type": "Any"}, {"lineNumber": 581, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "_sample1", "type": "Callable[[], Any]"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 593, "col_offset": 26, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 593, "col_offset": 42, "nodeName": "_sample1", "type": "Callable[[], Any]"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 596, "col_offset": 26, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 596, "col_offset": 42, "nodeName": "_set1", "type": "Callable[[], Any]"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "_sample1", "type": "Callable[[], Any]"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "_set1", "type": "Callable[[], Any]"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 601, "col_offset": 26, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 601, "col_offset": 42, "nodeName": "_set1", "type": "Callable[[], Any]"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 619, "col_offset": 27, "nodeName": "four_step_transition", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 620, "col_offset": 16, "nodeName": "batch_experiences", "type": "Any"}, {"lineNumber": 621, "col_offset": 12, "nodeName": "experiences", "type": "List[List[Dict[Any, Any]]]"}, {"lineNumber": 621, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "collections", "type": "module"}, {"lineNumber": 29, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "s1", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "copy", "type": "module"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "s1", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "collections", "type": "module"}, {"lineNumber": 123, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "copy", "type": "module"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "sample", "type": "Any"}, {"lineNumber": 188, "col_offset": 28, "nodeName": "k", "type": "int"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 37, "nodeName": "k", "type": "int"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "sample_episodes", "type": "Any"}, {"lineNumber": 192, "col_offset": 37, "nodeName": "k", "type": "int"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 37, "nodeName": "k", "type": "int"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "sample_episodes", "type": "Any"}, {"lineNumber": 195, "col_offset": 37, "nodeName": "k", "type": "int"}, {"lineNumber": 205, "col_offset": 18, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "n", "type": "int"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 235, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 241, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "s5", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 26, "nodeName": "n", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 250, "col_offset": 29, "nodeName": "s2e", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 259, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 277, "col_offset": 29, "nodeName": "normalize_by_max", "type": "Any"}, {"lineNumber": 279, "col_offset": 22, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 281, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "collections", "type": "module"}, {"lineNumber": 284, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 286, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 288, "col_offset": 32, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 291, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 293, "col_offset": 29, "nodeName": "s1", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 296, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 296, "col_offset": 37, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 299, "col_offset": 24, "nodeName": "copy", "type": "module"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 303, "col_offset": 22, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 304, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 304, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 305, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 307, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 318, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 323, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 328, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 336, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 339, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 342, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 342, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 347, "col_offset": 22, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 349, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 355, "col_offset": 18, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 357, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 358, "col_offset": 63, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 361, "col_offset": 23, "nodeName": "collections", "type": "module"}, {"lineNumber": 361, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 363, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 365, "col_offset": 32, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 367, "col_offset": 24, "nodeName": "copy", "type": "module"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 371, "col_offset": 22, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 374, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 374, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 377, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 381, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 382, "col_offset": 63, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 385, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 385, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 391, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 391, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 394, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 406, "col_offset": 15, "nodeName": "exp", "type": "Any"}, {"lineNumber": 406, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 406, "col_offset": 44, "nodeName": "episode", "type": "Any"}, {"lineNumber": 430, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 431, "col_offset": 21, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 432, "col_offset": 29, "nodeName": "normalize_by_max", "type": "Any"}, {"lineNumber": 433, "col_offset": 34, "nodeName": "default_priority_func", "type": "Any"}, {"lineNumber": 434, "col_offset": 26, "nodeName": "uniform_ratio", "type": "Any"}, {"lineNumber": 435, "col_offset": 41, "nodeName": "wait_priority_after_sampling", "type": "Any"}, {"lineNumber": 436, "col_offset": 34, "nodeName": "return_sample_weights", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 446, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 446, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 447, "col_offset": 25, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 450, "col_offset": 16, "nodeName": "sample", "type": "Any"}, {"lineNumber": 450, "col_offset": 28, "nodeName": "k", "type": "int"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 451, "col_offset": 37, "nodeName": "k", "type": "int"}, {"lineNumber": 454, "col_offset": 18, "nodeName": "sample_episodes", "type": "Any"}, {"lineNumber": 454, "col_offset": 39, "nodeName": "k", "type": "int"}, {"lineNumber": 455, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 456, "col_offset": 24, "nodeName": "ret", "type": "Any"}, {"lineNumber": 460, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 460, "col_offset": 20, "nodeName": "ret", "type": "Any"}, {"lineNumber": 462, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 465, "col_offset": 18, "nodeName": "sample_episodes", "type": "Any"}, {"lineNumber": 465, "col_offset": 39, "nodeName": "k", "type": "int"}, {"lineNumber": 466, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 467, "col_offset": 24, "nodeName": "ret", "type": "Any"}, {"lineNumber": 471, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 471, "col_offset": 20, "nodeName": "ret", "type": "Any"}, {"lineNumber": 472, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 489, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 490, "col_offset": 19, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 491, "col_offset": 13, "nodeName": "replay_buffer_type", "type": "Any"}, {"lineNumber": 499, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 504, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 506, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 509, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 511, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 516, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 516, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 522, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 522, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 528, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 528, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 538, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 539, "col_offset": 19, "nodeName": "EpisodicReplayBuffer", "type": "Any"}, {"lineNumber": 540, "col_offset": 13, "nodeName": "replay_buffer_type", "type": "Any"}, {"lineNumber": 541, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 547, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 552, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 554, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 557, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 559, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 562, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 562, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 568, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 568, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 574, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 574, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 580, "col_offset": 20, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 583, "col_offset": 27, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 593, "col_offset": 42, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 596, "col_offset": 42, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 601, "col_offset": 42, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "experiences", "type": "List[List[Dict[Any, Any]]]"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "experiences", "type": "List[List[Dict[Any, Any]]]"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "four_step_transition", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 616, "col_offset": 36, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "experiences", "type": "List[List[Dict[Any, Any]]]"}, {"lineNumber": 620, "col_offset": 16, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 621, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "self", "type": "TestBatchExperiences"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "self", "type": "TestBatchExperiences"}, {"lineNumber": 623, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 624, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "self", "type": "TestBatchExperiences"}, {"lineNumber": 626, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 627, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "self", "type": "TestBatchExperiences"}, {"lineNumber": 630, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 631, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 53, "col_offset": 41, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 54, "col_offset": 41, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 158, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 159, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 159, "col_offset": 41, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 161, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 161, "col_offset": 41, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 162, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 162, "col_offset": 41, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 180, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 189, "col_offset": 33, "nodeName": "s", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 193, "col_offset": 33, "nodeName": "s", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "t0", "type": "Any"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "t1", "type": "Any"}, {"lineNumber": 198, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 198, "col_offset": 34, "nodeName": "ep", "type": "Any"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 216, "col_offset": 22, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 29, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 246, "col_offset": 32, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 252, "col_offset": 29, "nodeName": "s2e", "type": "Any"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 253, "col_offset": 29, "nodeName": "s2e", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 255, "col_offset": 29, "nodeName": "s2e", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "s2e", "type": "Any"}, {"lineNumber": 277, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 289, "col_offset": 26, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "s1", "type": "Any"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "s2", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "s2", "type": "Any"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 311, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 311, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 311, "col_offset": 41, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 312, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 312, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 312, "col_offset": 41, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 314, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 314, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 314, "col_offset": 41, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 315, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 315, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 315, "col_offset": 41, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 341, "col_offset": 26, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 366, "col_offset": 26, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 377, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "s2", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "s2", "type": "Any"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 398, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 398, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 398, "col_offset": 41, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 399, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 399, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 399, "col_offset": 41, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 401, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 401, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 401, "col_offset": 41, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 402, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 402, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 402, "col_offset": 41, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 406, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 406, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 431, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 432, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 433, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 434, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 435, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 436, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 442, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 444, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 450, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 451, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 451, "col_offset": 33, "nodeName": "s", "type": "Any"}, {"lineNumber": 454, "col_offset": 18, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 456, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 456, "col_offset": 19, "nodeName": "wt", "type": "Any"}, {"lineNumber": 457, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 457, "col_offset": 41, "nodeName": "k", "type": "int"}, {"lineNumber": 458, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 458, "col_offset": 42, "nodeName": "k", "type": "int"}, {"lineNumber": 461, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 461, "col_offset": 41, "nodeName": "k", "type": "int"}, {"lineNumber": 463, "col_offset": 16, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 465, "col_offset": 18, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 467, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 467, "col_offset": 19, "nodeName": "wt", "type": "Any"}, {"lineNumber": 468, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 468, "col_offset": 41, "nodeName": "k", "type": "int"}, {"lineNumber": 469, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 469, "col_offset": 42, "nodeName": "k", "type": "int"}, {"lineNumber": 473, "col_offset": 16, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 476, "col_offset": 16, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 477, "col_offset": 20, "nodeName": "t0", "type": "Any"}, {"lineNumber": 477, "col_offset": 24, "nodeName": "t1", "type": "Any"}, {"lineNumber": 477, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 477, "col_offset": 34, "nodeName": "ep", "type": "Any"}, {"lineNumber": 490, "col_offset": 19, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 490, "col_offset": 71, "nodeName": "n", "type": "int"}, {"lineNumber": 491, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 492, "col_offset": 19, "nodeName": "PrioritizedReplayBuffer", "type": "Any"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 501, "col_offset": 36, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 506, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 506, "col_offset": 36, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 511, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 511, "col_offset": 36, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 539, "col_offset": 19, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 540, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 541, "col_offset": 19, "nodeName": "PrioritizedEpisodicReplayBuffer", "type": "Any"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 549, "col_offset": 36, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 554, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 554, "col_offset": 36, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 559, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 559, "col_offset": 36, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 583, "col_offset": 27, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 610, "col_offset": 62, "nodeName": "i", "type": "int"}, {"lineNumber": 611, "col_offset": 28, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 613, "col_offset": 32, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 622, "col_offset": 25, "nodeName": "batch", "type": "Any"}, {"lineNumber": 623, "col_offset": 38, "nodeName": "batch", "type": "Any"}, {"lineNumber": 624, "col_offset": 38, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 626, "col_offset": 38, "nodeName": "batch", "type": "Any"}, {"lineNumber": 627, "col_offset": 38, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 630, "col_offset": 38, "nodeName": "batch", "type": "Any"}, {"lineNumber": 631, "col_offset": 38, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "s2", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "item", "type": "Any"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "s2", "type": "Any"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 180, "col_offset": 37, "nodeName": "n", "type": "int"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "trans", "type": "Dict[Any, Any]"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 197, "col_offset": 41, "nodeName": "ep", "type": "Any"}, {"lineNumber": 198, "col_offset": 38, "nodeName": "ep", "type": "Any"}, {"lineNumber": 199, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 39, "nodeName": "n", "type": "Any"}, {"lineNumber": 251, "col_offset": 11, "nodeName": "s2e", "type": "Any"}, {"lineNumber": 252, "col_offset": 38, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 252, "col_offset": 49, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 253, "col_offset": 38, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 253, "col_offset": 49, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 253, "col_offset": 60, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 255, "col_offset": 38, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 255, "col_offset": 49, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 255, "col_offset": 60, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 256, "col_offset": 38, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 256, "col_offset": 49, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 294, "col_offset": 31, "nodeName": "s1", "type": "Any"}, {"lineNumber": 310, "col_offset": 11, "nodeName": "s2", "type": "Any"}, {"lineNumber": 319, "col_offset": 34, "nodeName": "s3", "type": "Any"}, {"lineNumber": 319, "col_offset": 54, "nodeName": "s3", "type": "Any"}, {"lineNumber": 324, "col_offset": 31, "nodeName": "s3", "type": "Any"}, {"lineNumber": 324, "col_offset": 51, "nodeName": "s3", "type": "Any"}, {"lineNumber": 329, "col_offset": 31, "nodeName": "s4", "type": "Any"}, {"lineNumber": 329, "col_offset": 51, "nodeName": "s4", "type": "Any"}, {"lineNumber": 397, "col_offset": 11, "nodeName": "s2", "type": "Any"}, {"lineNumber": 442, "col_offset": 31, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 442, "col_offset": 37, "nodeName": "n", "type": "int"}, {"lineNumber": 444, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 444, "col_offset": 30, "nodeName": "trans", "type": "Dict[Any, Any]"}, {"lineNumber": 457, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 457, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 457, "col_offset": 37, "nodeName": "s", "type": "Any"}, {"lineNumber": 458, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 458, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 458, "col_offset": 37, "nodeName": "wt", "type": "Any"}, {"lineNumber": 461, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 461, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 461, "col_offset": 37, "nodeName": "s", "type": "Any"}, {"lineNumber": 463, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 463, "col_offset": 43, "nodeName": "k", "type": "int"}, {"lineNumber": 468, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 468, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 468, "col_offset": 37, "nodeName": "s", "type": "Any"}, {"lineNumber": 469, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 469, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 469, "col_offset": 37, "nodeName": "wt", "type": "Any"}, {"lineNumber": 473, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 473, "col_offset": 43, "nodeName": "k", "type": "int"}, {"lineNumber": 476, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 476, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 476, "col_offset": 41, "nodeName": "ep", "type": "Any"}, {"lineNumber": 477, "col_offset": 38, "nodeName": "ep", "type": "Any"}, {"lineNumber": 478, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 479, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 492, "col_offset": 19, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 493, "col_offset": 41, "nodeName": "n", "type": "int"}, {"lineNumber": 505, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 541, "col_offset": 19, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 553, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 610, "col_offset": 67, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 624, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 625, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 627, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 629, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 631, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "s2", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 199, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 199, "col_offset": 37, "nodeName": "t0", "type": "Any"}, {"lineNumber": 199, "col_offset": 55, "nodeName": "t1", "type": "Any"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 200, "col_offset": 37, "nodeName": "t0", "type": "Any"}, {"lineNumber": 200, "col_offset": 56, "nodeName": "t1", "type": "Any"}, {"lineNumber": 310, "col_offset": 17, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 397, "col_offset": 17, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 478, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 478, "col_offset": 37, "nodeName": "t0", "type": "Any"}, {"lineNumber": 478, "col_offset": 55, "nodeName": "t1", "type": "Any"}, {"lineNumber": 479, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 479, "col_offset": 37, "nodeName": "t0", "type": "Any"}, {"lineNumber": 479, "col_offset": 56, "nodeName": "t1", "type": "Any"}, {"lineNumber": 625, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 629, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "s2", "type": "Any"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "s2", "type": "Any"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "item", "type": "Any"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "item", "type": "Any"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "item", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "item", "type": "Any"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "item", "type": "Any"}, {"lineNumber": 91, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 94, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 89, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 89, "col_offset": 46, "nodeName": "item", "type": "Any"}]