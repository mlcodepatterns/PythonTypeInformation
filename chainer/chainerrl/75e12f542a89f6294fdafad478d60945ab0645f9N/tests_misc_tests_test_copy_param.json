[{"lineNumber": 10, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "test_copy_param", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "test_copy_param_scalar", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "test_copy_param_type_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "test_soft_copy_param", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "test_soft_copy_param_scalar", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "test_soft_copy_param_type_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "a_out", "type": "List[Any]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "b_out", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "a_out_new", "type": "List[Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "b_out_new", "type": "List[Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "a_out", "type": "List[Any]"}, {"lineNumber": 19, "col_offset": 35, "nodeName": "b_out", "type": "List[Any]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "copy_param", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 22, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 22, "col_offset": 33, "nodeName": "b", "type": "Any"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "a_out_new", "type": "List[Any]"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "b_out", "type": "List[Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "b_out_new", "type": "List[Any]"}, {"lineNumber": 27, "col_offset": 36, "nodeName": "b_out", "type": "List[Any]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "Chain", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "Chain", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "array", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "copy_param", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "b", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "array", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "soft_copy_param", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "array", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 64, "col_offset": 39, "nodeName": "array", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "soft_copy_param", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "array", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "array", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "Chain", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "Chain", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "soft_copy_param", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "array", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 83, "col_offset": 39, "nodeName": "array", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "soft_copy_param", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "array", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "array", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 16, "col_offset": 29, "nodeName": "astype", "type": "Any"}, {"lineNumber": 16, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestCopyParam"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "copy_param", "type": "module"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestCopyParam"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestCopyParam"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "init_scope", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "init_scope", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestCopyParam"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "p", "type": "Any"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "copy_param", "type": "module"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestCopyParam"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "p", "type": "Any"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "p", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "copy_param", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "a", "type": "Any"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "b", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "copy_param", "type": "module"}, {"lineNumber": 61, "col_offset": 47, "nodeName": "a", "type": "Any"}, {"lineNumber": 61, "col_offset": 62, "nodeName": "b", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "W", "type": "Any"}, {"lineNumber": 63, "col_offset": 50, "nodeName": "full", "type": "Any"}, {"lineNumber": 63, "col_offset": 58, "nodeName": "shape", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 64, "col_offset": 39, "nodeName": "W", "type": "Any"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "full", "type": "Any"}, {"lineNumber": 64, "col_offset": 58, "nodeName": "shape", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "copy_param", "type": "module"}, {"lineNumber": 66, "col_offset": 47, "nodeName": "a", "type": "Any"}, {"lineNumber": 66, "col_offset": 62, "nodeName": "b", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "W", "type": "Any"}, {"lineNumber": 68, "col_offset": 50, "nodeName": "full", "type": "Any"}, {"lineNumber": 68, "col_offset": 58, "nodeName": "shape", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "W", "type": "Any"}, {"lineNumber": 69, "col_offset": 50, "nodeName": "full", "type": "Any"}, {"lineNumber": 69, "col_offset": 58, "nodeName": "shape", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "init_scope", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "init_scope", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "copy_param", "type": "module"}, {"lineNumber": 80, "col_offset": 47, "nodeName": "a", "type": "Any"}, {"lineNumber": 80, "col_offset": 62, "nodeName": "b", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 83, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "copy_param", "type": "module"}, {"lineNumber": 85, "col_offset": 47, "nodeName": "a", "type": "Any"}, {"lineNumber": 85, "col_offset": 62, "nodeName": "b", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "soft_copy_param", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 16, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "array", "type": "Any"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "array", "type": "Any"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "a", "type": "Any"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "b", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "b", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "b", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "self", "type": "TestCopyParam"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "copy_param", "type": "module"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "a", "type": "Any"}, {"lineNumber": 63, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 58, "nodeName": "W", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 39, "nodeName": "b", "type": "Any"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 58, "nodeName": "W", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "a", "type": "Any"}, {"lineNumber": 68, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 58, "nodeName": "W", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "b", "type": "Any"}, {"lineNumber": 69, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 58, "nodeName": "W", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "a", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "b", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "a", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 39, "nodeName": "b", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "a", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "b", "type": "Any"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "self", "type": "TestCopyParam"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "copy_param", "type": "module"}, {"lineNumber": 95, "col_offset": 51, "nodeName": "a", "type": "Any"}, {"lineNumber": 95, "col_offset": 66, "nodeName": "b", "type": "Any"}, {"lineNumber": 16, "col_offset": 29, "nodeName": "rand", "type": "Any"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 58, "nodeName": "a", "type": "Any"}, {"lineNumber": 64, "col_offset": 58, "nodeName": "b", "type": "Any"}, {"lineNumber": 68, "col_offset": 58, "nodeName": "a", "type": "Any"}, {"lineNumber": 69, "col_offset": 58, "nodeName": "b", "type": "Any"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 16, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "s", "type": "Any"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "b", "type": "Any"}, {"lineNumber": 18, "col_offset": 23, "nodeName": "s", "type": "Any"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "s", "type": "Any"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "s", "type": "Any"}, {"lineNumber": 16, "col_offset": 29, "nodeName": "np", "type": "module"}]