[{"lineNumber": 18, "col_offset": 10, "nodeName": "AttributeSavingMixin", "type": "Any"}, {"lineNumber": 18, "col_offset": 32, "nodeName": "AsyncAgent", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "sync_parameters", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "shared_attributes", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "act_and_train", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "act", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "stop_episode_and_train", "type": "Callable[..., Any]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "stop_episode", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "load", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "get_statistics", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "process_idx", "type": "None"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "saved_attributes", "type": "List[str]"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "batch_states", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "shared_q_function", "type": "Any"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "q_function", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "target_q_function", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "q_function", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "t_max", "type": "Any"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "t_max", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "explorer", "type": "Any"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "explorer", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "i_target", "type": "Any"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "i_target", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "phi", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "phi", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "logger", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "logger", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "average_q_decay", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "average_q_decay", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "batch_states", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "batch_states", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "t_global", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "t", "type": "int"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "t_start", "type": "int"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "past_action_values", "type": "Dict[int, Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "past_states", "type": "Dict[int, Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "past_rewards", "type": "Dict[int, Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "average_q", "type": "int"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "loss", "type": "int"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "past_action_values", "type": "Dict[nothing, nothing]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "past_states", "type": "Dict[nothing, nothing]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "past_rewards", "type": "Dict[nothing, nothing]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "t_start", "type": "int"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "t", "type": "int"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "statevar", "type": "Any"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "reward", "type": "Any"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "statevar", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "qout", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 145, "col_offset": 42, "nodeName": "q", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "t", "type": "int"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "average_q", "type": "int"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "statevar", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "qout", "type": "Any"}, {"lineNumber": 167, "col_offset": 40, "nodeName": "reward", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "done", "type": "Any"}, {"lineNumber": 42, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 47, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 43, "col_offset": 57, "nodeName": "__name__", "type": "str"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 47, "col_offset": 47, "nodeName": "q_function", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "shared_q_function", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assert_params_not_shared", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "shared_q_function", "type": "Any"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "q_function", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "Value", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "copy_param", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "t_start", "type": "int"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "t", "type": "int"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "statevar", "type": "None"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "R", "type": "int"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "R", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "R", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "zerograds", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "zerograds", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "copy_grad", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "shared_q_function", "type": "Any"}, {"lineNumber": 113, "col_offset": 53, "nodeName": "q_function", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "sync_parameters", "type": "Callable[[], Any]"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "q_function", "type": "Any"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "Recurrent", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "batch_states", "type": "Any"}, {"lineNumber": 129, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 48, "nodeName": "phi", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "past_rewards", "type": "Dict[int, Any]"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "t_max", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "past_states", "type": "Dict[int, Any]"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "target_q_function", "type": "Any"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "Recurrent", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "q_function", "type": "Any"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "statevar", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "select_action", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "evaluate_actions", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "past_action_values", "type": "Dict[int, Any]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "t_global", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "value", "type": "Any"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "batch_states", "type": "Any"}, {"lineNumber": 161, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "phi", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "q_function", "type": "Any"}, {"lineNumber": 162, "col_offset": 31, "nodeName": "statevar", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "debug", "type": "Any"}, {"lineNumber": 163, "col_offset": 50, "nodeName": "qout", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "array", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "past_rewards", "type": "Dict[int, Any]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "statevar", "type": "Any"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "q_function", "type": "Any"}, {"lineNumber": 174, "col_offset": 39, "nodeName": "Recurrent", "type": "Any"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "q_function", "type": "Any"}, {"lineNumber": 180, "col_offset": 39, "nodeName": "Recurrent", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 186, "col_offset": 21, "nodeName": "dirname", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "copy_param", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "copy", "type": "module"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "copy", "type": "module"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "async_", "type": "module"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "mp", "type": "module"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "copy_param", "type": "module"}, {"lineNumber": 73, "col_offset": 42, "nodeName": "q_function", "type": "Any"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "shared_q_function", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "R", "type": "float"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "t_start", "type": "int"}, {"lineNumber": 92, "col_offset": 46, "nodeName": "t", "type": "int"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "past_rewards", "type": "Dict[int, Any]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "sum", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "q_function", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "loss", "type": "Union[Any, int]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "shared_q_function", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "copy_param", "type": "module"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 113, "col_offset": 53, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "unchain_backward", "type": "Any"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 129, "col_offset": 38, "nodeName": "obs", "type": "Any"}, {"lineNumber": 129, "col_offset": 48, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "t", "type": "int"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "t_start", "type": "int"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "update", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "statevar", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "t", "type": "int"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "target_q_function", "type": "Any"}, {"lineNumber": 139, "col_offset": 35, "nodeName": "statevar", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "explorer", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "t_global", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "qout", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "qout", "type": "Any"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "t", "type": "int"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "average_q_decay", "type": "Any"}, {"lineNumber": 148, "col_offset": 48, "nodeName": "average_q", "type": "int"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "get_lock", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "t_global", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "t_global", "type": "Any"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "t_global", "type": "Any"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "i_target", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "debug", "type": "Any"}, {"lineNumber": 155, "col_offset": 30, "nodeName": "t_global", "type": "Any"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "t", "type": "int"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "copy_param", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "target_q_function", "type": "Any"}, {"lineNumber": 156, "col_offset": 58, "nodeName": "q_function", "type": "Any"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 161, "col_offset": 38, "nodeName": "obs", "type": "Any"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "logger", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "greedy_actions", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "update", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "batch_states", "type": "Any"}, {"lineNumber": 171, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 54, "nodeName": "phi", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "update", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "statevar", "type": "Any"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "reset_state", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "reset_state", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "reset_state", "type": "Any"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "reset_state", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "reset_state", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "reset_state", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "copy_param", "type": "module"}, {"lineNumber": 187, "col_offset": 42, "nodeName": "shared_q_function", "type": "Any"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "q_function", "type": "Any"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "average_q", "type": "Union[int, Any]"}, {"lineNumber": 73, "col_offset": 42, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "state_kept", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "target_q_function", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "array", "type": "Any"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 92, "col_offset": 46, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "past_action_values", "type": "Dict[int, Any]"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "F", "type": "Any"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "huber_loss", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "q", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "q_function", "type": "Any"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "t", "type": "int"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "array", "type": "Any"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 46, "nodeName": "action", "type": "Any"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 148, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 148, "col_offset": 48, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "t_global", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "logger", "type": "Any"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "copy_param", "type": "module"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 156, "col_offset": 58, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "qout", "type": "Any"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "t", "type": "int"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "state", "type": "Any"}, {"lineNumber": 171, "col_offset": 54, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "q_function", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "shared_q_function", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "target_q_function", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "q_function", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "shared_q_function", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "target_q_function", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 187, "col_offset": 42, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "max", "type": "Any"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 95, "col_offset": 50, "nodeName": "i", "type": "int"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "F", "type": "Any"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "greedy_actions", "type": "Any"}, {"lineNumber": 148, "col_offset": 34, "nodeName": "array", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "qout", "type": "Any"}, {"lineNumber": 148, "col_offset": 34, "nodeName": "q", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "target_q_function", "type": "Any"}, {"lineNumber": 89, "col_offset": 49, "nodeName": "statevar", "type": "Any"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "self", "type": "NSQ"}, {"lineNumber": 98, "col_offset": 49, "nodeName": "R", "type": "Any"}, {"lineNumber": 98, "col_offset": 60, "nodeName": "np", "type": "module"}]