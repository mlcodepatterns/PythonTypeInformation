[{"lineNumber": 15, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "test1", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "check_all", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "check_len", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "check_getitem", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "do_setitem", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "do_append", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "do_extend", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "check_popleft", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "init_seq", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "y_queue", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "t_queue", "type": "collections.deque[Any]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "y_queue", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "t_queue", "type": "collections.deque[Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "check_all", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "check_popleft", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "do_append", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "check_all", "type": "Callable[[], Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "check_popleft", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "check_popleft", "type": "Callable[[], Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "do_append", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "check_all", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "t_queue", "type": "collections.deque[Any]"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "check_len", "type": "Callable[[], Any]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "t_queue", "type": "collections.deque[Any]"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "n", "type": "int"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "y_queue", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "t_queue", "type": "collections.deque[Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "extend", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "xs", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "xs", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "IndexError", "type": "Type[IndexError]"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 18, "col_offset": 27, "nodeName": "RandomAccessQueue", "type": "Any"}, {"lineNumber": 18, "col_offset": 45, "nodeName": "init_seq", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 19, "col_offset": 45, "nodeName": "init_seq", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "RandomAccessQueue", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "n", "type": "int"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "check_getitem", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "do_extend", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "check_all", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "check_popleft", "type": "Callable[[], Any]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "do_extend", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "check_all", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "do_append", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "check_popleft", "type": "Callable[[], Any]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "check_popleft", "type": "Callable[[], Any]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "check_all", "type": "Callable[[], Any]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "check_popleft", "type": "Callable[[], Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "check_getitem", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "y_queue", "type": "Any"}, {"lineNumber": 66, "col_offset": 44, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "t_queue", "type": "collections.deque[Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "y_queue", "type": "Any"}, {"lineNumber": 69, "col_offset": 42, "nodeName": "t_queue", "type": "collections.deque[Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "i", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "i", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "y_queue", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "t_queue", "type": "collections.deque[Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "y_queue", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "t_queue", "type": "collections.deque[Any]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "popleft", "type": "Callable"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 53, "nodeName": "t", "type": "Any"}, {"lineNumber": 18, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 18, "col_offset": 67, "nodeName": "maxlen", "type": "Any"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "collections", "type": "module"}, {"lineNumber": 19, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 19, "col_offset": 67, "nodeName": "maxlen", "type": "Any"}, {"lineNumber": 21, "col_offset": 52, "nodeName": "maxlen", "type": "Any"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "collections", "type": "module"}, {"lineNumber": 22, "col_offset": 52, "nodeName": "maxlen", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "k", "type": "int"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "k", "type": "int"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "k", "type": "int"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 69, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "t_queue", "type": "collections.deque[Any]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "popleft", "type": "Any"}, {"lineNumber": 18, "col_offset": 67, "nodeName": "self", "type": "Any"}, {"lineNumber": 19, "col_offset": 67, "nodeName": "self", "type": "Any"}, {"lineNumber": 21, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 22, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "IndexError", "type": "Type[IndexError]"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "popleft", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "y_queue", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "y_queue", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "self", "type": "Any"}]