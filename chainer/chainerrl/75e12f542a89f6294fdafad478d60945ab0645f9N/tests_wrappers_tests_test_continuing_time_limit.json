[{"lineNumber": 12, "col_offset": 30, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "test", "type": "Callable[[Any], Any]"}, {"lineNumber": 12, "col_offset": 30, "nodeName": "unittest", "type": "module"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "side_effect", "type": "List[str]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "side_effect", "type": "List[Tuple[str, int, bool, Dict[nothing, nothing]]]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "t", "type": "int"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "t", "type": "int"}, {"lineNumber": 15, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "ContinuingTimeLimit", "type": "Type[chainerrl.wrappers.continuing_time_limit.ContinuingTimeLimit]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 15, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 19, "col_offset": 60, "nodeName": "_", "type": "int"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "wrappers", "type": "module"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "max_episode_steps", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "env", "type": "chainerrl.wrappers.continuing_time_limit.ContinuingTimeLimit"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "_", "type": "Any"}, {"lineNumber": 25, "col_offset": 18, "nodeName": "done", "type": "Any"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "info", "type": "Any"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "step", "type": "Callable[[Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "max_episode_steps", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "env", "type": "chainerrl.wrappers.continuing_time_limit.ContinuingTimeLimit"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "_", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "done", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "info", "type": "Any"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "step", "type": "Callable[[Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "max_episode_steps", "type": "Any"}, {"lineNumber": 19, "col_offset": 65, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "chainerrl", "type": "module"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "env", "type": "chainerrl.wrappers.continuing_time_limit.ContinuingTimeLimit"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "t", "type": "int"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "env", "type": "chainerrl.wrappers.continuing_time_limit.ContinuingTimeLimit"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "t", "type": "int"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "info", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 29, "col_offset": 33, "nodeName": "get", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 32, "nodeName": "info", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "get", "type": "Any"}, {"lineNumber": 29, "col_offset": 33, "nodeName": "info", "type": "Any"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "info", "type": "Any"}]