[{"lineNumber": 37, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "install_aliases", "type": "Any"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "standard_library", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "base_distrib", "type": "Union[chainerrl.distribution.GaussianDistribution, chainerrl.distribution.SoftmaxDistribution]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "kl_before", "type": "builtins.float"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "kl_after_without_constraint", "type": "builtins.float"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "outdir", "type": "str"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "nproc", "type": "int"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "sample_env", "type": "chainerrl.envs.abc.ABC"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 134, "col_offset": 23, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "obs_space", "type": "Any"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "n_hidden_layers", "type": "int"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "nonlinearity", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "leaky_relu", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "replay_buffer", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "use_lstm", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "eps", "type": "float"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "opt", "type": "chainerrl.optimizers.rmsprop_async.RMSpropAsync"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "gamma", "type": "float"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "beta", "type": "float"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "max_episode_len", "type": "Optional[int]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "env", "type": "chainerrl.envs.abc.ABC"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "n_test_runs", "type": "int"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "distrib_type", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "base_policy", "type": "Union[chainerrl.policies.gaussian_policy.FCGaussianPolicy, chainerrl.policies.softmax_policy.FCSoftmaxPolicy]"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "float", "type": "Type[builtins.float]"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "kl_before", "type": "builtins.float"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "policy", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "distrib_after", "type": "Any"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "compute_kl_after_update", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 62, "nodeName": "base_loss_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "kl_after_without_constraint", "type": "builtins.float"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "compute_kl_after_update", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "loss_func_with_constraint", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 42, "nodeName": "kl_after_with_constraint", "type": "builtins.float"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "basicConfig", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "_test_abc", "type": "Any"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "t_max", "type": "Any"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "use_lstm", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "size", "type": "int"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "make_env", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 23, "nodeName": "sample_env", "type": "chainerrl.envs.abc.ABC"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "sample_env", "type": "chainerrl.envs.abc.ABC"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "F", "type": "Any"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "EpisodicReplayBuffer", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "discrete", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "discrete", "type": "Any"}, {"lineNumber": 217, "col_offset": 14, "nodeName": "RMSpropAsync", "type": "Type[chainerrl.optimizers.rmsprop_async.RMSpropAsync]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "setup", "type": "Any"}, {"lineNumber": 218, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 221, "col_offset": 40, "nodeName": "disable_online_update", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "disable_online_update", "type": "bool"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "ACER", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "opt", "type": "chainerrl.optimizers.rmsprop_async.RMSpropAsync"}, {"lineNumber": 234, "col_offset": 34, "nodeName": "episodic", "type": "Union[Any, bool]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "train_agent_async", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "stop_episode", "type": "Any"}, {"lineNumber": 251, "col_offset": 14, "nodeName": "make_env", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 254, "col_offset": 23, "nodeName": "n_test_runs", "type": "int"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "total_r", "type": "int"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "obs", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "done", "type": "bool"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "reward", "type": "float"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "FCGaussianPolicy", "type": "Type[chainerrl.policies.gaussian_policy.FCGaussianPolicy]"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 47, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "distrib_type", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "sample", "type": "Callable[[], Any]"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "sample", "type": "Any"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "base_policy", "type": "Union[chainerrl.policies.gaussian_policy.FCGaussianPolicy, chainerrl.policies.softmax_policy.FCSoftmaxPolicy]"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "setup", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "policy", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "n", "type": "int"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "policy", "type": "Any"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "float", "type": "Type[builtins.float]"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "compute_loss_with_kl_constraint", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "another_distrib", "type": "Union[chainerrl.distribution.GaussianDistribution, chainerrl.distribution.SoftmaxDistribution]"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "DEBUG", "type": "int"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 59, "nodeName": "discrete", "type": "Any"}, {"lineNumber": 120, "col_offset": 32, "nodeName": "episodic", "type": "Any"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "ABC", "type": "Type[chainerrl.envs.abc.ABC]"}, {"lineNumber": 217, "col_offset": 14, "nodeName": "rmsprop_async", "type": "module"}, {"lineNumber": 217, "col_offset": 54, "nodeName": "eps", "type": "float"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "opt", "type": "chainerrl.optimizers.rmsprop_async.RMSpropAsync"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "n_times_replay", "type": "Any"}, {"lineNumber": 221, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "acer", "type": "module"}, {"lineNumber": 225, "col_offset": 38, "nodeName": "replay_buffer", "type": "Any"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "t_max", "type": "Any"}, {"lineNumber": 226, "col_offset": 31, "nodeName": "gamma", "type": "float"}, {"lineNumber": 226, "col_offset": 43, "nodeName": "beta", "type": "float"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "phi", "type": "Callable[[Any], Any]"}, {"lineNumber": 228, "col_offset": 27, "nodeName": "n_times_replay", "type": "Any"}, {"lineNumber": 230, "col_offset": 34, "nodeName": "disable_online_update", "type": "Union[Any, bool]"}, {"lineNumber": 232, "col_offset": 29, "nodeName": "use_trust_region", "type": "Any"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "outdir", "type": "Any"}, {"lineNumber": 237, "col_offset": 42, "nodeName": "nproc", "type": "int"}, {"lineNumber": 237, "col_offset": 58, "nodeName": "make_env", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 238, "col_offset": 18, "nodeName": "agent", "type": "Any"}, {"lineNumber": 238, "col_offset": 31, "nodeName": "steps", "type": "Any"}, {"lineNumber": 239, "col_offset": 28, "nodeName": "max_episode_len", "type": "Optional[int]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "agent", "type": "Any"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 247, "col_offset": 32, "nodeName": "outdir", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "agent", "type": "Any"}, {"lineNumber": 256, "col_offset": 18, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 260, "col_offset": 22, "nodeName": "done", "type": "bool"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "action", "type": "Any"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "total_r", "type": "Union[int, float]"}, {"lineNumber": 264, "col_offset": 27, "nodeName": "reward", "type": "Union[int, float]"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "policies", "type": "module"}, {"lineNumber": 47, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "FCSoftmaxPolicy", "type": "Type[chainerrl.policies.softmax_policy.FCSoftmaxPolicy]"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 51, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "base_distrib", "type": "Union[chainerrl.distribution.SoftmaxDistribution, chainerrl.distribution.GaussianDistribution]"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "base_policy", "type": "Union[chainerrl.policies.gaussian_policy.FCGaussianPolicy, chainerrl.policies.softmax_policy.FCSoftmaxPolicy]"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "kl", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 45, "nodeName": "base_distrib", "type": "Union[chainerrl.distribution.SoftmaxDistribution, chainerrl.distribution.GaussianDistribution]"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "copy", "type": "module"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "policy", "type": "Any"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "cleargrads", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "backward", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "update", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "acer", "type": "module"}, {"lineNumber": 82, "col_offset": 42, "nodeName": "base_loss_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 57, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "logging", "type": "module"}, {"lineNumber": 119, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 28, "nodeName": "size", "type": "int"}, {"lineNumber": 129, "col_offset": 43, "nodeName": "discrete", "type": "Any"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "use_lstm", "type": "Any"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "test", "type": "bool"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "ACERSharedModel", "type": "Any"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "ACERSDNSharedModel", "type": "Any"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "ACERSeparateModel", "type": "Any"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "ACERSDNSeparateModel", "type": "Any"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 228, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 230, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 232, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 247, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 256, "col_offset": 18, "nodeName": "env", "type": "chainerrl.envs.abc.ABC"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "act", "type": "Any"}, {"lineNumber": 261, "col_offset": 35, "nodeName": "obs", "type": "Any"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 262, "col_offset": 32, "nodeName": "obs", "type": "Any"}, {"lineNumber": 262, "col_offset": 48, "nodeName": "action", "type": "Any"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "obs", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "reward", "type": "Union[float, int]"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "done", "type": "bool"}, {"lineNumber": 263, "col_offset": 35, "nodeName": "_", "type": "None"}, {"lineNumber": 263, "col_offset": 39, "nodeName": "step", "type": "Callable[[Any], Tuple[Any, Union[int, float], bool, None]]"}, {"lineNumber": 263, "col_offset": 48, "nodeName": "action", "type": "Any"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "chainerrl", "type": "module"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "policies", "type": "module"}, {"lineNumber": 51, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "another_distrib", "type": "Union[chainerrl.distribution.GaussianDistribution, chainerrl.distribution.SoftmaxDistribution]"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "policy", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "kl", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "distrib_after", "type": "Any"}, {"lineNumber": 129, "col_offset": 62, "nodeName": "episodic", "type": "Any"}, {"lineNumber": 129, "col_offset": 74, "nodeName": "test", "type": "bool"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "acer", "type": "module"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "acer", "type": "module"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "acer", "type": "module"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "acer", "type": "module"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "agent", "type": "Any"}, {"lineNumber": 263, "col_offset": 39, "nodeName": "env", "type": "chainerrl.envs.abc.ABC"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "chainerrl", "type": "module"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "loss_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "another_distrib", "type": "Union[chainerrl.distribution.GaussianDistribution, chainerrl.distribution.SoftmaxDistribution]"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "size", "type": "Any"}, {"lineNumber": 147, "col_offset": 54, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "FCSoftmaxPolicy", "type": "Type[chainerrl.policies.softmax_policy.FCSoftmaxPolicy]"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "n", "type": "Any"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "FCStateQFunctionWithDiscreteAction", "type": "Any"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 154, "col_offset": 43, "nodeName": "n", "type": "Any"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "size", "type": "Any"}, {"lineNumber": 161, "col_offset": 54, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "FCGaussianPolicy", "type": "Type[chainerrl.policies.gaussian_policy.FCGaussianPolicy]"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "size", "type": "Any"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "FCVFunction", "type": "Any"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "FCSAQFunction", "type": "Any"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 176, "col_offset": 43, "nodeName": "size", "type": "Any"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "FCSoftmaxPolicy", "type": "Type[chainerrl.policies.softmax_policy.FCSoftmaxPolicy]"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "size", "type": "Any"}, {"lineNumber": 185, "col_offset": 44, "nodeName": "n", "type": "Any"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "FCStateQFunctionWithDiscreteAction", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "size", "type": "Any"}, {"lineNumber": 190, "col_offset": 44, "nodeName": "n", "type": "Any"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "FCGaussianPolicy", "type": "Type[chainerrl.policies.gaussian_policy.FCGaussianPolicy]"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "size", "type": "Any"}, {"lineNumber": 198, "col_offset": 44, "nodeName": "size", "type": "Any"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "FCVFunction", "type": "Any"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "size", "type": "Any"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "FCSAQFunction", "type": "Any"}, {"lineNumber": 211, "col_offset": 24, "nodeName": "size", "type": "Any"}, {"lineNumber": 211, "col_offset": 44, "nodeName": "size", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "L", "type": "Any"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "low", "type": "Any"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "policies", "type": "module"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 150, "col_offset": 42, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 151, "col_offset": 40, "nodeName": "n_hidden_layers", "type": "int"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "nonlinearity", "type": "Any"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "q_function", "type": "module"}, {"lineNumber": 154, "col_offset": 43, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "n_hidden_layers", "type": "int"}, {"lineNumber": 157, "col_offset": 37, "nodeName": "nonlinearity", "type": "Any"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "L", "type": "Any"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "low", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "policies", "type": "module"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "low", "type": "Any"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 165, "col_offset": 40, "nodeName": "n_hidden_layers", "type": "int"}, {"lineNumber": 167, "col_offset": 35, "nodeName": "low", "type": "Any"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "high", "type": "Any"}, {"lineNumber": 169, "col_offset": 37, "nodeName": "nonlinearity", "type": "Any"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "v_function", "type": "module"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "n_hidden_layers", "type": "int"}, {"lineNumber": 174, "col_offset": 37, "nodeName": "nonlinearity", "type": "Any"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "q_function", "type": "module"}, {"lineNumber": 176, "col_offset": 43, "nodeName": "low", "type": "Any"}, {"lineNumber": 177, "col_offset": 42, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 178, "col_offset": 40, "nodeName": "n_hidden_layers", "type": "int"}, {"lineNumber": 179, "col_offset": 37, "nodeName": "nonlinearity", "type": "Any"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "policies", "type": "module"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "low", "type": "Any"}, {"lineNumber": 185, "col_offset": 44, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 186, "col_offset": 42, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 187, "col_offset": 40, "nodeName": "n_hidden_layers", "type": "int"}, {"lineNumber": 188, "col_offset": 37, "nodeName": "nonlinearity", "type": "Any"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "q_function", "type": "module"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "low", "type": "Any"}, {"lineNumber": 190, "col_offset": 44, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 191, "col_offset": 42, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 192, "col_offset": 40, "nodeName": "n_hidden_layers", "type": "int"}, {"lineNumber": 193, "col_offset": 37, "nodeName": "nonlinearity", "type": "Any"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "policies", "type": "module"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "low", "type": "Any"}, {"lineNumber": 198, "col_offset": 44, "nodeName": "low", "type": "Any"}, {"lineNumber": 199, "col_offset": 42, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 200, "col_offset": 40, "nodeName": "n_hidden_layers", "type": "int"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "low", "type": "Any"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "high", "type": "Any"}, {"lineNumber": 204, "col_offset": 37, "nodeName": "nonlinearity", "type": "Any"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "v_function", "type": "module"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "low", "type": "Any"}, {"lineNumber": 207, "col_offset": 42, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 208, "col_offset": 40, "nodeName": "n_hidden_layers", "type": "int"}, {"lineNumber": 209, "col_offset": 37, "nodeName": "nonlinearity", "type": "Any"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "q_function", "type": "module"}, {"lineNumber": 211, "col_offset": 24, "nodeName": "low", "type": "Any"}, {"lineNumber": 211, "col_offset": 44, "nodeName": "low", "type": "Any"}, {"lineNumber": 212, "col_offset": 42, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 213, "col_offset": 40, "nodeName": "n_hidden_layers", "type": "int"}, {"lineNumber": 214, "col_offset": 37, "nodeName": "nonlinearity", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "obs_space", "type": "Any"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "obs_space", "type": "Any"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 167, "col_offset": 35, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 176, "col_offset": 43, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "obs_space", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "obs_space", "type": "Any"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "obs_space", "type": "Any"}, {"lineNumber": 198, "col_offset": 44, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "obs_space", "type": "Any"}, {"lineNumber": 211, "col_offset": 24, "nodeName": "obs_space", "type": "Any"}, {"lineNumber": 211, "col_offset": 44, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "np", "type": "module"}]