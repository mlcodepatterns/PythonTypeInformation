[{"lineNumber": 21, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "test", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "orig_env", "type": "mock.Mock"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "env", "type": "chainerrl.wrappers.render.Render"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "call", "type": "Any"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "Render", "type": "Type[chainerrl.wrappers.render.Render]"}, {"lineNumber": 34, "col_offset": 40, "nodeName": "orig_env", "type": "mock.Mock"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "reset", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "reward", "type": "Any"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "done", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "info", "type": "Any"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "step", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "reward", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "done", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "info", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "reward", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "done", "type": "Any"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "info", "type": "Any"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "step", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "reward", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "done", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "info", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "reset", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "render", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "call", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "wrappers", "type": "module"}, {"lineNumber": 34, "col_offset": 52, "nodeName": "render_kwargs", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "render", "type": "Any"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "env", "type": "chainerrl.wrappers.render.Render"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "render", "type": "Any"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "env", "type": "chainerrl.wrappers.render.Render"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "render", "type": "Any"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "env", "type": "chainerrl.wrappers.render.Render"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "render", "type": "Any"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "env", "type": "chainerrl.wrappers.render.Render"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "render", "type": "Any"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "orig_env", "type": "mock.Mock"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "render_kwargs", "type": "Any"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "chainerrl", "type": "module"}, {"lineNumber": 34, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "orig_env", "type": "mock.Mock"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "orig_env", "type": "mock.Mock"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "orig_env", "type": "mock.Mock"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "orig_env", "type": "mock.Mock"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "orig_env", "type": "mock.Mock"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "args", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "self", "type": "Any"}]