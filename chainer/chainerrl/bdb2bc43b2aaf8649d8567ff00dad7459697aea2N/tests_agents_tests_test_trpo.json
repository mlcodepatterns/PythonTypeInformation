[{"lineNumber": 39, "col_offset": 0, "nodeName": "old_style_identity", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "compute_hessian_vector_product", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 0, "nodeName": "compute_hessian", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "Function", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "check_type_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "test", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "_generate_params_and_first_order_output", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "_generate_params_and_second_order_output", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "test_first_order", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "test_second_order", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "test_abc_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "test_abc_fast_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "test_abc_fast_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "make_agent", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "make_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "make_env_and_successful_return", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "flat_grads", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "flat_grads", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "hessian_rows", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "xs", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "gys", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "old_style_funcs", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "old_style_funcs", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "old_style_funcs", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "_flatten_and_concat_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "grads", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "_hessian_vector_product", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "flat_grads", "type": "Any"}, {"lineNumber": 74, "col_offset": 52, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 60, "nodeName": "vec", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "_flatten_and_concat_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 52, "nodeName": "grads", "type": "Any"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "ggrads", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "ggrads_data", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "flat_ggrads_data", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "hessian_rows", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "old_style_funcs", "type": "List[Any]"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "old_style_funcs", "type": "List[Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "old_style_funcs", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "old_style_funcs", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "tmpdir", "type": "str"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "agent_dirname", "type": "Union[str, unicode]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "agent", "type": "chainerrl.agents.trpo.TRPO"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "load_model", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "max_episode_len", "type": "Optional[int]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "n_test_runs", "type": "int"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "vf_opt", "type": "Any"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "standardize_obs", "type": "Any"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "agent", "type": "chainerrl.agents.trpo.TRPO"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "n_dim_obs", "type": "Any"}, {"lineNumber": 268, "col_offset": 20, "nodeName": "size", "type": "Any"}, {"lineNumber": 277, "col_offset": 11, "nodeName": "discrete", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "fake_obs", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "action_distrib", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "kl", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "old_style_funcs", "type": "List[Any]"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "old_style_funcs", "type": "List[Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "retain_inputs", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "OldStyleIdentity", "type": "Type[OldStyleIdentity]"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "args", "type": "Tuple[Any]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "_find_old_style_function", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "old_style_funcs", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "b", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "_find_old_style_function", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "_find_old_style_function", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "y", "type": "Any"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "trpo", "type": "module"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "trpo", "type": "module"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "y", "type": "Any"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "trpo", "type": "module"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "flat_grads", "type": "Any"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "grad", "type": "Any"}, {"lineNumber": 83, "col_offset": 47, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "array", "type": "Any"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "_flatten_and_concat_ndarrays", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 61, "nodeName": "ggrads_data", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "flat_ggrads_data", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "a", "type": "Any"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "b", "type": "Any"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "b", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "a", "type": "Any"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "b", "type": "Any"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "b", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "_generate_params_and_first_order_output", "type": "Callable[[], Any]"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "_find_old_style_function", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "astype", "type": "Any"}, {"lineNumber": 117, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "_generate_params_and_second_order_output", "type": "Callable[[], Any]"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "_find_old_style_function", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "hvp", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "hessian", "type": "numpy.ndarray"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "test_hessian_vector_product_nonzero", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "test_hessian_vector_product_nonzero", "type": "Callable[[Any], Any]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "join", "type": "Callable"}, {"lineNumber": 160, "col_offset": 42, "nodeName": "tmpdir", "type": "str"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "_test_abc", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "_test_abc", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "_test_abc", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "_test_abc", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "_test_abc", "type": "Callable[..., Any]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "_test_abc", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "env", "type": "chainerrl.envs.abc.ABC"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "_", "type": "int"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "make_env_and_successful_return", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 38, "nodeName": "make_env_and_successful_return", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "make_agent", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 187, "col_offset": 32, "nodeName": "env", "type": "chainerrl.envs.abc.ABC"}, {"lineNumber": 187, "col_offset": 37, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "episodic", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "train_agent_with_evaluation", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "stop_episode", "type": "Callable[[], None]"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "n_test_runs", "type": "int"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "total_r", "type": "float"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "obs", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "done", "type": "bool"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "reward", "type": "float"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "agent_dirname", "type": "Union[str, unicode]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "policy", "type": "Union[chainerrl.policies.gaussian_policy.FCGaussianPolicyWithStateIndependentCovariance, chainerrl.policies.softmax_policy.FCSoftmaxPolicy]"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "vf", "type": "chainerrl.v_functions.v_functions.FCVFunction"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "make_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 231, "col_offset": 37, "nodeName": "env", "type": "chainerrl.envs.abc.ABC"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "setup", "type": "Any"}, {"lineNumber": 239, "col_offset": 21, "nodeName": "vf", "type": "chainerrl.v_functions.v_functions.FCVFunction"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "obs_normalizer", "type": "None"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "TRPO", "type": "Type[chainerrl.agents.trpo.TRPO]"}, {"lineNumber": 268, "col_offset": 20, "nodeName": "low", "type": "Any"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "FCVFunction", "type": "Type[chainerrl.v_functions.v_functions.FCVFunction]"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "n_dim_obs", "type": "Any"}, {"lineNumber": 277, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 278, "col_offset": 24, "nodeName": "n", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "n_dim_actions", "type": "Any"}, {"lineNumber": 288, "col_offset": 28, "nodeName": "size", "type": "Any"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 300, "col_offset": 33, "nodeName": "low", "type": "Any"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "pi", "type": "Union[chainerrl.policies.gaussian_policy.FCGaussianPolicyWithStateIndependentCovariance, chainerrl.policies.softmax_policy.FCSoftmaxPolicy]"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "kl", "type": "Any"}, {"lineNumber": 302, "col_offset": 31, "nodeName": "action_distrib", "type": "Any"}, {"lineNumber": 303, "col_offset": 26, "nodeName": "_find_old_style_function", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "pi", "type": "Union[chainerrl.policies.gaussian_policy.FCGaussianPolicyWithStateIndependentCovariance, chainerrl.policies.softmax_policy.FCSoftmaxPolicy]"}, {"lineNumber": 309, "col_offset": 19, "nodeName": "v", "type": "chainerrl.v_functions.v_functions.FCVFunction"}, {"lineNumber": 312, "col_offset": 14, "nodeName": "ABC", "type": "Type[chainerrl.envs.abc.ABC]"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "env", "type": "chainerrl.envs.abc.ABC"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "OldStyleIdentity"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "astype", "type": "Any"}, {"lineNumber": 46, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "astype", "type": "Any"}, {"lineNumber": 47, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "a", "type": "Any"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "trpo", "type": "module"}, {"lineNumber": 51, "col_offset": 57, "nodeName": "y", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestFindOldStyleFunction"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "trpo", "type": "module"}, {"lineNumber": 56, "col_offset": 57, "nodeName": "y", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestFindOldStyleFunction"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "old_style_funcs", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestFindOldStyleFunction"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "old_style_identity", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "b", "type": "Any"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "trpo", "type": "module"}, {"lineNumber": 64, "col_offset": 57, "nodeName": "y", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestFindOldStyleFunction"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "old_style_funcs", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestFindOldStyleFunction"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "ggrad", "type": "Any"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "ggrad", "type": "Any"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "ggrads", "type": "Any"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "trpo", "type": "module"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "hessian_rows", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "astype", "type": "Any"}, {"lineNumber": 94, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "astype", "type": "Any"}, {"lineNumber": 95, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "astype", "type": "Any"}, {"lineNumber": 101, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "astype", "type": "Any"}, {"lineNumber": 102, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "self", "type": "TestHessianVectorProduct"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "trpo", "type": "module"}, {"lineNumber": 111, "col_offset": 57, "nodeName": "y", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "skipTest", "type": "Callable[[Any], None]"}, {"lineNumber": 117, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "compute_hessian_vector_product", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 120, "col_offset": 46, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 54, "nodeName": "vec", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "self", "type": "TestHessianVectorProduct"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "trpo", "type": "module"}, {"lineNumber": 126, "col_offset": 57, "nodeName": "y", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "skipTest", "type": "Callable[[Any], None]"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "compute_hessian_vector_product", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 49, "nodeName": "y", "type": "Any"}, {"lineNumber": 133, "col_offset": 52, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 60, "nodeName": "vec", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "compute_hessian", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 134, "col_offset": 41, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 137, "col_offset": 39, "nodeName": "hvp", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 141, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "path", "type": "module"}, {"lineNumber": 160, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 37, "nodeName": "agent_dirname", "type": "Union[str, unicode]"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 191, "col_offset": 23, "nodeName": "agent_dirname", "type": "Union[str, unicode]"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "agent", "type": "chainerrl.agents.trpo.TRPO"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "env", "type": "chainerrl.envs.abc.ABC"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "test_env", "type": "chainerrl.envs.abc.ABC"}, {"lineNumber": 200, "col_offset": 18, "nodeName": "steps", "type": "Any"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "tmpdir", "type": "str"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "successful_return", "type": "int"}, {"lineNumber": 206, "col_offset": 34, "nodeName": "max_episode_len", "type": "Optional[int]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "agent", "type": "chainerrl.agents.trpo.TRPO"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 218, "col_offset": 22, "nodeName": "done", "type": "bool"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "action", "type": "Any"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "total_r", "type": "float"}, {"lineNumber": 221, "col_offset": 27, "nodeName": "reward", "type": "Union[int, float]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "agent", "type": "chainerrl.agents.trpo.TRPO"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "use", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 235, "col_offset": 26, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "vf_opt", "type": "Any"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "EmpiricalNormalization", "type": "Type[chainerrl.links.empirical_normalization.EmpiricalNormalization]"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "size", "type": "Any"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "agents", "type": "module"}, {"lineNumber": 250, "col_offset": 19, "nodeName": "policy", "type": "Union[chainerrl.policies.gaussian_policy.FCGaussianPolicyWithStateIndependentCovariance, chainerrl.policies.softmax_policy.FCSoftmaxPolicy]"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "vf", "type": "chainerrl.v_functions.v_functions.FCVFunction"}, {"lineNumber": 252, "col_offset": 25, "nodeName": "vf_opt", "type": "Any"}, {"lineNumber": 253, "col_offset": 27, "nodeName": "obs_normalizer", "type": "Optional[chainerrl.links.empirical_normalization.EmpiricalNormalization]"}, {"lineNumber": 255, "col_offset": 18, "nodeName": "lambd", "type": "Any"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "entropy_coef", "type": "Any"}, {"lineNumber": 257, "col_offset": 35, "nodeName": "standardize_advantages", "type": "Any"}, {"lineNumber": 268, "col_offset": 20, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "v_functions", "type": "module"}, {"lineNumber": 272, "col_offset": 30, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 278, "col_offset": 24, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "FCSoftmaxPolicy", "type": "Type[chainerrl.policies.softmax_policy.FCSoftmaxPolicy]"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "n_dim_obs", "type": "Any"}, {"lineNumber": 281, "col_offset": 27, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 288, "col_offset": 28, "nodeName": "low", "type": "Any"}, {"lineNumber": 290, "col_offset": 17, "nodeName": "FCGaussianPolicyWithStateIndependentCovariance", "type": "Type[chainerrl.policies.gaussian_policy.FCGaussianPolicyWithStateIndependentCovariance]"}, {"lineNumber": 291, "col_offset": 16, "nodeName": "n_dim_obs", "type": "Any"}, {"lineNumber": 291, "col_offset": 27, "nodeName": "n_dim_actions", "type": "Any"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 300, "col_offset": 33, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 300, "col_offset": 66, "nodeName": "float32", "type": "Any"}, {"lineNumber": 301, "col_offset": 28, "nodeName": "fake_obs", "type": "Any"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "action_distrib", "type": "Any"}, {"lineNumber": 303, "col_offset": 26, "nodeName": "trpo", "type": "module"}, {"lineNumber": 303, "col_offset": 57, "nodeName": "kl", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "skipTest", "type": "Callable[[Any], None]"}, {"lineNumber": 313, "col_offset": 21, "nodeName": "discrete", "type": "Any"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "test", "type": "bool"}, {"lineNumber": 46, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "old_style_identity", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "a", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "old_style_identity", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "flat_grads", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "ggrad", "type": "Any"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "ggrad", "type": "Any"}, {"lineNumber": 84, "col_offset": 50, "nodeName": "ggrads", "type": "Any"}, {"lineNumber": 94, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "a", "type": "Any"}, {"lineNumber": 101, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "a", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "TestHessianVectorProduct"}, {"lineNumber": 114, "col_offset": -1, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "__version__", "type": "Any"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "old_style_funcs", "type": "List[Any]"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "self", "type": "TestHessianVectorProduct"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "self", "type": "TestHessianVectorProduct"}, {"lineNumber": 129, "col_offset": -1, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "__version__", "type": "Any"}, {"lineNumber": 130, "col_offset": 37, "nodeName": "old_style_funcs", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "self", "type": "TestHessianVectorProduct"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "count_nonzero", "type": "Any"}, {"lineNumber": 135, "col_offset": 48, "nodeName": "hvp", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "self", "type": "TestHessianVectorProduct"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "count_nonzero", "type": "Any"}, {"lineNumber": 136, "col_offset": 48, "nodeName": "hessian", "type": "numpy.ndarray"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 137, "col_offset": 44, "nodeName": "dot", "type": "Any"}, {"lineNumber": 137, "col_offset": 56, "nodeName": "vec", "type": "Any"}, {"lineNumber": 141, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "os", "type": "module"}, {"lineNumber": 190, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "agent", "type": "chainerrl.agents.trpo.TRPO"}, {"lineNumber": 191, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "test_env", "type": "chainerrl.envs.abc.ABC"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "act", "type": "Callable[[Any], Any]"}, {"lineNumber": 219, "col_offset": 35, "nodeName": "obs", "type": "Any"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "obs", "type": "Any"}, {"lineNumber": 220, "col_offset": 21, "nodeName": "reward", "type": "Union[float, int]"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "done", "type": "bool"}, {"lineNumber": 220, "col_offset": 35, "nodeName": "_", "type": "Dict[nothing, nothing]"}, {"lineNumber": 220, "col_offset": 39, "nodeName": "step", "type": "Callable[[Any], Tuple[Any, Union[float, int], bool, Dict[Any, Any]]]"}, {"lineNumber": 220, "col_offset": 53, "nodeName": "action", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "policy", "type": "Union[chainerrl.policies.gaussian_policy.FCGaussianPolicyWithStateIndependentCovariance, chainerrl.policies.softmax_policy.FCSoftmaxPolicy]"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "vf", "type": "chainerrl.v_functions.v_functions.FCVFunction"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "links", "type": "module"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "low", "type": "Any"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 245, "col_offset": 38, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "chainerrl", "type": "module"}, {"lineNumber": 255, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 257, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 268, "col_offset": 20, "nodeName": "env", "type": "chainerrl.envs.abc.ABC"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "F", "type": "Any"}, {"lineNumber": 278, "col_offset": 24, "nodeName": "env", "type": "chainerrl.envs.abc.ABC"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "policies", "type": "module"}, {"lineNumber": 283, "col_offset": 34, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 288, "col_offset": 28, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 290, "col_offset": 17, "nodeName": "policies", "type": "module"}, {"lineNumber": 293, "col_offset": 34, "nodeName": "n_hidden_channels", "type": "int"}, {"lineNumber": 294, "col_offset": 29, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 300, "col_offset": 33, "nodeName": "env", "type": "chainerrl.envs.abc.ABC"}, {"lineNumber": 300, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 306, "col_offset": -1, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 307, "col_offset": 16, "nodeName": "__version__", "type": "Any"}, {"lineNumber": 307, "col_offset": 37, "nodeName": "old_style_funcs", "type": "List[Any]"}, {"lineNumber": 313, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 314, "col_offset": 21, "nodeName": "episodic", "type": "Any"}, {"lineNumber": 314, "col_offset": 38, "nodeName": "test", "type": "bool"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "rand", "type": "Any"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "rand", "type": "Any"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "old_style_funcs", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "old_style_identity", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 55, "nodeName": "a", "type": "Any"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "old_style_funcs", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "rand", "type": "Any"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "rand", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "F", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "rand", "type": "Any"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "rand", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "F", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 44, "nodeName": "hessian", "type": "numpy.ndarray"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "agent", "type": "chainerrl.agents.trpo.TRPO"}, {"lineNumber": 220, "col_offset": 39, "nodeName": "test_env", "type": "chainerrl.envs.abc.ABC"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "get_device_from_id", "type": "Any"}, {"lineNumber": 234, "col_offset": 44, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "chainerrl", "type": "module"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "obs_normalizer", "type": "chainerrl.links.empirical_normalization.EmpiricalNormalization"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "F", "type": "Any"}, {"lineNumber": 288, "col_offset": 28, "nodeName": "env", "type": "chainerrl.envs.abc.ABC"}, {"lineNumber": 294, "col_offset": 29, "nodeName": "F", "type": "Any"}, {"lineNumber": 307, "col_offset": 16, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 314, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "env", "type": "chainerrl.envs.abc.ABC"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "chainer", "type": "Any"}]