[{"lineNumber": 11, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "test_call", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "func_a", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "b_test_mode", "type": "List[Union[bool, Any]]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "c_test_mode", "type": "List[Union[bool, Any]]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "c_hoge_mode", "type": "List[Union[bool, Any]]"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "hoge", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "_test_call", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "_test_call", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "_test_call", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "b_test_mode", "type": "List[Union[bool, Any]]"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "c_test_mode", "type": "List[Union[bool, Any]]"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "c_hoge_mode", "type": "List[Union[bool, Any]]"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "seq", "type": "chainerrl.links.sequence.Sequence"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "seq", "type": "chainerrl.links.sequence.Sequence"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "seq", "type": "chainerrl.links.sequence.Sequence"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "seq", "type": "chainerrl.links.sequence.Sequence"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "Sequence", "type": "Type[chainerrl.links.sequence.Sequence]"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "func_a", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "func_b", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 44, "nodeName": "func_c", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "Sequence", "type": "Type[chainerrl.links.sequence.Sequence]"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "Sequence", "type": "Type[chainerrl.links.sequence.Sequence]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "self", "type": "TestSequence"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "self", "type": "TestSequence"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "b_test_mode", "type": "List[Union[bool, Any]]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "TestSequence"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "c_test_mode", "type": "List[Union[bool, Any]]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "self", "type": "TestSequence"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "c_hoge_mode", "type": "List[Union[bool, Any]]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "TestSequence"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "TestSequence"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "b_test_mode", "type": "List[Union[bool, Any]]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "TestSequence"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "c_test_mode", "type": "List[Union[bool, Any]]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "self", "type": "TestSequence"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "c_hoge_mode", "type": "List[Union[bool, Any]]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "TestSequence"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "self", "type": "TestSequence"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "b_test_mode", "type": "List[Union[bool, Any]]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "TestSequence"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "c_test_mode", "type": "List[Union[bool, Any]]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "TestSequence"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "c_hoge_mode", "type": "List[Union[bool, Any]]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "TestSequence"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "TestSequence"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "b_test_mode", "type": "List[Union[bool, Any]]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "TestSequence"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "c_test_mode", "type": "List[Union[bool, Any]]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "TestSequence"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "c_hoge_mode", "type": "List[Union[bool, Any]]"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "Sequence", "type": "Type[chainerrl.links.sequence.Sequence]"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "func_a", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 45, "nodeName": "func_b", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "func_c", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "Sequence", "type": "Type[chainerrl.links.sequence.Sequence]"}, {"lineNumber": 60, "col_offset": 37, "nodeName": "func_a", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "Sequence", "type": "Type[chainerrl.links.sequence.Sequence]"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "func_b", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 46, "nodeName": "Sequence", "type": "Type[chainerrl.links.sequence.Sequence]"}, {"lineNumber": 61, "col_offset": 55, "nodeName": "func_c", "type": "Callable[..., Any]"}]