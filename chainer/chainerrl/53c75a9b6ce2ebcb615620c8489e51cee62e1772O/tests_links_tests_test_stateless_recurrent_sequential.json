[{"lineNumber": 21, "col_offset": 0, "nodeName": "_step_lstm", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "_step_rnn_tanh", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "_test_n_step_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "test_n_step_forward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "test_n_step_forward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "_test_n_step_forward_with_tuple_input", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "test_n_step_forward_with_tuple_input_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "test_n_step_forward_with_tuple_input_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "_test_n_step_forward_with_tuple_output", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "test_n_step_forward_with_tuple_output_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "test_n_step_forward_with_tuple_output_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "_test_mask_recurrent_state_at", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "test_mask_recurrent_state_at_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "test_mask_recurrent_state_at_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "_test_three_recurrent_children", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "test_three_recurrent_children_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "test_three_recurrent_children_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "install_aliases", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "h", "type": "Any"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "unittest", "type": "module"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "concat_input", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "split_output", "type": "Callable[[Any], Any]"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "standard_library", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "NStepLSTM", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "xp", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "h", "type": "Any"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "c", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "_lstm", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "h", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "c", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "h", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "NStepRNNTanh", "type": "Any"}, {"lineNumber": 43, "col_offset": 7, "nodeName": "state", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "xp", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "w0", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "w1", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "ws", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "b0", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "b1", "type": "Any"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "bs", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "h", "type": "Any"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "h", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "in_size", "type": "int"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "out_size", "type": "int"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "xp", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "linear1", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "linear2", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 102, "col_offset": 55, "nodeName": "concat_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 103, "col_offset": 52, "nodeName": "split_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "manual_split_out", "type": "List[Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "in_size", "type": "int"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "out_size", "type": "int"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "xp", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "in_size", "type": "int"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "out_size", "type": "int"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "xp", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "in_size", "type": "int"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "out_size", "type": "int"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "xp", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "transposed_x", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "in_size", "type": "int"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "out_size", "type": "int"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "xp", "type": "Any"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "L", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "ws", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "bs", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "state", "type": "Tuple[None, None]"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "c", "type": "Any"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "ws", "type": "Any"}, {"lineNumber": 33, "col_offset": 38, "nodeName": "bs", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "h", "type": "Any"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "c", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "L", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "ws", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "bs", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "F", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "StatelessRecurrentSequential", "type": "Type[chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "elu", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "_layers", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "_layers", "type": "Any"}, {"lineNumber": 76, "col_offset": 18, "nodeName": "_layers", "type": "Any"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "_layers", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "n_step_forward", "type": "Callable[[Any, Any, Any], Tuple[Any, Tuple[Any, ...]]]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "n_step_forward", "type": "Callable[[Any, Any, Any], Tuple[Any, Tuple[Any, ...]]]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "split_out", "type": "Any"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "seq_x", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "seq_out", "type": "Any"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 42, "nodeName": "split_out", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "concat_rnn_h", "type": "Any"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "split_rnn_h", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 104, "col_offset": 56, "nodeName": "array", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 105, "col_offset": 56, "nodeName": "array", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 106, "col_offset": 55, "nodeName": "array", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "sorted_seqs_x", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "transposed_x", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "lstm_h", "type": "None"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "lstm_c", "type": "None"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "rnn_h", "type": "None"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "ys", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "batch", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "transposed_x", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "sorted_seqs_y", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "seqs_y", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "seqs_y", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "manual_n_step_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 49, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "man_seq_out", "type": "Any"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "seq_out", "type": "Any"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 134, "col_offset": 40, "nodeName": "manual_split_out", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 58, "nodeName": "split_out", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "concat_grad", "type": "Any"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "grad", "type": "Any"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "grad", "type": "Any"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "grad", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "array", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 147, "col_offset": 31, "nodeName": "array", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "_test_n_step_forward", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "_test_n_step_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "StatelessRecurrentSequential", "type": "Type[chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "concat_input", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "n_step_forward", "type": "Callable[[Any, Any, Any], Tuple[Any, Tuple[Any, ...]]]"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "seqs_x", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 187, "col_offset": 33, "nodeName": "n_step_forward", "type": "Callable[[Any, Any, Any], Tuple[Any, Tuple[Any, ...]]]"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "seqs_x", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "split_out", "type": "Any"}, {"lineNumber": 189, "col_offset": 41, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "seq_x", "type": "Any"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "seq_out", "type": "Any"}, {"lineNumber": 191, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 191, "col_offset": 34, "nodeName": "seqs_x", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 191, "col_offset": 42, "nodeName": "split_out", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "_test_n_step_forward_with_tuple_input", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "_test_n_step_forward_with_tuple_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "StatelessRecurrentSequential", "type": "Type[chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential]"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "split_output", "type": "Callable[[Any], Any]"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 231, "col_offset": 35, "nodeName": "n_step_forward", "type": "Callable[[Any, Any, Any], Tuple[Any, Tuple[Any, ...]]]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 233, "col_offset": 30, "nodeName": "concat_out", "type": "Any"}, {"lineNumber": 233, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 241, "col_offset": 33, "nodeName": "n_step_forward", "type": "Callable[[Any, Any, Any], Tuple[Any, Tuple[Any, ...]]]"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 243, "col_offset": 30, "nodeName": "split_out", "type": "Any"}, {"lineNumber": 243, "col_offset": 41, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 44, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 44, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "seq_x", "type": "Any"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "seq_out", "type": "Any"}, {"lineNumber": 247, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 247, "col_offset": 34, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 247, "col_offset": 42, "nodeName": "split_out", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "_test_n_step_forward_with_tuple_output", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "_test_n_step_forward_with_tuple_output", "type": "Callable[[Any], Any]"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "StatelessRecurrentSequential", "type": "Type[chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential]"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "elu", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 276, "col_offset": 11, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "transpose_sequence", "type": "Any"}, {"lineNumber": 284, "col_offset": 44, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "nstep_out", "type": "Any"}, {"lineNumber": 291, "col_offset": 19, "nodeName": "nstep_rs", "type": "Tuple[Any, ...]"}, {"lineNumber": 291, "col_offset": 30, "nodeName": "no_mask_n_step_forward", "type": "Callable[[], Any]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "nomask_out", "type": "Any"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "nomask_rs", "type": "Any"}, {"lineNumber": 297, "col_offset": 32, "nodeName": "no_mask_forward_twice", "type": "Callable[[], Any]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 302, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 302, "col_offset": 54, "nodeName": "array", "type": "Any"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "rs", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "mask0_out", "type": "Any"}, {"lineNumber": 309, "col_offset": 19, "nodeName": "mask0_rs", "type": "Any"}, {"lineNumber": 309, "col_offset": 30, "nodeName": "mask0_forward_twice", "type": "Callable[[], Any]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "rs", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "mask1_out", "type": "Any"}, {"lineNumber": 325, "col_offset": 19, "nodeName": "mask1_rs", "type": "Any"}, {"lineNumber": 325, "col_offset": 30, "nodeName": "mask1_forward_twice", "type": "Callable[[], Any]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "rs", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "mask01_out", "type": "Any"}, {"lineNumber": 341, "col_offset": 20, "nodeName": "mask01_rs", "type": "Any"}, {"lineNumber": 341, "col_offset": 32, "nodeName": "mask01_forward_twice", "type": "Callable[[], Any]"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "rs0", "type": "Any"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "rs1", "type": "Any"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "concat_rs", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "getcon_out", "type": "Any"}, {"lineNumber": 360, "col_offset": 20, "nodeName": "getcon_rs", "type": "Any"}, {"lineNumber": 360, "col_offset": 32, "nodeName": "get_and_concat_rs_forward", "type": "Callable[[], Any]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 361, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 361, "col_offset": 55, "nodeName": "array", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "_test_mask_recurrent_state_at", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "_test_mask_recurrent_state_at", "type": "Callable[[Any], Any]"}, {"lineNumber": 379, "col_offset": 15, "nodeName": "StatelessRecurrentSequential", "type": "Type[chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential]"}, {"lineNumber": 385, "col_offset": 11, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 397, "col_offset": 11, "nodeName": "rs", "type": "Tuple[Any, ...]"}, {"lineNumber": 397, "col_offset": 16, "nodeName": "n_step_forward", "type": "Callable[[Any, Any, Any], Tuple[Any, Tuple[Any, ...]]]"}, {"lineNumber": 397, "col_offset": 36, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 398, "col_offset": 11, "nodeName": "_", "type": "Tuple[Any, ...]"}, {"lineNumber": 398, "col_offset": 15, "nodeName": "n_step_forward", "type": "Callable[[Any, Any, Any], Tuple[Any, Tuple[Any, ...]]]"}, {"lineNumber": 398, "col_offset": 35, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 398, "col_offset": 43, "nodeName": "rs", "type": "Tuple[Any, ...]"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 400, "col_offset": 11, "nodeName": "rs", "type": "Tuple[Any, ...]"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "n_step_forward", "type": "Callable[[Any, Any, Any], Tuple[Any, Tuple[Any, ...]]]"}, {"lineNumber": 400, "col_offset": 36, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "_", "type": "Tuple[Any, ...]"}, {"lineNumber": 401, "col_offset": 15, "nodeName": "n_step_forward", "type": "Callable[[Any, Any, Any], Tuple[Any, Tuple[Any, ...]]]"}, {"lineNumber": 401, "col_offset": 35, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 401, "col_offset": 43, "nodeName": "rs", "type": "Tuple[Any, ...]"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "_test_mask_recurrent_state_at", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "_test_mask_recurrent_state_at", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "ws", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "bs", "type": "Any"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "state", "type": "Tuple[None, None]"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "out_size", "type": "Any"}, {"lineNumber": 29, "col_offset": 52, "nodeName": "float32", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "out_size", "type": "Any"}, {"lineNumber": 30, "col_offset": 52, "nodeName": "float32", "type": "Any"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 33, "col_offset": 38, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "ws", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "bs", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "out_size", "type": "Any"}, {"lineNumber": 45, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "linear", "type": "Any"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "w0", "type": "Any"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "b0", "type": "Any"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "linear", "type": "Any"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "h", "type": "Any"}, {"lineNumber": 50, "col_offset": 49, "nodeName": "w1", "type": "Any"}, {"lineNumber": 50, "col_offset": 53, "nodeName": "b1", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "in_size", "type": "int"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "F", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "NStepLSTM", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "NStepRNNTanh", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "out_size", "type": "int"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "F", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "use", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 76, "col_offset": 18, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 80, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 81, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 82, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "concat_out", "type": "Any"}, {"lineNumber": 87, "col_offset": 47, "nodeName": "out_size", "type": "int"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "split_out", "type": "Any"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 92, "col_offset": 45, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "concat_out", "type": "Any"}, {"lineNumber": 102, "col_offset": 9, "nodeName": "concat_lstm_h", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "concat_lstm_c", "type": "Any"}, {"lineNumber": 103, "col_offset": 9, "nodeName": "split_lstm_h", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "split_lstm_c", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "concat_lstm_h", "type": "Any"}, {"lineNumber": 104, "col_offset": 56, "nodeName": "split_lstm_h", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "concat_lstm_c", "type": "Any"}, {"lineNumber": 105, "col_offset": 56, "nodeName": "split_lstm_c", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "concat_rnn_h", "type": "Any"}, {"lineNumber": 106, "col_offset": 55, "nodeName": "split_rnn_h", "type": "Any"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "transpose_sequence", "type": "Any"}, {"lineNumber": 111, "col_offset": 48, "nodeName": "sorted_seqs_x", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "h", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "h", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "h", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "transpose_sequence", "type": "Any"}, {"lineNumber": 128, "col_offset": 49, "nodeName": "ys", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 139, "col_offset": 58, "nodeName": "W", "type": "Any"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 141, "col_offset": 51, "nodeName": "W", "type": "Any"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 143, "col_offset": 58, "nodeName": "W", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "concat_grad", "type": "Any"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "split_grad", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "concat_grad", "type": "Any"}, {"lineNumber": 147, "col_offset": 31, "nodeName": "manual_split_grad", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "concat", "type": "Any"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "NStepRNNTanh", "type": "Any"}, {"lineNumber": 165, "col_offset": 30, "nodeName": "in_size", "type": "int"}, {"lineNumber": 165, "col_offset": 39, "nodeName": "out_size", "type": "int"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "use", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "concat_out", "type": "Any"}, {"lineNumber": 184, "col_offset": 47, "nodeName": "out_size", "type": "int"}, {"lineNumber": 187, "col_offset": 33, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "split_out", "type": "Any"}, {"lineNumber": 190, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 190, "col_offset": 45, "nodeName": "seqs_x", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "concat_out", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 212, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "NStepRNNTanh", "type": "Any"}, {"lineNumber": 215, "col_offset": 30, "nodeName": "in_size", "type": "int"}, {"lineNumber": 215, "col_offset": 39, "nodeName": "out_size", "type": "int"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "use", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 226, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 227, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 231, "col_offset": 35, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 234, "col_offset": 29, "nodeName": "concat_out", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 241, "col_offset": 33, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "split_out", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "split_out", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 246, "col_offset": 30, "nodeName": "split_out", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 250, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 271, "col_offset": 21, "nodeName": "in_size", "type": "int"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "F", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "NStepGRU", "type": "Any"}, {"lineNumber": 273, "col_offset": 29, "nodeName": "out_size", "type": "int"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "F", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "use", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 281, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 282, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "F", "type": "Any"}, {"lineNumber": 285, "col_offset": 33, "nodeName": "transposed_x", "type": "Any"}, {"lineNumber": 288, "col_offset": 41, "nodeName": "n_step_forward", "type": "Callable[[Any, Any, Any], Tuple[Any, Tuple[Any, ...]]]"}, {"lineNumber": 289, "col_offset": 16, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 290, "col_offset": 66, "nodeName": "nstep_rs", "type": "Tuple[Any, ...]"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 295, "col_offset": 15, "nodeName": "rs", "type": "Any"}, {"lineNumber": 295, "col_offset": 20, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 296, "col_offset": 19, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 296, "col_offset": 41, "nodeName": "rs", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "nomask_out", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "rs", "type": "Any"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 307, "col_offset": 17, "nodeName": "mask_recurrent_state_at", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 307, "col_offset": 46, "nodeName": "rs", "type": "Any"}, {"lineNumber": 308, "col_offset": 19, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 308, "col_offset": 41, "nodeName": "rs", "type": "Any"}, {"lineNumber": 310, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 310, "col_offset": 31, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 322, "col_offset": 15, "nodeName": "rs", "type": "Any"}, {"lineNumber": 322, "col_offset": 20, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 323, "col_offset": 17, "nodeName": "mask_recurrent_state_at", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 323, "col_offset": 46, "nodeName": "rs", "type": "Any"}, {"lineNumber": 324, "col_offset": 19, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 324, "col_offset": 41, "nodeName": "rs", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 330, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 330, "col_offset": 31, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "rs", "type": "Any"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 339, "col_offset": 17, "nodeName": "mask_recurrent_state_at", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 339, "col_offset": 46, "nodeName": "rs", "type": "Any"}, {"lineNumber": 340, "col_offset": 19, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 340, "col_offset": 41, "nodeName": "rs", "type": "Any"}, {"lineNumber": 342, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 342, "col_offset": 31, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 347, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 347, "col_offset": 31, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 355, "col_offset": 15, "nodeName": "rs", "type": "Any"}, {"lineNumber": 355, "col_offset": 20, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 356, "col_offset": 18, "nodeName": "get_recurrent_state_at", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 356, "col_offset": 46, "nodeName": "rs", "type": "Any"}, {"lineNumber": 357, "col_offset": 18, "nodeName": "get_recurrent_state_at", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 357, "col_offset": 46, "nodeName": "rs", "type": "Any"}, {"lineNumber": 358, "col_offset": 24, "nodeName": "concatenate_recurrent_states", "type": "Callable[[Any], Any]"}, {"lineNumber": 359, "col_offset": 19, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 359, "col_offset": 41, "nodeName": "concat_rs", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 363, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 365, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "NStepLSTM", "type": "Any"}, {"lineNumber": 380, "col_offset": 27, "nodeName": "in_size", "type": "int"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "NStepGRU", "type": "Any"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "NStepRNNTanh", "type": "Any"}, {"lineNumber": 382, "col_offset": 33, "nodeName": "out_size", "type": "int"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "use", "type": "Any"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 391, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 392, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 393, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 397, "col_offset": 16, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 398, "col_offset": 15, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 401, "col_offset": 15, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 29, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 30, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 45, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "F", "type": "Any"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "F", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 80, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "seq_out", "type": "Any"}, {"lineNumber": 94, "col_offset": 57, "nodeName": "out_size", "type": "int"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "concat", "type": "Any"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "split_out", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "F", "type": "Any"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "lstm_h", "type": "None"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "linear1", "type": "Any"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "batch", "type": "Any"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "elu", "type": "Any"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "h", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "h", "type": "Any"}, {"lineNumber": 123, "col_offset": 38, "nodeName": "_step_lstm", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 49, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 123, "col_offset": 55, "nodeName": "h", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "linear2", "type": "Any"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "h", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "h", "type": "Any"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "rnn_h", "type": "Any"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "_step_rnn_tanh", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 125, "col_offset": 42, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 125, "col_offset": 47, "nodeName": "h", "type": "Any"}, {"lineNumber": 125, "col_offset": 50, "nodeName": "rnn_h", "type": "None"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "h", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "F", "type": "Any"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "sorted_seqs_y", "type": "Any"}, {"lineNumber": 130, "col_offset": 40, "nodeName": "sorted_seqs_y", "type": "Any"}, {"lineNumber": 130, "col_offset": 58, "nodeName": "sorted_seqs_y", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "man_seq_out", "type": "Any"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "seq_out", "type": "Any"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "sum", "type": "Any"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "concat_out", "type": "Any"}, {"lineNumber": 139, "col_offset": 58, "nodeName": "linear1", "type": "Any"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "sum", "type": "Any"}, {"lineNumber": 141, "col_offset": 51, "nodeName": "linear1", "type": "Any"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "sum", "type": "Any"}, {"lineNumber": 143, "col_offset": 58, "nodeName": "linear1", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "F", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 175, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 176, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 177, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 178, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "seq_out", "type": "Any"}, {"lineNumber": 192, "col_offset": 57, "nodeName": "out_size", "type": "int"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "concat", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "split_out", "type": "Any"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "split_axis", "type": "Any"}, {"lineNumber": 212, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 226, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "concat_out", "type": "Any"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "concat_out", "type": "Any"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "concat_out", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 248, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 248, "col_offset": 33, "nodeName": "seq_out", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "concat", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "concat", "type": "Any"}, {"lineNumber": 257, "col_offset": 21, "nodeName": "concat_out", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 281, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 288, "col_offset": 41, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 290, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "nomask_nstep_out", "type": "Any"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "transposed_x", "type": "Any"}, {"lineNumber": 296, "col_offset": 24, "nodeName": "transposed_x", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "nstep_out", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 302, "col_offset": 35, "nodeName": "nstep_rs", "type": "Tuple[Any, ...]"}, {"lineNumber": 302, "col_offset": 54, "nodeName": "nomask_rs", "type": "Any"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "transposed_x", "type": "Any"}, {"lineNumber": 307, "col_offset": 17, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 308, "col_offset": 24, "nodeName": "transposed_x", "type": "Any"}, {"lineNumber": 310, "col_offset": 13, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "nstep_out", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "mask0_out", "type": "Any"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "transposed_x", "type": "Any"}, {"lineNumber": 323, "col_offset": 17, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "transposed_x", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "nstep_out", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "mask1_out", "type": "Any"}, {"lineNumber": 330, "col_offset": 13, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 338, "col_offset": 25, "nodeName": "transposed_x", "type": "Any"}, {"lineNumber": 339, "col_offset": 17, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 340, "col_offset": 24, "nodeName": "transposed_x", "type": "Any"}, {"lineNumber": 342, "col_offset": 13, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 344, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 347, "col_offset": 13, "nodeName": "self", "type": "TestStatelessRecurrentSequential"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 349, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 350, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 355, "col_offset": 25, "nodeName": "transposed_x", "type": "Any"}, {"lineNumber": 356, "col_offset": 18, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 357, "col_offset": 18, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 358, "col_offset": 24, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 358, "col_offset": 59, "nodeName": "rs0", "type": "Any"}, {"lineNumber": 358, "col_offset": 64, "nodeName": "rs1", "type": "Any"}, {"lineNumber": 359, "col_offset": 24, "nodeName": "transposed_x", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 361, "col_offset": 35, "nodeName": "getcon_rs", "type": "Any"}, {"lineNumber": 361, "col_offset": 55, "nodeName": "nomask_rs", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "nstep_out", "type": "Any"}, {"lineNumber": 363, "col_offset": 35, "nodeName": "getcon_out", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "nstep_out", "type": "Any"}, {"lineNumber": 365, "col_offset": 35, "nodeName": "getcon_out", "type": "Any"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "rseq", "type": "chainerrl.links.stateless_recurrent_sequential.StatelessRecurrentSequential"}, {"lineNumber": 391, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 392, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 393, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "get_device_from_id", "type": "Any"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 94, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 94, "col_offset": 49, "nodeName": "seq_x", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "F", "type": "Any"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "F", "type": "Any"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "lstm_h", "type": "Any"}, {"lineNumber": 123, "col_offset": 28, "nodeName": "lstm_c", "type": "Any"}, {"lineNumber": 123, "col_offset": 59, "nodeName": "lstm_h", "type": "None"}, {"lineNumber": 123, "col_offset": 67, "nodeName": "lstm_c", "type": "None"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "F", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "ys", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "F", "type": "Any"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "F", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "concat", "type": "Any"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "split_out", "type": "Any"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "F", "type": "Any"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "concat", "type": "Any"}, {"lineNumber": 143, "col_offset": 28, "nodeName": "manual_split_out", "type": "List[Any]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "get_device_from_id", "type": "Any"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 175, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 192, "col_offset": 49, "nodeName": "seq_x", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "F", "type": "Any"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "F", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "get_device_from_id", "type": "Any"}, {"lineNumber": 220, "col_offset": 44, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 249, "col_offset": 29, "nodeName": "seq_out", "type": "Any"}, {"lineNumber": 249, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 249, "col_offset": 52, "nodeName": "seq_x", "type": "Any"}, {"lineNumber": 250, "col_offset": 29, "nodeName": "seq_out", "type": "Any"}, {"lineNumber": 250, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 250, "col_offset": 52, "nodeName": "seq_x", "type": "Any"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "seq_out", "type": "Any"}, {"lineNumber": 251, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 251, "col_offset": 52, "nodeName": "seq_x", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "F", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "F", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "get_device_from_id", "type": "Any"}, {"lineNumber": 277, "col_offset": 44, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 290, "col_offset": 19, "nodeName": "F", "type": "Any"}, {"lineNumber": 290, "col_offset": 54, "nodeName": "out_size", "type": "int"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "nstep_out", "type": "Any"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "mask0_out", "type": "Any"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "nstep_out", "type": "Any"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "mask1_out", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 344, "col_offset": 16, "nodeName": "nstep_out", "type": "Any"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "mask01_out", "type": "Any"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 349, "col_offset": 16, "nodeName": "nstep_out", "type": "Any"}, {"lineNumber": 350, "col_offset": 16, "nodeName": "mask01_out", "type": "Any"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "get_device_from_id", "type": "Any"}, {"lineNumber": 386, "col_offset": 44, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "F", "type": "Any"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "F", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "concat", "type": "Any"}, {"lineNumber": 256, "col_offset": 26, "nodeName": "seq_out", "type": "Any"}, {"lineNumber": 256, "col_offset": 37, "nodeName": "split_out", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 80, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 226, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 227, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "F", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 281, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 282, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 391, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 392, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 393, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "xp", "type": "Any"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "xp", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "xp", "type": "Any"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "xp", "type": "Any"}]