[{"lineNumber": 391, "col_offset": 0, "nodeName": "exp_return_of_episode", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "test_append_and_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "test_batch_experiences", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "test_stop_current_episode", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "test_save_and_load", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "test_append_and_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "test_save_and_load", "type": "Callable[[Any], Any]"}, {"lineNumber": 256, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "test_append_and_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "test_capacity", "type": "Callable[[Any], Any]"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "test_save_and_load", "type": "Callable[[Any], Any]"}, {"lineNumber": 413, "col_offset": 42, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "test_append_and_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 468, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "_sample1", "type": "Callable[[Any], Any]"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "_set1", "type": "Callable[[Any], Any]"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "test_fail_noupdate", "type": "Callable[[Any], Any]"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "test_fail_update_first", "type": "Callable[[Any], Any]"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "test_fail_doubleupdate", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "install_aliases", "type": "Any"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 256, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 413, "col_offset": 42, "nodeName": "unittest", "type": "module"}, {"lineNumber": 468, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "standard_library", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "s1", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "s2", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "experiences", "type": "List[List[Dict[Any, Any]]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "correct_item", "type": "collections.deque[nothing]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "filename", "type": "Union[str, unicode]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "s2", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "filename", "type": "Union[str, unicode]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "s5", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "s5", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "s2e", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 259, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 260, "col_offset": 20, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "s1", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "s2", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "s3", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "s3", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "s4", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 318, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 338, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 339, "col_offset": 20, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "filename", "type": "Union[str, unicode]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "s2", "type": "Any"}, {"lineNumber": 392, "col_offset": 11, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 32, "col_offset": 42, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 32, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "four_step_transition", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "batch_experiences", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "experiences", "type": "List[List[Dict[Any, Any]]]"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 84, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "stop_current_episode", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 18, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 107, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "filename", "type": "Union[str, unicode]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "filename", "type": "Union[str, unicode]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "EpisodicReplayBuffer", "type": "Any"}, {"lineNumber": 160, "col_offset": 50, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "trans", "type": "Dict[Any, Any]"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "n_episodes", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "ep", "type": "Any"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "s", "type": "Any"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 18, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "EpisodicReplayBuffer", "type": "Any"}, {"lineNumber": 193, "col_offset": 50, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "stop_current_episode", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "stop_current_episode", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "n_episodes", "type": "Any"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 214, "col_offset": 32, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "filename", "type": "Union[str, unicode]"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "EpisodicReplayBuffer", "type": "Any"}, {"lineNumber": 218, "col_offset": 50, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 224, "col_offset": 18, "nodeName": "filename", "type": "Union[str, unicode]"}, {"lineNumber": 227, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 235, "col_offset": 14, "nodeName": "sample_episodes", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "n_episodes", "type": "Any"}, {"lineNumber": 259, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 260, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "PrioritizedReplayBuffer", "type": "Any"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 271, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 271, "col_offset": 23, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 277, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 282, "col_offset": 32, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 285, "col_offset": 38, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 291, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 304, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "assertNotAlmostEqual", "type": "Callable"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 309, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 318, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 319, "col_offset": 11, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 322, "col_offset": 15, "nodeName": "PrioritizedReplayBuffer", "type": "Any"}, {"lineNumber": 322, "col_offset": 53, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 324, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 324, "col_offset": 23, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 328, "col_offset": 36, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 331, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 335, "col_offset": 36, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 338, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 339, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 341, "col_offset": 18, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 343, "col_offset": 15, "nodeName": "PrioritizedReplayBuffer", "type": "Any"}, {"lineNumber": 343, "col_offset": 53, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 347, "col_offset": 23, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 348, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 348, "col_offset": 23, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 353, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 353, "col_offset": 38, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 354, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 356, "col_offset": 29, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 363, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 363, "col_offset": 32, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 364, "col_offset": 18, "nodeName": "filename", "type": "Union[str, unicode]"}, {"lineNumber": 367, "col_offset": 15, "nodeName": "PrioritizedReplayBuffer", "type": "Any"}, {"lineNumber": 367, "col_offset": 53, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 374, "col_offset": 18, "nodeName": "filename", "type": "Union[str, unicode]"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 380, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 416, "col_offset": 15, "nodeName": "PrioritizedEpisodicReplayBuffer", "type": "Any"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "trans", "type": "Dict[Any, Any]"}, {"lineNumber": 429, "col_offset": 25, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 433, "col_offset": 25, "nodeName": "n_episodes", "type": "Any"}, {"lineNumber": 436, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 441, "col_offset": 15, "nodeName": "return_sample_weights", "type": "Any"}, {"lineNumber": 448, "col_offset": 15, "nodeName": "wait_priority_after_sampling", "type": "Any"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 452, "col_offset": 15, "nodeName": "return_sample_weights", "type": "Any"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "wait_priority_after_sampling", "type": "Any"}, {"lineNumber": 461, "col_offset": 16, "nodeName": "ep", "type": "Any"}, {"lineNumber": 461, "col_offset": 22, "nodeName": "s", "type": "Any"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 471, "col_offset": 20, "nodeName": "PrioritizedReplayBuffer", "type": "Any"}, {"lineNumber": 472, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "_sample1", "type": "Callable[[], Any]"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 484, "col_offset": 26, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 484, "col_offset": 42, "nodeName": "_sample1", "type": "Callable[[], Any]"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 487, "col_offset": 26, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 487, "col_offset": 42, "nodeName": "_set1", "type": "Callable[[], Any]"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "_sample1", "type": "Callable[[], Any]"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "_set1", "type": "Callable[[], Any]"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 492, "col_offset": 26, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 492, "col_offset": 42, "nodeName": "_set1", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "collections", "type": "module"}, {"lineNumber": 37, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "s1", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "copy", "type": "module"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "experiences", "type": "List[List[Dict[Any, Any]]]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "experiences", "type": "List[List[Dict[Any, Any]]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "four_step_transition", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "experiences", "type": "List[List[Dict[Any, Any]]]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 79, "col_offset": 67, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "collections", "type": "module"}, {"lineNumber": 89, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 105, "col_offset": 18, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "collections", "type": "module"}, {"lineNumber": 109, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "copy", "type": "module"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 36, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 36, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 36, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 36, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "sample", "type": "Any"}, {"lineNumber": 174, "col_offset": 28, "nodeName": "k", "type": "int"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "k", "type": "int"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "sample_episodes", "type": "Any"}, {"lineNumber": 178, "col_offset": 37, "nodeName": "k", "type": "int"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 37, "nodeName": "k", "type": "int"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "sample_episodes", "type": "Any"}, {"lineNumber": 181, "col_offset": 37, "nodeName": "k", "type": "int"}, {"lineNumber": 191, "col_offset": 18, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 198, "col_offset": 22, "nodeName": "n", "type": "int"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 210, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 227, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "s5", "type": "Any"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 231, "col_offset": 26, "nodeName": "n", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 232, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 235, "col_offset": 14, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 236, "col_offset": 29, "nodeName": "s2e", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 245, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "normalize_by_max", "type": "Any"}, {"lineNumber": 265, "col_offset": 22, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "collections", "type": "module"}, {"lineNumber": 270, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 272, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 274, "col_offset": 32, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 276, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 277, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 279, "col_offset": 29, "nodeName": "s1", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "copy", "type": "module"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 289, "col_offset": 22, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 291, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 293, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 297, "col_offset": 36, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 298, "col_offset": 36, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 300, "col_offset": 36, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 301, "col_offset": 36, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 304, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 309, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 322, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 325, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 328, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 328, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 333, "col_offset": 22, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 335, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 341, "col_offset": 18, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 343, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 344, "col_offset": 63, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 347, "col_offset": 23, "nodeName": "collections", "type": "module"}, {"lineNumber": 347, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 349, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 351, "col_offset": 32, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 353, "col_offset": 24, "nodeName": "copy", "type": "module"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 357, "col_offset": 22, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 360, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 360, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 363, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 367, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 368, "col_offset": 63, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 371, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 377, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 377, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 380, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 384, "col_offset": 36, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 385, "col_offset": 36, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 387, "col_offset": 36, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 388, "col_offset": 36, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "exp", "type": "Any"}, {"lineNumber": 392, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 392, "col_offset": 44, "nodeName": "episode", "type": "Any"}, {"lineNumber": 416, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 417, "col_offset": 21, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 418, "col_offset": 29, "nodeName": "normalize_by_max", "type": "Any"}, {"lineNumber": 419, "col_offset": 34, "nodeName": "default_priority_func", "type": "Any"}, {"lineNumber": 420, "col_offset": 26, "nodeName": "uniform_ratio", "type": "Any"}, {"lineNumber": 421, "col_offset": 41, "nodeName": "wait_priority_after_sampling", "type": "Any"}, {"lineNumber": 422, "col_offset": 34, "nodeName": "return_sample_weights", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 432, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 432, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 433, "col_offset": 25, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 436, "col_offset": 16, "nodeName": "sample", "type": "Any"}, {"lineNumber": 436, "col_offset": 28, "nodeName": "k", "type": "int"}, {"lineNumber": 437, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 437, "col_offset": 37, "nodeName": "k", "type": "int"}, {"lineNumber": 440, "col_offset": 18, "nodeName": "sample_episodes", "type": "Any"}, {"lineNumber": 440, "col_offset": 39, "nodeName": "k", "type": "int"}, {"lineNumber": 441, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 442, "col_offset": 24, "nodeName": "ret", "type": "Any"}, {"lineNumber": 446, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 446, "col_offset": 20, "nodeName": "ret", "type": "Any"}, {"lineNumber": 448, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 451, "col_offset": 18, "nodeName": "sample_episodes", "type": "Any"}, {"lineNumber": 451, "col_offset": 39, "nodeName": "k", "type": "int"}, {"lineNumber": 452, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 453, "col_offset": 24, "nodeName": "ret", "type": "Any"}, {"lineNumber": 457, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 457, "col_offset": 20, "nodeName": "ret", "type": "Any"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 471, "col_offset": 20, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 474, "col_offset": 27, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 484, "col_offset": 42, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 487, "col_offset": 42, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 492, "col_offset": 42, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "batch", "type": "Any"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "batch", "type": "Any"}, {"lineNumber": 79, "col_offset": 72, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "s", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "s", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "t0", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "t1", "type": "Any"}, {"lineNumber": 184, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "ep", "type": "Any"}, {"lineNumber": 198, "col_offset": 27, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 206, "col_offset": 22, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 232, "col_offset": 32, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 29, "nodeName": "s2e", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 239, "col_offset": 29, "nodeName": "s2e", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 241, "col_offset": 29, "nodeName": "s2e", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "s2e", "type": "Any"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 275, "col_offset": 26, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "s1", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "s2", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "s2", "type": "Any"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 297, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 298, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 300, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 301, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 327, "col_offset": 26, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 352, "col_offset": 26, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 363, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "s2", "type": "Any"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "s2", "type": "Any"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 384, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 385, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 387, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 388, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 392, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 417, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 418, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 419, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 420, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 421, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 422, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 428, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 436, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 437, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 437, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 437, "col_offset": 33, "nodeName": "s", "type": "Any"}, {"lineNumber": 440, "col_offset": 18, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 442, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 442, "col_offset": 19, "nodeName": "wt", "type": "Any"}, {"lineNumber": 443, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 443, "col_offset": 41, "nodeName": "k", "type": "int"}, {"lineNumber": 444, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 444, "col_offset": 42, "nodeName": "k", "type": "int"}, {"lineNumber": 447, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 447, "col_offset": 41, "nodeName": "k", "type": "int"}, {"lineNumber": 449, "col_offset": 16, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 451, "col_offset": 18, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 453, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 453, "col_offset": 19, "nodeName": "wt", "type": "Any"}, {"lineNumber": 454, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 454, "col_offset": 41, "nodeName": "k", "type": "int"}, {"lineNumber": 455, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 455, "col_offset": 42, "nodeName": "k", "type": "int"}, {"lineNumber": 459, "col_offset": 16, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 462, "col_offset": 16, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 463, "col_offset": 20, "nodeName": "t0", "type": "Any"}, {"lineNumber": 463, "col_offset": 24, "nodeName": "t1", "type": "Any"}, {"lineNumber": 463, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 463, "col_offset": 34, "nodeName": "ep", "type": "Any"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 474, "col_offset": 27, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "s2", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 79, "col_offset": 72, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 106, "nodeName": "float32", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "s2", "type": "Any"}, {"lineNumber": 166, "col_offset": 31, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 166, "col_offset": 37, "nodeName": "n", "type": "int"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 168, "col_offset": 30, "nodeName": "trans", "type": "Dict[Any, Any]"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 183, "col_offset": 41, "nodeName": "ep", "type": "Any"}, {"lineNumber": 184, "col_offset": 38, "nodeName": "ep", "type": "Any"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 232, "col_offset": 39, "nodeName": "n", "type": "Any"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "s2e", "type": "Any"}, {"lineNumber": 238, "col_offset": 38, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 238, "col_offset": 49, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 239, "col_offset": 38, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 239, "col_offset": 49, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 239, "col_offset": 60, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 241, "col_offset": 38, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 241, "col_offset": 49, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 241, "col_offset": 60, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 242, "col_offset": 38, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 242, "col_offset": 49, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 280, "col_offset": 31, "nodeName": "s1", "type": "Any"}, {"lineNumber": 296, "col_offset": 11, "nodeName": "s2", "type": "Any"}, {"lineNumber": 305, "col_offset": 34, "nodeName": "s3", "type": "Any"}, {"lineNumber": 305, "col_offset": 54, "nodeName": "s3", "type": "Any"}, {"lineNumber": 310, "col_offset": 31, "nodeName": "s3", "type": "Any"}, {"lineNumber": 310, "col_offset": 51, "nodeName": "s3", "type": "Any"}, {"lineNumber": 315, "col_offset": 31, "nodeName": "s4", "type": "Any"}, {"lineNumber": 315, "col_offset": 51, "nodeName": "s4", "type": "Any"}, {"lineNumber": 383, "col_offset": 11, "nodeName": "s2", "type": "Any"}, {"lineNumber": 428, "col_offset": 31, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 428, "col_offset": 37, "nodeName": "n", "type": "int"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 430, "col_offset": 30, "nodeName": "trans", "type": "Dict[Any, Any]"}, {"lineNumber": 443, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 443, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 443, "col_offset": 37, "nodeName": "s", "type": "Any"}, {"lineNumber": 444, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 444, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 444, "col_offset": 37, "nodeName": "wt", "type": "Any"}, {"lineNumber": 447, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 447, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 447, "col_offset": 37, "nodeName": "s", "type": "Any"}, {"lineNumber": 449, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 449, "col_offset": 43, "nodeName": "k", "type": "int"}, {"lineNumber": 454, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 454, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 454, "col_offset": 37, "nodeName": "s", "type": "Any"}, {"lineNumber": 455, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 455, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 455, "col_offset": 37, "nodeName": "wt", "type": "Any"}, {"lineNumber": 459, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 459, "col_offset": 43, "nodeName": "k", "type": "int"}, {"lineNumber": 462, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 462, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 462, "col_offset": 41, "nodeName": "ep", "type": "Any"}, {"lineNumber": 463, "col_offset": 38, "nodeName": "ep", "type": "Any"}, {"lineNumber": 464, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 465, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 79, "col_offset": 106, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 185, "col_offset": 37, "nodeName": "t0", "type": "Any"}, {"lineNumber": 185, "col_offset": 55, "nodeName": "t1", "type": "Any"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 186, "col_offset": 37, "nodeName": "t0", "type": "Any"}, {"lineNumber": 186, "col_offset": 56, "nodeName": "t1", "type": "Any"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 383, "col_offset": 17, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 464, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 464, "col_offset": 37, "nodeName": "t0", "type": "Any"}, {"lineNumber": 464, "col_offset": 55, "nodeName": "t1", "type": "Any"}, {"lineNumber": 465, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 465, "col_offset": 37, "nodeName": "t0", "type": "Any"}, {"lineNumber": 465, "col_offset": 56, "nodeName": "t1", "type": "Any"}]