[{"lineNumber": 12, "col_offset": 0, "nodeName": "to_factorized_noisy", "type": "Callable[..., Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "_map_links", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "_map_links", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "func_to_factorized_noisy", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 41, "nodeName": "link", "type": "Any"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "link", "type": "Any"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "Chain", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "children_names", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "children_names", "type": "Any"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "link", "type": "Any"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "link", "type": "Any"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "copy", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "child", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "new_child", "type": "Any"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "link", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "ChainList", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "children", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "_children", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "FactorizedNoisyLinear", "type": "Type[chainerrl.links.noisy_linear.FactorizedNoisyLinear]"}, {"lineNumber": 20, "col_offset": 41, "nodeName": "link", "type": "Any"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "_children", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "link", "type": "Any"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "name", "type": "Any"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "func", "type": "Any"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "child", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "new_child", "type": "Any"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "child", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "link", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "child", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "new_child", "type": "Any"}, {"lineNumber": 20, "col_offset": 48, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 20, "col_offset": 56, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "link", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "_map_links", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "func", "type": "Any"}, {"lineNumber": 34, "col_offset": 33, "nodeName": "child", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "delattr", "type": "Callable[[Any, Union[bytearray, bytes, str]], None]"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "link", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "children", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "children", "type": "Any"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "func", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "child", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "new_child", "type": "Any"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "child", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "init_scope", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "link", "type": "Any"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "name", "type": "Any"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "_map_links", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "func", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "child", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "children", "type": "Any"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "func", "type": "Any"}, {"lineNumber": 48, "col_offset": 35, "nodeName": "child", "type": "Any"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "link", "type": "Any"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "func", "type": "Any"}, {"lineNumber": 38, "col_offset": 45, "nodeName": "child", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "children", "type": "Any"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "i", "type": "int"}]