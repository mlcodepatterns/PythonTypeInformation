[{"lineNumber": 11, "col_offset": 0, "nodeName": "set_shared_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "set_shared_states", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "extract_params_as_shared_arrays", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "share_params_as_shared_arrays", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "share_states_as_shared_arrays", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "extract_states_as_shared_arrays", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "run_async", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "shared_arrays", "type": "Dict[Any, Any]"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "shared_arrays", "type": "Dict[Any, Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "shared_arrays", "type": "Dict[Any, Any]"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "shared_arrays", "type": "Dict[Any, Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "shared_arrays", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "shared_arrays", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "shared_arrays", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "shared_arrays", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "processes", "type": "List[multiprocessing.context.Process]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "process_idx", "type": "int"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "p", "type": "multiprocessing.context.Process"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "processes", "type": "List[multiprocessing.context.Process]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "p", "type": "multiprocessing.context.Process"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "processes", "type": "List[multiprocessing.context.Process]"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 17, "col_offset": 22, "nodeName": "a", "type": "Any"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "Link", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 18, "col_offset": 20, "nodeName": "param", "type": "Any"}, {"lineNumber": 18, "col_offset": 29, "nodeName": "namedparams", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "a", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "state_name", "type": "Any"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "shared_state", "type": "Any"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "items", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "link", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "Link", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "param", "type": "Any"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "namedparams", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "extract_params_as_shared_arrays", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 52, "nodeName": "link", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "set_shared_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "link", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "shared_arrays", "type": "Dict[Any, Any]"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "extract_states_as_shared_arrays", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 52, "nodeName": "link", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "set_shared_states", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "link", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "shared_arrays", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "state_name", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "items", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "n_process", "type": "Any"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 18, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "shared_param", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "b", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "param", "type": "Any"}, {"lineNumber": 29, "col_offset": 33, "nodeName": "items", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "old_param", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "link", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "shared_arrays", "type": "Dict[Any, Any]"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "RawArray", "type": "Any"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "_states", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "shared_arrays", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "param", "type": "Any"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "items", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "set_random_seed", "type": "Callable[[Any], None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "run_func", "type": "Any"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "process_idx", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "start", "type": "Callable[[], None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "join", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 27, "nodeName": "b", "type": "Any"}, {"lineNumber": 22, "col_offset": 62, "nodeName": "shape", "type": "Any"}, {"lineNumber": 29, "col_offset": 33, "nodeName": "shared_state", "type": "Any"}, {"lineNumber": 33, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "mp", "type": "module"}, {"lineNumber": 40, "col_offset": 53, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "state_name", "type": "Any"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "state", "type": "Any"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "RawArray", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "random_seed", "type": "module"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "randint", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "processes", "type": "List[multiprocessing.context.Process]"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "Process", "type": "Type[multiprocessing.context.Process]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "p", "type": "multiprocessing.context.Process"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "p", "type": "multiprocessing.context.Process"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 22, "col_offset": 62, "nodeName": "data", "type": "Any"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "_states", "type": "Any"}, {"lineNumber": 30, "col_offset": 46, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 33, "col_offset": 47, "nodeName": "old_param", "type": "Any"}, {"lineNumber": 40, "col_offset": 53, "nodeName": "data", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "mp", "type": "module"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "random", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "mp", "type": "module"}, {"lineNumber": 83, "col_offset": 43, "nodeName": "set_seed_and_run", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "frombuffer", "type": "Any"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "shared_param", "type": "Any"}, {"lineNumber": 22, "col_offset": 62, "nodeName": "param", "type": "Any"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "state_name", "type": "Any"}, {"lineNumber": 31, "col_offset": 48, "nodeName": "frombuffer", "type": "Any"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 40, "col_offset": 53, "nodeName": "param", "type": "Any"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "param", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "process_idx", "type": "int"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "run_func", "type": "Any"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 22, "col_offset": 36, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 31, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 22, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "old_param", "type": "Any"}, {"lineNumber": 22, "col_offset": 36, "nodeName": "param", "type": "Any"}]