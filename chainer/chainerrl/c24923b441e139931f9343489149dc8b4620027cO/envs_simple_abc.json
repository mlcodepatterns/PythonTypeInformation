[{"lineNumber": 5, "col_offset": 10, "nodeName": "EpisodicEnvironment", "type": "Type[environment.EpisodicEnvironment]"}, {"lineNumber": 5, "col_offset": 10, "nodeName": "environment", "type": "module"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "state_vec", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "state_vec", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "_state", "type": "int"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "_state", "type": "int"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "state_vec", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "ABC"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "ABC"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "self", "type": "ABC"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "action", "type": "Any"}, {"lineNumber": 32, "col_offset": 30, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "action", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "_state", "type": "int"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "reward", "type": "float"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "reward", "type": "float"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "is_terminal", "type": "bool"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "ABC"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 16, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "_state", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "_state", "type": "Any"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "_state", "type": "Any"}, {"lineNumber": 32, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "action", "type": "Any"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "around", "type": "Any"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "action", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "action", "type": "Any"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "_state", "type": "int"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "self", "type": "ABC"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "self", "type": "ABC"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "self", "type": "ABC"}, {"lineNumber": 16, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "action", "type": "Any"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "self", "type": "ABC"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "action", "type": "Any"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "_state", "type": "int"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "_state", "type": "int"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "reward", "type": "float"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "self", "type": "ABC"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "action", "type": "Any"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "_state", "type": "int"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "ABC"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "self", "type": "ABC"}]