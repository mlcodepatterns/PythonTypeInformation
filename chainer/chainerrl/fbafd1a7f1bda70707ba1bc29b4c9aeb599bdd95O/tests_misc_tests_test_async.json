[{"lineNumber": 25, "col_offset": 0, "nodeName": "_assert_same_pointers_to_persistent_values", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "_assert_same_pointers_to_param_data", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "_assert_different_pointers_to_param_grad", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "test_share_params_linear", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "test_share_params_batch_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "test_share_states", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "test_shared_link", "type": "Callable[[Any], Any]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "test_shared_link_copy", "type": "Callable[[Any], Any]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "test_run_async", "type": "Callable[[Any], Any]"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "test_run_async_exit_code", "type": "Callable[[Any], Any]"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "install_aliases", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "a_persistent_names", "type": "Set[Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "b_persistent_names", "type": "Set[Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "a_persistent_names", "type": "Set[Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "a_params", "type": "Dict[Any, Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "b_params", "type": "Dict[Any, Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "a_params", "type": "Dict[Any, Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "b_params", "type": "Dict[Any, Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "run_with_exit_code_0", "type": "Callable[[Any], Any]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "run_with_exit_code_11", "type": "Callable[[Any], Any]"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "standard_library", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "a", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "Link", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "Link", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "_persistent", "type": "Any"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "_persistent", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "a_persistent_names", "type": "Set[Any]"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "b_persistent_names", "type": "Set[Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "a_persistent", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "b_persistent", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "a", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "Link", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "Link", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "a", "type": "Any"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "Link", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "Link", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "model_c", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "model_c", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "test_input", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "opt_a", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "opt_b", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "opt_c", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "head", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "head", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "a_params", "type": "Dict[Any, Any]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "b_params", "type": "Dict[Any, Any]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "head", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "a_params", "type": "Dict[Any, Any]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "b_params", "type": "Dict[Any, Any]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "model_a_copy", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "model_b_copy", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "a_copy_params", "type": "Dict[Any, Any]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "b_copy_params", "type": "Dict[Any, Any]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "model_total_copy", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "model_a_copy", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "model_b_copy", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "a_copy_params", "type": "Dict[Any, Any]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "b_copy_params", "type": "Dict[Any, Any]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "counter", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "b", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "__dict__", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "__dict__", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "a_persistent", "type": "Any"}, {"lineNumber": 34, "col_offset": 40, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "b_persistent", "type": "Any"}, {"lineNumber": 35, "col_offset": 40, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "data", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "namedparams", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "namedparams", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 44, "col_offset": 35, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "a_params", "type": "Dict[Any, Any]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "namedparams", "type": "Any"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "namedparams", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "a_params", "type": "Dict[Any, Any]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "share_params_as_shared_arrays", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 54, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "set_shared_params", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "set_shared_params", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "model_c", "type": "Any"}, {"lineNumber": 85, "col_offset": 42, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "_assert_same_pointers_to_param_data", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 88, "col_offset": 53, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "_assert_same_pointers_to_param_data", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 89, "col_offset": 53, "nodeName": "model_c", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "_assert_different_pointers_to_param_grad", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 49, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 91, "col_offset": 58, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "_assert_different_pointers_to_param_grad", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 92, "col_offset": 58, "nodeName": "model_c", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "_assert_different_pointers_to_param_grad", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 49, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 93, "col_offset": 58, "nodeName": "model_c", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "_assert_same_pointers_to_persistent_values", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 51, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 95, "col_offset": 60, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "_assert_same_pointers_to_persistent_values", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 51, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 96, "col_offset": 60, "nodeName": "model_c", "type": "Any"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "share_params_as_shared_arrays", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 54, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "set_shared_params", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 112, "col_offset": 42, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "set_shared_params", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "model_c", "type": "Any"}, {"lineNumber": 113, "col_offset": 42, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "_assert_same_pointers_to_param_data", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 116, "col_offset": 53, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "_assert_same_pointers_to_param_data", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 44, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 117, "col_offset": 53, "nodeName": "model_c", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "_assert_different_pointers_to_param_grad", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 49, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 119, "col_offset": 58, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "_assert_different_pointers_to_param_grad", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 49, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 120, "col_offset": 58, "nodeName": "model_c", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "_assert_different_pointers_to_param_grad", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 49, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 121, "col_offset": 58, "nodeName": "model_c", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "_assert_same_pointers_to_persistent_values", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 51, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 123, "col_offset": 60, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "_assert_same_pointers_to_persistent_values", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 51, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 124, "col_offset": 60, "nodeName": "model_c", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "N", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "N", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "N", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "astype", "type": "Any"}, {"lineNumber": 130, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "test_input", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "N", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "N", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "N", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "model_c", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "test_input", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "N", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "N", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "N", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "RMSprop", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "setup", "type": "Any"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "share_states_as_shared_arrays", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 54, "nodeName": "opt_a", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "RMSprop", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "setup", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "RMSprop", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "setup", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "set_shared_states", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 158, "col_offset": 33, "nodeName": "opt_b", "type": "Any"}, {"lineNumber": 158, "col_offset": 40, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "set_shared_states", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 159, "col_offset": 33, "nodeName": "opt_c", "type": "Any"}, {"lineNumber": 159, "col_offset": 40, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "target", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "target", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assert_same_pointers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "opt_a", "type": "Any"}, {"lineNumber": 179, "col_offset": 36, "nodeName": "opt_b", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assert_same_pointers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "opt_a", "type": "Any"}, {"lineNumber": 180, "col_offset": 36, "nodeName": "opt_c", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "ChainList", "type": "Any"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "ChainList", "type": "Any"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "extract_params_as_shared_arrays", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "extract_params_as_shared_arrays", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 198, "col_offset": 18, "nodeName": "ChainList", "type": "Any"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "ChainList", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "set_shared_params", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 201, "col_offset": 33, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 201, "col_offset": 42, "nodeName": "a_arrays", "type": "Dict[Any, Any]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "set_shared_params", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 202, "col_offset": 33, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 202, "col_offset": 42, "nodeName": "b_arrays", "type": "Dict[Any, Any]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "param", "type": "Any"}, {"lineNumber": 206, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 210, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 211, "col_offset": 24, "nodeName": "param", "type": "Any"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 228, "col_offset": 18, "nodeName": "ChainList", "type": "Any"}, {"lineNumber": 229, "col_offset": 18, "nodeName": "ChainList", "type": "Any"}, {"lineNumber": 230, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 237, "col_offset": 37, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 238, "col_offset": 23, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 238, "col_offset": 37, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 239, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 245, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 247, "col_offset": 27, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 248, "col_offset": 23, "nodeName": "model_total_copy", "type": "Any"}, {"lineNumber": 249, "col_offset": 23, "nodeName": "model_total_copy", "type": "Any"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 259, "col_offset": 18, "nodeName": "Value", "type": "Callable[..., Any]"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "run_async", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 265, "col_offset": 28, "nodeName": "run_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 276, "col_offset": 53, "nodeName": "ws", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 284, "col_offset": 53, "nodeName": "ws", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "a", "type": "Any"}, {"lineNumber": 32, "col_offset": 34, "nodeName": "key", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "key", "type": "Any"}, {"lineNumber": 34, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "a", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "a_params", "type": "Dict[Any, Any]"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "b_params", "type": "Dict[Any, Any]"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "a", "type": "Any"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "a_params", "type": "Dict[Any, Any]"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "b_params", "type": "Dict[Any, Any]"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "L", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "async_", "type": "module"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "L", "type": "Any"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "L", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "async_", "type": "module"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "async_", "type": "module"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "L", "type": "Any"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "async_", "type": "module"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "L", "type": "Any"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "L", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "async_", "type": "module"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "async_", "type": "module"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "model_c", "type": "Any"}, {"lineNumber": 130, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "model_c", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "model_c", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "L", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "opt_a", "type": "Any"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "async_", "type": "module"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "opt_b", "type": "Any"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "model", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "opt_c", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 151, "col_offset": 34, "nodeName": "model", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "async_", "type": "module"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "async_", "type": "module"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "a", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "b", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "param_a", "type": "Any"}, {"lineNumber": 164, "col_offset": 39, "nodeName": "namedparams", "type": "Any"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "param_b", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "state_a", "type": "Any"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "state", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "state_b", "type": "Any"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "state", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "L", "type": "Any"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 186, "col_offset": 36, "nodeName": "copy", "type": "Any"}, {"lineNumber": 186, "col_offset": 49, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 187, "col_offset": 36, "nodeName": "copy", "type": "Any"}, {"lineNumber": 187, "col_offset": 49, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "async_", "type": "module"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "ChainList", "type": "Any"}, {"lineNumber": 190, "col_offset": 30, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "async_", "type": "module"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "ChainList", "type": "Any"}, {"lineNumber": 192, "col_offset": 30, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 194, "col_offset": 40, "nodeName": "a_arrays", "type": "Dict[Any, Any]"}, {"lineNumber": 195, "col_offset": 40, "nodeName": "b_arrays", "type": "Dict[Any, Any]"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "L", "type": "Any"}, {"lineNumber": 198, "col_offset": 18, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 198, "col_offset": 36, "nodeName": "copy", "type": "Any"}, {"lineNumber": 198, "col_offset": 49, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 199, "col_offset": 36, "nodeName": "copy", "type": "Any"}, {"lineNumber": 199, "col_offset": 49, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "async_", "type": "module"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "async_", "type": "module"}, {"lineNumber": 205, "col_offset": 24, "nodeName": "namedparams", "type": "Any"}, {"lineNumber": 206, "col_offset": 38, "nodeName": "items", "type": "Callable"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "namedparams", "type": "Any"}, {"lineNumber": 211, "col_offset": 38, "nodeName": "items", "type": "Callable"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "TestAsync"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "TestAsync"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "TestAsync"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "TestAsync"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "L", "type": "Any"}, {"lineNumber": 228, "col_offset": 18, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 228, "col_offset": 36, "nodeName": "copy", "type": "Any"}, {"lineNumber": 228, "col_offset": 49, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 229, "col_offset": 18, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 229, "col_offset": 36, "nodeName": "copy", "type": "Any"}, {"lineNumber": 229, "col_offset": 49, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 230, "col_offset": 24, "nodeName": "namedparams", "type": "Any"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "namedparams", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "TestAsync"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "TestAsync"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "copy", "type": "module"}, {"lineNumber": 238, "col_offset": 23, "nodeName": "copy", "type": "module"}, {"lineNumber": 239, "col_offset": 29, "nodeName": "namedparams", "type": "Any"}, {"lineNumber": 240, "col_offset": 29, "nodeName": "namedparams", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "TestAsync"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "TestAsync"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 245, "col_offset": 28, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 247, "col_offset": 27, "nodeName": "copy", "type": "module"}, {"lineNumber": 247, "col_offset": 41, "nodeName": "ChainList", "type": "Any"}, {"lineNumber": 247, "col_offset": 59, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 247, "col_offset": 68, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 250, "col_offset": 29, "nodeName": "namedparams", "type": "Any"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "namedparams", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "self", "type": "TestAsync"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "TestAsync"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 259, "col_offset": 18, "nodeName": "mp", "type": "module"}, {"lineNumber": 262, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "async_", "type": "module"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "self", "type": "TestAsync"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "counter", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "kill", "type": "Callable[[int, int], None]"}, {"lineNumber": 274, "col_offset": 33, "nodeName": "SIGSEGV", "type": "int"}, {"lineNumber": 276, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "run_async", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 277, "col_offset": 32, "nodeName": "run_with_exit_code_0", "type": "Callable[[Any], Any]"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 284, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "run_async", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 285, "col_offset": 32, "nodeName": "run_with_exit_code_11", "type": "Callable[[Any], Any]"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "a_persistent", "type": "Any"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "b_persistent", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "a_params", "type": "Dict[Any, Any]"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "b_params", "type": "Dict[Any, Any]"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "key", "type": "Any"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "key", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "a_params", "type": "Dict[Any, Any]"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "b_params", "type": "Dict[Any, Any]"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "key", "type": "Any"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "key", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "grad", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "keys", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "keys", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "normal", "type": "Any"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "copy", "type": "module"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "copy", "type": "module"}, {"lineNumber": 164, "col_offset": 39, "nodeName": "a", "type": "Any"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "state_a", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "state_b", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "state_name", "type": "Any"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "state_val_a", "type": "Any"}, {"lineNumber": 170, "col_offset": 47, "nodeName": "items", "type": "Any"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "state_val_b", "type": "Any"}, {"lineNumber": 186, "col_offset": 36, "nodeName": "head", "type": "Any"}, {"lineNumber": 186, "col_offset": 49, "nodeName": "L", "type": "Any"}, {"lineNumber": 187, "col_offset": 36, "nodeName": "head", "type": "Any"}, {"lineNumber": 187, "col_offset": 49, "nodeName": "L", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 198, "col_offset": 36, "nodeName": "head", "type": "Any"}, {"lineNumber": 198, "col_offset": 49, "nodeName": "L", "type": "Any"}, {"lineNumber": 199, "col_offset": 36, "nodeName": "head", "type": "Any"}, {"lineNumber": 199, "col_offset": 49, "nodeName": "L", "type": "Any"}, {"lineNumber": 205, "col_offset": 24, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 206, "col_offset": 38, "nodeName": "a_params", "type": "Dict[Any, Any]"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 211, "col_offset": 38, "nodeName": "b_params", "type": "Dict[Any, Any]"}, {"lineNumber": 212, "col_offset": 19, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 212, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 228, "col_offset": 36, "nodeName": "head", "type": "Any"}, {"lineNumber": 228, "col_offset": 49, "nodeName": "L", "type": "Any"}, {"lineNumber": 229, "col_offset": 36, "nodeName": "head", "type": "Any"}, {"lineNumber": 229, "col_offset": 49, "nodeName": "L", "type": "Any"}, {"lineNumber": 230, "col_offset": 24, "nodeName": "model_a", "type": "Any"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "model_b", "type": "Any"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 239, "col_offset": 29, "nodeName": "model_a_copy", "type": "Any"}, {"lineNumber": 240, "col_offset": 29, "nodeName": "model_b_copy", "type": "Any"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 245, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 247, "col_offset": 41, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 250, "col_offset": 29, "nodeName": "model_a_copy", "type": "Any"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "model_b_copy", "type": "Any"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "value", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "getpid", "type": "Callable[[], int]"}, {"lineNumber": 274, "col_offset": 33, "nodeName": "signal", "type": "module"}, {"lineNumber": 276, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "async_", "type": "module"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "self", "type": "TestAsync"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 284, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "async_", "type": "module"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "self", "type": "TestAsync"}, {"lineNumber": 288, "col_offset": 16, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 165, "col_offset": 48, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "param_a", "type": "Any"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "param_b", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "self", "type": "TestAsync"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "self", "type": "TestAsync"}, {"lineNumber": 170, "col_offset": 47, "nodeName": "state_a", "type": "Any"}, {"lineNumber": 171, "col_offset": 34, "nodeName": "state_b", "type": "Any"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 177, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 212, "col_offset": 31, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "get_lock", "type": "Any"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "counter", "type": "Any"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "a_params", "type": "Dict[Any, Any]"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "b_params", "type": "Dict[Any, Any]"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "a_params", "type": "Dict[Any, Any]"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "b_params", "type": "Dict[Any, Any]"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "namedparams", "type": "Any"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "state_name", "type": "Any"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "self", "type": "TestAsync"}, {"lineNumber": 172, "col_offset": 36, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "state_val_a", "type": "Any"}, {"lineNumber": 173, "col_offset": 37, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "self", "type": "TestAsync"}, {"lineNumber": 174, "col_offset": 36, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "state_val_b", "type": "Any"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "self", "type": "TestAsync"}, {"lineNumber": 176, "col_offset": 37, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 177, "col_offset": 37, "nodeName": "ctypes", "type": "Any"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "array", "type": "Any"}, {"lineNumber": 212, "col_offset": 31, "nodeName": "array", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "a_params", "type": "Dict[Any, Any]"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "b_params", "type": "Dict[Any, Any]"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "a_params", "type": "Dict[Any, Any]"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "b_params", "type": "Dict[Any, Any]"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "a_params", "type": "Dict[Any, Any]"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "b_params", "type": "Dict[Any, Any]"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "a_params", "type": "Dict[Any, Any]"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "b_params", "type": "Dict[Any, Any]"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "a_params", "type": "Dict[Any, Any]"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "b_params", "type": "Dict[Any, Any]"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "a_params", "type": "Dict[Any, Any]"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "b_params", "type": "Dict[Any, Any]"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "a_copy_params", "type": "Dict[Any, Any]"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "b_copy_params", "type": "Dict[Any, Any]"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "a_copy_params", "type": "Dict[Any, Any]"}, {"lineNumber": 245, "col_offset": 28, "nodeName": "b_copy_params", "type": "Dict[Any, Any]"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "a_copy_params", "type": "Dict[Any, Any]"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "b_copy_params", "type": "Dict[Any, Any]"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "a_copy_params", "type": "Dict[Any, Any]"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "b_copy_params", "type": "Dict[Any, Any]"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "counter", "type": "Any"}, {"lineNumber": 282, "col_offset": 24, "nodeName": "w", "type": "warnings.WarningMessage"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "ws", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 290, "col_offset": 24, "nodeName": "w", "type": "warnings.WarningMessage"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "ws", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "key", "type": "Any"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "key", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "key", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "key", "type": "Any"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "b", "type": "Any"}, {"lineNumber": 173, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 37, "nodeName": "state_val_a", "type": "Any"}, {"lineNumber": 177, "col_offset": 37, "nodeName": "state_val_b", "type": "Any"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 212, "col_offset": 31, "nodeName": "param", "type": "Any"}]