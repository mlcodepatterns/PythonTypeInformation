[{"lineNumber": 23, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "test_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "install_aliases", "type": "Any"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "standard_library", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "random_mat", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "x_ans", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "astype", "type": "Any"}, {"lineNumber": 27, "col_offset": 68, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "dot", "type": "Any"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "T", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 29, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "dot", "type": "Any"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "x_ans", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "conjugate_gradient", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "A_product_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 62, "nodeName": "b", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 58, "nodeName": "xp", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "x_ans", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "_test", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "_test", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 27, "col_offset": 68, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "random_mat", "type": "Any"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "random_mat", "type": "Any"}, {"lineNumber": 29, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "A", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "xp", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 34, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "dot", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "misc", "type": "module"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "get_array_module", "type": "Any"}, {"lineNumber": 39, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "normal", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "normal", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "get_array_module", "type": "Any"}, {"lineNumber": 33, "col_offset": 63, "nodeName": "vec", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 34, "col_offset": 40, "nodeName": "b", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "A", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "chainerrl", "type": "module"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 29, "col_offset": 38, "nodeName": "n", "type": "Any"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "xp", "type": "Any"}, {"lineNumber": 27, "col_offset": 44, "nodeName": "n", "type": "Any"}, {"lineNumber": 27, "col_offset": 52, "nodeName": "n", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "xp", "type": "Any"}, {"lineNumber": 29, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 27, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 52, "nodeName": "self", "type": "Any"}]