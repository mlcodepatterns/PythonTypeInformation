[{"lineNumber": 17, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "install_aliases", "type": "Any"}, {"lineNumber": 17, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "standard_library", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "a_out", "type": "List[Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "b_out", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "a_out_new", "type": "List[Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "b_out_new", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "a_out", "type": "List[Any]"}, {"lineNumber": 26, "col_offset": 35, "nodeName": "b_out", "type": "List[Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "copy_param", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 29, "col_offset": 33, "nodeName": "b", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "a_out_new", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 36, "nodeName": "b_out", "type": "List[Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "b_out_new", "type": "List[Any]"}, {"lineNumber": 34, "col_offset": 36, "nodeName": "b_out", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "soft_copy_param", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "soft_copy_param", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "astype", "type": "Any"}, {"lineNumber": 23, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestCopyParam"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "copy_param", "type": "module"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestCopyParam"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestCopyParam"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "copy_param", "type": "module"}, {"lineNumber": 44, "col_offset": 47, "nodeName": "a", "type": "Any"}, {"lineNumber": 44, "col_offset": 62, "nodeName": "b", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "W", "type": "Any"}, {"lineNumber": 46, "col_offset": 49, "nodeName": "full", "type": "Any"}, {"lineNumber": 46, "col_offset": 57, "nodeName": "shape", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "W", "type": "Any"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "full", "type": "Any"}, {"lineNumber": 47, "col_offset": 57, "nodeName": "shape", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "copy_param", "type": "module"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "a", "type": "Any"}, {"lineNumber": 49, "col_offset": 62, "nodeName": "b", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "W", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "full", "type": "Any"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "W", "type": "Any"}, {"lineNumber": 53, "col_offset": 49, "nodeName": "full", "type": "Any"}, {"lineNumber": 53, "col_offset": 57, "nodeName": "shape", "type": "Any"}, {"lineNumber": 23, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "a", "type": "Any"}, {"lineNumber": 46, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "b", "type": "Any"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "b", "type": "Any"}, {"lineNumber": 53, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "rand", "type": "Any"}, {"lineNumber": 46, "col_offset": 57, "nodeName": "W", "type": "Any"}, {"lineNumber": 47, "col_offset": 57, "nodeName": "W", "type": "Any"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "W", "type": "Any"}, {"lineNumber": 53, "col_offset": 57, "nodeName": "W", "type": "Any"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "s", "type": "Any"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "b", "type": "Any"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "s", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "s", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "s", "type": "Any"}, {"lineNumber": 46, "col_offset": 57, "nodeName": "a", "type": "Any"}, {"lineNumber": 47, "col_offset": 57, "nodeName": "b", "type": "Any"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 53, "col_offset": 57, "nodeName": "b", "type": "Any"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "np", "type": "module"}]