[{"lineNumber": 13, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 16, "col_offset": 10, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 13, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 13, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "shared_model", "type": "Any"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "model", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "pv_func", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "pv_func", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "t_max", "type": "Any"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "t_max", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "beta", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "beta", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "process_idx", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "process_idx", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "clip_delta", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "clip_delta", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "clip_reward", "type": "Any"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "clip_reward", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "phi", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "phi", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "pi_loss_coef", "type": "Any"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "pi_loss_coef", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "v_loss_coef", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "v_loss_coef", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "keep_loss_scale_same", "type": "Any"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "keep_loss_scale_same", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "t", "type": "int"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "t_start", "type": "int"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "past_action_log_prob", "type": "Dict[int, Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "past_action_entropy", "type": "Dict[int, Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "past_states", "type": "Dict[int, Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "past_rewards", "type": "Dict[int, Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "past_values", "type": "Dict[int, Any]"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "clip_reward", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "statevar", "type": "Any"}, {"lineNumber": 65, "col_offset": 40, "nodeName": "reward", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "opt_filename", "type": "Any"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "shared_model", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "copy_param", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "self", "type": "A3C"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "reward", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "past_rewards", "type": "Dict[int, Any]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "is_state_terminal", "type": "Any"}, {"lineNumber": 151, "col_offset": 39, "nodeName": "state", "type": "Any"}, {"lineNumber": 153, "col_offset": 48, "nodeName": "sampled_actions_log_probs", "type": "Any"}, {"lineNumber": 154, "col_offset": 47, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 155, "col_offset": 39, "nodeName": "vout", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "t", "type": "int"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "load_hdf5", "type": "Any"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "model_filename", "type": "Any"}, {"lineNumber": 167, "col_offset": 46, "nodeName": "model", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "copy_param", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "model_filename", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 171, "col_offset": 26, "nodeName": "opt_filename", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "save_hdf5", "type": "Any"}, {"lineNumber": 179, "col_offset": 30, "nodeName": "model_filename", "type": "Any"}, {"lineNumber": 179, "col_offset": 46, "nodeName": "model", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "save_hdf5", "type": "Any"}, {"lineNumber": 180, "col_offset": 55, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "copy", "type": "module"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "self", "type": "A3C"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "copy_param", "type": "module"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "shared_model", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "clip", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "reward", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "is_state_terminal", "type": "Any"}, {"lineNumber": 68, "col_offset": 44, "nodeName": "t_max", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "t_start", "type": "int"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "t", "type": "int"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "past_states", "type": "Dict[int, Any]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "pout", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "vout", "type": "Any"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "pv_func", "type": "Any"}, {"lineNumber": 152, "col_offset": 38, "nodeName": "model", "type": "Any"}, {"lineNumber": 152, "col_offset": 50, "nodeName": "statevar", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "past_action_log_prob", "type": "Dict[int, Any]"}, {"lineNumber": 153, "col_offset": 48, "nodeName": "pout", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "past_action_entropy", "type": "Dict[int, Any]"}, {"lineNumber": 154, "col_offset": 47, "nodeName": "pout", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "past_values", "type": "Dict[int, Any]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "self", "type": "A3C"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "process_idx", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "action_indices", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "serializers", "type": "Any"}, {"lineNumber": 167, "col_offset": 46, "nodeName": "self", "type": "A3C"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "copy_param", "type": "module"}, {"lineNumber": 168, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "shared_model", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "load_hdf5", "type": "Any"}, {"lineNumber": 174, "col_offset": 59, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "serializers", "type": "Any"}, {"lineNumber": 179, "col_offset": 46, "nodeName": "self", "type": "A3C"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "serializers", "type": "Any"}, {"lineNumber": 180, "col_offset": 30, "nodeName": "model_filename", "type": "Any"}, {"lineNumber": 180, "col_offset": 55, "nodeName": "self", "type": "A3C"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "self", "type": "A3C"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "self", "type": "A3C"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 51, "nodeName": "phi", "type": "Any"}, {"lineNumber": 63, "col_offset": 60, "nodeName": "state", "type": "Any"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "t", "type": "int"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "t_start", "type": "int"}, {"lineNumber": 67, "col_offset": 49, "nodeName": "t", "type": "int"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "t", "type": "int"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "t_start", "type": "int"}, {"lineNumber": 68, "col_offset": 44, "nodeName": "self", "type": "A3C"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "self", "type": "A3C"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "self", "type": "A3C"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "self", "type": "A3C"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "t", "type": "int"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "self", "type": "A3C"}, {"lineNumber": 152, "col_offset": 38, "nodeName": "self", "type": "A3C"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "self", "type": "A3C"}, {"lineNumber": 153, "col_offset": 38, "nodeName": "t", "type": "int"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "self", "type": "A3C"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "t", "type": "int"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "self", "type": "A3C"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "t", "type": "int"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "self", "type": "A3C"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "t", "type": "int"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 159, "col_offset": 56, "nodeName": "data", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "pout", "type": "Any"}, {"lineNumber": 168, "col_offset": 42, "nodeName": "self", "type": "A3C"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "self", "type": "A3C"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 172, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "opt_filename", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "serializers", "type": "Any"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "model_filename", "type": "Any"}, {"lineNumber": 174, "col_offset": 59, "nodeName": "self", "type": "A3C"}, {"lineNumber": 63, "col_offset": 51, "nodeName": "self", "type": "A3C"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "self", "type": "A3C"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "self", "type": "A3C"}, {"lineNumber": 67, "col_offset": 49, "nodeName": "self", "type": "A3C"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "self", "type": "A3C"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "self", "type": "A3C"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "self", "type": "A3C"}, {"lineNumber": 153, "col_offset": 38, "nodeName": "self", "type": "A3C"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "self", "type": "A3C"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "self", "type": "A3C"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "self", "type": "A3C"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 159, "col_offset": 56, "nodeName": "probs", "type": "Any"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "pout", "type": "Any"}, {"lineNumber": 159, "col_offset": 56, "nodeName": "pout", "type": "Any"}]