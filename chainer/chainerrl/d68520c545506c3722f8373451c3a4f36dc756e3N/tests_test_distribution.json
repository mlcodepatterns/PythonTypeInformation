[{"lineNumber": 20, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 191, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 274, "col_offset": 46, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "install_aliases", "type": "Any"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "unittest", "type": "module"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 191, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 274, "col_offset": 46, "nodeName": "unittest", "type": "module"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "standard_library", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "counter", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "wrap_by_variable", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "batch_ps", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "a", "type": "int"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "a", "type": "int"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "kl", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "another", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "values", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "wrap_by_variable", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "batch_ps", "type": "List[Any]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "a", "type": "int"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "a", "type": "int"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "kl", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "another", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "distrib", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "sample_prob", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "sample_log_prob", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "kl", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "kl", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "another", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "distrib", "type": "chainerrl.distribution.ContinuousDeterministicDistribution"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 288, "col_offset": 24, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "another", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "xp", "type": "module"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "_test", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "_test", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "rand", "type": "Any"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 62, "col_offset": 54, "nodeName": "n", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "b", "type": "int"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "batch_log_p", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "kl", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 119, "col_offset": 39, "nodeName": "another", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "logits", "type": "Any"}, {"lineNumber": 120, "col_offset": 46, "nodeName": "logits", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "rand", "type": "Any"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 131, "col_offset": 54, "nodeName": "n", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "distrib", "type": "chainerrl.distribution.MellowmaxDistribution"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "b", "type": "int"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "batch_log_p", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "kl", "type": "Any"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 182, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "another", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 184, "col_offset": 46, "nodeName": "values", "type": "Any"}, {"lineNumber": 195, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 197, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 23, "nodeName": "GaussianDistribution", "type": "Type[chainerrl.distribution.GaussianDistribution]"}, {"lineNumber": 198, "col_offset": 57, "nodeName": "mean", "type": "Any"}, {"lineNumber": 198, "col_offset": 68, "nodeName": "var", "type": "Any"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 208, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 209, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 209, "col_offset": 56, "nodeName": "mean", "type": "Any"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "prob", "type": "Any"}, {"lineNumber": 213, "col_offset": 40, "nodeName": "sample", "type": "Any"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 214, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 225, "col_offset": 48, "nodeName": "sample", "type": "Any"}, {"lineNumber": 226, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 246, "col_offset": 13, "nodeName": "kl", "type": "Any"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 247, "col_offset": 17, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "GaussianDistribution", "type": "Type[chainerrl.distribution.GaussianDistribution]"}, {"lineNumber": 256, "col_offset": 13, "nodeName": "kl", "type": "Any"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "standard", "type": "chainerrl.distribution.GaussianDistribution"}, {"lineNumber": 257, "col_offset": 21, "nodeName": "gaussian_kl_divergence", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "mean", "type": "Any"}, {"lineNumber": 258, "col_offset": 31, "nodeName": "ln_var", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 265, "col_offset": 25, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 265, "col_offset": 39, "nodeName": "another", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 266, "col_offset": 44, "nodeName": "mean", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "var", "type": "Any"}, {"lineNumber": 267, "col_offset": 43, "nodeName": "var", "type": "Any"}, {"lineNumber": 278, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "ContinuousDeterministicDistribution", "type": "Type[chainerrl.distribution.ContinuousDeterministicDistribution]"}, {"lineNumber": 279, "col_offset": 72, "nodeName": "x", "type": "Any"}, {"lineNumber": 282, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 285, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 285, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 288, "col_offset": 24, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 291, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 291, "col_offset": 56, "nodeName": "x", "type": "Any"}, {"lineNumber": 294, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 295, "col_offset": 39, "nodeName": "another", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 296, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "use", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "xp", "type": "Any"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "batch_probs", "type": "Any"}, {"lineNumber": 33, "col_offset": 52, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "counter", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "batch_probs", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "SoftmaxDistribution", "type": "Type[chainerrl.distribution.SoftmaxDistribution]"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "SoftmaxDistribution", "type": "Type[chainerrl.distribution.SoftmaxDistribution]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "logits", "type": "Any"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 80, "col_offset": 45, "nodeName": "n", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "prob", "type": "Any"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 93, "col_offset": 43, "nodeName": "batch_ps", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "ones", "type": "Any"}, {"lineNumber": 93, "col_offset": 62, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "prob", "type": "Any"}, {"lineNumber": 98, "col_offset": 40, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 99, "col_offset": 48, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "array", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 120, "col_offset": 46, "nodeName": "another", "type": "Any"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "MellowmaxDistribution", "type": "Type[chainerrl.distribution.MellowmaxDistribution]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "MellowmaxDistribution", "type": "Type[chainerrl.distribution.MellowmaxDistribution]"}, {"lineNumber": 136, "col_offset": 62, "nodeName": "values", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 140, "col_offset": 43, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 144, "col_offset": 45, "nodeName": "n", "type": "Any"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "prob", "type": "Any"}, {"lineNumber": 150, "col_offset": 40, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 157, "col_offset": 43, "nodeName": "batch_ps", "type": "List[Any]"}, {"lineNumber": 157, "col_offset": 54, "nodeName": "ones", "type": "Any"}, {"lineNumber": 157, "col_offset": 62, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "prob", "type": "Any"}, {"lineNumber": 162, "col_offset": 40, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 163, "col_offset": 48, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 165, "col_offset": 43, "nodeName": "array", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 182, "col_offset": 18, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 184, "col_offset": 46, "nodeName": "another", "type": "Any"}, {"lineNumber": 195, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 198, "col_offset": 23, "nodeName": "distribution", "type": "module"}, {"lineNumber": 198, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 68, "nodeName": "self", "type": "Any"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 202, "col_offset": 43, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 203, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 203, "col_offset": 57, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 207, "col_offset": 35, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 207, "col_offset": 50, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 25, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 208, "col_offset": 47, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 208, "col_offset": 64, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 209, "col_offset": 35, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 209, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 214, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "desired_pdf", "type": "Any"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 243, "col_offset": 34, "nodeName": "desired_entropy", "type": "Any"}, {"lineNumber": 246, "col_offset": 13, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "distribution", "type": "module"}, {"lineNumber": 256, "col_offset": 13, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 257, "col_offset": 21, "nodeName": "functions", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 258, "col_offset": 31, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 259, "col_offset": 35, "nodeName": "sum", "type": "Any"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "chainer_kl", "type": "Any"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 265, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 266, "col_offset": 44, "nodeName": "another", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 267, "col_offset": 43, "nodeName": "another", "type": "Any"}, {"lineNumber": 278, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "distribution", "type": "module"}, {"lineNumber": 279, "col_offset": 72, "nodeName": "self", "type": "Any"}, {"lineNumber": 282, "col_offset": 17, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 283, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 283, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 283, "col_offset": 43, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 284, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 284, "col_offset": 57, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 285, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 285, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 288, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 289, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 289, "col_offset": 35, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 289, "col_offset": 50, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 290, "col_offset": 47, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 290, "col_offset": 64, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 291, "col_offset": 35, "nodeName": "most_probable", "type": "Any"}, {"lineNumber": 291, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 294, "col_offset": 18, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 296, "col_offset": 41, "nodeName": "another", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 52, "nodeName": "batch_probs", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "sample_discrete_actions", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 53, "nodeName": "batch_probs", "type": "Any"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "distribution", "type": "module"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "logits", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "beta", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "min_prob", "type": "Any"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "distribution", "type": "module"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "beta", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "min_prob", "type": "Any"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "array", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 80, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 85, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 87, "col_offset": 48, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 90, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "min_prob", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "p", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "batch_ps", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 39, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 97, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "log", "type": "Any"}, {"lineNumber": 100, "col_offset": 50, "nodeName": "array", "type": "Any"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "batch_log_p", "type": "Any"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "distribution", "type": "module"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "values", "type": "Any"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "distribution", "type": "module"}, {"lineNumber": 136, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 43, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 36, "nodeName": "array", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 144, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 39, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 149, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 151, "col_offset": 39, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 151, "col_offset": 48, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 154, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 155, "col_offset": 37, "nodeName": "p", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "batch_ps", "type": "List[Any]"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 39, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 161, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "distrib", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 164, "col_offset": 43, "nodeName": "log", "type": "Any"}, {"lineNumber": 164, "col_offset": 50, "nodeName": "array", "type": "Any"}, {"lineNumber": 165, "col_offset": 43, "nodeName": "batch_log_p", "type": "Any"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 182, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 195, "col_offset": 29, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "rand", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 43, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 203, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 203, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 50, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 208, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "identity", "type": "Any"}, {"lineNumber": 215, "col_offset": 31, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 218, "col_offset": 39, "nodeName": "array", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "identity", "type": "Any"}, {"lineNumber": 227, "col_offset": 31, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 230, "col_offset": 39, "nodeName": "array", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 233, "col_offset": 23, "nodeName": "desired_pdf", "type": "Any"}, {"lineNumber": 238, "col_offset": 19, "nodeName": "identity", "type": "Any"}, {"lineNumber": 238, "col_offset": 31, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 246, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 249, "col_offset": 29, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 256, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 257, "col_offset": 21, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 277, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 278, "col_offset": 29, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 282, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 283, "col_offset": 43, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 284, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 284, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 289, "col_offset": 50, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 290, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "get_device", "type": "Any"}, {"lineNumber": 24, "col_offset": 36, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "distribution", "type": "module"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "batch_probs", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "counter", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "sample", "type": "Any"}, {"lineNumber": 79, "col_offset": 49, "nodeName": "b", "type": "int"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "sample", "type": "Any"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "b", "type": "int"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "a", "type": "int"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 48, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "b", "type": "int"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "a", "type": "int"}, {"lineNumber": 97, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 50, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "kl", "type": "Any"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "b", "type": "int"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 43, "nodeName": "array", "type": "Any"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 36, "nodeName": "sample", "type": "Any"}, {"lineNumber": 143, "col_offset": 49, "nodeName": "b", "type": "int"}, {"lineNumber": 144, "col_offset": 28, "nodeName": "sample", "type": "Any"}, {"lineNumber": 144, "col_offset": 41, "nodeName": "b", "type": "int"}, {"lineNumber": 149, "col_offset": 34, "nodeName": "a", "type": "int"}, {"lineNumber": 149, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 48, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "b", "type": "int"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "a", "type": "int"}, {"lineNumber": 161, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 50, "nodeName": "batch_p", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "kl", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "b", "type": "int"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 179, "col_offset": 43, "nodeName": "array", "type": "Any"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 195, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 215, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "b", "type": "int"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "multivariate_normal", "type": "Any"}, {"lineNumber": 218, "col_offset": 30, "nodeName": "cov", "type": "Any"}, {"lineNumber": 218, "col_offset": 39, "nodeName": "sample", "type": "Any"}, {"lineNumber": 218, "col_offset": 52, "nodeName": "b", "type": "int"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "sample_prob", "type": "Any"}, {"lineNumber": 220, "col_offset": 34, "nodeName": "b", "type": "int"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 227, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 228, "col_offset": 28, "nodeName": "b", "type": "int"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "multivariate_normal", "type": "Any"}, {"lineNumber": 230, "col_offset": 30, "nodeName": "cov", "type": "Any"}, {"lineNumber": 230, "col_offset": 39, "nodeName": "sample", "type": "Any"}, {"lineNumber": 230, "col_offset": 52, "nodeName": "b", "type": "int"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "sample_log_prob", "type": "Any"}, {"lineNumber": 232, "col_offset": 38, "nodeName": "b", "type": "int"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 238, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 238, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 239, "col_offset": 28, "nodeName": "b", "type": "int"}, {"lineNumber": 240, "col_offset": 30, "nodeName": "multivariate_normal", "type": "Any"}, {"lineNumber": 241, "col_offset": 30, "nodeName": "cov", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 243, "col_offset": 30, "nodeName": "b", "type": "int"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "kl", "type": "Any"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "b", "type": "int"}, {"lineNumber": 249, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 43, "nodeName": "array", "type": "Any"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 254, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 254, "col_offset": 44, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 254, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 255, "col_offset": 42, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 255, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 259, "col_offset": 35, "nodeName": "kl", "type": "Any"}, {"lineNumber": 277, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 278, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "batch_indices", "type": "Any"}, {"lineNumber": 115, "col_offset": 43, "nodeName": "kl", "type": "Any"}, {"lineNumber": 115, "col_offset": 52, "nodeName": "b", "type": "int"}, {"lineNumber": 179, "col_offset": 43, "nodeName": "kl", "type": "Any"}, {"lineNumber": 179, "col_offset": 52, "nodeName": "b", "type": "int"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 215, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "stats", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 227, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "stats", "type": "Any"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 238, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 240, "col_offset": 30, "nodeName": "stats", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 249, "col_offset": 43, "nodeName": "kl", "type": "Any"}, {"lineNumber": 249, "col_offset": 52, "nodeName": "b", "type": "int"}, {"lineNumber": 254, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 254, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 254, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 255, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 255, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 277, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 218, "col_offset": 26, "nodeName": "b", "type": "int"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "b", "type": "int"}, {"lineNumber": 240, "col_offset": 30, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 241, "col_offset": 26, "nodeName": "b", "type": "int"}]