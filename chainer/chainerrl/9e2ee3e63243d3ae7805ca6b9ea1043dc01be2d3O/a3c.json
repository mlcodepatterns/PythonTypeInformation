[{"lineNumber": 76, "col_offset": 0, "nodeName": "set_shared_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "set_shared_states", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "extract_params_as_shared_arrays", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "extract_states_as_shared_arrays", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "create_a3c_agents", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 6, "col_offset": 10, "nodeName": "Agent", "type": "Type[agent.Agent]"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 6, "col_offset": 10, "nodeName": "agent", "type": "module"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "shared_arrays", "type": "Dict[Any, Any]"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "shared_arrays", "type": "Dict[Any, Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "shared_arrays", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "shared_arrays", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 111, "col_offset": 10, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 13, "col_offset": 22, "nodeName": "policy", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "v_function", "type": "Any"}, {"lineNumber": 14, "col_offset": 26, "nodeName": "v_function", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 15, "col_offset": 25, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "t_max", "type": "Any"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "t_max", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "t", "type": "int"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "t_start", "type": "int"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "past_action_prob", "type": "Dict[int, Any]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "past_states", "type": "Dict[int, Any]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "past_rewards", "type": "Dict[int, Any]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 28, "col_offset": 40, "nodeName": "reward", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "param", "type": "Any"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "namedparams", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "state_name", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "shared_state", "type": "Any"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "param", "type": "Any"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "namedparams", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "state_name", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "past_rewards", "type": "Dict[int, Any]"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "is_state_terminal", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "is_state_terminal", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "past_action_prob", "type": "Dict[int, Any]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "past_states", "type": "Dict[int, Any]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "past_rewards", "type": "Dict[nothing, nothing]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "t_start", "type": "int"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "t", "type": "int"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "is_state_terminal", "type": "Any"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "state", "type": "Any"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "prob", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "t", "type": "int"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "policy", "type": "Any"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "v_function", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "shared_param", "type": "Any"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "b", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "param", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "old_param", "type": "Any"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "link", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "shared_arrays", "type": "Dict[Any, Any]"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "Array", "type": "Any"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "_states", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "shared_arrays", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "param", "type": "Any"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 26, "col_offset": 37, "nodeName": "shape", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "A3C"}, {"lineNumber": 30, "col_offset": 57, "nodeName": "t_max", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "R", "type": "int"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "R", "type": "float"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "zero_grads", "type": "Any"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "R", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "R", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "advantage", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "A3C"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "A3C"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "A3C"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "A3C"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "self", "type": "A3C"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "past_states", "type": "Dict[int, Any]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "action", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "prob", "type": "Any"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "sample_with_probability", "type": "Any"}, {"lineNumber": 60, "col_offset": 63, "nodeName": "state", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "past_action_prob", "type": "Dict[int, Any]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "A3C"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "action", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "b", "type": "Any"}, {"lineNumber": 81, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "shared_state", "type": "Any"}, {"lineNumber": 90, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "mp", "type": "Any"}, {"lineNumber": 96, "col_offset": 50, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "state_name", "type": "Any"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "state", "type": "Any"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "Array", "type": "Any"}, {"lineNumber": 26, "col_offset": 37, "nodeName": "state", "type": "Any"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "t", "type": "int"}, {"lineNumber": 30, "col_offset": 32, "nodeName": "t", "type": "int"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "t_start", "type": "int"}, {"lineNumber": 30, "col_offset": 57, "nodeName": "self", "type": "A3C"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "t_start", "type": "int"}, {"lineNumber": 39, "col_offset": 51, "nodeName": "t", "type": "int"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "self", "type": "A3C"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "past_rewards", "type": "Dict[int, Any]"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "v_function", "type": "Any"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "R", "type": "Any"}, {"lineNumber": 43, "col_offset": 32, "nodeName": "v", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "log", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "backward", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "backward", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "A3C"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "t", "type": "int"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "policy", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "self", "type": "A3C"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "t", "type": "int"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 81, "col_offset": 47, "nodeName": "data", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "_states", "type": "Any"}, {"lineNumber": 87, "col_offset": 46, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 90, "col_offset": 47, "nodeName": "old_param", "type": "Any"}, {"lineNumber": 96, "col_offset": 50, "nodeName": "data", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "mp", "type": "Any"}, {"lineNumber": 106, "col_offset": 44, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "self", "type": "A3C"}, {"lineNumber": 30, "col_offset": 32, "nodeName": "self", "type": "A3C"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "self", "type": "A3C"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "A3C"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "self", "type": "A3C"}, {"lineNumber": 39, "col_offset": 51, "nodeName": "self", "type": "A3C"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "self", "type": "A3C"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "i", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "self", "type": "A3C"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "past_states", "type": "Dict[int, Any]"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "F", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "past_action_prob", "type": "Dict[int, Any]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "A3C"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "self", "type": "A3C"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "self", "type": "A3C"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "self", "type": "A3C"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "frombuffer", "type": "Any"}, {"lineNumber": 81, "col_offset": 47, "nodeName": "param", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "state_name", "type": "Any"}, {"lineNumber": 88, "col_offset": 48, "nodeName": "frombuffer", "type": "Any"}, {"lineNumber": 96, "col_offset": 50, "nodeName": "param", "type": "Any"}, {"lineNumber": 106, "col_offset": 44, "nodeName": "param", "type": "Any"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "v_function", "type": "Any"}, {"lineNumber": 35, "col_offset": 42, "nodeName": "state", "type": "Any"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "self", "type": "A3C"}, {"lineNumber": 42, "col_offset": 53, "nodeName": "i", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "self", "type": "A3C"}, {"lineNumber": 45, "col_offset": 55, "nodeName": "i", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "advantage", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "np", "type": "Any"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "get_obj", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 88, "col_offset": 48, "nodeName": "np", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "get_obj", "type": "Any"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "self", "type": "A3C"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "shared_param", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "old_param", "type": "Any"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "advantage", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "param", "type": "Any"}]