[{"lineNumber": 456, "col_offset": 0, "nodeName": "exp_return_of_episode", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 279, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 478, "col_offset": 42, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 536, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 586, "col_offset": 40, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 628, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 655, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "install_aliases", "type": "Any"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 279, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 478, "col_offset": 42, "nodeName": "unittest", "type": "module"}, {"lineNumber": 536, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 586, "col_offset": 40, "nodeName": "unittest", "type": "module"}, {"lineNumber": 628, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 655, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "standard_library", "type": "module"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "s1", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "s2", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "s1", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "s2", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "s2", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "s5", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 251, "col_offset": 17, "nodeName": "s5", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "s2e", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 282, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "s1", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "s2", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "s3", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "s3", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "s4", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 383, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 403, "col_offset": 19, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 404, "col_offset": 20, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "s2", "type": "Any"}, {"lineNumber": 457, "col_offset": 11, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 489, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 504, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 554, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 559, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 597, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 602, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 607, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "experiences", "type": "List[List[Dict[Any, Any]]]"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "four_step_transition", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 32, "col_offset": 42, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 32, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 67, "col_offset": 42, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 67, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "item", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "s2", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 107, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "stop_current_episode", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 129, "col_offset": 42, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 129, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 133, "col_offset": 23, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 138, "col_offset": 38, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 149, "col_offset": 18, "nodeName": "filename", "type": "str"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 152, "col_offset": 42, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "filename", "type": "str"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "EpisodicReplayBuffer", "type": "Any"}, {"lineNumber": 182, "col_offset": 50, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "trans", "type": "Dict[Any, Any]"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "n_episodes", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "ep", "type": "Any"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "s", "type": "Any"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "EpisodicReplayBuffer", "type": "Any"}, {"lineNumber": 215, "col_offset": 50, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "stop_current_episode", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "stop_current_episode", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "n_episodes", "type": "Any"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 236, "col_offset": 32, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 237, "col_offset": 18, "nodeName": "filename", "type": "str"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "EpisodicReplayBuffer", "type": "Any"}, {"lineNumber": 240, "col_offset": 50, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 246, "col_offset": 18, "nodeName": "filename", "type": "str"}, {"lineNumber": 249, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 258, "col_offset": 14, "nodeName": "sample_episodes", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "n_episodes", "type": "Any"}, {"lineNumber": 282, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "PrioritizedReplayBuffer", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 293, "col_offset": 23, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 294, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 294, "col_offset": 23, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 300, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 308, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 308, "col_offset": 38, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 309, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 311, "col_offset": 29, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 327, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "assertNotAlmostEqual", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 332, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 337, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 342, "col_offset": 15, "nodeName": "PrioritizedReplayBuffer", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 350, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "trans", "type": "Dict[Any, Any]"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "errors", "type": "List[Any]"}, {"lineNumber": 363, "col_offset": 18, "nodeName": "sample", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "set_errors_based_on_state", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 364, "col_offset": 34, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 364, "col_offset": 40, "nodeName": "samples", "type": "Any"}, {"lineNumber": 367, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "samples", "type": "Any"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "max_w", "type": "Any"}, {"lineNumber": 383, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 384, "col_offset": 11, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 387, "col_offset": 15, "nodeName": "PrioritizedReplayBuffer", "type": "Any"}, {"lineNumber": 387, "col_offset": 53, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 389, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 389, "col_offset": 23, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 393, "col_offset": 36, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 396, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 400, "col_offset": 36, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 403, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 404, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 406, "col_offset": 18, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 408, "col_offset": 15, "nodeName": "PrioritizedReplayBuffer", "type": "Any"}, {"lineNumber": 408, "col_offset": 53, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 412, "col_offset": 23, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 413, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 413, "col_offset": 23, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 418, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 418, "col_offset": 38, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 419, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 421, "col_offset": 29, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 428, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 428, "col_offset": 32, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 429, "col_offset": 18, "nodeName": "filename", "type": "str"}, {"lineNumber": 432, "col_offset": 15, "nodeName": "PrioritizedReplayBuffer", "type": "Any"}, {"lineNumber": 432, "col_offset": 53, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 439, "col_offset": 18, "nodeName": "filename", "type": "str"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 445, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 481, "col_offset": 15, "nodeName": "PrioritizedEpisodicReplayBuffer", "type": "Any"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 494, "col_offset": 16, "nodeName": "trans", "type": "Dict[Any, Any]"}, {"lineNumber": 494, "col_offset": 25, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 498, "col_offset": 25, "nodeName": "n_episodes", "type": "Any"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 505, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 506, "col_offset": 15, "nodeName": "return_sample_weights", "type": "Any"}, {"lineNumber": 513, "col_offset": 15, "nodeName": "wait_priority_after_sampling", "type": "Any"}, {"lineNumber": 516, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 517, "col_offset": 15, "nodeName": "return_sample_weights", "type": "Any"}, {"lineNumber": 523, "col_offset": 15, "nodeName": "wait_priority_after_sampling", "type": "Any"}, {"lineNumber": 526, "col_offset": 16, "nodeName": "ep", "type": "Any"}, {"lineNumber": 526, "col_offset": 22, "nodeName": "s", "type": "Any"}, {"lineNumber": 540, "col_offset": 11, "nodeName": "replay_buffer_type", "type": "Any"}, {"lineNumber": 541, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 549, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 550, "col_offset": 12, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 554, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 555, "col_offset": 12, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 559, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 560, "col_offset": 12, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "stop_current_episode", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "stop_current_episode", "type": "Any"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 589, "col_offset": 11, "nodeName": "replay_buffer_type", "type": "Any"}, {"lineNumber": 590, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 597, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 598, "col_offset": 12, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 602, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 603, "col_offset": 12, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 607, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "stop_current_episode", "type": "Any"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "stop_current_episode", "type": "Any"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 631, "col_offset": 20, "nodeName": "PrioritizedReplayBuffer", "type": "Any"}, {"lineNumber": 632, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "_sample1", "type": "Callable[[], Any]"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 644, "col_offset": 26, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 644, "col_offset": 42, "nodeName": "_sample1", "type": "Callable[[], Any]"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 647, "col_offset": 26, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 647, "col_offset": 42, "nodeName": "_set1", "type": "Callable[[], Any]"}, {"lineNumber": 650, "col_offset": 8, "nodeName": "_sample1", "type": "Callable[[], Any]"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "_set1", "type": "Callable[[], Any]"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 652, "col_offset": 26, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 652, "col_offset": 42, "nodeName": "_set1", "type": "Callable[[], Any]"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 670, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 670, "col_offset": 27, "nodeName": "four_step_transition", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 671, "col_offset": 16, "nodeName": "batch_experiences", "type": "Any"}, {"lineNumber": 672, "col_offset": 12, "nodeName": "experiences", "type": "List[List[Dict[Any, Any]]]"}, {"lineNumber": 672, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "collections", "type": "module"}, {"lineNumber": 37, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "s1", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "copy", "type": "module"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "s1", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 121, "col_offset": 36, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "collections", "type": "module"}, {"lineNumber": 131, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "copy", "type": "module"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "sample", "type": "Any"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "k", "type": "int"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 197, "col_offset": 37, "nodeName": "k", "type": "int"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "sample_episodes", "type": "Any"}, {"lineNumber": 200, "col_offset": 37, "nodeName": "k", "type": "int"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 201, "col_offset": 37, "nodeName": "k", "type": "int"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "sample_episodes", "type": "Any"}, {"lineNumber": 203, "col_offset": 37, "nodeName": "k", "type": "int"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "n", "type": "int"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 232, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 243, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 249, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 250, "col_offset": 29, "nodeName": "s5", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 254, "col_offset": 26, "nodeName": "n", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 258, "col_offset": 14, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 259, "col_offset": 29, "nodeName": "s2e", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 268, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 286, "col_offset": 29, "nodeName": "normalize_by_max", "type": "Any"}, {"lineNumber": 288, "col_offset": 22, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 293, "col_offset": 23, "nodeName": "collections", "type": "module"}, {"lineNumber": 293, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 295, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 297, "col_offset": 32, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 299, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 300, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 302, "col_offset": 29, "nodeName": "s1", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 305, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 305, "col_offset": 37, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 308, "col_offset": 24, "nodeName": "copy", "type": "module"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 312, "col_offset": 22, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 313, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 316, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 316, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 327, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 332, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 337, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 342, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 344, "col_offset": 29, "nodeName": "normalize_by_max", "type": "Any"}, {"lineNumber": 346, "col_offset": 22, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 351, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 354, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 354, "col_offset": 19, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 360, "col_offset": 31, "nodeName": "errors", "type": "List[Any]"}, {"lineNumber": 363, "col_offset": 18, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 368, "col_offset": 22, "nodeName": "sample", "type": "Any"}, {"lineNumber": 369, "col_offset": 20, "nodeName": "max", "type": "Callable"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "normalize_by_max", "type": "Any"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "set_errors_based_on_state", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 380, "col_offset": 38, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 380, "col_offset": 44, "nodeName": "samples", "type": "Any"}, {"lineNumber": 387, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 393, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 393, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 398, "col_offset": 22, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 400, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 400, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 406, "col_offset": 18, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 408, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 409, "col_offset": 63, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 412, "col_offset": 23, "nodeName": "collections", "type": "module"}, {"lineNumber": 412, "col_offset": 52, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 414, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 416, "col_offset": 32, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 418, "col_offset": 24, "nodeName": "copy", "type": "module"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 422, "col_offset": 22, "nodeName": "trans2", "type": "Dict[Any, Any]"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 425, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 425, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 428, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 432, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 433, "col_offset": 63, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 436, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 436, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 442, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 442, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 445, "col_offset": 13, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 457, "col_offset": 15, "nodeName": "exp", "type": "Any"}, {"lineNumber": 457, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 457, "col_offset": 44, "nodeName": "episode", "type": "Any"}, {"lineNumber": 481, "col_offset": 15, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 482, "col_offset": 21, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 483, "col_offset": 29, "nodeName": "normalize_by_max", "type": "Any"}, {"lineNumber": 484, "col_offset": 34, "nodeName": "default_priority_func", "type": "Any"}, {"lineNumber": 485, "col_offset": 26, "nodeName": "uniform_ratio", "type": "Any"}, {"lineNumber": 486, "col_offset": 41, "nodeName": "wait_priority_after_sampling", "type": "Any"}, {"lineNumber": 487, "col_offset": 34, "nodeName": "return_sample_weights", "type": "Any"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 497, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 497, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 498, "col_offset": 25, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 501, "col_offset": 16, "nodeName": "sample", "type": "Any"}, {"lineNumber": 501, "col_offset": 28, "nodeName": "k", "type": "int"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 502, "col_offset": 37, "nodeName": "k", "type": "int"}, {"lineNumber": 505, "col_offset": 18, "nodeName": "sample_episodes", "type": "Any"}, {"lineNumber": 505, "col_offset": 39, "nodeName": "k", "type": "int"}, {"lineNumber": 506, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 507, "col_offset": 24, "nodeName": "ret", "type": "Any"}, {"lineNumber": 511, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 511, "col_offset": 20, "nodeName": "ret", "type": "Any"}, {"lineNumber": 513, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 516, "col_offset": 18, "nodeName": "sample_episodes", "type": "Any"}, {"lineNumber": 516, "col_offset": 39, "nodeName": "k", "type": "int"}, {"lineNumber": 517, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 518, "col_offset": 24, "nodeName": "ret", "type": "Any"}, {"lineNumber": 522, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 522, "col_offset": 20, "nodeName": "ret", "type": "Any"}, {"lineNumber": 523, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 540, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 541, "col_offset": 19, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 542, "col_offset": 13, "nodeName": "replay_buffer_type", "type": "Any"}, {"lineNumber": 543, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 550, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 552, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 555, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 557, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 560, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 562, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 567, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 567, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 573, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 573, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 579, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 579, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 589, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 590, "col_offset": 19, "nodeName": "EpisodicReplayBuffer", "type": "Any"}, {"lineNumber": 591, "col_offset": 13, "nodeName": "replay_buffer_type", "type": "Any"}, {"lineNumber": 592, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 598, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 600, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 603, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 605, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 608, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 613, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 613, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 619, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 619, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 625, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 625, "col_offset": 29, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 631, "col_offset": 20, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 634, "col_offset": 27, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 644, "col_offset": 42, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 647, "col_offset": 42, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 650, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 652, "col_offset": 42, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "experiences", "type": "List[List[Dict[Any, Any]]]"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "experiences", "type": "List[List[Dict[Any, Any]]]"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "four_step_transition", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 667, "col_offset": 36, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 670, "col_offset": 8, "nodeName": "experiences", "type": "List[List[Dict[Any, Any]]]"}, {"lineNumber": 671, "col_offset": 16, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "self", "type": "TestBatchExperiences"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "self", "type": "TestBatchExperiences"}, {"lineNumber": 674, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 675, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "self", "type": "TestBatchExperiences"}, {"lineNumber": 677, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 678, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "self", "type": "TestBatchExperiences"}, {"lineNumber": 681, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 682, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 58, "col_offset": 41, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 61, "col_offset": 41, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 121, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 137, "col_offset": 26, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 166, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 166, "col_offset": 41, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 167, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 167, "col_offset": 41, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 169, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 169, "col_offset": 41, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 170, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 170, "col_offset": 41, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 197, "col_offset": 33, "nodeName": "s", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 201, "col_offset": 33, "nodeName": "s", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "t0", "type": "Any"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "t1", "type": "Any"}, {"lineNumber": 206, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 206, "col_offset": 34, "nodeName": "ep", "type": "Any"}, {"lineNumber": 220, "col_offset": 27, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 228, "col_offset": 22, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 252, "col_offset": 23, "nodeName": "t", "type": "Any"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 254, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 255, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 255, "col_offset": 35, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 261, "col_offset": 29, "nodeName": "s2e", "type": "Any"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 262, "col_offset": 29, "nodeName": "s2e", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 264, "col_offset": 29, "nodeName": "s2e", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "s2e", "type": "Any"}, {"lineNumber": 286, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 298, "col_offset": 26, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "s1", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "s2", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "s2", "type": "Any"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 320, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 320, "col_offset": 41, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 321, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 321, "col_offset": 41, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 323, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 323, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 323, "col_offset": 41, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 324, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 324, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 324, "col_offset": 41, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 344, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 346, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 353, "col_offset": 26, "nodeName": "trans", "type": "Dict[Any, Any]"}, {"lineNumber": 359, "col_offset": 40, "nodeName": "s", "type": "Any"}, {"lineNumber": 359, "col_offset": 45, "nodeName": "samples", "type": "Any"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 368, "col_offset": 22, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 368, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 372, "col_offset": 39, "nodeName": "max_w", "type": "Any"}, {"lineNumber": 373, "col_offset": 17, "nodeName": "normalize_by_max", "type": "Any"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 392, "col_offset": 26, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 417, "col_offset": 26, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 428, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "s2", "type": "Any"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "s2", "type": "Any"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 449, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 449, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 449, "col_offset": 41, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 450, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 450, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 450, "col_offset": 41, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 452, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 452, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 452, "col_offset": 41, "nodeName": "correct_item2", "type": "Any"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 453, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 453, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 453, "col_offset": 41, "nodeName": "correct_item", "type": "collections.deque[Dict[Any, Any]]"}, {"lineNumber": 457, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 457, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 482, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 483, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 484, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 485, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 486, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 487, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 493, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 495, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 501, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 502, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 502, "col_offset": 33, "nodeName": "s", "type": "Any"}, {"lineNumber": 505, "col_offset": 18, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 507, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 507, "col_offset": 19, "nodeName": "wt", "type": "Any"}, {"lineNumber": 508, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 508, "col_offset": 41, "nodeName": "k", "type": "int"}, {"lineNumber": 509, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 509, "col_offset": 42, "nodeName": "k", "type": "int"}, {"lineNumber": 512, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 512, "col_offset": 41, "nodeName": "k", "type": "int"}, {"lineNumber": 514, "col_offset": 16, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 516, "col_offset": 18, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 518, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 518, "col_offset": 19, "nodeName": "wt", "type": "Any"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 519, "col_offset": 41, "nodeName": "k", "type": "int"}, {"lineNumber": 520, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 520, "col_offset": 42, "nodeName": "k", "type": "int"}, {"lineNumber": 524, "col_offset": 16, "nodeName": "update_errors", "type": "Any"}, {"lineNumber": 527, "col_offset": 16, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 528, "col_offset": 20, "nodeName": "t0", "type": "Any"}, {"lineNumber": 528, "col_offset": 24, "nodeName": "t1", "type": "Any"}, {"lineNumber": 528, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 528, "col_offset": 34, "nodeName": "ep", "type": "Any"}, {"lineNumber": 541, "col_offset": 19, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 541, "col_offset": 71, "nodeName": "n", "type": "int"}, {"lineNumber": 542, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 543, "col_offset": 19, "nodeName": "PrioritizedReplayBuffer", "type": "Any"}, {"lineNumber": 552, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 552, "col_offset": 36, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 557, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 557, "col_offset": 36, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 562, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 562, "col_offset": 36, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 590, "col_offset": 19, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 591, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 592, "col_offset": 19, "nodeName": "PrioritizedEpisodicReplayBuffer", "type": "Any"}, {"lineNumber": 600, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 600, "col_offset": 36, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 605, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 605, "col_offset": 36, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 610, "col_offset": 36, "nodeName": "trans1", "type": "Dict[Any, Any]"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 634, "col_offset": 27, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "self", "type": "TestReplayBufferFail"}, {"lineNumber": 661, "col_offset": 62, "nodeName": "i", "type": "int"}, {"lineNumber": 662, "col_offset": 28, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 664, "col_offset": 32, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 673, "col_offset": 25, "nodeName": "batch", "type": "Any"}, {"lineNumber": 674, "col_offset": 38, "nodeName": "batch", "type": "Any"}, {"lineNumber": 675, "col_offset": 38, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 677, "col_offset": 38, "nodeName": "batch", "type": "Any"}, {"lineNumber": 678, "col_offset": 38, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 681, "col_offset": 38, "nodeName": "batch", "type": "Any"}, {"lineNumber": 682, "col_offset": 38, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "s2", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "item", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "s2", "type": "Any"}, {"lineNumber": 188, "col_offset": 31, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 188, "col_offset": 37, "nodeName": "n", "type": "int"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 190, "col_offset": 30, "nodeName": "trans", "type": "Dict[Any, Any]"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 205, "col_offset": 41, "nodeName": "ep", "type": "Any"}, {"lineNumber": 206, "col_offset": 38, "nodeName": "ep", "type": "Any"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 255, "col_offset": 42, "nodeName": "n", "type": "Any"}, {"lineNumber": 260, "col_offset": 11, "nodeName": "s2e", "type": "Any"}, {"lineNumber": 261, "col_offset": 38, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 261, "col_offset": 49, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 262, "col_offset": 38, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 262, "col_offset": 49, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 262, "col_offset": 60, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 264, "col_offset": 38, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 264, "col_offset": 49, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 264, "col_offset": 60, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 265, "col_offset": 38, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 265, "col_offset": 49, "nodeName": "transs", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 303, "col_offset": 31, "nodeName": "s1", "type": "Any"}, {"lineNumber": 319, "col_offset": 11, "nodeName": "s2", "type": "Any"}, {"lineNumber": 328, "col_offset": 34, "nodeName": "s3", "type": "Any"}, {"lineNumber": 328, "col_offset": 54, "nodeName": "s3", "type": "Any"}, {"lineNumber": 333, "col_offset": 31, "nodeName": "s3", "type": "Any"}, {"lineNumber": 333, "col_offset": 51, "nodeName": "s3", "type": "Any"}, {"lineNumber": 338, "col_offset": 31, "nodeName": "s4", "type": "Any"}, {"lineNumber": 338, "col_offset": 51, "nodeName": "s4", "type": "Any"}, {"lineNumber": 351, "col_offset": 65, "nodeName": "i", "type": "int"}, {"lineNumber": 359, "col_offset": 22, "nodeName": "s", "type": "Any"}, {"lineNumber": 369, "col_offset": 43, "nodeName": "s", "type": "Any"}, {"lineNumber": 369, "col_offset": 48, "nodeName": "samples", "type": "Any"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 373, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 376, "col_offset": 19, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 448, "col_offset": 11, "nodeName": "s2", "type": "Any"}, {"lineNumber": 493, "col_offset": 31, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 493, "col_offset": 37, "nodeName": "n", "type": "int"}, {"lineNumber": 495, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 495, "col_offset": 30, "nodeName": "trans", "type": "Dict[Any, Any]"}, {"lineNumber": 508, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 508, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 508, "col_offset": 37, "nodeName": "s", "type": "Any"}, {"lineNumber": 509, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 509, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 509, "col_offset": 37, "nodeName": "wt", "type": "Any"}, {"lineNumber": 512, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 512, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 512, "col_offset": 37, "nodeName": "s", "type": "Any"}, {"lineNumber": 514, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 514, "col_offset": 43, "nodeName": "k", "type": "int"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 519, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 519, "col_offset": 37, "nodeName": "s", "type": "Any"}, {"lineNumber": 520, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 520, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 520, "col_offset": 37, "nodeName": "wt", "type": "Any"}, {"lineNumber": 524, "col_offset": 16, "nodeName": "rbuf", "type": "Any"}, {"lineNumber": 524, "col_offset": 43, "nodeName": "k", "type": "int"}, {"lineNumber": 527, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 527, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 527, "col_offset": 41, "nodeName": "ep", "type": "Any"}, {"lineNumber": 528, "col_offset": 38, "nodeName": "ep", "type": "Any"}, {"lineNumber": 529, "col_offset": 20, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 530, "col_offset": 20, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 543, "col_offset": 19, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 544, "col_offset": 41, "nodeName": "n", "type": "int"}, {"lineNumber": 556, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 592, "col_offset": 19, "nodeName": "replay_buffer", "type": "module"}, {"lineNumber": 604, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 661, "col_offset": 67, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 675, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 676, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 678, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 680, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 682, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "s2", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 37, "nodeName": "t0", "type": "Any"}, {"lineNumber": 207, "col_offset": 55, "nodeName": "t1", "type": "Any"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 37, "nodeName": "t0", "type": "Any"}, {"lineNumber": 208, "col_offset": 56, "nodeName": "t1", "type": "Any"}, {"lineNumber": 319, "col_offset": 17, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 369, "col_offset": 24, "nodeName": "s", "type": "Any"}, {"lineNumber": 377, "col_offset": 20, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 377, "col_offset": 43, "nodeName": "max_w", "type": "Any"}, {"lineNumber": 379, "col_offset": 20, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 379, "col_offset": 36, "nodeName": "max_w", "type": "Any"}, {"lineNumber": 448, "col_offset": 17, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 529, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 529, "col_offset": 37, "nodeName": "t0", "type": "Any"}, {"lineNumber": 529, "col_offset": 55, "nodeName": "t1", "type": "Any"}, {"lineNumber": 530, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 530, "col_offset": 37, "nodeName": "t0", "type": "Any"}, {"lineNumber": 530, "col_offset": 56, "nodeName": "t1", "type": "Any"}, {"lineNumber": 676, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 680, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "s2", "type": "Any"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "s2", "type": "Any"}, {"lineNumber": 97, "col_offset": 37, "nodeName": "item", "type": "Any"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 98, "col_offset": 39, "nodeName": "item", "type": "Any"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "item", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 376, "col_offset": 46, "nodeName": "s", "type": "Any"}, {"lineNumber": 376, "col_offset": 51, "nodeName": "samples", "type": "Any"}, {"lineNumber": 377, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 379, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 41, "nodeName": "item", "type": "Any"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "item", "type": "Any"}, {"lineNumber": 99, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 376, "col_offset": 23, "nodeName": "s", "type": "Any"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 97, "col_offset": 46, "nodeName": "item", "type": "Any"}]