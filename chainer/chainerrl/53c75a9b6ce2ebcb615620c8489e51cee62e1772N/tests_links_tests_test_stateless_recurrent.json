[{"lineNumber": 10, "col_offset": 33, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "test_array_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "test_tuple_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "test_array_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "test_tuple_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "test_array_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "test_tuple_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 38, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "test", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "_test_lstm", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "test_lstm_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "test_lstm_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "_test_non_lstm", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "test_gru_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "test_gru_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "test_rnn_relu_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "test_rnn_relu_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "test_rnn_tanh_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "test_rnn_tanh_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 293, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "_test_lstm", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "test_lstm_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "test_lstm_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "_test_non_lstm", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "test_gru_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "test_gru_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 418, "col_offset": 4, "nodeName": "test_rnn_relu_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "test_rnn_relu_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "test_rnn_tanh_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "test_rnn_tanh_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 33, "nodeName": "unittest", "type": "module"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 148, "col_offset": 38, "nodeName": "unittest", "type": "module"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 293, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "in_size", "type": "int"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "xs", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "in_size0", "type": "int"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "in_size1", "type": "int"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "in_size", "type": "int"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "batched_seqs", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "sections", "type": "List[int]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "in_size0", "type": "int"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "in_size1", "type": "int"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "batched_seqs_x0", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "batched_seqs_x1", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "sections", "type": "List[int]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "in_size", "type": "int"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "concat_seqs", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "in_size0", "type": "int"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "in_size1", "type": "int"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "concat_seqs", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "in_size", "type": "int"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "out_size", "type": "int"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "in_size", "type": "int"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "out_size", "type": "int"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "cls", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "in_size", "type": "int"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "out_size", "type": "int"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "in_size", "type": "int"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "out_size", "type": "int"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "cls", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "rs0_mask0", "type": "Any"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 16, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "split_one_step_batch_input", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 17, "col_offset": 63, "nodeName": "xs", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 19, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 20, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "split_one_step_batch_input", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 33, "col_offset": 63, "nodeName": "xs", "type": "Tuple[Any, Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "split_batched_sequences", "type": "Callable[[Any, Any], List[Any]]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "batched_seqs", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "sections", "type": "List[int]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "seqs_x0", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "seqs_x1", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "split_batched_sequences", "type": "Callable[[Any, Any], List[Any]]"}, {"lineNumber": 86, "col_offset": 48, "nodeName": "sections", "type": "List[int]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 40, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "concatenate_sequences", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 64, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 112, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "concatenate_sequences", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 64, "nodeName": "seqs_x", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "concat_seqs", "type": "Any"}, {"lineNumber": 136, "col_offset": 43, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 143, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "StatelessRecurrentChainList", "type": "Type[chainerrl.links.stateless_recurrent.StatelessRecurrentChainList]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "NStepLSTM", "type": "Any"}, {"lineNumber": 178, "col_offset": 30, "nodeName": "in_size", "type": "int"}, {"lineNumber": 178, "col_offset": 39, "nodeName": "out_size", "type": "int"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "h0", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "c0", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "y0", "type": "Any"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "link", "type": "Any"}, {"lineNumber": 181, "col_offset": 38, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "h1", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "c1", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "y1", "type": "Any"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "link", "type": "Any"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "h0", "type": "Any"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "c0", "type": "Any"}, {"lineNumber": 182, "col_offset": 34, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "call_recurrent_link", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 192, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 192, "col_offset": 53, "nodeName": "array", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 193, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 193, "col_offset": 53, "nodeName": "array", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 194, "col_offset": 53, "nodeName": "array", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 196, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 196, "col_offset": 54, "nodeName": "array", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 197, "col_offset": 54, "nodeName": "array", "type": "Any"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "call_recurrent_link", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 200, "col_offset": 18, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 200, "col_offset": 26, "nodeName": "call_rs0", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 202, "col_offset": 53, "nodeName": "array", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 203, "col_offset": 53, "nodeName": "array", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 204, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 204, "col_offset": 53, "nodeName": "array", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 206, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 206, "col_offset": 54, "nodeName": "array", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 207, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 207, "col_offset": 54, "nodeName": "array", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "call_recurrent_link", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "link", "type": "Any"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 213, "col_offset": 61, "nodeName": "array", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 214, "col_offset": 62, "nodeName": "array", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 215, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 215, "col_offset": 61, "nodeName": "array", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 217, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 217, "col_offset": 61, "nodeName": "array", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 218, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 218, "col_offset": 61, "nodeName": "array", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "_test_lstm", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "_test_lstm", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 236, "col_offset": 14, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "L", "type": "Any"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 237, "col_offset": 22, "nodeName": "in_size", "type": "int"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "out_size", "type": "int"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "h0", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "y0", "type": "Any"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "link", "type": "Any"}, {"lineNumber": 240, "col_offset": 28, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "h1", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "y1", "type": "Any"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "link", "type": "Any"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "h0", "type": "Any"}, {"lineNumber": 241, "col_offset": 26, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 246, "col_offset": 28, "nodeName": "call_recurrent_link", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 247, "col_offset": 18, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 249, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 249, "col_offset": 53, "nodeName": "array", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 250, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 250, "col_offset": 53, "nodeName": "array", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 251, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 251, "col_offset": 53, "nodeName": "array", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 252, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 252, "col_offset": 51, "nodeName": "array", "type": "Any"}, {"lineNumber": 254, "col_offset": 28, "nodeName": "call_recurrent_link", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 255, "col_offset": 18, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 255, "col_offset": 26, "nodeName": "call_rs0", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 257, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 257, "col_offset": 53, "nodeName": "array", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 258, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 258, "col_offset": 53, "nodeName": "array", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 259, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 259, "col_offset": 53, "nodeName": "array", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 260, "col_offset": 51, "nodeName": "array", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "call_recurrent_link", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "link", "type": "Any"}, {"lineNumber": 265, "col_offset": 22, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 266, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 266, "col_offset": 61, "nodeName": "array", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 267, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 267, "col_offset": 62, "nodeName": "array", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 268, "col_offset": 61, "nodeName": "array", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 269, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 269, "col_offset": 58, "nodeName": "array", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "_test_non_lstm", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "_test_non_lstm", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "_test_non_lstm", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "_test_non_lstm", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "_test_non_lstm", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "_test_non_lstm", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "NStepLSTM", "type": "Any"}, {"lineNumber": 303, "col_offset": 30, "nodeName": "in_size", "type": "int"}, {"lineNumber": 303, "col_offset": 39, "nodeName": "out_size", "type": "int"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "h0", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "c0", "type": "Any"}, {"lineNumber": 306, "col_offset": 16, "nodeName": "y0", "type": "Any"}, {"lineNumber": 306, "col_offset": 21, "nodeName": "link", "type": "Any"}, {"lineNumber": 306, "col_offset": 38, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "h1", "type": "Any"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "c1", "type": "Any"}, {"lineNumber": 307, "col_offset": 16, "nodeName": "y1", "type": "Any"}, {"lineNumber": 307, "col_offset": 21, "nodeName": "link", "type": "Any"}, {"lineNumber": 307, "col_offset": 26, "nodeName": "h0", "type": "Any"}, {"lineNumber": 307, "col_offset": 30, "nodeName": "c0", "type": "Any"}, {"lineNumber": 307, "col_offset": 34, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 308, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 314, "col_offset": 20, "nodeName": "mask_recurrent_state_at", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 316, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 316, "col_offset": 14, "nodeName": "y1m0", "type": "Any"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "link", "type": "Any"}, {"lineNumber": 316, "col_offset": 54, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 317, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 317, "col_offset": 50, "nodeName": "array", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 318, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 318, "col_offset": 50, "nodeName": "array", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 319, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 319, "col_offset": 50, "nodeName": "array", "type": "Any"}, {"lineNumber": 322, "col_offset": 20, "nodeName": "mask_recurrent_state_at", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 324, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 324, "col_offset": 14, "nodeName": "y1m1", "type": "Any"}, {"lineNumber": 324, "col_offset": 21, "nodeName": "link", "type": "Any"}, {"lineNumber": 324, "col_offset": 54, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 325, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 325, "col_offset": 50, "nodeName": "array", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 326, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 326, "col_offset": 50, "nodeName": "array", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 327, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 327, "col_offset": 50, "nodeName": "array", "type": "Any"}, {"lineNumber": 330, "col_offset": 21, "nodeName": "mask_recurrent_state_at", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 332, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 332, "col_offset": 14, "nodeName": "y1m12", "type": "Any"}, {"lineNumber": 332, "col_offset": 22, "nodeName": "link", "type": "Any"}, {"lineNumber": 332, "col_offset": 57, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 333, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 333, "col_offset": 51, "nodeName": "array", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 334, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 334, "col_offset": 51, "nodeName": "array", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 335, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 335, "col_offset": 51, "nodeName": "array", "type": "Any"}, {"lineNumber": 338, "col_offset": 19, "nodeName": "get_recurrent_state_at", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 340, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 341, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 342, "col_offset": 25, "nodeName": "concatenate_recurrent_states", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 344, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 344, "col_offset": 14, "nodeName": "y1g1", "type": "Any"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "link", "type": "Any"}, {"lineNumber": 344, "col_offset": 64, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 345, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 345, "col_offset": 50, "nodeName": "array", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 346, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 346, "col_offset": 50, "nodeName": "array", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 347, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 347, "col_offset": 50, "nodeName": "array", "type": "Any"}, {"lineNumber": 350, "col_offset": 19, "nodeName": "get_recurrent_state_at", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "_test_lstm", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "_test_lstm", "type": "Callable[[Any], Any]"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 371, "col_offset": 14, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 371, "col_offset": 22, "nodeName": "L", "type": "Any"}, {"lineNumber": 371, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 372, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 372, "col_offset": 22, "nodeName": "in_size", "type": "int"}, {"lineNumber": 372, "col_offset": 31, "nodeName": "out_size", "type": "int"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "h0", "type": "Any"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "y0", "type": "Any"}, {"lineNumber": 375, "col_offset": 17, "nodeName": "link", "type": "Any"}, {"lineNumber": 375, "col_offset": 28, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "h1", "type": "Any"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "y1", "type": "Any"}, {"lineNumber": 376, "col_offset": 17, "nodeName": "link", "type": "Any"}, {"lineNumber": 376, "col_offset": 22, "nodeName": "h0", "type": "Any"}, {"lineNumber": 376, "col_offset": 26, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 377, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 381, "col_offset": 20, "nodeName": "mask_recurrent_state_at", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 381, "col_offset": 64, "nodeName": "link", "type": "Any"}, {"lineNumber": 381, "col_offset": 70, "nodeName": "h0", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 382, "col_offset": 11, "nodeName": "y1m0", "type": "Any"}, {"lineNumber": 382, "col_offset": 18, "nodeName": "link", "type": "Any"}, {"lineNumber": 382, "col_offset": 23, "nodeName": "rs0_mask0", "type": "Any"}, {"lineNumber": 382, "col_offset": 34, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 383, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 383, "col_offset": 50, "nodeName": "array", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 384, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 384, "col_offset": 50, "nodeName": "array", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 385, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 385, "col_offset": 50, "nodeName": "array", "type": "Any"}, {"lineNumber": 388, "col_offset": 21, "nodeName": "mask_recurrent_state_at", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 389, "col_offset": 18, "nodeName": "h0", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 390, "col_offset": 11, "nodeName": "y1m12", "type": "Any"}, {"lineNumber": 390, "col_offset": 19, "nodeName": "link", "type": "Any"}, {"lineNumber": 390, "col_offset": 24, "nodeName": "rs0_mask12", "type": "Any"}, {"lineNumber": 390, "col_offset": 36, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 391, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 391, "col_offset": 51, "nodeName": "array", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 392, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 392, "col_offset": 51, "nodeName": "array", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 393, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 393, "col_offset": 51, "nodeName": "array", "type": "Any"}, {"lineNumber": 396, "col_offset": 19, "nodeName": "get_recurrent_state_at", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 397, "col_offset": 18, "nodeName": "h0", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 398, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 399, "col_offset": 25, "nodeName": "concatenate_recurrent_states", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "y1g1", "type": "Any"}, {"lineNumber": 401, "col_offset": 18, "nodeName": "link", "type": "Any"}, {"lineNumber": 401, "col_offset": 23, "nodeName": "concat_rs_get1", "type": "Any"}, {"lineNumber": 401, "col_offset": 39, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 402, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 402, "col_offset": 50, "nodeName": "array", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 403, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 403, "col_offset": 50, "nodeName": "array", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 404, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 404, "col_offset": 50, "nodeName": "array", "type": "Any"}, {"lineNumber": 407, "col_offset": 19, "nodeName": "get_recurrent_state_at", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 408, "col_offset": 18, "nodeName": "h0", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 409, "col_offset": 35, "nodeName": "rs0_get1", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "_test_non_lstm", "type": "Any"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "_test_non_lstm", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "_test_non_lstm", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "_test_non_lstm", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "_test_non_lstm", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "_test_non_lstm", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 16, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestSplitOneStepBatchInput"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 18, "col_offset": 29, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 30, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 31, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestSplitOneStepBatchInput"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestSplitOneStepBatchInput"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 53, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 54, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 55, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestSplitBatchedSequences"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "batched_seqs", "type": "Any"}, {"lineNumber": 58, "col_offset": 49, "nodeName": "in_size", "type": "int"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestSplitBatchedSequences"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 63, "col_offset": 51, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 64, "col_offset": 51, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 65, "col_offset": 51, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 73, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 74, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 75, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 78, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 79, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 80, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "batched_seqs_x0", "type": "Any"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "batched_seqs_x1", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestSplitBatchedSequences"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestSplitBatchedSequences"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestSplitBatchedSequences"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 90, "col_offset": 54, "nodeName": "seqs_x0", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 91, "col_offset": 54, "nodeName": "seqs_x1", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 92, "col_offset": 54, "nodeName": "seqs_x0", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "seqs_x1", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 94, "col_offset": 54, "nodeName": "seqs_x0", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 95, "col_offset": 54, "nodeName": "seqs_x1", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 105, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 106, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 107, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestConcatenateSequences"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "concat_seqs", "type": "Any"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "in_size", "type": "int"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 111, "col_offset": 58, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 112, "col_offset": 59, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 113, "col_offset": 58, "nodeName": "seqs_x", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 121, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 122, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 123, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 126, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 127, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 128, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "TestConcatenateSequences"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "TestConcatenateSequences"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "concat_seqs", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestConcatenateSequences"}, {"lineNumber": 138, "col_offset": 51, "nodeName": "in_size0", "type": "int"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestConcatenateSequences"}, {"lineNumber": 139, "col_offset": 51, "nodeName": "in_size1", "type": "int"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 140, "col_offset": 61, "nodeName": "seqs_x0", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 141, "col_offset": 62, "nodeName": "seqs_x0", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 142, "col_offset": 61, "nodeName": "seqs_x0", "type": "List[Any]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 143, "col_offset": 61, "nodeName": "seqs_x1", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 144, "col_offset": 62, "nodeName": "seqs_x1", "type": "List[Any]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 145, "col_offset": 61, "nodeName": "seqs_x1", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "NStepLSTM", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "StatelessRecurrentChainList", "type": "Type[chainerrl.links.stateless_recurrent.StatelessRecurrentChainList]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentChainList"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "recurrent_children", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentChainList"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "recurrent_children", "type": "Any"}, {"lineNumber": 161, "col_offset": 50, "nodeName": "link", "type": "chainerrl.links.stateless_recurrent.StatelessRecurrentChainList"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentChainList"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "recurrent_children", "type": "Any"}, {"lineNumber": 162, "col_offset": 50, "nodeName": "link", "type": "chainerrl.links.stateless_recurrent.StatelessRecurrentChainList"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentChainList"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "recurrent_children", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "TestStatelessRecurrentChainList"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "recurrent_children", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 174, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 175, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 176, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "L", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "TestCallRecurrentLink"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "h0", "type": "Any"}, {"lineNumber": 183, "col_offset": 42, "nodeName": "out_size", "type": "int"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestCallRecurrentLink"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "c0", "type": "Any"}, {"lineNumber": 184, "col_offset": 42, "nodeName": "out_size", "type": "int"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "TestCallRecurrentLink"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "h1", "type": "Any"}, {"lineNumber": 185, "col_offset": 42, "nodeName": "out_size", "type": "int"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "TestCallRecurrentLink"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "c1", "type": "Any"}, {"lineNumber": 186, "col_offset": 42, "nodeName": "out_size", "type": "int"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "TestCallRecurrentLink"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "call_y0", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "TestCallRecurrentLink"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 195, "col_offset": 29, "nodeName": "call_rs0", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 196, "col_offset": 54, "nodeName": "h0", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 197, "col_offset": 54, "nodeName": "c0", "type": "Any"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "TestCallRecurrentLink"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "call_y1", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "TestCallRecurrentLink"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "call_rs1", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 206, "col_offset": 54, "nodeName": "h1", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 207, "col_offset": 54, "nodeName": "c1", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "TestCallRecurrentLink"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 216, "col_offset": 29, "nodeName": "concat_call_rs0", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 217, "col_offset": 61, "nodeName": "h0", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 218, "col_offset": 61, "nodeName": "c0", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "TestCallRecurrentLink"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 231, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 232, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 233, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "TestCallRecurrentLink"}, {"lineNumber": 235, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "TestCallRecurrentLink"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "h0", "type": "Any"}, {"lineNumber": 242, "col_offset": 42, "nodeName": "out_size", "type": "int"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "TestCallRecurrentLink"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "h1", "type": "Any"}, {"lineNumber": 243, "col_offset": 42, "nodeName": "out_size", "type": "int"}, {"lineNumber": 246, "col_offset": 28, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "TestCallRecurrentLink"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 248, "col_offset": 29, "nodeName": "call_y0", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 252, "col_offset": 35, "nodeName": "call_rs0", "type": "Any"}, {"lineNumber": 252, "col_offset": 51, "nodeName": "h0", "type": "Any"}, {"lineNumber": 254, "col_offset": 28, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "TestCallRecurrentLink"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "call_y1", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "call_rs1", "type": "Any"}, {"lineNumber": 260, "col_offset": 51, "nodeName": "h1", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 269, "col_offset": 35, "nodeName": "concat_call_rs0", "type": "Any"}, {"lineNumber": 269, "col_offset": 58, "nodeName": "h0", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "TestCallRecurrentLink"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "self", "type": "TestCallRecurrentLink"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "TestCallRecurrentLink"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 299, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 300, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 301, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "L", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "self", "type": "TestRecurrentStateFunctions"}, {"lineNumber": 308, "col_offset": 25, "nodeName": "h0", "type": "Any"}, {"lineNumber": 308, "col_offset": 42, "nodeName": "out_size", "type": "int"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "TestRecurrentStateFunctions"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "c0", "type": "Any"}, {"lineNumber": 309, "col_offset": 42, "nodeName": "out_size", "type": "int"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "TestRecurrentStateFunctions"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "h1", "type": "Any"}, {"lineNumber": 310, "col_offset": 42, "nodeName": "out_size", "type": "int"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "TestRecurrentStateFunctions"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "c1", "type": "Any"}, {"lineNumber": 311, "col_offset": 42, "nodeName": "out_size", "type": "int"}, {"lineNumber": 314, "col_offset": 20, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 315, "col_offset": 19, "nodeName": "h0", "type": "Any"}, {"lineNumber": 315, "col_offset": 23, "nodeName": "c0", "type": "Any"}, {"lineNumber": 316, "col_offset": 26, "nodeName": "rs0_mask0", "type": "Any"}, {"lineNumber": 316, "col_offset": 40, "nodeName": "rs0_mask0", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 322, "col_offset": 20, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "h0", "type": "Any"}, {"lineNumber": 323, "col_offset": 23, "nodeName": "c0", "type": "Any"}, {"lineNumber": 324, "col_offset": 26, "nodeName": "rs0_mask1", "type": "Any"}, {"lineNumber": 324, "col_offset": 40, "nodeName": "rs0_mask1", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 330, "col_offset": 21, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "h0", "type": "Any"}, {"lineNumber": 331, "col_offset": 23, "nodeName": "c0", "type": "Any"}, {"lineNumber": 332, "col_offset": 27, "nodeName": "rs0_mask12", "type": "Any"}, {"lineNumber": 332, "col_offset": 42, "nodeName": "rs0_mask12", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 338, "col_offset": 19, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 339, "col_offset": 19, "nodeName": "h0", "type": "Any"}, {"lineNumber": 339, "col_offset": 23, "nodeName": "c0", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 340, "col_offset": 54, "nodeName": "array", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 341, "col_offset": 54, "nodeName": "array", "type": "Any"}, {"lineNumber": 342, "col_offset": 25, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "rs0_get1", "type": "Any"}, {"lineNumber": 344, "col_offset": 26, "nodeName": "concat_rs_get1", "type": "Any"}, {"lineNumber": 344, "col_offset": 45, "nodeName": "concat_rs_get1", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 350, "col_offset": 19, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 351, "col_offset": 19, "nodeName": "h0", "type": "Any"}, {"lineNumber": 351, "col_offset": 23, "nodeName": "c0", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 352, "col_offset": 35, "nodeName": "rs0_get1", "type": "Any"}, {"lineNumber": 352, "col_offset": 48, "nodeName": "array", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 353, "col_offset": 35, "nodeName": "rs0_get1", "type": "Any"}, {"lineNumber": 353, "col_offset": 48, "nodeName": "array", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "self", "type": "TestRecurrentStateFunctions"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 366, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 367, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 368, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "self", "type": "TestRecurrentStateFunctions"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "self", "type": "TestRecurrentStateFunctions"}, {"lineNumber": 377, "col_offset": 25, "nodeName": "h0", "type": "Any"}, {"lineNumber": 377, "col_offset": 42, "nodeName": "out_size", "type": "int"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "self", "type": "TestRecurrentStateFunctions"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "h1", "type": "Any"}, {"lineNumber": 378, "col_offset": 42, "nodeName": "out_size", "type": "int"}, {"lineNumber": 381, "col_offset": 20, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 388, "col_offset": 21, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 396, "col_offset": 19, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 398, "col_offset": 35, "nodeName": "rs0_get1", "type": "Any"}, {"lineNumber": 398, "col_offset": 51, "nodeName": "array", "type": "Any"}, {"lineNumber": 399, "col_offset": 25, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 400, "col_offset": 25, "nodeName": "rs0_get1", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 407, "col_offset": 19, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 409, "col_offset": 45, "nodeName": "array", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "self", "type": "TestRecurrentStateFunctions"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "self", "type": "TestRecurrentStateFunctions"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "self", "type": "TestRecurrentStateFunctions"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 19, "col_offset": 35, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 19, "col_offset": 52, "nodeName": "xs", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 35, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 20, "col_offset": 52, "nodeName": "xs", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 21, "col_offset": 52, "nodeName": "xs", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 22, "col_offset": 52, "nodeName": "xs", "type": "Any"}, {"lineNumber": 30, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "concat_seqs", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 35, "nodeName": "concat_seqs", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "concat_seqs", "type": "Any"}, {"lineNumber": 121, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "seqs_x0", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "seqs_x1", "type": "List[Any]"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "seqs_x0", "type": "List[Any]"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "seqs_x1", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "seqs_x0", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "seqs_x1", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "concat_seqs", "type": "Any"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "concat_seqs", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "stateless_recurrent", "type": "module"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "NStepRNNTanh", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "link", "type": "chainerrl.links.stateless_recurrent.StatelessRecurrentChainList"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "link", "type": "chainerrl.links.stateless_recurrent.StatelessRecurrentChainList"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "link", "type": "chainerrl.links.stateless_recurrent.StatelessRecurrentChainList"}, {"lineNumber": 165, "col_offset": 62, "nodeName": "link", "type": "chainerrl.links.stateless_recurrent.StatelessRecurrentChainList"}, {"lineNumber": 174, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 35, "nodeName": "call_y0", "type": "Any"}, {"lineNumber": 192, "col_offset": 53, "nodeName": "y0", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 35, "nodeName": "call_y0", "type": "Any"}, {"lineNumber": 193, "col_offset": 53, "nodeName": "y0", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "call_y0", "type": "Any"}, {"lineNumber": 194, "col_offset": 53, "nodeName": "y0", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 35, "nodeName": "call_rs0", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "call_rs0", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "call_y1", "type": "Any"}, {"lineNumber": 202, "col_offset": 53, "nodeName": "y1", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "call_y1", "type": "Any"}, {"lineNumber": 203, "col_offset": 53, "nodeName": "y1", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 204, "col_offset": 35, "nodeName": "call_y1", "type": "Any"}, {"lineNumber": 204, "col_offset": 53, "nodeName": "y1", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 206, "col_offset": 35, "nodeName": "call_rs1", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 35, "nodeName": "call_rs1", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "concat_call_y0", "type": "Any"}, {"lineNumber": 213, "col_offset": 61, "nodeName": "y0", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "concat_call_y0", "type": "Any"}, {"lineNumber": 214, "col_offset": 62, "nodeName": "y0", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 215, "col_offset": 35, "nodeName": "concat_call_y0", "type": "Any"}, {"lineNumber": 215, "col_offset": 61, "nodeName": "y0", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 217, "col_offset": 35, "nodeName": "concat_call_rs0", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 218, "col_offset": 35, "nodeName": "concat_call_rs0", "type": "Any"}, {"lineNumber": 231, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 232, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 233, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 35, "nodeName": "call_y0", "type": "Any"}, {"lineNumber": 249, "col_offset": 53, "nodeName": "y0", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 35, "nodeName": "call_y0", "type": "Any"}, {"lineNumber": 250, "col_offset": 53, "nodeName": "y0", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 251, "col_offset": 35, "nodeName": "call_y0", "type": "Any"}, {"lineNumber": 251, "col_offset": 53, "nodeName": "y0", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 257, "col_offset": 35, "nodeName": "call_y1", "type": "Any"}, {"lineNumber": 257, "col_offset": 53, "nodeName": "y1", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 258, "col_offset": 35, "nodeName": "call_y1", "type": "Any"}, {"lineNumber": 258, "col_offset": 53, "nodeName": "y1", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 35, "nodeName": "call_y1", "type": "Any"}, {"lineNumber": 259, "col_offset": 53, "nodeName": "y1", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 266, "col_offset": 35, "nodeName": "concat_call_y0", "type": "Any"}, {"lineNumber": 266, "col_offset": 61, "nodeName": "y0", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 267, "col_offset": 35, "nodeName": "concat_call_y0", "type": "Any"}, {"lineNumber": 267, "col_offset": 62, "nodeName": "y0", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "concat_call_y0", "type": "Any"}, {"lineNumber": 268, "col_offset": 61, "nodeName": "y0", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 299, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 300, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 301, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 317, "col_offset": 35, "nodeName": "y1m0", "type": "Any"}, {"lineNumber": 317, "col_offset": 50, "nodeName": "y0", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 318, "col_offset": 35, "nodeName": "y1m0", "type": "Any"}, {"lineNumber": 318, "col_offset": 50, "nodeName": "y1", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 319, "col_offset": 35, "nodeName": "y1m0", "type": "Any"}, {"lineNumber": 319, "col_offset": 50, "nodeName": "y1", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 325, "col_offset": 35, "nodeName": "y1m1", "type": "Any"}, {"lineNumber": 325, "col_offset": 50, "nodeName": "y1", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 326, "col_offset": 35, "nodeName": "y1m1", "type": "Any"}, {"lineNumber": 326, "col_offset": 50, "nodeName": "y0", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 327, "col_offset": 35, "nodeName": "y1m1", "type": "Any"}, {"lineNumber": 327, "col_offset": 50, "nodeName": "y1", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 333, "col_offset": 35, "nodeName": "y1m12", "type": "Any"}, {"lineNumber": 333, "col_offset": 51, "nodeName": "y1", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 334, "col_offset": 35, "nodeName": "y1m12", "type": "Any"}, {"lineNumber": 334, "col_offset": 51, "nodeName": "y0", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 335, "col_offset": 35, "nodeName": "y1m12", "type": "Any"}, {"lineNumber": 335, "col_offset": 51, "nodeName": "y0", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 340, "col_offset": 35, "nodeName": "rs0_get1", "type": "Any"}, {"lineNumber": 340, "col_offset": 54, "nodeName": "h0", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 341, "col_offset": 35, "nodeName": "rs0_get1", "type": "Any"}, {"lineNumber": 341, "col_offset": 54, "nodeName": "c0", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 345, "col_offset": 35, "nodeName": "y1g1", "type": "Any"}, {"lineNumber": 345, "col_offset": 50, "nodeName": "y0", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 346, "col_offset": 35, "nodeName": "y1g1", "type": "Any"}, {"lineNumber": 346, "col_offset": 50, "nodeName": "y1", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 347, "col_offset": 35, "nodeName": "y1g1", "type": "Any"}, {"lineNumber": 347, "col_offset": 50, "nodeName": "y0", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 352, "col_offset": 48, "nodeName": "h0", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 353, "col_offset": 48, "nodeName": "c0", "type": "Any"}, {"lineNumber": 366, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 367, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 368, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 383, "col_offset": 35, "nodeName": "y1m0", "type": "Any"}, {"lineNumber": 383, "col_offset": 50, "nodeName": "y0", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 384, "col_offset": 35, "nodeName": "y1m0", "type": "Any"}, {"lineNumber": 384, "col_offset": 50, "nodeName": "y1", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 385, "col_offset": 35, "nodeName": "y1m0", "type": "Any"}, {"lineNumber": 385, "col_offset": 50, "nodeName": "y1", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 391, "col_offset": 35, "nodeName": "y1m12", "type": "Any"}, {"lineNumber": 391, "col_offset": 51, "nodeName": "y1", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 392, "col_offset": 35, "nodeName": "y1m12", "type": "Any"}, {"lineNumber": 392, "col_offset": 51, "nodeName": "y0", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 393, "col_offset": 35, "nodeName": "y1m12", "type": "Any"}, {"lineNumber": 393, "col_offset": 51, "nodeName": "y0", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 398, "col_offset": 51, "nodeName": "h0", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 402, "col_offset": 35, "nodeName": "y1g1", "type": "Any"}, {"lineNumber": 402, "col_offset": 50, "nodeName": "y0", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 403, "col_offset": 35, "nodeName": "y1g1", "type": "Any"}, {"lineNumber": 403, "col_offset": 50, "nodeName": "y1", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 404, "col_offset": 35, "nodeName": "y1g1", "type": "Any"}, {"lineNumber": 404, "col_offset": 50, "nodeName": "y0", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 409, "col_offset": 45, "nodeName": "h0", "type": "Any"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 55, "nodeName": "xs", "type": "Tuple[Any, Any]"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 55, "nodeName": "xs", "type": "Tuple[Any, Any]"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 55, "nodeName": "xs", "type": "Tuple[Any, Any]"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 55, "nodeName": "xs", "type": "Tuple[Any, Any]"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 55, "nodeName": "xs", "type": "Tuple[Any, Any]"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 55, "nodeName": "xs", "type": "Tuple[Any, Any]"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 55, "nodeName": "xs", "type": "Tuple[Any, Any]"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 55, "nodeName": "xs", "type": "Tuple[Any, Any]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "split", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "concat_seqs", "type": "Any"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "concat_seqs", "type": "Any"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "concat_seqs", "type": "Any"}, {"lineNumber": 143, "col_offset": 35, "nodeName": "concat_seqs", "type": "Any"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "concat_seqs", "type": "Any"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "concat_seqs", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "L", "type": "Any"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "recurrent_children", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "recurrent_children", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 16, "col_offset": 47, "nodeName": "in_size", "type": "int"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "link", "type": "chainerrl.links.stateless_recurrent.StatelessRecurrentChainList"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "link", "type": "chainerrl.links.stateless_recurrent.StatelessRecurrentChainList"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 46, "nodeName": "in_size0", "type": "int"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 46, "nodeName": "in_size1", "type": "int"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "in_size0", "type": "int"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "in_size0", "type": "int"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "in_size0", "type": "int"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 46, "nodeName": "in_size1", "type": "int"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 46, "nodeName": "in_size1", "type": "int"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 46, "nodeName": "in_size1", "type": "int"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 46, "nodeName": "in_size0", "type": "int"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 46, "nodeName": "in_size0", "type": "int"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 46, "nodeName": "in_size0", "type": "int"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 46, "nodeName": "in_size1", "type": "int"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 46, "nodeName": "in_size1", "type": "int"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 46, "nodeName": "in_size1", "type": "int"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 231, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 232, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 233, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 299, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 300, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 301, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 366, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 367, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 368, "col_offset": 46, "nodeName": "in_size", "type": "int"}]