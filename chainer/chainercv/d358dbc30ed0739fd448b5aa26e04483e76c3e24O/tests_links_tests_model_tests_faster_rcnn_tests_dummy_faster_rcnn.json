[{"lineNumber": 8, "col_offset": 0, "nodeName": "_random_array", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "_generate_bbox", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "Link", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "__call__", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "Chain", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "__call__", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "Chain", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "__call__", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "FasterRCNN", "type": "Type[chainercv.links.model.faster_rcnn.faster_rcnn.FasterRCNN]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "img_size", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "x_min", "type": "Any"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "y_min", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "x_max", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "y_max", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "bbox", "type": "Any"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "bbox", "type": "Any"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 9, "col_offset": 11, "nodeName": "array", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "W", "type": "Any"}, {"lineNumber": 14, "col_offset": 7, "nodeName": "H", "type": "Any"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "x_min", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "y_min", "type": "Any"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "astype", "type": "Any"}, {"lineNumber": 19, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "feat_stride", "type": "Any"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "feat_stride", "type": "Any"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "n_class", "type": "Any"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "n_class", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "n_roi", "type": "int"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "scores", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "scores", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "n_anchor_base", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "n_anchor_base", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "n_roi", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "n_roi", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "n_anchor", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "rpn_locs", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "rpn_cls_scores", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "roi_indices", "type": "Any"}, {"lineNumber": 9, "col_offset": 11, "nodeName": "xp", "type": "Any"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 10, "col_offset": 52, "nodeName": "float32", "type": "Any"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 15, "col_offset": 33, "nodeName": "W", "type": "Any"}, {"lineNumber": 15, "col_offset": 37, "nodeName": "max_length", "type": "Any"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 16, "col_offset": 33, "nodeName": "H", "type": "Any"}, {"lineNumber": 16, "col_offset": 37, "nodeName": "max_length", "type": "Any"}, {"lineNumber": 17, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 17, "col_offset": 38, "nodeName": "min_length", "type": "int"}, {"lineNumber": 17, "col_offset": 50, "nodeName": "max_length", "type": "Any"}, {"lineNumber": 18, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 18, "col_offset": 38, "nodeName": "min_length", "type": "int"}, {"lineNumber": 18, "col_offset": 50, "nodeName": "max_length", "type": "Any"}, {"lineNumber": 19, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "DummyExtractor"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "H", "type": "Any"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "W", "type": "Any"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "_random_array", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "DummyHead"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "rois", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "randint", "type": "Any"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "scores", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "scores", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "cls_locs", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "scores", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "DummyRegionProposalNetwork"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "DummyRegionProposalNetwork"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "B", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "H", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "W", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 66, "col_offset": 44, "nodeName": "W", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "_random_array", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "xp", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "_random_array", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "xp", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "_generate_bbox", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "n_roi", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "_generate_bbox", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "n_anchor", "type": "Any"}, {"lineNumber": 76, "col_offset": 50, "nodeName": "rois", "type": "Any"}, {"lineNumber": 76, "col_offset": 56, "nodeName": "roi_indices", "type": "Any"}, {"lineNumber": 76, "col_offset": 69, "nodeName": "anchor", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 10, "col_offset": 38, "nodeName": "shape", "type": "Tuple[int, int, Any, Any]"}, {"lineNumber": 10, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 15, "col_offset": 55, "nodeName": "n", "type": "Any"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 16, "col_offset": 55, "nodeName": "n", "type": "Any"}, {"lineNumber": 17, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 18, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "stack", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "self", "type": "DummyExtractor"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "_random_array", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "xp", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "n_class", "type": "Any"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "xp", "type": "Any"}, {"lineNumber": 50, "col_offset": 32, "nodeName": "n_roi", "type": "int"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "n_class", "type": "Any"}, {"lineNumber": 50, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "n_anchor_base", "type": "Any"}, {"lineNumber": 66, "col_offset": 40, "nodeName": "H", "type": "Any"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "self", "type": "DummyRegionProposalNetwork"}, {"lineNumber": 68, "col_offset": 43, "nodeName": "B", "type": "Any"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "n_anchor", "type": "Any"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "self", "type": "DummyRegionProposalNetwork"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "B", "type": "Any"}, {"lineNumber": 69, "col_offset": 52, "nodeName": "n_anchor", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "self", "type": "DummyRegionProposalNetwork"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "self", "type": "DummyRegionProposalNetwork"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "img_size", "type": "Any"}, {"lineNumber": 71, "col_offset": 53, "nodeName": "min", "type": "Callable"}, {"lineNumber": 71, "col_offset": 57, "nodeName": "img_size", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "xp", "type": "Any"}, {"lineNumber": 72, "col_offset": 56, "nodeName": "int32", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "DummyRegionProposalNetwork"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "img_size", "type": "Any"}, {"lineNumber": 74, "col_offset": 51, "nodeName": "min", "type": "Callable"}, {"lineNumber": 74, "col_offset": 55, "nodeName": "img_size", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "rpn_locs", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "rpn_cls_scores", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "DummyExtractor", "type": "Type[DummyExtractor]"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "feat_stride", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "DummyRegionProposalNetwork", "type": "Type[DummyRegionProposalNetwork]"}, {"lineNumber": 86, "col_offset": 39, "nodeName": "n_anchor_base", "type": "Any"}, {"lineNumber": 86, "col_offset": 54, "nodeName": "n_roi", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "DummyHead", "type": "Type[DummyHead]"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "min_size", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "max_size", "type": "Any"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 20, "nodeName": "xp", "type": "Any"}, {"lineNumber": 17, "col_offset": 68, "nodeName": "n", "type": "Any"}, {"lineNumber": 18, "col_offset": 20, "nodeName": "xp", "type": "Any"}, {"lineNumber": 18, "col_offset": 68, "nodeName": "n", "type": "Any"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "xp", "type": "Any"}, {"lineNumber": 19, "col_offset": 21, "nodeName": "x_min", "type": "Any"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "y_min", "type": "Any"}, {"lineNumber": 19, "col_offset": 35, "nodeName": "x_max", "type": "Any"}, {"lineNumber": 19, "col_offset": 42, "nodeName": "y_max", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "DummyExtractor", "type": "Type[DummyExtractor]"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "self", "type": "DummyExtractor"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "H", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "feat_stride", "type": "Any"}, {"lineNumber": 33, "col_offset": 42, "nodeName": "W", "type": "Any"}, {"lineNumber": 33, "col_offset": 47, "nodeName": "feat_stride", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "DummyHead", "type": "Type[DummyHead]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "self", "type": "DummyHead"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "self", "type": "DummyHead"}, {"lineNumber": 45, "col_offset": 36, "nodeName": "n_roi", "type": "int"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "self", "type": "DummyHead"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "n_roi", "type": "int"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "self", "type": "DummyHead"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "self", "type": "DummyHead"}, {"lineNumber": 50, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "score_idx", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "DummyRegionProposalNetwork", "type": "Type[DummyRegionProposalNetwork]"}, {"lineNumber": 60, "col_offset": 42, "nodeName": "self", "type": "DummyRegionProposalNetwork"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "self", "type": "DummyRegionProposalNetwork"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "self", "type": "DummyRegionProposalNetwork"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 72, "col_offset": 41, "nodeName": "rois", "type": "Any"}, {"lineNumber": 72, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "DummyFasterRCNN", "type": "Type[DummyFasterRCNN]"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "self", "type": "DummyFasterRCNN"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "n_fg_class", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "self", "type": "DummyExtractor"}, {"lineNumber": 33, "col_offset": 47, "nodeName": "self", "type": "DummyExtractor"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "n_class", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "arange", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "n_roi", "type": "int"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "self", "type": "DummyHead"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "np", "type": "module"}]