[{"lineNumber": 37, "col_offset": 0, "nodeName": "create_mnbn_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 164, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "Chain", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "dataset_cfg", "type": "Union[Dict[str, Union[Tuple[int, int], Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str], int]], Dict[str, Any]]"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "p", "type": "multiprocessing.process.Process"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "comm", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "device", "type": "Any"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "intra_rank", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "n_class", "type": "int"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "train_chain", "type": "TrainChain"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "val", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "log_interval", "type": "Tuple[int, str]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "val_interval", "type": "Tuple[int, str]"}, {"lineNumber": 287, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "setNumThreads", "type": "Any"}, {"lineNumber": 39, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "link", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "_persistent", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "mnbn", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "mean", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "mean", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "scale_range", "type": "List[float]"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "scale_range", "type": "List[float]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "crop_size", "type": "Tuple[int, int]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "crop_size", "type": "Tuple[int, int]"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "in_data", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "shape", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "scaled_H", "type": "int"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "scaled_W", "type": "int"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "label", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "angle", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "initialW", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "ignore_label", "type": "int"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "ignore_label", "type": "int"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "h_aux", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "h_aux", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "h_aux", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "h_main", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "h_main", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "h_main", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "h_main", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 165, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "dataset_cfgs", "type": "Dict[str, Union[Dict[str, Union[Tuple[int, int], Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str], int]], Dict[str, Any]]]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "set_start_method", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "Process", "type": "Type[multiprocessing.process.Process]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "start", "type": "Callable[[], Any]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "join", "type": "Callable[..., Any]"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "create_communicator", "type": "Any"}, {"lineNumber": 195, "col_offset": 41, "nodeName": "communicator", "type": "Any"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "comm", "type": "Any"}, {"lineNumber": 198, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "PSPNetResNet101", "type": "Type[chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "n_class", "type": "int"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "TrainChain", "type": "Type[TrainChain]"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "model", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "create_mnbn_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "model", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "comm", "type": "Any"}, {"lineNumber": 204, "col_offset": 7, "nodeName": "device", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "set_max_workspace_size", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "using_config", "type": "Any"}, {"lineNumber": 211, "col_offset": 7, "nodeName": "iteration", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "n_iter", "type": "int"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "n_iter", "type": "Any"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "iteration", "type": "Any"}, {"lineNumber": 216, "col_offset": 7, "nodeName": "rank", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "scatter_dataset", "type": "Any"}, {"lineNumber": 235, "col_offset": 38, "nodeName": "train", "type": "Optional[chainercv.chainer_experimental.datasets.sliceable.transform_dataset.TransformDataset]"}, {"lineNumber": 235, "col_offset": 45, "nodeName": "comm", "type": "Any"}, {"lineNumber": 236, "col_offset": 10, "nodeName": "scatter_dataset", "type": "Any"}, {"lineNumber": 236, "col_offset": 36, "nodeName": "val", "type": "Any"}, {"lineNumber": 236, "col_offset": 41, "nodeName": "comm", "type": "Any"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "MultiprocessIterator", "type": "Any"}, {"lineNumber": 238, "col_offset": 7, "nodeName": "train", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "SerialIterator", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "val", "type": "Any"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "create_multi_node_optimizer", "type": "Any"}, {"lineNumber": 243, "col_offset": 54, "nodeName": "comm", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "setup", "type": "Any"}, {"lineNumber": 244, "col_offset": 20, "nodeName": "train_chain", "type": "TrainChain"}, {"lineNumber": 245, "col_offset": 17, "nodeName": "params", "type": "Any"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "StandardUpdater", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "train_iter", "type": "Any"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 251, "col_offset": 14, "nodeName": "Trainer", "type": "Any"}, {"lineNumber": 251, "col_offset": 31, "nodeName": "updater", "type": "Any"}, {"lineNumber": 251, "col_offset": 63, "nodeName": "out", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "extend", "type": "Any"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "create_multi_node_evaluator", "type": "Any"}, {"lineNumber": 262, "col_offset": 59, "nodeName": "comm", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "extend", "type": "Any"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "evaluator", "type": "Any"}, {"lineNumber": 265, "col_offset": 7, "nodeName": "rank", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "run", "type": "Any"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "links", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "MultiNodeBatchNormalization", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "copyparams", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "link", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "link", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "link", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "Chain", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "new_link", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "new_children", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "new_link", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Transform"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Transform"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Transform"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "label", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "H", "type": "Any"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "img", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "resize", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "img", "type": "Any"}, {"lineNumber": 91, "col_offset": 59, "nodeName": "BICUBIC", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "shorter_side", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "label", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "rotate", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "img", "type": "Any"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "angle", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "img", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "label", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "img", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "label", "type": "Any"}, {"lineNumber": 126, "col_offset": 14, "nodeName": "img", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "mean", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "img", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "label", "type": "Any"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "HeNormal", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "model", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "model", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "TrainChain"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "h_aux", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "h_main", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 144, "col_offset": 45, "nodeName": "imgs", "type": "Any"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "aux_conv2", "type": "Any"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "h_aux", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "resize_images", "type": "Any"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "h_aux", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "ppm", "type": "Any"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "h_main", "type": "Any"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "head_conv2", "type": "Any"}, {"lineNumber": 151, "col_offset": 39, "nodeName": "h_main", "type": "Any"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "resize_images", "type": "Any"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "h_main", "type": "Any"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "softmax_cross_entropy", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "h_aux", "type": "Any"}, {"lineNumber": 155, "col_offset": 19, "nodeName": "labels", "type": "Any"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "softmax_cross_entropy", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "h_main", "type": "Any"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "labels", "type": "Any"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "main_loss", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "report", "type": "Any"}, {"lineNumber": 160, "col_offset": 48, "nodeName": "self", "type": "TrainChain"}, {"lineNumber": 165, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 171, "col_offset": 56, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 173, "col_offset": 58, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "ade20k_semantic_segmentation_label_names", "type": "Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "cityscapes_semantic_segmentation_label_names", "type": "Any"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "multiprocessing", "type": "module"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "multiprocessing", "type": "module"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "p", "type": "multiprocessing.process.Process"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "p", "type": "multiprocessing.process.Process"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "chainermn", "type": "Any"}, {"lineNumber": 195, "col_offset": 41, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 198, "col_offset": 18, "nodeName": "dataset_cfg", "type": "Union[Dict[str, Union[Tuple[int, int], Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str], int]], Dict[str, Any]]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "use", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 211, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "dataset_cfg", "type": "Union[Dict[str, Union[Tuple[int, int], Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str], int]], Dict[str, Any]]"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 216, "col_offset": 7, "nodeName": "comm", "type": "Any"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "TransformDataset", "type": "Type[chainercv.chainer_experimental.datasets.sliceable.transform_dataset.TransformDataset]"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "train", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "train", "type": "None"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "val", "type": "None"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "chainermn", "type": "Any"}, {"lineNumber": 236, "col_offset": 10, "nodeName": "chainermn", "type": "Any"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "iterators", "type": "Any"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "iterators", "type": "Any"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "chainermn", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "MomentumSGD", "type": "Any"}, {"lineNumber": 243, "col_offset": 39, "nodeName": "lr", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 245, "col_offset": 17, "nodeName": "model", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "updaters", "type": "Any"}, {"lineNumber": 250, "col_offset": 38, "nodeName": "device", "type": "Any"}, {"lineNumber": 251, "col_offset": 14, "nodeName": "training", "type": "Any"}, {"lineNumber": 251, "col_offset": 41, "nodeName": "n_iter", "type": "Any"}, {"lineNumber": 251, "col_offset": 63, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "PolynomialShift", "type": "Any"}, {"lineNumber": 253, "col_offset": 35, "nodeName": "n_iter", "type": "Any"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "chainermn", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "SemanticSegmentationEvaluator", "type": "Type[chainercv.extensions.evaluator.semantic_segmentation_evaluator.SemanticSegmentationEvaluator]"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "val_iter", "type": "Any"}, {"lineNumber": 261, "col_offset": 22, "nodeName": "model", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "cityscapes_semantic_segmentation_label_names", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 265, "col_offset": 7, "nodeName": "comm", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "extend", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "extend", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "extend", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "extend", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "extend", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "extend", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "links", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "comm", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "decay", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "eps", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "mnbn", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "__dict__", "type": "Any"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "link", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "new_child", "type": "Any"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "new_child", "type": "Any"}, {"lineNumber": 63, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "link", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "ChainList", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "new_link", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "new_link", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "scale_range", "type": "Any"}, {"lineNumber": 86, "col_offset": 55, "nodeName": "scale_range", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "scale", "type": "Any"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "H", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "scale", "type": "Any"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "W", "type": "Any"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "transforms", "type": "module"}, {"lineNumber": 91, "col_offset": 38, "nodeName": "scaled_H", "type": "int"}, {"lineNumber": 91, "col_offset": 48, "nodeName": "scaled_W", "type": "int"}, {"lineNumber": 91, "col_offset": 59, "nodeName": "Image", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "resize", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 47, "nodeName": "NEAREST", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "scaled_H", "type": "int"}, {"lineNumber": 96, "col_offset": 46, "nodeName": "scaled_W", "type": "int"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "min", "type": "Callable"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "img", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "param", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "random_crop", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "img", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "img", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "param", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "random_crop", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 48, "nodeName": "img", "type": "Any"}, {"lineNumber": 100, "col_offset": 53, "nodeName": "crop_size", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "transforms", "type": "module"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "rotate", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "angle", "type": "Any"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "resize", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "img", "type": "Any"}, {"lineNumber": 114, "col_offset": 41, "nodeName": "crop_size", "type": "Any"}, {"lineNumber": 114, "col_offset": 57, "nodeName": "BICUBIC", "type": "Any"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "resize", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 48, "nodeName": "crop_size", "type": "Any"}, {"lineNumber": 118, "col_offset": 64, "nodeName": "NEAREST", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "rand", "type": "Any"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "flip", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "img", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "self", "type": "Transform"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "init_scope", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "self", "type": "TrainChain"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "Conv2DBNActiv", "type": "Type[chainercv.links.connection.conv_2d_bn_activ.Conv2DBNActiv]"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "Convolution2D", "type": "Any"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "n_class", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 145, "col_offset": 26, "nodeName": "aux_conv1", "type": "chainercv.links.connection.conv_2d_bn_activ.Conv2DBNActiv"}, {"lineNumber": 145, "col_offset": 41, "nodeName": "h_aux", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "self", "type": "TrainChain"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 147, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "F", "type": "Any"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "head_conv1", "type": "Any"}, {"lineNumber": 150, "col_offset": 49, "nodeName": "h_main", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "F", "type": "Any"}, {"lineNumber": 152, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "F", "type": "Any"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "ignore_label", "type": "Any"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "F", "type": "Any"}, {"lineNumber": 157, "col_offset": 41, "nodeName": "ignore_label", "type": "Any"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "aux_loss", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "reporter", "type": "Any"}, {"lineNumber": 160, "col_offset": 41, "nodeName": "loss", "type": "Any"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "dataset_cfg", "type": "Union[Dict[str, Union[Tuple[int, int], Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str], int]], Dict[str, Any]]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "train_chain", "type": "TrainChain"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "ADE20KSemanticSegmentationDataset", "type": "Type[chainercv.datasets.ade20k.ade20k_semantic_segmentation_dataset.ADE20KSemanticSegmentationDataset]"}, {"lineNumber": 220, "col_offset": 18, "nodeName": "ADE20KSemanticSegmentationDataset", "type": "Type[chainercv.datasets.ade20k.ade20k_semantic_segmentation_dataset.ADE20KSemanticSegmentationDataset]"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "Transform", "type": "Type[Transform]"}, {"lineNumber": 232, "col_offset": 22, "nodeName": "mean", "type": "Any"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 243, "col_offset": 39, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "add_hook", "type": "Any"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "training", "type": "Any"}, {"lineNumber": 253, "col_offset": 53, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 263, "col_offset": 39, "nodeName": "n_iter", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 266, "col_offset": 23, "nodeName": "LogReport", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "observe_lr", "type": "Any"}, {"lineNumber": 267, "col_offset": 56, "nodeName": "log_interval", "type": "Tuple[int, str]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "PrintReport", "type": "Any"}, {"lineNumber": 272, "col_offset": 20, "nodeName": "log_interval", "type": "Tuple[int, str]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "ProgressBar", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "snapshot_object", "type": "Any"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "train_chain", "type": "TrainChain"}, {"lineNumber": 278, "col_offset": 20, "nodeName": "val_interval", "type": "Tuple[int, str]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "snapshot_object", "type": "Any"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "model", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "chainermn", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "avg_mean", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "link", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "link", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "avg_mean", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "link", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "link", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "mnbn", "type": "Any"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "name", "type": "Any"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "copy", "type": "module"}, {"lineNumber": 51, "col_offset": 48, "nodeName": "__dict__", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "child_name", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "_children", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "copy", "type": "module"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "__dict__", "type": "Any"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "link", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "new_child", "type": "Any"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "new_children", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "new_child", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "link", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "self", "type": "Transform"}, {"lineNumber": 86, "col_offset": 55, "nodeName": "self", "type": "Transform"}, {"lineNumber": 91, "col_offset": 59, "nodeName": "PIL", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "transforms", "type": "module"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "label", "type": "Any"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "scaled_H", "type": "int"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "scaled_W", "type": "int"}, {"lineNumber": 93, "col_offset": 47, "nodeName": "Image", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "crop_size", "type": "Any"}, {"lineNumber": 96, "col_offset": 57, "nodeName": "crop_size", "type": "Any"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "transforms", "type": "module"}, {"lineNumber": 98, "col_offset": 54, "nodeName": "shorter_side", "type": "Any"}, {"lineNumber": 98, "col_offset": 68, "nodeName": "shorter_side", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "transforms", "type": "module"}, {"lineNumber": 100, "col_offset": 53, "nodeName": "self", "type": "Transform"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "transforms", "type": "module"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "label", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "NEAREST", "type": "Any"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "shape", "type": "Any"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "crop_size", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "crop_size", "type": "Any"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "transforms", "type": "module"}, {"lineNumber": 114, "col_offset": 41, "nodeName": "self", "type": "Transform"}, {"lineNumber": 114, "col_offset": 57, "nodeName": "Image", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "shape", "type": "Any"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "crop_size", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 116, "col_offset": 37, "nodeName": "crop_size", "type": "Any"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "transforms", "type": "module"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 118, "col_offset": 35, "nodeName": "float32", "type": "Any"}, {"lineNumber": 118, "col_offset": 48, "nodeName": "self", "type": "Transform"}, {"lineNumber": 118, "col_offset": 64, "nodeName": "Image", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "int32", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "transforms", "type": "module"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "flip", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 134, "col_offset": 14, "nodeName": "TrainChain", "type": "Type[TrainChain]"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "self", "type": "TrainChain"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "self", "type": "TrainChain"}, {"lineNumber": 138, "col_offset": 45, "nodeName": "initialW", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "L", "type": "Any"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "model", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 140, "col_offset": 62, "nodeName": "initialW", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "self", "type": "TrainChain"}, {"lineNumber": 145, "col_offset": 26, "nodeName": "self", "type": "TrainChain"}, {"lineNumber": 147, "col_offset": 39, "nodeName": "imgs", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "self", "type": "TrainChain"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "model", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "self", "type": "TrainChain"}, {"lineNumber": 152, "col_offset": 41, "nodeName": "imgs", "type": "Any"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "self", "type": "TrainChain"}, {"lineNumber": 157, "col_offset": 41, "nodeName": "self", "type": "TrainChain"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "get_device_from_id", "type": "Any"}, {"lineNumber": 205, "col_offset": 40, "nodeName": "device", "type": "Any"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "CityscapesSemanticSegmentationDataset", "type": "Any"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "CityscapesSemanticSegmentationDataset", "type": "Any"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 232, "col_offset": 22, "nodeName": "model", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 247, "col_offset": 39, "nodeName": "WeightDecay", "type": "Any"}, {"lineNumber": 266, "col_offset": 23, "nodeName": "extensions", "type": "Any"}, {"lineNumber": 266, "col_offset": 52, "nodeName": "log_interval", "type": "Tuple[int, str]"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "extensions", "type": "Any"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "extensions", "type": "Any"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "extensions", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "extensions", "type": "Any"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "extensions", "type": "Any"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "train_chain", "type": "TrainChain"}, {"lineNumber": 282, "col_offset": 21, "nodeName": "n_iter", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "link", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "link", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 51, "col_offset": 48, "nodeName": "link", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 51, "col_offset": 62, "nodeName": "name", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "link", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "new_link", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "create_mnbn_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "l", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "comm", "type": "Any"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "l", "type": "Any"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "link", "type": "chainercv.experimental.links.model.pspnet.pspnet.PSPNetResNet101"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "copy", "type": "module"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "_children", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "copy", "type": "module"}, {"lineNumber": 93, "col_offset": 47, "nodeName": "PIL", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "self", "type": "Transform"}, {"lineNumber": 96, "col_offset": 57, "nodeName": "self", "type": "Transform"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "img", "type": "Any"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "param", "type": "Any"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "param", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "Image", "type": "Any"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "img", "type": "Any"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "self", "type": "Transform"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "img", "type": "Any"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "self", "type": "Transform"}, {"lineNumber": 114, "col_offset": 57, "nodeName": "PIL", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "label", "type": "Any"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "self", "type": "Transform"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "label", "type": "Any"}, {"lineNumber": 116, "col_offset": 37, "nodeName": "self", "type": "Transform"}, {"lineNumber": 118, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 64, "nodeName": "PIL", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "label", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "transforms", "type": "module"}, {"lineNumber": 123, "col_offset": 36, "nodeName": "label", "type": "Any"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "self", "type": "TrainChain"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 232, "col_offset": 44, "nodeName": "dataset_cfg", "type": "Union[Dict[str, Union[Tuple[int, int], Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str], int]], Dict[str, Any]]"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 247, "col_offset": 39, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "new_link", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "PIL", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "label", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 247, "col_offset": 39, "nodeName": "chainer", "type": "Any"}]