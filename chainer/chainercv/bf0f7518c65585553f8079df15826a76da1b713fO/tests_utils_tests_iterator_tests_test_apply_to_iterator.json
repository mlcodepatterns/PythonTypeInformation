[{"lineNumber": 18, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 111, "col_offset": 46, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 111, "col_offset": 46, "nodeName": "unittest", "type": "module"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "run_module", "type": "Any"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "multi_in_values", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "in_values_expect", "type": "List[List[Any]]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "in_values_expect", "type": "Tuple[List[Any], ...]"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "multi_out_values", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "with_rest_values", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "with_hook", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "out_vals", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "out_values", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "dataset", "type": "List[Any]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "testing", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "n_input", "type": "int"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "n_input", "type": "int"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "n_input", "type": "int"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "in_value", "type": "List[Any]"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "in_values_expect", "type": "List[List[Any]]"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "n_output", "type": "int"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "n_output", "type": "int"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "strs", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "nums", "type": "List[int]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "arrays", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "rest_values_expect", "type": "Tuple[List[str], List[int], List[Any]]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "n_rest", "type": "int"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "rest_values_expect", "type": "Tuple[()]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "n_rest", "type": "int"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "dataset", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "SerialIterator", "type": "Any"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "hook", "type": "None"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "apply_to_iterator", "type": "Callable[..., Optional[Tuple[Tuple[Any, ...], Tuple[Any, ...], Tuple[Any, ...]]]]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "n_input", "type": "int"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "zip_longest", "type": "Callable[..., Iterator[Any]]"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "in_values", "type": "Any"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "in_values_expect", "type": "Tuple[List[Any], ...]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "n_output", "type": "int"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "n_rest", "type": "int"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "zip_longest", "type": "Callable[..., Iterator[Any]]"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "rest_values", "type": "Any"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "rest_values_expect", "type": "Union[Tuple[List[str], List[int], List[Any]], Tuple[()]]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "n_sample", "type": "int"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "SerialIterator", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "dataset", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "in_values", "type": "Any"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "out_values", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "rest_values", "type": "Any"}, {"lineNumber": 125, "col_offset": 45, "nodeName": "apply_to_iterator", "type": "Callable[..., Optional[Tuple[Tuple[Any, ...], Tuple[Any, ...], Tuple[Any, ...]]]]"}, {"lineNumber": 125, "col_offset": 63, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 69, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "in_value", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "n_sample", "type": "int"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "n_sample", "type": "int"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "strs", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "nums", "type": "List[int]"}, {"lineNumber": 56, "col_offset": 46, "nodeName": "arrays", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "TupleDataset", "type": "Any"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "n_sample", "type": "int"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "in_vals", "type": "Any"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "in_values", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "out_vals", "type": "Any"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "out_values", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "rest_vals", "type": "Any"}, {"lineNumber": 82, "col_offset": 33, "nodeName": "rest_values", "type": "Any"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "n_input", "type": "int"}, {"lineNumber": 88, "col_offset": 50, "nodeName": "hook", "type": "Optional[Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "in_values", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "in_val", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "in_val_expect", "type": "Any"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "zip_longest", "type": "Callable[..., Iterator[Any]]"}, {"lineNumber": 93, "col_offset": 53, "nodeName": "in_vals", "type": "Any"}, {"lineNumber": 93, "col_offset": 62, "nodeName": "in_vals_expect", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "out_values", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "rest_values", "type": "Any"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "zip_longest", "type": "Callable[..., Iterator[Any]]"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "rest_vals", "type": "Any"}, {"lineNumber": 104, "col_offset": 43, "nodeName": "rest_vals_expect", "type": "Any"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "H", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "W", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "randint", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "next", "type": "Callable"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "next", "type": "Callable"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "H", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "W", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "randint", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "in_values_expect", "type": "List[List[Any]]"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 55, "col_offset": 53, "nodeName": "_", "type": "int"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 73, "col_offset": 49, "nodeName": "n_input", "type": "int"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 50, "nodeName": "n_output", "type": "int"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 81, "col_offset": 51, "nodeName": "n_rest", "type": "int"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 94, "col_offset": 40, "nodeName": "in_val", "type": "Any"}, {"lineNumber": 94, "col_offset": 48, "nodeName": "in_val_expect", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 98, "col_offset": 50, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 98, "col_offset": 54, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "rest_val_expect", "type": "Any"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "in_values", "type": "Tuple[Any, ...]"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 116, "col_offset": 57, "nodeName": "_", "type": "int"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "dataset", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "randint", "type": "Any"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "in_values", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "out_values", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "in_value", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 32, "nodeName": "randint", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "in_values", "type": "Tuple[Any, ...]"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "in_values", "type": "Tuple[Any, ...]"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "_", "type": "int"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 55, "col_offset": 58, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "in_values_expect", "type": "Tuple[List[Any], ...]"}, {"lineNumber": 60, "col_offset": 37, "nodeName": "rest_values_expect", "type": "Tuple[List[str], List[int], List[Any]]"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "in_values_expect", "type": "Tuple[List[Any], ...]"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "in_values", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "in_values", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 75, "col_offset": 51, "nodeName": "n_sample", "type": "int"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "out_values", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 79, "col_offset": 52, "nodeName": "n_sample", "type": "int"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "rest_values", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 83, "col_offset": 53, "nodeName": "n_sample", "type": "int"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "testing", "type": "Any"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "out_vals", "type": "Any"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 106, "col_offset": 44, "nodeName": "rest_val", "type": "Any"}, {"lineNumber": 106, "col_offset": 54, "nodeName": "rest_val_expect", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "rest_val", "type": "Any"}, {"lineNumber": 108, "col_offset": 47, "nodeName": "rest_val_expect", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 116, "col_offset": 62, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 116, "col_offset": 68, "nodeName": "n_sample", "type": "int"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 32, "nodeName": "random", "type": "Any"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 39, "col_offset": 57, "nodeName": "_", "type": "int"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 40, "col_offset": 52, "nodeName": "_", "type": "int"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 41, "col_offset": 52, "nodeName": "_", "type": "int"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "n_sample", "type": "int"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "in_vals", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "out_vals", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "rest_vals", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "testing", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 62, "nodeName": "H", "type": "Any"}, {"lineNumber": 121, "col_offset": 65, "nodeName": "W", "type": "Any"}, {"lineNumber": 31, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 67, "nodeName": "H", "type": "Any"}, {"lineNumber": 31, "col_offset": 70, "nodeName": "W", "type": "Any"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 39, "col_offset": 62, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 39, "col_offset": 68, "nodeName": "n_sample", "type": "int"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 40, "col_offset": 57, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 40, "col_offset": 63, "nodeName": "n_sample", "type": "int"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 41, "col_offset": 57, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 41, "col_offset": 63, "nodeName": "n_sample", "type": "int"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "np", "type": "module"}]