[{"lineNumber": 11, "col_offset": 40, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 11, "col_offset": 40, "nodeName": "unittest", "type": "module"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "run_module", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "bbox", "type": "Any"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "testing", "type": "Any"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "astype", "type": "Any"}, {"lineNumber": 14, "col_offset": 67, "nodeName": "float32", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "generate_random_bbox", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "random_crop_with_bbox_constraints", "type": "Callable[..., Any]"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "img", "type": "Any"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "bbox", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "iou", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "min_iou", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "max_iou", "type": "Any"}, {"lineNumber": 14, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 24, "col_offset": 36, "nodeName": "out", "type": "Any"}, {"lineNumber": 24, "col_offset": 41, "nodeName": "img", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "out", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "size", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "bbox_iou", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 43, "nodeName": "bbox", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "min_iou", "type": "Any"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "max_iou", "type": "Any"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "randint", "type": "Any"}, {"lineNumber": 15, "col_offset": 40, "nodeName": "img", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "img", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "self", "type": "TestRandomCropWithBboxConstraints"}, {"lineNumber": 29, "col_offset": 36, "nodeName": "out", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "self", "type": "TestRandomCropWithBboxConstraints"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "out", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "self", "type": "TestRandomCropWithBboxConstraints"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "self", "type": "TestRandomCropWithBboxConstraints"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "start", "type": "Any"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "start", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "stop", "type": "Any"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "stop", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "bb", "type": "numpy.ndarray"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 51, "nodeName": "min_iou", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 48, "nodeName": "max_iou", "type": "Any"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 46, "nodeName": "size", "type": "Any"}, {"lineNumber": 30, "col_offset": 43, "nodeName": "size", "type": "Any"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 32, "col_offset": 48, "nodeName": "shape", "type": "Any"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "shape", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "self", "type": "TestRandomCropWithBboxConstraints"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "min", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "self", "type": "TestRandomCropWithBboxConstraints"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "max", "type": "Any"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 46, "nodeName": "img", "type": "Any"}, {"lineNumber": 30, "col_offset": 43, "nodeName": "img", "type": "Any"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "out", "type": "Any"}, {"lineNumber": 32, "col_offset": 48, "nodeName": "out", "type": "Any"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "out", "type": "Any"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "out", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "param", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "param", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "iou", "type": "Any"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "iou", "type": "Any"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "param", "type": "Any"}, {"lineNumber": 27, "col_offset": 46, "nodeName": "param", "type": "Any"}]