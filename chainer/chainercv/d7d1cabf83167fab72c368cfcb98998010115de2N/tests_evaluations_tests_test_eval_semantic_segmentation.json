[{"lineNumber": 8, "col_offset": 35, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 8, "col_offset": 35, "nodeName": "unittest", "type": "module"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "predict", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "gt", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "predict", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "predict", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "gt", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "gt", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 11, "col_offset": 18, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 12, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 17, "col_offset": 41, "nodeName": "eval_semantic_segmentation", "type": "module"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "predict", "type": "Any"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "gt", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "stack", "type": "Any"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "stack", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "eval_semantic_segmentation", "type": "module"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "predict", "type": "Any"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "gt", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestEvalSemanticSegmentation"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 20, "col_offset": 35, "nodeName": "acc", "type": "Any"}, {"lineNumber": 20, "col_offset": 40, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestEvalSemanticSegmentation"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "acc_cls", "type": "Any"}, {"lineNumber": 21, "col_offset": 44, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestEvalSemanticSegmentation"}, {"lineNumber": 22, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "mean_iu", "type": "Any"}, {"lineNumber": 22, "col_offset": 44, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestEvalSemanticSegmentation"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 23, "col_offset": 35, "nodeName": "fwavacc", "type": "Any"}, {"lineNumber": 23, "col_offset": 44, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestEvalSemanticSegmentation"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "acc", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestEvalSemanticSegmentation"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "acc_cls", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestEvalSemanticSegmentation"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "mean_iu", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestEvalSemanticSegmentation"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "fwavacc", "type": "Any"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "predict", "type": "Any"}, {"lineNumber": 31, "col_offset": 37, "nodeName": "predict", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "gt", "type": "Any"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "gt", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestEvalSemanticSegmentation"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "acc", "type": "Any"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestEvalSemanticSegmentation"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "acc_cls", "type": "Any"}, {"lineNumber": 42, "col_offset": 44, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestEvalSemanticSegmentation"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "mean_iu", "type": "Any"}, {"lineNumber": 43, "col_offset": 44, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestEvalSemanticSegmentation"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 44, "col_offset": 35, "nodeName": "fwavacc", "type": "Any"}, {"lineNumber": 44, "col_offset": 44, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 11, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 12, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 20, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 21, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 22, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "TestEvalSemanticSegmentation"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "acc", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "TestEvalSemanticSegmentation"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "acc_cls", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "self", "type": "TestEvalSemanticSegmentation"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "mean_iu", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "TestEvalSemanticSegmentation"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "fwavacc", "type": "Any"}, {"lineNumber": 11, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 12, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 48, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 49, "col_offset": 37, "nodeName": "i", "type": "int"}]