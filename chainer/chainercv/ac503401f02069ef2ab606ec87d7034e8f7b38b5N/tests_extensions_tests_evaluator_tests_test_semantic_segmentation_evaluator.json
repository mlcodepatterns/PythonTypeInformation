[{"lineNumber": 14, "col_offset": 36, "nodeName": "Link", "type": "Any"}, {"lineNumber": 29, "col_offset": 40, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 14, "col_offset": 36, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 29, "col_offset": 40, "nodeName": "unittest", "type": "module"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "run_module", "type": "Any"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "count", "type": "int"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "n_img", "type": "int"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "count", "type": "int"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "n_img", "type": "int"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "labels", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "label_names", "type": "Tuple[str, str, str]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "imgs", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "pred_labels", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "gt_labels", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "iou_a", "type": "float"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "iou_b", "type": "float"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "pixel_accuracy", "type": "float"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "class_accuracy_a", "type": "float"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "class_accuracy_b", "type": "float"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "miou", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "link", "type": "_SemanticSegmentationStubLink"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "reporter", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "reporter", "type": "Any"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "testing", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "_SemanticSegmentationStubLink"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "_SemanticSegmentationStubLink"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "imgs", "type": "Any"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "labels", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "_SemanticSegmentationStubLink"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "mean", "type": "Any"}, {"lineNumber": 44, "col_offset": 35, "nodeName": "mean", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "TupleDataset", "type": "Any"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "imgs", "type": "Any"}, {"lineNumber": 47, "col_offset": 42, "nodeName": "gt_labels", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "_SemanticSegmentationStubLink", "type": "Type[_SemanticSegmentationStubLink]"}, {"lineNumber": 48, "col_offset": 50, "nodeName": "pred_labels", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "SerialIterator", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "SemanticSegmentationEvaluator", "type": "Type[chainercv.extensions.evaluator.semantic_segmentation_evaluator.SemanticSegmentationEvaluator]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "link", "type": "_SemanticSegmentationStubLink"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "label_names", "type": "Tuple[str, str, str]"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "Reporter", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "add_observer", "type": "Any"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "link", "type": "_SemanticSegmentationStubLink"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "reporter", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "eval_", "type": "Dict[nothing, nothing]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 64, "col_offset": 52, "nodeName": "miou", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "pixel_accuracy", "type": "float"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "mean_class_accuracy", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 69, "col_offset": 53, "nodeName": "iou_a", "type": "float"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 70, "col_offset": 53, "nodeName": "iou_b", "type": "float"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 71, "col_offset": 53, "nodeName": "nan", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "class_accuracy_a", "type": "float"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "class_accuracy_b", "type": "float"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 76, "col_offset": 64, "nodeName": "nan", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "evaluator", "type": "chainercv.extensions.evaluator.semantic_segmentation_evaluator.SemanticSegmentationEvaluator"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 81, "col_offset": 52, "nodeName": "miou", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "pixel_accuracy", "type": "float"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "mean_class_accuracy", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 86, "col_offset": 53, "nodeName": "iou_a", "type": "float"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 87, "col_offset": 53, "nodeName": "iou_b", "type": "float"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 88, "col_offset": 53, "nodeName": "nan", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "class_accuracy_a", "type": "float"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "class_accuracy_b", "type": "float"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 93, "col_offset": 64, "nodeName": "nan", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "evaluator", "type": "chainercv.extensions.evaluator.semantic_segmentation_evaluator.SemanticSegmentationEvaluator"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "evaluator", "type": "chainercv.extensions.evaluator.semantic_segmentation_evaluator.SemanticSegmentationEvaluator"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 99, "col_offset": 57, "nodeName": "miou", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "pixel_accuracy", "type": "float"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "mean_class_accuracy", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 104, "col_offset": 58, "nodeName": "iou_a", "type": "float"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 105, "col_offset": 58, "nodeName": "iou_b", "type": "float"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 106, "col_offset": 58, "nodeName": "nan", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "class_accuracy_a", "type": "float"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "class_accuracy_b", "type": "float"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 111, "col_offset": 69, "nodeName": "nan", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "Reporter", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "reporter", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "observation", "type": "Any"}, {"lineNumber": 118, "col_offset": 54, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "self", "type": "_SemanticSegmentationStubLink"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "count", "type": "int"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "iou_a", "type": "float"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "iou_b", "type": "float"}, {"lineNumber": 44, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "class_accuracy_a", "type": "float"}, {"lineNumber": 45, "col_offset": 36, "nodeName": "class_accuracy_b", "type": "float"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "reporter", "type": "Any"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "evaluate", "type": "Callable[[], Dict[Any, Any]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "observation", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "eval_", "type": "Dict[nothing, nothing]"}, {"lineNumber": 64, "col_offset": 52, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "eval_", "type": "Dict[nothing, nothing]"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "eval_", "type": "Dict[nothing, nothing]"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "eval_", "type": "Dict[nothing, nothing]"}, {"lineNumber": 69, "col_offset": 53, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "eval_", "type": "Dict[nothing, nothing]"}, {"lineNumber": 70, "col_offset": 53, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "eval_", "type": "Dict[nothing, nothing]"}, {"lineNumber": 71, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "eval_", "type": "Dict[nothing, nothing]"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "eval_", "type": "Dict[nothing, nothing]"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "eval_", "type": "Dict[nothing, nothing]"}, {"lineNumber": 76, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 81, "col_offset": 52, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 86, "col_offset": 53, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 87, "col_offset": 53, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 88, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 93, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 99, "col_offset": 57, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 104, "col_offset": 58, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 105, "col_offset": 58, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 106, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 111, "col_offset": 32, "nodeName": "eval_", "type": "Any"}, {"lineNumber": 111, "col_offset": 69, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "evaluator", "type": "chainercv.extensions.evaluator.semantic_segmentation_evaluator.SemanticSegmentationEvaluator"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "reporter", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "_SemanticSegmentationStubLink", "type": "Type[_SemanticSegmentationStubLink]"}, {"lineNumber": 17, "col_offset": 45, "nodeName": "self", "type": "_SemanticSegmentationStubLink"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "self", "type": "_SemanticSegmentationStubLink"}, {"lineNumber": 23, "col_offset": 40, "nodeName": "count", "type": "int"}, {"lineNumber": 23, "col_offset": 53, "nodeName": "n_img", "type": "int"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 45, "col_offset": 36, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "evaluator", "type": "chainercv.extensions.evaluator.semantic_segmentation_evaluator.SemanticSegmentationEvaluator"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "reporter", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 40, "nodeName": "self", "type": "_SemanticSegmentationStubLink"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "self", "type": "TestSemanticSegmentationEvaluator"}]