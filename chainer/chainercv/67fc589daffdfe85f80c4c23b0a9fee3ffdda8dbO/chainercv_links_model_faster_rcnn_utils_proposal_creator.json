[{"lineNumber": 10, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "nms_thresh", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "nms_thresh", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "n_train_pre_nms", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "n_train_pre_nms", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "n_train_post_nms", "type": "Any"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "n_train_post_nms", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "n_test_pre_nms", "type": "Any"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "n_test_pre_nms", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "n_test_post_nms", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "n_test_post_nms", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "force_cpu_nms", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "force_cpu_nms", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "min_size", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "min_size", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "n_pre_nms", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "n_post_nms", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "anchor", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "roi", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "min_size", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "ws", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "hs", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "keep", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "roi", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "order", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "roi", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "roi", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "roi", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "ProposalCreator"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "ProposalCreator"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "ProposalCreator"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "ProposalCreator"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "ProposalCreator"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "ProposalCreator"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "ProposalCreator"}, {"lineNumber": 102, "col_offset": 43, "nodeName": "test", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "n_test_pre_nms", "type": "Any"}, {"lineNumber": 102, "col_offset": 53, "nodeName": "n_train_pre_nms", "type": "Any"}, {"lineNumber": 103, "col_offset": 45, "nodeName": "test", "type": "Any"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "n_test_post_nms", "type": "Any"}, {"lineNumber": 103, "col_offset": 55, "nodeName": "n_train_post_nms", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "get_array_module", "type": "Any"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "loc", "type": "Any"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "loc", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "anchor", "type": "Any"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "loc2bbox", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "anchor", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "loc", "type": "Any"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "clip", "type": "Any"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "clip", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "min_size", "type": "Any"}, {"lineNumber": 120, "col_offset": 35, "nodeName": "scale", "type": "Any"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "roi", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "score", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "n_pre_nms", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "order", "type": "Any"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "roi", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "score", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "keep", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "n_post_nms", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "keep", "type": "Any"}, {"lineNumber": 148, "col_offset": 14, "nodeName": "roi", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "xp", "type": "Any"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "roi", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "self", "type": "ProposalCreator"}, {"lineNumber": 102, "col_offset": 53, "nodeName": "self", "type": "ProposalCreator"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "self", "type": "ProposalCreator"}, {"lineNumber": 103, "col_offset": 55, "nodeName": "self", "type": "ProposalCreator"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "roi", "type": "Any"}, {"lineNumber": 115, "col_offset": 39, "nodeName": "img_size", "type": "Any"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "roi", "type": "Any"}, {"lineNumber": 117, "col_offset": 39, "nodeName": "img_size", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "self", "type": "ProposalCreator"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "roi", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "roi", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "roi", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "roi", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "where", "type": "Any"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "keep", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "argsort", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "order", "type": "Any"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "order", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "xp", "type": "Any"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "force_cpu_nms", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "non_maximum_suppression", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "keep", "type": "Any"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "non_maximum_suppression", "type": "Callable[..., Any]"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "roi", "type": "Any"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "keep", "type": "Any"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "keep", "type": "Any"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "roi", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "keep", "type": "Any"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "n_pre_nms", "type": "Any"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "order", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "self", "type": "ProposalCreator"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "roi", "type": "Any"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "nms_thresh", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 145, "col_offset": 23, "nodeName": "nms_thresh", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "n_post_nms", "type": "Any"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "ws", "type": "Any"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "min_size", "type": "Any"}, {"lineNumber": 123, "col_offset": 44, "nodeName": "hs", "type": "Any"}, {"lineNumber": 123, "col_offset": 50, "nodeName": "min_size", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "self", "type": "ProposalCreator"}, {"lineNumber": 145, "col_offset": 23, "nodeName": "self", "type": "ProposalCreator"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "score", "type": "Any"}]