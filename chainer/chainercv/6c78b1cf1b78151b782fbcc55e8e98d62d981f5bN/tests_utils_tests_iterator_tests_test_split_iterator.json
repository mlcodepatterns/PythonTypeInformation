[{"lineNumber": 9, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 9, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "unittest", "type": "module"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "run_module", "type": "Any"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "ints", "type": "List[int]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "strs", "type": "List[str]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "iterator", "type": "Generator[Tuple[int, str], Any, None]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "ints", "type": "List[Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "strs", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "iterator", "type": "Generator[Tuple[int, int, int], Any, Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "iters", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "iters", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "testing", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "TestSplitIterator"}, {"lineNumber": 12, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TestSplitIterator"}, {"lineNumber": 13, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestSplitIterator"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "_iterator", "type": "Callable[[], Any]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "s_iter", "type": "Any"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "split_iterator", "type": "module"}, {"lineNumber": 22, "col_offset": 40, "nodeName": "iterator", "type": "Generator[Tuple[int, str], Any, None]"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "ints", "type": "List[Any]"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "ints", "type": "List[int]"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "s_iter", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "strs", "type": "List[Any]"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "strs", "type": "List[str]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "s_iter", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "split_iterator", "type": "module"}, {"lineNumber": 31, "col_offset": 40, "nodeName": "iterator", "type": "Generator[Tuple[int, str], Any, None]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "ints", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "strs", "type": "List[Any]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "s_iter", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "ints", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "ints", "type": "List[int]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "strs", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "strs", "type": "List[str]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "s_iter", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "split_iterator", "type": "module"}, {"lineNumber": 42, "col_offset": 40, "nodeName": "iterator", "type": "Generator[Tuple[int, str], Any, None]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "ints", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "strs", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "s_iter", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "ints", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "ints", "type": "List[int]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "strs", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "strs", "type": "List[str]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestSplitIteratorWithInfiniteIterator"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "_iterator", "type": "Callable[[], Any]"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "split_iterator", "type": "module"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "iterator", "type": "Generator[Tuple[int, int, int], Any, Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "split_iterator", "type": "module"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "iterator", "type": "Generator[Tuple[int, int, int], Any, Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 12, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 16, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 16, "col_offset": 19, "nodeName": "s", "type": "str"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "ints", "type": "List[int]"}, {"lineNumber": 16, "col_offset": 39, "nodeName": "strs", "type": "List[str]"}, {"lineNumber": 22, "col_offset": 40, "nodeName": "self", "type": "TestSplitIterator"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestSplitIterator"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "self", "type": "TestSplitIterator"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestSplitIterator"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "self", "type": "TestSplitIterator"}, {"lineNumber": 31, "col_offset": 40, "nodeName": "self", "type": "TestSplitIterator"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "i", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "s", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestSplitIterator"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "self", "type": "TestSplitIterator"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestSplitIterator"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "self", "type": "TestSplitIterator"}, {"lineNumber": 42, "col_offset": 40, "nodeName": "self", "type": "TestSplitIterator"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "ints", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "strs", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestSplitIterator"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "self", "type": "TestSplitIterator"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestSplitIterator"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "self", "type": "TestSplitIterator"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "self", "type": "TestSplitIteratorWithInfiniteIterator"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestSplitIteratorWithInfiniteIterator"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "iters", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "self", "type": "TestSplitIteratorWithInfiniteIterator"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestSplitIteratorWithInfiniteIterator"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "iters", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "self", "type": "TestSplitIterator"}, {"lineNumber": 16, "col_offset": 39, "nodeName": "self", "type": "TestSplitIterator"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "ints", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "strs", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "randrange", "type": "Callable[..., int]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "TestSplitIteratorWithInfiniteIterator"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "next", "type": "Callable"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "self", "type": "TestSplitIteratorWithInfiniteIterator"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "next", "type": "Callable"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "self", "type": "TestSplitIteratorWithInfiniteIterator"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "next", "type": "Callable"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 85, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "self", "type": "TestSplitIteratorWithInfiniteIterator"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "next", "type": "Callable"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "self", "type": "TestSplitIteratorWithInfiniteIterator"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "next", "type": "Callable"}, {"lineNumber": 94, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "self", "type": "TestSplitIteratorWithInfiniteIterator"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "next", "type": "Callable"}, {"lineNumber": 95, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 95, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 17, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "s", "type": "str"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "iters", "type": "Any"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "iters", "type": "Any"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "iters", "type": "Any"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "iters", "type": "Any"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "iters", "type": "Any"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "iters", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "ints", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "next", "type": "Callable"}, {"lineNumber": 48, "col_offset": 37, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "strs", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 32, "nodeName": "next", "type": "Callable"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "s_iter", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "i", "type": "int"}]