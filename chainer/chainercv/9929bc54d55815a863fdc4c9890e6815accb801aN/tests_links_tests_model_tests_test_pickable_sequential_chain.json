[{"lineNumber": 14, "col_offset": 16, "nodeName": "Function", "type": "Any"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 20, "col_offset": 38, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "setUpBase", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "test_pick", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "test_pick_setter", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "test_layer_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "check_call", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "check_basic", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "test_basic_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "test_call_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "check_deletion", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "test_deletion_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "test_deletion_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "PickableSequentialChainTestBase", "type": "Type[PickableSequentialChainTestBase]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "PickableSequentialChainTestBase", "type": "Type[PickableSequentialChainTestBase]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "check_unchanged", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "test_original_unaffected_by_setting_pick", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "test_original_unaffected_by_function_addition", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "test_original_unaffected_by_link_addition", "type": "Callable[[Any], Any]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "test_original_unaffected_by_function_deletion", "type": "Callable[[Any], Any]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "test_original_unaffected_by_link_deletion", "type": "Callable[[Any], Any]"}, {"lineNumber": 228, "col_offset": 46, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "check_remove_unused", "type": "Callable[[Any], Any]"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "test_remove_unused_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "test_remove_unused_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "unittest", "type": "module"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "unittest", "type": "module"}, {"lineNumber": 228, "col_offset": 46, "nodeName": "unittest", "type": "module"}, {"lineNumber": 263, "col_offset": 0, "nodeName": "run_module", "type": "Any"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "l1", "type": "chainercv.utils.testing.constant_stub_link.ConstantStubLink"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "f1", "type": "DummyFunc"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "f2", "type": "DummyFunc"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "l2", "type": "chainercv.utils.testing.constant_stub_link.ConstantStubLink"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "pick", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "invalid_name", "type": "str"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "invalid_names", "type": "Tuple[str, str]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "n", "type": "str"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "invalid_names", "type": "Tuple[str, str]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "outs", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "f100", "type": "DummyFunc"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "l100", "type": "chainercv.utils.testing.constant_stub_link.ConstantStubLink"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "__enter__", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "__exit__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "l1", "type": "chainercv.utils.testing.constant_stub_link.ConstantStubLink"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "f1", "type": "DummyFunc"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "f2", "type": "DummyFunc"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "l2", "type": "chainercv.utils.testing.constant_stub_link.ConstantStubLink"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "pick", "type": "Any"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "pick", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 263, "col_offset": 0, "nodeName": "testing", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "ConstantStubLink", "type": "Type[chainercv.utils.testing.constant_stub_link.ConstantStubLink]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "DummyFunc", "type": "Type[DummyFunc]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 25, "col_offset": 18, "nodeName": "DummyFunc", "type": "Type[DummyFunc]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "ConstantStubLink", "type": "Type[chainercv.utils.testing.constant_stub_link.ConstantStubLink]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "PickableSequentialChain", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "l1", "type": "chainercv.utils.testing.constant_stub_link.ConstantStubLink"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "l1", "type": "chainercv.utils.testing.constant_stub_link.ConstantStubLink"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "f1", "type": "DummyFunc"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "f1", "type": "DummyFunc"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "f2", "type": "DummyFunc"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "f2", "type": "DummyFunc"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "l2", "type": "chainercv.utils.testing.constant_stub_link.ConstantStubLink"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "l2", "type": "chainercv.utils.testing.constant_stub_link.ConstantStubLink"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "pick", "type": "Any"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "pick", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "pick", "type": "Any"}, {"lineNumber": 44, "col_offset": 41, "nodeName": "pick", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "invalid_name", "type": "str"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "layer_names", "type": "Any"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 50, "col_offset": 43, "nodeName": "invalid_name", "type": "str"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "pick", "type": "str"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "invalid_name", "type": "str"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "pick", "type": "Tuple[str, str]"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "invalid_names", "type": "Tuple[str, str]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "layer_names", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "link", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "pick", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "pick", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "pick", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "outs", "type": "Tuple[Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "layer_name", "type": "Any"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "outs", "type": "Any"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "pick", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "l1", "type": "Any"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "f1", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "f2", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "l2", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "check_call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "check_basic", "type": "Callable[[], Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "check_basic", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "f1", "type": "Any"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "f2", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "l2", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "check_call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "check_deletion", "type": "Callable[[], Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "check_deletion", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "setUpBase", "type": "Callable[[], Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "setUpBase", "type": "Callable[[], Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "DummyFunc", "type": "Type[DummyFunc]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "ConstantStubLink", "type": "Type[chainercv.utils.testing.constant_stub_link.ConstantStubLink]"}, {"lineNumber": 161, "col_offset": 44, "nodeName": "link", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "Checker", "type": "Type[Any]"}, {"lineNumber": 193, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "link", "type": "Any"}, {"lineNumber": 193, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "pick", "type": "str"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "ConstantStubLink", "type": "Type[chainercv.utils.testing.constant_stub_link.ConstantStubLink]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 232, "col_offset": 18, "nodeName": "DummyFunc", "type": "Type[DummyFunc]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 233, "col_offset": 18, "nodeName": "DummyFunc", "type": "Type[DummyFunc]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 234, "col_offset": 18, "nodeName": "ConstantStubLink", "type": "Type[chainercv.utils.testing.constant_stub_link.ConstantStubLink]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "PickableSequentialChain", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "l1", "type": "chainercv.utils.testing.constant_stub_link.ConstantStubLink"}, {"lineNumber": 238, "col_offset": 27, "nodeName": "l1", "type": "chainercv.utils.testing.constant_stub_link.ConstantStubLink"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "f1", "type": "DummyFunc"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "f1", "type": "DummyFunc"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "f2", "type": "DummyFunc"}, {"lineNumber": 240, "col_offset": 27, "nodeName": "f2", "type": "DummyFunc"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "l2", "type": "chainercv.utils.testing.constant_stub_link.ConstantStubLink"}, {"lineNumber": 241, "col_offset": 27, "nodeName": "l2", "type": "chainercv.utils.testing.constant_stub_link.ConstantStubLink"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "remove_unused", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "layer_names", "type": "Any"}, {"lineNumber": 247, "col_offset": 48, "nodeName": "layer_names", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "check_remove_unused", "type": "Callable[[], Any]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "check_remove_unused", "type": "Any"}, {"lineNumber": 23, "col_offset": 35, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 26, "col_offset": 35, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "init_scope", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "link", "type": "Any"}, {"lineNumber": 44, "col_offset": 41, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "link", "type": "Any"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 51, "col_offset": 48, "nodeName": "expected_message_pattern", "type": "str"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "n", "type": "str"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "layer_names", "type": "Any"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 57, "col_offset": 43, "nodeName": "invalid_names", "type": "Tuple[str, str]"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 58, "col_offset": 48, "nodeName": "expected_message_pattern", "type": "str"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "link", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "pick", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "pick", "type": "Tuple[str]"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "pick", "type": "Tuple[Any]"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "outs", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "outs", "type": "Any"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 40, "nodeName": "pick", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "array", "type": "Any"}, {"lineNumber": 80, "col_offset": 45, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "out", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "pick", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "link", "type": "Any"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 37, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "copy", "type": "Any"}, {"lineNumber": 161, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "tester", "type": "Any"}, {"lineNumber": 166, "col_offset": 30, "nodeName": "tester", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "link", "type": "Any"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "link", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "expected", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "actual", "type": "Any"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "check_unchanged", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 196, "col_offset": 34, "nodeName": "original_link", "type": "Any"}, {"lineNumber": 196, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 200, "col_offset": 13, "nodeName": "check_unchanged", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 200, "col_offset": 34, "nodeName": "original_link", "type": "Any"}, {"lineNumber": 200, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "f100", "type": "DummyFunc"}, {"lineNumber": 202, "col_offset": 33, "nodeName": "f100", "type": "DummyFunc"}, {"lineNumber": 205, "col_offset": 13, "nodeName": "check_unchanged", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "original_link", "type": "Any"}, {"lineNumber": 205, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "l100", "type": "chainercv.utils.testing.constant_stub_link.ConstantStubLink"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "l100", "type": "chainercv.utils.testing.constant_stub_link.ConstantStubLink"}, {"lineNumber": 210, "col_offset": 13, "nodeName": "check_unchanged", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "original_link", "type": "Any"}, {"lineNumber": 210, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "pick", "type": "None"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "check_unchanged", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 216, "col_offset": 34, "nodeName": "original_link", "type": "Any"}, {"lineNumber": 216, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "pick", "type": "None"}, {"lineNumber": 231, "col_offset": 35, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 234, "col_offset": 35, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "init_scope", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 238, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 240, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 241, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "link", "type": "Any"}, {"lineNumber": 247, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "name", "type": "str"}, {"lineNumber": 249, "col_offset": 23, "nodeName": "layer_names", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 23, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 26, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "link", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "link", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "pick", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 80, "col_offset": 45, "nodeName": "xp", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "out", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "array", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "pick", "type": "Any"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "pick", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "link", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 37, "nodeName": "random", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "mode", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "link", "type": "Any"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 174, "col_offset": 19, "nodeName": "exc_type", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "link", "type": "Any"}, {"lineNumber": 177, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 179, "col_offset": 30, "nodeName": "expected", "type": "Any"}, {"lineNumber": 179, "col_offset": 45, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 200, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 200, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 200, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "init_scope", "type": "Any"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "link", "type": "Any"}, {"lineNumber": 202, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 206, "col_offset": 17, "nodeName": "init_scope", "type": "Any"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "link", "type": "Any"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 210, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 210, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "init_scope", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "link", "type": "Any"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "link", "type": "Any"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 216, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 216, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "init_scope", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "link", "type": "Any"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "link", "type": "Any"}, {"lineNumber": 231, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 234, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "link", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 23, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 80, "col_offset": 45, "nodeName": "link", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 158, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "e", "type": "Any"}, {"lineNumber": 182, "col_offset": 27, "nodeName": "a", "type": "Any"}, {"lineNumber": 182, "col_offset": 32, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 182, "col_offset": 36, "nodeName": "expected", "type": "Any"}, {"lineNumber": 182, "col_offset": 51, "nodeName": "actual", "type": "Any"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "link", "type": "Any"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 206, "col_offset": 17, "nodeName": "link", "type": "Any"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "link", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "link", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 231, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 234, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 250, "col_offset": 32, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 250, "col_offset": 40, "nodeName": "link", "type": "Any"}, {"lineNumber": 250, "col_offset": 51, "nodeName": "name", "type": "str"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 252, "col_offset": 33, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 252, "col_offset": 41, "nodeName": "link", "type": "Any"}, {"lineNumber": 252, "col_offset": 52, "nodeName": "name", "type": "str"}, {"lineNumber": 80, "col_offset": 45, "nodeName": "self", "type": "PickableSequentialChainTestBase"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "tester", "type": "Any"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "expected", "type": "Any"}, {"lineNumber": 181, "col_offset": 44, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 181, "col_offset": 48, "nodeName": "actual", "type": "Any"}, {"lineNumber": 182, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "tester", "type": "Any"}, {"lineNumber": 187, "col_offset": 44, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 187, "col_offset": 49, "nodeName": "array", "type": "Any"}, {"lineNumber": 188, "col_offset": 44, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 188, "col_offset": 49, "nodeName": "array", "type": "Any"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "testing", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "array", "type": "Any"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 191, "col_offset": 31, "nodeName": "array", "type": "Any"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 206, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 250, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 252, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 56, "nodeName": "layer_name", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "tester", "type": "Any"}, {"lineNumber": 183, "col_offset": 48, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 183, "col_offset": 53, "nodeName": "array", "type": "Any"}, {"lineNumber": 183, "col_offset": 63, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 183, "col_offset": 68, "nodeName": "array", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "testing", "type": "Any"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 185, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 185, "col_offset": 45, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 185, "col_offset": 52, "nodeName": "array", "type": "Any"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 187, "col_offset": 49, "nodeName": "expected", "type": "Any"}, {"lineNumber": 188, "col_offset": 49, "nodeName": "actual", "type": "Any"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "expected", "type": "Any"}, {"lineNumber": 191, "col_offset": 31, "nodeName": "actual", "type": "Any"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 53, "nodeName": "e", "type": "Any"}, {"lineNumber": 183, "col_offset": 68, "nodeName": "a", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 35, "nodeName": "e", "type": "Any"}, {"lineNumber": 185, "col_offset": 52, "nodeName": "a", "type": "Any"}, {"lineNumber": 187, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 188, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 31, "nodeName": "self", "type": "Any"}]