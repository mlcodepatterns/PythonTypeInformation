[{"lineNumber": 14, "col_offset": 16, "nodeName": "Function", "type": "Any"}, {"lineNumber": 26, "col_offset": 37, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 26, "col_offset": 37, "nodeName": "unittest", "type": "module"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "run_module", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "l1", "type": "chainercv.utils.testing.constant_stub_link.ConstantStubLink"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "f1", "type": "DummyFunc"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "f2", "type": "DummyFunc"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "l2", "type": "chainercv.utils.testing.constant_stub_link.ConstantStubLink"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "outs", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "testing", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "ConstantStubLink", "type": "Type[chainercv.utils.testing.constant_stub_link.ConstantStubLink]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "DummyFunc", "type": "Type[DummyFunc]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "DummyFunc", "type": "Type[DummyFunc]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "ConstantStubLink", "type": "Type[chainercv.utils.testing.constant_stub_link.ConstantStubLink]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "SequentialFeatureExtractor", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "l1", "type": "chainercv.utils.testing.constant_stub_link.ConstantStubLink"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "l1", "type": "chainercv.utils.testing.constant_stub_link.ConstantStubLink"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "f1", "type": "DummyFunc"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "f1", "type": "DummyFunc"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "f2", "type": "DummyFunc"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "f2", "type": "DummyFunc"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "l2", "type": "chainercv.utils.testing.constant_stub_link.ConstantStubLink"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "l2", "type": "chainercv.utils.testing.constant_stub_link.ConstantStubLink"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "link", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 49, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "outs", "type": "Tuple[Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "layer_name", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "outs", "type": "Union[Any, Tuple[Any]]"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "feature_names", "type": "Union[Any, Tuple[Any], Tuple[str]]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "l1", "type": "Any"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "f1", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "f2", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "l2", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "check_call", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "check_basic", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "check_basic", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "f1", "type": "Any"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "f2", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "l2", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "check_call", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "check_deletion", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "check_deletion", "type": "Any"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "init_scope", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "feature_names", "type": "Tuple[str]"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "feature_names", "type": "Tuple[Any]"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "outs", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "outs", "type": "Union[Any, Tuple[Any]]"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "feature_names", "type": "Union[Any, Tuple[Any], Tuple[str]]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "out", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "link", "type": "Any"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "expects", "type": "Dict[str, Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "link", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "xp", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "out", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "data", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 90, "col_offset": 62, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "link", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "link", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "expects", "type": "Any"}, {"lineNumber": 65, "col_offset": 56, "nodeName": "layer_name", "type": "Any"}]