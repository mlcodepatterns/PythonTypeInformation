[{"lineNumber": 13, "col_offset": 0, "nodeName": "_create_paramters", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "split_years", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "params", "type": "Any"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "unittest", "type": "module"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "run_module", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "product", "type": "Any"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "product_dict", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "split_years", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "n_out", "type": "int"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "i", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "shape", "type": "Any"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "testing", "type": "Any"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "testing", "type": "Any"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "testing", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "VOCDetectionDataset", "type": "Type[chainercv.datasets.voc.voc_detection_dataset.VOCDetectionDataset]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "return_difficult", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "randint", "type": "Any"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "n_out", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "bbox", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "label", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "out", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "C", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "H", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "img", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "img", "type": "Any"}, {"lineNumber": 48, "col_offset": 35, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "C", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "bbox", "type": "Any"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assert_array_less", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assert_array_less", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "label", "type": "Any"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "int32", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "n_out", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "difficult", "type": "Any"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "split", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "year", "type": "Any"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "use_difficult", "type": "Any"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "return_difficult", "type": "Any"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "i", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "img", "type": "Any"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "min", "type": "Any"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "img", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "max", "type": "Any"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "img", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "bbox", "type": "Any"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "bbox", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "bbox", "type": "Any"}, {"lineNumber": 58, "col_offset": 49, "nodeName": "bbox", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "bbox", "type": "Any"}, {"lineNumber": 59, "col_offset": 49, "nodeName": "bbox", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "label", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "label", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "min", "type": "Any"}, {"lineNumber": 64, "col_offset": 39, "nodeName": "label", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "max", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "label", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "difficult", "type": "Any"}, {"lineNumber": 70, "col_offset": 45, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "bool", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "bbox", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "voc_detection_label_names", "type": "Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "difficult", "type": "Any"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "difficult", "type": "Any"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "bbox", "type": "Any"}, {"lineNumber": 72, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 72, "col_offset": 47, "nodeName": "bbox", "type": "Any"}]