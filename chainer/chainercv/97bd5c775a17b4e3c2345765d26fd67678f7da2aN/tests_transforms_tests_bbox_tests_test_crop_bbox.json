[{"lineNumber": 9, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 9, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "run_module", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "y_slice", "type": "slice"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "x_slice", "type": "slice"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "testing", "type": "Any"}, {"lineNumber": 12, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestCropBbox"}, {"lineNumber": 19, "col_offset": 23, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestCropBbox"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "crop_bbox", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "bbox", "type": "numpy.ndarray"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "out", "type": "Any"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "crop_bbox", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "bbox", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "out", "type": "Any"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 12, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "float32", "type": "Any"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "float32", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "self", "type": "TestCropBbox"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "y_slice", "type": "slice"}, {"lineNumber": 31, "col_offset": 53, "nodeName": "x_slice", "type": "slice"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "param", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 35, "col_offset": 32, "nodeName": "param", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "float32", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "TestCropBbox"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "y_slice", "type": "slice"}, {"lineNumber": 45, "col_offset": 53, "nodeName": "x_slice", "type": "slice"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "param", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "param", "type": "Any"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "self", "type": "TestCropBbox"}, {"lineNumber": 31, "col_offset": 53, "nodeName": "self", "type": "TestCropBbox"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "self", "type": "TestCropBbox"}, {"lineNumber": 45, "col_offset": 53, "nodeName": "self", "type": "TestCropBbox"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "np", "type": "module"}]