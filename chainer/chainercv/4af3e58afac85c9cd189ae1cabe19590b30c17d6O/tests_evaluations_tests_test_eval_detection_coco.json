[{"lineNumber": 17, "col_offset": 0, "nodeName": "data", "type": "Dict[str, Union[List[List[int]], List[List[List[int]]], List[List[float]]]]"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "available", "type": "bool"}, {"lineNumber": 13, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 138, "col_offset": 0, "nodeName": "run_module", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "available", "type": "bool"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "pred_bboxes", "type": "Generator[numpy.ndarray, Any, None]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "pred_labels", "type": "Generator[numpy.ndarray, Any, None]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "pred_scores", "type": "Generator[numpy.ndarray, Any, None]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "gt_bboxes", "type": "Generator[numpy.ndarray, Any, None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "gt_labels", "type": "Generator[numpy.ndarray, Any, None]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "base_url", "type": "str"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "pred_bboxes", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "pred_labels", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "pred_scores", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "gt_bboxes", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "gt_labels", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "gt_areas", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "gt_crowdeds", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "expected", "type": "Dict[str, float]"}, {"lineNumber": 138, "col_offset": 0, "nodeName": "testing", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "available", "type": "bool"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "eval_detection_coco", "type": "module"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "pred_bboxes", "type": "Generator[numpy.ndarray, Any, None]"}, {"lineNumber": 42, "col_offset": 55, "nodeName": "pred_labels", "type": "Generator[numpy.ndarray, Any, None]"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "pred_scores", "type": "Generator[numpy.ndarray, Any, None]"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "gt_bboxes", "type": "Generator[numpy.ndarray, Any, None]"}, {"lineNumber": 44, "col_offset": 53, "nodeName": "gt_labels", "type": "Generator[numpy.ndarray, Any, None]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "available", "type": "bool"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "eval_detection_coco", "type": "module"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "pred_bboxes", "type": "Generator[numpy.ndarray, Any, None]"}, {"lineNumber": 58, "col_offset": 55, "nodeName": "pred_labels", "type": "Generator[numpy.ndarray, Any, None]"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "pred_scores", "type": "Generator[numpy.ndarray, Any, None]"}, {"lineNumber": 60, "col_offset": 37, "nodeName": "gt_bboxes", "type": "Generator[numpy.ndarray, Any, None]"}, {"lineNumber": 60, "col_offset": 53, "nodeName": "gt_labels", "type": "Generator[numpy.ndarray, Any, None]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "available", "type": "bool"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "eval_detection_coco", "type": "module"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "pred_bboxes", "type": "Generator[numpy.ndarray, Any, None]"}, {"lineNumber": 75, "col_offset": 55, "nodeName": "pred_labels", "type": "Generator[numpy.ndarray, Any, None]"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "pred_scores", "type": "Generator[numpy.ndarray, Any, None]"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "gt_bboxes", "type": "Generator[numpy.ndarray, Any, None]"}, {"lineNumber": 77, "col_offset": 53, "nodeName": "gt_labels", "type": "Generator[numpy.ndarray, Any, None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "load", "type": "Any"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "load", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "available", "type": "bool"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "eval_detection_coco", "type": "module"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "pred_bboxes", "type": "Any"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "pred_labels", "type": "Any"}, {"lineNumber": 112, "col_offset": 38, "nodeName": "pred_scores", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "gt_bboxes", "type": "Any"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "gt_labels", "type": "Any"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "gt_areas", "type": "Any"}, {"lineNumber": 113, "col_offset": 44, "nodeName": "gt_crowdeds", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "item", "type": "float"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "items", "type": "Callable"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "non_mean_key", "type": "str"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "bbox", "type": "List[List[int]]"}, {"lineNumber": 33, "col_offset": 47, "nodeName": "bbox", "type": "List[List[int]]"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 34, "col_offset": 37, "nodeName": "label", "type": "List[int]"}, {"lineNumber": 34, "col_offset": 48, "nodeName": "label", "type": "List[int]"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "score", "type": "List[float]"}, {"lineNumber": 35, "col_offset": 48, "nodeName": "score", "type": "List[float]"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "bbox", "type": "List[List[int]]"}, {"lineNumber": 36, "col_offset": 45, "nodeName": "bbox", "type": "List[List[int]]"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "label", "type": "List[int]"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "label", "type": "List[int]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "skipTest", "type": "Callable[[Any], None]"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 42, "col_offset": 55, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 44, "col_offset": 53, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "skipTest", "type": "Callable[[Any], None]"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 58, "col_offset": 55, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 60, "col_offset": 37, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 60, "col_offset": 53, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "skipTest", "type": "Callable[[Any], None]"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 75, "col_offset": 55, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 77, "col_offset": 53, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "skipTest", "type": "Callable[[Any], None]"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "self", "type": "TestEvalDetectionCOCO"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "self", "type": "TestEvalDetectionCOCO"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "self", "type": "TestEvalDetectionCOCO"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "self", "type": "TestEvalDetectionCOCO"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "self", "type": "TestEvalDetectionCOCO"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "self", "type": "TestEvalDetectionCOCO"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "self", "type": "TestEvalDetectionCOCO"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "expected", "type": "Dict[str, float]"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "key", "type": "str"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 56, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 55, "nodeName": "data", "type": "Dict[str, Union[List[List[int]], List[List[List[int]]], List[List[float]]]]"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 57, "nodeName": "data", "type": "Dict[str, Union[List[List[int]], List[List[List[int]]], List[List[float]]]]"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 57, "nodeName": "data", "type": "Dict[str, Union[List[List[int]], List[List[List[int]]], List[List[float]]]]"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 53, "nodeName": "data", "type": "Dict[str, Union[List[List[int]], List[List[List[int]]], List[List[float]]]]"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 55, "nodeName": "data", "type": "Dict[str, Union[List[List[int]], List[List[List[int]]], List[List[float]]]]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "result", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "result", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "result", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "result", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "result", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "result", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "TestEvalDetectionCOCOSimple"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "result", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "result", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "result", "type": "Any"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "urlretrieve", "type": "Callable[..., Tuple[str, http.client.HTTPMessage]]"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "urlretrieve", "type": "Callable[..., Tuple[str, http.client.HTTPMessage]]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "self", "type": "TestEvalDetectionCOCO"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "self", "type": "TestEvalDetectionCOCO"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "result", "type": "Any"}, {"lineNumber": 132, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "self", "type": "TestEvalDetectionCOCO"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "result", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "expected", "type": "Dict[str, float]"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "request", "type": "module"}, {"lineNumber": 94, "col_offset": 50, "nodeName": "join", "type": "Callable"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "base_url", "type": "str"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "request", "type": "module"}, {"lineNumber": 96, "col_offset": 49, "nodeName": "join", "type": "Callable"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "base_url", "type": "str"}, {"lineNumber": 132, "col_offset": 41, "nodeName": "non_mean_key", "type": "str"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "key", "type": "str"}, {"lineNumber": 135, "col_offset": 38, "nodeName": "key", "type": "str"}, {"lineNumber": 94, "col_offset": 50, "nodeName": "path", "type": "module"}, {"lineNumber": 96, "col_offset": 49, "nodeName": "path", "type": "module"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "non_mean_key", "type": "str"}, {"lineNumber": 94, "col_offset": 50, "nodeName": "os", "type": "module"}, {"lineNumber": 96, "col_offset": 49, "nodeName": "os", "type": "module"}]