[{"lineNumber": 8, "col_offset": 0, "nodeName": "forward", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "check_type", "type": "Callable[..., Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "input_vars", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "xp", "type": "Any"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "xp", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "output_vars", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "output_vars", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "wrapper", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 7, "nodeName": "forward_func", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "forward_func", "type": "Any"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "model", "type": "Any"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "model", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "expand_dim", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "a_var", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "forward_func", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "output_vars", "type": "Tuple[Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "in_types", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "a", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "xp", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "a_var", "type": "Any"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "input_vars", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "output_vars", "type": "Any"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "output_vars", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "out", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "get_types", "type": "Any"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "in_data", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "InvalidType", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "a", "type": "Any"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "input_vars", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "out", "type": "Any"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "type_check", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "check_type_func", "type": "Any"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "in_types", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "type_check", "type": "Any"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "a_var", "type": "Any"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 61, "col_offset": -1, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "raise_from", "type": "Callable[[Union[BaseException, Type[BaseException]], Optional[BaseException]], Any]"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "e", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "six", "type": "module"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "InvalidType", "type": "Any"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "expect", "type": "Any"}, {"lineNumber": 63, "col_offset": 49, "nodeName": "actual", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "type_check", "type": "Any"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "e", "type": "Any"}, {"lineNumber": 63, "col_offset": 49, "nodeName": "e", "type": "Any"}, {"lineNumber": 63, "col_offset": 63, "nodeName": "msg", "type": "str"}]