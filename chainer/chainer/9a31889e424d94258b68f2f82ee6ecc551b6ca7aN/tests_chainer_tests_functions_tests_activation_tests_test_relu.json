[{"lineNumber": 37, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "forward_cpu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "test_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "test_backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "test_double_backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "test_call_cudnn_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "test_call_cudnn_backward", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 164, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "grad_outputs", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "grad_grad_inputs", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "check_backward_options", "type": "Dict[nothing, nothing]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "check_double_backward_options", "type": "Dict[nothing, nothing]"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "grad_outputs", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "grad_outputs", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "grad_outputs", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "grad_outputs", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "grad_grad_inputs", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "grad_grad_inputs", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "default_func", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "activation_forward", "type": "Any"}, {"lineNumber": 164, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 41, "col_offset": 59, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 43, "col_offset": 60, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "astype", "type": "Any"}, {"lineNumber": 44, "col_offset": 61, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "gy", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "copy", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "expected", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "use_chainerx", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "forward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 67, "col_offset": 42, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "c_contiguous", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 78, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "use_chainerx", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 89, "col_offset": 48, "nodeName": "grad_outputs", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "c_contiguous", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "use_chainerx", "type": "Any"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "grad_outputs", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 111, "col_offset": 52, "nodeName": "grad_grad_inputs", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "c_contiguous", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 136, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 137, "col_offset": 65, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "expect", "type": "bool"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "relu", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "gy", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "default_func", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "activation_backward", "type": "Any"}, {"lineNumber": 41, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 61, "col_offset": 57, "nodeName": "float16", "type": "Any"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.SkipTest]"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "_as_noncontiguous_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 59, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "relu", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 78, "col_offset": 44, "nodeName": "y", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 82, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 82, "col_offset": 57, "nodeName": "float16", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.SkipTest]"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "_as_noncontiguous_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 59, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "_as_noncontiguous_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 65, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "check_backward", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "relu", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 97, "col_offset": 40, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 102, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 102, "col_offset": 57, "nodeName": "float16", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.SkipTest]"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "_as_noncontiguous_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 59, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "_as_noncontiguous_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 65, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "_as_noncontiguous_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 54, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "check_double_backward", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "relu", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 124, "col_offset": 35, "nodeName": "gy", "type": "Any"}, {"lineNumber": 124, "col_offset": 39, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 136, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 138, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "should_use_cudnn", "type": "Callable[..., bool]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 147, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 148, "col_offset": 67, "nodeName": "func", "type": "Any"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "side_effect", "type": "Any"}, {"lineNumber": 149, "col_offset": 35, "nodeName": "default_func", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 154, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "forward", "type": "Callable[[], Any]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 158, "col_offset": 68, "nodeName": "func", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "side_effect", "type": "Any"}, {"lineNumber": 159, "col_offset": 35, "nodeName": "default_func", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "expected", "type": "Any"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 57, "nodeName": "numpy", "type": "module"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "array", "type": "module"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "functions", "type": "module"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 82, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 57, "nodeName": "numpy", "type": "module"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "array", "type": "module"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "array", "type": "module"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "functions", "type": "module"}, {"lineNumber": 97, "col_offset": 60, "nodeName": "float64", "type": "Any"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "check_backward_options", "type": "Dict[nothing, nothing]"}, {"lineNumber": 102, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 57, "nodeName": "numpy", "type": "module"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "array", "type": "module"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "array", "type": "module"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "array", "type": "module"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "functions", "type": "module"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "float64", "type": "Any"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "check_double_backward_options", "type": "Union[Dict[nothing, nothing], Dict[str, float]]"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 138, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "chainer", "type": "module"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "cuda", "type": "module"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 147, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "patch", "type": "Callable[..., mock._patch]"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "func", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "forward", "type": "Callable[[], Any]"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "called", "type": "Any"}, {"lineNumber": 151, "col_offset": 46, "nodeName": "expect", "type": "bool"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 154, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "patch", "type": "Callable[..., mock._patch]"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "func", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "backward", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "called", "type": "Any"}, {"lineNumber": 161, "col_offset": 46, "nodeName": "expect", "type": "bool"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "testing", "type": "module"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "testing", "type": "module"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "testing", "type": "module"}, {"lineNumber": 97, "col_offset": 60, "nodeName": "numpy", "type": "module"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "testing", "type": "module"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "testing", "type": "module"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "testing", "type": "module"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "numpy", "type": "module"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "testing", "type": "module"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "func", "type": "Any"}, {"lineNumber": 151, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "cuda", "type": "module"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "testing", "type": "module"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "func", "type": "Any"}, {"lineNumber": 161, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "cuda", "type": "module"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "cuda", "type": "module"}]