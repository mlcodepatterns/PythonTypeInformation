[{"lineNumber": 41, "col_offset": 18, "nodeName": "FunctionTestCase", "type": "Type[chainer.testing.function.FunctionTestCase]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "generate_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "forward_expected", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "test_maximum_inconsistent_shapes", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "testing", "type": "module"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 87, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "eps", "type": "float"}, {"lineNumber": 54, "col_offset": 52, "nodeName": "eps", "type": "float"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "x1", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "x1_data", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "x2_data", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "x1", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 87, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "eps", "type": "float"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "eps", "type": "float"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "check_double_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "x1_shape", "type": "Any"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "x2_shape", "type": "Any"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "y_shape", "type": "Any"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 58, "col_offset": 58, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 59, "col_offset": 58, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "x1", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "x2", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "x1", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "x2", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "x1", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "x2", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "x1", "type": "Any"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "x2", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 79, "col_offset": 61, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 80, "col_offset": 61, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "x1_data", "type": "Any"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "x2_data", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "maximum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "x1", "type": "Any"}, {"lineNumber": 64, "col_offset": 37, "nodeName": "x2", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 79, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "InvalidType", "type": "Type[chainer.utils.type_check.InvalidType]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "maximum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "x1", "type": "Any"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "x2", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "check_forward_options", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 58, "col_offset": 41, "nodeName": "x1_shape", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "x2_shape", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "type_check", "type": "module"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "numpy", "type": "module"}]