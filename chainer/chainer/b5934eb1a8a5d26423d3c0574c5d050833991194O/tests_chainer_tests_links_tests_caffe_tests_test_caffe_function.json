[{"lineNumber": 16, "col_offset": 0, "nodeName": "_iter_init", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "_make_param", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "init_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "TestCaffeFunctionBase", "type": "Type[TestCaffeFunctionBase]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "call", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "test_concat", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "test_convolution", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "test_deconvolution", "type": "Callable[[Any], Any]"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "TestCaffeFunctionBase", "type": "Type[TestCaffeFunctionBase]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "test_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 247, "col_offset": 18, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "test_dropout", "type": "Callable[[Any], Any]"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "test_linear", "type": "Callable[[Any], Any]"}, {"lineNumber": 325, "col_offset": 27, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "test_linear", "type": "Callable[[Any], Any]"}, {"lineNumber": 369, "col_offset": 33, "nodeName": "TestCaffeFunctionBase", "type": "Type[TestCaffeFunctionBase]"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "test_linear", "type": "Callable[[Any], Any]"}, {"lineNumber": 392, "col_offset": 37, "nodeName": "TestCaffeFunctionBase", "type": "Type[TestCaffeFunctionBase]"}, {"lineNumber": 406, "col_offset": 4, "nodeName": "test_linear", "type": "Callable[[Any], Any]"}, {"lineNumber": 411, "col_offset": 14, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "test_lrn", "type": "Callable[[Any], Any]"}, {"lineNumber": 443, "col_offset": 27, "nodeName": "TestCaffeFunctionBase", "type": "Type[TestCaffeFunctionBase]"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "test_lrn", "type": "Callable[[Any], Any]"}, {"lineNumber": 462, "col_offset": 21, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "test_max_pooling", "type": "Callable[[Any], Any]"}, {"lineNumber": 496, "col_offset": 25, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "test_max_pooling", "type": "Callable[[Any], Any]"}, {"lineNumber": 527, "col_offset": 24, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "test_global_pooling", "type": "Callable[[Any], Any]"}, {"lineNumber": 556, "col_offset": 28, "nodeName": "TestCaffeFunctionBase", "type": "Type[TestCaffeFunctionBase]"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "test_stochastic_pooling", "type": "Callable[[Any], Any]"}, {"lineNumber": 575, "col_offset": 15, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 595, "col_offset": 4, "nodeName": "test_lrn", "type": "Callable[[Any], Any]"}, {"lineNumber": 602, "col_offset": 20, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 622, "col_offset": 4, "nodeName": "test_lrn", "type": "Callable[[Any], Any]"}, {"lineNumber": 629, "col_offset": 18, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 651, "col_offset": 4, "nodeName": "test_reshape", "type": "Callable[[Any], Any]"}, {"lineNumber": 658, "col_offset": 20, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "test_batchnorm", "type": "Callable[[Any], Any]"}, {"lineNumber": 701, "col_offset": 36, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 737, "col_offset": 4, "nodeName": "test_batchnorm", "type": "Callable[[Any], Any]"}, {"lineNumber": 744, "col_offset": 22, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 764, "col_offset": 4, "nodeName": "test_eltwise_prod", "type": "Callable[[Any], Any]"}, {"lineNumber": 772, "col_offset": 21, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "test_eltwise_sum", "type": "Callable[[Any], Any]"}, {"lineNumber": 800, "col_offset": 26, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 821, "col_offset": 4, "nodeName": "test_eltwise_sum", "type": "Callable[[Any], Any]"}, {"lineNumber": 828, "col_offset": 33, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 850, "col_offset": 4, "nodeName": "test_eltwise_sum", "type": "Callable[[Any], Any]"}, {"lineNumber": 856, "col_offset": 21, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 876, "col_offset": 4, "nodeName": "test_eltwise_max", "type": "Callable[[Any], Any]"}, {"lineNumber": 885, "col_offset": 16, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 905, "col_offset": 4, "nodeName": "test_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 912, "col_offset": 25, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 940, "col_offset": 4, "nodeName": "test_scale_one_bottom", "type": "Callable[[Any], Any]"}, {"lineNumber": 947, "col_offset": 24, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 976, "col_offset": 4, "nodeName": "test_scale_with_bias", "type": "Callable[[Any], Any]"}, {"lineNumber": 984, "col_offset": 33, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 1021, "col_offset": 4, "nodeName": "test_scale_one_bottom_with_bias", "type": "Callable[[Any], Any]"}, {"lineNumber": 1029, "col_offset": 16, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 1049, "col_offset": 4, "nodeName": "test_slice", "type": "Callable[[Any], Any]"}, {"lineNumber": 1060, "col_offset": 22, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 1080, "col_offset": 4, "nodeName": "test_slice_no_axis", "type": "Callable[[Any], Any]"}, {"lineNumber": 1091, "col_offset": 32, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 1108, "col_offset": 4, "nodeName": "test_slice_no_axis_no_slice_dim", "type": "Callable[[Any], Any]"}, {"lineNumber": 1119, "col_offset": 26, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 1140, "col_offset": 4, "nodeName": "test_slice_slice_point", "type": "Callable[[Any], Any]"}, {"lineNumber": 1151, "col_offset": 18, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 1168, "col_offset": 4, "nodeName": "test_softmax", "type": "Callable[[Any], Any]"}, {"lineNumber": 1175, "col_offset": 29, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 1195, "col_offset": 4, "nodeName": "test_softmax_caffe_engine", "type": "Callable[[Any], Any]"}, {"lineNumber": 1203, "col_offset": 29, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 1223, "col_offset": 4, "nodeName": "test_softmax_cuDNN_engine", "type": "Callable[[Any], Any]"}, {"lineNumber": 1231, "col_offset": 29, "nodeName": "TestCaffeFunctionBase", "type": "Type[TestCaffeFunctionBase]"}, {"lineNumber": 1245, "col_offset": 4, "nodeName": "test_softmax_invalid_axis", "type": "Callable[[Any], Any]"}, {"lineNumber": 1250, "col_offset": 26, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 1267, "col_offset": 4, "nodeName": "test_softmax_with_loss", "type": "Callable[[Any], Any]"}, {"lineNumber": 1274, "col_offset": 37, "nodeName": "TestCaffeFunctionBase", "type": "Type[TestCaffeFunctionBase]"}, {"lineNumber": 1288, "col_offset": 4, "nodeName": "test_softmax_with_loss_invalid_axis", "type": "Callable[[Any], Any]"}, {"lineNumber": 1293, "col_offset": 16, "nodeName": "TestCaffeFunctionBase", "type": "Type[TestCaffeFunctionBase]"}, {"lineNumber": 1306, "col_offset": 4, "nodeName": "test_split", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "param", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 413, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 464, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int, int, int]]"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int, int, int]]"}, {"lineNumber": 577, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 579, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 604, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 605, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 631, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 632, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 660, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 661, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 662, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 703, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 704, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 705, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 746, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 747, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 748, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 774, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 775, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 776, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 802, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 803, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 804, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 830, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 858, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 859, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 887, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 889, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 915, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 916, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 949, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 950, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 951, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 986, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 987, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 988, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 1031, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 1032, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 1033, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 1062, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 1063, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 1064, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 1093, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 1094, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 1095, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 1121, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 1122, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 1123, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 1153, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 1154, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 1155, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 1177, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 1178, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 1179, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 1205, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 1206, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 1207, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 1252, "col_offset": 4, "nodeName": "func_name", "type": "str"}, {"lineNumber": 1253, "col_offset": 4, "nodeName": "in_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 1254, "col_offset": 4, "nodeName": "out_shapes", "type": "List[Tuple[()]]"}, {"lineNumber": 1311, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1311, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 1311, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 17, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 17, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "d", "type": "Any"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "NetParameter", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "_iter_init", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "param", "type": "Any"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "data", "type": "Dict[str, List[Dict[str, Union[str, List[str], Dict[str, int]]]]]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "outs", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "out_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "outputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "ret_value", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "m", "type": "mock.MagicMock"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "invars", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "in_shapes", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "invars", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "l1", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "l1", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "l1", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "l1", "type": "Any"}, {"lineNumber": 1311, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 28, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "caffe_pb", "type": "module"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "_make_param", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "data", "type": "Dict[str, List[Dict[str, Union[str, List[str], Dict[str, int]]]]]"}, {"lineNumber": 51, "col_offset": 58, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "temp_file_path", "type": "Any"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "name", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "remove", "type": "Callable[[Union[str, unicode]], None]"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "temp_file_path", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "CaffeFunction", "type": "Type[chainer.links.caffe.caffe_function.CaffeFunction]"}, {"lineNumber": 59, "col_offset": 40, "nodeName": "temp_file_path", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "out_data", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "outs", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "patch", "type": "mock._patch"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "func_name", "type": "str"}, {"lineNumber": 73, "col_offset": 48, "nodeName": "m", "type": "mock.MagicMock"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "start", "type": "Callable[[], Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "tearDown", "type": "Callable[[], Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "stop", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "actual", "type": "Any"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "expect", "type": "Any"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "outputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 30, "nodeName": "f", "type": "Any"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "Convolution2D", "type": "Type[chainer.links.connection.convolution_2d.Convolution2D]"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "in_slice", "type": "slice"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "out_slice", "type": "slice"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 216, "col_offset": 30, "nodeName": "f", "type": "Any"}, {"lineNumber": 216, "col_offset": 33, "nodeName": "Deconvolution2D", "type": "Type[chainer.links.connection.deconvolution_2d.Deconvolution2D]"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "in_slice", "type": "slice"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "out_slice", "type": "slice"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 315, "col_offset": 30, "nodeName": "f", "type": "Any"}, {"lineNumber": 315, "col_offset": 33, "nodeName": "Linear", "type": "Type[chainer.links.connection.linear.Linear]"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 360, "col_offset": 30, "nodeName": "f", "type": "Any"}, {"lineNumber": 360, "col_offset": 33, "nodeName": "Linear", "type": "Type[chainer.links.connection.linear.Linear]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 363, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 655, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 739, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 767, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "assert_has_calls", "type": "Any"}, {"lineNumber": 793, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 794, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 795, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "assert_has_calls", "type": "Any"}, {"lineNumber": 822, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 823, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 824, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 825, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 825, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 851, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 877, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 878, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 879, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 880, "col_offset": 8, "nodeName": "assert_has_calls", "type": "Any"}, {"lineNumber": 906, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 907, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 908, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 909, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 941, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 942, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 943, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 944, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 977, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 978, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 979, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 980, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 981, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1022, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 1023, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1024, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 1025, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1026, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1050, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 1051, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1052, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1053, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1081, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 1082, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1083, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1084, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1109, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 1110, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1111, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1112, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1141, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 1142, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1143, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1144, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1169, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 1170, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1171, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1172, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1198, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 1199, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1200, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1226, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 1227, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1228, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1268, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 1269, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1270, "col_offset": 8, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1271, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1307, "col_offset": 8, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 1308, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1308, "col_offset": 25, "nodeName": "split_map", "type": "Dict[Any, Any]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 19, "col_offset": 23, "nodeName": "param", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, Union[bytearray, str, unicode], Any], None]"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "NamedTemporaryFile", "type": "Callable[..., tempfile._TemporaryFileWrapper]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[str, unicode]], int]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "self", "type": "TestCaffeFunctionBase"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "caffe", "type": "module"}, {"lineNumber": 59, "col_offset": 40, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "astype", "type": "Any"}, {"lineNumber": 67, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "outs", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 51, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 71, "col_offset": 57, "nodeName": "outs", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "mock", "type": "module"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "func_name", "type": "str"}, {"lineNumber": 72, "col_offset": 61, "nodeName": "ret_value", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "mock", "type": "module"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "patch", "type": "mock._patch"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "patch", "type": "mock._patch"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 85, "col_offset": 61, "nodeName": "float32", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "outputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "actual", "type": "Any"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "expect", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TestConcat"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestConcat"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestConcat"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "TestConvolution"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "TestConvolution"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "self", "type": "TestConvolution"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "TestConvolution"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "links", "type": "module"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "TestConvolution"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 175, "col_offset": 42, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "TestDeconvolution"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "TestDeconvolution"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 214, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "self", "type": "TestDeconvolution"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "TestDeconvolution"}, {"lineNumber": 216, "col_offset": 33, "nodeName": "links", "type": "module"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "TestDeconvolution"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 228, "col_offset": 42, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "TestData"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "TestData"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "TestDropout"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "TestDropout"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 269, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "TestDropout"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "TestInnerProduct"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "self", "type": "TestInnerProduct"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "self", "type": "TestInnerProduct"}, {"lineNumber": 315, "col_offset": 33, "nodeName": "links", "type": "module"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "W", "type": "Any"}, {"lineNumber": 317, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 319, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "self", "type": "TestInnerProduct"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 322, "col_offset": 42, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "self", "type": "TestInnerProductDim4"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "self", "type": "TestInnerProductDim4"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "self", "type": "TestInnerProductDim4"}, {"lineNumber": 360, "col_offset": 33, "nodeName": "links", "type": "module"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "W", "type": "Any"}, {"lineNumber": 362, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "self", "type": "TestInnerProductDim4"}, {"lineNumber": 363, "col_offset": 26, "nodeName": "f", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "self", "type": "TestInnerProductDim4"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 366, "col_offset": 42, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 388, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 407, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "self", "type": "TestLRN"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "self", "type": "TestLRN"}, {"lineNumber": 437, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 437, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "self", "type": "TestLRN"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 458, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 458, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "self", "type": "TestMaxPooling"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "self", "type": "TestMaxPooling"}, {"lineNumber": 490, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 490, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "self", "type": "TestMaxPooling"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 521, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 521, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 524, "col_offset": 12, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "self", "type": "TestGlobalPooling"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "self", "type": "TestGlobalPooling"}, {"lineNumber": 550, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 550, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "self", "type": "TestGlobalPooling"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 553, "col_offset": 12, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 571, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 571, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 572, "col_offset": 12, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "self", "type": "TestReLU"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "self", "type": "TestReLU"}, {"lineNumber": 597, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 597, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "self", "type": "TestReLU"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 599, "col_offset": 42, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "self", "type": "TestLeakyReLU"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "self", "type": "TestLeakyReLU"}, {"lineNumber": 624, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 624, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "self", "type": "TestLeakyReLU"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 626, "col_offset": 42, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "self", "type": "TestReshape"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "self", "type": "TestReshape"}, {"lineNumber": 653, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 653, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "self", "type": "TestReshape"}, {"lineNumber": 655, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 655, "col_offset": 42, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "self", "type": "TestBatchNorm"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "self", "type": "TestBatchNorm"}, {"lineNumber": 696, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 696, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "self", "type": "TestBatchNorm"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 698, "col_offset": 42, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "self", "type": "TestBatchNormUsingGlobalStats"}, {"lineNumber": 739, "col_offset": 8, "nodeName": "self", "type": "TestBatchNormUsingGlobalStats"}, {"lineNumber": 739, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 739, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "self", "type": "TestBatchNormUsingGlobalStats"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 741, "col_offset": 42, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "self", "type": "TestEltwiseProd"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "self", "type": "TestEltwiseProd"}, {"lineNumber": 766, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 766, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 767, "col_offset": 8, "nodeName": "self", "type": "TestEltwiseProd"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 793, "col_offset": 8, "nodeName": "self", "type": "TestEltwiseSum"}, {"lineNumber": 794, "col_offset": 8, "nodeName": "self", "type": "TestEltwiseSum"}, {"lineNumber": 794, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 794, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 795, "col_offset": 8, "nodeName": "self", "type": "TestEltwiseSum"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 822, "col_offset": 8, "nodeName": "self", "type": "TestEltwiseSumCoeff"}, {"lineNumber": 823, "col_offset": 8, "nodeName": "self", "type": "TestEltwiseSumCoeff"}, {"lineNumber": 823, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 823, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 824, "col_offset": 8, "nodeName": "self", "type": "TestEltwiseSumCoeff"}, {"lineNumber": 825, "col_offset": 8, "nodeName": "self", "type": "TestEltwiseSumCoeff"}, {"lineNumber": 825, "col_offset": 25, "nodeName": "mock", "type": "Any"}, {"lineNumber": 851, "col_offset": 8, "nodeName": "self", "type": "TestEltwiseSumInvalidCoeff"}, {"lineNumber": 852, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 852, "col_offset": 31, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 853, "col_offset": 12, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 877, "col_offset": 8, "nodeName": "self", "type": "TestEltwiseMax"}, {"lineNumber": 878, "col_offset": 8, "nodeName": "self", "type": "TestEltwiseMax"}, {"lineNumber": 878, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 878, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 879, "col_offset": 8, "nodeName": "self", "type": "TestEltwiseMax"}, {"lineNumber": 880, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 906, "col_offset": 8, "nodeName": "self", "type": "TestScale"}, {"lineNumber": 907, "col_offset": 8, "nodeName": "self", "type": "TestScale"}, {"lineNumber": 907, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 907, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 908, "col_offset": 8, "nodeName": "self", "type": "TestScale"}, {"lineNumber": 909, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 909, "col_offset": 42, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 909, "col_offset": 58, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 941, "col_offset": 8, "nodeName": "self", "type": "TestScaleOneBottom"}, {"lineNumber": 942, "col_offset": 8, "nodeName": "self", "type": "TestScaleOneBottom"}, {"lineNumber": 942, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 942, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 943, "col_offset": 8, "nodeName": "self", "type": "TestScaleOneBottom"}, {"lineNumber": 944, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 944, "col_offset": 42, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 977, "col_offset": 8, "nodeName": "self", "type": "TestScaleWithBias"}, {"lineNumber": 978, "col_offset": 8, "nodeName": "self", "type": "TestScaleWithBias"}, {"lineNumber": 978, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 978, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 979, "col_offset": 8, "nodeName": "self", "type": "TestScaleWithBias"}, {"lineNumber": 979, "col_offset": 24, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 979, "col_offset": 32, "nodeName": "l1", "type": "Any"}, {"lineNumber": 980, "col_offset": 8, "nodeName": "self", "type": "TestScaleWithBias"}, {"lineNumber": 981, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 981, "col_offset": 42, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 981, "col_offset": 58, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 1022, "col_offset": 8, "nodeName": "self", "type": "TestScaleOneBottomWithBias"}, {"lineNumber": 1023, "col_offset": 8, "nodeName": "self", "type": "TestScaleOneBottomWithBias"}, {"lineNumber": 1023, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1023, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 1024, "col_offset": 8, "nodeName": "self", "type": "TestScaleOneBottomWithBias"}, {"lineNumber": 1024, "col_offset": 24, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 1024, "col_offset": 32, "nodeName": "l1", "type": "Any"}, {"lineNumber": 1025, "col_offset": 8, "nodeName": "self", "type": "TestScaleOneBottomWithBias"}, {"lineNumber": 1026, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 1026, "col_offset": 42, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 1050, "col_offset": 8, "nodeName": "self", "type": "TestSlice"}, {"lineNumber": 1051, "col_offset": 8, "nodeName": "self", "type": "TestSlice"}, {"lineNumber": 1051, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1051, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 1052, "col_offset": 8, "nodeName": "self", "type": "TestSlice"}, {"lineNumber": 1053, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 1054, "col_offset": 12, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 1081, "col_offset": 8, "nodeName": "self", "type": "TestSliceNoAxis"}, {"lineNumber": 1082, "col_offset": 8, "nodeName": "self", "type": "TestSliceNoAxis"}, {"lineNumber": 1082, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1082, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 1083, "col_offset": 8, "nodeName": "self", "type": "TestSliceNoAxis"}, {"lineNumber": 1084, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 1085, "col_offset": 12, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 1109, "col_offset": 8, "nodeName": "self", "type": "TestSliceNoAxisNoSliceDim"}, {"lineNumber": 1110, "col_offset": 8, "nodeName": "self", "type": "TestSliceNoAxisNoSliceDim"}, {"lineNumber": 1110, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1110, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 1111, "col_offset": 8, "nodeName": "self", "type": "TestSliceNoAxisNoSliceDim"}, {"lineNumber": 1112, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 1113, "col_offset": 12, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 1141, "col_offset": 8, "nodeName": "self", "type": "TestSliceSlicePoint"}, {"lineNumber": 1142, "col_offset": 8, "nodeName": "self", "type": "TestSliceSlicePoint"}, {"lineNumber": 1142, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1142, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 1143, "col_offset": 8, "nodeName": "self", "type": "TestSliceSlicePoint"}, {"lineNumber": 1144, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 1145, "col_offset": 12, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 1169, "col_offset": 8, "nodeName": "self", "type": "TestSoftmax"}, {"lineNumber": 1170, "col_offset": 8, "nodeName": "self", "type": "TestSoftmax"}, {"lineNumber": 1170, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1170, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 1171, "col_offset": 8, "nodeName": "self", "type": "TestSoftmax"}, {"lineNumber": 1172, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 1172, "col_offset": 42, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 1198, "col_offset": 8, "nodeName": "self", "type": "TestSoftmaxCaffeEngine"}, {"lineNumber": 1199, "col_offset": 8, "nodeName": "self", "type": "TestSoftmaxCaffeEngine"}, {"lineNumber": 1200, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 1200, "col_offset": 42, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 1226, "col_offset": 8, "nodeName": "self", "type": "TestSoftmaxcuDnnEngine"}, {"lineNumber": 1227, "col_offset": 8, "nodeName": "self", "type": "TestSoftmaxcuDnnEngine"}, {"lineNumber": 1228, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 1228, "col_offset": 42, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 1246, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 1246, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 1247, "col_offset": 12, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 1268, "col_offset": 8, "nodeName": "self", "type": "TestSoftmaxWithLoss"}, {"lineNumber": 1269, "col_offset": 8, "nodeName": "self", "type": "TestSoftmaxWithLoss"}, {"lineNumber": 1269, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1269, "col_offset": 29, "nodeName": "layers", "type": "List[Tuple[Any, List[Any], List[Any]]]"}, {"lineNumber": 1270, "col_offset": 8, "nodeName": "self", "type": "TestSoftmaxWithLoss"}, {"lineNumber": 1271, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 1271, "col_offset": 42, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 1289, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 1289, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 1290, "col_offset": 12, "nodeName": "init_func", "type": "Callable[[], Any]"}, {"lineNumber": 1307, "col_offset": 8, "nodeName": "self", "type": "TestSplit"}, {"lineNumber": 1308, "col_offset": 8, "nodeName": "self", "type": "TestSplit"}, {"lineNumber": 1308, "col_offset": 25, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "d", "type": "Any"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "add", "type": "Any"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 23, "col_offset": 30, "nodeName": "d", "type": "Any"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "d", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "SerializeToString", "type": "Any"}, {"lineNumber": 67, "col_offset": 65, "nodeName": "numpy", "type": "module"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "outs", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "out_data", "type": "Any"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "outs", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "TestCaffeFunctionBaseMock", "type": "Type[TestCaffeFunctionBaseMock]"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "self", "type": "TestCaffeFunctionBaseMock"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestCaffeFunctionBaseMock"}, {"lineNumber": 85, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "invars", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 86, "col_offset": 43, "nodeName": "data", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "outputs", "type": "List[str]"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "TestConcat"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 166, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "W", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "TestConvolution"}, {"lineNumber": 175, "col_offset": 42, "nodeName": "self", "type": "TestConvolution"}, {"lineNumber": 214, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 219, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "W", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 222, "col_offset": 29, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "TestDeconvolution"}, {"lineNumber": 228, "col_offset": 42, "nodeName": "self", "type": "TestDeconvolution"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 269, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "TestDropout"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "self", "type": "TestDropout"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 317, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 317, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 319, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 319, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "self", "type": "TestInnerProduct"}, {"lineNumber": 322, "col_offset": 42, "nodeName": "self", "type": "TestInnerProduct"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 362, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 362, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "self", "type": "TestInnerProductDim4"}, {"lineNumber": 366, "col_offset": 42, "nodeName": "self", "type": "TestInnerProductDim4"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "self", "type": "TestInnerProductInvalidDim"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "self", "type": "TestInnerProductInvalidDim"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "self", "type": "TestInnerProductNonDefaultAxis"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "self", "type": "TestInnerProductNonDefaultAxis"}, {"lineNumber": 437, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "self", "type": "TestLRN"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "self", "type": "TestLRN"}, {"lineNumber": 458, "col_offset": 13, "nodeName": "self", "type": "TestLRNWithinChannel"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "self", "type": "TestLRNWithinChannel"}, {"lineNumber": 490, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "self", "type": "TestMaxPooling"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "self", "type": "TestMaxPooling"}, {"lineNumber": 521, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 524, "col_offset": 12, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 550, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "self", "type": "TestGlobalPooling"}, {"lineNumber": 553, "col_offset": 12, "nodeName": "self", "type": "TestGlobalPooling"}, {"lineNumber": 571, "col_offset": 13, "nodeName": "self", "type": "TestStochasticPooling"}, {"lineNumber": 572, "col_offset": 12, "nodeName": "self", "type": "TestStochasticPooling"}, {"lineNumber": 597, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "self", "type": "TestReLU"}, {"lineNumber": 599, "col_offset": 42, "nodeName": "self", "type": "TestReLU"}, {"lineNumber": 624, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "self", "type": "TestLeakyReLU"}, {"lineNumber": 626, "col_offset": 42, "nodeName": "self", "type": "TestLeakyReLU"}, {"lineNumber": 653, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 655, "col_offset": 8, "nodeName": "self", "type": "TestReshape"}, {"lineNumber": 655, "col_offset": 42, "nodeName": "self", "type": "TestReshape"}, {"lineNumber": 696, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "self", "type": "TestBatchNorm"}, {"lineNumber": 698, "col_offset": 42, "nodeName": "self", "type": "TestBatchNorm"}, {"lineNumber": 739, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "self", "type": "TestBatchNormUsingGlobalStats"}, {"lineNumber": 741, "col_offset": 42, "nodeName": "self", "type": "TestBatchNormUsingGlobalStats"}, {"lineNumber": 766, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "self", "type": "TestEltwiseProd"}, {"lineNumber": 768, "col_offset": 36, "nodeName": "call", "type": "Any"}, {"lineNumber": 769, "col_offset": 36, "nodeName": "call", "type": "Any"}, {"lineNumber": 794, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "self", "type": "TestEltwiseSum"}, {"lineNumber": 796, "col_offset": 36, "nodeName": "call", "type": "Any"}, {"lineNumber": 797, "col_offset": 36, "nodeName": "call", "type": "Any"}, {"lineNumber": 823, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 825, "col_offset": 25, "nodeName": "self", "type": "TestEltwiseSumCoeff"}, {"lineNumber": 852, "col_offset": 13, "nodeName": "self", "type": "TestEltwiseSumInvalidCoeff"}, {"lineNumber": 853, "col_offset": 12, "nodeName": "self", "type": "TestEltwiseSumInvalidCoeff"}, {"lineNumber": 878, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 880, "col_offset": 8, "nodeName": "self", "type": "TestEltwiseMax"}, {"lineNumber": 881, "col_offset": 13, "nodeName": "call", "type": "Any"}, {"lineNumber": 882, "col_offset": 13, "nodeName": "call", "type": "Any"}, {"lineNumber": 907, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 909, "col_offset": 8, "nodeName": "self", "type": "TestScale"}, {"lineNumber": 909, "col_offset": 42, "nodeName": "self", "type": "TestScale"}, {"lineNumber": 909, "col_offset": 58, "nodeName": "self", "type": "TestScale"}, {"lineNumber": 942, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 944, "col_offset": 8, "nodeName": "self", "type": "TestScaleOneBottom"}, {"lineNumber": 944, "col_offset": 42, "nodeName": "self", "type": "TestScaleOneBottom"}, {"lineNumber": 978, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 979, "col_offset": 32, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 981, "col_offset": 8, "nodeName": "self", "type": "TestScaleWithBias"}, {"lineNumber": 981, "col_offset": 42, "nodeName": "self", "type": "TestScaleWithBias"}, {"lineNumber": 981, "col_offset": 58, "nodeName": "self", "type": "TestScaleWithBias"}, {"lineNumber": 1023, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 1024, "col_offset": 32, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 1026, "col_offset": 8, "nodeName": "self", "type": "TestScaleOneBottomWithBias"}, {"lineNumber": 1026, "col_offset": 42, "nodeName": "self", "type": "TestScaleOneBottomWithBias"}, {"lineNumber": 1051, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 1053, "col_offset": 8, "nodeName": "self", "type": "TestSlice"}, {"lineNumber": 1054, "col_offset": 12, "nodeName": "self", "type": "TestSlice"}, {"lineNumber": 1082, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 1084, "col_offset": 8, "nodeName": "self", "type": "TestSliceNoAxis"}, {"lineNumber": 1085, "col_offset": 12, "nodeName": "self", "type": "TestSliceNoAxis"}, {"lineNumber": 1110, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 1112, "col_offset": 8, "nodeName": "self", "type": "TestSliceNoAxisNoSliceDim"}, {"lineNumber": 1113, "col_offset": 12, "nodeName": "self", "type": "TestSliceNoAxisNoSliceDim"}, {"lineNumber": 1142, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 1144, "col_offset": 8, "nodeName": "self", "type": "TestSliceSlicePoint"}, {"lineNumber": 1145, "col_offset": 12, "nodeName": "self", "type": "TestSliceSlicePoint"}, {"lineNumber": 1170, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 1172, "col_offset": 8, "nodeName": "self", "type": "TestSoftmax"}, {"lineNumber": 1172, "col_offset": 42, "nodeName": "self", "type": "TestSoftmax"}, {"lineNumber": 1200, "col_offset": 8, "nodeName": "self", "type": "TestSoftmaxCaffeEngine"}, {"lineNumber": 1200, "col_offset": 42, "nodeName": "self", "type": "TestSoftmaxCaffeEngine"}, {"lineNumber": 1228, "col_offset": 8, "nodeName": "self", "type": "TestSoftmaxcuDnnEngine"}, {"lineNumber": 1228, "col_offset": 42, "nodeName": "self", "type": "TestSoftmaxcuDnnEngine"}, {"lineNumber": 1246, "col_offset": 13, "nodeName": "self", "type": "TestSoftmaxInvalidAxis"}, {"lineNumber": 1247, "col_offset": 12, "nodeName": "self", "type": "TestSoftmaxInvalidAxis"}, {"lineNumber": 1269, "col_offset": 29, "nodeName": "func", "type": "chainer.links.caffe.caffe_function.CaffeFunction"}, {"lineNumber": 1271, "col_offset": 8, "nodeName": "self", "type": "TestSoftmaxWithLoss"}, {"lineNumber": 1271, "col_offset": 42, "nodeName": "self", "type": "TestSoftmaxWithLoss"}, {"lineNumber": 1289, "col_offset": 13, "nodeName": "self", "type": "TestSoftmaxWithLossInvalidAxis"}, {"lineNumber": 1290, "col_offset": 12, "nodeName": "self", "type": "TestSoftmaxWithLossInvalidAxis"}, {"lineNumber": 1308, "col_offset": 25, "nodeName": "self", "type": "TestSplit"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 23, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "_iter_init", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 24, "col_offset": 42, "nodeName": "d", "type": "Any"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "param", "type": "Any"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 30, "col_offset": 36, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "_iter_init", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 46, "nodeName": "d", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "setattr", "type": "Callable[[Any, Union[bytearray, str, unicode], Any], None]"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "param", "type": "Any"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "d", "type": "Any"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "param", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 67, "col_offset": 51, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "chainer", "type": "module"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 85, "col_offset": 47, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "chainer", "type": "module"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "self", "type": "TestConcat"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "self", "type": "TestConcat"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "self", "type": "TestConcat"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "self", "type": "TestConvolution"}, {"lineNumber": 165, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "out_slice", "type": "slice"}, {"lineNumber": 167, "col_offset": 36, "nodeName": "in_slice", "type": "slice"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "w", "type": "Any"}, {"lineNumber": 169, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 214, "col_offset": 29, "nodeName": "self", "type": "TestDeconvolution"}, {"lineNumber": 218, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 219, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "out_slice", "type": "slice"}, {"lineNumber": 220, "col_offset": 36, "nodeName": "in_slice", "type": "slice"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "w", "type": "Any"}, {"lineNumber": 222, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "self", "type": "TestData"}, {"lineNumber": 269, "col_offset": 29, "nodeName": "self", "type": "TestDropout"}, {"lineNumber": 317, "col_offset": 64, "nodeName": "numpy", "type": "module"}, {"lineNumber": 319, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 362, "col_offset": 64, "nodeName": "numpy", "type": "module"}, {"lineNumber": 437, "col_offset": 29, "nodeName": "self", "type": "TestLRN"}, {"lineNumber": 490, "col_offset": 29, "nodeName": "self", "type": "TestMaxPooling"}, {"lineNumber": 521, "col_offset": 29, "nodeName": "self", "type": "TestAveragePooling"}, {"lineNumber": 550, "col_offset": 29, "nodeName": "self", "type": "TestGlobalPooling"}, {"lineNumber": 597, "col_offset": 29, "nodeName": "self", "type": "TestReLU"}, {"lineNumber": 624, "col_offset": 29, "nodeName": "self", "type": "TestLeakyReLU"}, {"lineNumber": 653, "col_offset": 29, "nodeName": "self", "type": "TestReshape"}, {"lineNumber": 696, "col_offset": 29, "nodeName": "self", "type": "TestBatchNorm"}, {"lineNumber": 739, "col_offset": 29, "nodeName": "self", "type": "TestBatchNormUsingGlobalStats"}, {"lineNumber": 766, "col_offset": 29, "nodeName": "self", "type": "TestEltwiseProd"}, {"lineNumber": 768, "col_offset": 36, "nodeName": "mock", "type": "module"}, {"lineNumber": 768, "col_offset": 46, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 769, "col_offset": 36, "nodeName": "mock", "type": "module"}, {"lineNumber": 769, "col_offset": 46, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 794, "col_offset": 29, "nodeName": "self", "type": "TestEltwiseSum"}, {"lineNumber": 796, "col_offset": 36, "nodeName": "mock", "type": "module"}, {"lineNumber": 796, "col_offset": 46, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 797, "col_offset": 36, "nodeName": "mock", "type": "module"}, {"lineNumber": 797, "col_offset": 46, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 815, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 823, "col_offset": 29, "nodeName": "self", "type": "TestEltwiseSumCoeff"}, {"lineNumber": 844, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 878, "col_offset": 29, "nodeName": "self", "type": "TestEltwiseMax"}, {"lineNumber": 881, "col_offset": 13, "nodeName": "mock", "type": "module"}, {"lineNumber": 881, "col_offset": 23, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 881, "col_offset": 39, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 882, "col_offset": 13, "nodeName": "mock", "type": "module"}, {"lineNumber": 882, "col_offset": 23, "nodeName": "outputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 882, "col_offset": 40, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 907, "col_offset": 29, "nodeName": "self", "type": "TestScale"}, {"lineNumber": 942, "col_offset": 29, "nodeName": "self", "type": "TestScaleOneBottom"}, {"lineNumber": 978, "col_offset": 29, "nodeName": "self", "type": "TestScaleWithBias"}, {"lineNumber": 979, "col_offset": 32, "nodeName": "self", "type": "TestScaleWithBias"}, {"lineNumber": 1023, "col_offset": 29, "nodeName": "self", "type": "TestScaleOneBottomWithBias"}, {"lineNumber": 1024, "col_offset": 32, "nodeName": "self", "type": "TestScaleOneBottomWithBias"}, {"lineNumber": 1051, "col_offset": 29, "nodeName": "self", "type": "TestSlice"}, {"lineNumber": 1082, "col_offset": 29, "nodeName": "self", "type": "TestSliceNoAxis"}, {"lineNumber": 1110, "col_offset": 29, "nodeName": "self", "type": "TestSliceNoAxisNoSliceDim"}, {"lineNumber": 1142, "col_offset": 29, "nodeName": "self", "type": "TestSliceSlicePoint"}, {"lineNumber": 1170, "col_offset": 29, "nodeName": "self", "type": "TestSoftmax"}, {"lineNumber": 1269, "col_offset": 29, "nodeName": "self", "type": "TestSoftmaxWithLoss"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "param", "type": "Any"}, {"lineNumber": 31, "col_offset": 42, "nodeName": "k", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 90, "col_offset": 40, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "inputs", "type": "List[str]"}, {"lineNumber": 90, "col_offset": 52, "nodeName": "invars", "type": "List[Any]"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 202, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 222, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 298, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 305, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 350, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 677, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 684, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 720, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 727, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 768, "col_offset": 46, "nodeName": "self", "type": "TestEltwiseProd"}, {"lineNumber": 769, "col_offset": 46, "nodeName": "self", "type": "TestEltwiseProd"}, {"lineNumber": 796, "col_offset": 46, "nodeName": "self", "type": "TestEltwiseSum"}, {"lineNumber": 797, "col_offset": 46, "nodeName": "self", "type": "TestEltwiseSum"}, {"lineNumber": 815, "col_offset": 34, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 844, "col_offset": 34, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 881, "col_offset": 23, "nodeName": "self", "type": "TestEltwiseMax"}, {"lineNumber": 881, "col_offset": 39, "nodeName": "self", "type": "TestEltwiseMax"}, {"lineNumber": 882, "col_offset": 23, "nodeName": "self", "type": "TestEltwiseMax"}, {"lineNumber": 882, "col_offset": 40, "nodeName": "self", "type": "TestEltwiseMax"}, {"lineNumber": 930, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 965, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1003, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1010, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 149, "col_offset": 37, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 202, "col_offset": 37, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 205, "col_offset": 37, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 298, "col_offset": 37, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 305, "col_offset": 37, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 350, "col_offset": 37, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 677, "col_offset": 37, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 684, "col_offset": 37, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 720, "col_offset": 37, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 727, "col_offset": 37, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 815, "col_offset": 34, "nodeName": "moves", "type": "module"}, {"lineNumber": 844, "col_offset": 34, "nodeName": "moves", "type": "module"}, {"lineNumber": 930, "col_offset": 37, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 965, "col_offset": 37, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 1003, "col_offset": 37, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 1010, "col_offset": 37, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 677, "col_offset": 37, "nodeName": "moves", "type": "module"}, {"lineNumber": 684, "col_offset": 37, "nodeName": "moves", "type": "module"}, {"lineNumber": 720, "col_offset": 37, "nodeName": "moves", "type": "module"}, {"lineNumber": 727, "col_offset": 37, "nodeName": "moves", "type": "module"}, {"lineNumber": 815, "col_offset": 34, "nodeName": "six", "type": "module"}, {"lineNumber": 844, "col_offset": 34, "nodeName": "six", "type": "module"}, {"lineNumber": 930, "col_offset": 37, "nodeName": "moves", "type": "module"}, {"lineNumber": 965, "col_offset": 37, "nodeName": "moves", "type": "module"}, {"lineNumber": 1003, "col_offset": 37, "nodeName": "moves", "type": "module"}, {"lineNumber": 1010, "col_offset": 37, "nodeName": "moves", "type": "module"}, {"lineNumber": 677, "col_offset": 37, "nodeName": "six", "type": "module"}, {"lineNumber": 684, "col_offset": 37, "nodeName": "six", "type": "module"}, {"lineNumber": 720, "col_offset": 37, "nodeName": "six", "type": "module"}, {"lineNumber": 727, "col_offset": 37, "nodeName": "six", "type": "module"}, {"lineNumber": 930, "col_offset": 37, "nodeName": "six", "type": "module"}, {"lineNumber": 965, "col_offset": 37, "nodeName": "six", "type": "module"}, {"lineNumber": 1003, "col_offset": 37, "nodeName": "six", "type": "module"}, {"lineNumber": 1010, "col_offset": 37, "nodeName": "six", "type": "module"}]