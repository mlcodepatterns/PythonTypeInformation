[{"lineNumber": 35, "col_offset": 20, "nodeName": "FunctionTestCase", "type": "Type[chainer.testing.function_link.FunctionTestCase]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "before_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "generate_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "forward_expected", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "test_invalid_axis_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "test_invalid_axis_type_in_tuple", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "test_duplicate_axis", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "test_pos_neg_duplicate_axis", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "testing", "type": "module"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 55, "col_offset": 59, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "log", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "force_array", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "expected", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "expected", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestLogSumExpInvalidAxis"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 72, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "axis", "type": "Any"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "shape", "type": "Any"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.SkipTest]"}, {"lineNumber": 55, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "logsumexp", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "sum", "type": "Any"}, {"lineNumber": 72, "col_offset": 63, "nodeName": "numpy", "type": "module"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "logsumexp", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "logsumexp", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "logsumexp", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "logsumexp", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "check_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "check_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 60, "col_offset": 43, "nodeName": "axis", "type": "Any"}, {"lineNumber": 64, "col_offset": 51, "nodeName": "axis", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "self", "type": "TestLogSumExpInvalidAxis"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "self", "type": "TestLogSumExpInvalidAxis"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "self", "type": "TestLogSumExpInvalidAxis"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "self", "type": "TestLogSumExpInvalidAxis"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "self", "type": "TestLogSumExpInvalidAxis"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "self", "type": "TestLogSumExpInvalidAxis"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "self", "type": "TestLogSumExpInvalidAxis"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "self", "type": "TestLogSumExpInvalidAxis"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "exp", "type": "Any"}, {"lineNumber": 64, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 64, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "numpy", "type": "module"}]