[{"lineNumber": 15, "col_offset": 0, "nodeName": "_simple_group_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "check_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "test_forward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "test_forward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "test_backward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "test_backward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "check_double_backward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "test_double_backward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "test_double_backward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "x_reshape", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "mu", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "x_reshape", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 16, "col_offset": 16, "nodeName": "channels", "type": "Any"}, {"lineNumber": 16, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 17, "col_offset": 38, "nodeName": "groups", "type": "Any"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "mean", "type": "Any"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "x_reshape", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "std", "type": "Any"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "x_reshape", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "xrange", "type": "Type[xrange]"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "beta", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "beta", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "check_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "check_double_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 16, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 17, "col_offset": 46, "nodeName": "channels", "type": "Any"}, {"lineNumber": 17, "col_offset": 58, "nodeName": "groups", "type": "Any"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "xp", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "x_reshape", "type": "Any"}, {"lineNumber": 22, "col_offset": 29, "nodeName": "mu", "type": "Any"}, {"lineNumber": 22, "col_offset": 36, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 22, "col_offset": 44, "nodeName": "eps", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "x_reshape", "type": "Any"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "moves", "type": "module"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "i", "type": "int"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "beta", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 41, "col_offset": 59, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 42, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 43, "col_offset": 65, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "beta", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 45, "col_offset": 65, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "_simple_group_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "groups", "type": "Any"}, {"lineNumber": 65, "col_offset": 52, "nodeName": "xp", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "y_simple_gn", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "check_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "check_forward", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "check_backward", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "y_grad", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "check_backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "gy", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "check_backward", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "check_double_backward", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "y_grad", "type": "Any"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "x_grad_grad", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "check_double_backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 46, "nodeName": "gy", "type": "Any"}, {"lineNumber": 111, "col_offset": 55, "nodeName": "ggx", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "check_double_backward", "type": "Any"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "six", "type": "module"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 27, "col_offset": 35, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 28, "col_offset": 34, "nodeName": "beta", "type": "Any"}, {"lineNumber": 28, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 41, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "arg", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "args", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "group_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "args", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "concat", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "group_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "check_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 53, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 99, "col_offset": 65, "nodeName": "gy", "type": "Any"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "group_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "check_double_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "gy", "type": "Any"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "xp", "type": "Any"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "xp", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "shape", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "functions", "type": "module"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "testing", "type": "module"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "y_one_each", "type": "Any"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 82, "col_offset": 40, "nodeName": "arg", "type": "Any"}, {"lineNumber": 82, "col_offset": 49, "nodeName": "arg", "type": "Any"}, {"lineNumber": 82, "col_offset": 56, "nodeName": "args", "type": "Any"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "arg", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "arg", "type": "Any"}, {"lineNumber": 99, "col_offset": 41, "nodeName": "args", "type": "Any"}, {"lineNumber": 99, "col_offset": 53, "nodeName": "cuda", "type": "module"}, {"lineNumber": 99, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "arg", "type": "Any"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "arg", "type": "Any"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "args", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 117, "col_offset": 47, "nodeName": "ggx_", "type": "Any"}, {"lineNumber": 117, "col_offset": 57, "nodeName": "ggx_", "type": "Any"}, {"lineNumber": 117, "col_offset": 65, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 42, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "shape", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "groups", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "chainer", "type": "module"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "one_x", "type": "Any"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "cuda", "type": "module"}, {"lineNumber": 82, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "groups", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "cuda", "type": "module"}, {"lineNumber": 99, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "groups", "type": "Any"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "cuda", "type": "module"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 117, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 42, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "args_", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 41, "nodeName": "args_", "type": "Any"}, {"lineNumber": 58, "col_offset": 51, "nodeName": "args_", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "args_", "type": "Tuple[Any, ...]"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 41, "nodeName": "args_", "type": "Tuple[Any, ...]"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "args_", "type": "Tuple[Any, ...]"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "args_", "type": "Tuple[Any, ...]"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 41, "nodeName": "args_", "type": "Tuple[Any, ...]"}, {"lineNumber": 104, "col_offset": 51, "nodeName": "args_", "type": "Tuple[Any, ...]"}]