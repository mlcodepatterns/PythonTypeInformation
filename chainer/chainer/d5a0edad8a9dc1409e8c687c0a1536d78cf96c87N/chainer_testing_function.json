[{"lineNumber": 375, "col_offset": 0, "nodeName": "_check_array_types", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 387, "col_offset": 0, "nodeName": "_check_variable_types", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 406, "col_offset": 0, "nodeName": "_check_forward_output_arrays_equal", "type": "Callable[..., Any]"}, {"lineNumber": 14, "col_offset": 24, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "before_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "forward_expected", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "generate_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "generate_grad_outputs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "generate_grad_grad_inputs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "_to_noncontiguous_as_needed", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "_generate_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "_generate_grad_outputs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "_generate_grad_grad_inputs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "_forward_expected", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "_forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "run_test_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "run_test_backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "run_test_double_backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "FunctionTestBase", "type": "Type[FunctionTestBase]"}, {"lineNumber": 250, "col_offset": 41, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "test_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "test_backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "test_double_backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "backend_config", "type": "None"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "check_forward_options", "type": "Dict[str, Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "check_double_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "skip_forward_test", "type": "bool"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "skip_backward_test", "type": "bool"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "skip_double_backward_test", "type": "bool"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "dodge_nondifferentiable", "type": "bool"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "contiguous", "type": "None"}, {"lineNumber": 250, "col_offset": 41, "nodeName": "unittest", "type": "module"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "message", "type": "None"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "detail_message", "type": "None"}, {"lineNumber": 30, "col_offset": 43, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "grad_outputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "grad_grad_inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "grad_outputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "grad_outputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "grad_grad_inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "grad_grad_inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "skip_forward_test", "type": "bool"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "cpu_inputs", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "inputs_copied", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "cpu_expected", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "skip_backward_test", "type": "bool"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 166, "col_offset": 30, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "dodge_nondifferentiable", "type": "bool"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "skip_double_backward_test", "type": "bool"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 209, "col_offset": 30, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "dodge_nondifferentiable", "type": "bool"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "errors", "type": "List[Tuple[int, AssertionError]]"}, {"lineNumber": 455, "col_offset": 7, "nodeName": "message", "type": "Optional[str]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "expr", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "exc", "type": "None"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "FunctionTestError", "type": "Type[FunctionTestError]"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "message", "type": "str"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "error_types", "type": "Any"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "contig_arrays", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 80, "col_offset": 55, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "generate_inputs", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "_check_array_types", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "generate_grad_outputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 50, "nodeName": "outputs_template", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "_check_array_types", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "grad_outputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "generate_grad_grad_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 58, "nodeName": "inputs_template", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "_check_array_types", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "grad_grad_inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 100, "col_offset": 18, "nodeName": "forward_expected", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "_check_array_types", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 27, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "_check_variable_types", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "device", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "before_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "_generate_inputs", "type": "Callable[[], Any]"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "_forward_expected", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 46, "nodeName": "cpu_inputs", "type": "Any"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 125, "col_offset": 42, "nodeName": "cpu_inputs", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "_to_noncontiguous_as_needed", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 50, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "_check_forward_output_arrays_equal", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "cpu_expected", "type": "Any"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "before_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "before_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "run_test_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 364, "col_offset": 30, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "run_test_backward", "type": "Callable[[Any], Any]"}, {"lineNumber": 368, "col_offset": 31, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "run_test_double_backward", "type": "Callable[[Any], Any]"}, {"lineNumber": 372, "col_offset": 38, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 376, "col_offset": 22, "nodeName": "arrays", "type": "Tuple[Any, ...]"}, {"lineNumber": 376, "col_offset": 30, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 377, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 380, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 381, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 388, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 388, "col_offset": 22, "nodeName": "vars", "type": "Any"}, {"lineNumber": 388, "col_offset": 28, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "fail", "type": "Callable[..., Any]"}, {"lineNumber": 392, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "fail", "type": "Callable[..., Any]"}, {"lineNumber": 397, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "fail", "type": "Callable[..., Any]"}, {"lineNumber": 422, "col_offset": 23, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 425, "col_offset": 23, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 436, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "f", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 447, "col_offset": 24, "nodeName": "errors", "type": "List[Tuple[int, AssertionError]]"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "detail_message", "type": "nothing"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 460, "col_offset": 16, "nodeName": "message", "type": "Optional[str]"}, {"lineNumber": 463, "col_offset": 11, "nodeName": "detail_message", "type": "None"}, {"lineNumber": 464, "col_offset": 12, "nodeName": "msg", "type": "Any"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "fail", "type": "Callable[..., Any]"}, {"lineNumber": 465, "col_offset": 31, "nodeName": "msg", "type": "Union[str, Any]"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "FunctionTestError", "type": "Type[FunctionTestError]"}, {"lineNumber": 20, "col_offset": 36, "nodeName": "message", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "_raise_from", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "FunctionTestError", "type": "Type[FunctionTestError]"}, {"lineNumber": 25, "col_offset": 49, "nodeName": "message", "type": "Any"}, {"lineNumber": 25, "col_offset": 58, "nodeName": "exc", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "_as_noncontiguous_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 56, "nodeName": "contig_arrays", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 80, "col_offset": 55, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 100, "col_offset": 18, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "device", "type": "Any"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "copy", "type": "Any"}, {"lineNumber": 121, "col_offset": 38, "nodeName": "a", "type": "Any"}, {"lineNumber": 121, "col_offset": 43, "nodeName": "cpu_inputs", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "self", "type": "FunctionTestCase"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "self", "type": "FunctionTestCase"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "self", "type": "FunctionTestCase"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 137, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "fail", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "check_forward_options", "type": "Dict[str, Any]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 33, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 170, "col_offset": 39, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "_generate_inputs", "type": "Callable[[], Any]"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "_forward_expected", "type": "Callable[[Any], Any]"}, {"lineNumber": 174, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 175, "col_offset": 27, "nodeName": "_generate_grad_outputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 175, "col_offset": 55, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 177, "col_offset": 46, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 178, "col_offset": 52, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "_to_noncontiguous_as_needed", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 54, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "_to_noncontiguous_as_needed", "type": "Callable[[Any], Any]"}, {"lineNumber": 180, "col_offset": 60, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "do_check", "type": "Callable[[], Any]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 213, "col_offset": 19, "nodeName": "_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 213, "col_offset": 39, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 216, "col_offset": 21, "nodeName": "_generate_inputs", "type": "Callable[[], Any]"}, {"lineNumber": 217, "col_offset": 22, "nodeName": "_forward_expected", "type": "Callable[[Any], Any]"}, {"lineNumber": 217, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 218, "col_offset": 27, "nodeName": "_generate_grad_outputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 55, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 219, "col_offset": 31, "nodeName": "_generate_grad_grad_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 219, "col_offset": 63, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 221, "col_offset": 46, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 222, "col_offset": 52, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 223, "col_offset": 31, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 223, "col_offset": 56, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 224, "col_offset": 21, "nodeName": "_to_noncontiguous_as_needed", "type": "Callable[[Any], Any]"}, {"lineNumber": 224, "col_offset": 54, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 225, "col_offset": 27, "nodeName": "_to_noncontiguous_as_needed", "type": "Callable[[Any], Any]"}, {"lineNumber": 225, "col_offset": 60, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "_to_noncontiguous_as_needed", "type": "Callable[[Any], Any]"}, {"lineNumber": 227, "col_offset": 49, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "do_check", "type": "Callable[[], Any]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "self", "type": "FunctionTestCase"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "self", "type": "FunctionTestCase"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "self", "type": "FunctionTestCase"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 379, "col_offset": 29, "nodeName": "func_name", "type": "Any"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "func_name", "type": "str"}, {"lineNumber": 384, "col_offset": 27, "nodeName": "device", "type": "chainer.backends._cpu.CpuDevice"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "FunctionTestError", "type": "Type[FunctionTestError]"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 391, "col_offset": 29, "nodeName": "func_name", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "FunctionTestError", "type": "Type[FunctionTestError]"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 396, "col_offset": 16, "nodeName": "func_name", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "FunctionTestError", "type": "Type[FunctionTestError]"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 403, "col_offset": 16, "nodeName": "func_name", "type": "Any"}, {"lineNumber": 403, "col_offset": 27, "nodeName": "device", "type": "Any"}, {"lineNumber": 414, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 414, "col_offset": 15, "nodeName": "expected_arrays", "type": "Any"}, {"lineNumber": 414, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 414, "col_offset": 39, "nodeName": "actual_arrays", "type": "List[Any]"}, {"lineNumber": 416, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 428, "col_offset": 16, "nodeName": "shapes_match", "type": "bool"}, {"lineNumber": 428, "col_offset": 33, "nodeName": "dtypes_match", "type": "bool"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 436, "col_offset": 26, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 436, "col_offset": 30, "nodeName": "expected_arrays", "type": "Any"}, {"lineNumber": 436, "col_offset": 47, "nodeName": "actual_arrays", "type": "List[Any]"}, {"lineNumber": 439, "col_offset": 19, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 441, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 441, "col_offset": 15, "nodeName": "errors", "type": "List[Tuple[int, AssertionError]]"}, {"lineNumber": 443, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 446, "col_offset": 16, "nodeName": "StringIO", "type": "Type[StringIO.StringIO[Any]]"}, {"lineNumber": 447, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 447, "col_offset": 19, "nodeName": "e", "type": "AssertionError"}, {"lineNumber": 451, "col_offset": 29, "nodeName": "getvalue", "type": "Callable"}, {"lineNumber": 461, "col_offset": 16, "nodeName": "_format_array_props", "type": "Callable[[Any], str]"}, {"lineNumber": 461, "col_offset": 42, "nodeName": "expected_arrays", "type": "Any"}, {"lineNumber": 462, "col_offset": 16, "nodeName": "_format_array_props", "type": "Callable[[Any], str]"}, {"lineNumber": 462, "col_offset": 42, "nodeName": "actual_arrays", "type": "List[Any]"}, {"lineNumber": 464, "col_offset": 28, "nodeName": "detail_message", "type": "None"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "FunctionTestError", "type": "Type[FunctionTestError]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "utils", "type": "module"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "fail", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 35, "nodeName": "message", "type": "Any"}, {"lineNumber": 34, "col_offset": 44, "nodeName": "e", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "a", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "outputs_template", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "a", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "inputs_template", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "array_module", "type": "module"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "backend", "type": "module"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "backend", "type": "module"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "backend", "type": "module"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "backend", "type": "module"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 105, "col_offset": 55, "nodeName": "a", "type": "Any"}, {"lineNumber": 105, "col_offset": 60, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "FunctionTestError", "type": "Type[FunctionTestError]"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "var", "type": "Any"}, {"lineNumber": 154, "col_offset": 34, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "self", "type": "FunctionTestCase"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 175, "col_offset": 27, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "raise_if_fail", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "check_backward", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 213, "col_offset": 19, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 216, "col_offset": 21, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 217, "col_offset": 22, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 218, "col_offset": 27, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 219, "col_offset": 31, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 223, "col_offset": 31, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 224, "col_offset": 21, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 225, "col_offset": 27, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 379, "col_offset": 40, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 379, "col_offset": 45, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 380, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 380, "col_offset": 26, "nodeName": "a", "type": "Any"}, {"lineNumber": 380, "col_offset": 29, "nodeName": "supported_array_types", "type": "Tuple[Type[numpy.ndarray]]"}, {"lineNumber": 380, "col_offset": 63, "nodeName": "a", "type": "Any"}, {"lineNumber": 380, "col_offset": 68, "nodeName": "arrays", "type": "Tuple[Any, ...]"}, {"lineNumber": 384, "col_offset": 35, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 391, "col_offset": 40, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 391, "col_offset": 45, "nodeName": "vars", "type": "Any"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 392, "col_offset": 26, "nodeName": "a", "type": "Any"}, {"lineNumber": 392, "col_offset": 29, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 392, "col_offset": 51, "nodeName": "a", "type": "Any"}, {"lineNumber": 392, "col_offset": 56, "nodeName": "vars", "type": "Any"}, {"lineNumber": 396, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 398, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 398, "col_offset": 24, "nodeName": "vars", "type": "Any"}, {"lineNumber": 403, "col_offset": 35, "nodeName": "join", "type": "Callable"}, {"lineNumber": 418, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 418, "col_offset": 24, "nodeName": "expected_arrays", "type": "Any"}, {"lineNumber": 418, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 418, "col_offset": 46, "nodeName": "actual_arrays", "type": "List[Any]"}, {"lineNumber": 438, "col_offset": 16, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 438, "col_offset": 45, "nodeName": "expected", "type": "Any"}, {"lineNumber": 438, "col_offset": 55, "nodeName": "actual", "type": "Any"}, {"lineNumber": 445, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 446, "col_offset": 16, "nodeName": "six", "type": "module"}, {"lineNumber": 448, "col_offset": 16, "nodeName": "write", "type": "Callable"}, {"lineNumber": 449, "col_offset": 16, "nodeName": "write", "type": "Callable"}, {"lineNumber": 450, "col_offset": 16, "nodeName": "write", "type": "Callable"}, {"lineNumber": 451, "col_offset": 29, "nodeName": "f", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 461, "col_offset": 16, "nodeName": "utils", "type": "module"}, {"lineNumber": 462, "col_offset": 16, "nodeName": "utils", "type": "module"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "FunctionTestError", "type": "Type[FunctionTestError]"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "chainer", "type": "module"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "a", "type": "Any"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "array_module", "type": "module"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "inputs_copied", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 38, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "_format_array_props", "type": "Callable[[Any], str]"}, {"lineNumber": 150, "col_offset": 46, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "FunctionTestError", "type": "Type[FunctionTestError]"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 185, "col_offset": 51, "nodeName": "float64", "type": "Any"}, {"lineNumber": 186, "col_offset": 45, "nodeName": "dodge_nondifferentiable", "type": "bool"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 230, "col_offset": 21, "nodeName": "raise_if_fail", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 232, "col_offset": 20, "nodeName": "check_double_backward", "type": "Callable[..., None]"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 233, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 233, "col_offset": 35, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 233, "col_offset": 49, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 380, "col_offset": 29, "nodeName": "device", "type": "chainer.backends._cpu.CpuDevice"}, {"lineNumber": 392, "col_offset": 29, "nodeName": "chainer", "type": "module"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "ye", "type": "Any"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "y", "type": "Any"}, {"lineNumber": 424, "col_offset": 25, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 424, "col_offset": 29, "nodeName": "expected_arrays", "type": "Any"}, {"lineNumber": 424, "col_offset": 46, "nodeName": "actual_arrays", "type": "List[Any]"}, {"lineNumber": 427, "col_offset": 16, "nodeName": "ye", "type": "Any"}, {"lineNumber": 427, "col_offset": 20, "nodeName": "y", "type": "Any"}, {"lineNumber": 427, "col_offset": 25, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 427, "col_offset": 29, "nodeName": "expected_arrays", "type": "Any"}, {"lineNumber": 427, "col_offset": 46, "nodeName": "actual_arrays", "type": "List[Any]"}, {"lineNumber": 438, "col_offset": 16, "nodeName": "array_module", "type": "module"}, {"lineNumber": 438, "col_offset": 65, "nodeName": "opts", "type": "Dict[str, Any]"}, {"lineNumber": 440, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 448, "col_offset": 16, "nodeName": "f", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 448, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 448, "col_offset": 65, "nodeName": "i", "type": "int"}, {"lineNumber": 449, "col_offset": 16, "nodeName": "f", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 449, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 449, "col_offset": 28, "nodeName": "e", "type": "AssertionError"}, {"lineNumber": 450, "col_offset": 16, "nodeName": "f", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 140, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "utils", "type": "module"}, {"lineNumber": 185, "col_offset": 51, "nodeName": "numpy", "type": "module"}, {"lineNumber": 186, "col_offset": 45, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 230, "col_offset": 21, "nodeName": "FunctionTestError", "type": "Type[FunctionTestError]"}, {"lineNumber": 232, "col_offset": 20, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 234, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 235, "col_offset": 49, "nodeName": "dodge_nondifferentiable", "type": "bool"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "check_double_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 384, "col_offset": 42, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 384, "col_offset": 47, "nodeName": "a", "type": "Any"}, {"lineNumber": 384, "col_offset": 54, "nodeName": "a", "type": "Any"}, {"lineNumber": 384, "col_offset": 59, "nodeName": "arrays", "type": "Tuple[Any, ...]"}, {"lineNumber": 396, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 396, "col_offset": 54, "nodeName": "a", "type": "Any"}, {"lineNumber": 396, "col_offset": 59, "nodeName": "vars", "type": "Any"}, {"lineNumber": 403, "col_offset": 45, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 403, "col_offset": 50, "nodeName": "array", "type": "Any"}, {"lineNumber": 403, "col_offset": 63, "nodeName": "a", "type": "Any"}, {"lineNumber": 403, "col_offset": 68, "nodeName": "vars", "type": "Any"}, {"lineNumber": 440, "col_offset": 16, "nodeName": "errors", "type": "List[Tuple[int, AssertionError]]"}, {"lineNumber": 440, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 440, "col_offset": 34, "nodeName": "e", "type": "AssertionError"}, {"lineNumber": 445, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 445, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 445, "col_offset": 49, "nodeName": "errors", "type": "List[Tuple[int, AssertionError]]"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 149, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 149, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 149, "col_offset": 46, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 234, "col_offset": 30, "nodeName": "numpy", "type": "module"}, {"lineNumber": 235, "col_offset": 49, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "self", "type": "FunctionTestBase"}, {"lineNumber": 396, "col_offset": 41, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 396, "col_offset": 46, "nodeName": "a", "type": "Any"}, {"lineNumber": 403, "col_offset": 50, "nodeName": "a", "type": "Any"}, {"lineNumber": 445, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 445, "col_offset": 44, "nodeName": "e", "type": "AssertionError"}]