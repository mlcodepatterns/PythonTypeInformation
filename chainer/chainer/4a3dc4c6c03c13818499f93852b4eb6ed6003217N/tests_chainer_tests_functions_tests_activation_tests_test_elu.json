[{"lineNumber": 32, "col_offset": 14, "nodeName": "FunctionTestCase", "type": "Type[chainer.testing.function_link.FunctionTestCase]"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "testing", "type": "module"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "alpha_range", "type": "Any"}, {"lineNumber": 35, "col_offset": 40, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "alpha_range", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "alpha", "type": "float"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "alpha_range", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 48, "col_offset": 59, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "test_name", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "float64", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "ndindex", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "l", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "u", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "uniform", "type": "Callable[[Union[float, int], Union[float, int]], float]"}, {"lineNumber": 37, "col_offset": 40, "nodeName": "l", "type": "Any"}, {"lineNumber": 37, "col_offset": 43, "nodeName": "u", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 48, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "elu", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "random", "type": "module"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "check_forward_options", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "check_backward_options", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "expected", "type": "Any"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "expected", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "i", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "i", "type": "Any"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "expm1", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "numpy", "type": "module"}, {"lineNumber": 62, "col_offset": 55, "nodeName": "expected", "type": "Any"}, {"lineNumber": 62, "col_offset": 64, "nodeName": "i", "type": "Any"}]