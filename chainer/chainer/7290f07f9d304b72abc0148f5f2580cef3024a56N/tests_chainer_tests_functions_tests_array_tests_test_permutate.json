[{"lineNumber": 42, "col_offset": 20, "nodeName": "FunctionTestCase", "type": "Type[chainer.testing.function_link.FunctionTestCase]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "generate_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "forward_expected", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "check_invalid", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "test_invlaid_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "test_invlaid_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "testing", "type": "module"}, {"lineNumber": 73, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "skip_double_backward_test", "type": "bool"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "inv", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "ind", "type": "numpy.ndarray"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "debug", "type": "bool"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "ind", "type": "Any"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 49, "col_offset": 59, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "label_dtype", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "indices", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "indices", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "permutate", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "indices", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "indices", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "indices", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "take", "type": "Any"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "indices", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "force_array", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "expected", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "expected", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "indices", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "is_debug", "type": "Callable[[], bool]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "set_debug", "type": "Callable[[Any], None]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "set_debug", "type": "Callable[[Any], None]"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "debug", "type": "bool"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "ind_data", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "check_invalid", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "ind", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "check_invalid", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "check_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 49, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 56, "col_offset": 49, "nodeName": "axis", "type": "Any"}, {"lineNumber": 56, "col_offset": 64, "nodeName": "inv", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "argsort", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "indices", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 63, "col_offset": 47, "nodeName": "axis", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "chainer", "type": "module"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "chainer", "type": "module"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "chainer", "type": "module"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "chainer", "type": "module"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "permutate", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "ind", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 95, "col_offset": 48, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 95, "col_offset": 60, "nodeName": "ind", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 56, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 63, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "cuda", "type": "module"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 48, "nodeName": "cuda", "type": "module"}, {"lineNumber": 95, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "shape", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "axis", "type": "Any"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "numpy", "type": "module"}]