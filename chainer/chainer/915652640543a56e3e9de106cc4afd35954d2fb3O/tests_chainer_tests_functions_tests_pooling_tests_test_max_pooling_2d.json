[{"lineNumber": 38, "col_offset": 23, "nodeName": "FunctionTestCase", "type": "Type[chainer.testing.function_link.FunctionTestCase]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "generate_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "forward_expected", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "test_forward_cpu_wide", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "test_forward_output_size_zero", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "test_call_cudnn_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "test_call_cudnn_backward", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "test_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "testing", "type": "module"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "unittest", "type": "module"}, {"lineNumber": 199, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "cover_all", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "expect", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "gy", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "expect", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 199, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "output_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "output_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "empty", "type": "Any"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "output_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "c", "type": "int"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "expect", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "max_pooling_2d", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 87, "col_offset": 56, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "max_pooling_2d", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "use_chainerx", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "use_chainerx", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 132, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "max_pooling_2d", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "expect", "type": "bool"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 61, "nodeName": "func", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "max_pooling_2d", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 166, "col_offset": 31, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "array", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "indices", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 173, "col_offset": 17, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "c", "type": "int"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "xp", "type": "Any"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "expect", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "all", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "size", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "moves", "type": "module"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "xx", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "cover_all", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 83, "col_offset": 47, "nodeName": "cover_all", "type": "Any"}, {"lineNumber": 87, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "functions", "type": "module"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 93, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 107, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 132, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 140, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 141, "col_offset": 64, "nodeName": "func", "type": "Any"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 147, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "should_use_cudnn", "type": "Callable[..., bool]"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "forward", "type": "Callable[[], Any]"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "patch", "type": "Callable[..., mock._patch]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "called", "type": "Any"}, {"lineNumber": 154, "col_offset": 42, "nodeName": "expect", "type": "bool"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "self", "type": "TestMaxPooling2DIndices"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "functions", "type": "module"}, {"lineNumber": 166, "col_offset": 31, "nodeName": "chainer", "type": "module"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 167, "col_offset": 37, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 167, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 168, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "indices", "type": "Any"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "array", "type": "Any"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "indices", "type": "Any"}, {"lineNumber": 172, "col_offset": 50, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 173, "col_offset": 17, "nodeName": "moves", "type": "module"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "xx", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "cuda", "type": "module"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 183, "col_offset": 33, "nodeName": "expect", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "TestMaxPooling2DIndices"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "self", "type": "TestMaxPooling2DIndices"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "_check", "type": "Any"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "_check", "type": "Any"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 65, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "six", "type": "module"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "moves", "type": "module"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "use_chainerx", "type": "Any"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "to_chx", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "chainer", "type": "module"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "max_pooling_2d", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "use_chainerx", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "to_chx", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "chainer", "type": "module"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "max_pooling_2d", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 140, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "patch", "type": "Callable[..., mock._patch]"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "forward", "type": "Callable[[], Any]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 33, "nodeName": "called", "type": "Any"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 147, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "chainer", "type": "module"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "testing", "type": "module"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "func", "type": "Any"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "out", "type": "Any"}, {"lineNumber": 172, "col_offset": 50, "nodeName": "indices", "type": "Any"}, {"lineNumber": 173, "col_offset": 17, "nodeName": "six", "type": "module"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "moves", "type": "module"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 176, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "cuda", "type": "module"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "expect", "type": "Any"}, {"lineNumber": 184, "col_offset": 26, "nodeName": "indices", "type": "Any"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 58, "col_offset": 46, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "six", "type": "module"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "cuda", "type": "module"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "backend", "type": "module"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "functions", "type": "module"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "cuda", "type": "module"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "backend", "type": "module"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "functions", "type": "module"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "testing", "type": "module"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 33, "nodeName": "func", "type": "Any"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "should_use_cudnn", "type": "Callable[..., bool]"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 160, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "six", "type": "module"}, {"lineNumber": 176, "col_offset": 31, "nodeName": "numpy", "type": "module"}, {"lineNumber": 58, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "c", "type": "int"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "numpy", "type": "module"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "numpy", "type": "module"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "chainerx_device", "type": "Any"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "chainer", "type": "module"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "chainerx_device", "type": "Any"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "chainer", "type": "module"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "cuda", "type": "module"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "chainer", "type": "module"}, {"lineNumber": 160, "col_offset": 33, "nodeName": "numpy", "type": "module"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "c", "type": "int"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "cuda", "type": "module"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 71, "col_offset": 45, "nodeName": "max", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "max", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 73, "col_offset": 45, "nodeName": "max", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "max", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "max", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "xx", "type": "Any"}, {"lineNumber": 71, "col_offset": 45, "nodeName": "xx", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "xx", "type": "Any"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "xx", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "xx", "type": "Any"}, {"lineNumber": 73, "col_offset": 45, "nodeName": "xx", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "xx", "type": "Any"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "xx", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "xx", "type": "Any"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "xx", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "xx", "type": "Any"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "xx", "type": "Any"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "xx", "type": "Any"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "xx", "type": "Any"}]