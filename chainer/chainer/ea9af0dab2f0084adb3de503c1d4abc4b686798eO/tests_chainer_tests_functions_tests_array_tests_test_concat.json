[{"lineNumber": 60, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "_forward", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "check_forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "test_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "test_backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "test_invlaid_axis_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 112, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "xs", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "xs", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 66, "col_offset": 65, "nodeName": "shape", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "float64", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "concat", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "axis", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 87, "col_offset": 49, "nodeName": "data", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 88, "col_offset": 40, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "check_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 40, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 41, "nodeName": "grad_outputs", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 55, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "y", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "s", "type": "Any"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "slices", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "numpy", "type": "module"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "_forward", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 49, "nodeName": "y", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 39, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "check_backward", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "_forward", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "rand", "type": "Any"}, {"lineNumber": 115, "col_offset": 43, "nodeName": "rand", "type": "Any"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "concat", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "cuda", "type": "module"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "cuda", "type": "module"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "cuda", "type": "module"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 115, "col_offset": 43, "nodeName": "random", "type": "Any"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "self", "type": "TestConcatInvalidAxisType"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "prod", "type": "Any"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 66, "col_offset": 50, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 115, "col_offset": 43, "nodeName": "numpy", "type": "module"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "self", "type": "Any"}]