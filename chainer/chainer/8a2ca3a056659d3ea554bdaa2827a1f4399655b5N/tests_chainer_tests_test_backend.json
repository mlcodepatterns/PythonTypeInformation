[{"lineNumber": 20, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "_get_dst", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "test_from_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "test_from_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "test_from_ideep", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "_TestCopyToBase", "type": "Type[_TestCopyToBase]"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "_get_dst", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "_TestCopyToBase", "type": "Type[_TestCopyToBase]"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "_get_dst", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "test_gpu_to_another_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "_TestCopyToBase", "type": "Type[_TestCopyToBase]"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "_get_dst", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "test_fail_on_invalid_src", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "test_fail_on_invalid_dst", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "test_get_array_module_for_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "test_get_array_module_for_numpy_variable", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "test_get_array_module_for_cupy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "test_get_array_module_for_cupy_variable", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "test_get_array_module_for_chainerx_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "test_get_array_module_for_chainerx_variable", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "check_unrecognized", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "test_unrecognized", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "check_device_spec_numpy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "check_device_spec_cupy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "check_device_spec_chainerx", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "check_device_spec_intel64", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "check_invalid", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "test_module_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "test_module_numpy_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "test_str_chainerx_backend", "type": "Callable[[Any], Any]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "test_str_chainerx_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "test_tuple_chainerx_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "test_tuple_cupy_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "test_tuple_cupy_device_multi_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "test_chainerx_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "test_cuda_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "test_intel64", "type": "Callable[[Any], Any]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "test_str_chainerx_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "test_tuple_chainerx_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "test_tuple_cupy_invalid_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "test_repr_module_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "test_repr_tuple_chainerx_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "test_repr_tuple_cupy_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "test_repr_tuple_intel64_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "test_eq_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "test_eq_cupy", "type": "Callable[[Any], Any]"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "test_eq_chainerx", "type": "Callable[[Any], Any]"}, {"lineNumber": 301, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "orig_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "orig_cupy", "type": "Callable[[Any], Any]"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "orig_chainerx", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "send_check_equal", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "test_numpy_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "test_numpy_to_cupy", "type": "Callable[[Any], Any]"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "test_numpy_to_chainerx", "type": "Callable[[Any], Any]"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "test_cupy_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "test_cupy_to_cupy", "type": "Callable[[Any], Any]"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "test_cupy_to_cupy_multigpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "test_cupy_to_chainerx_native", "type": "Callable[[Any], Any]"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "test_chainerx_native_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "test_numpy_to_numpy_with_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 3, "nodeName": "is_available", "type": "Callable[[], bool]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "src_data", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "dst_data", "type": "Any"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "unittest", "type": "module"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "unittest", "type": "module"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "unittest", "type": "module"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 301, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 458, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 458, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 458, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 16, "col_offset": 3, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "arange", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 23, "col_offset": 32, "nodeName": "src_data", "type": "Any"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "src", "type": "Any"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "src_data", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "src", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "dst", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "src", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "dst", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "dst_data", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "src", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "dst", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "dst", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "src", "type": "None"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "dst", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "src", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "dst", "type": "None"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "chainerx_device", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "cupy_device", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "arr", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 320, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "converted_copy", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 458, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 22, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "self", "type": "_TestCopyToBase"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "_get_dst", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "array", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "src_data", "type": "Any"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "_get_dst", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "copyto", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "dst", "type": "Any"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "src", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 39, "col_offset": 59, "nodeName": "src_data", "type": "Any"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "array", "type": "Any"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "src_data", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "_get_dst", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "src", "type": "Any"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "mdarray", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "copyto", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "dst", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "src", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 47, "col_offset": 59, "nodeName": "src_data", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "self", "type": "TestCopyToCPU"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "array", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "dst_data", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "array", "type": "Any"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "src_data", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "dst", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "copyto", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "dst", "type": "Any"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "src", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 66, "col_offset": 45, "nodeName": "dst", "type": "Any"}, {"lineNumber": 66, "col_offset": 50, "nodeName": "src", "type": "Any"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "array", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "src_data", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "dst", "type": "Any"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "mdarray", "type": "Any"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "xp", "type": "Any"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "numpy", "type": "module"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "numpy", "type": "module"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "get_device_from_array", "type": "Callable[..., Union[chainer.backends._chainerx.ChainerxDevice, chainer.backends._cpu.CpuDevice, Any, chainer.backends.intel64.Intel64Device]]"}, {"lineNumber": 140, "col_offset": 47, "nodeName": "arg", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "check_unrecognized", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "check_unrecognized", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "check_unrecognized", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "check_unrecognized", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "check_unrecognized", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 36, "nodeName": "device_spec", "type": "Any"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 157, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 36, "nodeName": "device_spec", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 166, "col_offset": 34, "nodeName": "GpuDevice", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 167, "col_offset": 41, "nodeName": "Device", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "id", "type": "Any"}, {"lineNumber": 169, "col_offset": 35, "nodeName": "expected_device_id", "type": "Any"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 36, "nodeName": "device_spec", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "ChainerxDevice", "type": "Type[chainer.backends._chainerx.ChainerxDevice]"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 179, "col_offset": 41, "nodeName": "Device", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 180, "col_offset": 37, "nodeName": "expected_device_name", "type": "Any"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 36, "nodeName": "device_spec", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 190, "col_offset": 34, "nodeName": "Intel64Device", "type": "Type[chainer.backends.intel64.Intel64Device]"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 191, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "check_device_spec_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 205, "col_offset": 37, "nodeName": "numpy", "type": "module"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "check_device_spec_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "check_device_spec_chainerx", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "check_device_spec_chainerx", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "check_device_spec_chainerx", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "check_device_spec_cupy", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "check_device_spec_cupy", "type": "Any"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "get_device", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "check_device_spec_chainerx", "type": "Any"}, {"lineNumber": 233, "col_offset": 40, "nodeName": "chainerx_device", "type": "Any"}, {"lineNumber": 237, "col_offset": 22, "nodeName": "Device", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "check_device_spec_cupy", "type": "Any"}, {"lineNumber": 238, "col_offset": 36, "nodeName": "cupy_device", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "check_device_spec_intel64", "type": "Any"}, {"lineNumber": 242, "col_offset": 39, "nodeName": "intel64", "type": "module"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "check_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "check_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "check_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 36, "nodeName": "numpy", "type": "module"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 272, "col_offset": 36, "nodeName": "intel64", "type": "module"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 304, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 308, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 308, "col_offset": 26, "nodeName": "arr", "type": "Any"}, {"lineNumber": 308, "col_offset": 31, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 312, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 315, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 315, "col_offset": 36, "nodeName": "device_spec", "type": "Any"}, {"lineNumber": 316, "col_offset": 20, "nodeName": "send", "type": "Any"}, {"lineNumber": 316, "col_offset": 32, "nodeName": "orig", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "orig_numpy", "type": "Callable[[], Any]"}, {"lineNumber": 324, "col_offset": 20, "nodeName": "send_check_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 324, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 324, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 325, "col_offset": 28, "nodeName": "orig", "type": "Any"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "orig_numpy", "type": "Any"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 330, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 331, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 331, "col_offset": 37, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 332, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 336, "col_offset": 15, "nodeName": "orig_numpy", "type": "Any"}, {"lineNumber": 337, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 337, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 338, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 338, "col_offset": 37, "nodeName": "ndarray", "type": "Type[chainerx.ndarray]"}, {"lineNumber": 339, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "orig", "type": "Any"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "orig_numpy", "type": "Any"}, {"lineNumber": 350, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 350, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 351, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 351, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 351, "col_offset": 37, "nodeName": "ndarray", "type": "Type[chainerx.ndarray]"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "orig_cupy", "type": "Any"}, {"lineNumber": 357, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 357, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 357, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 358, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 358, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 358, "col_offset": 37, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 362, "col_offset": 15, "nodeName": "orig_cupy", "type": "Any"}, {"lineNumber": 363, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 363, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 364, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 364, "col_offset": 37, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 365, "col_offset": 35, "nodeName": "device", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 375, "col_offset": 15, "nodeName": "orig_cupy", "type": "Any"}, {"lineNumber": 376, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 376, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 377, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 377, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 377, "col_offset": 37, "nodeName": "ndarray", "type": "Type[chainerx.ndarray]"}, {"lineNumber": 378, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 387, "col_offset": 15, "nodeName": "orig_cupy", "type": "Any"}, {"lineNumber": 388, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 388, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 389, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 389, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 389, "col_offset": 37, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "id", "type": "Any"}, {"lineNumber": 394, "col_offset": 15, "nodeName": "orig_cupy", "type": "Any"}, {"lineNumber": 395, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 395, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 396, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 396, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 396, "col_offset": 37, "nodeName": "ndarray", "type": "Type[chainerx.ndarray]"}, {"lineNumber": 397, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 402, "col_offset": 15, "nodeName": "orig_cupy", "type": "Any"}, {"lineNumber": 403, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 403, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 404, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 404, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 404, "col_offset": 37, "nodeName": "ndarray", "type": "Type[chainerx.ndarray]"}, {"lineNumber": 405, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 409, "col_offset": 15, "nodeName": "orig_chainerx", "type": "Any"}, {"lineNumber": 410, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 410, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 410, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 411, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 411, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 411, "col_offset": 37, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 421, "col_offset": 15, "nodeName": "orig_chainerx", "type": "Any"}, {"lineNumber": 422, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 422, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 423, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 423, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 423, "col_offset": 37, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 424, "col_offset": 15, "nodeName": "id", "type": "Any"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 434, "col_offset": 15, "nodeName": "orig_chainerx", "type": "Any"}, {"lineNumber": 435, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 435, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 436, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 436, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 436, "col_offset": 37, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 437, "col_offset": 15, "nodeName": "id", "type": "Any"}, {"lineNumber": 440, "col_offset": 25, "nodeName": "copy", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 449, "col_offset": 15, "nodeName": "orig_chainerx", "type": "Any"}, {"lineNumber": 450, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 450, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 450, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 451, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 451, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 451, "col_offset": 37, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 454, "col_offset": 15, "nodeName": "orig_numpy", "type": "Callable[[], Any]"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "send_check_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 455, "col_offset": 30, "nodeName": "orig", "type": "Any"}, {"lineNumber": 22, "col_offset": 40, "nodeName": "numpy", "type": "module"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "self", "type": "_TestCopyToBase"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "backend", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 39, "col_offset": 53, "nodeName": "dst", "type": "Any"}, {"lineNumber": 39, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "ideep", "type": "Any"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "intel64", "type": "module"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "backend", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 47, "col_offset": 53, "nodeName": "dst", "type": "Any"}, {"lineNumber": 47, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "get_device_from_id", "type": "Any"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "_get_dst", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "backend", "type": "module"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "ideep", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "intel64", "type": "module"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "copyto", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "dst", "type": "Any"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "src", "type": "None"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "copyto", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "dst", "type": "None"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "src", "type": "Any"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestGetArrayModule"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "cuda", "type": "module"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 100, "col_offset": 38, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "cuda", "type": "module"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 107, "col_offset": 38, "nodeName": "array", "type": "Any"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "cuda", "type": "module"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "cuda", "type": "module"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 121, "col_offset": 38, "nodeName": "array", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "cuda", "type": "module"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 128, "col_offset": 38, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "cuda", "type": "module"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "TestGetDeviceFromArray"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "int64", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TestGetDeviceFromArray"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestGetDeviceFromArray"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestGetDeviceFromArray"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TestGetDeviceFromArray"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "backend", "type": "module"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 160, "col_offset": 13, "nodeName": "using_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "device_spec", "type": "Any"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 166, "col_offset": 34, "nodeName": "backend", "type": "module"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 167, "col_offset": 41, "nodeName": "cuda", "type": "module"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "cuda", "type": "module"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "using_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 34, "nodeName": "device_spec", "type": "Any"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "backend", "type": "module"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 179, "col_offset": 41, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "using_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 34, "nodeName": "device_spec", "type": "Any"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 190, "col_offset": 34, "nodeName": "backend", "type": "module"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "using_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "device_spec", "type": "Any"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 198, "col_offset": 27, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "device_spec", "type": "Any"}, {"lineNumber": 201, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 201, "col_offset": 27, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "using_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 202, "col_offset": 33, "nodeName": "device_spec", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "TestDeviceSpec"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "TestDeviceSpec"}, {"lineNumber": 208, "col_offset": 37, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 224, "col_offset": 37, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 228, "col_offset": 37, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 237, "col_offset": 22, "nodeName": "cuda", "type": "module"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "TestDeviceSpec"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "TestDeviceSpec"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "TestDeviceSpec"}, {"lineNumber": 251, "col_offset": 28, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 257, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "device", "type": "Any"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "device", "type": "Any"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 267, "col_offset": 37, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 268, "col_offset": 19, "nodeName": "device", "type": "Any"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 273, "col_offset": 19, "nodeName": "device", "type": "Any"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 276, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 276, "col_offset": 44, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 276, "col_offset": 63, "nodeName": "numpy", "type": "module"}, {"lineNumber": 277, "col_offset": 15, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 277, "col_offset": 38, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 277, "col_offset": 57, "nodeName": "numpy", "type": "module"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 282, "col_offset": 19, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 282, "col_offset": 38, "nodeName": "numpy", "type": "module"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 284, "col_offset": 19, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 286, "col_offset": 19, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 290, "col_offset": 15, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 290, "col_offset": 49, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 291, "col_offset": 49, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 298, "col_offset": 15, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 304, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "cuda", "type": "module"}, {"lineNumber": 307, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 307, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 308, "col_offset": 31, "nodeName": "cuda", "type": "module"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 312, "col_offset": 37, "nodeName": "numpy", "type": "module"}, {"lineNumber": 312, "col_offset": 59, "nodeName": "device_name", "type": "Any"}, {"lineNumber": 315, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 316, "col_offset": 20, "nodeName": "device", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 318, "col_offset": 27, "nodeName": "orig", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 319, "col_offset": 27, "nodeName": "converted", "type": "Any"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "self", "type": "TestDeviceSend"}, {"lineNumber": 324, "col_offset": 20, "nodeName": "self", "type": "TestDeviceSend"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 330, "col_offset": 49, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 331, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 332, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 332, "col_offset": 35, "nodeName": "Device", "type": "Any"}, {"lineNumber": 336, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 337, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 338, "col_offset": 37, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 339, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 344, "col_offset": 18, "nodeName": "_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 344, "col_offset": 33, "nodeName": "converted", "type": "Any"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 350, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 37, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 357, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 358, "col_offset": 37, "nodeName": "numpy", "type": "module"}, {"lineNumber": 362, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 363, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 363, "col_offset": 49, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 364, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 365, "col_offset": 35, "nodeName": "orig", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 370, "col_offset": 27, "nodeName": "orig", "type": "Any"}, {"lineNumber": 370, "col_offset": 34, "nodeName": "_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 370, "col_offset": 49, "nodeName": "converted", "type": "Any"}, {"lineNumber": 375, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 376, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 377, "col_offset": 37, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 378, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 383, "col_offset": 27, "nodeName": "orig", "type": "Any"}, {"lineNumber": 383, "col_offset": 34, "nodeName": "_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 383, "col_offset": 49, "nodeName": "converted", "type": "Any"}, {"lineNumber": 387, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 388, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 388, "col_offset": 49, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 389, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 394, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 395, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 396, "col_offset": 37, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 397, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 402, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 403, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 404, "col_offset": 37, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 405, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 409, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 410, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 411, "col_offset": 37, "nodeName": "numpy", "type": "module"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 416, "col_offset": 27, "nodeName": "orig", "type": "Any"}, {"lineNumber": 416, "col_offset": 34, "nodeName": "_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 416, "col_offset": 49, "nodeName": "converted", "type": "Any"}, {"lineNumber": 421, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 422, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 422, "col_offset": 49, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 423, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 424, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 429, "col_offset": 27, "nodeName": "orig", "type": "Any"}, {"lineNumber": 429, "col_offset": 34, "nodeName": "_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 429, "col_offset": 49, "nodeName": "converted", "type": "Any"}, {"lineNumber": 434, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 435, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 435, "col_offset": 49, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 436, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 437, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 440, "col_offset": 25, "nodeName": "converted", "type": "Any"}, {"lineNumber": 441, "col_offset": 13, "nodeName": "Device", "type": "Any"}, {"lineNumber": 442, "col_offset": 12, "nodeName": "converted", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 444, "col_offset": 12, "nodeName": "_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 444, "col_offset": 27, "nodeName": "orig", "type": "Any"}, {"lineNumber": 444, "col_offset": 34, "nodeName": "_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 444, "col_offset": 49, "nodeName": "converted_copy", "type": "Any"}, {"lineNumber": 449, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 450, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 451, "col_offset": 37, "nodeName": "numpy", "type": "module"}, {"lineNumber": 454, "col_offset": 15, "nodeName": "self", "type": "TestDeviceSend"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "self", "type": "TestDeviceSend"}, {"lineNumber": 455, "col_offset": 36, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "cuda", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "cuda", "type": "module"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "intel64", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "cuda", "type": "module"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "cuda", "type": "module"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "cuda", "type": "module"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "cuda", "type": "module"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "intel64", "type": "module"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "self", "type": "TestCopyToError"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "self", "type": "TestCopyToError"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "numpy", "type": "module"}, {"lineNumber": 100, "col_offset": 38, "nodeName": "chainer", "type": "module"}, {"lineNumber": 100, "col_offset": 55, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 107, "col_offset": 38, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "chainer", "type": "module"}, {"lineNumber": 114, "col_offset": 55, "nodeName": "array", "type": "Any"}, {"lineNumber": 121, "col_offset": 38, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 128, "col_offset": 38, "nodeName": "chainer", "type": "module"}, {"lineNumber": 128, "col_offset": 55, "nodeName": "array", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "backend", "type": "module"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "numpy", "type": "module"}, {"lineNumber": 160, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "Device", "type": "Any"}, {"lineNumber": 173, "col_offset": 36, "nodeName": "Device", "type": "Any"}, {"lineNumber": 173, "col_offset": 48, "nodeName": "expected_device_id", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "get_default_device", "type": "Any"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "get_device", "type": "Any"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "expected_device_name", "type": "Any"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 201, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 208, "col_offset": 37, "nodeName": "backend", "type": "module"}, {"lineNumber": 224, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 228, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 251, "col_offset": 28, "nodeName": "cuda", "type": "module"}, {"lineNumber": 267, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "backend", "type": "module"}, {"lineNumber": 276, "col_offset": 44, "nodeName": "backend", "type": "module"}, {"lineNumber": 277, "col_offset": 15, "nodeName": "backend", "type": "module"}, {"lineNumber": 277, "col_offset": 38, "nodeName": "backend", "type": "module"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "backend", "type": "module"}, {"lineNumber": 281, "col_offset": 36, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 282, "col_offset": 19, "nodeName": "backend", "type": "module"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "backend", "type": "module"}, {"lineNumber": 283, "col_offset": 36, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 284, "col_offset": 19, "nodeName": "backend", "type": "module"}, {"lineNumber": 284, "col_offset": 39, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "backend", "type": "module"}, {"lineNumber": 285, "col_offset": 36, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 286, "col_offset": 19, "nodeName": "backend", "type": "module"}, {"lineNumber": 286, "col_offset": 39, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 290, "col_offset": 15, "nodeName": "backend", "type": "module"}, {"lineNumber": 290, "col_offset": 49, "nodeName": "backend", "type": "module"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "backend", "type": "module"}, {"lineNumber": 291, "col_offset": 49, "nodeName": "backend", "type": "module"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 298, "col_offset": 15, "nodeName": "backend", "type": "module"}, {"lineNumber": 298, "col_offset": 35, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 307, "col_offset": 26, "nodeName": "numpy", "type": "module"}, {"lineNumber": 307, "col_offset": 45, "nodeName": "numpy", "type": "module"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "_cpu", "type": "module"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "_cpu", "type": "module"}, {"lineNumber": 330, "col_offset": 49, "nodeName": "cuda", "type": "module"}, {"lineNumber": 332, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 339, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 344, "col_offset": 18, "nodeName": "_cpu", "type": "module"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 363, "col_offset": 49, "nodeName": "cuda", "type": "module"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "_cpu", "type": "module"}, {"lineNumber": 370, "col_offset": 34, "nodeName": "_cpu", "type": "module"}, {"lineNumber": 378, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "_cpu", "type": "module"}, {"lineNumber": 383, "col_offset": 34, "nodeName": "_cpu", "type": "module"}, {"lineNumber": 388, "col_offset": 49, "nodeName": "cuda", "type": "module"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 397, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 405, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "_cpu", "type": "module"}, {"lineNumber": 416, "col_offset": 34, "nodeName": "_cpu", "type": "module"}, {"lineNumber": 422, "col_offset": 49, "nodeName": "cuda", "type": "module"}, {"lineNumber": 424, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "_cpu", "type": "module"}, {"lineNumber": 429, "col_offset": 34, "nodeName": "_cpu", "type": "module"}, {"lineNumber": 435, "col_offset": 49, "nodeName": "cuda", "type": "module"}, {"lineNumber": 437, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 441, "col_offset": 13, "nodeName": "cuda", "type": "module"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 444, "col_offset": 12, "nodeName": "_cpu", "type": "module"}, {"lineNumber": 444, "col_offset": 34, "nodeName": "_cpu", "type": "module"}, {"lineNumber": 455, "col_offset": 36, "nodeName": "backend", "type": "module"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "cuda", "type": "module"}, {"lineNumber": 100, "col_offset": 55, "nodeName": "numpy", "type": "module"}, {"lineNumber": 107, "col_offset": 38, "nodeName": "cuda", "type": "module"}, {"lineNumber": 114, "col_offset": 55, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 128, "col_offset": 55, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "cuda", "type": "module"}, {"lineNumber": 173, "col_offset": 36, "nodeName": "cuda", "type": "module"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 281, "col_offset": 36, "nodeName": "cuda", "type": "module"}, {"lineNumber": 283, "col_offset": 36, "nodeName": "cuda", "type": "module"}, {"lineNumber": 284, "col_offset": 39, "nodeName": "cuda", "type": "module"}, {"lineNumber": 285, "col_offset": 36, "nodeName": "cuda", "type": "module"}, {"lineNumber": 286, "col_offset": 39, "nodeName": "cuda", "type": "module"}, {"lineNumber": 298, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 114, "col_offset": 55, "nodeName": "cuda", "type": "module"}]