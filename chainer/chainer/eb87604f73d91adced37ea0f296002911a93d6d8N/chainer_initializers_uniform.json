[{"lineNumber": 11, "col_offset": 14, "nodeName": "Initializer", "type": "Type[chainer.initializer.Initializer]"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "Initializer", "type": "Type[chainer.initializer.Initializer]"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "Initializer", "type": "Type[chainer.initializer.Initializer]"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "Initializer", "type": "Type[chainer.initializer.Initializer]"}, {"lineNumber": 11, "col_offset": 14, "nodeName": "initializer", "type": "module"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "initializer", "type": "module"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "initializer", "type": "module"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "initializer", "type": "module"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "rng", "type": "None"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "rng", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "rng", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "rng", "type": "None"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "rng", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "rng", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "rng", "type": "None"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "rng", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "rng", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "rng", "type": "None"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "rng", "type": "Any"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "rng", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Uniform"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "Uniform"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 38, "nodeName": "dtype", "type": "None"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "rng", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "device", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "LeCunUniform"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "LeCunUniform"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "fan_out", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "get_fans", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 80, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 82, "col_offset": 33, "nodeName": "array", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "GlorotUniform"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "GlorotUniform"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 44, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "fan_out", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "get_fans", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 115, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "array", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "HeUniform"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "HeUniform"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 40, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "fan_out", "type": "Any"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "get_fans", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 149, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "array", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "rng", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "parse_kwargs", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "self", "type": "Uniform"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 37, "col_offset": 47, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "self", "type": "Uniform"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "get_device_from_array", "type": "Callable[..., Union[chainer.backends._chainerx.ChainerxDevice, chainer.backends._cpu.CpuDevice, Any, chainer.backends.intel64.Intel64Device]]"}, {"lineNumber": 39, "col_offset": 51, "nodeName": "array", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "copyto", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "array", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "rng", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "parse_kwargs", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 72, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "self", "type": "LeCunUniform"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 79, "col_offset": 47, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "initializer", "type": "module"}, {"lineNumber": 80, "col_offset": 47, "nodeName": "array", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "LeCunUniform"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "Uniform", "type": "Type[Uniform]"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "rng", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "parse_kwargs", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "self", "type": "GlorotUniform"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 114, "col_offset": 47, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "initializer", "type": "module"}, {"lineNumber": 115, "col_offset": 47, "nodeName": "array", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "self", "type": "GlorotUniform"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "Uniform", "type": "Type[Uniform]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "rng", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "parse_kwargs", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "self", "type": "HeUniform"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 148, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 148, "col_offset": 47, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "initializer", "type": "module"}, {"lineNumber": 149, "col_offset": 47, "nodeName": "array", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "self", "type": "HeUniform"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "Uniform", "type": "Type[Uniform]"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "argument", "type": "module"}, {"lineNumber": 30, "col_offset": 57, "nodeName": "rng", "type": "None"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "Uniform", "type": "Type[Uniform]"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "self", "type": "Uniform"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "self", "type": "Uniform"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "array", "type": "Any"}, {"lineNumber": 37, "col_offset": 47, "nodeName": "self", "type": "Uniform"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "backend", "type": "module"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "random", "type": "Any"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "scale", "type": "Any"}, {"lineNumber": 41, "col_offset": 55, "nodeName": "shape", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 45, "col_offset": 41, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "argument", "type": "module"}, {"lineNumber": 72, "col_offset": 57, "nodeName": "rng", "type": "None"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "LeCunUniform", "type": "Type[LeCunUniform]"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "self", "type": "LeCunUniform"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "self", "type": "LeCunUniform"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "array", "type": "Any"}, {"lineNumber": 79, "col_offset": 47, "nodeName": "self", "type": "LeCunUniform"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "rng", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "argument", "type": "module"}, {"lineNumber": 107, "col_offset": 57, "nodeName": "rng", "type": "None"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "GlorotUniform", "type": "Type[GlorotUniform]"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "self", "type": "GlorotUniform"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "self", "type": "GlorotUniform"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "array", "type": "Any"}, {"lineNumber": 114, "col_offset": 47, "nodeName": "self", "type": "GlorotUniform"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "rng", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "argument", "type": "module"}, {"lineNumber": 141, "col_offset": 57, "nodeName": "rng", "type": "None"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "HeUniform", "type": "Type[HeUniform]"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "self", "type": "HeUniform"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "self", "type": "HeUniform"}, {"lineNumber": 148, "col_offset": 34, "nodeName": "array", "type": "Any"}, {"lineNumber": 148, "col_offset": 47, "nodeName": "self", "type": "HeUniform"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 150, "col_offset": 41, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "rng", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "xp", "type": "Any"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "self", "type": "Uniform"}, {"lineNumber": 41, "col_offset": 55, "nodeName": "array", "type": "Any"}, {"lineNumber": 45, "col_offset": 41, "nodeName": "array", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "self", "type": "LeCunUniform"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 116, "col_offset": 51, "nodeName": "fan_out", "type": "Any"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "self", "type": "GlorotUniform"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "self", "type": "HeUniform"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "device", "type": "Any"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "self", "type": "Uniform"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "rng", "type": "Any"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "scale", "type": "Any"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "self", "type": "Uniform"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "self", "type": "Uniform"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "array", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "self", "type": "Uniform"}]