[{"lineNumber": 18, "col_offset": 30, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "test_iterator_repeat", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "test_iterator_list_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "test_iterator_tuple_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "test_iterator_dict_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "test_iterator_repeat_not_even", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "test_iterator_not_repeat", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "test_iterator_not_repeat_not_even", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "test_iterator_shuffle_divisible", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "test_iterator_shuffle_nondivisible", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "test_copy_not_repeat", "type": "Callable[[Any], Any]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "test_reset", "type": "Callable[[Any], Any]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "test_supported_reset_middle", "type": "Callable[[Any], Any]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "test_supported_reset_repeat", "type": "Callable[[Any], Any]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "test_supported_reset_finalized", "type": "Callable[[Any], Any]"}, {"lineNumber": 259, "col_offset": 39, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "test_iterator_serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 303, "col_offset": 51, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "test_iterator_repeat", "type": "Callable[[Any], Any]"}, {"lineNumber": 343, "col_offset": 32, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 356, "col_offset": 55, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "test_no_same_indices_order_sampler", "type": "Callable[[Any], Any]"}, {"lineNumber": 370, "col_offset": 26, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 381, "col_offset": 49, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "test_invalid_order_sampler", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 30, "nodeName": "unittest", "type": "module"}, {"lineNumber": 259, "col_offset": 39, "nodeName": "unittest", "type": "module"}, {"lineNumber": 303, "col_offset": 51, "nodeName": "unittest", "type": "module"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "order_sampler", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 356, "col_offset": 55, "nodeName": "unittest", "type": "module"}, {"lineNumber": 381, "col_offset": 49, "nodeName": "unittest", "type": "module"}, {"lineNumber": 392, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 392, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 392, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "dataset", "type": "List[List[Any]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "dataset", "type": "List[Tuple[int, Any]]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "dataset", "type": "List[Dict[int, Any]]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "batches", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "batches", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "copy_it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "batches", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "it", "type": "None"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "batches", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "trial", "type": "int"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "target", "type": "Dict[nothing, nothing]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "options", "type": "Dict[str, Callable[[Any, Any], Any]]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "n_call", "type": "int"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "remaining", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "first", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "second", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "batchsize", "type": "int"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "n_call", "type": "int"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "order", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "n_call", "type": "int"}, {"lineNumber": 378, "col_offset": 15, "nodeName": "order", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 392, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 21, "col_offset": 37, "nodeName": "n_threads", "type": "Any"}, {"lineNumber": 22, "col_offset": 41, "nodeName": "order_sampler", "type": "Any"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "MultithreadIterator", "type": "Type[chainer.iterators.multithread_iterator.MultithreadIterator]"}, {"lineNumber": 26, "col_offset": 43, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "MultithreadIterator", "type": "Type[chainer.iterators.multithread_iterator.MultithreadIterator]"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "dataset", "type": "List[List[Any]]"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "batches", "type": "Dict[Any, Any]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "MultithreadIterator", "type": "Type[chainer.iterators.multithread_iterator.MultithreadIterator]"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "dataset", "type": "List[Tuple[int, Any]]"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "batches", "type": "Dict[Any, Any]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "MultithreadIterator", "type": "Type[chainer.iterators.multithread_iterator.MultithreadIterator]"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "dataset", "type": "List[Dict[int, Any]]"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "batches", "type": "Dict[Any, Any]"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "MultithreadIterator", "type": "Type[chainer.iterators.multithread_iterator.MultithreadIterator]"}, {"lineNumber": 152, "col_offset": 43, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "MultithreadIterator", "type": "Type[chainer.iterators.multithread_iterator.MultithreadIterator]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "MultithreadIterator", "type": "Type[chainer.iterators.multithread_iterator.MultithreadIterator]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 172, "col_offset": 31, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 176, "col_offset": 31, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 183, "col_offset": 41, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 59, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 189, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 190, "col_offset": 13, "nodeName": "MultithreadIterator", "type": "Type[chainer.iterators.multithread_iterator.MultithreadIterator]"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "MultithreadIterator", "type": "Type[chainer.iterators.multithread_iterator.MultithreadIterator]"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 198, "col_offset": 14, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 13, "nodeName": "MultithreadIterator", "type": "Type[chainer.iterators.multithread_iterator.MultithreadIterator]"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 205, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 205, "col_offset": 28, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 42, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 208, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 212, "col_offset": 18, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 42, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "MultithreadIterator", "type": "Type[chainer.iterators.multithread_iterator.MultithreadIterator]"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "batches", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "MultithreadIterator", "type": "Type[chainer.iterators.multithread_iterator.MultithreadIterator]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], None]"}, {"lineNumber": 238, "col_offset": 13, "nodeName": "MultithreadIterator", "type": "Type[chainer.iterators.multithread_iterator.MultithreadIterator]"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], None]"}, {"lineNumber": 246, "col_offset": 13, "nodeName": "MultithreadIterator", "type": "Type[chainer.iterators.multithread_iterator.MultithreadIterator]"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "finalize", "type": "Callable[[], None]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], None]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 262, "col_offset": 37, "nodeName": "n_threads", "type": "Any"}, {"lineNumber": 263, "col_offset": 41, "nodeName": "order_sampler", "type": "Any"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "MultithreadIterator", "type": "Type[chainer.iterators.multithread_iterator.MultithreadIterator]"}, {"lineNumber": 267, "col_offset": 43, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 270, "col_offset": 31, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 26, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 274, "col_offset": 30, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 274, "col_offset": 38, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 276, "col_offset": 31, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 277, "col_offset": 31, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 280, "col_offset": 30, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 280, "col_offset": 38, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 282, "col_offset": 31, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 283, "col_offset": 31, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 285, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "serialize", "type": "Callable[[Any], None]"}, {"lineNumber": 288, "col_offset": 13, "nodeName": "MultithreadIterator", "type": "Type[chainer.iterators.multithread_iterator.MultithreadIterator]"}, {"lineNumber": 288, "col_offset": 43, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "serialize", "type": "Callable[[Any], None]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 291, "col_offset": 31, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 292, "col_offset": 31, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 294, "col_offset": 17, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 296, "col_offset": 30, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 296, "col_offset": 38, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 297, "col_offset": 24, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 298, "col_offset": 59, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 300, "col_offset": 31, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 308, "col_offset": 41, "nodeName": "order_sampler", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 312, "col_offset": 13, "nodeName": "MultithreadIterator", "type": "Type[chainer.iterators.multithread_iterator.MultithreadIterator]"}, {"lineNumber": 312, "col_offset": 43, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 313, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "NoSameIndicesOrderSampler"}, {"lineNumber": 350, "col_offset": 20, "nodeName": "current_order", "type": "Any"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "setdiff1d", "type": "Any"}, {"lineNumber": 351, "col_offset": 66, "nodeName": "remaining", "type": "Any"}, {"lineNumber": 352, "col_offset": 17, "nodeName": "setdiff1d", "type": "Any"}, {"lineNumber": 352, "col_offset": 67, "nodeName": "first", "type": "Any"}, {"lineNumber": 353, "col_offset": 15, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 362, "col_offset": 13, "nodeName": "MultithreadIterator", "type": "Type[chainer.iterators.multithread_iterator.MultithreadIterator]"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 363, "col_offset": 21, "nodeName": "batchsize", "type": "int"}, {"lineNumber": 365, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "self", "type": "InvalidOrderSampler"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "arange", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "self", "type": "InvalidOrderSampler"}, {"lineNumber": 21, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 22, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "iterators", "type": "module"}, {"lineNumber": 26, "col_offset": 57, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 28, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 42, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 44, "col_offset": 35, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 45, "col_offset": 35, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 63, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "iterators", "type": "module"}, {"lineNumber": 56, "col_offset": 57, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 59, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "batch", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "batch", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "k", "type": "Any"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "iteritems", "type": "Callable"}, {"lineNumber": 82, "col_offset": 38, "nodeName": "batches", "type": "Dict[Any, Any]"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 86, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "iterators", "type": "module"}, {"lineNumber": 87, "col_offset": 57, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 89, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 90, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "batch", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "batch", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "k", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "iteritems", "type": "Callable"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "batches", "type": "Dict[Any, Any]"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 117, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "iterators", "type": "module"}, {"lineNumber": 118, "col_offset": 57, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 120, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 121, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "batch", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "batch", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "k", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "iteritems", "type": "Callable"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "batches", "type": "Dict[Any, Any]"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "iterators", "type": "module"}, {"lineNumber": 152, "col_offset": 57, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "batches", "type": "Any"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "iterators", "type": "module"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "batches", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 165, "col_offset": 30, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 165, "col_offset": 45, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "iterators", "type": "module"}, {"lineNumber": 170, "col_offset": 40, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 31, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 31, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 41, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 185, "col_offset": 29, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 190, "col_offset": 13, "nodeName": "iterators", "type": "module"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "iterators", "type": "module"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 199, "col_offset": 39, "nodeName": "out", "type": "Any"}, {"lineNumber": 203, "col_offset": 13, "nodeName": "iterators", "type": "module"}, {"lineNumber": 204, "col_offset": 40, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 205, "col_offset": 18, "nodeName": "copy", "type": "module"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 207, "col_offset": 32, "nodeName": "batches", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 209, "col_offset": 30, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 209, "col_offset": 45, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 213, "col_offset": 32, "nodeName": "batches", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 215, "col_offset": 30, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 215, "col_offset": 45, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "iterators", "type": "module"}, {"lineNumber": 220, "col_offset": 40, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 46, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "reset", "type": "Callable[[], None]"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "iterators", "type": "module"}, {"lineNumber": 232, "col_offset": 40, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 238, "col_offset": 13, "nodeName": "iterators", "type": "module"}, {"lineNumber": 239, "col_offset": 39, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 246, "col_offset": 13, "nodeName": "iterators", "type": "module"}, {"lineNumber": 247, "col_offset": 40, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 262, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 263, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "iterators", "type": "module"}, {"lineNumber": 267, "col_offset": 57, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 270, "col_offset": 31, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 271, "col_offset": 26, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 273, "col_offset": 29, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 276, "col_offset": 31, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 277, "col_offset": 31, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 279, "col_offset": 29, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 282, "col_offset": 31, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 283, "col_offset": 31, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 286, "col_offset": 21, "nodeName": "DictionarySerializer", "type": "Type[chainer.serializers.npz.DictionarySerializer]"}, {"lineNumber": 286, "col_offset": 54, "nodeName": "target", "type": "Dict[nothing, nothing]"}, {"lineNumber": 288, "col_offset": 13, "nodeName": "iterators", "type": "module"}, {"lineNumber": 288, "col_offset": 57, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 289, "col_offset": 21, "nodeName": "NpzDeserializer", "type": "Type[chainer.serializers.npz.NpzDeserializer]"}, {"lineNumber": 289, "col_offset": 49, "nodeName": "target", "type": "Dict[nothing, nothing]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 291, "col_offset": 31, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 292, "col_offset": 31, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 294, "col_offset": 17, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 297, "col_offset": 24, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 298, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 300, "col_offset": 31, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 307, "col_offset": 19, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 312, "col_offset": 13, "nodeName": "iterators", "type": "module"}, {"lineNumber": 312, "col_offset": 57, "nodeName": "options", "type": "Dict[str, Callable[[Any, Any], Any]]"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 314, "col_offset": 29, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 314, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 315, "col_offset": 35, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 316, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 322, "col_offset": 34, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 322, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 323, "col_offset": 29, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 324, "col_offset": 35, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 325, "col_offset": 35, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 326, "col_offset": 21, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 328, "col_offset": 34, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 328, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 329, "col_offset": 29, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 330, "col_offset": 35, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 331, "col_offset": 35, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 332, "col_offset": 21, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 334, "col_offset": 34, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 334, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 335, "col_offset": 28, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 336, "col_offset": 35, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 337, "col_offset": 35, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 350, "col_offset": 34, "nodeName": "current_pos", "type": "Any"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 351, "col_offset": 32, "nodeName": "arange", "type": "Any"}, {"lineNumber": 352, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 352, "col_offset": 33, "nodeName": "arange", "type": "Any"}, {"lineNumber": 353, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 353, "col_offset": 34, "nodeName": "first", "type": "Any"}, {"lineNumber": 353, "col_offset": 41, "nodeName": "second", "type": "Any"}, {"lineNumber": 362, "col_offset": 13, "nodeName": "iterators", "type": "module"}, {"lineNumber": 366, "col_offset": 20, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 367, "col_offset": 55, "nodeName": "batchsize", "type": "int"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 376, "col_offset": 43, "nodeName": "n_call", "type": "int"}, {"lineNumber": 386, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 386, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 387, "col_offset": 17, "nodeName": "MultithreadIterator", "type": "Type[chainer.iterators.multithread_iterator.MultithreadIterator]"}, {"lineNumber": 388, "col_offset": 16, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 26, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 29, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 35, "col_offset": 33, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 38, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 39, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 41, "col_offset": 33, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 35, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 44, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 35, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 45, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 51, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 52, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 56, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 56, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "j", "type": "int"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "batches", "type": "Dict[Any, Any]"}, {"lineNumber": 81, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 47, "nodeName": "dataset", "type": "List[List[Any]]"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "six", "type": "module"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 83, "col_offset": 61, "nodeName": "v", "type": "Any"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 86, "col_offset": 56, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 87, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "j", "type": "int"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "batches", "type": "Dict[Any, Any]"}, {"lineNumber": 112, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 112, "col_offset": 47, "nodeName": "dataset", "type": "List[Tuple[int, Any]]"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "six", "type": "module"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 114, "col_offset": 61, "nodeName": "v", "type": "Any"}, {"lineNumber": 117, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 117, "col_offset": 56, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 118, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "j", "type": "int"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "v", "type": "Any"}, {"lineNumber": 143, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "batches", "type": "Dict[Any, Any]"}, {"lineNumber": 145, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 145, "col_offset": 47, "nodeName": "dataset", "type": "List[Dict[int, Any]]"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "six", "type": "module"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 148, "col_offset": 46, "nodeName": "x", "type": "Any"}, {"lineNumber": 148, "col_offset": 49, "nodeName": "v", "type": "Any"}, {"lineNumber": 152, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "_", "type": "int"}, {"lineNumber": 155, "col_offset": 49, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 162, "col_offset": 37, "nodeName": "_", "type": "int"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 45, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 170, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 186, "col_offset": 50, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 198, "col_offset": 33, "nodeName": "_", "type": "int"}, {"lineNumber": 204, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 206, "col_offset": 23, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 206, "col_offset": 37, "nodeName": "_", "type": "int"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 45, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 212, "col_offset": 42, "nodeName": "_", "type": "int"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 45, "nodeName": "copy_it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 220, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 224, "col_offset": 36, "nodeName": "batches", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 226, "col_offset": 34, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 226, "col_offset": 49, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 232, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 239, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 247, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 267, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 286, "col_offset": 21, "nodeName": "serializers", "type": "module"}, {"lineNumber": 288, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 289, "col_offset": 21, "nodeName": "serializers", "type": "module"}, {"lineNumber": 298, "col_offset": 50, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 307, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 307, "col_offset": 32, "nodeName": "arange", "type": "Any"}, {"lineNumber": 312, "col_offset": 57, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 314, "col_offset": 29, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 315, "col_offset": 35, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 315, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 317, "col_offset": 34, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 319, "col_offset": 39, "nodeName": "previous_epoch_detail", "type": "Any"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 321, "col_offset": 33, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 323, "col_offset": 29, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 324, "col_offset": 35, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 324, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 325, "col_offset": 35, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 325, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 326, "col_offset": 21, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 327, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 327, "col_offset": 33, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 329, "col_offset": 29, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 330, "col_offset": 35, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 330, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 331, "col_offset": 35, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 331, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 332, "col_offset": 21, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 333, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 333, "col_offset": 33, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 335, "col_offset": 28, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 336, "col_offset": 35, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 336, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 337, "col_offset": 35, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 337, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 340, "col_offset": 16, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 351, "col_offset": 32, "nodeName": "numpy", "type": "module"}, {"lineNumber": 351, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 351, "col_offset": 49, "nodeName": "current_order", "type": "Any"}, {"lineNumber": 352, "col_offset": 33, "nodeName": "numpy", "type": "module"}, {"lineNumber": 352, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 352, "col_offset": 50, "nodeName": "current_order", "type": "Any"}, {"lineNumber": 364, "col_offset": 26, "nodeName": "NoSameIndicesOrderSampler", "type": "Type[NoSameIndicesOrderSampler]"}, {"lineNumber": 364, "col_offset": 52, "nodeName": "batchsize", "type": "int"}, {"lineNumber": 366, "col_offset": 20, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "self", "type": "TestMultithreadIteratorNoSameIndicesOrderSampler"}, {"lineNumber": 367, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 376, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 376, "col_offset": 33, "nodeName": "_order", "type": "Any"}, {"lineNumber": 376, "col_offset": 43, "nodeName": "self", "type": "InvalidOrderSampler"}, {"lineNumber": 386, "col_offset": 13, "nodeName": "self", "type": "TestMultithreadIteratorInvalidOrderSampler"}, {"lineNumber": 387, "col_offset": 17, "nodeName": "iterators", "type": "module"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 33, "col_offset": 65, "nodeName": "i", "type": "int"}, {"lineNumber": 50, "col_offset": 54, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 63, "col_offset": 65, "nodeName": "i", "type": "int"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "batch", "type": "Any"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 48, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "batches", "type": "Dict[Any, Any]"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "testing", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 94, "col_offset": 65, "nodeName": "i", "type": "int"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "batch", "type": "Any"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 36, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 108, "col_offset": 45, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 48, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "batches", "type": "Dict[Any, Any]"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "testing", "type": "Any"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 125, "col_offset": 65, "nodeName": "i", "type": "int"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 129, "col_offset": 37, "nodeName": "batch", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 139, "col_offset": 45, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 42, "nodeName": "v", "type": "Any"}, {"lineNumber": 142, "col_offset": 45, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "batches", "type": "Dict[Any, Any]"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "dataset", "type": "List[Dict[int, Any]]"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "testing", "type": "Any"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 154, "col_offset": 42, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 162, "col_offset": 42, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 186, "col_offset": 32, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 186, "col_offset": 41, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 198, "col_offset": 38, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 206, "col_offset": 23, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 206, "col_offset": 42, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "copy_it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 212, "col_offset": 47, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 223, "col_offset": 27, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 223, "col_offset": 41, "nodeName": "_", "type": "int"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 49, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 298, "col_offset": 32, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 298, "col_offset": 41, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 307, "col_offset": 32, "nodeName": "numpy", "type": "module"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 317, "col_offset": 34, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "self", "type": "TestMultithreadIteratorOrderSamplerEpochSize"}, {"lineNumber": 319, "col_offset": 39, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 319, "col_offset": 65, "nodeName": "i", "type": "int"}, {"lineNumber": 340, "col_offset": 41, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 367, "col_offset": 33, "nodeName": "unique", "type": "Any"}, {"lineNumber": 367, "col_offset": 46, "nodeName": "batch", "type": "Any"}, {"lineNumber": 388, "col_offset": 42, "nodeName": "InvalidOrderSampler", "type": "Type[InvalidOrderSampler]"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 50, "col_offset": 45, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 78, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 83, "col_offset": 46, "nodeName": "dataset", "type": "List[List[Any]]"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 36, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 114, "col_offset": 46, "nodeName": "dataset", "type": "List[Tuple[int, Any]]"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 140, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "k", "type": "Any"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 45, "nodeName": "numpy", "type": "module"}, {"lineNumber": 143, "col_offset": 28, "nodeName": "k", "type": "Any"}, {"lineNumber": 147, "col_offset": 28, "nodeName": "k", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 223, "col_offset": 27, "nodeName": "it", "type": "chainer.iterators.multithread_iterator.MultithreadIterator"}, {"lineNumber": 223, "col_offset": 46, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 340, "col_offset": 23, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 340, "col_offset": 32, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 367, "col_offset": 33, "nodeName": "numpy", "type": "module"}, {"lineNumber": 75, "col_offset": 55, "nodeName": "j", "type": "int"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 83, "col_offset": 54, "nodeName": "k", "type": "Any"}, {"lineNumber": 106, "col_offset": 55, "nodeName": "j", "type": "int"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 114, "col_offset": 54, "nodeName": "k", "type": "Any"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "j", "type": "int"}, {"lineNumber": 147, "col_offset": 31, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "j", "type": "int"}, {"lineNumber": 75, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 104, "col_offset": 46, "nodeName": "j", "type": "int"}, {"lineNumber": 106, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 135, "col_offset": 46, "nodeName": "j", "type": "int"}, {"lineNumber": 137, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "dataset", "type": "List[Dict[int, Any]]"}, {"lineNumber": 73, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 135, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 147, "col_offset": 45, "nodeName": "k", "type": "Any"}]