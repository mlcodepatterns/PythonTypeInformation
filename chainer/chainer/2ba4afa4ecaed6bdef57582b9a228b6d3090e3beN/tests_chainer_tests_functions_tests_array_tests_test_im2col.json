[{"lineNumber": 15, "col_offset": 0, "nodeName": "_pair", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "check_forward", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "test_forward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "test_forward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "test_backward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "test_backward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "check_double_backward", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "test_double_backward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "test_double_backward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "in_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "in_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 172, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 16, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 18, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "col_h", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "col_w", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "y", "type": "int"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "in_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "o_H", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "o_W", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "check_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "check_double_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 172, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "copy", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "c", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "h", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "w", "type": "Any"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "get_conv_outsize", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "h", "type": "Any"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "kh", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "sy", "type": "Any"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "ph", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "get_conv_outsize", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "w", "type": "Any"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "kw", "type": "Any"}, {"lineNumber": 50, "col_offset": 40, "nodeName": "sx", "type": "Any"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "pw", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "n", "type": "Any"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "c", "type": "Any"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "kh", "type": "Any"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "kw", "type": "Any"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "col_h", "type": "Any"}, {"lineNumber": 53, "col_offset": 47, "nodeName": "col_w", "type": "Any"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "col", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "col_h", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "x", "type": "int"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "check_forward", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "check_forward", "type": "Any"}, {"lineNumber": 102, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "kh", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "kw", "type": "Any"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "_pair", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "ksize", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "sy", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "sx", "type": "Any"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "_pair", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "stride", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "ph", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "pw", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "_pair", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "pad", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "dy", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "dx", "type": "Any"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "_pair", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "dilate", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "N", "type": "int"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "C", "type": "int"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "H", "type": "int"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "W", "type": "int"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "get_conv_outsize", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "H", "type": "int"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "kh", "type": "Any"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "sy", "type": "Any"}, {"lineNumber": 111, "col_offset": 42, "nodeName": "ph", "type": "Any"}, {"lineNumber": 112, "col_offset": 14, "nodeName": "get_conv_outsize", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "W", "type": "int"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "kw", "type": "Any"}, {"lineNumber": 112, "col_offset": 38, "nodeName": "sx", "type": "Any"}, {"lineNumber": 112, "col_offset": 42, "nodeName": "pw", "type": "Any"}, {"lineNumber": 115, "col_offset": 52, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 117, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "check_backward", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "gy", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "ksize", "type": "Any"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "stride", "type": "Any"}, {"lineNumber": 139, "col_offset": 45, "nodeName": "pad", "type": "Any"}, {"lineNumber": 139, "col_offset": 55, "nodeName": "cover_all", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "dilate", "type": "Any"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "gy", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "check_backward", "type": "Any"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "ksize", "type": "Any"}, {"lineNumber": 145, "col_offset": 45, "nodeName": "stride", "type": "Any"}, {"lineNumber": 145, "col_offset": 58, "nodeName": "pad", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "cover_all", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "dilate", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "check_double_backward", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "gy", "type": "Any"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "check_double_backward", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "ksize", "type": "Any"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "stride", "type": "Any"}, {"lineNumber": 161, "col_offset": 45, "nodeName": "pad", "type": "Any"}, {"lineNumber": 161, "col_offset": 55, "nodeName": "cover_all", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "dilate", "type": "Any"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "gy", "type": "Any"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "check_double_backward", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "ksize", "type": "Any"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "stride", "type": "Any"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "pad", "type": "Any"}, {"lineNumber": 168, "col_offset": 47, "nodeName": "cover_all", "type": "Any"}, {"lineNumber": 168, "col_offset": 63, "nodeName": "dilate", "type": "Any"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "im2col", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 49, "col_offset": 50, "nodeName": "dy", "type": "Any"}, {"lineNumber": 50, "col_offset": 50, "nodeName": "dx", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "col", "type": "Any"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "n", "type": "Any"}, {"lineNumber": 52, "col_offset": 53, "nodeName": "col_h", "type": "Any"}, {"lineNumber": 52, "col_offset": 60, "nodeName": "col_w", "type": "Any"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "col", "type": "Any"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "cuda", "type": "module"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "moves", "type": "module"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "col_w", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "ky", "type": "int"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "params", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "params", "type": "Any"}, {"lineNumber": 102, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 56, "nodeName": "cover_all", "type": "Any"}, {"lineNumber": 111, "col_offset": 74, "nodeName": "dy", "type": "Any"}, {"lineNumber": 112, "col_offset": 56, "nodeName": "cover_all", "type": "Any"}, {"lineNumber": 112, "col_offset": 74, "nodeName": "dx", "type": "Any"}, {"lineNumber": 115, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "im2col", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "ksize", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "float64", "type": "Any"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "check_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 146, "col_offset": 53, "nodeName": "gy", "type": "Any"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "im2col", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "ksize", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 156, "col_offset": 33, "nodeName": "float64", "type": "Any"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "check_double_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "gy", "type": "Any"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 169, "col_offset": 46, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "functions", "type": "module"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "kh", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "kw", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "sy", "type": "Any"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "sx", "type": "Any"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "ph", "type": "Any"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "pw", "type": "Any"}, {"lineNumber": 52, "col_offset": 49, "nodeName": "kw", "type": "Any"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "moves", "type": "module"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "kh", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "kx", "type": "int"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "cuda", "type": "module"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 111, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "check_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "stride", "type": "Any"}, {"lineNumber": 131, "col_offset": 45, "nodeName": "pad", "type": "Any"}, {"lineNumber": 131, "col_offset": 60, "nodeName": "cover_all", "type": "Any"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "dilate", "type": "Any"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "cuda", "type": "module"}, {"lineNumber": 146, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "stride", "type": "Any"}, {"lineNumber": 152, "col_offset": 45, "nodeName": "pad", "type": "Any"}, {"lineNumber": 152, "col_offset": 60, "nodeName": "cover_all", "type": "Any"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "dilate", "type": "Any"}, {"lineNumber": 156, "col_offset": 33, "nodeName": "numpy", "type": "module"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "cuda", "type": "module"}, {"lineNumber": 169, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "in_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 48, "col_offset": 53, "nodeName": "dy", "type": "Any"}, {"lineNumber": 48, "col_offset": 57, "nodeName": "dx", "type": "Any"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "c", "type": "Any"}, {"lineNumber": 52, "col_offset": 44, "nodeName": "kh", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "moves", "type": "module"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "kw", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "oy", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "ox", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "in_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "in_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "moves", "type": "module"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "o_H", "type": "Any"}, {"lineNumber": 115, "col_offset": 39, "nodeName": "o_W", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "ph", "type": "Any"}, {"lineNumber": 60, "col_offset": 43, "nodeName": "ky", "type": "int"}, {"lineNumber": 60, "col_offset": 48, "nodeName": "dy", "type": "Any"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "pw", "type": "Any"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "kx", "type": "int"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "dx", "type": "Any"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "oy", "type": "Any"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "h", "type": "Any"}, {"lineNumber": 62, "col_offset": 48, "nodeName": "ox", "type": "Any"}, {"lineNumber": 62, "col_offset": 53, "nodeName": "w", "type": "Any"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "kw", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "y", "type": "int"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "sy", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "x", "type": "int"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "sx", "type": "Any"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "testing", "type": "module"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "col", "type": "Any"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "testing", "type": "module"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "col", "type": "Any"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 69, "col_offset": 52, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "C", "type": "int"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "kh", "type": "Any"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "numpy", "type": "module"}, {"lineNumber": 69, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 42, "nodeName": "ky", "type": "int"}, {"lineNumber": 64, "col_offset": 46, "nodeName": "kx", "type": "int"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "y", "type": "int"}, {"lineNumber": 64, "col_offset": 53, "nodeName": "x", "type": "int"}, {"lineNumber": 65, "col_offset": 45, "nodeName": "oy", "type": "Any"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "ox", "type": "Any"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "ky", "type": "int"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "kx", "type": "int"}, {"lineNumber": 68, "col_offset": 50, "nodeName": "y", "type": "int"}, {"lineNumber": 68, "col_offset": 53, "nodeName": "x", "type": "int"}]