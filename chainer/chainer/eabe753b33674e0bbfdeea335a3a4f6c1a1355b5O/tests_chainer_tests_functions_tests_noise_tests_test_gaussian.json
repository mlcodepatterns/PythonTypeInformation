[{"lineNumber": 17, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "check_forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "test_forward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "test_forward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "test_backward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "test_backward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "check_double_backward", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "test_double_backward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "test_double_backward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "test_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "test_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 135, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "ggm", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "ggv", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "check_double_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "gaussian", "type": "chainer.functions.noise.gaussian.Gaussian"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "gaussian", "type": "chainer.functions.noise.gaussian.Gaussian"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "eps", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "eps", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "out2", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "eps", "type": "Any"}, {"lineNumber": 135, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 20, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 21, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 22, "col_offset": 65, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 23, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 24, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 29, "col_offset": 51, "nodeName": "float64", "type": "Any"}, {"lineNumber": 30, "col_offset": 58, "nodeName": "float64", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "m_data", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "v_data", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "gaussian", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "m", "type": "Any"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "v", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "check_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "m", "type": "Any"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "v", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "check_forward", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "Gaussian", "type": "Type[chainer.functions.noise.gaussian.Gaussian]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "check_backward", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "y_grad", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "m", "type": "Any"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "v", "type": "Any"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "gy", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "check_backward", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "Gaussian", "type": "Type[chainer.functions.noise.gaussian.Gaussian]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "check_double_backward", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "y_grad", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "check_double_backward", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "m", "type": "Any"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "v", "type": "Any"}, {"lineNumber": 91, "col_offset": 51, "nodeName": "gy", "type": "Any"}, {"lineNumber": 91, "col_offset": 60, "nodeName": "ggm", "type": "Any"}, {"lineNumber": 91, "col_offset": 70, "nodeName": "ggv", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "check_double_backward", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 108, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 109, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 110, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "specify_eps", "type": "Any"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "eps", "type": "Any"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "gaussian", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "m", "type": "Any"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "v", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "out_eps", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "eps", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "gaussian", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "m", "type": "Any"}, {"lineNumber": 121, "col_offset": 42, "nodeName": "v", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 32, "nodeName": "array", "type": "Any"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "array", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "_check", "type": "Callable[[], Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "m", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "v", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "eps", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "_check", "type": "Any"}, {"lineNumber": 20, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 21, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 22, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 23, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 24, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 29, "col_offset": 51, "nodeName": "numpy", "type": "module"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 30, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "m", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "m", "type": "Any"}, {"lineNumber": 46, "col_offset": 48, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 46, "col_offset": 60, "nodeName": "v", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "gaussian", "type": "module"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "eps", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "m_data", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "v_data", "type": "Any"}, {"lineNumber": 66, "col_offset": 43, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "m", "type": "Any"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "v", "type": "Any"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "gy", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "gaussian", "type": "module"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "eps", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "apply", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "m_data", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "v_data", "type": "Any"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "m_grad_grad", "type": "Any"}, {"lineNumber": 87, "col_offset": 55, "nodeName": "v_grad_grad", "type": "Any"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "check_double_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 70, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 95, "col_offset": 47, "nodeName": "m", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 96, "col_offset": 47, "nodeName": "v", "type": "Any"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 97, "col_offset": 47, "nodeName": "gy", "type": "Any"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 98, "col_offset": 47, "nodeName": "ggm", "type": "Any"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "ggv", "type": "Any"}, {"lineNumber": 108, "col_offset": 60, "nodeName": "numpy", "type": "module"}, {"lineNumber": 109, "col_offset": 60, "nodeName": "numpy", "type": "module"}, {"lineNumber": 110, "col_offset": 62, "nodeName": "numpy", "type": "module"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "functions", "type": "module"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 32, "nodeName": "eps", "type": "Any"}, {"lineNumber": 116, "col_offset": 35, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "array", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "out_eps", "type": "Any"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "eps", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 54, "nodeName": "out_eps", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 122, "col_offset": 32, "nodeName": "out", "type": "Any"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "out2", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "cuda", "type": "module"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "cuda", "type": "module"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "cuda", "type": "module"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 20, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 21, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 22, "col_offset": 46, "nodeName": "shape", "type": "Any"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 23, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 24, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "cuda", "type": "module"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 48, "nodeName": "cuda", "type": "module"}, {"lineNumber": 46, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "noise", "type": "module"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "eps", "type": "Any"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 61, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "gaussian", "type": "chainer.functions.noise.gaussian.Gaussian"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "astype", "type": "Any"}, {"lineNumber": 62, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "apply", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "cuda", "type": "module"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "cuda", "type": "module"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "cuda", "type": "module"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "noise", "type": "module"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "eps", "type": "Any"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 82, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "gaussian", "type": "chainer.functions.noise.gaussian.Gaussian"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "astype", "type": "Any"}, {"lineNumber": 83, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "gaussian", "type": "chainer.functions.noise.gaussian.Gaussian"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "m", "type": "Any"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "v", "type": "Any"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 95, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 96, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 97, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 98, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "out", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "out_eps", "type": "Any"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "array", "type": "Any"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 20, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 21, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 22, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 23, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 24, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "gaussian", "type": "chainer.functions.noise.gaussian.Gaussian"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "eps", "type": "Any"}, {"lineNumber": 61, "col_offset": 66, "nodeName": "m", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "eps", "type": "Any"}, {"lineNumber": 62, "col_offset": 51, "nodeName": "m", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "gaussian", "type": "chainer.functions.noise.gaussian.Gaussian"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "m", "type": "Any"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "v", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "gaussian", "type": "chainer.functions.noise.gaussian.Gaussian"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "eps", "type": "Any"}, {"lineNumber": 82, "col_offset": 66, "nodeName": "m", "type": "Any"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "eps", "type": "Any"}, {"lineNumber": 83, "col_offset": 51, "nodeName": "m", "type": "Any"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "out", "type": "Any"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "gaussian", "type": "chainer.functions.noise.gaussian.Gaussian"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "gaussian", "type": "chainer.functions.noise.gaussian.Gaussian"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "gaussian", "type": "chainer.functions.noise.gaussian.Gaussian"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "gaussian", "type": "chainer.functions.noise.gaussian.Gaussian"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "numpy", "type": "module"}]