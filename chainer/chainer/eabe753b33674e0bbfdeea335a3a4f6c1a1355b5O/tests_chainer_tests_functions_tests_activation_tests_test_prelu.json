[{"lineNumber": 19, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "check_forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "test_forward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "test_forward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "test_backward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "test_backward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "check_double_backward", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "test_double_backward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "test_double_backward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "y_expect", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "masked", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[int, ...], Tuple[Any, ...]]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "masked", "type": "Any"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 23, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 26, "col_offset": 55, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 27, "col_offset": 65, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 28, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 30, "col_offset": 40, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 48, "nodeName": "float64", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "float64", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "W_data", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "prelu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "W", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "copy", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "masked_greater_equal", "type": "Any"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "y_expect", "type": "Any"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "shape", "type": "Union[Tuple[int, ...], Tuple[Any, ...]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "y_expect", "type": "Any"}, {"lineNumber": 52, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "check_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "W", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "check_forward", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "check_backward", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "prelu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 63, "col_offset": 47, "nodeName": "y_grad", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "W", "type": "Any"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "gy", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "check_backward", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "check_double_backward", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "prelu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 47, "nodeName": "y_grad", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "check_double_backward", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 82, "col_offset": 43, "nodeName": "W", "type": "Any"}, {"lineNumber": 82, "col_offset": 51, "nodeName": "gy", "type": "Any"}, {"lineNumber": 82, "col_offset": 60, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 82, "col_offset": 70, "nodeName": "ggW", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "check_double_backward", "type": "Any"}, {"lineNumber": 23, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 26, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 30, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "numpy", "type": "module"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "ma", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "W", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 52, "col_offset": 42, "nodeName": "y", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 59, "col_offset": 60, "nodeName": "W", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "W_data", "type": "Any"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 71, "col_offset": 61, "nodeName": "W", "type": "Any"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 72, "col_offset": 40, "nodeName": "gy", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "W_data", "type": "Any"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "x_grad_grad", "type": "Any"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "W_grad_grad", "type": "Any"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "check_double_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 70, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 86, "col_offset": 56, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 86, "col_offset": 68, "nodeName": "W", "type": "Any"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 87, "col_offset": 47, "nodeName": "gy", "type": "Any"}, {"lineNumber": 87, "col_offset": 57, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 87, "col_offset": 69, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 88, "col_offset": 47, "nodeName": "ggW", "type": "Any"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 23, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 27, "col_offset": 46, "nodeName": "shape", "type": "Any"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 28, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "W", "type": "Any"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "cuda", "type": "module"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "cuda", "type": "module"}, {"lineNumber": 59, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "cuda", "type": "module"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "cuda", "type": "module"}, {"lineNumber": 71, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "cuda", "type": "module"}, {"lineNumber": 72, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 56, "nodeName": "cuda", "type": "module"}, {"lineNumber": 86, "col_offset": 68, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 87, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 57, "nodeName": "cuda", "type": "module"}, {"lineNumber": 87, "col_offset": 69, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 88, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 23, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 24, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 27, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 28, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "W", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 50, "col_offset": 50, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 24, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 50, "col_offset": 50, "nodeName": "W", "type": "Any"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "Wdim", "type": "Any"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "self", "type": "Any"}]