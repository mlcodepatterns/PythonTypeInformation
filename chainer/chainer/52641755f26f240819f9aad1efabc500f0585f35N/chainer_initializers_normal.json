[{"lineNumber": 11, "col_offset": 13, "nodeName": "Initializer", "type": "Type[chainer.initializer.Initializer]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "Initializer", "type": "Type[chainer.initializer.Initializer]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "Initializer", "type": "Type[chainer.initializer.Initializer]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "Initializer", "type": "Type[chainer.initializer.Initializer]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 11, "col_offset": 13, "nodeName": "initializer", "type": "module"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "initializer", "type": "module"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "initializer", "type": "module"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "initializer", "type": "module"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "args", "type": "Dict[str, Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "fan_option", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "fan_option", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "Normal"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "dtype", "type": "None"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 38, "nodeName": "array", "type": "Any"}, {"lineNumber": 31, "col_offset": 37, "nodeName": "scale", "type": "Any"}, {"lineNumber": 31, "col_offset": 57, "nodeName": "shape", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "xp", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "normal", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "LeCunNormal"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 42, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "fan_out", "type": "Any"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "get_fans", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "array", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "GlorotNormal"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "fan_out", "type": "Any"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "get_fans", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "array", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "HeNormal"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "HeNormal"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "fan_out", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "get_fans", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 136, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "fan_option", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "array", "type": "Any"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 31, "col_offset": 37, "nodeName": "self", "type": "Normal"}, {"lineNumber": 31, "col_offset": 57, "nodeName": "array", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "cuda", "type": "module"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 37, "col_offset": 40, "nodeName": "args", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "self", "type": "LeCunNormal"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "initializer", "type": "module"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "array", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "self", "type": "LeCunNormal"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "Normal", "type": "Type[Normal]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "self", "type": "GlorotNormal"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 98, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "initializer", "type": "module"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "array", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "self", "type": "GlorotNormal"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "Normal", "type": "Type[Normal]"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "self", "type": "HeNormal"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "initializer", "type": "module"}, {"lineNumber": 136, "col_offset": 47, "nodeName": "array", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "self", "type": "HeNormal"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "scale", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "fan_option", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "Normal", "type": "Type[Normal]"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "Normal", "type": "Type[Normal]"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "self", "type": "Normal"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "float32", "type": "Any"}, {"lineNumber": 34, "col_offset": 46, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 34, "col_offset": 60, "nodeName": "float16", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "args", "type": "Dict[str, Any]"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "numpy", "type": "module"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "xp", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "LeCunNormal", "type": "Type[LeCunNormal]"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "self", "type": "LeCunNormal"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "self", "type": "LeCunNormal"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "GlorotNormal", "type": "Type[GlorotNormal]"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "self", "type": "GlorotNormal"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 98, "col_offset": 34, "nodeName": "self", "type": "GlorotNormal"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 131, "col_offset": 14, "nodeName": "HeNormal", "type": "Type[HeNormal]"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "self", "type": "HeNormal"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "self", "type": "HeNormal"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "self", "type": "HeNormal"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "self", "type": "HeNormal"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "scale", "type": "Any"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "self", "type": "Normal"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 34, "col_offset": 46, "nodeName": "self", "type": "Normal"}, {"lineNumber": 34, "col_offset": 60, "nodeName": "numpy", "type": "module"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 100, "col_offset": 51, "nodeName": "fan_out", "type": "Any"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 138, "col_offset": 45, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "self", "type": "HeNormal"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 140, "col_offset": 45, "nodeName": "fan_out", "type": "Any"}]