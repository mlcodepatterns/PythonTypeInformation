[{"lineNumber": 28, "col_offset": 17, "nodeName": "Link", "type": "Type[chainer.link.Link]"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "eta", "type": "float"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "num_params", "type": "int"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "target", "type": "SimpleLink"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "target", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "devices", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "noise_value", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "expects", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "noise", "type": "mock.Mock"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "opt", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "hook", "type": "chainer.optimizer_hooks.gradient_noise.GradientNoise"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "calls", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "arr", "type": "nothing"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "arrs", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "grads", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "SimpleLink", "type": "Type[SimpleLink]"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "device", "type": "Any"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "noise_value", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "device", "type": "Any"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 71, "col_offset": 50, "nodeName": "devices", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "SGD", "type": "Type[chainer.optimizers.sgd.SGD]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "target", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "GradientNoise", "type": "Type[chainer.optimizer_hooks.gradient_noise.GradientNoise]"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "eta", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "hook", "type": "chainer.optimizer_hooks.gradient_noise.GradientNoise"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "expect", "type": "Any"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "param", "type": "Any"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "expects", "type": "List[Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "call_count", "type": "int"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "num_params", "type": "Any"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "params", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "xp", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "check_gradient_noise", "type": "Any"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "init_scope", "type": "Callable[..., contextlib._GeneratorContextManager[None]]"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "p", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "params", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "arr", "type": "nothing"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "param", "type": "Any"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "backend_configs", "type": "Any"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "bc", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "bc", "type": "Any"}, {"lineNumber": 67, "col_offset": 39, "nodeName": "backend_configs", "type": "Any"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "params", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "device", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "noise_value", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "mock", "type": "module"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "test_noise", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "optimizers", "type": "module"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "opt", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "optimizer_hooks", "type": "module"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 66, "nodeName": "noise", "type": "mock.Mock"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "opt", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "opt", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "params", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "expect", "type": "Any"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "array", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "noise", "type": "mock.Mock"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "target", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "device", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "backend_config0", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "backend_config1", "type": "Any"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "backend_config2", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "SimpleLink", "type": "Type[SimpleLink]"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "self", "type": "SimpleLink"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "self", "type": "SimpleLink"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "self", "type": "SimpleLink"}, {"lineNumber": 34, "col_offset": 47, "nodeName": "p", "type": "Any"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "num_params", "type": "int"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "num_params", "type": "int"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "chainer", "type": "module"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "normal", "type": "Any"}, {"lineNumber": 66, "col_offset": 43, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "target", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "expects", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 54, "nodeName": "noise_value", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "xp", "type": "Any"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "target", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "testing", "type": "module"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "param", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "param", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "calls", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "call", "type": "Any"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "xp", "type": "Any"}, {"lineNumber": 95, "col_offset": 68, "nodeName": "hook", "type": "chainer.optimizer_hooks.gradient_noise.GradientNoise"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "permuted_calls", "type": "Tuple[Any, ...]"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 34, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "params", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "array", "type": "Any"}, {"lineNumber": 72, "col_offset": 41, "nodeName": "grad", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "mock", "type": "module"}, {"lineNumber": 95, "col_offset": 47, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "param", "type": "Any"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "permutations", "type": "Callable"}, {"lineNumber": 100, "col_offset": 65, "nodeName": "calls", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "target", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "param", "type": "Any"}, {"lineNumber": 72, "col_offset": 41, "nodeName": "param", "type": "Any"}, {"lineNumber": 95, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "itertools", "type": "module"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "eta", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "power", "type": "Any"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "np", "type": "module"}]