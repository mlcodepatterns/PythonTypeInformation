[{"lineNumber": 21, "col_offset": 0, "nodeName": "_get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "_array_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 8, "col_offset": 16, "nodeName": "Device", "type": "Type[chainer.backend.Device]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "xp", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "__eq__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "send_array", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 8, "col_offset": 16, "nodeName": "backend", "type": "module"}, {"lineNumber": 12, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 22, "col_offset": 7, "nodeName": "device_spec", "type": "Any"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "_convert_arrays", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 29, "col_offset": 42, "nodeName": "_array_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "array", "type": "Any"}, {"lineNumber": 35, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "array", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "array", "type": "Any"}, {"lineNumber": 37, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "array", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "mdarray", "type": "Any"}, {"lineNumber": 39, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "array", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "ndarray", "type": "Type[chainerx.ndarray]"}, {"lineNumber": 41, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "array", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 44, "col_offset": 7, "nodeName": "isscalar", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "array", "type": "Any"}, {"lineNumber": 46, "col_offset": 10, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 15, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 15, "col_offset": 33, "nodeName": "CpuDevice", "type": "Type[CpuDevice]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "_array_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "array", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "CpuDevice", "type": "Type[CpuDevice]"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "backend", "type": "module"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "intel64", "type": "module"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "array", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "array", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "cuda", "type": "module"}, {"lineNumber": 44, "col_offset": 7, "nodeName": "numpy", "type": "module"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "array", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "backends", "type": "module"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "backends", "type": "module"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "get_device_from_array", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 49, "nodeName": "array", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 48, "col_offset": 37, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "array", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "cuda", "type": "module"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "backends", "type": "module"}]