[{"lineNumber": 35, "col_offset": 27, "nodeName": "FunctionTestCase", "type": "Type[chainer.testing.function.FunctionTestCase]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "generate_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "forward_expected", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "test_call_cudnn_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "test_call_cudnn_backward", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "testing", "type": "module"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 99, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "output_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "gy", "type": "Any"}, {"lineNumber": 99, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "check_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 45, "col_offset": 61, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "empty", "type": "Any"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "output_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "c", "type": "int"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 75, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "average_pooling_2d", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "expect", "type": "bool"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 61, "nodeName": "func", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "average_pooling_2d", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 49, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "moves", "type": "module"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "xx", "type": "Any"}, {"lineNumber": 75, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 82, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 83, "col_offset": 64, "nodeName": "func", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "should_use_cudnn", "type": "Callable[..., bool]"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "forward", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "patch", "type": "Callable[..., mock._patch]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "called", "type": "Any"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "expect", "type": "bool"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 54, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "six", "type": "module"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "moves", "type": "module"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 82, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "patch", "type": "Callable[..., mock._patch]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "forward", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "called", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "chainer", "type": "module"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "testing", "type": "module"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "func", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "six", "type": "module"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "testing", "type": "module"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "func", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "should_use_cudnn", "type": "Callable[..., bool]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "k", "type": "int"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "c", "type": "int"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "numpy", "type": "module"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "cuda", "type": "module"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "chainer", "type": "module"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "cuda", "type": "module"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "sum", "type": "Any"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "sum", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "sum", "type": "Any"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "sum", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "xx", "type": "Any"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "xx", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "xx", "type": "Any"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "xx", "type": "Any"}]