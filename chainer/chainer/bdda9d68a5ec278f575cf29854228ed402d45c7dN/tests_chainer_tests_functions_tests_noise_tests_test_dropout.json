[{"lineNumber": 32, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 219, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "grad_outputs", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "grad_grad_inputs", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "check_double_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "dropout", "type": "chainer.functions.noise.dropout.Dropout"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "dropout", "type": "chainer.functions.noise.dropout.Dropout"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "mask", "type": "Optional[Any]"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "train", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 219, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 36, "col_offset": 55, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 37, "col_offset": 56, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "astype", "type": "Any"}, {"lineNumber": 38, "col_offset": 57, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "gy", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "float64", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 55, "nodeName": "float64", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "ratio", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "mask", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "check_forward", "type": "Any"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 83, "col_offset": 40, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "Dropout", "type": "Type[chainer.functions.noise.dropout.Dropout]"}, {"lineNumber": 92, "col_offset": 50, "nodeName": "ratio", "type": "Any"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "check_backward", "type": "Any"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 102, "col_offset": 60, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 113, "col_offset": 18, "nodeName": "Dropout", "type": "Type[chainer.functions.noise.dropout.Dropout]"}, {"lineNumber": 113, "col_offset": 50, "nodeName": "ratio", "type": "Any"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "check_double_backward", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 125, "col_offset": 44, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "dropout", "type": "chainer.functions.noise.dropout.Dropout"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 136, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "check_immutable", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 139, "col_offset": 42, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 159, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "astype", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "float32", "type": "Any"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "specify_mask", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "mask", "type": "Any"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 166, "col_offset": 56, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "out2", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 32, "nodeName": "array", "type": "Any"}, {"lineNumber": 181, "col_offset": 43, "nodeName": "array", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "_check", "type": "Any"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 196, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 197, "col_offset": 65, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "dropout", "type": "Callable[..., Any]"}, {"lineNumber": 200, "col_offset": 59, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 212, "col_offset": 21, "nodeName": "gy", "type": "Any"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 45, "col_offset": 55, "nodeName": "numpy", "type": "module"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "float64", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "float64", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "mask", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "dropout", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "ratio", "type": "Any"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "creator", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "forward_cpu", "type": "Any"}, {"lineNumber": 77, "col_offset": 43, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 77, "col_offset": 51, "nodeName": "ratio", "type": "Any"}, {"lineNumber": 77, "col_offset": 63, "nodeName": "mask", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 80, "col_offset": 48, "nodeName": "data", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "dropout", "type": "module"}, {"lineNumber": 92, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "apply", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "check_backward", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 113, "col_offset": 18, "nodeName": "dropout", "type": "module"}, {"lineNumber": 113, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "apply", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "check_double_backward", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "Dropout", "type": "Type[chainer.functions.noise.dropout.Dropout]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "y1", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "apply", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "y2", "type": "Any"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "apply", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "y1", "type": "Any"}, {"lineNumber": 136, "col_offset": 41, "nodeName": "y2", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 60, "nodeName": "numpy", "type": "module"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 165, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 165, "col_offset": 52, "nodeName": "mask", "type": "Optional[Any]"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 166, "col_offset": 43, "nodeName": "train", "type": "Any"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "dropout", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 171, "col_offset": 30, "nodeName": "out_mask", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "out_mask", "type": "Any"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 179, "col_offset": 43, "nodeName": "train", "type": "Any"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "dropout", "type": "Callable[..., Any]"}, {"lineNumber": 180, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 181, "col_offset": 32, "nodeName": "out", "type": "Any"}, {"lineNumber": 181, "col_offset": 43, "nodeName": "out2", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 200, "col_offset": 33, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 200, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 200, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 203, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 203, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 205, "col_offset": 73, "nodeName": "func", "type": "Any"}, {"lineNumber": 210, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 210, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "forward", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 212, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 214, "col_offset": 73, "nodeName": "func", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "cuda", "type": "module"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "functions", "type": "module"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 70, "col_offset": 52, "nodeName": "data", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "testing", "type": "module"}, {"lineNumber": 80, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "cuda", "type": "module"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "cuda", "type": "module"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "noise", "type": "module"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "dropout", "type": "chainer.functions.noise.dropout.Dropout"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 99, "col_offset": 43, "nodeName": "check_backward_options", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "cuda", "type": "module"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "cuda", "type": "module"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "cuda", "type": "module"}, {"lineNumber": 113, "col_offset": 18, "nodeName": "noise", "type": "module"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "dropout", "type": "chainer.functions.noise.dropout.Dropout"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "check_double_backward_options", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "cuda", "type": "module"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "dropout", "type": "module"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "dropout", "type": "chainer.functions.noise.dropout.Dropout"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "dropout", "type": "chainer.functions.noise.dropout.Dropout"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 165, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 166, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "functions", "type": "module"}, {"lineNumber": 168, "col_offset": 29, "nodeName": "mask", "type": "Any"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 171, "col_offset": 45, "nodeName": "array", "type": "Any"}, {"lineNumber": 173, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 173, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "out_mask", "type": "Any"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "mask", "type": "Any"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 179, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 180, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 200, "col_offset": 33, "nodeName": "chainer", "type": "module"}, {"lineNumber": 200, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 203, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 203, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "patch", "type": "Callable[..., mock._patch]"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "forward", "type": "Any"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "called", "type": "Any"}, {"lineNumber": 210, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 210, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "patch", "type": "Callable[..., mock._patch]"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "backward", "type": "Any"}, {"lineNumber": 216, "col_offset": 23, "nodeName": "called", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "testing", "type": "module"}, {"lineNumber": 70, "col_offset": 52, "nodeName": "y", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "all", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "functions", "type": "module"}, {"lineNumber": 99, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 18, "nodeName": "functions", "type": "module"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "noise", "type": "module"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 171, "col_offset": 45, "nodeName": "out", "type": "Any"}, {"lineNumber": 173, "col_offset": 23, "nodeName": "out_mask", "type": "Any"}, {"lineNumber": 173, "col_offset": 41, "nodeName": "array", "type": "Any"}, {"lineNumber": 180, "col_offset": 55, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 180, "col_offset": 67, "nodeName": "out_mask", "type": "Any"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "testing", "type": "module"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "func", "type": "Any"}, {"lineNumber": 207, "col_offset": 39, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "testing", "type": "module"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 216, "col_offset": 23, "nodeName": "func", "type": "Any"}, {"lineNumber": 216, "col_offset": 39, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 65, "col_offset": 46, "nodeName": "ratio", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 72, "col_offset": 59, "nodeName": "data", "type": "Any"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "functions", "type": "module"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 173, "col_offset": 41, "nodeName": "out", "type": "Any"}, {"lineNumber": 180, "col_offset": 55, "nodeName": "cuda", "type": "module"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 207, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 216, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "cuda", "type": "module"}, {"lineNumber": 72, "col_offset": 46, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 72, "col_offset": 59, "nodeName": "y", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "numpy", "type": "module"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "cuda", "type": "module"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "cuda", "type": "module"}]