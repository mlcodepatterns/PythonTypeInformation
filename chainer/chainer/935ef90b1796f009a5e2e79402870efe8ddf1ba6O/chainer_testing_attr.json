[{"lineNumber": 12, "col_offset": 0, "nodeName": "is_available", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "check_available", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "get_error", "type": "Callable[[], Any]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "multi_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "_dummy_callable", "type": "Callable[..., Any]"}, {"lineNumber": 7, "col_offset": 4, "nodeName": "_error", "type": "None"}, {"lineNumber": 8, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "_error", "type": "Any"}, {"lineNumber": 28, "col_offset": 3, "nodeName": "_error", "type": "Optional[ImportError]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "_gpu_limit", "type": "int"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "chainerx", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "chainerx", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "ideep", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "ideep", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "slow", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "slow", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "chainerx", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "_dummy_callable", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "cudnn", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "_dummy_callable", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "ideep", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "_dummy_callable", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "slow", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "_dummy_callable", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "deco", "type": "Callable[[Any], Any]"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "_error", "type": "ImportError"}, {"lineNumber": 9, "col_offset": 13, "nodeName": "e", "type": "ImportError"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "_error", "type": "Any"}, {"lineNumber": 17, "col_offset": 7, "nodeName": "_error", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "mark", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "mark", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "mark", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "mark", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "check_available", "type": "Callable[[], Any]"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "f", "type": "Any"}, {"lineNumber": 18, "col_offset": 14, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "check_available", "type": "Callable[[], Any]"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "multi_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": -1, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "__name__", "type": "str"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 21, "col_offset": 58, "nodeName": "_error", "type": "Any"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "skipIf", "type": "Callable[[Any, Union[str, unicode]], Any]"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "f", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "_gpu_limit", "type": "int"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "gpu_num", "type": "int"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "mark", "type": "Any"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 21, "col_offset": 40, "nodeName": "_error", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "gpu_num", "type": "int"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "pytest", "type": "Any"}]