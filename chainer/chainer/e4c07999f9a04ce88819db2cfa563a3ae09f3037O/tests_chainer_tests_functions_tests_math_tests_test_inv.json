[{"lineNumber": 13, "col_offset": 0, "nodeName": "_inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "_make_eye", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "FunctionTestCase", "type": "Type[chainer.testing.function_link.FunctionTestCase]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "generate_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "forward_expected", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "test_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "FunctionTestCase", "type": "Type[chainer.testing.function_link.FunctionTestCase]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "generate_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "forward_expected", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "test_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "test_invalid_ndim", "type": "Callable[[Any], Any]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "test_invalid_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "test_singular_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "test_singular_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "test_invalid_ndim", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "test_invalid_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "test_singular_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "test_singular_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "n", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "testing", "type": "module"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "testing", "type": "module"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 179, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 210, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 210, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 210, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 14, "col_offset": 7, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "x1", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "x1", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 210, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 14, "col_offset": 7, "nodeName": "x", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "inv", "type": "Any"}, {"lineNumber": 15, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 20, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "shape", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "eye", "type": "Any"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 25, "col_offset": 61, "nodeName": "m", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "check_forward_dtype", "type": "Any"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "check_forward_dtype", "type": "Any"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 68, "col_offset": 67, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "check_forward_dtype", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "generate_inputs", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "matmul", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "check_forward_dtype", "type": "Any"}, {"lineNumber": 114, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "check_forward_dtype", "type": "Any"}, {"lineNumber": 120, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 128, "col_offset": 67, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "check_forward_dtype", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "generate_inputs", "type": "Callable[[], Any]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "matmul", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "inv", "type": "Any"}, {"lineNumber": 16, "col_offset": 41, "nodeName": "ix", "type": "Any"}, {"lineNumber": 16, "col_offset": 49, "nodeName": "ix", "type": "Any"}, {"lineNumber": 16, "col_offset": 55, "nodeName": "x", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "numpy", "type": "module"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 68, "col_offset": 67, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 82, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 46, "nodeName": "x", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "_make_eye", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 85, "col_offset": 42, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 39, "nodeName": "numpy", "type": "module"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 128, "col_offset": 67, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "batch_inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 142, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 143, "col_offset": 32, "nodeName": "batch_inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "_make_eye", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 145, "col_offset": 42, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "InvalidType", "type": "Type[chainer.utils.type_check.InvalidType]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 156, "col_offset": 29, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "InvalidType", "type": "Type[chainer.utils.type_check.InvalidType]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 162, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 183, "col_offset": 31, "nodeName": "InvalidType", "type": "Type[chainer.utils.type_check.InvalidType]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "batch_inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 188, "col_offset": 31, "nodeName": "InvalidType", "type": "Type[chainer.utils.type_check.InvalidType]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "batch_inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "batch_inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "batch_inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 203, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 205, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "eye", "type": "Any"}, {"lineNumber": 25, "col_offset": 34, "nodeName": "n", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "check_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "check_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "functions", "type": "module"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 85, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "check_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "check_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 143, "col_offset": 32, "nodeName": "functions", "type": "module"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 145, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 151, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "self", "type": "InvFunctionRaiseTest"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "type_check", "type": "module"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 156, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 156, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "self", "type": "InvFunctionRaiseTest"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "type_check", "type": "module"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 161, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "self", "type": "InvFunctionRaiseTest"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 182, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "self", "type": "BatchInvFunctionRaiseTest"}, {"lineNumber": 183, "col_offset": 31, "nodeName": "type_check", "type": "module"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 187, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "self", "type": "BatchInvFunctionRaiseTest"}, {"lineNumber": 188, "col_offset": 31, "nodeName": "type_check", "type": "module"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 192, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "self", "type": "BatchInvFunctionRaiseTest"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 205, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 206, "col_offset": 17, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 206, "col_offset": 35, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "batch_inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "numpy", "type": "module"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "numpy", "type": "module"}, {"lineNumber": 25, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "eye", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 68, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "_inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "x1", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "eye", "type": "Any"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 128, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "_inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "x1", "type": "Any"}, {"lineNumber": 151, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 156, "col_offset": 55, "nodeName": "numpy", "type": "module"}, {"lineNumber": 161, "col_offset": 55, "nodeName": "numpy", "type": "module"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "numpy", "type": "module"}, {"lineNumber": 168, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "functions", "type": "module"}, {"lineNumber": 182, "col_offset": 55, "nodeName": "numpy", "type": "module"}, {"lineNumber": 187, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 192, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "numpy", "type": "module"}, {"lineNumber": 199, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 206, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "functions", "type": "module"}, {"lineNumber": 25, "col_offset": 43, "nodeName": "numpy", "type": "module"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 68, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 128, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 50, "nodeName": "numpy", "type": "module"}, {"lineNumber": 199, "col_offset": 53, "nodeName": "numpy", "type": "module"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "numpy", "type": "module"}]