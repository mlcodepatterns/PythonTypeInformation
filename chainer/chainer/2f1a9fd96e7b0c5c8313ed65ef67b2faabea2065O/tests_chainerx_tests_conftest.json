[{"lineNumber": 8, "col_offset": 0, "nodeName": "pytest_configure", "type": "Callable[[Any], Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "pytest_runtest_setup", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "pytest_runtest_teardown", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "pytest_generate_tests", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "_register_cuda_marker", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "_setup_cuda_marker", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "_get_required_cuda_devices_from_device_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "_skip_if_no_cuda_device_available", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "device", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 0, "nodeName": "device_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 0, "nodeName": "dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 0, "nodeName": "float_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "signed_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 0, "nodeName": "numeric_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "is_module", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 0, "nodeName": "shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 0, "nodeName": "shape_as_sequence_or_int", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "current_device", "type": "Any"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "marker", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "cuda_marker", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 7, "nodeName": "cuda_marker", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "device_name", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "param", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "device", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "device_scope", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "device", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "device_name", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "param", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "device_name", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "_register_cuda_marker", "type": "Callable[[Any], Any]"}, {"lineNumber": 9, "col_offset": 26, "nodeName": "config", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "_setup_cuda_marker", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 23, "nodeName": "item", "type": "Any"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "get_current_device", "type": "Any"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "marker", "type": "List[Any]"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "args", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "fixture_name", "type": "str"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "addinivalue_line", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "m", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "cuda_marker", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "required_num", "type": "Union[Any, int]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "split", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "_get_required_cuda_devices_from_device_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "device_name", "type": "Any"}, {"lineNumber": 76, "col_offset": 7, "nodeName": "cuda_device_count", "type": "int"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "request", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "_skip_if_no_cuda_device_available", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "device_name", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "get_device", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "device_name", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "using_device", "type": "Any"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "device", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "addfinalizer", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "finalize", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "__enter__", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "request", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "_skip_if_no_cuda_device_available", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "device_name", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "cuda_utils", "type": "Any"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "current_device", "type": "Any"}, {"lineNumber": 18, "col_offset": 37, "nodeName": "current_device", "type": "Any"}, {"lineNumber": 25, "col_offset": 14, "nodeName": "m", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "marker", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "device_names", "type": "Any"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "marker", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "device_fixtures", "type": "Dict[str, str]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "parametrize", "type": "Any"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "fixture_name", "type": "str"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "device_names", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "cuda_marker", "type": "Any"}, {"lineNumber": 57, "col_offset": 46, "nodeName": "args", "type": "Any"}, {"lineNumber": 58, "col_offset": 41, "nodeName": "required_num", "type": "Union[Any, int]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "device_name", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 67, "col_offset": 7, "nodeName": "s", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "get_cuda_limit", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "skip", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "__exit__", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "request", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "device_scope", "type": "Any"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "iter_markers", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "name", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "iter_markers", "type": "Any"}, {"lineNumber": 54, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 57, "col_offset": 46, "nodeName": "cuda_marker", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "get_cuda_limit", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "skip", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "cuda_utils", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "device_scope", "type": "Any"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "definition", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "m", "type": "Any"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "marker", "type": "Any"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "item", "type": "Any"}, {"lineNumber": 54, "col_offset": 53, "nodeName": "m", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "cuda_marker", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "cuda_utils", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 59, "col_offset": 57, "nodeName": "required_num", "type": "Union[Any, int]"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "metafunc", "type": "Any"}]