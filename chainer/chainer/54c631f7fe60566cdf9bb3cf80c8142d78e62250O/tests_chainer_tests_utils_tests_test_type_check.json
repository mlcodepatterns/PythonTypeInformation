[{"lineNumber": 14, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 237, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 251, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 279, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 309, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 330, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 353, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 364, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 402, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 237, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 251, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 279, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 309, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 330, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 353, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 364, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 402, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 411, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 411, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 411, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Constant"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "x", "type": "Object"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "value", "type": "chainer.utils.type_check.GetAttr"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "value2", "type": "chainer.utils.type_check.GetAttr"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "value3", "type": "chainer.utils.type_check.GetAttr"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "v1", "type": "chainer.utils.type_check.GetItem"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "v2", "type": "chainer.utils.type_check.GetItem"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "f", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "c1", "type": "chainer.utils.type_check.Call"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "c2", "type": "chainer.utils.type_check.Call"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "c3", "type": "chainer.utils.type_check.Call"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "op1", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "op2", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "op3", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "op4", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "op5", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "op6", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "op1", "type": "chainer.utils.type_check.UnaryOperator"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "op2", "type": "chainer.utils.type_check.UnaryOperator"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "ts", "type": "chainer.utils.type_check.TypeInfoTuple"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "data", "type": "Tuple[Any]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "ts", "type": "chainer.utils.type_check.TypeInfoTuple"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "t", "type": "nothing"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "z", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "op1", "type": "chainer.utils.type_check.BoolBinaryOperator"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "op2", "type": "chainer.utils.type_check.BoolBinaryOperator"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "t", "type": "chainer.utils.type_check.Constant"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "z", "type": "numpy.ndarray"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "z", "type": "numpy.ndarray"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "exc", "type": "chainer.utils.type_check.InvalidType"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "new", "type": "Any"}, {"lineNumber": 411, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "TestConstant"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestVariable"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "Object"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "Object", "type": "Type[Object]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "GetAttr", "type": "Type[chainer.utils.type_check.GetAttr]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "GetAttr", "type": "Type[chainer.utils.type_check.GetAttr]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "GetAttr", "type": "Type[chainer.utils.type_check.GetAttr]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "GetItem", "type": "Type[chainer.utils.type_check.GetItem]"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "GetItem", "type": "Type[chainer.utils.type_check.GetItem]"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "Call", "type": "Type[chainer.utils.type_check.Call]"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "f", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "f", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "Call", "type": "Type[chainer.utils.type_check.Call]"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "f", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "BinaryOperator", "type": "Type[chainer.utils.type_check.BinaryOperator]"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 121, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 121, "col_offset": 50, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "BinaryOperator", "type": "Type[chainer.utils.type_check.BinaryOperator]"}, {"lineNumber": 122, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 122, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 122, "col_offset": 50, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "BinaryOperator", "type": "Type[chainer.utils.type_check.BinaryOperator]"}, {"lineNumber": 123, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 123, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 123, "col_offset": 50, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "BinaryOperator", "type": "Type[chainer.utils.type_check.BinaryOperator]"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 125, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 125, "col_offset": 50, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "BinaryOperator", "type": "Type[chainer.utils.type_check.BinaryOperator]"}, {"lineNumber": 126, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 126, "col_offset": 50, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "BinaryOperator", "type": "Type[chainer.utils.type_check.BinaryOperator]"}, {"lineNumber": 127, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 127, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 127, "col_offset": 50, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TestUnaryOperator"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "UnaryOperator", "type": "Type[chainer.utils.type_check.UnaryOperator]"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 149, "col_offset": 46, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestUnaryOperator"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "UnaryOperator", "type": "Type[chainer.utils.type_check.UnaryOperator]"}, {"lineNumber": 150, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 150, "col_offset": 46, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "TestDivOperator"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "TestDivOperator"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 254, "col_offset": 13, "nodeName": "get_types", "type": "Callable[[Any, Any, Any], chainer.utils.type_check.TypeInfoTuple]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 255, "col_offset": 30, "nodeName": "ts", "type": "chainer.utils.type_check.TypeInfoTuple"}, {"lineNumber": 255, "col_offset": 34, "nodeName": "TypeInfoTuple", "type": "Type[chainer.utils.type_check.TypeInfoTuple]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 257, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 261, "col_offset": 13, "nodeName": "get_types", "type": "Callable[[Any, Any, Any], chainer.utils.type_check.TypeInfoTuple]"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "data", "type": "Tuple[Any]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 262, "col_offset": 30, "nodeName": "ts", "type": "chainer.utils.type_check.TypeInfoTuple"}, {"lineNumber": 262, "col_offset": 34, "nodeName": "TypeInfoTuple", "type": "Type[chainer.utils.type_check.TypeInfoTuple]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 264, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "ts", "type": "chainer.utils.type_check.TypeInfoTuple"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 267, "col_offset": 30, "nodeName": "t", "type": "nothing"}, {"lineNumber": 267, "col_offset": 33, "nodeName": "Expr", "type": "Type[chainer.utils.type_check.Expr]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 288, "col_offset": 19, "nodeName": "BoolBinaryOperator", "type": "Type[chainer.utils.type_check.BoolBinaryOperator]"}, {"lineNumber": 288, "col_offset": 40, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 288, "col_offset": 43, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 288, "col_offset": 58, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 289, "col_offset": 19, "nodeName": "BoolBinaryOperator", "type": "Type[chainer.utils.type_check.BoolBinaryOperator]"}, {"lineNumber": 289, "col_offset": 40, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 289, "col_offset": 43, "nodeName": "z", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 289, "col_offset": 58, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "expect", "type": "Callable[[], None]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 312, "col_offset": 17, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 317, "col_offset": 41, "nodeName": "Expr", "type": "Type[chainer.utils.type_check.Expr]"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 318, "col_offset": 30, "nodeName": "x", "type": "chainer.utils.type_check.GetAttr"}, {"lineNumber": 318, "col_offset": 40, "nodeName": "Expr", "type": "Type[chainer.utils.type_check.Expr]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 319, "col_offset": 40, "nodeName": "Expr", "type": "Type[chainer.utils.type_check.Expr]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "prod", "type": "Callable[[Any], Any]"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "eval", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 361, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "z", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 404, "col_offset": 14, "nodeName": "InvalidType", "type": "Type[chainer.utils.type_check.InvalidType]"}, {"lineNumber": 405, "col_offset": 14, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 406, "col_offset": 25, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 406, "col_offset": 35, "nodeName": "args", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 407, "col_offset": 25, "nodeName": "expect", "type": "Any"}, {"lineNumber": 407, "col_offset": 37, "nodeName": "expect", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 408, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 408, "col_offset": 37, "nodeName": "actual", "type": "Any"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "T", "type": "module"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestConstant"}, {"lineNumber": 20, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 20, "col_offset": 35, "nodeName": "x", "type": "chainer.utils.type_check.Constant"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestConstant"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "T", "type": "module"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestVariable"}, {"lineNumber": 32, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 32, "col_offset": 34, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestVariable"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "T", "type": "module"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "x", "type": "Object"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "T", "type": "module"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 49, "col_offset": 43, "nodeName": "x", "type": "Object"}, {"lineNumber": 49, "col_offset": 52, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "T", "type": "module"}, {"lineNumber": 50, "col_offset": 32, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 50, "col_offset": 43, "nodeName": "x", "type": "Object"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "value", "type": "chainer.utils.type_check.GetAttr"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "value2", "type": "chainer.utils.type_check.GetAttr"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 55, "col_offset": 46, "nodeName": "value3", "type": "chainer.utils.type_check.GetAttr"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "T", "type": "module"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "T", "type": "module"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "v1", "type": "chainer.utils.type_check.GetItem"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 72, "col_offset": 41, "nodeName": "v2", "type": "chainer.utils.type_check.GetItem"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 82, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 85, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "T", "type": "module"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "T", "type": "module"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "c1", "type": "chainer.utils.type_check.Call"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 102, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 102, "col_offset": 47, "nodeName": "c2", "type": "chainer.utils.type_check.Call"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 103, "col_offset": 47, "nodeName": "c3", "type": "chainer.utils.type_check.Call"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "T", "type": "module"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "T", "type": "module"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "T", "type": "module"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "T", "type": "module"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "T", "type": "module"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "T", "type": "module"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "op1", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 131, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "op2", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 132, "col_offset": 42, "nodeName": "op3", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "op4", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 135, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "op5", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 136, "col_offset": 42, "nodeName": "op6", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "T", "type": "module"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "T", "type": "module"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestUnaryOperator"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "op1", "type": "chainer.utils.type_check.UnaryOperator"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "TestUnaryOperator"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "op2", "type": "chainer.utils.type_check.UnaryOperator"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "TestUnaryOperator"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "T", "type": "module"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "T", "type": "module"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 170, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 171, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 173, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 175, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 177, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 178, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 179, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 180, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 181, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 185, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 186, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 188, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 189, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 190, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 191, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 192, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 194, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 195, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 199, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 200, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 201, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 204, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 205, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 206, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 208, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 211, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 212, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 218, "col_offset": 46, "nodeName": "priority", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 219, "col_offset": 45, "nodeName": "priority", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 224, "col_offset": 42, "nodeName": "priority", "type": "Any"}, {"lineNumber": 224, "col_offset": 59, "nodeName": "priority", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "priority", "type": "int"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "T", "type": "module"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "T", "type": "module"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "sys", "type": "module"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 254, "col_offset": 13, "nodeName": "T", "type": "module"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 255, "col_offset": 34, "nodeName": "T", "type": "module"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 256, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 256, "col_offset": 32, "nodeName": "ts", "type": "chainer.utils.type_check.TypeInfoTuple"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 257, "col_offset": 33, "nodeName": "ts", "type": "chainer.utils.type_check.TypeInfoTuple"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 260, "col_offset": 46, "nodeName": "float32", "type": "Any"}, {"lineNumber": 261, "col_offset": 13, "nodeName": "T", "type": "module"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 262, "col_offset": 34, "nodeName": "T", "type": "module"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 263, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 263, "col_offset": 32, "nodeName": "ts", "type": "chainer.utils.type_check.TypeInfoTuple"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 264, "col_offset": 33, "nodeName": "ts", "type": "chainer.utils.type_check.TypeInfoTuple"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 267, "col_offset": 33, "nodeName": "T", "type": "module"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "eval", "type": "nothing"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 269, "col_offset": 28, "nodeName": "eval", "type": "nothing"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 270, "col_offset": 28, "nodeName": "eval", "type": "nothing"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 271, "col_offset": 28, "nodeName": "eval", "type": "nothing"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 272, "col_offset": 40, "nodeName": "eval", "type": "nothing"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 275, "col_offset": 31, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "get_types", "type": "Callable[[Any, Any, Any], chainer.utils.type_check.TypeInfoTuple]"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 287, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 287, "col_offset": 24, "nodeName": "y", "type": "Any"}, {"lineNumber": 288, "col_offset": 19, "nodeName": "T", "type": "module"}, {"lineNumber": 289, "col_offset": 19, "nodeName": "T", "type": "module"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 292, "col_offset": 24, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "op1", "type": "chainer.utils.type_check.BoolBinaryOperator"}, {"lineNumber": 297, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 297, "col_offset": 31, "nodeName": "InvalidType", "type": "Type[chainer.utils.type_check.InvalidType]"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "expect", "type": "Callable[[], None]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 301, "col_offset": 24, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 301, "col_offset": 29, "nodeName": "op1", "type": "chainer.utils.type_check.BoolBinaryOperator"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 302, "col_offset": 30, "nodeName": "op2", "type": "chainer.utils.type_check.BoolBinaryOperator"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "op1", "type": "chainer.utils.type_check.BoolBinaryOperator"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 306, "col_offset": 28, "nodeName": "op2", "type": "chainer.utils.type_check.BoolBinaryOperator"}, {"lineNumber": 312, "col_offset": 17, "nodeName": "T", "type": "module"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 317, "col_offset": 30, "nodeName": "t", "type": "chainer.utils.type_check.Constant"}, {"lineNumber": 317, "col_offset": 41, "nodeName": "T", "type": "module"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 318, "col_offset": 30, "nodeName": "t", "type": "chainer.utils.type_check.Constant"}, {"lineNumber": 318, "col_offset": 40, "nodeName": "T", "type": "module"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 319, "col_offset": 30, "nodeName": "t", "type": "chainer.utils.type_check.Constant"}, {"lineNumber": 319, "col_offset": 40, "nodeName": "T", "type": "module"}, {"lineNumber": 322, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 322, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 324, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 324, "col_offset": 31, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 326, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 326, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "self", "type": "TestListItem"}, {"lineNumber": 333, "col_offset": 25, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "TestListItem"}, {"lineNumber": 336, "col_offset": 32, "nodeName": "_repr", "type": "Callable[[Any], str]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "TestListItem"}, {"lineNumber": 339, "col_offset": 25, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "self", "type": "TestListItem"}, {"lineNumber": 342, "col_offset": 31, "nodeName": "_repr", "type": "Callable[[Any], str]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "self", "type": "TestListItem"}, {"lineNumber": 343, "col_offset": 33, "nodeName": "_repr", "type": "Callable[[Any], str]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "self", "type": "TestListItem"}, {"lineNumber": 344, "col_offset": 35, "nodeName": "_repr", "type": "Callable[[Any], str]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "self", "type": "TestListItem"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "self", "type": "TestListItem"}, {"lineNumber": 350, "col_offset": 34, "nodeName": "_repr", "type": "Callable[[Any], str]"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "self", "type": "TestProd"}, {"lineNumber": 357, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 357, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "self", "type": "TestProd"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "self", "type": "TestSameTypes"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "same_types", "type": "Callable[..., bool]"}, {"lineNumber": 370, "col_offset": 37, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 370, "col_offset": 40, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 370, "col_offset": 43, "nodeName": "z", "type": "numpy.ndarray"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 375, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "self", "type": "TestSameTypes"}, {"lineNumber": 378, "col_offset": 24, "nodeName": "same_types", "type": "Callable[..., bool]"}, {"lineNumber": 378, "col_offset": 37, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 378, "col_offset": 40, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 378, "col_offset": 43, "nodeName": "z", "type": "Any"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 385, "col_offset": 24, "nodeName": "same_types", "type": "Callable[..., bool]"}, {"lineNumber": 385, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 385, "col_offset": 40, "nodeName": "y", "type": "Any"}, {"lineNumber": 385, "col_offset": 43, "nodeName": "z", "type": "Any"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 392, "col_offset": 25, "nodeName": "same_types", "type": "Callable[..., bool]"}, {"lineNumber": 392, "col_offset": 38, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 392, "col_offset": 41, "nodeName": "y", "type": "Any"}, {"lineNumber": 392, "col_offset": 44, "nodeName": "z", "type": "numpy.ndarray"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 399, "col_offset": 25, "nodeName": "same_types", "type": "Callable[..., bool]"}, {"lineNumber": 399, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 399, "col_offset": 41, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 399, "col_offset": 44, "nodeName": "z", "type": "Any"}, {"lineNumber": 404, "col_offset": 14, "nodeName": "T", "type": "module"}, {"lineNumber": 405, "col_offset": 14, "nodeName": "pickle", "type": "module"}, {"lineNumber": 405, "col_offset": 27, "nodeName": "dumps", "type": "Callable[..., bytes]"}, {"lineNumber": 405, "col_offset": 40, "nodeName": "exc", "type": "chainer.utils.type_check.InvalidType"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "self", "type": "TestInvalidType"}, {"lineNumber": 406, "col_offset": 25, "nodeName": "exc", "type": "chainer.utils.type_check.InvalidType"}, {"lineNumber": 406, "col_offset": 35, "nodeName": "new", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "self", "type": "TestInvalidType"}, {"lineNumber": 407, "col_offset": 25, "nodeName": "exc", "type": "chainer.utils.type_check.InvalidType"}, {"lineNumber": 407, "col_offset": 37, "nodeName": "new", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "self", "type": "TestInvalidType"}, {"lineNumber": 408, "col_offset": 25, "nodeName": "exc", "type": "chainer.utils.type_check.InvalidType"}, {"lineNumber": 408, "col_offset": 37, "nodeName": "new", "type": "Any"}, {"lineNumber": 20, "col_offset": 35, "nodeName": "self", "type": "TestConstant"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "x", "type": "chainer.utils.type_check.Constant"}, {"lineNumber": 32, "col_offset": 34, "nodeName": "self", "type": "TestVariable"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "T", "type": "module"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "T", "type": "module"}, {"lineNumber": 49, "col_offset": 52, "nodeName": "T", "type": "module"}, {"lineNumber": 50, "col_offset": 32, "nodeName": "T", "type": "module"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 55, "col_offset": 46, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "value", "type": "chainer.utils.type_check.GetAttr"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 72, "col_offset": 41, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 78, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 80, "col_offset": 40, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 83, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 84, "col_offset": 40, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 85, "col_offset": 44, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "v1", "type": "chainer.utils.type_check.GetItem"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "v2", "type": "chainer.utils.type_check.GetItem"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 102, "col_offset": 47, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 103, "col_offset": 47, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "c1", "type": "chainer.utils.type_check.Call"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "c2", "type": "chainer.utils.type_check.Call"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 132, "col_offset": 42, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 136, "col_offset": 42, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "op1", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "self", "type": "TestUnaryOperator"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "self", "type": "TestUnaryOperator"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "op1", "type": "chainer.utils.type_check.UnaryOperator"}, {"lineNumber": 169, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 170, "col_offset": 42, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 171, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 173, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 173, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 174, "col_offset": 42, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 175, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 175, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 176, "col_offset": 42, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 177, "col_offset": 44, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 179, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 180, "col_offset": 42, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 181, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 181, "col_offset": 44, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 182, "col_offset": 39, "nodeName": "pow", "type": "Callable"}, {"lineNumber": 182, "col_offset": 43, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 182, "col_offset": 46, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 183, "col_offset": 44, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 184, "col_offset": 44, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 185, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 185, "col_offset": 44, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 186, "col_offset": 44, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 187, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 187, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 189, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 190, "col_offset": 42, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 191, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 192, "col_offset": 42, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 194, "col_offset": 36, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 195, "col_offset": 36, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 196, "col_offset": 36, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 199, "col_offset": 50, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 200, "col_offset": 44, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 201, "col_offset": 46, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 204, "col_offset": 44, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 205, "col_offset": 44, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 206, "col_offset": 58, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 212, "col_offset": 50, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "self", "type": "TestDivOperator"}, {"lineNumber": 248, "col_offset": 35, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 260, "col_offset": 46, "nodeName": "numpy", "type": "module"}, {"lineNumber": 271, "col_offset": 28, "nodeName": "ndim", "type": "nothing"}, {"lineNumber": 272, "col_offset": 40, "nodeName": "dtype", "type": "nothing"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 292, "col_offset": 24, "nodeName": "op1", "type": "chainer.utils.type_check.BoolBinaryOperator"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "op2", "type": "chainer.utils.type_check.BoolBinaryOperator"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 297, "col_offset": 13, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 297, "col_offset": 31, "nodeName": "T", "type": "module"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "op2", "type": "chainer.utils.type_check.BoolBinaryOperator"}, {"lineNumber": 301, "col_offset": 29, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 302, "col_offset": 30, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 306, "col_offset": 28, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 317, "col_offset": 30, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 318, "col_offset": 30, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 319, "col_offset": 30, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 322, "col_offset": 13, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 324, "col_offset": 13, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "x", "type": "chainer.utils.type_check.GetAttr"}, {"lineNumber": 326, "col_offset": 13, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 336, "col_offset": 32, "nodeName": "T", "type": "module"}, {"lineNumber": 342, "col_offset": 31, "nodeName": "T", "type": "module"}, {"lineNumber": 343, "col_offset": 33, "nodeName": "T", "type": "module"}, {"lineNumber": 344, "col_offset": 35, "nodeName": "T", "type": "module"}, {"lineNumber": 350, "col_offset": 34, "nodeName": "T", "type": "module"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "prod", "type": "Callable[[Any], Any]"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "T", "type": "module"}, {"lineNumber": 375, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 378, "col_offset": 24, "nodeName": "T", "type": "module"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 385, "col_offset": 24, "nodeName": "T", "type": "module"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 392, "col_offset": 25, "nodeName": "T", "type": "module"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 399, "col_offset": 25, "nodeName": "T", "type": "module"}, {"lineNumber": 405, "col_offset": 27, "nodeName": "pickle", "type": "module"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "self", "type": "TestConstant"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "self", "type": "TestVariable"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "c3", "type": "chainer.utils.type_check.Call"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "self", "type": "TestUnaryOperator"}, {"lineNumber": 199, "col_offset": 42, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 199, "col_offset": 46, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 200, "col_offset": 49, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 200, "col_offset": 53, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 201, "col_offset": 52, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 201, "col_offset": 57, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 204, "col_offset": 49, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 204, "col_offset": 54, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 205, "col_offset": 50, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 205, "col_offset": 55, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 206, "col_offset": 47, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 206, "col_offset": 52, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 208, "col_offset": 43, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 208, "col_offset": 47, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 211, "col_offset": 41, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 211, "col_offset": 46, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 212, "col_offset": 44, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 218, "col_offset": 30, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 218, "col_offset": 46, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 218, "col_offset": 51, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 219, "col_offset": 45, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 219, "col_offset": 49, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 222, "col_offset": 30, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 224, "col_offset": 26, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 224, "col_offset": 43, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 224, "col_offset": 60, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 226, "col_offset": 29, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 230, "col_offset": 29, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 233, "col_offset": 30, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "shape", "type": "nothing"}, {"lineNumber": 269, "col_offset": 28, "nodeName": "shape", "type": "nothing"}, {"lineNumber": 270, "col_offset": 28, "nodeName": "shape", "type": "nothing"}, {"lineNumber": 271, "col_offset": 28, "nodeName": "t", "type": "nothing"}, {"lineNumber": 272, "col_offset": 40, "nodeName": "t", "type": "nothing"}, {"lineNumber": 292, "col_offset": 24, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "t", "type": "chainer.utils.type_check.Constant"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "t", "type": "chainer.utils.type_check.Constant"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "t", "type": "chainer.utils.type_check.Constant"}, {"lineNumber": 336, "col_offset": 41, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 343, "col_offset": 42, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 344, "col_offset": 44, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 344, "col_offset": 59, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "T", "type": "module"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 248, "col_offset": 35, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 248, "col_offset": 44, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "t", "type": "nothing"}, {"lineNumber": 269, "col_offset": 28, "nodeName": "t", "type": "nothing"}, {"lineNumber": 270, "col_offset": 28, "nodeName": "t", "type": "nothing"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 333, "col_offset": 25, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 336, "col_offset": 41, "nodeName": "T", "type": "module"}, {"lineNumber": 339, "col_offset": 25, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 343, "col_offset": 42, "nodeName": "T", "type": "module"}, {"lineNumber": 344, "col_offset": 44, "nodeName": "T", "type": "module"}, {"lineNumber": 344, "col_offset": 59, "nodeName": "T", "type": "module"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 350, "col_offset": 44, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 248, "col_offset": 35, "nodeName": "self", "type": "TestDivOperator"}, {"lineNumber": 248, "col_offset": 44, "nodeName": "self", "type": "TestDivOperator"}, {"lineNumber": 333, "col_offset": 25, "nodeName": "T", "type": "module"}, {"lineNumber": 333, "col_offset": 45, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 339, "col_offset": 25, "nodeName": "T", "type": "module"}, {"lineNumber": 339, "col_offset": 46, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "T", "type": "module"}, {"lineNumber": 350, "col_offset": 44, "nodeName": "T", "type": "module"}, {"lineNumber": 333, "col_offset": 45, "nodeName": "T", "type": "module"}, {"lineNumber": 339, "col_offset": 46, "nodeName": "T", "type": "module"}, {"lineNumber": 347, "col_offset": 48, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 347, "col_offset": 48, "nodeName": "T", "type": "module"}]