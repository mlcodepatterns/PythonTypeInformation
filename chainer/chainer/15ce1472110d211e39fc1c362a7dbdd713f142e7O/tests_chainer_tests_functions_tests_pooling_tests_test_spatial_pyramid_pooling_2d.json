[{"lineNumber": 28, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "check_forward", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "check_forward_ones", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "test_forward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "check_backward", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "test_backward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "test_double_backward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "check_invalid_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "test_invalid_dtype_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "test_invalid_dtype_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "check_ambiguous_poolings", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "check_invalid_poolings", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "test_ambiguous_pooling", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "test_invalid_pooling", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "test_call_cudnn_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "test_call_cudnn_backward", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 221, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "size", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "y_data", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "y_data", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "size", "type": "int"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "gy", "type": "Any"}, {"lineNumber": 221, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "n", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "c", "type": "Any"}, {"lineNumber": 34, "col_offset": 33, "nodeName": "h", "type": "Any"}, {"lineNumber": 34, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "prod", "type": "Any"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 36, "col_offset": 62, "nodeName": "shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 45, "col_offset": 59, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 46, "col_offset": 61, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "spatial_pyramid_pooling_2d", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "pyramid_height", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 59, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "y_data", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "check_forward", "type": "Any"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "check_forward_ones", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "one", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "check_forward", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "check_forward_ones", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "check_forward", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "check_forward_ones", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "check_backward", "type": "Any"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "gy", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "check_backward", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "check_backward", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "check_double_backward", "type": "Any"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 117, "col_offset": 43, "nodeName": "gy", "type": "Any"}, {"lineNumber": 117, "col_offset": 52, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "check_double_backward", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "check_double_backward", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "check_double_backward", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "TestInvalidDtype"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "TestInvalidDtype"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "spatial_pyramid_pooling_2d", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "TestInvalidArguments"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "TestInvalidArguments"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "check_ambiguous_poolings", "type": "Callable[[], Any]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "check_invalid_poolings", "type": "Callable[[], Any]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 194, "col_offset": 66, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 196, "col_offset": 41, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "spatial_pyramid_pooling_2d", "type": "Callable[..., Any]"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "expect", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 216, "col_offset": 61, "nodeName": "func", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "pooling", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 54, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "cuda", "type": "module"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "gy", "type": "Any"}, {"lineNumber": 59, "col_offset": 40, "nodeName": "y_data", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 63, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "cuda", "type": "module"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "y_data", "type": "Any"}, {"lineNumber": 67, "col_offset": 40, "nodeName": "n", "type": "Any"}, {"lineNumber": 67, "col_offset": 48, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "y_data", "type": "Any"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 69, "col_offset": 56, "nodeName": "y_data", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "one", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "one", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "check_backward", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "y_grad", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 101, "col_offset": 49, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 101, "col_offset": 61, "nodeName": "gy", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 106, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 106, "col_offset": 49, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 106, "col_offset": 61, "nodeName": "gy", "type": "Any"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "check_double_backward", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 112, "col_offset": 35, "nodeName": "y_grad", "type": "Any"}, {"lineNumber": 112, "col_offset": 43, "nodeName": "x_grad_grad", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "gy", "type": "Any"}, {"lineNumber": 123, "col_offset": 55, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 123, "col_offset": 67, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "asfortranarray", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "asfortranarray", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "asfortranarray", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 137, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 137, "col_offset": 45, "nodeName": "gy", "type": "Any"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 137, "col_offset": 67, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "astype", "type": "Any"}, {"lineNumber": 145, "col_offset": 48, "nodeName": "int32", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "functions", "type": "module"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "self", "type": "TestInvalidDtype"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "InvalidType", "type": "Type[chainer.utils.type_check.InvalidType]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "check_invalid_dtype", "type": "Callable[[], Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 158, "col_offset": 31, "nodeName": "InvalidType", "type": "Type[chainer.utils.type_check.InvalidType]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "check_invalid_dtype", "type": "Any"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 166, "col_offset": 34, "nodeName": "astype", "type": "Any"}, {"lineNumber": 166, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "spatial_pyramid_pooling_2d", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 49, "nodeName": "v", "type": "Any"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 173, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "spatial_pyramid_pooling_2d", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 49, "nodeName": "v", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "TestInvalidArguments"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestInvalidArguments"}, {"lineNumber": 196, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 204, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 205, "col_offset": 64, "nodeName": "func", "type": "Any"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 211, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 212, "col_offset": 21, "nodeName": "should_use_cudnn", "type": "Any"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "forward", "type": "Callable[[], Any]"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "patch", "type": "Callable[..., mock._patch]"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "called", "type": "Any"}, {"lineNumber": 218, "col_offset": 42, "nodeName": "expect", "type": "Any"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "size", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 46, "col_offset": 47, "nodeName": "shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "numpy", "type": "module"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "cuda", "type": "module"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "cuda", "type": "module"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "cuda", "type": "module"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "cuda", "type": "module"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "float64", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "cuda", "type": "module"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 49, "nodeName": "cuda", "type": "module"}, {"lineNumber": 101, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "cuda", "type": "module"}, {"lineNumber": 106, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 49, "nodeName": "cuda", "type": "module"}, {"lineNumber": 106, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "float64", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "cuda", "type": "module"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 55, "nodeName": "cuda", "type": "module"}, {"lineNumber": 123, "col_offset": 67, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 129, "col_offset": 37, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 129, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 130, "col_offset": 37, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 130, "col_offset": 49, "nodeName": "gy", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 131, "col_offset": 49, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 137, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "cuda", "type": "module"}, {"lineNumber": 137, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "cuda", "type": "module"}, {"lineNumber": 137, "col_offset": 67, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 145, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "self", "type": "TestInvalidDtype"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "type_check", "type": "module"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "self", "type": "TestInvalidDtype"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 31, "nodeName": "type_check", "type": "module"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 166, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 166, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "self", "type": "TestInvalidArguments"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 170, "col_offset": 49, "nodeName": "self", "type": "TestInvalidArguments"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "self", "type": "TestInvalidArguments"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 174, "col_offset": 49, "nodeName": "self", "type": "TestInvalidArguments"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 194, "col_offset": 34, "nodeName": "size", "type": "int"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 204, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "patch", "type": "Callable[..., mock._patch]"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "forward", "type": "Callable[[], Any]"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "called", "type": "Any"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 211, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 212, "col_offset": 21, "nodeName": "chainer", "type": "module"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "testing", "type": "module"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "func", "type": "Any"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "n", "type": "Any"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "c", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "h", "type": "Any"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "w", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "n", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 129, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 129, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 130, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 130, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 131, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "self", "type": "TestInvalidDtype"}, {"lineNumber": 166, "col_offset": 34, "nodeName": "self", "type": "TestInvalidArguments"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 194, "col_offset": 46, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "testing", "type": "module"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "func", "type": "Any"}, {"lineNumber": 208, "col_offset": 33, "nodeName": "should_use_cudnn", "type": "Any"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "cuda", "type": "module"}, {"lineNumber": 194, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 208, "col_offset": 33, "nodeName": "chainer", "type": "module"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "cuda", "type": "module"}]