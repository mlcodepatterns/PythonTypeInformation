[{"lineNumber": 150, "col_offset": 0, "nodeName": "_convert_numpy_scalar", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 178, "col_offset": 0, "nodeName": "_permutate_shapes", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 36, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "__enter__", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "__exit__", "type": "Callable[..., Any]"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "setup", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "generate_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "forward_xp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "setup", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "generate_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "forward_xp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "UnaryMathTestBase", "type": "Type[UnaryMathTestBase]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "forward_xp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 32, "nodeName": "BinaryMathTestBase", "type": "Type[BinaryMathTestBase]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "forward_xp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "UnaryMathTestBase", "type": "Type[UnaryMathTestBase]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "func", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "InplaceUnaryMathTestBase", "type": "Type[InplaceUnaryMathTestBase]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "func", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "input", "type": "None"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "skip_backward_test", "type": "bool"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "skip_double_backward_test", "type": "bool"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "skip_backward_test", "type": "bool"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "skip_double_backward_test", "type": "bool"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "permutated_shapes_list", "type": "List[Union[Tuple[Union[Tuple[int, int, int], Tuple[int, int]], Tuple[int, int]], Tuple[Tuple[int, int], Union[Tuple[int, int, int], Tuple[int, int]]]]]"}, {"lineNumber": 181, "col_offset": 32, "nodeName": "shapes_list", "type": "List[Union[Tuple[Tuple[int, int], Tuple[int, int]], Tuple[Tuple[int, int, int], Tuple[int, int]]]]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "old_settings", "type": "Any"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "in_dtypes", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "in_kind", "type": "Any"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "kind", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "in_dtypes", "type": "Any"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "in_dtypes", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "kind1", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "kind", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "kind2", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "kind", "type": "Any"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "in_dtypes", "type": "Any"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "in_shapes", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "type", "type": "Any"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "in_shape1", "type": "Union[Tuple[int, int], Tuple[int, int, int]]"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "in_shape2", "type": "Tuple[int, int]"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 214, "col_offset": 28, "nodeName": "_permutate_shapes", "type": "Callable[[Any], Any]"}, {"lineNumber": 221, "col_offset": 5, "nodeName": "_permutate_shapes", "type": "Callable[[Any], Any]"}, {"lineNumber": 221, "col_offset": 23, "nodeName": "shapes_combination_inplace_binary", "type": "List[Union[Tuple[Tuple[int], Tuple[int]], Tuple[Tuple[int, int], Tuple[int, int]], Tuple[Tuple[int, int], Tuple[int]], Tuple[Tuple[int, int, int], Tuple[int, int, int]], Tuple[Tuple[()], Tuple[()]], Tuple[Tuple[int], Tuple[()]], Tuple[Tuple[int, int], Tuple[()]]]]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "IgnoreNumpyFloatingPointError"}, {"lineNumber": 14, "col_offset": 28, "nodeName": "seterr", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "seterr", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "in_dtype", "type": "Any"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "self", "type": "UnaryMathTestBase"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "kind", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "skip_backward_test", "type": "bool"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "skip_double_backward_test", "type": "bool"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "in_dtype", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "self", "type": "UnaryMathTestBase"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "in_dtype", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "self", "type": "UnaryMathTestBase"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "input", "type": "Any"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "input", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "input", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "cast_if_numpy_array", "type": "Any"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "xp", "type": "Any"}, {"lineNumber": 60, "col_offset": 48, "nodeName": "a", "type": "Any"}, {"lineNumber": 60, "col_offset": 51, "nodeName": "out_dtype", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "cast_if_numpy_array", "type": "Any"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "xp", "type": "Any"}, {"lineNumber": 63, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 63, "col_offset": 51, "nodeName": "out_dtype", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "in_dtype1", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "in_dtype2", "type": "Any"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "self", "type": "BinaryMathTestBase"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "skip_backward_test", "type": "bool"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "skip_double_backward_test", "type": "bool"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "in_dtype1", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "in_dtype2", "type": "Any"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "self", "type": "BinaryMathTestBase"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "in_shape1", "type": "Any"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "in_shape2", "type": "Any"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "self", "type": "BinaryMathTestBase"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "input_lhs", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "input_rhs", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "cast_if_numpy_array", "type": "Any"}, {"lineNumber": 105, "col_offset": 44, "nodeName": "xp", "type": "Any"}, {"lineNumber": 105, "col_offset": 48, "nodeName": "a", "type": "Any"}, {"lineNumber": 105, "col_offset": 51, "nodeName": "out_dtype", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "cast_if_numpy_array", "type": "Any"}, {"lineNumber": 106, "col_offset": 44, "nodeName": "xp", "type": "Any"}, {"lineNumber": 106, "col_offset": 48, "nodeName": "b", "type": "Any"}, {"lineNumber": 106, "col_offset": 51, "nodeName": "out_dtype", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "cast_if_numpy_array", "type": "Any"}, {"lineNumber": 109, "col_offset": 44, "nodeName": "xp", "type": "Any"}, {"lineNumber": 109, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "out_dtype", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "xp", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "a_", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "a_", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "a_", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "cast_if_numpy_array", "type": "Any"}, {"lineNumber": 137, "col_offset": 44, "nodeName": "xp", "type": "Any"}, {"lineNumber": 137, "col_offset": 48, "nodeName": "b", "type": "Any"}, {"lineNumber": 137, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "xp", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "a_", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "b_", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "a_", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "b_", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "b", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "a_", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "scalar_type", "type": "Any"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "scalar_value", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "func_scalar", "type": "Any"}, {"lineNumber": 162, "col_offset": 32, "nodeName": "xp", "type": "Any"}, {"lineNumber": 162, "col_offset": 36, "nodeName": "a", "type": "Any"}, {"lineNumber": 162, "col_offset": 39, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "scalar_type", "type": "Any"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "scalar_value", "type": "Any"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "xp", "type": "Any"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "in_dtypes", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "func_scalar", "type": "Any"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "xp", "type": "Any"}, {"lineNumber": 175, "col_offset": 36, "nodeName": "a", "type": "Any"}, {"lineNumber": 175, "col_offset": 39, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "permutated_shapes_list", "type": "List[Union[Tuple[Union[Tuple[int, int, int], Tuple[int, int]], Tuple[int, int]], Tuple[Tuple[int, int], Union[Tuple[int, int, int], Tuple[int, int]]]]]"}, {"lineNumber": 14, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "old_settings", "type": "Any"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "in_dtype", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "self", "type": "UnaryMathTestBase"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "self", "type": "UnaryMathTestBase"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "in_kind", "type": "Any"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "input", "type": "Any"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "input", "type": "Any"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.SkipTest]"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "self", "type": "UnaryMathTestBase"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "self", "type": "UnaryMathTestBase"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "self", "type": "UnaryMathTestBase"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 52, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 52, "col_offset": 46, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "dtype_utils", "type": "Any"}, {"lineNumber": 60, "col_offset": 51, "nodeName": "self", "type": "UnaryMathTestBase"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "IgnoreNumpyFloatingPointError", "type": "Type[IgnoreNumpyFloatingPointError]"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "func", "type": "Any"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "xp", "type": "Any"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "dtype_utils", "type": "Any"}, {"lineNumber": 63, "col_offset": 51, "nodeName": "self", "type": "UnaryMathTestBase"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "in_dtype1", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "in_dtype2", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "kind1", "type": "Any"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "kind2", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "self", "type": "BinaryMathTestBase"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "self", "type": "BinaryMathTestBase"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "in_dtype1", "type": "Any"}, {"lineNumber": 78, "col_offset": 37, "nodeName": "in_dtype2", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "self", "type": "BinaryMathTestBase"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "in_shape1", "type": "Any"}, {"lineNumber": 88, "col_offset": 47, "nodeName": "in_dtype1", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "input_lhs", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "self", "type": "BinaryMathTestBase"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 94, "col_offset": 36, "nodeName": "in_shape2", "type": "Any"}, {"lineNumber": 94, "col_offset": 47, "nodeName": "in_dtype2", "type": "Any"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "input_rhs", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "dtype_utils", "type": "Any"}, {"lineNumber": 105, "col_offset": 51, "nodeName": "self", "type": "BinaryMathTestBase"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "dtype_utils", "type": "Any"}, {"lineNumber": 106, "col_offset": 51, "nodeName": "self", "type": "BinaryMathTestBase"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "IgnoreNumpyFloatingPointError", "type": "Type[IgnoreNumpyFloatingPointError]"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "func", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "xp", "type": "Any"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "b", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "dtype_utils", "type": "Any"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "self", "type": "BinaryMathTestBase"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "copy", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "copy", "type": "Any"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "IgnoreNumpyFloatingPointError", "type": "Type[IgnoreNumpyFloatingPointError]"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "func", "type": "Any"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "xp", "type": "Any"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "a_", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "dtype_utils", "type": "Any"}, {"lineNumber": 137, "col_offset": 51, "nodeName": "a", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "copy", "type": "Any"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "as_grad_stopped", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "copy", "type": "Any"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "IgnoreNumpyFloatingPointError", "type": "Type[IgnoreNumpyFloatingPointError]"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "func", "type": "Any"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "xp", "type": "Any"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "a_", "type": "Any"}, {"lineNumber": 145, "col_offset": 36, "nodeName": "b_", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "self", "type": "MathScalarTestBase"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "self", "type": "MathScalarTestBase"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "self", "type": "MathScalarTestBase"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "self", "type": "InplaceMathScalarTestBase"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "self", "type": "InplaceMathScalarTestBase"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "in_dtype", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "self", "type": "InplaceMathScalarTestBase"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "_convert_numpy_scalar", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 174, "col_offset": 43, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 174, "col_offset": 51, "nodeName": "in_dtype", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "self", "type": "InplaceMathScalarTestBase"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "permutated_shapes_list", "type": "List[Union[Tuple[Union[Tuple[int, int, int], Tuple[int, int]], Tuple[int, int]], Tuple[Tuple[int, int], Union[Tuple[int, int, int], Tuple[int, int]]]]]"}, {"lineNumber": 182, "col_offset": 39, "nodeName": "in_shape1", "type": "Union[Tuple[int, int, int], Tuple[int, int]]"}, {"lineNumber": 182, "col_offset": 50, "nodeName": "in_shape2", "type": "Tuple[int, int]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "permutated_shapes_list", "type": "List[Union[Tuple[Union[Tuple[int, int, int], Tuple[int, int]], Tuple[int, int]], Tuple[Tuple[int, int], Union[Tuple[int, int, int], Tuple[int, int]]]]]"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "in_shape2", "type": "Tuple[int, int]"}, {"lineNumber": 183, "col_offset": 50, "nodeName": "in_shape1", "type": "Union[Tuple[int, int, int], Tuple[int, int]]"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "self", "type": "IgnoreNumpyFloatingPointError"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "in_dtype", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "check_forward_options", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "check_backward_options", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Any"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 40, "col_offset": 44, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 49, "col_offset": 37, "nodeName": "in_dtype", "type": "Any"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 51, "col_offset": 51, "nodeName": "in_dtype", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "full", "type": "Any"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "input", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "self", "type": "UnaryMathTestBase"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "check_forward_options", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "check_backward_options", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "array_utils", "type": "Any"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "self", "type": "BinaryMathTestBase"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 89, "col_offset": 52, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "full", "type": "Any"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "in_shape1", "type": "Any"}, {"lineNumber": 90, "col_offset": 38, "nodeName": "input_lhs", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "array_utils", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "self", "type": "BinaryMathTestBase"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 95, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 95, "col_offset": 52, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "full", "type": "Any"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "in_shape2", "type": "Any"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "input_rhs", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "self", "type": "BinaryMathTestBase"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "a", "type": "Any"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "self", "type": "InplaceUnaryMathTestBase"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "b", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "a", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "self", "type": "InplaceBinaryMathTestBase"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "self", "type": "UnaryMathTestBase"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "self", "type": "UnaryMathTestBase"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "self", "type": "UnaryMathTestBase"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "input", "type": "Any"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "array_utils", "type": "Any"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "self", "type": "UnaryMathTestBase"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "self", "type": "UnaryMathTestBase"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "self", "type": "UnaryMathTestBase"}, {"lineNumber": 53, "col_offset": 60, "nodeName": "in_dtype", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "BinaryMathTestBase"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "BinaryMathTestBase"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "BinaryMathTestBase"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 90, "col_offset": 38, "nodeName": "self", "type": "BinaryMathTestBase"}, {"lineNumber": 90, "col_offset": 60, "nodeName": "in_dtype1", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "self", "type": "BinaryMathTestBase"}, {"lineNumber": 96, "col_offset": 60, "nodeName": "in_dtype2", "type": "Any"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "as_grad_stopped", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "as_grad_stopped", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "self", "type": "UnaryMathTestBase"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "a", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "a", "type": "Any"}]