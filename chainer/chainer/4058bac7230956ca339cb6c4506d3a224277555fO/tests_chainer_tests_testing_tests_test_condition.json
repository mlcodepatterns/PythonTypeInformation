[{"lineNumber": 58, "col_offset": 0, "nodeName": "_should_fail", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "_should_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "_should_skip", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "SKIP_REASON", "type": "str"}, {"lineNumber": 12, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "clear_counter", "type": "Callable[[], Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "failure_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "success_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "skip_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "error_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "probabilistic_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "runTest", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "_decorate", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "test_all_trials_fail", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "test_all_trials_fail2", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "test_all_trials_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "test_all_trials_succeed", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "test_all_trials_succeed2", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "test_half_of_trials_succeed", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "test_half_of_trials_succeed2", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "_decorate", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "test_failure_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "test_success_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "test_skip_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "test_probabilistic_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "_decorate", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "test_failure_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "test_success_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "test_skip_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "test_probabilistic_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 12, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "failure_case_counter", "type": "int"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "success_case_counter", "type": "int"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "skip_case_counter", "type": "int"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "probabilistic_case_counter", "type": "int"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "probabilistic_case_success_counter", "type": "int"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "probabilistic_case_failure_counter", "type": "int"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "unittest", "type": "module"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 201, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "failure_case_counter", "type": "int"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "success_case_counter", "type": "int"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "skip_case_counter", "type": "int"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "probabilistic_case_counter", "type": "int"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "probabilistic_case_success_counter", "type": "int"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "probabilistic_case_failure_counter", "type": "int"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "failure_case_counter", "type": "int"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "success_case_counter", "type": "int"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "skip_case_counter", "type": "int"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "probabilistic_case_counter", "type": "int"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 69, "col_offset": 6, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "SkipTest", "type": "Type[unittest.SkipTest]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 201, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "fail", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "skipTest", "type": "Callable[[Any], None]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "SKIP_REASON", "type": "str"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "probabilistic_case_success_counter", "type": "int"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "probabilistic_case_failure_counter", "type": "int"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 60, "col_offset": 10, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "fail", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 6, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 74, "col_offset": 10, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "fail", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "unittest", "type": "module"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "clear_counter", "type": "Callable[[], Any]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "_decorate", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "failure_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "_should_fail", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "failure_case_counter", "type": "int"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "_decorate", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "failure_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "_should_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "failure_case_counter", "type": "int"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "_decorate", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "error_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "_should_fail", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "_decorate", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "success_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "_should_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "success_case_counter", "type": "int"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "repeat_with_success_at_least", "type": "Callable[[Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "_decorate", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "probabilistic_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "_should_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "probabilistic_case_counter", "type": "int"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "probabilistic_case_success_counter", "type": "int"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "probabilistic_case_failure_counter", "type": "int"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "_decorate", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "probabilistic_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "_should_fail", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "probabilistic_case_counter", "type": "int"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "probabilistic_case_success_counter", "type": "int"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "probabilistic_case_failure_counter", "type": "int"}, {"lineNumber": 137, "col_offset": 39, "nodeName": "f", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "clear_counter", "type": "Callable[[], Any]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "_decorate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "failure_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "_should_fail", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "failure_case_counter", "type": "int"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "_decorate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "success_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "_should_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "success_case_counter", "type": "int"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "_decorate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "skip_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "_should_skip", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 155, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "skip_case_counter", "type": "int"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "_decorate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "probabilistic_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "_should_fail", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "probabilistic_case_counter", "type": "int"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "probabilistic_case_success_counter", "type": "int"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "probabilistic_case_failure_counter", "type": "int"}, {"lineNumber": 170, "col_offset": 38, "nodeName": "f", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "TestRetry"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "clear_counter", "type": "Callable[[], Any]"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "_decorate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "failure_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "_should_fail", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "self", "type": "TestRetry"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "failure_case_counter", "type": "int"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "_decorate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 182, "col_offset": 27, "nodeName": "success_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "_should_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "self", "type": "TestRetry"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "success_case_counter", "type": "int"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "_decorate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 187, "col_offset": 27, "nodeName": "skip_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "_should_skip", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "self", "type": "TestRetry"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "skip_case_counter", "type": "int"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "_decorate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "probabilistic_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "_should_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "self", "type": "TestRetry"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "probabilistic_case_counter", "type": "int"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "probabilistic_case_success_counter", "type": "int"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "probabilistic_case_failure_counter", "type": "int"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "MockUnitTest"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "MockUnitTest"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "MockUnitTest"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "probabilistic_case_counter", "type": "int"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "fail", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 10, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 10, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "SKIP_REASON", "type": "str"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "repeat_with_success_at_least", "type": "Callable[[Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "times", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "min_success", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "condition", "type": "module"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "repeat", "type": "Callable[[int], Callable[[Any], Any]]"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "times", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "retry", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "times", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "self", "type": "TestRetry"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "TestRetry"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "self", "type": "TestRetry"}, {"lineNumber": 182, "col_offset": 27, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestRetry"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "self", "type": "TestRetry"}, {"lineNumber": 187, "col_offset": 27, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestRetry"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "self", "type": "TestRetry"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "TestRetry"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TestRetry"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "TestRetry"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "unit_test", "type": "MockUnitTest"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "MockUnitTest", "type": "Type[MockUnitTest]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "MockUnitTest"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "MockUnitTest"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 65, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "e", "type": "AssertionError"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "e", "type": "unittest.SkipTest"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "condition", "type": "module"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "self", "type": "TestRepeatWithSuccessAtLeast"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "condition", "type": "module"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "self", "type": "TestRepeat"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "condition", "type": "module"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "self", "type": "TestRetry"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "self", "type": "TestRetry"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "self", "type": "TestRetry"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "self", "type": "TestRetry"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "self", "type": "TestRetry"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "self", "type": "TestRetry"}]