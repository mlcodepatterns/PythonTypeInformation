[{"lineNumber": 94, "col_offset": 0, "nodeName": "_create_update_rule", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "_create_var", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "Deserializer", "type": "Type[chainer.serializer.Deserializer]"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 296, "col_offset": 30, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 334, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 359, "col_offset": 46, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 407, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 454, "col_offset": 17, "nodeName": "Link", "type": "Type[chainer.link.Link]"}, {"lineNumber": 464, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 512, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 617, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 657, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 690, "col_offset": 21, "nodeName": "GradientMethod", "type": "Type[chainer.optimizer.GradientMethod]"}, {"lineNumber": 700, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 715, "col_offset": 35, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 733, "col_offset": 47, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 18, "col_offset": 3, "nodeName": "is_available", "type": "Callable[[], bool]"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "serializer", "type": "module"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "UpdateRule", "type": "Type[chainer.optimizer.UpdateRule]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 114, "col_offset": 7, "nodeName": "has_states", "type": "Any"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "grad", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "var", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 296, "col_offset": 30, "nodeName": "unittest", "type": "module"}, {"lineNumber": 334, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 359, "col_offset": 46, "nodeName": "unittest", "type": "module"}, {"lineNumber": 407, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 454, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 464, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 512, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 617, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 657, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 690, "col_offset": 21, "nodeName": "chainer", "type": "module"}, {"lineNumber": 702, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 703, "col_offset": 4, "nodeName": "timing", "type": "str"}, {"lineNumber": 715, "col_offset": 35, "nodeName": "unittest", "type": "module"}, {"lineNumber": 733, "col_offset": 47, "nodeName": "unittest", "type": "module"}, {"lineNumber": 769, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 769, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 769, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 18, "col_offset": 3, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "x", "type": "int"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "y", "type": "int"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "y", "type": "int"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "z", "type": "int"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "SimpleUpdateRule", "type": "Type[Any]"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "init_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "_init_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 122, "col_offset": 10, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 141, "col_offset": 14, "nodeName": "var", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "xp", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "hook", "type": "mock.MagicMock"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "hook", "type": "mock.MagicMock"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "hook", "type": "mock.MagicMock"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "hook_body", "type": "mock.MagicMock"}, {"lineNumber": 218, "col_offset": 34, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "update_core", "type": "mock.MagicMock"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "enabled", "type": "bool"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "enabled", "type": "bool"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "target", "type": "Dict[str, Union[int, Any]]"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "target", "type": "Dict[str, Union[int, Any]]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "enabled", "type": "bool"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "update_core", "type": "Callable[[Any], Any]"}, {"lineNumber": 308, "col_offset": 39, "nodeName": "update_core", "type": "Callable[[Any], Any]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "var1", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "update_core", "type": "Callable[[Any], Any]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "update_core", "type": "Callable[[Any], Any]"}, {"lineNumber": 328, "col_offset": 39, "nodeName": "update_core", "type": "Callable[[Any], Any]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "var2", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "use_auto_new_epoch", "type": "bool"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "use_auto_new_epoch", "type": "bool"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "initial_p", "type": "numpy.ndarray"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "expected_p", "type": "Any"}, {"lineNumber": 369, "col_offset": 33, "nodeName": "UpdateRule", "type": "Type[chainer.optimizer.UpdateRule]"}, {"lineNumber": 381, "col_offset": 32, "nodeName": "GradientMethod", "type": "Type[chainer.optimizer.GradientMethod]"}, {"lineNumber": 385, "col_offset": 19, "nodeName": "Link", "type": "Type[chainer.link.Link]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "call_for_each_param", "type": "bool"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "call_for_each_param", "type": "bool"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.GradientMethod"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "create_update_rule", "type": "Type[mock.MagicMock]"}, {"lineNumber": 473, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "create_update_rule", "type": "mock.MagicMock"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 477, "col_offset": 17, "nodeName": "target", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 478, "col_offset": 20, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "create_update_rule", "type": "mock.MagicMock"}, {"lineNumber": 479, "col_offset": 39, "nodeName": "create_update_rule", "type": "mock.MagicMock"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 487, "col_offset": 17, "nodeName": "target", "type": "Any"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 488, "col_offset": 20, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "param1", "type": "Any"}, {"lineNumber": 498, "col_offset": 17, "nodeName": "param", "type": "Any"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "param2", "type": "Any"}, {"lineNumber": 499, "col_offset": 17, "nodeName": "param", "type": "Any"}, {"lineNumber": 518, "col_offset": 21, "nodeName": "Link", "type": "Type[chainer.link.Link]"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "call_record", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "override_pattern", "type": "Any"}, {"lineNumber": 532, "col_offset": 27, "nodeName": "override_pattern", "type": "Any"}, {"lineNumber": 534, "col_offset": 27, "nodeName": "UpdateRule", "type": "Type[chainer.optimizer.UpdateRule]"}, {"lineNumber": 559, "col_offset": 26, "nodeName": "GradientMethod", "type": "Type[chainer.optimizer.GradientMethod]"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 571, "col_offset": 17, "nodeName": "device", "type": "Any"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "override_pattern", "type": "Any"}, {"lineNumber": 572, "col_offset": 27, "nodeName": "override_pattern", "type": "Any"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "param0_data", "type": "Any"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "param0_grad", "type": "Any"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "param1_data", "type": "Any"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "param1_grad", "type": "Any"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "lr", "type": "float"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 640, "col_offset": 17, "nodeName": "target", "type": "Any"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 641, "col_offset": 20, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "expected_data", "type": "Any"}, {"lineNumber": 650, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 666, "col_offset": 28, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 679, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 679, "col_offset": 17, "nodeName": "target", "type": "Any"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "opt", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 694, "col_offset": 20, "nodeName": "test", "type": "Any"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 706, "col_offset": 20, "nodeName": "test", "type": "Any"}, {"lineNumber": 709, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "optimizer", "type": "DummyOptimizer"}, {"lineNumber": 726, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 726, "col_offset": 17, "nodeName": "target", "type": "Any"}, {"lineNumber": 727, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 727, "col_offset": 20, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 736, "col_offset": 8, "nodeName": "context", "type": "warnings._catch_warnings_with_records"}, {"lineNumber": 737, "col_offset": 8, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 769, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "Hyperparameter", "type": "Type[chainer.optimizer.Hyperparameter]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "Hyperparameter", "type": "Type[chainer.optimizer.Hyperparameter]"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "x", "type": "int"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "y", "type": "int"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "y", "type": "int"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "z", "type": "int"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "parent_copy", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "child_copy", "type": "Any"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "parent", "type": "Any"}, {"lineNumber": 72, "col_offset": 41, "nodeName": "parent_copy", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "DummyDeserializer"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "value", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "mock", "type": "module"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "update_core_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "mock", "type": "module"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "update_core_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "mock", "type": "module"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "update_core_chainerx", "type": "Callable[[Any], None]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 10, "nodeName": "chainer", "type": "module"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "grad", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 27, "nodeName": "_create_update_rule", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "_create_var", "type": "Callable[[], Any]"}, {"lineNumber": 141, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "device", "type": "Any"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "var", "type": "Any"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "xp", "type": "Any"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "xp", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "xp", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "check_update", "type": "Any"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "add_hook", "type": "Any"}, {"lineNumber": 173, "col_offset": 34, "nodeName": "hook", "type": "mock.MagicMock"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "check_update", "type": "Any"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "call_count", "type": "int"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "var", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "add_hook", "type": "Any"}, {"lineNumber": 185, "col_offset": 34, "nodeName": "hook", "type": "mock.MagicMock"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "check_update", "type": "Any"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "call_count", "type": "int"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "var", "type": "Any"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "add_hook", "type": "Any"}, {"lineNumber": 197, "col_offset": 34, "nodeName": "hook", "type": "mock.MagicMock"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "remove_hook", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "check_update", "type": "Any"}, {"lineNumber": 200, "col_offset": 26, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "call_count", "type": "int"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "add_hook", "type": "Any"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "foo", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "remove_hook", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "check_update", "type": "Any"}, {"lineNumber": 213, "col_offset": 26, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "call_count", "type": "int"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "add_hook", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 235, "col_offset": 39, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 237, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "call_count", "type": "int"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 241, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "call_count", "type": "int"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 27, "nodeName": "_create_update_rule", "type": "Callable[..., Any]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "target", "type": "Dict[str, Union[int, Any]]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "target", "type": "Dict[str, Union[int, Any]]"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "get_target", "type": "Any"}, {"lineNumber": 260, "col_offset": 33, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Any"}, {"lineNumber": 264, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "get_target", "type": "Any"}, {"lineNumber": 270, "col_offset": 33, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "get_target", "type": "Any"}, {"lineNumber": 276, "col_offset": 33, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 281, "col_offset": 26, "nodeName": "state", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "get_target", "type": "Any"}, {"lineNumber": 286, "col_offset": 33, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 291, "col_offset": 26, "nodeName": "state", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 299, "col_offset": 27, "nodeName": "_create_update_rule", "type": "Callable[..., Any]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 309, "col_offset": 14, "nodeName": "_create_var", "type": "Callable[[], Any]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 310, "col_offset": 22, "nodeName": "device", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 311, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "_create_var", "type": "Callable[[], Any]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 322, "col_offset": 23, "nodeName": "device", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 325, "col_offset": 32, "nodeName": "var1", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "_create_var", "type": "Callable[[], Any]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 330, "col_offset": 23, "nodeName": "device", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 331, "col_offset": 32, "nodeName": "var2", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 337, "col_offset": 25, "nodeName": "Optimizer", "type": "Type[chainer.optimizer.Optimizer]"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "new_epoch", "type": "Callable[..., None]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 341, "col_offset": 28, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "new_epoch", "type": "Callable[..., None]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 351, "col_offset": 28, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 364, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 364, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 365, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 369, "col_offset": 33, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "call_count", "type": "int"}, {"lineNumber": 381, "col_offset": 32, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 385, "col_offset": 19, "nodeName": "chainer", "type": "module"}, {"lineNumber": 394, "col_offset": 15, "nodeName": "Link", "type": "Type[Any]"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 396, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 398, "col_offset": 21, "nodeName": "ChainerxOptimizer", "type": "Type[Any]"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 399, "col_offset": 25, "nodeName": "link", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 402, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 404, "col_offset": 52, "nodeName": "expected_p", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 410, "col_offset": 25, "nodeName": "Optimizer", "type": "Type[chainer.optimizer.Optimizer]"}, {"lineNumber": 411, "col_offset": 22, "nodeName": "SimpleLink", "type": "Type[SimpleLink]"}, {"lineNumber": 416, "col_offset": 13, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 418, "col_offset": 29, "nodeName": "target", "type": "SimpleLink"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 419, "col_offset": 32, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "call_hooks", "type": "Callable[..., None]"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "assert_called_with", "type": "Callable[..., None]"}, {"lineNumber": 421, "col_offset": 30, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 424, "col_offset": 13, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 426, "col_offset": 29, "nodeName": "target", "type": "SimpleLink"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 427, "col_offset": 32, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "call_hooks", "type": "Callable[..., None]"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "assert_called_with", "type": "Callable[..., None]"}, {"lineNumber": 429, "col_offset": 30, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 429, "col_offset": 61, "nodeName": "param", "type": "Any"}, {"lineNumber": 432, "col_offset": 13, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 433, "col_offset": 29, "nodeName": "target", "type": "SimpleLink"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 434, "col_offset": 32, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "remove_hook", "type": "Callable[[Any], None]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "call_hooks", "type": "Callable[..., None]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 437, "col_offset": 25, "nodeName": "called", "type": "bool"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 440, "col_offset": 29, "nodeName": "target", "type": "SimpleLink"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 460, "col_offset": 30, "nodeName": "g", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 467, "col_offset": 25, "nodeName": "GradientMethod", "type": "Type[chainer.optimizer.GradientMethod]"}, {"lineNumber": 468, "col_offset": 22, "nodeName": "ChainList", "type": "Type[chainer.link.ChainList]"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.GradientMethod"}, {"lineNumber": 473, "col_offset": 44, "nodeName": "mock", "type": "module"}, {"lineNumber": 476, "col_offset": 29, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 477, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 478, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "setup", "type": "Any"}, {"lineNumber": 480, "col_offset": 24, "nodeName": "target", "type": "Any"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 482, "col_offset": 25, "nodeName": "call_count", "type": "int"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 487, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 488, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 489, "col_offset": 25, "nodeName": "device", "type": "Any"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "setup", "type": "Any"}, {"lineNumber": 490, "col_offset": 24, "nodeName": "target", "type": "Any"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 492, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 496, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 500, "col_offset": 58, "nodeName": "param1", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 501, "col_offset": 58, "nodeName": "param2", "type": "Any"}, {"lineNumber": 518, "col_offset": 21, "nodeName": "chainer", "type": "module"}, {"lineNumber": 532, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 534, "col_offset": 27, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 559, "col_offset": 26, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 563, "col_offset": 21, "nodeName": "MyOptimizer", "type": "Type[Any]"}, {"lineNumber": 564, "col_offset": 17, "nodeName": "MyLink", "type": "Type[Any]"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 565, "col_offset": 25, "nodeName": "device", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 566, "col_offset": 25, "nodeName": "target", "type": "Any"}, {"lineNumber": 568, "col_offset": 15, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 568, "col_offset": 27, "nodeName": "call_record", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 571, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 572, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 573, "col_offset": 19, "nodeName": "call_record", "type": "Any"}, {"lineNumber": 573, "col_offset": 33, "nodeName": "create", "type": "Any"}, {"lineNumber": 573, "col_offset": 45, "nodeName": "device", "type": "Any"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 580, "col_offset": 11, "nodeName": "override_pattern", "type": "Any"}, {"lineNumber": 581, "col_offset": 12, "nodeName": "method_name", "type": "str"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 606, "col_offset": 44, "nodeName": "method_name", "type": "str"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 607, "col_offset": 44, "nodeName": "method_name", "type": "str"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 608, "col_offset": 44, "nodeName": "method_name", "type": "str"}, {"lineNumber": 620, "col_offset": 22, "nodeName": "astype", "type": "Any"}, {"lineNumber": 620, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 621, "col_offset": 22, "nodeName": "copy", "type": "Any"}, {"lineNumber": 621, "col_offset": 30, "nodeName": "param0_data", "type": "Any"}, {"lineNumber": 622, "col_offset": 22, "nodeName": "astype", "type": "Any"}, {"lineNumber": 622, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 623, "col_offset": 22, "nodeName": "copy", "type": "Any"}, {"lineNumber": 623, "col_offset": 30, "nodeName": "param1_data", "type": "Any"}, {"lineNumber": 624, "col_offset": 22, "nodeName": "ChainList", "type": "Type[chainer.link.ChainList]"}, {"lineNumber": 628, "col_offset": 11, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 629, "col_offset": 12, "nodeName": "lr", "type": "Any"}, {"lineNumber": 629, "col_offset": 17, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 630, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 633, "col_offset": 25, "nodeName": "SGD", "type": "Type[chainer.optimizers.sgd.SGD]"}, {"lineNumber": 633, "col_offset": 48, "nodeName": "lr", "type": "Union[Any, float]"}, {"lineNumber": 636, "col_offset": 11, "nodeName": "device", "type": "Any"}, {"lineNumber": 640, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 641, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 642, "col_offset": 25, "nodeName": "device", "type": "Any"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "setup", "type": "Any"}, {"lineNumber": 643, "col_offset": 24, "nodeName": "target", "type": "Any"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 645, "col_offset": 13, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 645, "col_offset": 38, "nodeName": "param", "type": "Any"}, {"lineNumber": 646, "col_offset": 24, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 646, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "rtol", "type": "float"}, {"lineNumber": 647, "col_offset": 14, "nodeName": "atol", "type": "float"}, {"lineNumber": 648, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 648, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 650, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 660, "col_offset": 22, "nodeName": "SimpleLink", "type": "Type[SimpleLink]"}, {"lineNumber": 668, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 669, "col_offset": 12, "nodeName": "timing", "type": "str"}, {"lineNumber": 679, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 680, "col_offset": 25, "nodeName": "device", "type": "Any"}, {"lineNumber": 682, "col_offset": 14, "nodeName": "SGD", "type": "Type[chainer.optimizers.sgd.SGD]"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 683, "col_offset": 18, "nodeName": "target", "type": "Any"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 687, "col_offset": 8, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "self", "type": "DummyOptimizer"}, {"lineNumber": 697, "col_offset": 15, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "self", "type": "DummyHook"}, {"lineNumber": 709, "col_offset": 21, "nodeName": "params", "type": "Any"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 718, "col_offset": 25, "nodeName": "DummyOptimizer", "type": "Type[DummyOptimizer]"}, {"lineNumber": 718, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 719, "col_offset": 22, "nodeName": "SimpleLink", "type": "Type[SimpleLink]"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 722, "col_offset": 29, "nodeName": "target", "type": "SimpleLink"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 726, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 727, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 728, "col_offset": 25, "nodeName": "device", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "cleargrads", "type": "Any"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 736, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 736, "col_offset": 23, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 737, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 737, "col_offset": 24, "nodeName": "__enter__", "type": "Callable[[], List[warnings.WarningMessage]]"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "filterwarnings", "type": "Callable[..., None]"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "__exit__", "type": "Callable[[Optional[Type[BaseException]], Optional[BaseException], Optional[types.TracebackType]], None]"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "GradientClipping", "type": "Type[chainer.optimizer.GradientClipping]"}, {"lineNumber": 745, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 746, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 746, "col_offset": 22, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 746, "col_offset": 50, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "GradientHardClipping", "type": "Type[chainer.optimizer.GradientHardClipping]"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 751, "col_offset": 22, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 751, "col_offset": 50, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "GradientNoise", "type": "Type[chainer.optimizer.GradientNoise]"}, {"lineNumber": 755, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 756, "col_offset": 22, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 756, "col_offset": 50, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 759, "col_offset": 8, "nodeName": "Lasso", "type": "Type[chainer.optimizer.Lasso]"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 761, "col_offset": 22, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 761, "col_offset": 50, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 764, "col_offset": 8, "nodeName": "WeightDecay", "type": "Type[chainer.optimizer.WeightDecay]"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 766, "col_offset": 22, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 766, "col_offset": 50, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "get_dict", "type": "Callable[[], Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "get_dict", "type": "Callable[[], Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "copy", "type": "module"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 69, "col_offset": 62, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "get_dict", "type": "Callable[[], Any]"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "get_dict", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "get_dict", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "get_dict", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "child_copy", "type": "Any"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "target", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "fallback_device", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "xp", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "mock", "type": "module"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "hook", "type": "mock.MagicMock"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "call_args_list", "type": "mock._CallList"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "args", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "mock", "type": "module"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "hook", "type": "mock.MagicMock"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "call_args_list", "type": "mock._CallList"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "args", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "mock", "type": "module"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "hook", "type": "mock.MagicMock"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "mock", "type": "module"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "hook_body", "type": "mock.MagicMock"}, {"lineNumber": 208, "col_offset": 22, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 208, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 208, "col_offset": 41, "nodeName": "grad", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "hook_body", "type": "mock.MagicMock"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 222, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "add_hook", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 226, "col_offset": 34, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 227, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 227, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "add_hook", "type": "Any"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 231, "col_offset": 31, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "remove_hook", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 235, "col_offset": 39, "nodeName": "mock", "type": "module"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 237, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "update_core", "type": "mock.MagicMock"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 241, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "update_core", "type": "mock.MagicMock"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 256, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 261, "col_offset": 35, "nodeName": "DummyDeserializer", "type": "Type[DummyDeserializer]"}, {"lineNumber": 261, "col_offset": 53, "nodeName": "target", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 263, "col_offset": 45, "nodeName": "target", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 264, "col_offset": 29, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 265, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 265, "col_offset": 54, "nodeName": "target", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 267, "col_offset": 41, "nodeName": "target", "type": "Any"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 272, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 272, "col_offset": 31, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 278, "col_offset": 35, "nodeName": "DummyDeserializer", "type": "Type[DummyDeserializer]"}, {"lineNumber": 278, "col_offset": 53, "nodeName": "target", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 280, "col_offset": 45, "nodeName": "target", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 281, "col_offset": 26, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 288, "col_offset": 35, "nodeName": "DummyDeserializer", "type": "Type[DummyDeserializer]"}, {"lineNumber": 288, "col_offset": 53, "nodeName": "target", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 290, "col_offset": 45, "nodeName": "target", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 291, "col_offset": 26, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 303, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 310, "col_offset": 22, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 316, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "var1", "type": "Any"}, {"lineNumber": 322, "col_offset": 23, "nodeName": "backend_config1", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "var2", "type": "Any"}, {"lineNumber": 330, "col_offset": 23, "nodeName": "backend_config2", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 337, "col_offset": 25, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 341, "col_offset": 28, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 345, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 345, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "new_epoch", "type": "Callable[..., None]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 351, "col_offset": 28, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 354, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 354, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "new_epoch", "type": "Callable[..., None]"}, {"lineNumber": 364, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 364, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 365, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 367, "col_offset": 26, "nodeName": "initial_p", "type": "numpy.ndarray"}, {"lineNumber": 374, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "array", "type": "Any"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "t1", "type": "Any"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "t2", "type": "Any"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "delta", "type": "Any"}, {"lineNumber": 378, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "delta", "type": "Any"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 402, "col_offset": 15, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 404, "col_offset": 37, "nodeName": "array", "type": "Any"}, {"lineNumber": 410, "col_offset": 25, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 416, "col_offset": 13, "nodeName": "mock", "type": "module"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 418, "col_offset": 29, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 421, "col_offset": 30, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 424, "col_offset": 13, "nodeName": "mock", "type": "module"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 426, "col_offset": 29, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 429, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 429, "col_offset": 61, "nodeName": "target", "type": "SimpleLink"}, {"lineNumber": 432, "col_offset": 13, "nodeName": "mock", "type": "module"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 433, "col_offset": 29, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 437, "col_offset": 25, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 440, "col_offset": 29, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 442, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 442, "col_offset": 31, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 443, "col_offset": 12, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 446, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 446, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 450, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 450, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 458, "col_offset": 13, "nodeName": "init_scope", "type": "Callable[..., contextlib._GeneratorContextManager[None]]"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "self", "type": "SimpleLink"}, {"lineNumber": 459, "col_offset": 25, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 459, "col_offset": 43, "nodeName": "w", "type": "Any"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 467, "col_offset": 25, "nodeName": "chainer", "type": "module"}, {"lineNumber": 468, "col_offset": 22, "nodeName": "chainer", "type": "module"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "SimpleLink", "type": "Type[SimpleLink]"}, {"lineNumber": 471, "col_offset": 12, "nodeName": "SimpleLink", "type": "Type[SimpleLink]"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 476, "col_offset": 29, "nodeName": "mock", "type": "module"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 482, "col_offset": 25, "nodeName": "create_update_rule", "type": "mock.MagicMock"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 483, "col_offset": 25, "nodeName": "call_args_list", "type": "mock._CallList"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 484, "col_offset": 25, "nodeName": "call_args_list", "type": "mock._CallList"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 489, "col_offset": 25, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 492, "col_offset": 25, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 496, "col_offset": 25, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 498, "col_offset": 17, "nodeName": "target", "type": "Any"}, {"lineNumber": 499, "col_offset": 17, "nodeName": "target", "type": "Any"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 573, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 577, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 577, "col_offset": 29, "nodeName": "call_record", "type": "Any"}, {"lineNumber": 582, "col_offset": 13, "nodeName": "override_pattern", "type": "Any"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 620, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 621, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 622, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 623, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 624, "col_offset": 22, "nodeName": "chainer", "type": "module"}, {"lineNumber": 625, "col_offset": 12, "nodeName": "SimpleLink", "type": "Type[SimpleLink]"}, {"lineNumber": 625, "col_offset": 23, "nodeName": "param0_data", "type": "Any"}, {"lineNumber": 625, "col_offset": 36, "nodeName": "param0_grad", "type": "Any"}, {"lineNumber": 626, "col_offset": 12, "nodeName": "SimpleLink", "type": "Type[SimpleLink]"}, {"lineNumber": 626, "col_offset": 23, "nodeName": "param1_data", "type": "Any"}, {"lineNumber": 626, "col_offset": 36, "nodeName": "param1_grad", "type": "Any"}, {"lineNumber": 628, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 629, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 630, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 631, "col_offset": 16, "nodeName": "_loss_scale", "type": "Any"}, {"lineNumber": 631, "col_offset": 51, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 633, "col_offset": 25, "nodeName": "optimizers", "type": "module"}, {"lineNumber": 636, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 636, "col_offset": 36, "nodeName": "get_device", "type": "Callable[[Any], chainer._backend.Device]"}, {"lineNumber": 638, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.case.SkipTest]"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 642, "col_offset": 25, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 645, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 646, "col_offset": 24, "nodeName": "xp", "type": "Any"}, {"lineNumber": 646, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 646, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 648, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 648, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 649, "col_offset": 12, "nodeName": "rtol", "type": "float"}, {"lineNumber": 649, "col_offset": 18, "nodeName": "atol", "type": "float"}, {"lineNumber": 651, "col_offset": 12, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 652, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 652, "col_offset": 38, "nodeName": "expected_data", "type": "Any"}, {"lineNumber": 661, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 662, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 675, "col_offset": 20, "nodeName": "param", "type": "Any"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 680, "col_offset": 25, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 682, "col_offset": 14, "nodeName": "optimizers", "type": "module"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "opt", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "opt", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 684, "col_offset": 21, "nodeName": "CleargradHook", "type": "Type[Any]"}, {"lineNumber": 684, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "opt", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 685, "col_offset": 21, "nodeName": "DummyHook", "type": "Type[DummyHook]"}, {"lineNumber": 685, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 687, "col_offset": 8, "nodeName": "opt", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 697, "col_offset": 15, "nodeName": "mock", "type": "module"}, {"lineNumber": 709, "col_offset": 21, "nodeName": "target", "type": "Any"}, {"lineNumber": 711, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Any"}, {"lineNumber": 711, "col_offset": 38, "nodeName": "grad", "type": "Any"}, {"lineNumber": 720, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 720, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 721, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 721, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "optimizer", "type": "DummyOptimizer"}, {"lineNumber": 722, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "optimizer", "type": "DummyOptimizer"}, {"lineNumber": 723, "col_offset": 32, "nodeName": "DummyHook", "type": "Type[DummyHook]"}, {"lineNumber": 723, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 728, "col_offset": 25, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 736, "col_offset": 23, "nodeName": "warnings", "type": "module"}, {"lineNumber": 737, "col_offset": 24, "nodeName": "context", "type": "warnings._catch_warnings_with_records"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 738, "col_offset": 58, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "context", "type": "warnings._catch_warnings_with_records"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 745, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 745, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 745, "col_offset": 29, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 746, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 750, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 750, "col_offset": 29, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 755, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 755, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 755, "col_offset": 29, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 759, "col_offset": 8, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 760, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 760, "col_offset": 29, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 764, "col_offset": 8, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 765, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 765, "col_offset": 29, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 69, "col_offset": 62, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "child_copy", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "parent_copy", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "DummyDeserializer", "type": "Type[DummyDeserializer]"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "self", "type": "DummyDeserializer"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "self", "type": "DummyDeserializer"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "key", "type": "Any"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "copyto", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "value", "type": "Any"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "update_core_chainerx", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "device", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "update_core_chainerx", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "update_core_cpu", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "update_core_gpu", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "cuda", "type": "module"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "hook", "type": "mock.MagicMock"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "hook", "type": "mock.MagicMock"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 223, "col_offset": 38, "nodeName": "CallableWithoutName", "type": "Type[Any]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 34, "nodeName": "mock", "type": "module"}, {"lineNumber": 227, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 228, "col_offset": 38, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 256, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 256, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 264, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 265, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 272, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 273, "col_offset": 39, "nodeName": "DummyDeserializer", "type": "Type[DummyDeserializer]"}, {"lineNumber": 273, "col_offset": 57, "nodeName": "target", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 281, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 291, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 303, "col_offset": 34, "nodeName": "state", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "is_array_supported", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 316, "col_offset": 34, "nodeName": "state", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "is_array_supported", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 341, "col_offset": 28, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 345, "col_offset": 13, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 351, "col_offset": 28, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 354, "col_offset": 13, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 367, "col_offset": 43, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 367, "col_offset": 68, "nodeName": "x", "type": "Any"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "param", "type": "Any"}, {"lineNumber": 377, "col_offset": 24, "nodeName": "t1", "type": "Any"}, {"lineNumber": 377, "col_offset": 29, "nodeName": "t2", "type": "Any"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 383, "col_offset": 23, "nodeName": "ChainerxUpdateRule", "type": "Type[Any]"}, {"lineNumber": 383, "col_offset": 42, "nodeName": "hyperparam", "type": "Any"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 389, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 392, "col_offset": 32, "nodeName": "p", "type": "Any"}, {"lineNumber": 402, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 404, "col_offset": 37, "nodeName": "p", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 429, "col_offset": 30, "nodeName": "target", "type": "SimpleLink"}, {"lineNumber": 429, "col_offset": 61, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 442, "col_offset": 13, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 443, "col_offset": 12, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 446, "col_offset": 13, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 450, "col_offset": 13, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 457, "col_offset": 14, "nodeName": "SimpleLink", "type": "Type[SimpleLink]"}, {"lineNumber": 457, "col_offset": 26, "nodeName": "self", "type": "SimpleLink"}, {"lineNumber": 458, "col_offset": 13, "nodeName": "self", "type": "SimpleLink"}, {"lineNumber": 459, "col_offset": 25, "nodeName": "chainer", "type": "module"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "self", "type": "SimpleLink"}, {"lineNumber": 469, "col_offset": 23, "nodeName": "astype", "type": "Any"}, {"lineNumber": 469, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 470, "col_offset": 23, "nodeName": "astype", "type": "Any"}, {"lineNumber": 470, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 471, "col_offset": 23, "nodeName": "astype", "type": "Any"}, {"lineNumber": 471, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 472, "col_offset": 23, "nodeName": "astype", "type": "Any"}, {"lineNumber": 472, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 483, "col_offset": 25, "nodeName": "create_update_rule", "type": "mock.MagicMock"}, {"lineNumber": 484, "col_offset": 25, "nodeName": "create_update_rule", "type": "mock.MagicMock"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 520, "col_offset": 16, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 522, "col_offset": 20, "nodeName": "p1", "type": "Any"}, {"lineNumber": 526, "col_offset": 20, "nodeName": "grad", "type": "numpy.ndarray"}, {"lineNumber": 561, "col_offset": 23, "nodeName": "MyUpdateRule", "type": "Type[Any]"}, {"lineNumber": 583, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 583, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 583, "col_offset": 34, "nodeName": "ChainerxDevice", "type": "Type[chainer.backends._chainerx.ChainerxDevice]"}, {"lineNumber": 584, "col_offset": 16, "nodeName": "xp", "type": "Any"}, {"lineNumber": 584, "col_offset": 21, "nodeName": "xp", "type": "Any"}, {"lineNumber": 586, "col_offset": 16, "nodeName": "xp", "type": "Any"}, {"lineNumber": 586, "col_offset": 21, "nodeName": "xp", "type": "Any"}, {"lineNumber": 588, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 588, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 589, "col_offset": 16, "nodeName": "method_name", "type": "str"}, {"lineNumber": 592, "col_offset": 16, "nodeName": "method_name", "type": "str"}, {"lineNumber": 593, "col_offset": 13, "nodeName": "override_pattern", "type": "Any"}, {"lineNumber": 602, "col_offset": 26, "nodeName": "override_pattern", "type": "Any"}, {"lineNumber": 606, "col_offset": 25, "nodeName": "call_record", "type": "Any"}, {"lineNumber": 607, "col_offset": 25, "nodeName": "call_record", "type": "Any"}, {"lineNumber": 608, "col_offset": 25, "nodeName": "call_record", "type": "Any"}, {"lineNumber": 620, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 620, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 622, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 622, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 631, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 631, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 633, "col_offset": 25, "nodeName": "chainer", "type": "module"}, {"lineNumber": 636, "col_offset": 36, "nodeName": "chainer", "type": "module"}, {"lineNumber": 638, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 645, "col_offset": 38, "nodeName": "target", "type": "Any"}, {"lineNumber": 646, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 651, "col_offset": 12, "nodeName": "testing", "type": "module"}, {"lineNumber": 652, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 653, "col_offset": 21, "nodeName": "rtol", "type": "float"}, {"lineNumber": 653, "col_offset": 32, "nodeName": "atol", "type": "float"}, {"lineNumber": 675, "col_offset": 29, "nodeName": "params", "type": "Any"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 693, "col_offset": 14, "nodeName": "DummyOptimizer", "type": "Type[DummyOptimizer]"}, {"lineNumber": 693, "col_offset": 30, "nodeName": "self", "type": "DummyOptimizer"}, {"lineNumber": 709, "col_offset": 21, "nodeName": "opt", "type": "Any"}, {"lineNumber": 711, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 711, "col_offset": 38, "nodeName": "param", "type": "Any"}, {"lineNumber": 720, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 721, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 737, "col_offset": 24, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "chainer", "type": "module"}, {"lineNumber": 745, "col_offset": 29, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 746, "col_offset": 22, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "chainer", "type": "module"}, {"lineNumber": 750, "col_offset": 29, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 751, "col_offset": 22, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "chainer", "type": "module"}, {"lineNumber": 755, "col_offset": 29, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 756, "col_offset": 22, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 759, "col_offset": 8, "nodeName": "chainer", "type": "module"}, {"lineNumber": 760, "col_offset": 29, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 761, "col_offset": 22, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 764, "col_offset": 8, "nodeName": "chainer", "type": "module"}, {"lineNumber": 765, "col_offset": 29, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 766, "col_offset": 22, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "target", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "update_core_cpu", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "update_core_gpu", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 228, "col_offset": 38, "nodeName": "mock", "type": "module"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 256, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 265, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 303, "col_offset": 34, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "device", "type": "Any"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 316, "col_offset": 34, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "device", "type": "Any"}, {"lineNumber": 319, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 375, "col_offset": 21, "nodeName": "as_grad_stopped", "type": "Any"}, {"lineNumber": 376, "col_offset": 21, "nodeName": "as_grad_stopped", "type": "Any"}, {"lineNumber": 383, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 388, "col_offset": 21, "nodeName": "init_scope", "type": "Callable[..., contextlib._GeneratorContextManager[None]]"}, {"lineNumber": 389, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 389, "col_offset": 29, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 389, "col_offset": 47, "nodeName": "initial_p", "type": "numpy.ndarray"}, {"lineNumber": 392, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 392, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 402, "col_offset": 15, "nodeName": "link", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 404, "col_offset": 37, "nodeName": "link", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 429, "col_offset": 30, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 443, "col_offset": 12, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 469, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 470, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 471, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 472, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "param1", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "param2", "type": "Any"}, {"lineNumber": 521, "col_offset": 21, "nodeName": "init_scope", "type": "Callable[..., contextlib._GeneratorContextManager[None]]"}, {"lineNumber": 522, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 522, "col_offset": 30, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 524, "col_offset": 30, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 526, "col_offset": 20, "nodeName": "p2", "type": "Any"}, {"lineNumber": 526, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 526, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 528, "col_offset": 30, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 537, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 583, "col_offset": 34, "nodeName": "backend", "type": "module"}, {"lineNumber": 584, "col_offset": 21, "nodeName": "fallback_device", "type": "Any"}, {"lineNumber": 586, "col_offset": 21, "nodeName": "device", "type": "Any"}, {"lineNumber": 591, "col_offset": 23, "nodeName": "xp", "type": "Any"}, {"lineNumber": 591, "col_offset": 29, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 594, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 594, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 594, "col_offset": 34, "nodeName": "ChainerxDevice", "type": "Type[chainer.backends._chainerx.ChainerxDevice]"}, {"lineNumber": 595, "col_offset": 16, "nodeName": "method_name", "type": "str"}, {"lineNumber": 620, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 620, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 622, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 622, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 661, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 662, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 675, "col_offset": 29, "nodeName": "target", "type": "Any"}, {"lineNumber": 677, "col_offset": 20, "nodeName": "cleargrad", "type": "Any"}, {"lineNumber": 711, "col_offset": 12, "nodeName": "self", "type": "DummyHook"}, {"lineNumber": 720, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 721, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 746, "col_offset": 22, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 751, "col_offset": 22, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 756, "col_offset": 22, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 761, "col_offset": 22, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 766, "col_offset": 22, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "self", "type": "DummyDeserializer"}, {"lineNumber": 88, "col_offset": 41, "nodeName": "key", "type": "Any"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "target", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 303, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 316, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "backend_config2", "type": "Any"}, {"lineNumber": 319, "col_offset": 20, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 367, "col_offset": 43, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 375, "col_offset": 21, "nodeName": "array", "type": "Any"}, {"lineNumber": 376, "col_offset": 21, "nodeName": "grad", "type": "Any"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 387, "col_offset": 22, "nodeName": "Link", "type": "Type[Any]"}, {"lineNumber": 387, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 388, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 389, "col_offset": 29, "nodeName": "chainer", "type": "module"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 412, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 413, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 469, "col_offset": 23, "nodeName": "arange", "type": "Any"}, {"lineNumber": 470, "col_offset": 23, "nodeName": "arange", "type": "Any"}, {"lineNumber": 471, "col_offset": 23, "nodeName": "arange", "type": "Any"}, {"lineNumber": 472, "col_offset": 23, "nodeName": "arange", "type": "Any"}, {"lineNumber": 520, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 520, "col_offset": 22, "nodeName": "MyLink", "type": "Type[Any]"}, {"lineNumber": 520, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 521, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 522, "col_offset": 30, "nodeName": "chainer", "type": "module"}, {"lineNumber": 524, "col_offset": 30, "nodeName": "chainer", "type": "module"}, {"lineNumber": 525, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 525, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 526, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 526, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 526, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 528, "col_offset": 30, "nodeName": "chainer", "type": "module"}, {"lineNumber": 529, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 529, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 537, "col_offset": 20, "nodeName": "call_record", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 537, "col_offset": 55, "nodeName": "param", "type": "Any"}, {"lineNumber": 541, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 544, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 584, "col_offset": 21, "nodeName": "device", "type": "Any"}, {"lineNumber": 591, "col_offset": 29, "nodeName": "cuda", "type": "module"}, {"lineNumber": 594, "col_offset": 34, "nodeName": "backend", "type": "module"}, {"lineNumber": 596, "col_offset": 17, "nodeName": "xp", "type": "Any"}, {"lineNumber": 596, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 597, "col_offset": 16, "nodeName": "method_name", "type": "str"}, {"lineNumber": 600, "col_offset": 16, "nodeName": "method_name", "type": "str"}, {"lineNumber": 620, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 622, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 631, "col_offset": 16, "nodeName": "target", "type": "chainer.link.ChainList"}, {"lineNumber": 652, "col_offset": 16, "nodeName": "target", "type": "Any"}, {"lineNumber": 661, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 661, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 662, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 662, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 675, "col_offset": 29, "nodeName": "opt", "type": "Any"}, {"lineNumber": 677, "col_offset": 20, "nodeName": "param", "type": "Any"}, {"lineNumber": 720, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 721, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "self", "type": "DummyDeserializer"}, {"lineNumber": 90, "col_offset": 55, "nodeName": "key", "type": "Any"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 319, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 367, "col_offset": 43, "nodeName": "backend", "type": "module"}, {"lineNumber": 375, "col_offset": 21, "nodeName": "param", "type": "Any"}, {"lineNumber": 376, "col_offset": 21, "nodeName": "param", "type": "Any"}, {"lineNumber": 412, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 413, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 469, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 470, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 471, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 472, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 525, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 525, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 529, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 529, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 541, "col_offset": 20, "nodeName": "call_record", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 541, "col_offset": 59, "nodeName": "param", "type": "Any"}, {"lineNumber": 544, "col_offset": 20, "nodeName": "call_record", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 544, "col_offset": 59, "nodeName": "param", "type": "Any"}, {"lineNumber": 548, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 551, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 554, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 596, "col_offset": 17, "nodeName": "device", "type": "Any"}, {"lineNumber": 599, "col_offset": 23, "nodeName": "xp", "type": "Any"}, {"lineNumber": 599, "col_offset": 36, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 631, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 631, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 652, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 661, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 662, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 548, "col_offset": 20, "nodeName": "call_record", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 548, "col_offset": 59, "nodeName": "param", "type": "Any"}, {"lineNumber": 551, "col_offset": 20, "nodeName": "call_record", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 551, "col_offset": 59, "nodeName": "param", "type": "Any"}, {"lineNumber": 554, "col_offset": 20, "nodeName": "call_record", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 554, "col_offset": 64, "nodeName": "param", "type": "Any"}, {"lineNumber": 599, "col_offset": 23, "nodeName": "device", "type": "Any"}, {"lineNumber": 599, "col_offset": 36, "nodeName": "cuda", "type": "module"}]