[{"lineNumber": 83, "col_offset": 0, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 155, "col_offset": 0, "nodeName": "get_device_from_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 0, "nodeName": "get_device_from_array", "type": "Callable[..., Any]"}, {"lineNumber": 194, "col_offset": 0, "nodeName": "get_device", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 0, "nodeName": "_get_device", "type": "Callable[..., Any]"}, {"lineNumber": 248, "col_offset": 0, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 291, "col_offset": 0, "nodeName": "_array_to_gpu", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 342, "col_offset": 0, "nodeName": "to_cpu", "type": "Callable[..., Any]"}, {"lineNumber": 376, "col_offset": 0, "nodeName": "_array_to_cpu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 394, "col_offset": 0, "nodeName": "copy", "type": "Callable[..., Any]"}, {"lineNumber": 433, "col_offset": 0, "nodeName": "memoize", "type": "Callable[..., Any]"}, {"lineNumber": 457, "col_offset": 0, "nodeName": "clear_memo", "type": "Callable[[], Any]"}, {"lineNumber": 472, "col_offset": 0, "nodeName": "elementwise", "type": "Callable[..., Any]"}, {"lineNumber": 490, "col_offset": 0, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 510, "col_offset": 0, "nodeName": "raw", "type": "Callable[..., Any]"}, {"lineNumber": 528, "col_offset": 0, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 552, "col_offset": 0, "nodeName": "get_max_workspace_size", "type": "Callable[[], Any]"}, {"lineNumber": 567, "col_offset": 0, "nodeName": "set_max_workspace_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 581, "col_offset": 0, "nodeName": "fuse", "type": "Callable[..., Any]"}, {"lineNumber": 609, "col_offset": 0, "nodeName": "should_use_cudnn", "type": "Callable[..., Any]"}, {"lineNumber": 647, "col_offset": 0, "nodeName": "should_use_cudnn_tensor_core", "type": "Callable[[Any], Any]"}, {"lineNumber": 672, "col_offset": 0, "nodeName": "get_cudnn_dropout_states", "type": "Callable[[], Any]"}, {"lineNumber": 683, "col_offset": 0, "nodeName": "get_cudnn_dropout_states_core", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "available", "type": "bool"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "cudnn_enabled", "type": "bool"}, {"lineNumber": 73, "col_offset": 3, "nodeName": "available", "type": "bool"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "__int__", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "__enter__", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "__exit__", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "use", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "synchronize", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "__eq__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "__ne__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "DummyDevice", "type": "DummyDeviceType"}, {"lineNumber": 143, "col_offset": 3, "nodeName": "available", "type": "bool"}, {"lineNumber": 149, "col_offset": 0, "nodeName": "_integer_types", "type": "Tuple[Any, ...]"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "dummy_decorator", "type": "Callable[[Any], Any]"}, {"lineNumber": 606, "col_offset": 0, "nodeName": "_cudnn_version", "type": "Any"}, {"lineNumber": 644, "col_offset": 0, "nodeName": "_tensor_core_flag", "type": "Dict[str, Optional[bool]]"}, {"lineNumber": 680, "col_offset": 0, "nodeName": "_dropout_states_count", "type": "Iterator[int]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "available", "type": "bool"}, {"lineNumber": 64, "col_offset": 7, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "_cudnn_disabled_by_user", "type": "bool"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "id", "type": "int"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "DummyDeviceType", "type": "Type[DummyDeviceType]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "memory_pool", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "pinned_memory_pool", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "integer_types", "type": "Tuple[Type[int]]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "arrays", "type": "Tuple[Any]"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "DummyDevice", "type": "DummyDeviceType"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "arg", "type": "Any"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "DummyDevice", "type": "DummyDeviceType"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "array_dev", "type": "Any"}, {"lineNumber": 427, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 446, "col_offset": 7, "nodeName": "available", "type": "bool"}, {"lineNumber": 454, "col_offset": 11, "nodeName": "dummy_decorator", "type": "Callable[[Any], Any]"}, {"lineNumber": 465, "col_offset": 7, "nodeName": "available", "type": "bool"}, {"lineNumber": 562, "col_offset": 7, "nodeName": "cudnn_enabled", "type": "bool"}, {"lineNumber": 577, "col_offset": 7, "nodeName": "cudnn_enabled", "type": "bool"}, {"lineNumber": 591, "col_offset": 7, "nodeName": "available", "type": "bool"}, {"lineNumber": 606, "col_offset": 44, "nodeName": "cudnn_enabled", "type": "bool"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "flags", "type": "Dict[str, bool]"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 636, "col_offset": 16, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 657, "col_offset": 4, "nodeName": "use_cudnn_tensor_core", "type": "Any"}, {"lineNumber": 657, "col_offset": 28, "nodeName": "use_cudnn_tensor_core", "type": "Any"}, {"lineNumber": 662, "col_offset": 4, "nodeName": "use_tensor_core", "type": "Optional[bool]"}, {"lineNumber": 665, "col_offset": 11, "nodeName": "use_tensor_core", "type": "Any"}, {"lineNumber": 676, "col_offset": 4, "nodeName": "thread_id", "type": "Any"}, {"lineNumber": 676, "col_offset": 16, "nodeName": "ident", "type": "Any"}, {"lineNumber": 680, "col_offset": 24, "nodeName": "count", "type": "Callable[..., Iterator[int]]"}, {"lineNumber": 685, "col_offset": 4, "nodeName": "states_id", "type": "int"}, {"lineNumber": 686, "col_offset": 4, "nodeName": "seed", "type": "Optional[str]"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "handle", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "_resolution_error", "type": "Exception"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "e", "type": "Exception"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "cupy", "type": "object"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "cudnn_enabled", "type": "bool"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "available", "type": "bool"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "msg", "type": "str"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "msg", "type": "str"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "_already_warned", "type": "bool"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "self", "type": "DummyDeviceType"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "get_default_memory_pool", "type": "Any"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "get_default_pinned_memory_pool", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "six", "type": "module"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "integer", "type": "Any"}, {"lineNumber": 162, "col_offset": 7, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "DummyDevice", "type": "DummyDeviceType"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 225, "col_offset": 53, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "_get_device", "type": "Callable[..., Any]"}, {"lineNumber": 267, "col_offset": 7, "nodeName": "stream", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 273, "col_offset": 32, "nodeName": "device_", "type": "Any"}, {"lineNumber": 293, "col_offset": 7, "nodeName": "array", "type": "Any"}, {"lineNumber": 296, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 296, "col_offset": 18, "nodeName": "array", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 306, "col_offset": 16, "nodeName": "get_device_from_array", "type": "Callable[..., Any]"}, {"lineNumber": 306, "col_offset": 38, "nodeName": "array", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 307, "col_offset": 7, "nodeName": "id", "type": "Any"}, {"lineNumber": 308, "col_offset": 15, "nodeName": "array", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 335, "col_offset": 7, "nodeName": "id", "type": "Any"}, {"lineNumber": 339, "col_offset": 11, "nodeName": "array", "type": "Any"}, {"lineNumber": 339, "col_offset": 22, "nodeName": "array", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 359, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 359, "col_offset": 18, "nodeName": "array", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "d", "type": "Dict[int, Optional[Union[Any, numpy.ndarray]]]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "ret", "type": "List[Optional[Union[Any, numpy.ndarray]]]"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "arr", "type": "Any"}, {"lineNumber": 362, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 377, "col_offset": 7, "nodeName": "array", "type": "Any"}, {"lineNumber": 379, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 379, "col_offset": 18, "nodeName": "array", "type": "Any"}, {"lineNumber": 379, "col_offset": 25, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 416, "col_offset": 11, "nodeName": "stream", "type": "Any"}, {"lineNumber": 418, "col_offset": 7, "nodeName": "out", "type": "Any"}, {"lineNumber": 453, "col_offset": 15, "nodeName": "ret", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 486, "col_offset": 11, "nodeName": "ElementwiseKernel", "type": "Any"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "in_params", "type": "Any"}, {"lineNumber": 487, "col_offset": 19, "nodeName": "out_params", "type": "Any"}, {"lineNumber": 487, "col_offset": 31, "nodeName": "operation", "type": "Any"}, {"lineNumber": 487, "col_offset": 42, "nodeName": "name", "type": "Any"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 505, "col_offset": 11, "nodeName": "ReductionKernel", "type": "Any"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "in_params", "type": "Any"}, {"lineNumber": 506, "col_offset": 19, "nodeName": "out_params", "type": "Any"}, {"lineNumber": 506, "col_offset": 31, "nodeName": "map_expr", "type": "Any"}, {"lineNumber": 506, "col_offset": 41, "nodeName": "reduce_expr", "type": "Any"}, {"lineNumber": 506, "col_offset": 54, "nodeName": "post_map_expr", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "identity", "type": "Any"}, {"lineNumber": 507, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 521, "col_offset": 4, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 522, "col_offset": 11, "nodeName": "RawKernel", "type": "Any"}, {"lineNumber": 522, "col_offset": 26, "nodeName": "code", "type": "Any"}, {"lineNumber": 522, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 549, "col_offset": 11, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 606, "col_offset": 17, "nodeName": "getVersion", "type": "Any"}, {"lineNumber": 627, "col_offset": 7, "nodeName": "_cudnn_version", "type": "Any"}, {"lineNumber": 627, "col_offset": 24, "nodeName": "lowest_version", "type": "Any"}, {"lineNumber": 630, "col_offset": 7, "nodeName": "level", "type": "Any"}, {"lineNumber": 630, "col_offset": 20, "nodeName": "_SHOULD_USE_CUDNN", "type": "Dict[str, Dict[str, bool]]"}, {"lineNumber": 634, "col_offset": 12, "nodeName": "_SHOULD_USE_CUDNN", "type": "Dict[str, Dict[str, bool]]"}, {"lineNumber": 636, "col_offset": 16, "nodeName": "config", "type": "chainer.configuration.LocalConfig"}, {"lineNumber": 637, "col_offset": 7, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 637, "col_offset": 24, "nodeName": "flags", "type": "Dict[str, bool]"}, {"lineNumber": 641, "col_offset": 11, "nodeName": "flags", "type": "Dict[str, bool]"}, {"lineNumber": 657, "col_offset": 28, "nodeName": "config", "type": "chainer.configuration.LocalConfig"}, {"lineNumber": 658, "col_offset": 7, "nodeName": "use_cudnn_tensor_core", "type": "Any"}, {"lineNumber": 658, "col_offset": 36, "nodeName": "_tensor_core_flag", "type": "Dict[str, Optional[bool]]"}, {"lineNumber": 662, "col_offset": 22, "nodeName": "_tensor_core_flag", "type": "Dict[str, Optional[bool]]"}, {"lineNumber": 663, "col_offset": 7, "nodeName": "use_tensor_core", "type": "Any"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "use_tensor_core", "type": "Any"}, {"lineNumber": 673, "col_offset": 11, "nodeName": "cudnn_enabled", "type": "bool"}, {"lineNumber": 677, "col_offset": 11, "nodeName": "get_cudnn_dropout_states_core", "type": "Any"}, {"lineNumber": 677, "col_offset": 41, "nodeName": "thread_id", "type": "Any"}, {"lineNumber": 680, "col_offset": 24, "nodeName": "itertools", "type": "module"}, {"lineNumber": 685, "col_offset": 16, "nodeName": "next", "type": "Callable"}, {"lineNumber": 685, "col_offset": 21, "nodeName": "_dropout_states_count", "type": "Iterator[int]"}, {"lineNumber": 686, "col_offset": 11, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 687, "col_offset": 7, "nodeName": "seed", "type": "Optional[str]"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 696, "col_offset": 12, "nodeName": "uint64", "type": "Any"}, {"lineNumber": 696, "col_offset": 25, "nodeName": "states_id", "type": "int"}, {"lineNumber": 697, "col_offset": 13, "nodeName": "get_handle", "type": "Any"}, {"lineNumber": 698, "col_offset": 11, "nodeName": "DropoutStates", "type": "Any"}, {"lineNumber": 698, "col_offset": 31, "nodeName": "handle", "type": "Any"}, {"lineNumber": 698, "col_offset": 39, "nodeName": "seed", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "_cudnn_disabled_by_user", "type": "bool"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "_resolution_error", "type": "Exception"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "e", "type": "Exception"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "_resolution_error", "type": "Exception"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "msg", "type": "str"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "cudnn_enabled", "type": "bool"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "_cudnn_disabled_by_user", "type": "bool"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "DummyDeviceType", "type": "Type[DummyDeviceType]"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "numpy", "type": "module"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "Device", "type": "Any"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "device", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "warnings", "type": "module"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "arg", "type": "Any"}, {"lineNumber": 234, "col_offset": 27, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "device", "type": "Any"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "available", "type": "bool"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "arg", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 270, "col_offset": 33, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 273, "col_offset": 9, "nodeName": "_get_device", "type": "Callable[..., Any]"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "device", "type": "Any"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 274, "col_offset": 22, "nodeName": "array", "type": "Any"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "d", "type": "Dict[int, Any]"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "arr", "type": "Any"}, {"lineNumber": 277, "col_offset": 23, "nodeName": "array", "type": "Any"}, {"lineNumber": 292, "col_offset": 11, "nodeName": "device", "type": "Any"}, {"lineNumber": 292, "col_offset": 21, "nodeName": "DummyDevice", "type": "DummyDeviceType"}, {"lineNumber": 292, "col_offset": 36, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 292, "col_offset": 47, "nodeName": "device", "type": "Any"}, {"lineNumber": 292, "col_offset": 55, "nodeName": "Device", "type": "Any"}, {"lineNumber": 296, "col_offset": 26, "nodeName": "number", "type": "Any"}, {"lineNumber": 296, "col_offset": 40, "nodeName": "bool_", "type": "Any"}, {"lineNumber": 297, "col_offset": 16, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 297, "col_offset": 30, "nodeName": "array", "type": "Any"}, {"lineNumber": 298, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 298, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "mdarray", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 301, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "array", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 302, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 307, "col_offset": 7, "nodeName": "array_dev", "type": "Any"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "get_device_id", "type": "Any"}, {"lineNumber": 310, "col_offset": 7, "nodeName": "stream", "type": "Any"}, {"lineNumber": 310, "col_offset": 30, "nodeName": "ptr", "type": "Any"}, {"lineNumber": 311, "col_offset": 14, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 311, "col_offset": 30, "nodeName": "array", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 312, "col_offset": 11, "nodeName": "id", "type": "Any"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "mem", "type": "Any"}, {"lineNumber": 317, "col_offset": 23, "nodeName": "array", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 335, "col_offset": 7, "nodeName": "array_dev", "type": "Any"}, {"lineNumber": 336, "col_offset": 15, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 336, "col_offset": 28, "nodeName": "array", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 339, "col_offset": 11, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 359, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 359, "col_offset": 32, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 371, "col_offset": 27, "nodeName": "ret", "type": "List[Optional[Union[Any, numpy.ndarray]]]"}, {"lineNumber": 373, "col_offset": 15, "nodeName": "_array_to_cpu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 373, "col_offset": 29, "nodeName": "array", "type": "Any"}, {"lineNumber": 373, "col_offset": 36, "nodeName": "stream", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 383, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 383, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 419, "col_offset": 11, "nodeName": "out_device", "type": "Any"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "out_device", "type": "Any"}, {"lineNumber": 420, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 424, "col_offset": 9, "nodeName": "get_device_from_array", "type": "Callable[..., Any]"}, {"lineNumber": 424, "col_offset": 31, "nodeName": "array", "type": "Any"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "copyto", "type": "Any"}, {"lineNumber": 425, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 425, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 447, "col_offset": 15, "nodeName": "memoize", "type": "Any"}, {"lineNumber": 447, "col_offset": 28, "nodeName": "for_each_device", "type": "bool"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "clear_memo", "type": "Any"}, {"lineNumber": 486, "col_offset": 11, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 487, "col_offset": 50, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 505, "col_offset": 11, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 507, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 522, "col_offset": 11, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 522, "col_offset": 39, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 522, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 549, "col_offset": 11, "nodeName": "backend", "type": "module"}, {"lineNumber": 549, "col_offset": 45, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 563, "col_offset": 15, "nodeName": "get_max_workspace_size", "type": "Any"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "set_max_workspace_size", "type": "Any"}, {"lineNumber": 578, "col_offset": 37, "nodeName": "size", "type": "Any"}, {"lineNumber": 592, "col_offset": 15, "nodeName": "fuse", "type": "Any"}, {"lineNumber": 594, "col_offset": 25, "nodeName": "f", "type": "Any"}, {"lineNumber": 606, "col_offset": 17, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 631, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 634, "col_offset": 30, "nodeName": "level", "type": "Any"}, {"lineNumber": 638, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 641, "col_offset": 17, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 659, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 662, "col_offset": 40, "nodeName": "use_cudnn_tensor_core", "type": "Any"}, {"lineNumber": 664, "col_offset": 26, "nodeName": "is_tensor_core_available", "type": "Any"}, {"lineNumber": 664, "col_offset": 57, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 674, "col_offset": 14, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 676, "col_offset": 16, "nodeName": "current_thread", "type": "Callable[[], threading.Thread]"}, {"lineNumber": 686, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 689, "col_offset": 12, "nodeName": "seed_str", "type": "str"}, {"lineNumber": 690, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 691, "col_offset": 15, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 694, "col_offset": 15, "nodeName": "uint64", "type": "Any"}, {"lineNumber": 694, "col_offset": 28, "nodeName": "seed", "type": "Optional[str]"}, {"lineNumber": 696, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 697, "col_offset": 13, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 698, "col_offset": 11, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "get", "type": "Callable"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "self", "type": "DummyDeviceType"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "other", "type": "Any"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "array", "type": "Any"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 189, "col_offset": 42, "nodeName": "device", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 231, "col_offset": 28, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 231, "col_offset": 37, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 231, "col_offset": 48, "nodeName": "arg", "type": "Any"}, {"lineNumber": 231, "col_offset": 53, "nodeName": "_integer_types", "type": "Tuple[Any, ...]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 233, "col_offset": 19, "nodeName": "Device", "type": "Any"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "arg", "type": "Any"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "arg", "type": "Any"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 238, "col_offset": 36, "nodeName": "arg", "type": "Any"}, {"lineNumber": 238, "col_offset": 41, "nodeName": "Device", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 274, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 274, "col_offset": 36, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 286, "col_offset": 31, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 288, "col_offset": 19, "nodeName": "_array_to_gpu", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 288, "col_offset": 33, "nodeName": "array", "type": "Any"}, {"lineNumber": 288, "col_offset": 40, "nodeName": "device_", "type": "Any"}, {"lineNumber": 288, "col_offset": 49, "nodeName": "stream", "type": "Any"}, {"lineNumber": 296, "col_offset": 26, "nodeName": "numpy", "type": "module"}, {"lineNumber": 296, "col_offset": 40, "nodeName": "numpy", "type": "module"}, {"lineNumber": 297, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "intel64", "type": "module"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 299, "col_offset": 30, "nodeName": "array", "type": "Any"}, {"lineNumber": 301, "col_offset": 30, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 301, "col_offset": 44, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "device", "type": "Any"}, {"lineNumber": 310, "col_offset": 30, "nodeName": "stream", "type": "Any"}, {"lineNumber": 311, "col_offset": 14, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 312, "col_offset": 11, "nodeName": "array_dev", "type": "Any"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "alloc_pinned_memory", "type": "Any"}, {"lineNumber": 314, "col_offset": 48, "nodeName": "nbytes", "type": "Union[int, Any]"}, {"lineNumber": 316, "col_offset": 54, "nodeName": "shape", "type": "Union[Tuple[int, ...], Any]"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "src", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "set", "type": "Any"}, {"lineNumber": 318, "col_offset": 20, "nodeName": "src", "type": "Any"}, {"lineNumber": 318, "col_offset": 25, "nodeName": "stream", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "_add_to_watch_list", "type": "Any"}, {"lineNumber": 320, "col_offset": 33, "nodeName": "mem", "type": "Any"}, {"lineNumber": 323, "col_offset": 17, "nodeName": "array_dev", "type": "Any"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "src", "type": "Any"}, {"lineNumber": 325, "col_offset": 16, "nodeName": "event", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "wait_event", "type": "Any"}, {"lineNumber": 326, "col_offset": 30, "nodeName": "event", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "copy_from_device_async", "type": "Any"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 328, "col_offset": 26, "nodeName": "nbytes", "type": "Any"}, {"lineNumber": 328, "col_offset": 38, "nodeName": "stream", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "add_callback", "type": "Any"}, {"lineNumber": 336, "col_offset": 15, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "arr", "type": "Any"}, {"lineNumber": 366, "col_offset": 16, "nodeName": "arr2", "type": "None"}, {"lineNumber": 371, "col_offset": 15, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 371, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 381, "col_offset": 13, "nodeName": "get_device_from_array", "type": "Callable[..., Any]"}, {"lineNumber": 381, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 382, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 382, "col_offset": 29, "nodeName": "stream", "type": "Any"}, {"lineNumber": 383, "col_offset": 28, "nodeName": "number", "type": "Any"}, {"lineNumber": 383, "col_offset": 42, "nodeName": "bool_", "type": "Any"}, {"lineNumber": 384, "col_offset": 15, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 384, "col_offset": 29, "nodeName": "array", "type": "Any"}, {"lineNumber": 385, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 385, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 386, "col_offset": 15, "nodeName": "array", "type": "Any"}, {"lineNumber": 421, "col_offset": 13, "nodeName": "_get_device", "type": "Callable[..., Any]"}, {"lineNumber": 421, "col_offset": 25, "nodeName": "out_device", "type": "Any"}, {"lineNumber": 422, "col_offset": 18, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 422, "col_offset": 34, "nodeName": "array", "type": "Any"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 447, "col_offset": 15, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 452, "col_offset": 19, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 549, "col_offset": 11, "nodeName": "chainer", "type": "module"}, {"lineNumber": 563, "col_offset": 15, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 592, "col_offset": 15, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 592, "col_offset": 26, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 592, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 606, "col_offset": 17, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 664, "col_offset": 26, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 676, "col_offset": 16, "nodeName": "threading", "type": "module"}, {"lineNumber": 689, "col_offset": 23, "nodeName": "hexlify", "type": "Callable[[Union[str, unicode]], str]"}, {"lineNumber": 690, "col_offset": 19, "nodeName": "uint64", "type": "Any"}, {"lineNumber": 692, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 694, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 189, "col_offset": 42, "nodeName": "array", "type": "Any"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "arg", "type": "Any"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "arg", "type": "Any"}, {"lineNumber": 278, "col_offset": 19, "nodeName": "arr", "type": "Any"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "arr2", "type": "None"}, {"lineNumber": 286, "col_offset": 19, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 286, "col_offset": 24, "nodeName": "array", "type": "Any"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 301, "col_offset": 30, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 301, "col_offset": 44, "nodeName": "numpy", "type": "module"}, {"lineNumber": 304, "col_offset": 41, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 304, "col_offset": 46, "nodeName": "array", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 314, "col_offset": 48, "nodeName": "array", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 316, "col_offset": 54, "nodeName": "array", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "pinned_memory", "type": "Any"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "record", "type": "Any"}, {"lineNumber": 324, "col_offset": 22, "nodeName": "copy", "type": "Any"}, {"lineNumber": 325, "col_offset": 24, "nodeName": "record", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "stream", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "src", "type": "Any"}, {"lineNumber": 328, "col_offset": 26, "nodeName": "src", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "stream", "type": "Any"}, {"lineNumber": 332, "col_offset": 50, "nodeName": "src", "type": "Any"}, {"lineNumber": 332, "col_offset": 55, "nodeName": "ret", "type": "Any"}, {"lineNumber": 364, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 366, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 367, "col_offset": 19, "nodeName": "arr2", "type": "None"}, {"lineNumber": 368, "col_offset": 20, "nodeName": "arr2", "type": "Optional[Union[Any, numpy.ndarray]]"}, {"lineNumber": 369, "col_offset": 33, "nodeName": "arr2", "type": "Optional[Union[numpy.ndarray, Any]]"}, {"lineNumber": 370, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 370, "col_offset": 27, "nodeName": "arr2", "type": "Optional[Union[numpy.ndarray, Any]]"}, {"lineNumber": 382, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 383, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 383, "col_offset": 42, "nodeName": "numpy", "type": "module"}, {"lineNumber": 384, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 385, "col_offset": 27, "nodeName": "get_cpu_array_types", "type": "Callable[[], Any]"}, {"lineNumber": 388, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 422, "col_offset": 18, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 452, "col_offset": 22, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 452, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 633, "col_offset": 25, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 633, "col_offset": 30, "nodeName": "level", "type": "Any"}, {"lineNumber": 640, "col_offset": 25, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 640, "col_offset": 30, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 661, "col_offset": 25, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 661, "col_offset": 30, "nodeName": "use_cudnn_tensor_core", "type": "Any"}, {"lineNumber": 689, "col_offset": 23, "nodeName": "binascii", "type": "module"}, {"lineNumber": 689, "col_offset": 40, "nodeName": "urandom", "type": "Callable[[int], str]"}, {"lineNumber": 690, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 690, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 690, "col_offset": 36, "nodeName": "seed_str", "type": "str"}, {"lineNumber": 692, "col_offset": 19, "nodeName": "uint64", "type": "Any"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 279, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 281, "col_offset": 27, "nodeName": "get", "type": "Callable"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "arr2", "type": "None"}, {"lineNumber": 283, "col_offset": 24, "nodeName": "arr2", "type": "Any"}, {"lineNumber": 284, "col_offset": 37, "nodeName": "arr2", "type": "Any"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 285, "col_offset": 31, "nodeName": "arr2", "type": "Any"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 315, "col_offset": 18, "nodeName": "frombuffer", "type": "Any"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "mem", "type": "Any"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 316, "col_offset": 34, "nodeName": "size", "type": "Union[int, Any]"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "stream", "type": "Any"}, {"lineNumber": 324, "col_offset": 22, "nodeName": "array", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 325, "col_offset": 24, "nodeName": "null", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 364, "col_offset": 16, "nodeName": "ret", "type": "List[Optional[Union[Any, numpy.ndarray]]]"}, {"lineNumber": 366, "col_offset": 23, "nodeName": "d", "type": "Dict[int, Optional[Union[Any, numpy.ndarray]]]"}, {"lineNumber": 366, "col_offset": 29, "nodeName": "id", "type": "Callable[[Any], int]"}, {"lineNumber": 366, "col_offset": 32, "nodeName": "arr", "type": "Any"}, {"lineNumber": 368, "col_offset": 27, "nodeName": "_array_to_cpu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 368, "col_offset": 41, "nodeName": "arr", "type": "Any"}, {"lineNumber": 368, "col_offset": 46, "nodeName": "stream", "type": "Any"}, {"lineNumber": 369, "col_offset": 20, "nodeName": "d", "type": "Dict[int, Optional[Union[Any, numpy.ndarray]]]"}, {"lineNumber": 370, "col_offset": 16, "nodeName": "ret", "type": "List[Optional[Union[Any, numpy.ndarray]]]"}, {"lineNumber": 385, "col_offset": 27, "nodeName": "chainer", "type": "module"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 689, "col_offset": 40, "nodeName": "os", "type": "module"}, {"lineNumber": 692, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 279, "col_offset": 20, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 281, "col_offset": 27, "nodeName": "d", "type": "Dict[int, Any]"}, {"lineNumber": 281, "col_offset": 33, "nodeName": "id", "type": "Callable[[Any], int]"}, {"lineNumber": 281, "col_offset": 36, "nodeName": "arr", "type": "Any"}, {"lineNumber": 283, "col_offset": 31, "nodeName": "_array_to_gpu", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 283, "col_offset": 45, "nodeName": "arr", "type": "Any"}, {"lineNumber": 283, "col_offset": 50, "nodeName": "device_", "type": "Any"}, {"lineNumber": 283, "col_offset": 59, "nodeName": "stream", "type": "Any"}, {"lineNumber": 284, "col_offset": 24, "nodeName": "d", "type": "Dict[int, Any]"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 315, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "array", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 316, "col_offset": 34, "nodeName": "array", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 325, "col_offset": 24, "nodeName": "Stream", "type": "Any"}, {"lineNumber": 391, "col_offset": 41, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 391, "col_offset": 46, "nodeName": "array", "type": "Any"}, {"lineNumber": 692, "col_offset": 32, "nodeName": "clock", "type": "Callable[[], float]"}, {"lineNumber": 369, "col_offset": 22, "nodeName": "id", "type": "Callable[[Any], int]"}, {"lineNumber": 369, "col_offset": 25, "nodeName": "arr", "type": "Any"}, {"lineNumber": 692, "col_offset": 32, "nodeName": "time", "type": "module"}, {"lineNumber": 284, "col_offset": 26, "nodeName": "id", "type": "Callable[[Any], int]"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "arr", "type": "Any"}]