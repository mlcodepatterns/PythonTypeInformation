[{"lineNumber": 30, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "check_forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "test_forward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "test_forward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "test_backward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "test_backward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "check_double_backward", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "test_double_backward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "test_double_backward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "test_multiple_ellipsis", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "test_too_many_indices", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "test_requires_broadcasting", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "a_data_original", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "b_data", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "check_double_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "a", "type": "chainer.variable.Variable"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "b", "type": "chainer.variable.Variable"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "a_data_copy", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "default_debug", "type": "bool"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "a_data", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "b_data", "type": "Any"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "copy", "type": "Any"}, {"lineNumber": 38, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "astype", "type": "Any"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 41, "col_offset": 45, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 43, "col_offset": 45, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 48, "col_offset": 51, "nodeName": "float64", "type": "Any"}, {"lineNumber": 49, "col_offset": 58, "nodeName": "float64", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.variable.Variable]"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "a_data", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.variable.Variable]"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "b_data", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "scatter_add", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "a", "type": "chainer.variable.Variable"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "slices", "type": "Any"}, {"lineNumber": 54, "col_offset": 50, "nodeName": "b", "type": "chainer.variable.Variable"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 57, "col_offset": 56, "nodeName": "a_data_original", "type": "Any"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "copy", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "at", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "a_data_copy", "type": "Any"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "slices", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "a_data_copy", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "check_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "a_data", "type": "Any"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "b_data", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "check_forward", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "check_backward", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "y_grad", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "a_data", "type": "Any"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "b_data", "type": "Any"}, {"lineNumber": 78, "col_offset": 54, "nodeName": "gy_data", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "check_backward", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "check_double_backward", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "y_grad", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "check_double_backward", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "a_data", "type": "Any"}, {"lineNumber": 95, "col_offset": 48, "nodeName": "b_data", "type": "Any"}, {"lineNumber": 95, "col_offset": 61, "nodeName": "gy_data", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "gga_data", "type": "Any"}, {"lineNumber": 96, "col_offset": 50, "nodeName": "ggb_data", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "check_double_backward", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestInvalidScatterAdd"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "is_debug", "type": "Callable[[], bool]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "set_debug", "type": "Callable[[Any], None]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestInvalidScatterAdd"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "TestInvalidScatterAdd"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "set_debug", "type": "Callable[[Any], None]"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "default_debug", "type": "bool"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "a_data", "type": "Any"}, {"lineNumber": 38, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "b_data", "type": "Any"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 48, "col_offset": 51, "nodeName": "numpy", "type": "module"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 49, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "to_cpu", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 47, "nodeName": "data", "type": "Any"}, {"lineNumber": 57, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 47, "nodeName": "to_cpu", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 59, "nodeName": "b_data", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "to_cpu", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 60, "nodeName": "data", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "a_data", "type": "Any"}, {"lineNumber": 68, "col_offset": 53, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 65, "nodeName": "b_data", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "scatter_add", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 41, "nodeName": "a", "type": "Any"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "slices", "type": "Any"}, {"lineNumber": 72, "col_offset": 57, "nodeName": "b", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "a_data", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "b_data", "type": "Any"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 40, "nodeName": "a_data", "type": "Any"}, {"lineNumber": 82, "col_offset": 54, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 66, "nodeName": "b_data", "type": "Any"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 40, "nodeName": "gy_data", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "scatter_add", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 41, "nodeName": "a", "type": "Any"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "slices", "type": "Any"}, {"lineNumber": 88, "col_offset": 57, "nodeName": "b", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "a_data", "type": "Any"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "b_data", "type": "Any"}, {"lineNumber": 91, "col_offset": 42, "nodeName": "a_grad_grad", "type": "Any"}, {"lineNumber": 91, "col_offset": 55, "nodeName": "b_grad_grad", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "check_double_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "a_data", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "b_data", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 47, "nodeName": "gy_data", "type": "Any"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 47, "nodeName": "gga_data", "type": "Any"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 47, "nodeName": "ggb_data", "type": "Any"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "chainer", "type": "module"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "chainer", "type": "module"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "chainer", "type": "module"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "self", "type": "TestInvalidScatterAdd"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "scatter_add", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "a_data", "type": "Any"}, {"lineNumber": 122, "col_offset": 51, "nodeName": "b_data", "type": "Any"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "InvalidType", "type": "Type[chainer.utils.type_check.InvalidType]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "scatter_add", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 34, "nodeName": "a_data", "type": "Any"}, {"lineNumber": 126, "col_offset": 61, "nodeName": "b_data", "type": "Any"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 129, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "scatter_add", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "a_data", "type": "Any"}, {"lineNumber": 130, "col_offset": 60, "nodeName": "b_data", "type": "Any"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 57, "col_offset": 47, "nodeName": "a", "type": "chainer.variable.Variable"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "to_cpu", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "a_data", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 60, "col_offset": 47, "nodeName": "cuda", "type": "module"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "cuda", "type": "module"}, {"lineNumber": 61, "col_offset": 60, "nodeName": "y", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "cuda", "type": "module"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 53, "nodeName": "cuda", "type": "module"}, {"lineNumber": 68, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "cuda", "type": "module"}, {"lineNumber": 82, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 54, "nodeName": "cuda", "type": "module"}, {"lineNumber": 82, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "cuda", "type": "module"}, {"lineNumber": 83, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 102, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 103, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 104, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "self", "type": "TestInvalidScatterAdd"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "self", "type": "TestInvalidScatterAdd"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "Ellipsis", "type": "ellipsis"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "Ellipsis", "type": "ellipsis"}, {"lineNumber": 122, "col_offset": 51, "nodeName": "self", "type": "TestInvalidScatterAdd"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "self", "type": "TestInvalidScatterAdd"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "type_check", "type": "module"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 126, "col_offset": 34, "nodeName": "self", "type": "TestInvalidScatterAdd"}, {"lineNumber": 126, "col_offset": 61, "nodeName": "self", "type": "TestInvalidScatterAdd"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "self", "type": "TestInvalidScatterAdd"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "self", "type": "TestInvalidScatterAdd"}, {"lineNumber": 130, "col_offset": 47, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 130, "col_offset": 60, "nodeName": "self", "type": "TestInvalidScatterAdd"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "a_data", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "b_data", "type": "Any"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "cuda", "type": "module"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "numpy", "type": "module"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "numpy", "type": "module"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "self", "type": "Any"}]