[{"lineNumber": 47, "col_offset": 21, "nodeName": "FunctionTestCase", "type": "Type[chainer.testing.function.FunctionTestCase]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "generate_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "forward_expected", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "check_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "test_forward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "test_forward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "test_backward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "test_backward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "check_double_backward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "test_double_backward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "test_double_backward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "testing", "type": "module"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "unittest", "type": "module"}, {"lineNumber": 148, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "check_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 148, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 55, "col_offset": 59, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "pad", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "pad_width", "type": "Any"}, {"lineNumber": 60, "col_offset": 45, "nodeName": "mode", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "pad", "type": "Any"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "pad_width", "type": "Any"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "mode", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 89, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 92, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 93, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 48, "nodeName": "float64", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "pad", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 100, "col_offset": 34, "nodeName": "pad_width", "type": "Any"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "pad", "type": "Any"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 39, "nodeName": "pad_width", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "check_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "check_forward", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "check_backward", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "gy_data", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "check_backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "gy", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "check_backward", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "check_double_backward", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "gy_data", "type": "Any"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "ggx_data", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "check_double_backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 140, "col_offset": 43, "nodeName": "gy", "type": "Any"}, {"lineNumber": 140, "col_offset": 52, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "check_double_backward", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 55, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "numpy", "type": "module"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 89, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "pad", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 90, "col_offset": 38, "nodeName": "pad_width", "type": "Any"}, {"lineNumber": 92, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 100, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 55, "nodeName": "mode", "type": "Any"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "constant_values", "type": "Any"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "numpy", "type": "module"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 60, "nodeName": "mode", "type": "Any"}, {"lineNumber": 103, "col_offset": 47, "nodeName": "constant_values", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "pad", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 128, "col_offset": 49, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 128, "col_offset": 61, "nodeName": "gy", "type": "Any"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "pad", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 137, "col_offset": 44, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 145, "col_offset": 45, "nodeName": "gy", "type": "Any"}, {"lineNumber": 145, "col_offset": 55, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 145, "col_offset": 67, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "check_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 89, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "numpy", "type": "module"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 59, "nodeName": "mode", "type": "Any"}, {"lineNumber": 91, "col_offset": 46, "nodeName": "constant_values", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 92, "col_offset": 46, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 93, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 100, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "cuda", "type": "module"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "pad_width", "type": "Any"}, {"lineNumber": 117, "col_offset": 50, "nodeName": "mode", "type": "Any"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "constant_values", "type": "Any"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "cuda", "type": "module"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 49, "nodeName": "cuda", "type": "module"}, {"lineNumber": 128, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "pad_width", "type": "Any"}, {"lineNumber": 133, "col_offset": 50, "nodeName": "mode", "type": "Any"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "constant_values", "type": "Any"}, {"lineNumber": 137, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "cuda", "type": "module"}, {"lineNumber": 145, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 55, "nodeName": "cuda", "type": "module"}, {"lineNumber": 145, "col_offset": 67, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 89, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 93, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "numpy", "type": "module"}]