[{"lineNumber": 15, "col_offset": 17, "nodeName": "distribution_unittest", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "setUp_configure", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "sample_for_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "check_sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "test_sample_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "test_sample_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "testing", "type": "module"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "scipy_onebyone", "type": "bool"}, {"lineNumber": 65, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "dist", "type": "Type[chainer.distributions.pareto.Pareto]"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "Pareto", "type": "Type[chainer.distributions.pareto.Pareto]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "scipy_dist", "type": "Any"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "pareto", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "params", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "scipy_params", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "support", "type": "str"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "smp", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "is_gpu", "type": "Any"}, {"lineNumber": 65, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "distributions", "type": "module"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "stats", "type": "Any"}, {"lineNumber": 24, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 29, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "scale", "type": "numpy.ndarray"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "scale", "type": "numpy.ndarray"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 38, "nodeName": "scale", "type": "numpy.ndarray"}, {"lineNumber": 34, "col_offset": 50, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 61, "nodeName": "float32", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "smp1", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "rvs", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "check_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "check_sample", "type": "Any"}, {"lineNumber": 29, "col_offset": 39, "nodeName": "numpy", "type": "module"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "numpy", "type": "module"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "scale", "type": "Any"}, {"lineNumber": 32, "col_offset": 45, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 32, "col_offset": 59, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 40, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "smp1", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "scipy_dist", "type": "Any"}, {"lineNumber": 52, "col_offset": 59, "nodeName": "scipy_params", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "median", "type": "Any"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "smp1", "type": "Any"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "median", "type": "Any"}, {"lineNumber": 54, "col_offset": 45, "nodeName": "smp2", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 32, "col_offset": 45, "nodeName": "numpy", "type": "module"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "pareto", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "cuda", "type": "module"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 52, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "numpy", "type": "module"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "numpy", "type": "module"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "gpu_dist", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "cpu_dist", "type": "Any"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "sample_shape", "type": "Any"}, {"lineNumber": 52, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "random", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "random", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "sample_shape", "type": "Any"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "sample_shape", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "sample_shape", "type": "Any"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "numpy", "type": "module"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "numpy", "type": "module"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "self", "type": "Any"}]