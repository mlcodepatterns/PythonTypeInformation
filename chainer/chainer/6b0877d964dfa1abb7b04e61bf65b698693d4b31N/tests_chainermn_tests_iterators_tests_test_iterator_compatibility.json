[{"lineNumber": 19, "col_offset": 22, "nodeName": "Serializer", "type": "Type[chainer.serializer.Serializer]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "__getitem__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "Deserializer", "type": "Type[chainer.serializer.Deserializer]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "__getitem__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "test_iterator_compatibility", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "serializer", "type": "module"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "serializer", "type": "module"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "chainer", "type": "module"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "value", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "chainer", "type": "module"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "communicator", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "N", "type": "int"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "bs", "type": "int"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "bs_n_ratio", "type": "float"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "iters", "type": "Tuple[Callable[[], Any], Callable[[], Any]]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "it", "type": "Union[chainermn.iterators.multi_node_iterator._MultiNodeIteratorMaster, chainermn.iterators.multi_node_iterator._MultiNodeIteratorSlave]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "target", "type": "Dict[nothing, nothing]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "it", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "DummySerializer"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "target", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "DummyDeserializer"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "value", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "create_communicator", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "size", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "astype", "type": "Any"}, {"lineNumber": 68, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "N", "type": "int"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "it_before", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "it_after", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "it_before", "type": "Callable[[], Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 38, "nodeName": "bs", "type": "int"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 91, "col_offset": 38, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "bs", "type": "int"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "serialize", "type": "Callable[[Any], None]"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "it_after", "type": "Callable[[], Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "next", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 38, "nodeName": "bs", "type": "int"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "DummySerializer"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "key", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "self", "type": "DummySerializer"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "target", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "iterator_class", "type": "Any"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "MultiprocessIterator", "type": "Type[chainer.iterators.multiprocess_iterator.MultiprocessIterator]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "skip", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "chainermn", "type": "module"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "communicator", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "skip", "type": "Any"}, {"lineNumber": 68, "col_offset": 51, "nodeName": "numpy", "type": "module"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "bs", "type": "int"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "it", "type": "Union[chainermn.iterators.multi_node_iterator._MultiNodeIteratorSlave, chainermn.iterators.multi_node_iterator._MultiNodeIteratorMaster]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "it", "type": "Union[chainermn.iterators.multi_node_iterator._MultiNodeIteratorSlave, chainermn.iterators.multi_node_iterator._MultiNodeIteratorMaster]"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "bs_n_ratio", "type": "float"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "it", "type": "Union[chainermn.iterators.multi_node_iterator._MultiNodeIteratorSlave, chainermn.iterators.multi_node_iterator._MultiNodeIteratorMaster]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 90, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "it", "type": "Union[chainermn.iterators.multi_node_iterator._MultiNodeIteratorSlave, chainermn.iterators.multi_node_iterator._MultiNodeIteratorMaster]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "it", "type": "Union[chainermn.iterators.multi_node_iterator._MultiNodeIteratorSlave, chainermn.iterators.multi_node_iterator._MultiNodeIteratorMaster]"}, {"lineNumber": 93, "col_offset": 52, "nodeName": "bs_n_ratio", "type": "float"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "it", "type": "Union[chainermn.iterators.multi_node_iterator._MultiNodeIteratorSlave, chainermn.iterators.multi_node_iterator._MultiNodeIteratorMaster]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "it", "type": "Union[chainermn.iterators.multi_node_iterator._MultiNodeIteratorSlave, chainermn.iterators.multi_node_iterator._MultiNodeIteratorMaster]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "it", "type": "Union[chainermn.iterators.multi_node_iterator._MultiNodeIteratorSlave, chainermn.iterators.multi_node_iterator._MultiNodeIteratorMaster]"}, {"lineNumber": 98, "col_offset": 52, "nodeName": "bs_n_ratio", "type": "float"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "it", "type": "Union[chainermn.iterators.multi_node_iterator._MultiNodeIteratorSlave, chainermn.iterators.multi_node_iterator._MultiNodeIteratorMaster]"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "DummySerializer", "type": "Type[DummySerializer]"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "target", "type": "Dict[nothing, nothing]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "it", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "DummyDeserializer", "type": "Type[DummyDeserializer]"}, {"lineNumber": 104, "col_offset": 39, "nodeName": "target", "type": "Dict[nothing, nothing]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "it", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "it", "type": "Any"}, {"lineNumber": 106, "col_offset": 52, "nodeName": "bs_n_ratio", "type": "float"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "it", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 109, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "it", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "it", "type": "Any"}, {"lineNumber": 115, "col_offset": 52, "nodeName": "bs_n_ratio", "type": "float"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "DummySerializer", "type": "Type[DummySerializer]"}, {"lineNumber": 22, "col_offset": 31, "nodeName": "self", "type": "DummySerializer"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "DummyDeserializer", "type": "Type[DummyDeserializer]"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "self", "type": "DummyDeserializer"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "self", "type": "DummyDeserializer"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "key", "type": "Any"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "numpy", "type": "module"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "copyto", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "iterators", "type": "module"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "arange", "type": "Any"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "N", "type": "int"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "create_multi_node_iterator", "type": "Callable[..., Union[chainermn.iterators.multi_node_iterator._MultiNodeIteratorMaster, chainermn.iterators.multi_node_iterator._MultiNodeIteratorSlave]]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "communicator", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "iterator_class", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "target", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "chainer", "type": "module"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "iterators", "type": "module"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "iterator_class", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "bs", "type": "int"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "self", "type": "DummyDeserializer"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "key", "type": "Any"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "numpy", "type": "module"}, {"lineNumber": 48, "col_offset": 46, "nodeName": "target", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "python_version_tuple", "type": "Callable[[], Tuple[str, str, str]]"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "chainermn", "type": "module"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 45, "nodeName": "bs", "type": "int"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 46, "nodeName": "self", "type": "DummyDeserializer"}, {"lineNumber": 48, "col_offset": 58, "nodeName": "key", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "platform", "type": "module"}, {"lineNumber": 75, "col_offset": 45, "nodeName": "self", "type": "Any"}]