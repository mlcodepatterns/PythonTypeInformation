[{"lineNumber": 17, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "check_kl", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "encode_params", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "make_bernoulli_dist", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "make_beta_dist", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "make_categorical_dist", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "make_dirichlet_dist", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "make_exponential_dist", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "make_gamma_dist", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "make_geometric_dist", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "make_gumbel_dist", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "make_laplace_dist", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "make_log_normal_dist", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "make_normal_dist", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "make_multivariatenormal_dist", "type": "Callable[..., Any]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "make_one_hot_categorical_dist", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "make_pareto_dist", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "make_poisson_dist", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "test_bernoulli_bernoulli_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "test_bernoulli_bernoulli_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "test_beta_beta_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "test_beta_beta_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "test_categorical_categorical_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "test_categorical_categorical_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "test_dirichlet_dirichlet_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "test_dirichlet_dirichlet_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "test_exponential_exponential_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "test_exponential_exponential_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "test_gamma_gamma_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "test_gamma_gamma_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "test_geometric_geometric_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "test_geometric_geometric_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "test_gumbel_gumbel_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "test_gumbel_gumbel_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "test_laplace_laplace_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "test_laplace_laplace_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "test_log_normal_log_normal_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "test_log_normal_log_normal_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "test_normal_normal_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "test_normal_normal_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "test_multivariatenormal_multivariatenormal_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "test_multivariatenormal_multivariatenormal_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "test_one_hot_categorical_one_hot_categorical_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "test_one_hot_categorical_one_hot_categorical_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "test_pareto_pareto_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "test_pareto_pareto_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "test_poisson_poisson_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "test_poisson_poisson_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "test_uniform_uniform_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "test_uniform_uniform_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 363, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 363, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 363, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "kl", "type": "Any"}, {"lineNumber": 20, "col_offset": 13, "nodeName": "data", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "mc_kl", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "mc_kl", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "is_gpu", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "is_variable", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "params", "type": "Union[Dict[Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "theta", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "mu", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "use_log_scale", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "cov", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "cov", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "cov", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "scale_tril", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "lam", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "use_loc_scale", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "dist1", "type": "chainer.distributions.bernoulli.Bernoulli"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "dist2", "type": "chainer.distributions.bernoulli.Bernoulli"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "dist1", "type": "chainer.distributions.exponential.Exponential"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "dist2", "type": "chainer.distributions.exponential.Exponential"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "dist1", "type": "chainer.distributions.geometric.Geometric"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "dist2", "type": "chainer.distributions.geometric.Geometric"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "dist1", "type": "chainer.distributions.laplace.Laplace"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "dist2", "type": "chainer.distributions.laplace.Laplace"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "dist1", "type": "chainer.distributions.log_normal.LogNormal"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "dist2", "type": "chainer.distributions.log_normal.LogNormal"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "use_log_scale1", "type": "bool"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "use_log_scale1", "type": "bool"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "dist1", "type": "chainer.distributions.one_hot_categorical.OneHotCategorical"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "dist2", "type": "chainer.distributions.one_hot_categorical.OneHotCategorical"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "dist1", "type": "chainer.distributions.pareto.Pareto"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "dist2", "type": "chainer.distributions.pareto.Pareto"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "use_loc_scale1", "type": "bool"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "use_loc_scale1", "type": "bool"}, {"lineNumber": 363, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "kl", "type": "Any"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "kl", "type": "Any"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 25, "col_offset": 46, "nodeName": "data", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "mc_kl", "type": "Any"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "mc_kl", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "nanmean", "type": "Any"}, {"lineNumber": 28, "col_offset": 30, "nodeName": "mc_kl", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 32, "nodeName": "kl", "type": "Any"}, {"lineNumber": 30, "col_offset": 36, "nodeName": "mc_kl", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 42, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "encode_params", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 46, "nodeName": "is_gpu", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "Bernoulli", "type": "Type[chainer.distributions.bernoulli.Bernoulli]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 47, "col_offset": 61, "nodeName": "float32", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 48, "col_offset": 61, "nodeName": "float32", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "encode_params", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 54, "nodeName": "is_gpu", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "Beta", "type": "Type[chainer.distributions.beta.Beta]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 53, "col_offset": 61, "nodeName": "float32", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "exp", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "p", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "encode_params", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 46, "nodeName": "is_gpu", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "Categorical", "type": "Type[chainer.distributions.categorical.Categorical]"}, {"lineNumber": 61, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "encode_params", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 54, "nodeName": "is_gpu", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "Dirichlet", "type": "Type[chainer.distributions.dirichlet.Dirichlet]"}, {"lineNumber": 67, "col_offset": 61, "nodeName": "float32", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "encode_params", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 50, "nodeName": "is_gpu", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "Exponential", "type": "Type[chainer.distributions.exponential.Exponential]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 72, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 73, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "encode_params", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 62, "nodeName": "is_gpu", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "Gamma", "type": "Type[chainer.distributions.gamma.Gamma]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 78, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "encode_params", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 46, "nodeName": "is_gpu", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "Geometric", "type": "Type[chainer.distributions.geometric.Geometric]"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "astype", "type": "Any"}, {"lineNumber": 83, "col_offset": 61, "nodeName": "float32", "type": "Any"}, {"lineNumber": 85, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "encode_params", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 66, "nodeName": "is_gpu", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "Gumbel", "type": "Type[chainer.distributions.gumbel.Gumbel]"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "astype", "type": "Any"}, {"lineNumber": 90, "col_offset": 61, "nodeName": "float32", "type": "Any"}, {"lineNumber": 92, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "encode_params", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 66, "nodeName": "is_gpu", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "Laplace", "type": "Type[chainer.distributions.laplace.Laplace]"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 97, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 99, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "encode_params", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 64, "nodeName": "is_gpu", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "LogNormal", "type": "Type[chainer.distributions.log_normal.LogNormal]"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "astype", "type": "Any"}, {"lineNumber": 104, "col_offset": 61, "nodeName": "float32", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "Normal", "type": "Type[chainer.distributions.normal.Normal]"}, {"lineNumber": 118, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "normal", "type": "Any"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "astype", "type": "Any"}, {"lineNumber": 122, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "encode_params", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 52, "nodeName": "is_gpu", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "MultivariateNormal", "type": "Type[chainer.distributions.multivariate_normal.MultivariateNormal]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 128, "col_offset": 61, "nodeName": "float32", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "exp", "type": "Any"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "p", "type": "Any"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "encode_params", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 46, "nodeName": "is_gpu", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "OneHotCategorical", "type": "Type[chainer.distributions.one_hot_categorical.OneHotCategorical]"}, {"lineNumber": 136, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 138, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "encode_params", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 70, "nodeName": "is_gpu", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "Pareto", "type": "Type[chainer.distributions.pareto.Pareto]"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "astype", "type": "Any"}, {"lineNumber": 143, "col_offset": 61, "nodeName": "float32", "type": "Any"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "encode_params", "type": "Callable[..., Any]"}, {"lineNumber": 144, "col_offset": 50, "nodeName": "is_gpu", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "Poisson", "type": "Type[chainer.distributions.poisson.Poisson]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "Uniform", "type": "Type[chainer.distributions.uniform.Uniform]"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "make_bernoulli_dist", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "make_bernoulli_dist", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "check_kl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "dist1", "type": "chainer.distributions.bernoulli.Bernoulli"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "dist2", "type": "chainer.distributions.bernoulli.Bernoulli"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "make_bernoulli_dist", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "make_bernoulli_dist", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "make_beta_dist", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "make_beta_dist", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "make_beta_dist", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "make_beta_dist", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 188, "col_offset": 22, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "make_categorical_dist", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "make_categorical_dist", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "make_categorical_dist", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "make_categorical_dist", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 200, "col_offset": 22, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "make_dirichlet_dist", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "make_dirichlet_dist", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 206, "col_offset": 22, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "make_dirichlet_dist", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "make_dirichlet_dist", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 212, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "make_exponential_dist", "type": "Callable[..., Any]"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "make_exponential_dist", "type": "Callable[..., Any]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "check_kl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 217, "col_offset": 22, "nodeName": "dist1", "type": "chainer.distributions.exponential.Exponential"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "dist2", "type": "chainer.distributions.exponential.Exponential"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "make_exponential_dist", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "make_exponential_dist", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "make_gamma_dist", "type": "Any"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "make_gamma_dist", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "make_gamma_dist", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "make_gamma_dist", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 235, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "make_geometric_dist", "type": "Callable[..., Any]"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "make_geometric_dist", "type": "Callable[..., Any]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "check_kl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 240, "col_offset": 22, "nodeName": "dist1", "type": "chainer.distributions.geometric.Geometric"}, {"lineNumber": 240, "col_offset": 29, "nodeName": "dist2", "type": "chainer.distributions.geometric.Geometric"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "make_geometric_dist", "type": "Any"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "make_geometric_dist", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 246, "col_offset": 22, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "make_gumbel_dist", "type": "Any"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "make_gumbel_dist", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 252, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "make_gumbel_dist", "type": "Any"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "make_gumbel_dist", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 258, "col_offset": 22, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 258, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "make_laplace_dist", "type": "Callable[..., Any]"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "make_laplace_dist", "type": "Callable[..., Any]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "check_kl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 263, "col_offset": 22, "nodeName": "dist1", "type": "chainer.distributions.laplace.Laplace"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "dist2", "type": "chainer.distributions.laplace.Laplace"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "make_laplace_dist", "type": "Any"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "make_laplace_dist", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 269, "col_offset": 22, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 269, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "make_log_normal_dist", "type": "Callable[..., Any]"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "make_log_normal_dist", "type": "Callable[..., Any]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "check_kl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 274, "col_offset": 22, "nodeName": "dist1", "type": "chainer.distributions.log_normal.LogNormal"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "dist2", "type": "chainer.distributions.log_normal.LogNormal"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "make_log_normal_dist", "type": "Any"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "make_log_normal_dist", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 280, "col_offset": 22, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 280, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "use_log_scale2", "type": "bool"}, {"lineNumber": 292, "col_offset": 16, "nodeName": "use_log_scale2", "type": "bool"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "make_multivariatenormal_dist", "type": "Any"}, {"lineNumber": 302, "col_offset": 16, "nodeName": "make_multivariatenormal_dist", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 303, "col_offset": 22, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 303, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 307, "col_offset": 16, "nodeName": "make_multivariatenormal_dist", "type": "Any"}, {"lineNumber": 308, "col_offset": 16, "nodeName": "make_multivariatenormal_dist", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 309, "col_offset": 22, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 309, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "make_one_hot_categorical_dist", "type": "Callable[..., Any]"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "make_one_hot_categorical_dist", "type": "Callable[..., Any]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "check_kl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 314, "col_offset": 22, "nodeName": "dist1", "type": "chainer.distributions.one_hot_categorical.OneHotCategorical"}, {"lineNumber": 314, "col_offset": 29, "nodeName": "dist2", "type": "chainer.distributions.one_hot_categorical.OneHotCategorical"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "make_one_hot_categorical_dist", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "make_one_hot_categorical_dist", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 320, "col_offset": 22, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "make_pareto_dist", "type": "Callable[..., Any]"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "make_pareto_dist", "type": "Callable[..., Any]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "check_kl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 325, "col_offset": 22, "nodeName": "dist1", "type": "chainer.distributions.pareto.Pareto"}, {"lineNumber": 325, "col_offset": 29, "nodeName": "dist2", "type": "chainer.distributions.pareto.Pareto"}, {"lineNumber": 329, "col_offset": 16, "nodeName": "make_pareto_dist", "type": "Any"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "make_pareto_dist", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 331, "col_offset": 22, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 331, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 335, "col_offset": 16, "nodeName": "make_poisson_dist", "type": "Any"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "make_poisson_dist", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 337, "col_offset": 22, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 337, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "make_poisson_dist", "type": "Any"}, {"lineNumber": 342, "col_offset": 16, "nodeName": "make_poisson_dist", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 343, "col_offset": 22, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 343, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "use_loc_scale2", "type": "bool"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "use_loc_scale2", "type": "bool"}, {"lineNumber": 20, "col_offset": 13, "nodeName": "kl_divergence", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 20, "col_offset": 35, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 20, "col_offset": 42, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "cuda", "type": "module"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "get", "type": "Any"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "cuda", "type": "module"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 42, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 42, "nodeName": "p", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "distributions", "type": "module"}, {"lineNumber": 44, "col_offset": 41, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 48, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 42, "nodeName": "a", "type": "Any"}, {"lineNumber": 49, "col_offset": 50, "nodeName": "b", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "distributions", "type": "module"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "p", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "distributions", "type": "module"}, {"lineNumber": 57, "col_offset": 43, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 61, "col_offset": 47, "nodeName": "numpy", "type": "module"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 46, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "distributions", "type": "module"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 44, "nodeName": "lam", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "distributions", "type": "module"}, {"lineNumber": 69, "col_offset": 43, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 73, "col_offset": 62, "nodeName": "numpy", "type": "module"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "k", "type": "Any"}, {"lineNumber": 74, "col_offset": 54, "nodeName": "theta", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "distributions", "type": "module"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "p", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "distributions", "type": "module"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 85, "col_offset": 59, "nodeName": "numpy", "type": "module"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "loc", "type": "Any"}, {"lineNumber": 86, "col_offset": 58, "nodeName": "scale", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "distributions", "type": "module"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 92, "col_offset": 60, "nodeName": "numpy", "type": "module"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 44, "nodeName": "loc", "type": "Any"}, {"lineNumber": 93, "col_offset": 58, "nodeName": "scale", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "distributions", "type": "module"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 97, "col_offset": 60, "nodeName": "numpy", "type": "module"}, {"lineNumber": 99, "col_offset": 60, "nodeName": "numpy", "type": "module"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "mu", "type": "Any"}, {"lineNumber": 100, "col_offset": 56, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "distributions", "type": "module"}, {"lineNumber": 101, "col_offset": 41, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 104, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "encode_params", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 54, "nodeName": "is_gpu", "type": "Any"}, {"lineNumber": 112, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "encode_params", "type": "Callable[..., Any]"}, {"lineNumber": 113, "col_offset": 70, "nodeName": "is_gpu", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "distributions", "type": "module"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 118, "col_offset": 45, "nodeName": "numpy", "type": "module"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "dot", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "T", "type": "Any"}, {"lineNumber": 120, "col_offset": 36, "nodeName": "cov_", "type": "Any"}, {"lineNumber": 120, "col_offset": 44, "nodeName": "cov", "type": "Any"}, {"lineNumber": 121, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 122, "col_offset": 55, "nodeName": "numpy", "type": "module"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "loc", "type": "Any"}, {"lineNumber": 124, "col_offset": 39, "nodeName": "scale_tril", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "distributions", "type": "module"}, {"lineNumber": 125, "col_offset": 50, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 128, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "p", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "distributions", "type": "module"}, {"lineNumber": 132, "col_offset": 49, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 136, "col_offset": 40, "nodeName": "numpy", "type": "module"}, {"lineNumber": 138, "col_offset": 38, "nodeName": "numpy", "type": "module"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 46, "nodeName": "scale", "type": "Any"}, {"lineNumber": 139, "col_offset": 62, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "distributions", "type": "module"}, {"lineNumber": 140, "col_offset": 38, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 143, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 44, "nodeName": "lam", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "distributions", "type": "module"}, {"lineNumber": 145, "col_offset": 39, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "loc", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "scale", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "encode_params", "type": "Callable[..., Any]"}, {"lineNumber": 156, "col_offset": 70, "nodeName": "is_gpu", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "low", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "high", "type": "Any"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "encode_params", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 68, "nodeName": "is_gpu", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "distributions", "type": "module"}, {"lineNumber": 165, "col_offset": 39, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "dist1", "type": "chainer.distributions.normal.Normal"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "dist2", "type": "chainer.distributions.normal.Normal"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 302, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 307, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 308, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 329, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 335, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 342, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "dist1", "type": "chainer.distributions.uniform.Uniform"}, {"lineNumber": 349, "col_offset": 16, "nodeName": "dist2", "type": "chainer.distributions.uniform.Uniform"}, {"lineNumber": 20, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "kl", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "sample", "type": "Any"}, {"lineNumber": 25, "col_offset": 46, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 25, "col_offset": 61, "nodeName": "sample", "type": "Any"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "mc_kl", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 34, "col_offset": 37, "nodeName": "v", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "v", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 47, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "normal", "type": "Any"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "exp", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 72, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 90, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 97, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "numpy", "type": "module"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "loc", "type": "Any"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "log_scale", "type": "Any"}, {"lineNumber": 112, "col_offset": 64, "nodeName": "numpy", "type": "module"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "loc", "type": "Any"}, {"lineNumber": 113, "col_offset": 62, "nodeName": "scale", "type": "Any"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "cov_", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "cov_", "type": "Any"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "cov", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "cholesky", "type": "Any"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "cov", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "normal", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 143, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 152, "col_offset": 46, "nodeName": "float32", "type": "Any"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 48, "nodeName": "loc", "type": "Any"}, {"lineNumber": 156, "col_offset": 62, "nodeName": "scale", "type": "Any"}, {"lineNumber": 160, "col_offset": 46, "nodeName": "float32", "type": "Any"}, {"lineNumber": 163, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 48, "nodeName": "low", "type": "Any"}, {"lineNumber": 164, "col_offset": 61, "nodeName": "high", "type": "Any"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "make_normal_dist", "type": "Callable[..., Any]"}, {"lineNumber": 286, "col_offset": 24, "nodeName": "make_normal_dist", "type": "Callable[..., Any]"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "check_kl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 287, "col_offset": 30, "nodeName": "dist1", "type": "chainer.distributions.normal.Normal"}, {"lineNumber": 287, "col_offset": 37, "nodeName": "dist2", "type": "chainer.distributions.normal.Normal"}, {"lineNumber": 293, "col_offset": 24, "nodeName": "make_normal_dist", "type": "Any"}, {"lineNumber": 295, "col_offset": 24, "nodeName": "make_normal_dist", "type": "Any"}, {"lineNumber": 297, "col_offset": 16, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 297, "col_offset": 30, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 297, "col_offset": 37, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "make_uniform_dist", "type": "Callable[..., Any]"}, {"lineNumber": 349, "col_offset": 24, "nodeName": "make_uniform_dist", "type": "Callable[..., Any]"}, {"lineNumber": 350, "col_offset": 16, "nodeName": "check_kl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 350, "col_offset": 30, "nodeName": "dist1", "type": "chainer.distributions.uniform.Uniform"}, {"lineNumber": 350, "col_offset": 37, "nodeName": "dist2", "type": "chainer.distributions.uniform.Uniform"}, {"lineNumber": 356, "col_offset": 24, "nodeName": "make_uniform_dist", "type": "Any"}, {"lineNumber": 358, "col_offset": 24, "nodeName": "make_uniform_dist", "type": "Any"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "check_kl", "type": "Any"}, {"lineNumber": 360, "col_offset": 30, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 360, "col_offset": 37, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 25, "col_offset": 46, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "cuda", "type": "module"}, {"lineNumber": 34, "col_offset": 44, "nodeName": "k", "type": "Any"}, {"lineNumber": 34, "col_offset": 47, "nodeName": "v", "type": "Any"}, {"lineNumber": 34, "col_offset": 52, "nodeName": "items", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "chainer", "type": "module"}, {"lineNumber": 37, "col_offset": 49, "nodeName": "k", "type": "Any"}, {"lineNumber": 37, "col_offset": 52, "nodeName": "v", "type": "Any"}, {"lineNumber": 37, "col_offset": 57, "nodeName": "items", "type": "Union[Callable, Any]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 47, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 72, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 90, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 92, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 97, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "exp", "type": "Any"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 137, "col_offset": 26, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "shape", "type": "Any"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 143, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 46, "nodeName": "numpy", "type": "module"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "numpy", "type": "module"}, {"lineNumber": 160, "col_offset": 46, "nodeName": "numpy", "type": "module"}, {"lineNumber": 163, "col_offset": 57, "nodeName": "numpy", "type": "module"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 285, "col_offset": 60, "nodeName": "use_log_scale1", "type": "bool"}, {"lineNumber": 286, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 286, "col_offset": 60, "nodeName": "use_log_scale2", "type": "bool"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 293, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 294, "col_offset": 40, "nodeName": "use_log_scale1", "type": "bool"}, {"lineNumber": 295, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 296, "col_offset": 40, "nodeName": "use_log_scale2", "type": "bool"}, {"lineNumber": 297, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 348, "col_offset": 61, "nodeName": "use_loc_scale1", "type": "bool"}, {"lineNumber": 349, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 349, "col_offset": 61, "nodeName": "use_loc_scale2", "type": "bool"}, {"lineNumber": 350, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 356, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 357, "col_offset": 40, "nodeName": "use_loc_scale1", "type": "bool"}, {"lineNumber": 358, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 359, "col_offset": 40, "nodeName": "use_loc_scale2", "type": "bool"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 52, "nodeName": "params", "type": "Any"}, {"lineNumber": 37, "col_offset": 57, "nodeName": "params", "type": "Union[Dict[Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "shape", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 92, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "numpy", "type": "module"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 112, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 40, "nodeName": "prod", "type": "Any"}, {"lineNumber": 119, "col_offset": 51, "nodeName": "shape", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "numpy", "type": "module"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 128, "col_offset": 37, "nodeName": "shape", "type": "Any"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "random", "type": "Any"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 26, "nodeName": "random", "type": "Any"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 163, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "numpy", "type": "module"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 112, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 40, "nodeName": "numpy", "type": "module"}, {"lineNumber": 119, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "numpy", "type": "module"}, {"lineNumber": 137, "col_offset": 26, "nodeName": "numpy", "type": "module"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "low", "type": "Any"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "low", "type": "Any"}, {"lineNumber": 163, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "numpy", "type": "module"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "numpy", "type": "module"}]