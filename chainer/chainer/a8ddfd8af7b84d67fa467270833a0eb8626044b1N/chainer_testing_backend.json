[{"lineNumber": 167, "col_offset": 0, "nodeName": "_wrap_backend_test_method", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 186, "col_offset": 0, "nodeName": "inject_backend_tests", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 11, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "_check_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "_adjust_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "xp", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "device", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "__enter__", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "__exit__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "__repr__", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "get_func_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "get_pytest_marks", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "_get_single_array", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "get_array", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "_device", "type": "None"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "backend_config", "type": "BackendConfig"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "marks", "type": "List[Any]"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "__name__", "type": "str"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "new_method_name", "type": "str"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "mark", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "marks", "type": "List[Any]"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "wrap", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "_contexts", "type": "List[nothing]"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "_props", "type": "List[Union[Tuple[str, bool], Tuple[str, None], Tuple[str, str]]]"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "use_chainerx", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "use_chainerx", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "_device", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "c", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "_contexts", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "c", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "lst", "type": "List[str]"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "_props", "type": "List[Union[Tuple[str, bool], Tuple[str, None], Tuple[str, str]]]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "lst", "type": "List[str]"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "_props", "type": "List[Union[Tuple[str, bool], Tuple[str, None], Tuple[str, str]]]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "marks", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "use_chainerx", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "marks", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "use_chainerx", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "np_array", "type": "Any"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "BackendConfig", "type": "Type[BackendConfig]"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "param", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "get_pytest_marks", "type": "Callable[[], Any]"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "method_name", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "func", "type": "Any"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "new_method_name", "type": "str"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "method_name", "type": "Union[Any, str]"}, {"lineNumber": 200, "col_offset": 27, "nodeName": "meth_names", "type": "Union[Any, List[str]]"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "case", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "k", "type": "str"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "v", "type": "Optional[Union[bool, str]]"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "_check_params", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "_adjust_params", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "_device", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "_device", "type": "Any"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "device", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "_contexts", "type": "Union[List[nothing], List[Any]]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "k", "type": "str"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "_", "type": "Optional[Union[bool, str]]"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "k", "type": "str"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "_", "type": "Optional[Union[bool, str]]"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "val", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "lst", "type": "List[str]"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "device_index", "type": "int"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "np_array", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "arr", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "np_array", "type": "Any"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "np_array", "type": "Any"}, {"lineNumber": 162, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "_get_single_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "np_array", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "backend_config", "type": "BackendConfig"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "get_func_str", "type": "Callable[[], Any]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "impl", "type": "Any"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "backend_config", "type": "BackendConfig"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "mark", "type": "Any"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 188, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "params", "type": "Any"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 190, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "method_names", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "meth_names", "type": "List[str]"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "meth_names", "type": "Any"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "method_names", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "impl", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "params", "type": "Any"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "setattr", "type": "Callable[[Any, Union[bytearray, str, unicode], Any], None]"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "k", "type": "str"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "v", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "setattr", "type": "Callable[[Any, Union[bytearray, str, unicode], Any], None]"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "k", "type": "Any"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "v", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "chainerx_device", "type": "Any"}, {"lineNumber": 51, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "cuda_device", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "cuda", "type": "module"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "use_chainerx", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 89, "col_offset": 39, "nodeName": "cudnn_deterministic", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "autotune", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "use_ideep", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "using_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "device", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "__enter__", "type": "Any"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "__exit__", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "typ", "type": "Any"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "value", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "traceback", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 108, "col_offset": 43, "nodeName": "join", "type": "Callable"}, {"lineNumber": 108, "col_offset": 52, "nodeName": "lst", "type": "List[str]"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "k", "type": "str"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "val", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "val", "type": "str"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "chainerx", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "backend_name", "type": "Any"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "device_index", "type": "Any"}, {"lineNumber": 128, "col_offset": 41, "nodeName": "split", "type": "Any"}, {"lineNumber": 129, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 129, "col_offset": 31, "nodeName": "device_index", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "backend_name", "type": "Any"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "to_chainerx", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 46, "nodeName": "np_array", "type": "Any"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "chainerx_device", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 156, "col_offset": 48, "nodeName": "np_array", "type": "Any"}, {"lineNumber": 156, "col_offset": 58, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "backend_config", "type": "BackendConfig"}, {"lineNumber": 175, "col_offset": 36, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 175, "col_offset": 44, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "method_names", "type": "Any"}, {"lineNumber": 187, "col_offset": 36, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 187, "col_offset": 47, "nodeName": "method_names", "type": "Any"}, {"lineNumber": 187, "col_offset": 61, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "_", "type": "str"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 201, "col_offset": 27, "nodeName": "case", "type": "Any"}, {"lineNumber": 201, "col_offset": 33, "nodeName": "method_name", "type": "Union[Any, str]"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "delattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], None]"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "case", "type": "Any"}, {"lineNumber": 202, "col_offset": 26, "nodeName": "method_name", "type": "Union[Any, str]"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "i_param", "type": "int"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "param", "type": "Any"}, {"lineNumber": 203, "col_offset": 34, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 203, "col_offset": 44, "nodeName": "params", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "k", "type": "Any"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "device", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 89, "col_offset": 39, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "c", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "c", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "lst", "type": "List[str]"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "k", "type": "str"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "val", "type": "str"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "val", "type": "str"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "lst", "type": "List[str]"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 121, "col_offset": 38, "nodeName": "k", "type": "str"}, {"lineNumber": 121, "col_offset": 41, "nodeName": "val", "type": "str"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "marks", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "attr", "type": "module"}, {"lineNumber": 128, "col_offset": 41, "nodeName": "chainerx_device", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "device_index", "type": "int"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "use_ideep", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 144, "col_offset": 28, "nodeName": "_", "type": "Any"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "_", "type": "Any"}, {"lineNumber": 144, "col_offset": 40, "nodeName": "marks", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "backend", "type": "module"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "arr", "type": "Any"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "cuda", "type": "module"}, {"lineNumber": 156, "col_offset": 58, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "_get_single_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "a", "type": "Any"}, {"lineNumber": 163, "col_offset": 50, "nodeName": "a", "type": "Any"}, {"lineNumber": 163, "col_offset": 55, "nodeName": "np_array", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 191, "col_offset": 39, "nodeName": "d", "type": "Any"}, {"lineNumber": 191, "col_offset": 44, "nodeName": "params", "type": "Any"}, {"lineNumber": 196, "col_offset": 32, "nodeName": "_", "type": "str"}, {"lineNumber": 204, "col_offset": 44, "nodeName": "_wrap_backend_test_method", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "impl", "type": "Any"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "param", "type": "Any"}, {"lineNumber": 205, "col_offset": 33, "nodeName": "method_name", "type": "Union[Any, str]"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 206, "col_offset": 27, "nodeName": "case", "type": "Any"}, {"lineNumber": 206, "col_offset": 33, "nodeName": "new_method_name", "type": "str"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "setattr", "type": "Callable[[Any, Union[bytearray, str, unicode], Any], None]"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "case", "type": "Any"}, {"lineNumber": 210, "col_offset": 30, "nodeName": "new_method_name", "type": "str"}, {"lineNumber": 210, "col_offset": 47, "nodeName": "new_impl", "type": "Any"}, {"lineNumber": 41, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 41, "col_offset": 70, "nodeName": "k", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "chainer", "type": "module"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "Device", "type": "Any"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "cuda_device", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "chainerx_device", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "use_ideep", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "device", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "device", "type": "Any"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 51, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 107, "col_offset": 57, "nodeName": "k", "type": "str"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "val", "type": "Any"}, {"lineNumber": 128, "col_offset": 41, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "marks", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "attr", "type": "module"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "marks", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "attr", "type": "module"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "ideep", "type": "Any"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "chainer", "type": "module"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "backends", "type": "module"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "_get_single_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 49, "nodeName": "a", "type": "Any"}, {"lineNumber": 161, "col_offset": 56, "nodeName": "a", "type": "Any"}, {"lineNumber": 161, "col_offset": 61, "nodeName": "np_array", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 196, "col_offset": 37, "nodeName": "dir", "type": "Callable[..., List[str]]"}, {"lineNumber": 196, "col_offset": 41, "nodeName": "case", "type": "Any"}, {"lineNumber": 196, "col_offset": 50, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 207, "col_offset": 26, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "cuda", "type": "module"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "chainer", "type": "module"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 44, "nodeName": "intel64", "type": "module"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "marks", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "multi_gpu", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "marks", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "attr", "type": "module"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "marks", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "attr", "type": "module"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "chainer", "type": "module"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "self", "type": "BackendConfig"}, {"lineNumber": 196, "col_offset": 50, "nodeName": "_", "type": "str"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "new_method_name", "type": "str"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "backends", "type": "module"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "chainer", "type": "module"}, {"lineNumber": 78, "col_offset": 44, "nodeName": "backends", "type": "module"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "chainer", "type": "module"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "CpuDevice", "type": "Type[chainer.backends.cpu.CpuDevice]"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "attr", "type": "module"}, {"lineNumber": 133, "col_offset": 48, "nodeName": "device_index", "type": "int"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "chainer", "type": "module"}, {"lineNumber": 78, "col_offset": 44, "nodeName": "chainer", "type": "module"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "cpu", "type": "module"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "backends", "type": "module"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "chainer", "type": "module"}]