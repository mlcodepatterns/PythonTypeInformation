[{"lineNumber": 17, "col_offset": 0, "nodeName": "make_sampler", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 35, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "test_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "test_backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "test_double_backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 172, "col_offset": 49, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "check_invalid_option", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "test_invalid_option_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "test_invalid_option_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "sampler", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 35, "nodeName": "unittest", "type": "module"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "label_size", "type": "int"}, {"lineNumber": 172, "col_offset": 49, "nodeName": "unittest", "type": "module"}, {"lineNumber": 196, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 196, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "batch", "type": "int"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "x_shape", "type": "Tuple[int, int]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "w_shape", "type": "Tuple[int, int]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "ggw", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "sampler", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "t_data", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "w_data", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "cpu_device", "type": "chainer.backends._cpu.CpuDevice"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "sampler", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "t_data", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "w_data", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "y_grad", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "sampler", "type": "Callable[[Any], Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "t_data", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "w_data", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "y_grad", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "x_grad_grad", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "w_grad_grad", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 196, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 20, "col_offset": 46, "nodeName": "high", "type": "int"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 21, "col_offset": 36, "nodeName": "int32", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 22, "col_offset": 40, "nodeName": "s", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "t", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "batch", "type": "int"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "in_size", "type": "int"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "label_size", "type": "int"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "in_size", "type": "int"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 56, "col_offset": 61, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 57, "col_offset": 44, "nodeName": "int32", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 58, "col_offset": 61, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "g_shape", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 65, "col_offset": 62, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 67, "col_offset": 63, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 68, "col_offset": 63, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "make_sampler", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 84, "col_offset": 47, "nodeName": "label_size", "type": "int"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 85, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 86, "col_offset": 42, "nodeName": "t", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "w", "type": "Any"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "t_data", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "w_data", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "negative_sampling", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "t", "type": "Any"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "w", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "sampler", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "negative_sampling", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "t", "type": "Any"}, {"lineNumber": 100, "col_offset": 18, "nodeName": "w", "type": "Any"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "sampler", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "x", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "samples", "type": "Any"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "int32", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "samples", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "empty", "type": "Any"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "ix", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "it", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 136, "col_offset": 40, "nodeName": "loss", "type": "Any"}, {"lineNumber": 139, "col_offset": 18, "nodeName": "make_sampler", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 139, "col_offset": 47, "nodeName": "label_size", "type": "int"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 140, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 141, "col_offset": 42, "nodeName": "t", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 142, "col_offset": 42, "nodeName": "w", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 143, "col_offset": 42, "nodeName": "gy", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "make_sampler", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 154, "col_offset": 47, "nodeName": "label_size", "type": "int"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 156, "col_offset": 42, "nodeName": "t", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 157, "col_offset": 42, "nodeName": "w", "type": "Any"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 158, "col_offset": 42, "nodeName": "gy", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 159, "col_offset": 47, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 160, "col_offset": 47, "nodeName": "ggw", "type": "Any"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "TestNegativeSamplingInvalidReductionOption"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 175, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "TestNegativeSamplingInvalidReductionOption"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 176, "col_offset": 57, "nodeName": "int32", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "TestNegativeSamplingInvalidReductionOption"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 177, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "t", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "w", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "check_invalid_option", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "check_invalid_option", "type": "Any"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 21, "col_offset": 36, "nodeName": "numpy", "type": "module"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 44, "nodeName": "numpy", "type": "module"}, {"lineNumber": 58, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "t", "type": "Any"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "g_shape", "type": "Tuple[()]"}, {"lineNumber": 65, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 84, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 85, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 86, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 55, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "functions", "type": "module"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 55, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "xp", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "samples", "type": "Any"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "numpy", "type": "module"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "samples", "type": "Any"}, {"lineNumber": 106, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "y_", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 112, "col_offset": 38, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 54, "nodeName": "array", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "gy", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "cpu_device", "type": "chainer.backends._cpu.CpuDevice"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "moves", "type": "module"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 119, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "t", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "it", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "iw", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "sum", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "loss", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 136, "col_offset": 48, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 139, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 140, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 141, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 142, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 143, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "negative_sampling", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "t_data", "type": "Any"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "w", "type": "Any"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "sampler", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 39, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "check_backward", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 151, "col_offset": 37, "nodeName": "y_grad", "type": "Any"}, {"lineNumber": 154, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 156, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 157, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 158, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 159, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 160, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "negative_sampling", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "t_data", "type": "Any"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "w", "type": "Any"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "sampler", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 39, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "check_double_backward", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "y_grad", "type": "Any"}, {"lineNumber": 175, "col_offset": 60, "nodeName": "numpy", "type": "module"}, {"lineNumber": 176, "col_offset": 57, "nodeName": "numpy", "type": "module"}, {"lineNumber": 177, "col_offset": 60, "nodeName": "numpy", "type": "module"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "self", "type": "TestNegativeSamplingInvalidReductionOption"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "self", "type": "TestNegativeSamplingInvalidReductionOption"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "self", "type": "TestNegativeSamplingInvalidReductionOption"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "negative_sampling", "type": "Callable[..., Any]"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "t", "type": "Any"}, {"lineNumber": 186, "col_offset": 22, "nodeName": "w", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestNegativeSamplingInvalidReductionOption"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "cuda", "type": "module"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "prod", "type": "Any"}, {"lineNumber": 20, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 56, "col_offset": 45, "nodeName": "x_shape", "type": "Tuple[int, int]"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 58, "col_offset": 45, "nodeName": "w_shape", "type": "Tuple[int, int]"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 65, "col_offset": 46, "nodeName": "g_shape", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "x_shape", "type": "Tuple[int, int]"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 68, "col_offset": 47, "nodeName": "w_shape", "type": "Tuple[int, int]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "float64", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "float64", "type": "Any"}, {"lineNumber": 95, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 106, "col_offset": 45, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "cpu_device", "type": "chainer.backends._cpu.CpuDevice"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "y", "type": "Any"}, {"lineNumber": 112, "col_offset": 38, "nodeName": "cpu_device", "type": "chainer.backends._cpu.CpuDevice"}, {"lineNumber": 112, "col_offset": 54, "nodeName": "y_", "type": "Any"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "six", "type": "module"}, {"lineNumber": 119, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "loss", "type": "Any"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "dot", "type": "Any"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "ix", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "loss", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "sum", "type": "Any"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "loss", "type": "Any"}, {"lineNumber": 136, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 147, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 64, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "w_data", "type": "Any"}, {"lineNumber": 151, "col_offset": 47, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 164, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 64, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "w_data", "type": "Any"}, {"lineNumber": 168, "col_offset": 46, "nodeName": "x_grad_grad", "type": "Any"}, {"lineNumber": 168, "col_offset": 59, "nodeName": "w_grad_grad", "type": "Any"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "check_double_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "randint", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "negative_sampling", "type": "module"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "make_sampler", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 186, "col_offset": 38, "nodeName": "xp", "type": "Any"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "numpy", "type": "module"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "numpy", "type": "module"}, {"lineNumber": 106, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "iw", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 147, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "samples", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "logaddexp", "type": "Any"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "f", "type": "Any"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "numpy", "type": "module"}]