[{"lineNumber": 30, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "check_forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "test_forward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "test_forward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "test_backward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "test_backward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "check_double_backward", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "test_double_backward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "test_double_backward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "check_type_error", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "test_type_error_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "test_type_error_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "test_invalid_axis", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "test_equal_to_numpy_flip", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "unittest", "type": "module"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 134, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 143, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "check_double_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "flip_func", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "expected_y", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 143, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 33, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 34, "col_offset": 65, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 35, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "flip", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "axis", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "_flip", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "flip_func", "type": "Any"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "axis", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "expected_y", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "check_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "axis", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "check_forward", "type": "Any"}, {"lineNumber": 54, "col_offset": 48, "nodeName": "axis", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "check_backward", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 58, "col_offset": 46, "nodeName": "y_grad", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "axis", "type": "Any"}, {"lineNumber": 61, "col_offset": 47, "nodeName": "gy", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "check_backward", "type": "Any"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "axis", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "check_double_backward", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "y_grad", "type": "Any"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "x_grad_grad", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "check_double_backward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 77, "col_offset": 43, "nodeName": "axis", "type": "Any"}, {"lineNumber": 77, "col_offset": 54, "nodeName": "gy", "type": "Any"}, {"lineNumber": 77, "col_offset": 63, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "check_double_backward", "type": "Any"}, {"lineNumber": 81, "col_offset": 56, "nodeName": "axis", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "check_type_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "check_type_error", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestFlipInvalidTypeError"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 137, "col_offset": 59, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 33, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "flip", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 58, "col_offset": 60, "nodeName": "float64", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 44, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 66, "col_offset": 56, "nodeName": "gy", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "flip", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 70, "col_offset": 37, "nodeName": "axis", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "check_double_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 81, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 81, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 82, "col_offset": 47, "nodeName": "gy", "type": "Any"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 83, "col_offset": 47, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "InvalidType", "type": "Type[chainer.utils.type_check.InvalidType]"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "flip", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "axis", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "flip", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 137, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "_flip", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 139, "col_offset": 42, "nodeName": "axis", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "flip", "type": "Any"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "axis", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 33, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 34, "col_offset": 46, "nodeName": "shape", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 35, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 39, "col_offset": 60, "nodeName": "float64", "type": "Any"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "array", "type": "module"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "cuda", "type": "module"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 48, "nodeName": "flip", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 57, "col_offset": 66, "nodeName": "axis", "type": "Any"}, {"lineNumber": 58, "col_offset": 60, "nodeName": "numpy", "type": "module"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 44, "nodeName": "cuda", "type": "module"}, {"lineNumber": 66, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 81, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 82, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 83, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "type_check", "type": "module"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "cuda", "type": "module"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "self", "type": "TestFlipInvalidTypeError"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "self", "type": "TestFlipInvalidTypeError"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 137, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "flip", "type": "module"}, {"lineNumber": 139, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 33, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 34, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 35, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 60, "nodeName": "numpy", "type": "module"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "functions", "type": "module"}, {"lineNumber": 57, "col_offset": 48, "nodeName": "functions", "type": "module"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 137, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "array", "type": "module"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "functions", "type": "module"}]