[{"lineNumber": 145, "col_offset": 0, "nodeName": "convert", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 153, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "Chain", "type": "Type[chainer.link.Chain]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "Chain", "type": "Type[chainer.link.Chain]"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "Chain", "type": "Type[chainer.link.Chain]"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "Iterator", "type": "Type[chainer.dataset.iterator.Iterator]"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "chainer", "type": "module"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "chainer", "type": "module"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "chainer", "type": "module"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "dataset", "type": "module"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "batch", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "center", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "contexts", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "device", "type": "chainer._backend.Device"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "snapshot_interval", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "n_vocab", "type": "Any"}, {"lineNumber": 218, "col_offset": 7, "nodeName": "test", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "index2word", "type": "Dict[Any, Any]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "optimizer", "type": "chainer.optimizers.adam.Adam"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "train_iter", "type": "WindowIterator"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "val_iter", "type": "WindowIterator"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "updater", "type": "chainer.training.updaters.standard_updater.StandardUpdater"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "trainer", "type": "chainer.training.trainer.Trainer"}, {"lineNumber": 291, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "e", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "e", "type": "Any"}, {"lineNumber": 57, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "e", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "chainer", "type": "module"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "dataset", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "window", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "window", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "_repeat", "type": "bool"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "repeat", "type": "bool"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "order", "type": "Any"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "window", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "current_position", "type": "int"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "epoch", "type": "int"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "is_new_epoch", "type": "bool"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "current_position", "type": "int"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "i_end", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "position", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "offset", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "pos", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "contexts", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "center", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "epoch", "type": "int"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "is_new_epoch", "type": "bool"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "center", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "contexts", "type": "Any"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "send", "type": "Any"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "center", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "send", "type": "Any"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "contexts", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "center", "type": "Any"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "contexts", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "set_defaults", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 192, "col_offset": 30, "nodeName": "float16", "type": "Any"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "get_device", "type": "Callable[[Any], chainer._backend.Device]"}, {"lineNumber": 196, "col_offset": 32, "nodeName": "device", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "use", "type": "Callable[[], None]"}, {"lineNumber": 199, "col_offset": 7, "nodeName": "snapshot_interval", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "snapshot_interval", "type": "Any"}, {"lineNumber": 200, "col_offset": 33, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "min", "type": "Callable"}, {"lineNumber": 201, "col_offset": 33, "nodeName": "snapshot_interval", "type": "Any"}, {"lineNumber": 201, "col_offset": 57, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "val", "type": "Any"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "get_ptb_words", "type": "Callable[[], Tuple[Any, Any, Any]]"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 214, "col_offset": 33, "nodeName": "train", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "update", "type": "Callable[[Iterable[Any]], None]"}, {"lineNumber": 218, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "val", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "get_ptb_words_vocabulary", "type": "Callable[[], Any]"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "wid", "type": "Any"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "word", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 7, "nodeName": "out_type", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "HSM", "type": "Type[chainer.links.loss.hierarchical_softmax.BinaryHierarchicalSoftmax]"}, {"lineNumber": 229, "col_offset": 14, "nodeName": "BinaryHierarchicalSoftmax", "type": "Type[chainer.links.loss.hierarchical_softmax.BinaryHierarchicalSoftmax]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "loss_func", "type": "chainer.links.loss.hierarchical_softmax.BinaryHierarchicalSoftmax"}, {"lineNumber": 243, "col_offset": 7, "nodeName": "model", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "model", "type": "SkipGram"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "device", "type": "chainer._backend.Device"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "Adam", "type": "Type[chainer.optimizers.adam.Adam]"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "model", "type": "Union[ContinuousBoW, SkipGram]"}, {"lineNumber": 257, "col_offset": 17, "nodeName": "WindowIterator", "type": "Type[WindowIterator]"}, {"lineNumber": 257, "col_offset": 32, "nodeName": "train", "type": "Any"}, {"lineNumber": 257, "col_offset": 39, "nodeName": "window", "type": "Any"}, {"lineNumber": 257, "col_offset": 52, "nodeName": "batchsize", "type": "Any"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "WindowIterator", "type": "Type[WindowIterator]"}, {"lineNumber": 258, "col_offset": 30, "nodeName": "val", "type": "Any"}, {"lineNumber": 258, "col_offset": 35, "nodeName": "window", "type": "Any"}, {"lineNumber": 258, "col_offset": 48, "nodeName": "batchsize", "type": "Any"}, {"lineNumber": 261, "col_offset": 14, "nodeName": "StandardUpdater", "type": "Type[chainer.training.updaters.standard_updater.StandardUpdater]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "train_iter", "type": "WindowIterator"}, {"lineNumber": 262, "col_offset": 20, "nodeName": "optimizer", "type": "chainer.optimizers.adam.Adam"}, {"lineNumber": 265, "col_offset": 14, "nodeName": "Trainer", "type": "Type[chainer.training.trainer.Trainer]"}, {"lineNumber": 265, "col_offset": 31, "nodeName": "updater", "type": "chainer.training.updaters.standard_updater.StandardUpdater"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "extend", "type": "Callable[..., None]"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "extend", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "extend", "type": "Callable[..., None]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "extend", "type": "Callable[..., None]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "extend", "type": "Callable[..., None]"}, {"lineNumber": 278, "col_offset": 7, "nodeName": "resume", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "run", "type": "Callable[..., None]"}, {"lineNumber": 283, "col_offset": 64, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "loss_func", "type": "Union[SoftmaxCrossEntropyLoss, chainer.links.loss.negative_sampling.NegativeSampling, chainer.links.loss.hierarchical_softmax.BinaryHierarchicalSoftmax]"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "loss_func", "type": "Union[SoftmaxCrossEntropyLoss, chainer.links.loss.negative_sampling.NegativeSampling, chainer.links.loss.hierarchical_softmax.BinaryHierarchicalSoftmax]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "embed", "type": "chainer.links.connection.embed_id.EmbedID"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "contexts", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "loss_func", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "h", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "report", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 40, "nodeName": "self", "type": "ContinuousBoW"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "loss_func", "type": "Union[SoftmaxCrossEntropyLoss, chainer.links.loss.negative_sampling.NegativeSampling, chainer.links.loss.hierarchical_softmax.BinaryHierarchicalSoftmax]"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "loss_func", "type": "Union[SoftmaxCrossEntropyLoss, chainer.links.loss.negative_sampling.NegativeSampling, chainer.links.loss.hierarchical_softmax.BinaryHierarchicalSoftmax]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "embed", "type": "chainer.links.connection.embed_id.EmbedID"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "contexts", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "n_context", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "n_units", "type": "Any"}, {"lineNumber": 57, "col_offset": 41, "nodeName": "e", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "broadcast_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "reshape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "e", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "reshape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "loss_func", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "e", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "report", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "self", "type": "SkipGram"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "out", "type": "chainer.links.connection.linear.Linear"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "softmax_cross_entropy", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 52, "nodeName": "t", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 87, "col_offset": 41, "nodeName": "int32", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 94, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "order", "type": "Any"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "take", "type": "Any"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "pos", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "take", "type": "Any"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "position", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "i_end", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "epoch", "type": "int"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "is_new_epoch", "type": "bool"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "current_position", "type": "int"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "is_new_epoch", "type": "bool"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "current_position", "type": "Any"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "i_end", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "center", "type": "Any"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "contexts", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "serializer", "type": "Any"}, {"lineNumber": 138, "col_offset": 43, "nodeName": "current_position", "type": "Union[int, Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "serializer", "type": "Any"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "serializer", "type": "Any"}, {"lineNumber": 140, "col_offset": 55, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "order", "type": "Any"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "device", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 155, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 160, "col_offset": 58, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 162, "col_offset": 58, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 164, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 166, "col_offset": 58, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 171, "col_offset": 59, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 180, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 182, "col_offset": 52, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 188, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 192, "col_offset": 7, "nodeName": "get_dtype", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 194, "col_offset": 56, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 196, "col_offset": 32, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "device", "type": "chainer._backend.Device"}, {"lineNumber": 199, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 200, "col_offset": 33, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 201, "col_offset": 33, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 201, "col_offset": 57, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 203, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 203, "col_offset": 30, "nodeName": "device", "type": "chainer._backend.Device"}, {"lineNumber": 204, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 204, "col_offset": 30, "nodeName": "unit", "type": "Any"}, {"lineNumber": 205, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "window", "type": "Any"}, {"lineNumber": 206, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 206, "col_offset": 38, "nodeName": "batchsize", "type": "Any"}, {"lineNumber": 207, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 208, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 208, "col_offset": 38, "nodeName": "model", "type": "Any"}, {"lineNumber": 209, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 209, "col_offset": 35, "nodeName": "out_type", "type": "Any"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "datasets", "type": "module"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "collections", "type": "module"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 215, "col_offset": 38, "nodeName": "val", "type": "Any"}, {"lineNumber": 216, "col_offset": 14, "nodeName": "max", "type": "Callable"}, {"lineNumber": 216, "col_offset": 18, "nodeName": "train", "type": "Any"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "train", "type": "Any"}, {"lineNumber": 220, "col_offset": 14, "nodeName": "val", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "datasets", "type": "module"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "n_vocab", "type": "Any"}, {"lineNumber": 228, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 229, "col_offset": 14, "nodeName": "L", "type": "module"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "create_huffman_tree", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 39, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 231, "col_offset": 20, "nodeName": "HSM", "type": "Type[chainer.links.loss.hierarchical_softmax.BinaryHierarchicalSoftmax]"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "unit", "type": "Any"}, {"lineNumber": 231, "col_offset": 35, "nodeName": "tree", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 233, "col_offset": 9, "nodeName": "out_type", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "cs", "type": "List[int]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "loss_func", "type": "chainer.links.loss.negative_sampling.NegativeSampling"}, {"lineNumber": 243, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "SkipGram", "type": "Type[SkipGram]"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "n_vocab", "type": "Any"}, {"lineNumber": 244, "col_offset": 34, "nodeName": "unit", "type": "Any"}, {"lineNumber": 244, "col_offset": 45, "nodeName": "loss_func", "type": "Union[SoftmaxCrossEntropyLoss, chainer.links.loss.negative_sampling.NegativeSampling, chainer.links.loss.hierarchical_softmax.BinaryHierarchicalSoftmax]"}, {"lineNumber": 245, "col_offset": 9, "nodeName": "model", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "model", "type": "ContinuousBoW"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "model", "type": "Union[ContinuousBoW, SkipGram]"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "O", "type": "module"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "optimizer", "type": "chainer.optimizers.adam.Adam"}, {"lineNumber": 257, "col_offset": 39, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 257, "col_offset": 52, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 258, "col_offset": 35, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 258, "col_offset": 48, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 261, "col_offset": 14, "nodeName": "updaters", "type": "module"}, {"lineNumber": 262, "col_offset": 41, "nodeName": "convert", "type": "Any"}, {"lineNumber": 262, "col_offset": 57, "nodeName": "device", "type": "chainer._backend.Device"}, {"lineNumber": 265, "col_offset": 14, "nodeName": "training", "type": "module"}, {"lineNumber": 265, "col_offset": 41, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 265, "col_offset": 67, "nodeName": "out", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "trainer", "type": "chainer.training.trainer.Trainer"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "Evaluator", "type": "Type[chainer.training.extensions.evaluator.Evaluator]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "val_iter", "type": "WindowIterator"}, {"lineNumber": 268, "col_offset": 18, "nodeName": "model", "type": "Union[ContinuousBoW, SkipGram]"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "trainer", "type": "chainer.training.trainer.Trainer"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "LogReport", "type": "Type[chainer.training.extensions.log_report.LogReport]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "trainer", "type": "chainer.training.trainer.Trainer"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "PrintReport", "type": "Type[chainer.training.extensions.print_report.PrintReport]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "trainer", "type": "chainer.training.trainer.Trainer"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "ProgressBar", "type": "Type[chainer.training.extensions.progress_bar.ProgressBar]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "trainer", "type": "chainer.training.trainer.Trainer"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "snapshot", "type": "Callable[..., chainer.training.extensions._snapshot._Snapshot]"}, {"lineNumber": 278, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "load_npz", "type": "Callable[..., None]"}, {"lineNumber": 279, "col_offset": 37, "nodeName": "resume", "type": "Any"}, {"lineNumber": 279, "col_offset": 50, "nodeName": "trainer", "type": "chainer.training.trainer.Trainer"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "trainer", "type": "chainer.training.trainer.Trainer"}, {"lineNumber": 283, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "array", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "wi", "type": "Any"}, {"lineNumber": 286, "col_offset": 21, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 286, "col_offset": 31, "nodeName": "w", "type": "Any"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "v", "type": "str"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "init_scope", "type": "Callable[..., contextlib._GeneratorContextManager[None]]"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "EmbedID", "type": "Type[chainer.links.connection.embed_id.EmbedID]"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "n_vocab", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "n_units", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "self", "type": "ContinuousBoW"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "ContinuousBoW"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "sum", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "e", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "self", "type": "ContinuousBoW"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "reporter", "type": "module"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "loss", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "init_scope", "type": "Callable[..., contextlib._GeneratorContextManager[None]]"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "EmbedID", "type": "Type[chainer.links.connection.embed_id.EmbedID]"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "n_vocab", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "n_units", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "SkipGram"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "SkipGram"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "F", "type": "module"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 58, "col_offset": 52, "nodeName": "n_context", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "F", "type": "module"}, {"lineNumber": 59, "col_offset": 50, "nodeName": "n_units", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "F", "type": "module"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "self", "type": "SkipGram"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "reporter", "type": "module"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "loss", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "init_scope", "type": "Callable[..., contextlib._GeneratorContextManager[None]]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "SoftmaxCrossEntropyLoss"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "Linear", "type": "Type[chainer.links.connection.linear.Linear]"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "n_in", "type": "Any"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "n_out", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "F", "type": "module"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "out", "type": "chainer.links.connection.linear.Linear"}, {"lineNumber": 77, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "_repeat", "type": "Any"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "epoch", "type": "int"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "i_end", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "randint", "type": "Any"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "position", "type": "Any"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "offset", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "dataset", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "dataset", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "order", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "order", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 43, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 140, "col_offset": 55, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "serializer", "type": "Any"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "order", "type": "Any"}, {"lineNumber": 192, "col_offset": 7, "nodeName": "chainer", "type": "module"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 204, "col_offset": 30, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 206, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 208, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 209, "col_offset": 35, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "chainer", "type": "module"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "collections", "type": "module"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 223, "col_offset": 32, "nodeName": "word", "type": "Any"}, {"lineNumber": 223, "col_offset": 38, "nodeName": "wid", "type": "Any"}, {"lineNumber": 223, "col_offset": 45, "nodeName": "iteritems", "type": "Callable"}, {"lineNumber": 223, "col_offset": 59, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 226, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 226, "col_offset": 34, "nodeName": "train", "type": "Any"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "HSM", "type": "Type[chainer.links.loss.hierarchical_softmax.BinaryHierarchicalSoftmax]"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 233, "col_offset": 9, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "NegativeSampling", "type": "Type[chainer.links.loss.negative_sampling.NegativeSampling]"}, {"lineNumber": 235, "col_offset": 39, "nodeName": "unit", "type": "Any"}, {"lineNumber": 235, "col_offset": 50, "nodeName": "cs", "type": "List[int]"}, {"lineNumber": 235, "col_offset": 54, "nodeName": "negative_size", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "out_type", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "loss_func", "type": "SoftmaxCrossEntropyLoss"}, {"lineNumber": 244, "col_offset": 34, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 245, "col_offset": 9, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "ContinuousBoW", "type": "Type[ContinuousBoW]"}, {"lineNumber": 246, "col_offset": 30, "nodeName": "n_vocab", "type": "Any"}, {"lineNumber": 246, "col_offset": 39, "nodeName": "unit", "type": "Any"}, {"lineNumber": 246, "col_offset": 50, "nodeName": "loss_func", "type": "Union[SoftmaxCrossEntropyLoss, chainer.links.loss.negative_sampling.NegativeSampling, chainer.links.loss.hierarchical_softmax.BinaryHierarchicalSoftmax]"}, {"lineNumber": 248, "col_offset": 14, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 261, "col_offset": 14, "nodeName": "training", "type": "module"}, {"lineNumber": 265, "col_offset": 41, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 265, "col_offset": 67, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "extensions", "type": "module"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "convert", "type": "Any"}, {"lineNumber": 268, "col_offset": 51, "nodeName": "device", "type": "chainer._backend.Device"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "extensions", "type": "module"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "extensions", "type": "module"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "extensions", "type": "module"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "extensions", "type": "module"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "snapshot_interval", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "serializers", "type": "module"}, {"lineNumber": 279, "col_offset": 37, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 283, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 283, "col_offset": 27, "nodeName": "out", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "W", "type": "Any"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "ContinuousBoW", "type": "Type[ContinuousBoW]"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "self", "type": "ContinuousBoW"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "self", "type": "ContinuousBoW"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "L", "type": "module"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "F", "type": "module"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "shape", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "SkipGram", "type": "Type[SkipGram]"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "self", "type": "SkipGram"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "self", "type": "SkipGram"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "L", "type": "module"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "n_context", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "n_context", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "SoftmaxCrossEntropyLoss", "type": "Type[SoftmaxCrossEntropyLoss]"}, {"lineNumber": 72, "col_offset": 39, "nodeName": "self", "type": "SoftmaxCrossEntropyLoss"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "self", "type": "SoftmaxCrossEntropyLoss"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "L", "type": "module"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "self", "type": "SoftmaxCrossEntropyLoss"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "window", "type": "Any"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "arange", "type": "Any"}, {"lineNumber": 116, "col_offset": 51, "nodeName": "arange", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "current_position", "type": "Any"}, {"lineNumber": 134, "col_offset": 59, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 134, "col_offset": 63, "nodeName": "order", "type": "Any"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 223, "col_offset": 45, "nodeName": "six", "type": "module"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "loss_func", "type": "chainer.links.loss.hierarchical_softmax.BinaryHierarchicalSoftmax"}, {"lineNumber": 234, "col_offset": 14, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 234, "col_offset": 28, "nodeName": "w", "type": "int"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "L", "type": "module"}, {"lineNumber": 235, "col_offset": 39, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 235, "col_offset": 54, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 238, "col_offset": 20, "nodeName": "SoftmaxCrossEntropyLoss", "type": "Type[SoftmaxCrossEntropyLoss]"}, {"lineNumber": 238, "col_offset": 44, "nodeName": "unit", "type": "Any"}, {"lineNumber": 238, "col_offset": 55, "nodeName": "n_vocab", "type": "Any"}, {"lineNumber": 240, "col_offset": 14, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 246, "col_offset": 39, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 248, "col_offset": 56, "nodeName": "model", "type": "Any"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "chainer", "type": "module"}, {"lineNumber": 283, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 283, "col_offset": 27, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 284, "col_offset": 46, "nodeName": "unit", "type": "Any"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "embed", "type": "chainer.links.connection.embed_id.EmbedID"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "map", "type": "Callable"}, {"lineNumber": 287, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 287, "col_offset": 34, "nodeName": "wi", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 33, "col_offset": 43, "nodeName": "Uniform", "type": "Type[chainer.initializers.uniform.Uniform]"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "contexts", "type": "Any"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "Uniform", "type": "Type[chainer.initializers.uniform.Uniform]"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "self", "type": "WindowIterator"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "w", "type": "Any"}, {"lineNumber": 116, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 64, "nodeName": "w", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 134, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 234, "col_offset": 21, "nodeName": "w", "type": "int"}, {"lineNumber": 234, "col_offset": 33, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "loss_func", "type": "chainer.links.loss.negative_sampling.NegativeSampling"}, {"lineNumber": 238, "col_offset": 44, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 240, "col_offset": 57, "nodeName": "out_type", "type": "Any"}, {"lineNumber": 248, "col_offset": 56, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 283, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 284, "col_offset": 33, "nodeName": "index2word", "type": "Dict[Any, Any]"}, {"lineNumber": 284, "col_offset": 46, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "model", "type": "Union[ContinuousBoW, SkipGram]"}, {"lineNumber": 288, "col_offset": 48, "nodeName": "v", "type": "str"}, {"lineNumber": 33, "col_offset": 43, "nodeName": "I", "type": "module"}, {"lineNumber": 33, "col_offset": 58, "nodeName": "n_units", "type": "Any"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "I", "type": "module"}, {"lineNumber": 52, "col_offset": 58, "nodeName": "n_units", "type": "Any"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "window", "type": "Any"}, {"lineNumber": 234, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 234, "col_offset": 43, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 240, "col_offset": 57, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 288, "col_offset": 33, "nodeName": "index2word", "type": "Dict[Any, Any]"}, {"lineNumber": 288, "col_offset": 44, "nodeName": "i", "type": "int"}]