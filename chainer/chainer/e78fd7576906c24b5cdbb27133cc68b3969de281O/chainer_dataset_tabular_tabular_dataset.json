[{"lineNumber": 1, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 3, "col_offset": 4, "nodeName": "__len__", "type": "Callable[[Any], Any]"}, {"lineNumber": 6, "col_offset": 4, "nodeName": "keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "mode", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "get_examples", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "slice", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "fetch", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "__getitem__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "as_tuple", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "as_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 4, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 8, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 12, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 15, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "slice_", "type": "Optional[Union[chainer.dataset.tabular.slice.Slice, Dict[Any, Any], Tuple[Any, ...]]]"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "SliceHelper", "type": "Type[chainer.dataset.tabular.slice.SliceHelper]"}, {"lineNumber": 20, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "get_examples", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "slice", "type": "chainer.dataset.tabular.slice.SliceHelper"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "slice_", "type": "Optional[Union[chainer.dataset.tabular.slice.Slice, Tuple[Any, ...], Dict[Any, Any]]]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "AsTuple", "type": "Type[chainer.dataset.tabular.as_mode.AsTuple]"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "self", "type": "TabularDataset"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "AsDict", "type": "Type[chainer.dataset.tabular.as_mode.AsDict]"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "self", "type": "TabularDataset"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "self", "type": "TabularDataset"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "self", "type": "TabularDataset"}, {"lineNumber": 30, "col_offset": 28, "nodeName": "index", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "slice_", "type": "Optional[Union[chainer.dataset.tabular.slice.Slice, Tuple[Any, ...], Dict[Any, Any]]]"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "TabularDataset", "type": "Type[TabularDataset]"}]