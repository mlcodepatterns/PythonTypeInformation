[{"lineNumber": 28, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "check_forward", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "test_forward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "test_forward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "test_forward_gpu_non_contiguous", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "test_forward_gpu_no_cudnn", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "test_forward_chainerx", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "check_backward", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "test_backward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "test_backward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "test_backward_gpu_non_contiguous", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "test_backward_gpu_no_cudnn", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "test_backward_chainerx", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "test_double_backward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "test_double_backward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "test_double_backward_gpu_no_cudnn", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "test_double_backward_chainerx", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "test_call_cudnn_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "test_call_cudnn_backward", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "unittest", "type": "module"}, {"lineNumber": 175, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "check_forward_options", "type": "Dict[nothing, nothing]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "check_backward_options", "type": "Dict[nothing, nothing]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "check_double_backward_options", "type": "Dict[nothing, nothing]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "y_expect", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 175, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "value", "type": "int"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 37, "col_offset": 67, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 38, "col_offset": 68, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "check_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "logaddexp", "type": "Any"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "log_z", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "y_expect", "type": "Any"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "check_forward", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "check_forward", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "check_forward", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "check_forward", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "check_forward", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "check_backward", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "gy", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "check_backward", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "check_backward", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "check_backward", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "check_backward", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "check_double_backward", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "gy", "type": "Any"}, {"lineNumber": 122, "col_offset": 52, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "check_double_backward", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "check_double_backward", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "check_double_backward", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 151, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 152, "col_offset": 65, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "expect", "type": "bool"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "log_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "gy", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "astype", "type": "Any"}, {"lineNumber": 36, "col_offset": 68, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 37, "col_offset": 67, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 68, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 50, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "log_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "ufunc", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "axis", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "check_forward_options", "type": "Union[Dict[nothing, nothing], Dict[str, float]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "asfortranarray", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "array", "type": "Any"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "log_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "axis", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 85, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "check_backward", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "gy_data", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 95, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 95, "col_offset": 49, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 95, "col_offset": 61, "nodeName": "gy", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "asfortranarray", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "asfortranarray", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 105, "col_offset": 61, "nodeName": "gy", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 52, "nodeName": "array", "type": "Any"}, {"lineNumber": 109, "col_offset": 67, "nodeName": "gy", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "log_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 114, "col_offset": 44, "nodeName": "axis", "type": "Any"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 116, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "check_double_backward", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "gy_data", "type": "Any"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "ggx_data", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 127, "col_offset": 45, "nodeName": "gy", "type": "Any"}, {"lineNumber": 127, "col_offset": 55, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 127, "col_offset": 67, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 132, "col_offset": 45, "nodeName": "gy", "type": "Any"}, {"lineNumber": 132, "col_offset": 55, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 132, "col_offset": 67, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 139, "col_offset": 27, "nodeName": "gy", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 151, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 153, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "should_use_cudnn", "type": "Callable[..., bool]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 161, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 162, "col_offset": 64, "nodeName": "func", "type": "Any"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 167, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "forward", "type": "Callable[[], Any]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 65, "nodeName": "func", "type": "Any"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "float16", "type": "Any"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "numpy", "type": "module"}, {"lineNumber": 34, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 36, "col_offset": 68, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "shape", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 38, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "functions", "type": "module"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "axis", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "cuda", "type": "module"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "cuda", "type": "module"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "float64", "type": "Any"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "check_backward_options", "type": "Union[Dict[nothing, nothing], Dict[str, float]]"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "cuda", "type": "module"}, {"lineNumber": 95, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 49, "nodeName": "cuda", "type": "module"}, {"lineNumber": 95, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 100, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 101, "col_offset": 49, "nodeName": "gy", "type": "Any"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "cuda", "type": "module"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "cuda", "type": "module"}, {"lineNumber": 105, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 52, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 109, "col_offset": 67, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 114, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "float64", "type": "Any"}, {"lineNumber": 119, "col_offset": 39, "nodeName": "check_double_backward_options", "type": "Union[Dict[nothing, nothing], Dict[str, float]]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "cuda", "type": "module"}, {"lineNumber": 127, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 55, "nodeName": "cuda", "type": "module"}, {"lineNumber": 127, "col_offset": 67, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "cuda", "type": "module"}, {"lineNumber": 132, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 55, "nodeName": "cuda", "type": "module"}, {"lineNumber": 132, "col_offset": 67, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 139, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 153, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "chainer", "type": "module"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 161, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "patch", "type": "Callable[..., mock._patch]"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "forward", "type": "Callable[[], Any]"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "called", "type": "Any"}, {"lineNumber": 164, "col_offset": 46, "nodeName": "expect", "type": "bool"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 167, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "patch", "type": "Callable[..., mock._patch]"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "backward", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 33, "nodeName": "called", "type": "Any"}, {"lineNumber": 172, "col_offset": 46, "nodeName": "expect", "type": "bool"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "numpy", "type": "module"}, {"lineNumber": 34, "col_offset": 35, "nodeName": "value", "type": "int"}, {"lineNumber": 34, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 36, "col_offset": 49, "nodeName": "shape", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "x", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 38, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "numpy", "type": "module"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 100, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 101, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 119, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "testing", "type": "module"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "func", "type": "Any"}, {"lineNumber": 164, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "testing", "type": "module"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 33, "nodeName": "func", "type": "Any"}, {"lineNumber": 172, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 36, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 38, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "numpy", "type": "module"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "cuda", "type": "module"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "cuda", "type": "module"}]