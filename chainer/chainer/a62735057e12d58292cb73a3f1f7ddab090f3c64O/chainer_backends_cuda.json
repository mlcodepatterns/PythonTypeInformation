[{"lineNumber": 125, "col_offset": 0, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 263, "col_offset": 0, "nodeName": "get_device_from_id", "type": "Callable[[Optional[int]], Any]"}, {"lineNumber": 277, "col_offset": 0, "nodeName": "get_device_from_array", "type": "Callable[..., Any]"}, {"lineNumber": 307, "col_offset": 0, "nodeName": "get_device", "type": "Callable[..., Any]"}, {"lineNumber": 342, "col_offset": 0, "nodeName": "_get_cuda_device", "type": "Callable[..., Any]"}, {"lineNumber": 380, "col_offset": 0, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 415, "col_offset": 0, "nodeName": "_array_to_gpu", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 458, "col_offset": 0, "nodeName": "to_cpu", "type": "Callable[..., Any]"}, {"lineNumber": 479, "col_offset": 0, "nodeName": "_array_to_cpu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 489, "col_offset": 0, "nodeName": "copy", "type": "Callable[..., Any]"}, {"lineNumber": 529, "col_offset": 0, "nodeName": "memoize", "type": "Callable[..., Any]"}, {"lineNumber": 553, "col_offset": 0, "nodeName": "clear_memo", "type": "Callable[[], Any]"}, {"lineNumber": 568, "col_offset": 0, "nodeName": "elementwise", "type": "Callable[..., Any]"}, {"lineNumber": 586, "col_offset": 0, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 606, "col_offset": 0, "nodeName": "raw", "type": "Callable[..., Any]"}, {"lineNumber": 624, "col_offset": 0, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 648, "col_offset": 0, "nodeName": "get_max_workspace_size", "type": "Callable[[], Any]"}, {"lineNumber": 663, "col_offset": 0, "nodeName": "set_max_workspace_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 677, "col_offset": 0, "nodeName": "fuse", "type": "Callable[..., Any]"}, {"lineNumber": 707, "col_offset": 0, "nodeName": "should_use_cudnn", "type": "Callable[..., Any]"}, {"lineNumber": 745, "col_offset": 0, "nodeName": "should_use_cudnn_tensor_core", "type": "Callable[[Any], Any]"}, {"lineNumber": 770, "col_offset": 0, "nodeName": "get_cudnn_dropout_states", "type": "Callable[[], Any]"}, {"lineNumber": 781, "col_offset": 0, "nodeName": "get_cudnn_dropout_states_core", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "available", "type": "bool"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "cudnn_enabled", "type": "bool"}, {"lineNumber": 111, "col_offset": 3, "nodeName": "available", "type": "bool"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 182, "col_offset": 0, "nodeName": "DummyDevice", "type": "DummyDeviceType"}, {"lineNumber": 188, "col_offset": 3, "nodeName": "available", "type": "bool"}, {"lineNumber": 194, "col_offset": 0, "nodeName": "_integer_types", "type": "Tuple[Any, ...]"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "Device", "type": "Type[chainer._backend.Device]"}, {"lineNumber": 263, "col_offset": 55, "nodeName": "Device", "type": "Any"}, {"lineNumber": 277, "col_offset": 47, "nodeName": "Device", "type": "Any"}, {"lineNumber": 361, "col_offset": 5, "nodeName": "Device", "type": "Any"}, {"lineNumber": 698, "col_offset": 0, "nodeName": "_SHOULD_USE_CUDNN", "type": "Dict[str, Dict[str, bool]]"}, {"lineNumber": 704, "col_offset": 0, "nodeName": "_cudnn_version", "type": "Any"}, {"lineNumber": 742, "col_offset": 0, "nodeName": "_tensor_core_flag", "type": "Dict[str, Optional[bool]]"}, {"lineNumber": 778, "col_offset": 0, "nodeName": "_dropout_states_count", "type": "Iterator[Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "available", "type": "bool"}, {"lineNumber": 69, "col_offset": 7, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "_cudnn_disabled_by_user", "type": "bool"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "id", "type": "int"}, {"lineNumber": 182, "col_offset": 14, "nodeName": "DummyDeviceType", "type": "Type[DummyDeviceType]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "memory_pool", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "pinned_memory_pool", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "integer_types", "type": "Tuple[Type[int]]"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "_backend", "type": "module"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "xp", "type": "Any"}, {"lineNumber": 204, "col_offset": 9, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "supported_array_types", "type": "Tuple[Any]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "__hash__", "type": "Callable[[chainer._backend.Device], int]"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "__hash__", "type": "Callable[[chainer._backend.Device], int]"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "DummyDevice", "type": "DummyDeviceType"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 301, "col_offset": 17, "nodeName": "arrays", "type": "Tuple[Any]"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "DummyDevice", "type": "DummyDeviceType"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "arg", "type": "Any"}, {"lineNumber": 344, "col_offset": 15, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 356, "col_offset": 11, "nodeName": "DummyDevice", "type": "DummyDeviceType"}, {"lineNumber": 523, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 542, "col_offset": 7, "nodeName": "available", "type": "bool"}, {"lineNumber": 550, "col_offset": 11, "nodeName": "dummy_decorator", "type": "Callable[[Any], Any]"}, {"lineNumber": 561, "col_offset": 7, "nodeName": "available", "type": "bool"}, {"lineNumber": 658, "col_offset": 7, "nodeName": "cudnn_enabled", "type": "bool"}, {"lineNumber": 673, "col_offset": 7, "nodeName": "cudnn_enabled", "type": "bool"}, {"lineNumber": 687, "col_offset": 7, "nodeName": "available", "type": "bool"}, {"lineNumber": 704, "col_offset": 44, "nodeName": "cudnn_enabled", "type": "bool"}, {"lineNumber": 732, "col_offset": 4, "nodeName": "flags", "type": "Dict[str, bool]"}, {"lineNumber": 734, "col_offset": 4, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 734, "col_offset": 16, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 755, "col_offset": 4, "nodeName": "use_cudnn_tensor_core", "type": "Any"}, {"lineNumber": 755, "col_offset": 28, "nodeName": "use_cudnn_tensor_core", "type": "Any"}, {"lineNumber": 760, "col_offset": 4, "nodeName": "use_tensor_core", "type": "Optional[bool]"}, {"lineNumber": 763, "col_offset": 11, "nodeName": "use_tensor_core", "type": "Any"}, {"lineNumber": 774, "col_offset": 4, "nodeName": "thread_id", "type": "Any"}, {"lineNumber": 774, "col_offset": 16, "nodeName": "ident", "type": "Any"}, {"lineNumber": 778, "col_offset": 24, "nodeName": "count", "type": "Callable"}, {"lineNumber": 783, "col_offset": 4, "nodeName": "states_id", "type": "Any"}, {"lineNumber": 784, "col_offset": 4, "nodeName": "seed", "type": "Optional[str]"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "_resolution_error", "type": "Exception"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "e", "type": "Exception"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "cupy", "type": "object"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "cudnn", "type": "Optional[module]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "libcudnn", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "cudnn_enabled", "type": "bool"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "available", "type": "bool"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "msg", "type": "str"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "msg", "type": "str"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "_already_warned", "type": "bool"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "self", "type": "DummyDeviceType"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "get_default_memory_pool", "type": "Any"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "get_default_pinned_memory_pool", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "six", "type": "module"}, {"lineNumber": 194, "col_offset": 38, "nodeName": "integer", "type": "Any"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "Device", "type": "Type[chainer._backend.Device]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 214, "col_offset": 22, "nodeName": "device", "type": "Any"}, {"lineNumber": 270, "col_offset": 7, "nodeName": "device_id", "type": "Optional[int]"}, {"lineNumber": 277, "col_offset": 35, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 338, "col_offset": 53, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 339, "col_offset": 11, "nodeName": "_get_cuda_device", "type": "Callable[..., Any]"}, {"lineNumber": 367, "col_offset": 7, "nodeName": "device", "type": "Any"}, {"lineNumber": 369, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 369, "col_offset": 18, "nodeName": "device", "type": "Any"}, {"lineNumber": 369, "col_offset": 26, "nodeName": "Device", "type": "Any"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 373, "col_offset": 11, "nodeName": "Device", "type": "Any"}, {"lineNumber": 400, "col_offset": 7, "nodeName": "stream", "type": "Any"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 406, "col_offset": 7, "nodeName": "device", "type": "Any"}, {"lineNumber": 406, "col_offset": 17, "nodeName": "DummyDevice", "type": "DummyDeviceType"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 411, "col_offset": 11, "nodeName": "_convert_arrays", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 416, "col_offset": 7, "nodeName": "array", "type": "Any"}, {"lineNumber": 419, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 419, "col_offset": 18, "nodeName": "array", "type": "Any"}, {"lineNumber": 419, "col_offset": 25, "nodeName": "ndarray", "type": "Type[chainerx.ndarray]"}, {"lineNumber": 432, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 432, "col_offset": 18, "nodeName": "array", "type": "Any"}, {"lineNumber": 432, "col_offset": 25, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "is_numpy", "type": "bool"}, {"lineNumber": 443, "col_offset": 7, "nodeName": "stream", "type": "None"}, {"lineNumber": 451, "col_offset": 9, "nodeName": "device", "type": "Any"}, {"lineNumber": 452, "col_offset": 11, "nodeName": "is_numpy", "type": "bool"}, {"lineNumber": 475, "col_offset": 11, "nodeName": "_convert_arrays", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 480, "col_offset": 7, "nodeName": "array", "type": "Any"}, {"lineNumber": 482, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 482, "col_offset": 18, "nodeName": "array", "type": "Any"}, {"lineNumber": 482, "col_offset": 25, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 486, "col_offset": 11, "nodeName": "_array_to_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 486, "col_offset": 30, "nodeName": "array", "type": "Any"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 512, "col_offset": 11, "nodeName": "stream", "type": "Any"}, {"lineNumber": 514, "col_offset": 7, "nodeName": "out", "type": "Any"}, {"lineNumber": 549, "col_offset": 15, "nodeName": "ret", "type": "Callable[..., Any]"}, {"lineNumber": 581, "col_offset": 4, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 582, "col_offset": 11, "nodeName": "ElementwiseKernel", "type": "Any"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "in_params", "type": "Any"}, {"lineNumber": 583, "col_offset": 19, "nodeName": "out_params", "type": "Any"}, {"lineNumber": 583, "col_offset": 31, "nodeName": "operation", "type": "Any"}, {"lineNumber": 583, "col_offset": 42, "nodeName": "name", "type": "Any"}, {"lineNumber": 600, "col_offset": 4, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 601, "col_offset": 11, "nodeName": "ReductionKernel", "type": "Any"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "in_params", "type": "Any"}, {"lineNumber": 602, "col_offset": 19, "nodeName": "out_params", "type": "Any"}, {"lineNumber": 602, "col_offset": 31, "nodeName": "map_expr", "type": "Any"}, {"lineNumber": 602, "col_offset": 41, "nodeName": "reduce_expr", "type": "Any"}, {"lineNumber": 602, "col_offset": 54, "nodeName": "post_map_expr", "type": "Any"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "identity", "type": "Any"}, {"lineNumber": 603, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 617, "col_offset": 4, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 618, "col_offset": 11, "nodeName": "RawKernel", "type": "Any"}, {"lineNumber": 618, "col_offset": 26, "nodeName": "code", "type": "Any"}, {"lineNumber": 618, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 645, "col_offset": 11, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 704, "col_offset": 17, "nodeName": "getVersion", "type": "Any"}, {"lineNumber": 725, "col_offset": 7, "nodeName": "_cudnn_version", "type": "Any"}, {"lineNumber": 725, "col_offset": 24, "nodeName": "lowest_version", "type": "Any"}, {"lineNumber": 728, "col_offset": 7, "nodeName": "level", "type": "Any"}, {"lineNumber": 728, "col_offset": 20, "nodeName": "_SHOULD_USE_CUDNN", "type": "Dict[str, Dict[str, bool]]"}, {"lineNumber": 732, "col_offset": 12, "nodeName": "_SHOULD_USE_CUDNN", "type": "Dict[str, Dict[str, bool]]"}, {"lineNumber": 734, "col_offset": 16, "nodeName": "config", "type": "chainer.configuration.LocalConfig"}, {"lineNumber": 735, "col_offset": 7, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 735, "col_offset": 24, "nodeName": "flags", "type": "Dict[str, bool]"}, {"lineNumber": 739, "col_offset": 11, "nodeName": "flags", "type": "Dict[str, bool]"}, {"lineNumber": 755, "col_offset": 28, "nodeName": "config", "type": "chainer.configuration.LocalConfig"}, {"lineNumber": 756, "col_offset": 7, "nodeName": "use_cudnn_tensor_core", "type": "Any"}, {"lineNumber": 756, "col_offset": 36, "nodeName": "_tensor_core_flag", "type": "Dict[str, Optional[bool]]"}, {"lineNumber": 760, "col_offset": 22, "nodeName": "_tensor_core_flag", "type": "Dict[str, Optional[bool]]"}, {"lineNumber": 761, "col_offset": 7, "nodeName": "use_tensor_core", "type": "Any"}, {"lineNumber": 762, "col_offset": 8, "nodeName": "use_tensor_core", "type": "Any"}, {"lineNumber": 771, "col_offset": 11, "nodeName": "cudnn_enabled", "type": "bool"}, {"lineNumber": 775, "col_offset": 11, "nodeName": "get_cudnn_dropout_states_core", "type": "Any"}, {"lineNumber": 775, "col_offset": 41, "nodeName": "thread_id", "type": "Any"}, {"lineNumber": 778, "col_offset": 24, "nodeName": "itertools", "type": "module"}, {"lineNumber": 783, "col_offset": 16, "nodeName": "next", "type": "Callable"}, {"lineNumber": 783, "col_offset": 21, "nodeName": "_dropout_states_count", "type": "Iterator[Any]"}, {"lineNumber": 784, "col_offset": 11, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 785, "col_offset": 7, "nodeName": "seed", "type": "Optional[str]"}, {"lineNumber": 792, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 794, "col_offset": 12, "nodeName": "uint64", "type": "Any"}, {"lineNumber": 794, "col_offset": 25, "nodeName": "states_id", "type": "Any"}, {"lineNumber": 795, "col_offset": 11, "nodeName": "DropoutStates", "type": "Any"}, {"lineNumber": 795, "col_offset": 37, "nodeName": "seed", "type": "Any"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "Shape", "type": "Type[Tuple[int, ...]]"}, {"lineNumber": 81, "col_offset": 63, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "_cudnn_disabled_by_user", "type": "bool"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "_resolution_error", "type": "Exception"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "e", "type": "Exception"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "libcudnn", "type": "object"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "_resolution_error", "type": "Exception"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "msg", "type": "str"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "cudnn_enabled", "type": "bool"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "_cudnn_disabled_by_user", "type": "bool"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 176, "col_offset": 33, "nodeName": "DummyDeviceType", "type": "Type[DummyDeviceType]"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 194, "col_offset": 38, "nodeName": "numpy", "type": "module"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "_backend", "type": "module"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 211, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 211, "col_offset": 34, "nodeName": "Device", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "GpuDevice"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "GpuDevice", "type": "Type[GpuDevice]"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 236, "col_offset": 33, "nodeName": "id", "type": "Any"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "__name__", "type": "str"}, {"lineNumber": 243, "col_offset": 37, "nodeName": "id", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "Device", "type": "Any"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "id", "type": "Any"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "_array_to_gpu", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "array", "type": "Any"}, {"lineNumber": 251, "col_offset": 36, "nodeName": "device", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "use", "type": "Any"}, {"lineNumber": 263, "col_offset": 34, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "device_id", "type": "Optional[int]"}, {"lineNumber": 303, "col_offset": 19, "nodeName": "device", "type": "Any"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "warnings", "type": "module"}, {"lineNumber": 339, "col_offset": 29, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 348, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 348, "col_offset": 22, "nodeName": "arg", "type": "Any"}, {"lineNumber": 348, "col_offset": 27, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 351, "col_offset": 19, "nodeName": "device", "type": "Any"}, {"lineNumber": 352, "col_offset": 11, "nodeName": "available", "type": "bool"}, {"lineNumber": 353, "col_offset": 19, "nodeName": "arg", "type": "Any"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 368, "col_offset": 15, "nodeName": "Device", "type": "Any"}, {"lineNumber": 372, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 373, "col_offset": 11, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 373, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 373, "col_offset": 27, "nodeName": "device", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 403, "col_offset": 33, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 407, "col_offset": 17, "nodeName": "Device", "type": "Any"}, {"lineNumber": 409, "col_offset": 17, "nodeName": "_get_device_or_current", "type": "Callable[[Optional[Any]], Any]"}, {"lineNumber": 409, "col_offset": 40, "nodeName": "device", "type": "Any"}, {"lineNumber": 411, "col_offset": 11, "nodeName": "_backend", "type": "module"}, {"lineNumber": 419, "col_offset": 25, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 422, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 427, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 427, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 433, "col_offset": 11, "nodeName": "device", "type": "Any"}, {"lineNumber": 433, "col_offset": 27, "nodeName": "device", "type": "Any"}, {"lineNumber": 434, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 436, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 436, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 436, "col_offset": 27, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "is_numpy", "type": "bool"}, {"lineNumber": 444, "col_offset": 13, "nodeName": "device", "type": "Any"}, {"lineNumber": 455, "col_offset": 15, "nodeName": "array", "type": "Any"}, {"lineNumber": 455, "col_offset": 26, "nodeName": "array", "type": "Any"}, {"lineNumber": 475, "col_offset": 11, "nodeName": "_backend", "type": "module"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 486, "col_offset": 11, "nodeName": "_cpu", "type": "module"}, {"lineNumber": 515, "col_offset": 11, "nodeName": "out_device", "type": "Any"}, {"lineNumber": 516, "col_offset": 12, "nodeName": "out_device", "type": "Any"}, {"lineNumber": 516, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 520, "col_offset": 9, "nodeName": "get_device_from_array", "type": "Callable[..., Any]"}, {"lineNumber": 520, "col_offset": 31, "nodeName": "array", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "copyto", "type": "Any"}, {"lineNumber": 521, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 521, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 543, "col_offset": 15, "nodeName": "memoize", "type": "Any"}, {"lineNumber": 543, "col_offset": 28, "nodeName": "for_each_device", "type": "bool"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "clear_memo", "type": "Any"}, {"lineNumber": 582, "col_offset": 11, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 583, "col_offset": 50, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 601, "col_offset": 11, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 603, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 618, "col_offset": 11, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 618, "col_offset": 39, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 618, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 645, "col_offset": 11, "nodeName": "backend", "type": "module"}, {"lineNumber": 645, "col_offset": 45, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 659, "col_offset": 15, "nodeName": "get_max_workspace_size", "type": "Any"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "set_max_workspace_size", "type": "Any"}, {"lineNumber": 674, "col_offset": 37, "nodeName": "size", "type": "Any"}, {"lineNumber": 688, "col_offset": 15, "nodeName": "fuse", "type": "Any"}, {"lineNumber": 704, "col_offset": 17, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 729, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 732, "col_offset": 30, "nodeName": "level", "type": "Any"}, {"lineNumber": 736, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 739, "col_offset": 17, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 757, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 760, "col_offset": 40, "nodeName": "use_cudnn_tensor_core", "type": "Any"}, {"lineNumber": 762, "col_offset": 26, "nodeName": "is_tensor_core_available", "type": "Any"}, {"lineNumber": 762, "col_offset": 57, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 772, "col_offset": 14, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 774, "col_offset": 16, "nodeName": "current_thread", "type": "Callable[[], threading.Thread]"}, {"lineNumber": 784, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 787, "col_offset": 12, "nodeName": "seed_str", "type": "bytes"}, {"lineNumber": 788, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 789, "col_offset": 15, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 792, "col_offset": 15, "nodeName": "uint64", "type": "Any"}, {"lineNumber": 792, "col_offset": 28, "nodeName": "seed", "type": "Optional[str]"}, {"lineNumber": 794, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 795, "col_offset": 11, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "types", "type": "module"}, {"lineNumber": 81, "col_offset": 63, "nodeName": "numpy", "type": "module"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "get", "type": "Callable"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "self", "type": "DummyDeviceType"}, {"lineNumber": 179, "col_offset": 28, "nodeName": "other", "type": "Any"}, {"lineNumber": 224, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "Device", "type": "Any"}, {"lineNumber": 226, "col_offset": 32, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "array", "type": "Any"}, {"lineNumber": 230, "col_offset": 29, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 230, "col_offset": 42, "nodeName": "device", "type": "Any"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "GpuDevice", "type": "Type[GpuDevice]"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "device", "type": "Any"}, {"lineNumber": 236, "col_offset": 33, "nodeName": "device", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 239, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 239, "col_offset": 33, "nodeName": "GpuDevice", "type": "Type[GpuDevice]"}, {"lineNumber": 239, "col_offset": 48, "nodeName": "device", "type": "Any"}, {"lineNumber": 239, "col_offset": 64, "nodeName": "device", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "__class__", "type": "Type[GpuDevice]"}, {"lineNumber": 243, "col_offset": 37, "nodeName": "device", "type": "Any"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "device", "type": "Any"}, {"lineNumber": 251, "col_offset": 36, "nodeName": "self", "type": "GpuDevice"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 257, "col_offset": 26, "nodeName": "array", "type": "Any"}, {"lineNumber": 257, "col_offset": 33, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 257, "col_offset": 46, "nodeName": "device", "type": "Any"}, {"lineNumber": 257, "col_offset": 61, "nodeName": "device", "type": "Any"}, {"lineNumber": 263, "col_offset": 34, "nodeName": "tp", "type": "module"}, {"lineNumber": 263, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 273, "col_offset": 19, "nodeName": "Device", "type": "Any"}, {"lineNumber": 302, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 302, "col_offset": 22, "nodeName": "array", "type": "Any"}, {"lineNumber": 302, "col_offset": 29, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 302, "col_offset": 42, "nodeName": "device", "type": "Any"}, {"lineNumber": 303, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 345, "col_offset": 28, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 345, "col_offset": 37, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 345, "col_offset": 48, "nodeName": "arg", "type": "Any"}, {"lineNumber": 345, "col_offset": 53, "nodeName": "_integer_types", "type": "Tuple[Any, ...]"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "check_cuda_available", "type": "Callable[[], Any]"}, {"lineNumber": 347, "col_offset": 19, "nodeName": "Device", "type": "Any"}, {"lineNumber": 347, "col_offset": 26, "nodeName": "arg", "type": "Any"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 351, "col_offset": 19, "nodeName": "arg", "type": "Any"}, {"lineNumber": 352, "col_offset": 25, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 352, "col_offset": 36, "nodeName": "arg", "type": "Any"}, {"lineNumber": 352, "col_offset": 41, "nodeName": "Device", "type": "Any"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "tp", "type": "module"}, {"lineNumber": 360, "col_offset": 28, "nodeName": "CudaDeviceSpec", "type": "Any"}, {"lineNumber": 368, "col_offset": 15, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 371, "col_offset": 23, "nodeName": "device", "type": "Any"}, {"lineNumber": 371, "col_offset": 31, "nodeName": "_integer_types", "type": "Tuple[Any, ...]"}, {"lineNumber": 371, "col_offset": 51, "nodeName": "device", "type": "Any"}, {"lineNumber": 372, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 372, "col_offset": 68, "nodeName": "device", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 407, "col_offset": 17, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 422, "col_offset": 11, "nodeName": "backend", "type": "Any"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "_to_cupy", "type": "Any"}, {"lineNumber": 424, "col_offset": 38, "nodeName": "array", "type": "Any"}, {"lineNumber": 426, "col_offset": 20, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 426, "col_offset": 38, "nodeName": "array", "type": "Any"}, {"lineNumber": 427, "col_offset": 28, "nodeName": "number", "type": "Any"}, {"lineNumber": 427, "col_offset": 42, "nodeName": "bool_", "type": "Any"}, {"lineNumber": 428, "col_offset": 16, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 428, "col_offset": 30, "nodeName": "array", "type": "Any"}, {"lineNumber": 429, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 429, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 429, "col_offset": 27, "nodeName": "mdarray", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 433, "col_offset": 11, "nodeName": "array", "type": "Any"}, {"lineNumber": 436, "col_offset": 27, "nodeName": "numpy", "type": "module"}, {"lineNumber": 439, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 445, "col_offset": 17, "nodeName": "stream", "type": "Any"}, {"lineNumber": 446, "col_offset": 19, "nodeName": "is_numpy", "type": "bool"}, {"lineNumber": 453, "col_offset": 19, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 453, "col_offset": 32, "nodeName": "array", "type": "Any"}, {"lineNumber": 455, "col_offset": 15, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 484, "col_offset": 13, "nodeName": "get_device_from_array", "type": "Callable[..., Any]"}, {"lineNumber": 484, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 485, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 485, "col_offset": 29, "nodeName": "stream", "type": "Any"}, {"lineNumber": 517, "col_offset": 13, "nodeName": "get_device", "type": "Callable[[Any], chainer._backend.Device]"}, {"lineNumber": 517, "col_offset": 32, "nodeName": "out_device", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 543, "col_offset": 15, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 548, "col_offset": 19, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 645, "col_offset": 11, "nodeName": "chainer", "type": "module"}, {"lineNumber": 659, "col_offset": 15, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 688, "col_offset": 15, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 688, "col_offset": 26, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 688, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 689, "col_offset": 49, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 690, "col_offset": 15, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 704, "col_offset": 17, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 762, "col_offset": 26, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 774, "col_offset": 16, "nodeName": "threading", "type": "module"}, {"lineNumber": 787, "col_offset": 23, "nodeName": "hexlify", "type": "Callable[[Union[bytes, bytearray, memoryview]], bytes]"}, {"lineNumber": 788, "col_offset": 19, "nodeName": "uint64", "type": "Any"}, {"lineNumber": 790, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 792, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 98, "col_offset": 34, "nodeName": "Any", "type": "Any"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "GpuDevice", "type": "Type[GpuDevice]"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "self", "type": "GpuDevice"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 223, "col_offset": 27, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 223, "col_offset": 38, "nodeName": "_integer_types", "type": "Tuple[Any, ...]"}, {"lineNumber": 223, "col_offset": 58, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 224, "col_offset": 65, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 230, "col_offset": 42, "nodeName": "array", "type": "Any"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "array", "type": "Any"}, {"lineNumber": 236, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 239, "col_offset": 48, "nodeName": "other", "type": "Any"}, {"lineNumber": 239, "col_offset": 64, "nodeName": "self", "type": "GpuDevice"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "self", "type": "GpuDevice"}, {"lineNumber": 243, "col_offset": 37, "nodeName": "self", "type": "GpuDevice"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "self", "type": "GpuDevice"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "self", "type": "GpuDevice"}, {"lineNumber": 257, "col_offset": 46, "nodeName": "self", "type": "GpuDevice"}, {"lineNumber": 257, "col_offset": 61, "nodeName": "array", "type": "Any"}, {"lineNumber": 273, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 273, "col_offset": 30, "nodeName": "device_id", "type": "Optional[int]"}, {"lineNumber": 302, "col_offset": 42, "nodeName": "array", "type": "Any"}, {"lineNumber": 345, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "arg", "type": "Any"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "arg", "type": "Any"}, {"lineNumber": 360, "col_offset": 28, "nodeName": "types", "type": "module"}, {"lineNumber": 422, "col_offset": 11, "nodeName": "device", "type": "Any"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 426, "col_offset": 20, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 427, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 427, "col_offset": 42, "nodeName": "numpy", "type": "module"}, {"lineNumber": 428, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 429, "col_offset": 27, "nodeName": "intel64", "type": "module"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 430, "col_offset": 30, "nodeName": "array", "type": "Any"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 449, "col_offset": 23, "nodeName": "array", "type": "Any"}, {"lineNumber": 449, "col_offset": 34, "nodeName": "array", "type": "Any"}, {"lineNumber": 453, "col_offset": 19, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 485, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 517, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 548, "col_offset": 22, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 548, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 689, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 689, "col_offset": 13, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 689, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 689, "col_offset": 32, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 689, "col_offset": 58, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 731, "col_offset": 25, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 731, "col_offset": 30, "nodeName": "level", "type": "Any"}, {"lineNumber": 738, "col_offset": 25, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 738, "col_offset": 30, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 759, "col_offset": 25, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 759, "col_offset": 30, "nodeName": "use_cudnn_tensor_core", "type": "Any"}, {"lineNumber": 787, "col_offset": 23, "nodeName": "binascii", "type": "module"}, {"lineNumber": 787, "col_offset": 40, "nodeName": "urandom", "type": "Callable[[int], bytes]"}, {"lineNumber": 788, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 788, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 788, "col_offset": 36, "nodeName": "seed_str", "type": "bytes"}, {"lineNumber": 790, "col_offset": 19, "nodeName": "uint64", "type": "Any"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 98, "col_offset": 34, "nodeName": "tp", "type": "module"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 422, "col_offset": 11, "nodeName": "array", "type": "Any"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 441, "col_offset": 41, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 441, "col_offset": 46, "nodeName": "array", "type": "Any"}, {"lineNumber": 447, "col_offset": 27, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 447, "col_offset": 40, "nodeName": "array", "type": "Any"}, {"lineNumber": 449, "col_offset": 23, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 787, "col_offset": 40, "nodeName": "os", "type": "module"}, {"lineNumber": 790, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "tp", "type": "module"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "tp", "type": "module"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "tp", "type": "module"}, {"lineNumber": 92, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 447, "col_offset": 27, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 790, "col_offset": 32, "nodeName": "clock", "type": "Callable[[], float]"}, {"lineNumber": 790, "col_offset": 32, "nodeName": "time", "type": "module"}]