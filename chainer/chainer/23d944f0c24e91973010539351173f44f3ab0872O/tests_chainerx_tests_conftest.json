[{"lineNumber": 10, "col_offset": 0, "nodeName": "pytest_configure", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "pytest_collection", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "pytest_collection_finish", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "pytest_runtest_setup", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "pytest_runtest_teardown", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "pytest_generate_tests", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "pytest_collection_modifyitems", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "_register_cuda_marker", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "_setup_cuda_marker", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "_get_required_cuda_devices_from_device_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "_skip_if_no_cuda_device_available", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 0, "nodeName": "device", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "device_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 0, "nodeName": "dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 0, "nodeName": "float_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 0, "nodeName": "signed_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 0, "nodeName": "numeric_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 0, "nodeName": "is_module", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 0, "nodeName": "shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 175, "col_offset": 0, "nodeName": "shape_as_sequence_or_int", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "pairwise_product_dict", "type": "Callable[..., Any]"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "_pairwise_product_dict", "type": "Callable[..., Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "product_dict", "type": "Callable[..., Any]"}, {"lineNumber": 18, "col_offset": 27, "nodeName": "pairwise_product_dict", "type": "Callable[..., Any]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "product_dict", "type": "Callable[..., Any]"}, {"lineNumber": 19, "col_offset": 33, "nodeName": "pairwise_product_dict", "type": "Callable[..., Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "product_dict", "type": "Callable[..., List[Any]]"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "_product_dict_orig", "type": "Callable[..., List[Any]]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "product_dict", "type": "Callable[..., List[Any]]"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "product_dict", "type": "Callable[..., List[Any]]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "product_dict", "type": "Callable[..., List[Any]]"}, {"lineNumber": 25, "col_offset": 33, "nodeName": "product_dict", "type": "Callable[..., List[Any]]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "current_device", "type": "Any"}, {"lineNumber": 43, "col_offset": 7, "nodeName": "marker", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "cuda_marker", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 7, "nodeName": "cuda_marker", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "device_name", "type": "Any"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "param", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "device", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "device_scope", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "device", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "device_name", "type": "Any"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "param", "type": "Any"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "device_name", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "_register_cuda_marker", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 26, "nodeName": "config", "type": "Any"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "_setup_cuda_marker", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "item", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "get_current_device", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "marker", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "args", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "fixture_name", "type": "str"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "items", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "items", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "addinivalue_line", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "m", "type": "Any"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "cuda_marker", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "required_num", "type": "Union[Any, int]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "split", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "_get_required_cuda_devices_from_device_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "device_name", "type": "Any"}, {"lineNumber": 97, "col_offset": 7, "nodeName": "cuda_device_count", "type": "int"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "request", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "_skip_if_no_cuda_device_available", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 38, "nodeName": "device_name", "type": "Any"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "get_device", "type": "Any"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "device_name", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "using_device", "type": "Any"}, {"lineNumber": 110, "col_offset": 41, "nodeName": "device", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "addfinalizer", "type": "Any"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "finalize", "type": "Callable[[], Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "__enter__", "type": "Any"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "request", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "_skip_if_no_cuda_device_available", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "device_name", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "cuda_utils", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "current_device", "type": "Any"}, {"lineNumber": 34, "col_offset": 37, "nodeName": "current_device", "type": "Any"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "m", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "marker", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "device_names", "type": "Any"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "marker", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "device_fixtures", "type": "Dict[str, str]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "parametrize", "type": "Any"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "fixture_name", "type": "str"}, {"lineNumber": 48, "col_offset": 43, "nodeName": "device_names", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "cuda_marker", "type": "Any"}, {"lineNumber": 78, "col_offset": 46, "nodeName": "args", "type": "Any"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "required_num", "type": "Union[Any, int]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "device_name", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 88, "col_offset": 7, "nodeName": "s", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "get_cuda_limit", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "skip", "type": "Any"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "__exit__", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "request", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "device_scope", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "iter_markers", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "name", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 53, "col_offset": 46, "nodeName": "location", "type": "Any"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "iter_markers", "type": "Any"}, {"lineNumber": 75, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 78, "col_offset": 46, "nodeName": "cuda_marker", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "get_cuda_limit", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "skip", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "cuda_utils", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "device_scope", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "definition", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "m", "type": "Any"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "marker", "type": "Any"}, {"lineNumber": 53, "col_offset": 46, "nodeName": "item", "type": "Any"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "item", "type": "Any"}, {"lineNumber": 75, "col_offset": 53, "nodeName": "m", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "cuda_marker", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "cuda_utils", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 80, "col_offset": 57, "nodeName": "required_num", "type": "Union[Any, int]"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "metafunc", "type": "Any"}]