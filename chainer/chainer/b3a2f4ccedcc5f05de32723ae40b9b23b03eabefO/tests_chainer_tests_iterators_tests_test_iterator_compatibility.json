[{"lineNumber": 12, "col_offset": 22, "nodeName": "Serializer", "type": "Type[chainer.serializer.Serializer]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "__getitem__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "Deserializer", "type": "Type[chainer.serializer.Deserializer]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "__getitem__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "test_iterator_compatibilty", "type": "Callable[[Any], Any]"}, {"lineNumber": 12, "col_offset": 22, "nodeName": "serializer", "type": "module"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "serializer", "type": "module"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 16, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "value", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "n_processes", "type": "int"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "DummySerializer"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "target", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "DummyDeserializer"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "value", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "n_processes", "type": "int"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "n_prefetch", "type": "Any"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "shared_mem", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "it_before", "type": "Callable[[], Any]"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "it_after", "type": "Callable[[], Any]"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "permutations", "type": "Callable"}, {"lineNumber": 65, "col_offset": 58, "nodeName": "iters", "type": "Tuple[Callable[[], Any], Callable[[], Any]]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "it", "type": "Union[chainer.iterators.multiprocess_iterator.MultiprocessIterator, chainer.iterators.serial_iterator.SerialIterator]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "target", "type": "Dict[nothing, nothing]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "it", "type": "Union[chainer.iterators.serial_iterator.SerialIterator, chainer.iterators.multiprocess_iterator.MultiprocessIterator]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "DummySerializer"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "key", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "self", "type": "DummySerializer"}, {"lineNumber": 23, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "target", "type": "Any"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "itertools", "type": "module"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "it_before", "type": "Callable[[], Any]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "next", "type": "Union[Callable[[], Any], Callable[[], List[Any]]]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 72, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "next", "type": "Union[Callable[[], Any], Callable[[], List[Any]]]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "serialize", "type": "Callable[[Any], None]"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "it_after", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "serialize", "type": "Callable[[Any], None]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "next", "type": "Union[Callable[[], Any], Callable[[], List[Any]]]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 91, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "is_new_epoch", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 63, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "epoch_detail", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 15, "col_offset": 14, "nodeName": "DummySerializer", "type": "Type[DummySerializer]"}, {"lineNumber": 15, "col_offset": 31, "nodeName": "self", "type": "DummySerializer"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "DummyDeserializer", "type": "Type[DummyDeserializer]"}, {"lineNumber": 29, "col_offset": 33, "nodeName": "self", "type": "DummyDeserializer"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "self", "type": "DummyDeserializer"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "key", "type": "Any"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "numpy", "type": "module"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "copyto", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "SerialIterator", "type": "Type[chainer.iterators.serial_iterator.SerialIterator]"}, {"lineNumber": 61, "col_offset": 45, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "MultiprocessIterator", "type": "Type[chainer.iterators.multiprocess_iterator.MultiprocessIterator]"}, {"lineNumber": 62, "col_offset": 51, "nodeName": "dataset", "type": "List[int]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "it", "type": "Union[chainer.iterators.multiprocess_iterator.MultiprocessIterator, chainer.iterators.serial_iterator.SerialIterator]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "it", "type": "Union[chainer.iterators.multiprocess_iterator.MultiprocessIterator, chainer.iterators.serial_iterator.SerialIterator]"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "it", "type": "Union[chainer.iterators.multiprocess_iterator.MultiprocessIterator, chainer.iterators.serial_iterator.SerialIterator]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "it", "type": "Union[chainer.iterators.multiprocess_iterator.MultiprocessIterator, chainer.iterators.serial_iterator.SerialIterator]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "it", "type": "Union[chainer.iterators.multiprocess_iterator.MultiprocessIterator, chainer.iterators.serial_iterator.SerialIterator]"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "it", "type": "Union[chainer.iterators.multiprocess_iterator.MultiprocessIterator, chainer.iterators.serial_iterator.SerialIterator]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "it", "type": "Union[chainer.iterators.multiprocess_iterator.MultiprocessIterator, chainer.iterators.serial_iterator.SerialIterator]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "it", "type": "Union[chainer.iterators.multiprocess_iterator.MultiprocessIterator, chainer.iterators.serial_iterator.SerialIterator]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "it", "type": "Union[chainer.iterators.multiprocess_iterator.MultiprocessIterator, chainer.iterators.serial_iterator.SerialIterator]"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "DummySerializer", "type": "Type[DummySerializer]"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "target", "type": "Dict[nothing, nothing]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "it", "type": "Union[chainer.iterators.multiprocess_iterator.MultiprocessIterator, chainer.iterators.serial_iterator.SerialIterator]"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "DummyDeserializer", "type": "Type[DummyDeserializer]"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "target", "type": "Dict[nothing, nothing]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "it", "type": "Union[chainer.iterators.multiprocess_iterator.MultiprocessIterator, chainer.iterators.serial_iterator.SerialIterator]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "it", "type": "Union[chainer.iterators.multiprocess_iterator.MultiprocessIterator, chainer.iterators.serial_iterator.SerialIterator]"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "it", "type": "Union[chainer.iterators.multiprocess_iterator.MultiprocessIterator, chainer.iterators.serial_iterator.SerialIterator]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "it", "type": "Union[chainer.iterators.multiprocess_iterator.MultiprocessIterator, chainer.iterators.serial_iterator.SerialIterator]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "it", "type": "Union[chainer.iterators.multiprocess_iterator.MultiprocessIterator, chainer.iterators.serial_iterator.SerialIterator]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "target", "type": "Any"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "iterators", "type": "module"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "iterators", "type": "module"}, {"lineNumber": 62, "col_offset": 65, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "batch3", "type": "Any"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "self", "type": "DummyDeserializer"}, {"lineNumber": 39, "col_offset": 44, "nodeName": "key", "type": "Any"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "numpy", "type": "module"}, {"lineNumber": 41, "col_offset": 46, "nodeName": "target", "type": "Any"}, {"lineNumber": 62, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 93, "col_offset": 45, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 41, "col_offset": 46, "nodeName": "self", "type": "DummyDeserializer"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "key", "type": "Any"}]