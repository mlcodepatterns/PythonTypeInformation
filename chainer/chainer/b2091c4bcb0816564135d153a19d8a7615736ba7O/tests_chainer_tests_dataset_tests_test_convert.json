[{"lineNumber": 362, "col_offset": 0, "nodeName": "get_xp", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "ConverterTestBase", "type": "Type[ConverterTestBase]"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 146, "col_offset": 36, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "_XFailConcatWithAsyncTransfer", "type": "Type[_XFailConcatWithAsyncTransfer]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "ConverterTestBase", "type": "Type[ConverterTestBase]"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 188, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 290, "col_offset": 41, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 373, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 391, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 412, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "inject_backend_tests", "type": "Callable[[Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "unittest", "type": "module"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 188, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 290, "col_offset": 41, "nodeName": "unittest", "type": "module"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "int_arrays", "type": "List[int]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "float_arrays", "type": "List[float]"}, {"lineNumber": 363, "col_offset": 7, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 373, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 391, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 412, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 425, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 425, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 425, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "backend", "type": "module"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "np_array", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "arrays", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "tuples", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "tuples", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "dicts", "type": "List[Dict[str, Any]]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "converter", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "concat_examples", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "converter", "type": "chainer.dataset.convert.ConcatWithAsyncTransfer"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "arrays", "type": "List[Any]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "arrays", "type": "Tuple[Any, ...]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "d", "type": "Dict[str, Any]"}, {"lineNumber": 263, "col_offset": 17, "nodeName": "dicts", "type": "List[Dict[str, Any]]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "np_array", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "device", "type": "Optional[int]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "device", "type": "int"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "device", "type": "str"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 366, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "src_xp", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "dst_xp", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "src_xp", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "dst_xp", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "src_xp", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "dst_xp", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 425, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "testing", "type": "module"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "converter", "type": "Any"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 38, "col_offset": 39, "nodeName": "device", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 41, "col_offset": 55, "nodeName": "expected_device", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 44, "nodeName": "array", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "np_array", "type": "Any"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "get_arrays_to_concat", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 43, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "check_concat_arrays", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "arrays", "type": "List[Any]"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "device", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "get_arrays_to_concat", "type": "Any"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "check_concat_arrays", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "get_device", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "get_arrays_to_concat", "type": "Any"}, {"lineNumber": 60, "col_offset": 43, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "check_concat_arrays", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "device", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "converter", "type": "Any"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "tuples", "type": "Any"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "device", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "arr", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "get_tuple_arrays_to_concat", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 49, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "check_concat_tuples", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "tuples", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "device", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "get_tuple_arrays_to_concat", "type": "Any"}, {"lineNumber": 90, "col_offset": 49, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "check_concat_tuples", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "tuples", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "get_device", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "get_tuple_arrays_to_concat", "type": "Any"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "check_concat_tuples", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "device", "type": "Any"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "converter", "type": "Any"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "device", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "arr", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "get_dict_arrays_to_concat", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 47, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "check_concat_dicts", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "dicts", "type": "List[Dict[str, Any]]"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "device", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "get_dict_arrays_to_concat", "type": "Any"}, {"lineNumber": 127, "col_offset": 47, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "check_concat_dicts", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "get_device", "type": "Any"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "get_dict_arrays_to_concat", "type": "Any"}, {"lineNumber": 134, "col_offset": 48, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "check_concat_dicts", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "device", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "dataset", "type": "module"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "test_concat_arrays_to_chainerx", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "test_concat_tuples_to_chainerx", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "test_concat_dicts_to_chainerx", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "ConcatWithAsyncTransfer", "type": "Type[chainer.dataset.convert.ConcatWithAsyncTransfer]"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "concat_examples", "type": "Callable[..., Any]"}, {"lineNumber": 195, "col_offset": 40, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 41, "nodeName": "array", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 218, "col_offset": 17, "nodeName": "concat_examples", "type": "Callable[..., Any]"}, {"lineNumber": 218, "col_offset": 41, "nodeName": "tuples", "type": "List[Union[Any, Tuple[Any, Any]]]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 225, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "concat_examples", "type": "Callable[..., Any]"}, {"lineNumber": 255, "col_offset": 41, "nodeName": "dicts", "type": "List[Dict[str, Any]]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 256, "col_offset": 27, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 257, "col_offset": 27, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 296, "col_offset": 30, "nodeName": "array", "type": "Any"}, {"lineNumber": 296, "col_offset": 37, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 298, "col_offset": 50, "nodeName": "expected_device", "type": "Any"}, {"lineNumber": 302, "col_offset": 16, "nodeName": "concat_examples", "type": "Callable[..., Any]"}, {"lineNumber": 302, "col_offset": 40, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 302, "col_offset": 48, "nodeName": "device", "type": "Any"}, {"lineNumber": 302, "col_offset": 56, "nodeName": "padding", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "check_device", "type": "Any"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "array", "type": "Any"}, {"lineNumber": 304, "col_offset": 33, "nodeName": "device", "type": "Any"}, {"lineNumber": 304, "col_offset": 41, "nodeName": "expected_device", "type": "Any"}, {"lineNumber": 306, "col_offset": 19, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 306, "col_offset": 44, "nodeName": "array", "type": "Any"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 307, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 307, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 307, "col_offset": 24, "nodeName": "np_array", "type": "Any"}, {"lineNumber": 307, "col_offset": 34, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 313, "col_offset": 11, "nodeName": "platform", "type": "str"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "expected_int_dtype", "type": "Any"}, {"lineNumber": 314, "col_offset": 33, "nodeName": "int32", "type": "Any"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "expected_int_dtype", "type": "Any"}, {"lineNumber": 316, "col_offset": 33, "nodeName": "int64", "type": "Any"}, {"lineNumber": 332, "col_offset": 11, "nodeName": "platform", "type": "str"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "expected_int_dtype", "type": "Any"}, {"lineNumber": 333, "col_offset": 33, "nodeName": "int32", "type": "Any"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "expected_int_dtype", "type": "Any"}, {"lineNumber": 335, "col_offset": 33, "nodeName": "int64", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "check_concat_arrays", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "int_arrays", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "device", "type": "int"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "expected_int_dtype", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "check_concat_arrays", "type": "Any"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "float_arrays", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "device", "type": "int"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "float64", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "check_concat_arrays", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "int_arrays", "type": "Any"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "device", "type": "str"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "int64", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "check_concat_arrays", "type": "Any"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "float_arrays", "type": "Any"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "device", "type": "str"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "float64", "type": "Any"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "cuda", "type": "module"}, {"lineNumber": 376, "col_offset": 17, "nodeName": "get_xp", "type": "Callable[[Any], Any]"}, {"lineNumber": 376, "col_offset": 24, "nodeName": "src_gpu", "type": "Any"}, {"lineNumber": 377, "col_offset": 17, "nodeName": "get_xp", "type": "Callable[[Any], Any]"}, {"lineNumber": 377, "col_offset": 24, "nodeName": "dst_gpu", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "to_device", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 379, "col_offset": 30, "nodeName": "device", "type": "Any"}, {"lineNumber": 379, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 380, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 380, "col_offset": 33, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 395, "col_offset": 17, "nodeName": "get_xp", "type": "Callable[[Any], Any]"}, {"lineNumber": 395, "col_offset": 24, "nodeName": "src_gpu", "type": "Any"}, {"lineNumber": 396, "col_offset": 17, "nodeName": "get_xp", "type": "Callable[[Any], Any]"}, {"lineNumber": 396, "col_offset": 24, "nodeName": "dst_gpu", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "to_device", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 398, "col_offset": 30, "nodeName": "device", "type": "Any"}, {"lineNumber": 398, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 399, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 399, "col_offset": 33, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 404, "col_offset": 35, "nodeName": "src_gpu", "type": "Any"}, {"lineNumber": 416, "col_offset": 17, "nodeName": "get_xp", "type": "Callable[[Any], Any]"}, {"lineNumber": 416, "col_offset": 24, "nodeName": "src_gpu", "type": "Any"}, {"lineNumber": 417, "col_offset": 17, "nodeName": "get_xp", "type": "Callable[[Any], Any]"}, {"lineNumber": 417, "col_offset": 24, "nodeName": "dst_gpu", "type": "Any"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "to_device", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 419, "col_offset": 30, "nodeName": "device", "type": "Any"}, {"lineNumber": 419, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 420, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 420, "col_offset": 33, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 422, "col_offset": 40, "nodeName": "device", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "self", "type": "ConverterTestBase"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "ConverterTestBase"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 39, "col_offset": 55, "nodeName": "shape", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "get_device_from_array", "type": "Callable[..., Union[chainer.backends._chainerx.ChainerxDevice, chainer.backends._cpu.CpuDevice, Any, chainer.backends.intel64.Intel64Device]]"}, {"lineNumber": 41, "col_offset": 45, "nodeName": "array", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "self", "type": "ConverterTestBase"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "ConverterTestBase"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "from_device_id", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "ChainerxDevice", "type": "Type[chainer.backends._chainerx.ChainerxDevice]"}, {"lineNumber": 62, "col_offset": 51, "nodeName": "device", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "self", "type": "ConverterTestBase"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "ConverterTestBase"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "shape", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 77, "col_offset": 63, "nodeName": "expected_device", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "arr", "type": "Any"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "tuples", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "self", "type": "ConverterTestBase"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "ConverterTestBase"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "from_device_id", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "ChainerxDevice", "type": "Type[chainer.backends._chainerx.ChainerxDevice]"}, {"lineNumber": 99, "col_offset": 51, "nodeName": "device", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "self", "type": "ConverterTestBase"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "ConverterTestBase"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 111, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 112, "col_offset": 48, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 114, "col_offset": 60, "nodeName": "expected_device", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "arr", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "self", "type": "ConverterTestBase"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "ConverterTestBase"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "from_device_id", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "ChainerxDevice", "type": "Type[chainer.backends._chainerx.ChainerxDevice]"}, {"lineNumber": 136, "col_offset": 51, "nodeName": "device", "type": "Any"}, {"lineNumber": 153, "col_offset": 45, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 153, "col_offset": 53, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 161, "col_offset": 45, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 161, "col_offset": 53, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 169, "col_offset": 52, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "dataset", "type": "module"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "dataset", "type": "module"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 197, "col_offset": 30, "nodeName": "array", "type": "Any"}, {"lineNumber": 197, "col_offset": 38, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 43, "nodeName": "a", "type": "Any"}, {"lineNumber": 199, "col_offset": 50, "nodeName": "a", "type": "Any"}, {"lineNumber": 199, "col_offset": 55, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 201, "col_offset": 41, "nodeName": "array", "type": "Any"}, {"lineNumber": 201, "col_offset": 59, "nodeName": "arrays", "type": "List[Any]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 202, "col_offset": 41, "nodeName": "array", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 203, "col_offset": 41, "nodeName": "array", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 204, "col_offset": 41, "nodeName": "array", "type": "Any"}, {"lineNumber": 204, "col_offset": 59, "nodeName": "arrays", "type": "List[Any]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 205, "col_offset": 41, "nodeName": "array", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 206, "col_offset": 41, "nodeName": "array", "type": "Any"}, {"lineNumber": 206, "col_offset": 59, "nodeName": "arrays", "type": "List[Any]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 207, "col_offset": 41, "nodeName": "array", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 218, "col_offset": 17, "nodeName": "dataset", "type": "module"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 222, "col_offset": 42, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 223, "col_offset": 42, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 225, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 225, "col_offset": 27, "nodeName": "tuples", "type": "List[Union[Any, Tuple[Any, Any]]]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 253, "col_offset": 13, "nodeName": "key", "type": "str"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "d", "type": "Dict[str, Any]"}, {"lineNumber": 254, "col_offset": 21, "nodeName": "dicts", "type": "List[Dict[str, Any]]"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "dataset", "type": "module"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 260, "col_offset": 44, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 261, "col_offset": 44, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "d", "type": "Dict[str, Any]"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "d", "type": "Dict[str, Any]"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 268, "col_offset": 17, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 296, "col_offset": 37, "nodeName": "xp", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "get_device_from_array", "type": "Callable[..., Union[chainer.backends._chainerx.ChainerxDevice, chainer.backends._cpu.CpuDevice, Any, chainer.backends.intel64.Intel64Device]]"}, {"lineNumber": 298, "col_offset": 42, "nodeName": "array", "type": "Any"}, {"lineNumber": 302, "col_offset": 16, "nodeName": "dataset", "type": "module"}, {"lineNumber": 302, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 308, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 308, "col_offset": 30, "nodeName": "expected_dtype", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 310, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 313, "col_offset": 11, "nodeName": "sys", "type": "module"}, {"lineNumber": 314, "col_offset": 33, "nodeName": "numpy", "type": "module"}, {"lineNumber": 316, "col_offset": 33, "nodeName": "numpy", "type": "module"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "check_concat_arrays", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "int_arrays", "type": "Any"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "device", "type": "Any"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "expected_int_dtype", "type": "Any"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "check_concat_arrays", "type": "Any"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "float_arrays", "type": "Any"}, {"lineNumber": 325, "col_offset": 16, "nodeName": "device", "type": "Any"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "float64", "type": "Any"}, {"lineNumber": 332, "col_offset": 11, "nodeName": "sys", "type": "module"}, {"lineNumber": 333, "col_offset": 33, "nodeName": "numpy", "type": "module"}, {"lineNumber": 335, "col_offset": 33, "nodeName": "numpy", "type": "module"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "from_device_id", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "from_device_id", "type": "Any"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "ChainerxDevice", "type": "Type[chainer.backends._chainerx.ChainerxDevice]"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "ChainerxDevice", "type": "Type[chainer.backends._chainerx.ChainerxDevice]"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 376, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 377, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "src_xp", "type": "Any"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "dataset", "type": "module"}, {"lineNumber": 379, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 380, "col_offset": 33, "nodeName": "dst_xp", "type": "Any"}, {"lineNumber": 395, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 396, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "src_xp", "type": "Any"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "dataset", "type": "module"}, {"lineNumber": 398, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 399, "col_offset": 33, "nodeName": "dst_xp", "type": "Any"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "device", "type": "Any"}, {"lineNumber": 401, "col_offset": 39, "nodeName": "device", "type": "Any"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 402, "col_offset": 44, "nodeName": "device", "type": "Any"}, {"lineNumber": 404, "col_offset": 11, "nodeName": "device", "type": "Any"}, {"lineNumber": 404, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 416, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 417, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "src_xp", "type": "Any"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "dataset", "type": "module"}, {"lineNumber": 419, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 420, "col_offset": 33, "nodeName": "dst_xp", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 422, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 422, "col_offset": 29, "nodeName": "device", "type": "Any"}, {"lineNumber": 422, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "backend", "type": "module"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 73, "nodeName": "y", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "GpuDevice", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "backend", "type": "module"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 72, "col_offset": 42, "nodeName": "tuples", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "self", "type": "ConverterTestBase"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "get_device_from_array", "type": "Callable[..., Union[chainer.backends._chainerx.ChainerxDevice, chainer.backends._cpu.CpuDevice, Any, chainer.backends.intel64.Intel64Device]]"}, {"lineNumber": 79, "col_offset": 43, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "GpuDevice", "type": "Any"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "backend", "type": "module"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "keys", "type": "Any"}, {"lineNumber": 109, "col_offset": 61, "nodeName": "keys", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "self", "type": "ConverterTestBase"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "ConverterTestBase"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "get_device_from_array", "type": "Callable[..., Union[chainer.backends._chainerx.ChainerxDevice, chainer.backends._cpu.CpuDevice, Any, chainer.backends.intel64.Intel64Device]]"}, {"lineNumber": 116, "col_offset": 43, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "GpuDevice", "type": "Any"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "backend", "type": "module"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "_XFailConcatWithAsyncTransfer", "type": "Type[_XFailConcatWithAsyncTransfer]"}, {"lineNumber": 152, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "_XFailConcatWithAsyncTransfer", "type": "Type[_XFailConcatWithAsyncTransfer]"}, {"lineNumber": 160, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "_XFailConcatWithAsyncTransfer", "type": "Type[_XFailConcatWithAsyncTransfer]"}, {"lineNumber": 168, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "chainer", "type": "module"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "rand", "type": "Any"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "rand", "type": "Any"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "rand", "type": "Any"}, {"lineNumber": 197, "col_offset": 43, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 222, "col_offset": 30, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 223, "col_offset": 30, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 229, "col_offset": 48, "nodeName": "array", "type": "Any"}, {"lineNumber": 229, "col_offset": 59, "nodeName": "array", "type": "Any"}, {"lineNumber": 229, "col_offset": 68, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 230, "col_offset": 41, "nodeName": "arrays", "type": "Tuple[Any, ...]"}, {"lineNumber": 230, "col_offset": 63, "nodeName": "tuples", "type": "List[Union[Any, Tuple[Any, Any]]]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 231, "col_offset": 41, "nodeName": "arrays", "type": "Tuple[Any, ...]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 232, "col_offset": 41, "nodeName": "arrays", "type": "Tuple[Any, ...]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 233, "col_offset": 41, "nodeName": "arrays", "type": "Tuple[Any, ...]"}, {"lineNumber": 233, "col_offset": 63, "nodeName": "tuples", "type": "List[Union[Any, Tuple[Any, Any]]]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 234, "col_offset": 41, "nodeName": "arrays", "type": "Tuple[Any, ...]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 235, "col_offset": 41, "nodeName": "arrays", "type": "Tuple[Any, ...]"}, {"lineNumber": 235, "col_offset": 63, "nodeName": "tuples", "type": "List[Union[Any, Tuple[Any, Any]]]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 236, "col_offset": 41, "nodeName": "arrays", "type": "Tuple[Any, ...]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 237, "col_offset": 41, "nodeName": "arrays", "type": "Tuple[Any, ...]"}, {"lineNumber": 237, "col_offset": 63, "nodeName": "tuples", "type": "List[Union[Any, Tuple[Any, Any]]]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 238, "col_offset": 41, "nodeName": "arrays", "type": "Tuple[Any, ...]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 239, "col_offset": 41, "nodeName": "arrays", "type": "Tuple[Any, ...]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 240, "col_offset": 41, "nodeName": "arrays", "type": "Tuple[Any, ...]"}, {"lineNumber": 240, "col_offset": 63, "nodeName": "tuples", "type": "List[Union[Any, Tuple[Any, Any]]]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 241, "col_offset": 41, "nodeName": "arrays", "type": "Tuple[Any, ...]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 242, "col_offset": 41, "nodeName": "arrays", "type": "Tuple[Any, ...]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 243, "col_offset": 41, "nodeName": "arrays", "type": "Tuple[Any, ...]"}, {"lineNumber": 243, "col_offset": 63, "nodeName": "tuples", "type": "List[Union[Any, Tuple[Any, Any]]]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 244, "col_offset": 41, "nodeName": "arrays", "type": "Tuple[Any, ...]"}, {"lineNumber": 248, "col_offset": 18, "nodeName": "rand", "type": "Any"}, {"lineNumber": 248, "col_offset": 48, "nodeName": "rand", "type": "Any"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "rand", "type": "Any"}, {"lineNumber": 249, "col_offset": 48, "nodeName": "rand", "type": "Any"}, {"lineNumber": 250, "col_offset": 18, "nodeName": "rand", "type": "Any"}, {"lineNumber": 250, "col_offset": 48, "nodeName": "rand", "type": "Any"}, {"lineNumber": 253, "col_offset": 18, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 253, "col_offset": 43, "nodeName": "arr", "type": "Any"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 260, "col_offset": 30, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 261, "col_offset": 30, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 264, "col_offset": 46, "nodeName": "d", "type": "Dict[str, Any]"}, {"lineNumber": 265, "col_offset": 46, "nodeName": "d", "type": "Dict[str, Any]"}, {"lineNumber": 267, "col_offset": 42, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 268, "col_offset": 42, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 269, "col_offset": 41, "nodeName": "arrays", "type": "Dict[str, Any]"}, {"lineNumber": 269, "col_offset": 65, "nodeName": "dicts", "type": "List[Dict[str, Any]]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 270, "col_offset": 41, "nodeName": "arrays", "type": "Dict[str, Any]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 271, "col_offset": 41, "nodeName": "arrays", "type": "Dict[str, Any]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 272, "col_offset": 41, "nodeName": "arrays", "type": "Dict[str, Any]"}, {"lineNumber": 272, "col_offset": 65, "nodeName": "dicts", "type": "List[Dict[str, Any]]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 273, "col_offset": 41, "nodeName": "arrays", "type": "Dict[str, Any]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 274, "col_offset": 41, "nodeName": "arrays", "type": "Dict[str, Any]"}, {"lineNumber": 274, "col_offset": 65, "nodeName": "dicts", "type": "List[Dict[str, Any]]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 275, "col_offset": 41, "nodeName": "arrays", "type": "Dict[str, Any]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 276, "col_offset": 41, "nodeName": "arrays", "type": "Dict[str, Any]"}, {"lineNumber": 276, "col_offset": 65, "nodeName": "dicts", "type": "List[Dict[str, Any]]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 277, "col_offset": 41, "nodeName": "arrays", "type": "Dict[str, Any]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 278, "col_offset": 41, "nodeName": "arrays", "type": "Dict[str, Any]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 279, "col_offset": 41, "nodeName": "arrays", "type": "Dict[str, Any]"}, {"lineNumber": 279, "col_offset": 65, "nodeName": "dicts", "type": "List[Dict[str, Any]]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 280, "col_offset": 41, "nodeName": "arrays", "type": "Dict[str, Any]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 281, "col_offset": 41, "nodeName": "arrays", "type": "Dict[str, Any]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 282, "col_offset": 41, "nodeName": "arrays", "type": "Dict[str, Any]"}, {"lineNumber": 282, "col_offset": 65, "nodeName": "dicts", "type": "List[Dict[str, Any]]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 283, "col_offset": 41, "nodeName": "arrays", "type": "Dict[str, Any]"}, {"lineNumber": 296, "col_offset": 37, "nodeName": "expected_device", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 303, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 303, "col_offset": 43, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 306, "col_offset": 19, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 308, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 310, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 310, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 321, "col_offset": 16, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "GpuDevice", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "GpuDevice", "type": "Any"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 353, "col_offset": 35, "nodeName": "get_device", "type": "Any"}, {"lineNumber": 353, "col_offset": 55, "nodeName": "device", "type": "str"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 358, "col_offset": 35, "nodeName": "get_device", "type": "Any"}, {"lineNumber": 358, "col_offset": 55, "nodeName": "device", "type": "str"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 401, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 402, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 402, "col_offset": 33, "nodeName": "device", "type": "Any"}, {"lineNumber": 402, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 404, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 405, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 405, "col_offset": 33, "nodeName": "device", "type": "Any"}, {"lineNumber": 405, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 405, "col_offset": 48, "nodeName": "device", "type": "Any"}, {"lineNumber": 422, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 39, "col_offset": 43, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 39, "col_offset": 55, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "backend", "type": "module"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "backend", "type": "module"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "tuples", "type": "Any"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "backend", "type": "module"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 79, "col_offset": 50, "nodeName": "i", "type": "int"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "testing", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "backend", "type": "module"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "backend", "type": "module"}, {"lineNumber": 114, "col_offset": 46, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 116, "col_offset": 50, "nodeName": "key", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "testing", "type": "Any"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "backend", "type": "module"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "backend", "type": "module"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 212, "col_offset": 42, "nodeName": "rand", "type": "Any"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 214, "col_offset": 42, "nodeName": "rand", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 216, "col_offset": 42, "nodeName": "rand", "type": "Any"}, {"lineNumber": 222, "col_offset": 47, "nodeName": "tuples", "type": "List[Union[Any, Tuple[Any, Any]]]"}, {"lineNumber": 223, "col_offset": 47, "nodeName": "tuples", "type": "List[Union[Any, Tuple[Any, Any]]]"}, {"lineNumber": 248, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 248, "col_offset": 48, "nodeName": "random", "type": "Any"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 249, "col_offset": 48, "nodeName": "random", "type": "Any"}, {"lineNumber": 250, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 250, "col_offset": 48, "nodeName": "random", "type": "Any"}, {"lineNumber": 253, "col_offset": 18, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 253, "col_offset": 52, "nodeName": "key", "type": "str"}, {"lineNumber": 253, "col_offset": 57, "nodeName": "arr", "type": "Any"}, {"lineNumber": 260, "col_offset": 49, "nodeName": "dicts", "type": "List[Dict[str, Any]]"}, {"lineNumber": 261, "col_offset": 49, "nodeName": "dicts", "type": "List[Dict[str, Any]]"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 268, "col_offset": 17, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 306, "col_offset": 19, "nodeName": "backend", "type": "module"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 310, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 310, "col_offset": 40, "nodeName": "expected_dtype", "type": "Any"}, {"lineNumber": 321, "col_offset": 16, "nodeName": "backend", "type": "module"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "backend", "type": "module"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 353, "col_offset": 35, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 358, "col_offset": 35, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 402, "col_offset": 33, "nodeName": "y", "type": "Any"}, {"lineNumber": 405, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 405, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "tuples", "type": "Any"}, {"lineNumber": 74, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 77, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "backend", "type": "module"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 61, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 111, "col_offset": 36, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "key", "type": "Any"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "key", "type": "Any"}, {"lineNumber": 114, "col_offset": 53, "nodeName": "key", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "backend", "type": "module"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 119, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "backend", "type": "module"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 212, "col_offset": 42, "nodeName": "random", "type": "Any"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 214, "col_offset": 42, "nodeName": "random", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 216, "col_offset": 42, "nodeName": "random", "type": "Any"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 227, "col_offset": 41, "nodeName": "tuples", "type": "List[Union[Any, Tuple[Any, Any]]]"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 228, "col_offset": 41, "nodeName": "tuples", "type": "List[Union[Any, Tuple[Any, Any]]]"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 248, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 248, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 249, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 250, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 250, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "backend", "type": "module"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "backend", "type": "module"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 268, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "backend", "type": "module"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 82, "col_offset": 50, "nodeName": "i", "type": "int"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "CpuDevice", "type": "Type[chainer.backends._cpu.CpuDevice]"}, {"lineNumber": 119, "col_offset": 50, "nodeName": "key", "type": "Any"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 212, "col_offset": 42, "nodeName": "numpy", "type": "module"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 214, "col_offset": 42, "nodeName": "numpy", "type": "module"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 216, "col_offset": 42, "nodeName": "numpy", "type": "module"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "backend", "type": "module"}, {"lineNumber": 227, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "backend", "type": "module"}, {"lineNumber": 228, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "backend", "type": "module"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "backend", "type": "module"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "backend", "type": "module"}]