[{"lineNumber": 25, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "create_link", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "call_link_with_samples", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "test_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "test_to_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "test_return_samples", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "test_backward_cpu_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 185, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 185, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "batch", "type": "int"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "x_shape", "type": "Tuple[int, int]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "link", "type": "chainer.links.loss.negative_sampling.NegativeSampling"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "orig_negative_sampling", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "negative_sampling", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "t_data", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "x", "type": "chainer.variable.Variable"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "t", "type": "chainer.variable.Variable"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "link", "type": "chainer.links.loss.negative_sampling.NegativeSampling"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "link", "type": "chainer.links.loss.negative_sampling.NegativeSampling"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "t_data", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "x", "type": "chainer.variable.Variable"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "t", "type": "chainer.variable.Variable"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "rng", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "x", "type": "chainer.variable.Variable"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "t", "type": "chainer.variable.Variable"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "gw_cpu", "type": "Any"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "grad", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "gx_cpu", "type": "Any"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "grad", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "x", "type": "chainer.variable.Variable"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "t", "type": "chainer.variable.Variable"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "gw_gpu", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "grad", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "gx_gpu", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "grad", "type": "Any"}, {"lineNumber": 185, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "t", "type": "Any"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "batch", "type": "int"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "in_size", "type": "int"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 33, "col_offset": 61, "nodeName": "float32", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 34, "col_offset": 44, "nodeName": "int32", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "g_shape", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 40, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "rng", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "rng", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "NegativeSampling", "type": "Type[chainer.links.loss.negative_sampling.NegativeSampling]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "in_size", "type": "int"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "cleargrads", "type": "Callable[[], None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 49, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "functions", "type": "module"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "args", "type": "Union[Tuple[Any, ...], Tuple[Union[Callable[[Any], Any], Any], ...]]"}, {"lineNumber": 70, "col_offset": 49, "nodeName": "m", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "t", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.variable.Variable]"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.variable.Variable]"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "t_data", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "create_link", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "samples", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "link", "type": "chainer.links.loss.negative_sampling.NegativeSampling"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "x", "type": "chainer.variable.Variable"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "t", "type": "chainer.variable.Variable"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "to_cpu", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "to_cpu", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "samples", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "empty", "type": "Any"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "ix", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "it", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 110, "col_offset": 40, "nodeName": "loss", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "create_link", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "use_gpu", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "use_gpu", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "create_link", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 127, "col_offset": 42, "nodeName": "t", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.variable.Variable]"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.variable.Variable]"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "t_data", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "samples", "type": "Any"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "link", "type": "chainer.links.loss.negative_sampling.NegativeSampling"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "x", "type": "chainer.variable.Variable"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "t", "type": "chainer.variable.Variable"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "samples", "type": "Any"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "int32", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "call_link_with_samples", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "samples", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 151, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "get_state", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.variable.Variable]"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.variable.Variable]"}, {"lineNumber": 156, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "create_link", "type": "Any"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "rng", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "samples", "type": "Any"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "link", "type": "Any"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "x", "type": "chainer.variable.Variable"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "t", "type": "chainer.variable.Variable"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "W", "type": "Any"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "x", "type": "chainer.variable.Variable"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "set_state", "type": "Any"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "create_link", "type": "Any"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "rng", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.variable.Variable]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.variable.Variable]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "call_link_with_samples", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "W", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "x", "type": "chainer.variable.Variable"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 32, "nodeName": "gx_cpu", "type": "Any"}, {"lineNumber": 181, "col_offset": 40, "nodeName": "gx_gpu", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 32, "nodeName": "gw_cpu", "type": "Any"}, {"lineNumber": 182, "col_offset": 40, "nodeName": "gw_gpu", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 34, "col_offset": 44, "nodeName": "numpy", "type": "module"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "t", "type": "Any"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "g_shape", "type": "Tuple[()]"}, {"lineNumber": 40, "col_offset": 62, "nodeName": "numpy", "type": "module"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "links", "type": "module"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "link", "type": "chainer.links.loss.negative_sampling.NegativeSampling"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "W", "type": "chainer.variable.Parameter"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "rng", "type": "Any"}, {"lineNumber": 49, "col_offset": 45, "nodeName": "W", "type": "chainer.variable.Parameter"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "copy", "type": "Any"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "chainer", "type": "module"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "orig_negative_sampling", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "patch", "type": "Callable[..., mock._patch]"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "func", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "to_gpu", "type": "Callable"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "gy", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "W", "type": "chainer.variable.Parameter"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "cuda", "type": "module"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "numpy", "type": "module"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "t", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "it", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "w", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "sum", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "t", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "to_gpu", "type": "Callable"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 127, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "xp", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "samples", "type": "Any"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "samples", "type": "Any"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "numpy", "type": "module"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "to_cpu", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "array", "type": "Any"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "to_cpu", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 46, "nodeName": "array", "type": "Any"}, {"lineNumber": 151, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "rng", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 156, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "t", "type": "chainer.variable.Variable"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "link", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "rng", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 41, "nodeName": "t", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "t", "type": "chainer.variable.Variable"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "link", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 33, "col_offset": 45, "nodeName": "x_shape", "type": "Tuple[int, int]"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 40, "col_offset": 46, "nodeName": "g_shape", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "link", "type": "chainer.links.loss.negative_sampling.NegativeSampling"}, {"lineNumber": 49, "col_offset": 45, "nodeName": "link", "type": "chainer.links.loss.negative_sampling.NegativeSampling"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "samples", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "samples", "type": "Any"}, {"lineNumber": 65, "col_offset": 47, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 66, "col_offset": 43, "nodeName": "args", "type": "Union[Tuple[Any, ...], Tuple[Union[Callable[[Any], Any], Any], ...]]"}, {"lineNumber": 66, "col_offset": 51, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "testing", "type": "module"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "wrap_negative_sampling", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "m", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "link", "type": "chainer.links.loss.negative_sampling.NegativeSampling"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "link", "type": "chainer.links.loss.negative_sampling.NegativeSampling"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 94, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "loss", "type": "Any"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "W", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "dot", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "ix", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "loss", "type": "Any"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "sum", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "loss", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "link", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "link", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "link", "type": "chainer.links.loss.negative_sampling.NegativeSampling"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "link", "type": "chainer.links.loss.negative_sampling.NegativeSampling"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "x", "type": "chainer.variable.Variable"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "t", "type": "chainer.variable.Variable"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "y", "type": "Any"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "cuda", "type": "module"}, {"lineNumber": 145, "col_offset": 46, "nodeName": "y_", "type": "Any"}, {"lineNumber": 151, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "cuda", "type": "module"}, {"lineNumber": 170, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "cuda", "type": "module"}, {"lineNumber": 171, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 173, "col_offset": 42, "nodeName": "link", "type": "Any"}, {"lineNumber": 173, "col_offset": 47, "nodeName": "x", "type": "chainer.variable.Variable"}, {"lineNumber": 173, "col_offset": 50, "nodeName": "t", "type": "chainer.variable.Variable"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "mock_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "samples", "type": "Any"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "logaddexp", "type": "Any"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "f", "type": "Any"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "numpy", "type": "module"}]