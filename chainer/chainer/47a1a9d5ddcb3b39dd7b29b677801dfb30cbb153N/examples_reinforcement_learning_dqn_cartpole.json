[{"lineNumber": 40, "col_offset": 0, "nodeName": "get_greedy_action", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "mean_clipped_loss", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "update", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "Chain", "type": "Type[chainer.link.Chain]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "chainer", "type": "module"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "obs", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "xp", "type": "Any"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "xp", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "obs", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "action", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "reward", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "done", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "obs_next", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "device", "type": "chainer._backend.Device"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "obs_size", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "n", "type": "Any"}, {"lineNumber": 134, "col_offset": 7, "nodeName": "record", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "reward_threshold", "type": "Any"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "reward_threshold", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "D", "type": "collections.deque[Any]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "Rs", "type": "collections.deque[Any]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "iteration", "type": "int"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "Q", "type": "QFunction"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "target_Q", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "opt", "type": "chainer.optimizers.adam.Adam"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "episode", "type": "int"}, {"lineNumber": 213, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "get_dtype", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 10, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "get_dtype", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "Q", "type": "QFunction"}, {"lineNumber": 57, "col_offset": 10, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "select_item", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "action", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "mean_clipped_loss", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "target", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "cleargrads", "type": "Callable[[], None]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "backward", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "float16", "type": "Any"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "get_device", "type": "Callable[[Any], chainer._backend.Device]"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "device", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "use", "type": "Callable[[], None]"}, {"lineNumber": 129, "col_offset": 10, "nodeName": "make", "type": "Any"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "env", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 130, "col_offset": 45, "nodeName": "Box", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "Discrete", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "low", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 134, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "spec", "type": "Any"}, {"lineNumber": 137, "col_offset": 7, "nodeName": "reward_threshold", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 147, "col_offset": 9, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "QFunction", "type": "Type[QFunction]"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "obs_size", "type": "Any"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "device", "type": "chainer._backend.Device"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "Q", "type": "QFunction"}, {"lineNumber": 154, "col_offset": 10, "nodeName": "Adam", "type": "Type[chainer.optimizers.adam.Adam]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "Q", "type": "QFunction"}, {"lineNumber": 157, "col_offset": 19, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "episodes", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "done", "type": "bool"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "R", "type": "float"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "timestep", "type": "int"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "average_R", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "l0", "type": "chainer.links.connection.linear.Linear"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "l1", "type": "chainer.links.connection.linear.Linear"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "l2", "type": "chainer.links.connection.linear.Linear"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "relu", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "relu", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "l2", "type": "chainer.links.connection.linear.Linear"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "h", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 43, "col_offset": 10, "nodeName": "xp", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "obs", "type": "Any"}, {"lineNumber": 43, "col_offset": 40, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "no_backprop_mode", "type": "Callable[[], chainer.function._BackpropModeContext]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "F", "type": "module"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "huber_loss", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "t", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 57, "col_offset": 10, "nodeName": "xp", "type": "Any"}, {"lineNumber": 57, "col_offset": 62, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "xp", "type": "Any"}, {"lineNumber": 58, "col_offset": 65, "nodeName": "int32", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "xp", "type": "Any"}, {"lineNumber": 59, "col_offset": 65, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "xp", "type": "Any"}, {"lineNumber": 60, "col_offset": 63, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 61, "col_offset": 67, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "F", "type": "module"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "Q", "type": "QFunction"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "obs", "type": "Any"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "no_backprop_mode", "type": "Callable[[], chainer.function._BackpropModeContext]"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "target_type", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "next_q", "type": "Any"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "reward", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "Q", "type": "QFunction"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "opt", "type": "chainer.optimizers.adam.Adam"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 83, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 85, "col_offset": 51, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 87, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 96, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 102, "col_offset": 52, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 105, "col_offset": 62, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 110, "col_offset": 53, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 121, "col_offset": 7, "nodeName": "get_dtype", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 123, "col_offset": 56, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "device", "type": "chainer._backend.Device"}, {"lineNumber": 129, "col_offset": 10, "nodeName": "gym", "type": "Any"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "env", "type": "Any"}, {"lineNumber": 130, "col_offset": 45, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "env", "type": "Any"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "Monitor", "type": "Any"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "env", "type": "Any"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "out", "type": "Any"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "env", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "collections", "type": "module"}, {"lineNumber": 147, "col_offset": 9, "nodeName": "collections", "type": "module"}, {"lineNumber": 151, "col_offset": 47, "nodeName": "unit", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "Q", "type": "QFunction"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "copy", "type": "module"}, {"lineNumber": 154, "col_offset": 10, "nodeName": "optimizers", "type": "module"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "opt", "type": "chainer.optimizers.adam.Adam"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "reset", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "R", "type": "Any"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "reward", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "obs", "type": "Any"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "new_obs", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "iteration", "type": "int"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "timestep", "type": "int"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 201, "col_offset": 18, "nodeName": "R", "type": "Union[Any, float]"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "mean", "type": "Any"}, {"lineNumber": 202, "col_offset": 28, "nodeName": "Rs", "type": "collections.deque[Any]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "init_scope", "type": "Callable[..., contextlib._GeneratorContextManager[None]]"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "self", "type": "QFunction"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "Linear", "type": "Type[chainer.links.connection.linear.Linear]"}, {"lineNumber": 29, "col_offset": 31, "nodeName": "obs_size", "type": "Any"}, {"lineNumber": 29, "col_offset": 41, "nodeName": "n_units", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "self", "type": "QFunction"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "Linear", "type": "Type[chainer.links.connection.linear.Linear]"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "n_units", "type": "Any"}, {"lineNumber": 30, "col_offset": 40, "nodeName": "n_units", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "self", "type": "QFunction"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "Linear", "type": "Type[chainer.links.connection.linear.Linear]"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "n_units", "type": "Any"}, {"lineNumber": 31, "col_offset": 40, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "F", "type": "module"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "l0", "type": "chainer.links.connection.linear.Linear"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "F", "type": "module"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "l1", "type": "chainer.links.connection.linear.Linear"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "h", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "self", "type": "QFunction"}, {"lineNumber": 43, "col_offset": 10, "nodeName": "Q", "type": "QFunction"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "chainer", "type": "module"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "q", "type": "Any"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "F", "type": "module"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "sample", "type": "Any"}, {"lineNumber": 57, "col_offset": 36, "nodeName": "sample", "type": "Any"}, {"lineNumber": 57, "col_offset": 46, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "sample", "type": "Any"}, {"lineNumber": 58, "col_offset": 49, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "sample", "type": "Any"}, {"lineNumber": 59, "col_offset": 49, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "sample", "type": "Any"}, {"lineNumber": 60, "col_offset": 37, "nodeName": "sample", "type": "Any"}, {"lineNumber": 60, "col_offset": 47, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "sample", "type": "Any"}, {"lineNumber": 61, "col_offset": 41, "nodeName": "sample", "type": "Any"}, {"lineNumber": 61, "col_offset": 51, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "chainer", "type": "module"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "max", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "target_type", "type": "Any"}, {"lineNumber": 73, "col_offset": 47, "nodeName": "next_q", "type": "Any"}, {"lineNumber": 121, "col_offset": 7, "nodeName": "chainer", "type": "module"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 130, "col_offset": 45, "nodeName": "gym", "type": "Any"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "gym", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "env", "type": "Any"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "wrappers", "type": "Any"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "env", "type": "Any"}, {"lineNumber": 139, "col_offset": 53, "nodeName": "reward_threshold", "type": "Any"}, {"lineNumber": 141, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 143, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 151, "col_offset": 47, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "done", "type": "bool"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "timestep", "type": "int"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "timestep_limit", "type": "Any"}, {"lineNumber": 175, "col_offset": 34, "nodeName": "epsilon", "type": "Union[Any, float]"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "action", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "action", "type": "int"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "new_obs", "type": "Any"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "reward", "type": "Any"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "done", "type": "Any"}, {"lineNumber": 181, "col_offset": 35, "nodeName": "_", "type": "Any"}, {"lineNumber": 181, "col_offset": 39, "nodeName": "step", "type": "Any"}, {"lineNumber": 181, "col_offset": 48, "nodeName": "action", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "replay_start_size", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "sample_indices", "type": "List[int]"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "target_Q", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "Rs", "type": "collections.deque[Any]"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 204, "col_offset": 14, "nodeName": "episode", "type": "int"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "iteration", "type": "int"}, {"lineNumber": 204, "col_offset": 34, "nodeName": "R", "type": "Union[Any, float]"}, {"lineNumber": 204, "col_offset": 37, "nodeName": "average_R", "type": "Any"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "reward_threshold", "type": "Any"}, {"lineNumber": 206, "col_offset": 44, "nodeName": "average_R", "type": "Any"}, {"lineNumber": 206, "col_offset": 57, "nodeName": "reward_threshold", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "QFunction", "type": "Type[QFunction]"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "self", "type": "QFunction"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "self", "type": "QFunction"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "L", "type": "module"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "L", "type": "module"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "L", "type": "module"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "self", "type": "QFunction"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "self", "type": "QFunction"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "Q", "type": "QFunction"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "obs", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "F", "type": "module"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "target_Q", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "obs_next", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "select_item", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "gamma", "type": "float"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "gym", "type": "Any"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 143, "col_offset": 31, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "spec", "type": "Any"}, {"lineNumber": 167, "col_offset": 38, "nodeName": "replay_start_size", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "max", "type": "Callable"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "min_epsilon", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "get_greedy_action", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 178, "col_offset": 43, "nodeName": "Q", "type": "QFunction"}, {"lineNumber": 178, "col_offset": 46, "nodeName": "obs", "type": "Any"}, {"lineNumber": 181, "col_offset": 39, "nodeName": "env", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "D", "type": "collections.deque[Any]"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "obs", "type": "Any"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "action", "type": "Any"}, {"lineNumber": 185, "col_offset": 63, "nodeName": "done", "type": "Any"}, {"lineNumber": 185, "col_offset": 69, "nodeName": "new_obs", "type": "Any"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "D", "type": "collections.deque[Any]"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "sample", "type": "Callable"}, {"lineNumber": 190, "col_offset": 62, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "update", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "Q", "type": "QFunction"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "target_Q", "type": "Any"}, {"lineNumber": 192, "col_offset": 36, "nodeName": "opt", "type": "chainer.optimizers.adam.Adam"}, {"lineNumber": 192, "col_offset": 41, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "iteration", "type": "int"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "target_update_freq", "type": "Any"}, {"lineNumber": 196, "col_offset": 27, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 196, "col_offset": 41, "nodeName": "Q", "type": "QFunction"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "env", "type": "Any"}, {"lineNumber": 209, "col_offset": 32, "nodeName": "average_R", "type": "Any"}, {"lineNumber": 209, "col_offset": 43, "nodeName": "reward_threshold", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "F", "type": "module"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "target_Q", "type": "Any"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "obs_next", "type": "Any"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "argmax", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 72, "col_offset": 66, "nodeName": "target_type", "type": "Any"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "done", "type": "Any"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "env", "type": "Any"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 167, "col_offset": 33, "nodeName": "D", "type": "collections.deque[Any]"}, {"lineNumber": 167, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "interp", "type": "Any"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "iteration", "type": "int"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 185, "col_offset": 35, "nodeName": "reward", "type": "Any"}, {"lineNumber": 185, "col_offset": 44, "nodeName": "reward_scale", "type": "Any"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 190, "col_offset": 47, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 190, "col_offset": 62, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "D", "type": "collections.deque[Any]"}, {"lineNumber": 191, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 191, "col_offset": 41, "nodeName": "sample_indices", "type": "List[int]"}, {"lineNumber": 192, "col_offset": 62, "nodeName": "target_type", "type": "Any"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 196, "col_offset": 27, "nodeName": "copy", "type": "module"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "F", "type": "module"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "Q", "type": "QFunction"}, {"lineNumber": 70, "col_offset": 46, "nodeName": "obs_next", "type": "Any"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "iterations_to_decay_epsilon", "type": "Any"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "min_epsilon", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 185, "col_offset": 44, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 190, "col_offset": 53, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 190, "col_offset": 57, "nodeName": "D", "type": "collections.deque[Any]"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 192, "col_offset": 62, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "args", "type": "argparse.Namespace"}]