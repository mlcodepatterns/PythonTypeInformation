[{"lineNumber": 11, "col_offset": 13, "nodeName": "Initializer", "type": "Type[chainer.initializer.Initializer]"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "Initializer", "type": "Type[chainer.initializer.Initializer]"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "Initializer", "type": "Type[chainer.initializer.Initializer]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "Initializer", "type": "Type[chainer.initializer.Initializer]"}, {"lineNumber": 11, "col_offset": 13, "nodeName": "initializer", "type": "module"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "initializer", "type": "module"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "initializer", "type": "module"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "initializer", "type": "module"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "rng", "type": "None"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "rng", "type": "None"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "rng", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "rng", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "rng", "type": "None"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "rng", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "rng", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "fan_option", "type": "Any"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "fan_option", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "rng", "type": "None"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "rng", "type": "Any"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "rng", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Normal"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "rng", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "rng", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "rng", "type": "Any"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "rng", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "dtype", "type": "None"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "copyto", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "array", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "LeCunNormal"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "LeCunNormal"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 42, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "fan_out", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "get_fans", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 79, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "array", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "GlorotNormal"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "GlorotNormal"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "fan_out", "type": "Any"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "get_fans", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 117, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "array", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "HeNormal"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "HeNormal"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "HeNormal"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "fan_out", "type": "Any"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "get_fans", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 160, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "fan_option", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "array", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "rng", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "parse_kwargs", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "self", "type": "Normal"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "self", "type": "Normal"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "self", "type": "Normal"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 40, "col_offset": 47, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "backend", "type": "module"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "rng", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "parse_kwargs", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "self", "type": "LeCunNormal"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 78, "col_offset": 47, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "initializer", "type": "module"}, {"lineNumber": 79, "col_offset": 47, "nodeName": "array", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "LeCunNormal"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "Normal", "type": "Type[Normal]"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "rng", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "parse_kwargs", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 109, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "self", "type": "GlorotNormal"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 116, "col_offset": 47, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "initializer", "type": "module"}, {"lineNumber": 117, "col_offset": 47, "nodeName": "array", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "self", "type": "GlorotNormal"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "Normal", "type": "Type[Normal]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "rng", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "parse_kwargs", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 152, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "self", "type": "HeNormal"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 158, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 159, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 159, "col_offset": 47, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "initializer", "type": "module"}, {"lineNumber": 160, "col_offset": 47, "nodeName": "array", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "self", "type": "HeNormal"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "scale", "type": "Any"}, {"lineNumber": 163, "col_offset": 13, "nodeName": "fan_option", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "Normal", "type": "Type[Normal]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "argument", "type": "module"}, {"lineNumber": 30, "col_offset": 57, "nodeName": "rng", "type": "None"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "Normal", "type": "Type[Normal]"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "self", "type": "Normal"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "self", "type": "Normal"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "array", "type": "Any"}, {"lineNumber": 40, "col_offset": 47, "nodeName": "self", "type": "Normal"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "array", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "argument", "type": "module"}, {"lineNumber": 71, "col_offset": 57, "nodeName": "rng", "type": "None"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "LeCunNormal", "type": "Type[LeCunNormal]"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "self", "type": "LeCunNormal"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "self", "type": "LeCunNormal"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "array", "type": "Any"}, {"lineNumber": 78, "col_offset": 47, "nodeName": "self", "type": "LeCunNormal"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "rng", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "argument", "type": "module"}, {"lineNumber": 109, "col_offset": 57, "nodeName": "rng", "type": "None"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "GlorotNormal", "type": "Type[GlorotNormal]"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "self", "type": "GlorotNormal"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "self", "type": "GlorotNormal"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "array", "type": "Any"}, {"lineNumber": 116, "col_offset": 47, "nodeName": "self", "type": "GlorotNormal"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "rng", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "argument", "type": "module"}, {"lineNumber": 152, "col_offset": 57, "nodeName": "rng", "type": "None"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "HeNormal", "type": "Type[HeNormal]"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "self", "type": "HeNormal"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 158, "col_offset": 34, "nodeName": "self", "type": "HeNormal"}, {"lineNumber": 159, "col_offset": 34, "nodeName": "array", "type": "Any"}, {"lineNumber": 159, "col_offset": 47, "nodeName": "self", "type": "HeNormal"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "self", "type": "HeNormal"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 163, "col_offset": 13, "nodeName": "self", "type": "HeNormal"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "scale", "type": "Any"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "rng", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "normal", "type": "Any"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "self", "type": "LeCunNormal"}, {"lineNumber": 118, "col_offset": 42, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 118, "col_offset": 51, "nodeName": "fan_out", "type": "Any"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "self", "type": "GlorotNormal"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 162, "col_offset": 45, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "self", "type": "HeNormal"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "self", "type": "HeNormal"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "rng", "type": "Any"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "scale", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 164, "col_offset": 45, "nodeName": "fan_out", "type": "Any"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "self", "type": "Normal"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "self", "type": "Normal"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "array", "type": "Any"}]