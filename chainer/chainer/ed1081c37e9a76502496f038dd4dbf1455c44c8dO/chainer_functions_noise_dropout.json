[{"lineNumber": 131, "col_offset": 0, "nodeName": "dropout", "type": "Callable[..., Any]"}, {"lineNumber": 11, "col_offset": 3, "nodeName": "cudnn_enabled", "type": "bool"}, {"lineNumber": 15, "col_offset": 14, "nodeName": "FunctionNode", "type": "Type[chainer.function_node.FunctionNode]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "check_type_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "forward_cpu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "forward_gpu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "_forward_ideep", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "FunctionNode", "type": "Type[chainer.function_node.FunctionNode]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "_forward_ideep", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "FunctionNode", "type": "Type[chainer.function_node.FunctionNode]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 11, "col_offset": 3, "nodeName": "cuda", "type": "module"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 15, "col_offset": 14, "nodeName": "function_node", "type": "module"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "_use_cudnn", "type": "bool"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "function_node", "type": "module"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "function_node", "type": "module"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "mask", "type": "None"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "return_mask", "type": "bool"}, {"lineNumber": 205, "col_offset": 7, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 211, "col_offset": 7, "nodeName": "train", "type": "Any"}, {"lineNumber": 219, "col_offset": 7, "nodeName": "return_mask", "type": "Any"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "dropout_ratio", "type": "Any"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "dropout_ratio", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "mask", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "mask", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "mask", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "states", "type": "Any"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "states", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "dropout_ratio", "type": "Any"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "dropout_ratio", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "handle", "type": "Any"}, {"lineNumber": 211, "col_offset": 7, "nodeName": "config", "type": "chainer.configuration.LocalConfig"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "func", "type": "Dropout"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "out", "type": "Union[chainer.variable.Variable, Any]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "mask", "type": "None"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "Dropout"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "Dropout"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "argname", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "in_types", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "expect", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "mask", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "flag", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "c_contiguous", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "_use_cudnn", "type": "bool"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "handle", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "Forward", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "dropout_ratio", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "Dropout"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 86, "col_offset": 58, "nodeName": "_use_cudnn", "type": "bool"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "DropoutGrad"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "apply", "type": "Callable[[Any], Tuple[Any, ...]]"}, {"lineNumber": 112, "col_offset": 44, "nodeName": "gy", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "DropoutGradCuDNN"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "DropoutGradCuDNN"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "get_handle", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "apply", "type": "Callable[[Any], Tuple[Any, ...]]"}, {"lineNumber": 128, "col_offset": 71, "nodeName": "gy", "type": "Any"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "parse_kwargs", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 211, "col_offset": 7, "nodeName": "configuration", "type": "module"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "Dropout", "type": "Type[Dropout]"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "ratio", "type": "Any"}, {"lineNumber": 212, "col_offset": 30, "nodeName": "mask", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "apply", "type": "Callable[[Any], Tuple[Any, ...]]"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "func", "type": "Dropout"}, {"lineNumber": 216, "col_offset": 14, "nodeName": "as_variable", "type": "Callable"}, {"lineNumber": 216, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "mask", "type": "Any"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "dropout_ratio", "type": "Any"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "type_check", "type": "module"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "type_check", "type": "module"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "kind", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "should_use_ideep", "type": "Callable[[Any], bool]"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "inputs_all_ready", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "mask", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "_forward_ideep", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "self", "type": "Dropout"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "mask", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "type", "type": "Any"}, {"lineNumber": 40, "col_offset": 53, "nodeName": "dropout_ratio", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "Dropout"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "scale", "type": "Any"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "flag", "type": "Any"}, {"lineNumber": 42, "col_offset": 23, "nodeName": "mask", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "should_use_cudnn", "type": "Callable[..., bool]"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "flags", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "mask", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "Dropout"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "get_handle", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "self", "type": "Dropout"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "forward", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "handle", "type": "Any"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "dropout_ratio", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "scale", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "Dropout"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "should_use_cudnn", "type": "Callable[..., bool]"}, {"lineNumber": 86, "col_offset": 58, "nodeName": "self", "type": "Dropout"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "apply", "type": "Callable[[Any], Tuple[Any, ...]]"}, {"lineNumber": 89, "col_offset": 48, "nodeName": "gy", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "should_use_ideep", "type": "Callable[[Any], bool]"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "inputs_all_ready", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "_forward_ideep", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "self", "type": "DropoutGrad"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "Backward", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "backward", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "handle", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "dropout_ratio", "type": "Any"}, {"lineNumber": 125, "col_offset": 51, "nodeName": "states", "type": "Any"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "argument", "type": "module"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "mask", "type": "None"}, {"lineNumber": 207, "col_offset": 52, "nodeName": "return_mask", "type": "bool"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "func", "type": "Dropout"}, {"lineNumber": 213, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 216, "col_offset": 14, "nodeName": "chainer", "type": "module"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "intel64", "type": "module"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "intel64", "type": "module"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "self", "type": "Dropout"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "self", "type": "Dropout"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "self", "type": "Dropout"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "rand", "type": "Any"}, {"lineNumber": 40, "col_offset": 53, "nodeName": "self", "type": "Dropout"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 23, "nodeName": "self", "type": "Dropout"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "self", "type": "Dropout"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "self", "type": "Dropout"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "self", "type": "Dropout"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "mask", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "rand", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "type", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "rand", "type": "Any"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "scale", "type": "Any"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "dropout_ratio", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "ideep", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "ideep", "type": "Any"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "chainer", "type": "module"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "intel64", "type": "module"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "intel64", "type": "module"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "self", "type": "DropoutGrad"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "mask", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "DropoutGrad", "type": "Type[DropoutGrad]"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "mask", "type": "Any"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "self", "type": "DropoutGradCuDNN"}, {"lineNumber": 125, "col_offset": 51, "nodeName": "self", "type": "DropoutGradCuDNN"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "DropoutGradCuDNN", "type": "Type[DropoutGradCuDNN]"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "states", "type": "Any"}, {"lineNumber": 128, "col_offset": 45, "nodeName": "dropout_ratio", "type": "Any"}, {"lineNumber": 39, "col_offset": 46, "nodeName": "dropout_ratio", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "get_cudnn_dropout_states", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "self", "type": "Dropout"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 66, "col_offset": 46, "nodeName": "shape", "type": "Any"}, {"lineNumber": 66, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "elementwise", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "self", "type": "Dropout"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "intel64", "type": "module"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "intel64", "type": "module"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "DropoutGrad", "type": "Type[DropoutGrad]"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "mask", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "ideep", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "ideep", "type": "Any"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "self", "type": "DropoutGrad"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "ideep", "type": "Any"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "self", "type": "DropoutGrad"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "get_cudnn_dropout_states", "type": "Callable[[], Any]"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "self", "type": "DropoutGradCuDNN"}, {"lineNumber": 128, "col_offset": 45, "nodeName": "self", "type": "DropoutGradCuDNN"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "in_types", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 39, "col_offset": 46, "nodeName": "self", "type": "Dropout"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "cuda", "type": "module"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 66, "col_offset": 64, "nodeName": "numpy", "type": "module"}, {"lineNumber": 67, "col_offset": 50, "nodeName": "dropout_ratio", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "cuda", "type": "module"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "self", "type": "Dropout"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "intel64", "type": "module"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "intel64", "type": "module"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "intel64", "type": "module"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "cuda", "type": "module"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "cuda", "type": "module"}, {"lineNumber": 66, "col_offset": 46, "nodeName": "x", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 67, "col_offset": 50, "nodeName": "self", "type": "Dropout"}]