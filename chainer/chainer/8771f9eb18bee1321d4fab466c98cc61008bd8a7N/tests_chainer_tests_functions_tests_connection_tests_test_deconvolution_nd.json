[{"lineNumber": 72, "col_offset": 26, "nodeName": "FunctionTestCase", "type": "Type[chainer.testing.function_link.FunctionTestCase]"}, {"lineNumber": 196, "col_offset": 35, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 241, "col_offset": 39, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 275, "col_offset": 35, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 347, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "testing", "type": "module"}, {"lineNumber": 196, "col_offset": 35, "nodeName": "unittest", "type": "module"}, {"lineNumber": 241, "col_offset": 39, "nodeName": "unittest", "type": "module"}, {"lineNumber": 275, "col_offset": 35, "nodeName": "unittest", "type": "module"}, {"lineNumber": 347, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 383, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 383, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 383, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "N", "type": "int"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "ndim", "type": "int"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "ksize", "type": "Tuple[int, ...]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "stride", "type": "Tuple[int, ...]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "pad", "type": "Tuple[int, ...]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "dilate", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "outsize", "type": "Optional[Tuple[Any, ...]]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "x_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "gy_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "using_old_cudnn", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "nobias", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "nobias", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "nobias", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "nobias", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "ndim", "type": "int"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "ksize", "type": "Tuple[int, ...]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "stride", "type": "Tuple[int, ...]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "pad", "type": "Tuple[int, ...]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "W_scale", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "W_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "x_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "gy_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "N", "type": "int"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "float32", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "x_shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "W_shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "W_data", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "b_data", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "y_ary", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "x_var", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "W_var", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "b_var", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "y_var", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "outsize", "type": "Tuple[int]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "stride", "type": "int"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "pad", "type": "int"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "float32", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "x_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "W_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 383, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "dims", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "ndim", "type": "int"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "ndim", "type": "int"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "ndim", "type": "int"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "ndim", "type": "int"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 60, "nodeName": "ksize", "type": "Tuple[int, ...]"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "test_outsize", "type": "Any"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "outs", "type": "Tuple[Any, ...]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 52, "nodeName": "dims", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 54, "nodeName": "outs", "type": "Tuple[Any, ...]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 120, "col_offset": 50, "nodeName": "W_dtype", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 121, "col_offset": 61, "nodeName": "x_dtype", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "b", "type": "None"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "deconvolution_nd", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "W", "type": "Any"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "b", "type": "Optional[Any]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "array", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "b", "type": "None"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "deconvolution_nd", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "W", "type": "Any"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "b", "type": "Optional[Any]"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "generate_inputs", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "b", "type": "None"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "b", "type": "Optional[Any]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "array", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "dims", "type": "Any"}, {"lineNumber": 202, "col_offset": 23, "nodeName": "ndim", "type": "int"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "ndim", "type": "int"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "ndim", "type": "int"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 207, "col_offset": 48, "nodeName": "ksize", "type": "Tuple[int, ...]"}, {"lineNumber": 209, "col_offset": 40, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 213, "col_offset": 37, "nodeName": "dims", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 214, "col_offset": 65, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 215, "col_offset": 39, "nodeName": "outs", "type": "Tuple[Any, ...]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 216, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 216, "col_offset": 67, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "expected", "type": "bool"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 222, "col_offset": 29, "nodeName": "W", "type": "Any"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "deconvolution_nd", "type": "Callable[..., Any]"}, {"lineNumber": 223, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 223, "col_offset": 37, "nodeName": "W", "type": "Any"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 235, "col_offset": 21, "nodeName": "gy", "type": "Any"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 249, "col_offset": 19, "nodeName": "N", "type": "int"}, {"lineNumber": 249, "col_offset": 22, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "TestDeconvolutionNDarraySupplied"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "astype", "type": "Any"}, {"lineNumber": 250, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 251, "col_offset": 19, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 251, "col_offset": 32, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "self", "type": "TestDeconvolutionNDarraySupplied"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "astype", "type": "Any"}, {"lineNumber": 252, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "self", "type": "TestDeconvolutionNDarraySupplied"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "astype", "type": "Any"}, {"lineNumber": 253, "col_offset": 71, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "deconvolution_nd", "type": "Callable[..., Any]"}, {"lineNumber": 256, "col_offset": 35, "nodeName": "x_ary", "type": "Any"}, {"lineNumber": 256, "col_offset": 42, "nodeName": "W_ary", "type": "Any"}, {"lineNumber": 256, "col_offset": 49, "nodeName": "b_ary", "type": "Any"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 258, "col_offset": 33, "nodeName": "x_ary", "type": "Any"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 259, "col_offset": 33, "nodeName": "W_ary", "type": "Any"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 260, "col_offset": 33, "nodeName": "b_ary", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "deconvolution_nd", "type": "Callable[..., Any]"}, {"lineNumber": 261, "col_offset": 35, "nodeName": "x_var", "type": "Any"}, {"lineNumber": 261, "col_offset": 42, "nodeName": "W_var", "type": "Any"}, {"lineNumber": 261, "col_offset": 49, "nodeName": "b_var", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 263, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 263, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "check_array_supplied", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 266, "col_offset": 34, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 266, "col_offset": 47, "nodeName": "W_data", "type": "Any"}, {"lineNumber": 266, "col_offset": 60, "nodeName": "b_data", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "check_array_supplied", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 279, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 284, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 285, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 286, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 293, "col_offset": 58, "nodeName": "int32", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 294, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 299, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 300, "col_offset": 58, "nodeName": "int32", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 305, "col_offset": 61, "nodeName": "float32", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 306, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 311, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 312, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 317, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 318, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 325, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 326, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 327, "col_offset": 53, "nodeName": "int32", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 332, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 333, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 334, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 339, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 340, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 355, "col_offset": 56, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 357, "col_offset": 56, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 358, "col_offset": 61, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 360, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 360, "col_offset": 18, "nodeName": "W", "type": "Any"}, {"lineNumber": 360, "col_offset": 21, "nodeName": "b", "type": "Any"}, {"lineNumber": 363, "col_offset": 9, "nodeName": "x", "type": "Any"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "W", "type": "Any"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 363, "col_offset": 20, "nodeName": "_get_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 365, "col_offset": 46, "nodeName": "data", "type": "Any"}, {"lineNumber": 368, "col_offset": 9, "nodeName": "x", "type": "Any"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "W", "type": "Any"}, {"lineNumber": 368, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 368, "col_offset": 20, "nodeName": "_get_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 373, "col_offset": 9, "nodeName": "x", "type": "Any"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "W", "type": "Any"}, {"lineNumber": 373, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 373, "col_offset": 20, "nodeName": "_get_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 375, "col_offset": 46, "nodeName": "data", "type": "Any"}, {"lineNumber": 378, "col_offset": 9, "nodeName": "x", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "W", "type": "Any"}, {"lineNumber": 378, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 378, "col_offset": 20, "nodeName": "_get_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "dilate", "type": "Tuple[Any, ...]"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 87, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "N", "type": "int"}, {"lineNumber": 94, "col_offset": 32, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 94, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "N", "type": "int"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "check_backward_options", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "check_double_backward_options", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "x_dtype", "type": "Any"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "float16", "type": "Any"}, {"lineNumber": 99, "col_offset": 45, "nodeName": "W_dtype", "type": "Any"}, {"lineNumber": 99, "col_offset": 61, "nodeName": "float16", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "b_dtype", "type": "Any"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "float16", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "xp", "type": "Any"}, {"lineNumber": 109, "col_offset": 53, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 120, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "W", "type": "Any"}, {"lineNumber": 126, "col_offset": 49, "nodeName": "x_dtype", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "W", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "W", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "W", "type": "Any"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "F", "type": "module"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 142, "col_offset": 45, "nodeName": "pad", "type": "Any"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "outsize", "type": "Any"}, {"lineNumber": 143, "col_offset": 41, "nodeName": "dilate", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "groups", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "W", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "W", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "F", "type": "module"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 154, "col_offset": 45, "nodeName": "pad", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "outsize", "type": "Any"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "dilate", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "groups", "type": "Any"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "W", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "W", "type": "Any"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 166, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 167, "col_offset": 54, "nodeName": "W", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 173, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 174, "col_offset": 19, "nodeName": "deconvolution_nd", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 174, "col_offset": 41, "nodeName": "W", "type": "Any"}, {"lineNumber": 174, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "deconvolution_2d", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 177, "col_offset": 41, "nodeName": "W", "type": "Any"}, {"lineNumber": 177, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "y_nd", "type": "Any"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "y_2d", "type": "Any"}, {"lineNumber": 182, "col_offset": 38, "nodeName": "check_forward_options", "type": "Any"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "dims", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "check_forward_consistency_regression", "type": "Any"}, {"lineNumber": 187, "col_offset": 54, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 207, "col_offset": 32, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 209, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 213, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 214, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 216, "col_offset": 67, "nodeName": "self", "type": "Any"}, {"lineNumber": 217, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 217, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 222, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "F", "type": "module"}, {"lineNumber": 227, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 227, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 228, "col_offset": 40, "nodeName": "func", "type": "Any"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., chainer.configuration._ConfigContext]"}, {"lineNumber": 233, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "forward", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 235, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 236, "col_offset": 68, "nodeName": "func", "type": "Any"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "F", "type": "module"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "chainer", "type": "module"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "chainer", "type": "module"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "chainer", "type": "module"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "F", "type": "module"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 263, "col_offset": 32, "nodeName": "y_ary", "type": "Any"}, {"lineNumber": 263, "col_offset": 44, "nodeName": "y_var", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "self", "type": "TestDeconvolutionNDarraySupplied"}, {"lineNumber": 266, "col_offset": 34, "nodeName": "self", "type": "TestDeconvolutionNDarraySupplied"}, {"lineNumber": 266, "col_offset": 47, "nodeName": "self", "type": "TestDeconvolutionNDarraySupplied"}, {"lineNumber": 266, "col_offset": 60, "nodeName": "self", "type": "TestDeconvolutionNDarraySupplied"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 270, "col_offset": 34, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 270, "col_offset": 46, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 271, "col_offset": 34, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 271, "col_offset": 46, "nodeName": "W_data", "type": "Any"}, {"lineNumber": 272, "col_offset": 34, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 272, "col_offset": 46, "nodeName": "b_data", "type": "Any"}, {"lineNumber": 279, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 280, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 280, "col_offset": 31, "nodeName": "InvalidType", "type": "Type[chainer.utils.type_check.InvalidType]"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "apply", "type": "Callable[[Any], Any]"}, {"lineNumber": 284, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 285, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 286, "col_offset": 53, "nodeName": "numpy", "type": "module"}, {"lineNumber": 287, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 287, "col_offset": 31, "nodeName": "InvalidType", "type": "Type[chainer.utils.type_check.InvalidType]"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "apply", "type": "Callable[[Any], Any]"}, {"lineNumber": 293, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 294, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 295, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 295, "col_offset": 31, "nodeName": "InvalidType", "type": "Type[chainer.utils.type_check.InvalidType]"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "deconvolution_nd", "type": "Callable[..., Any]"}, {"lineNumber": 296, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 296, "col_offset": 34, "nodeName": "W", "type": "Any"}, {"lineNumber": 299, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 300, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 301, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 301, "col_offset": 31, "nodeName": "InvalidType", "type": "Type[chainer.utils.type_check.InvalidType]"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "deconvolution_nd", "type": "Callable[..., Any]"}, {"lineNumber": 302, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 302, "col_offset": 34, "nodeName": "W", "type": "Any"}, {"lineNumber": 305, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 306, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 307, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 307, "col_offset": 31, "nodeName": "InvalidType", "type": "Type[chainer.utils.type_check.InvalidType]"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "deconvolution_nd", "type": "Callable[..., Any]"}, {"lineNumber": 308, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 308, "col_offset": 34, "nodeName": "W", "type": "Any"}, {"lineNumber": 311, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 312, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 313, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 313, "col_offset": 31, "nodeName": "InvalidType", "type": "Type[chainer.utils.type_check.InvalidType]"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "deconvolution_nd", "type": "Callable[..., Any]"}, {"lineNumber": 314, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 314, "col_offset": 34, "nodeName": "W", "type": "Any"}, {"lineNumber": 317, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 318, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 320, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 320, "col_offset": 31, "nodeName": "InvalidType", "type": "Type[chainer.utils.type_check.InvalidType]"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "deconvolution_nd", "type": "Callable[..., Any]"}, {"lineNumber": 321, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 321, "col_offset": 34, "nodeName": "W", "type": "Any"}, {"lineNumber": 325, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 326, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 327, "col_offset": 53, "nodeName": "numpy", "type": "module"}, {"lineNumber": 328, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 328, "col_offset": 31, "nodeName": "InvalidType", "type": "Type[chainer.utils.type_check.InvalidType]"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "deconvolution_nd", "type": "Callable[..., Any]"}, {"lineNumber": 329, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 329, "col_offset": 34, "nodeName": "W", "type": "Any"}, {"lineNumber": 332, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 333, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 334, "col_offset": 55, "nodeName": "numpy", "type": "module"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 335, "col_offset": 31, "nodeName": "InvalidType", "type": "Type[chainer.utils.type_check.InvalidType]"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "deconvolution_nd", "type": "Callable[..., Any]"}, {"lineNumber": 336, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 336, "col_offset": 34, "nodeName": "W", "type": "Any"}, {"lineNumber": 339, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 340, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 343, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 343, "col_offset": 31, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "deconvolution_nd", "type": "Callable[..., Any]"}, {"lineNumber": 344, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 344, "col_offset": 34, "nodeName": "W", "type": "Any"}, {"lineNumber": 354, "col_offset": 22, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 354, "col_offset": 44, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 356, "col_offset": 19, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 356, "col_offset": 32, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 356, "col_offset": 55, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 363, "col_offset": 20, "nodeName": "self", "type": "TestDeconvolutionNDWrappers"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 368, "col_offset": 20, "nodeName": "self", "type": "TestDeconvolutionNDWrappers"}, {"lineNumber": 369, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 369, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "deconvolution_1d", "type": "Callable[..., Any]"}, {"lineNumber": 370, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 370, "col_offset": 34, "nodeName": "W", "type": "Any"}, {"lineNumber": 370, "col_offset": 37, "nodeName": "b", "type": "Any"}, {"lineNumber": 373, "col_offset": 20, "nodeName": "self", "type": "TestDeconvolutionNDWrappers"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 378, "col_offset": 20, "nodeName": "self", "type": "TestDeconvolutionNDWrappers"}, {"lineNumber": 379, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 379, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "deconvolution_3d", "type": "Callable[..., Any]"}, {"lineNumber": 380, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 380, "col_offset": 34, "nodeName": "W", "type": "Any"}, {"lineNumber": 380, "col_offset": 37, "nodeName": "b", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "reduce", "type": "Callable"}, {"lineNumber": 84, "col_offset": 56, "nodeName": "mul", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 61, "nodeName": "ksize", "type": "Tuple[int, ...]"}, {"lineNumber": 85, "col_offset": 56, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "groups", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 99, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "numpy", "type": "module"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "check_forward_options", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "check_backward_options", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Any"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 109, "col_offset": 53, "nodeName": "cuda", "type": "module"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "getVersion", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "check_backward_options", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "normal", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "W_scale", "type": "Any"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "W_shape", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 121, "col_offset": 40, "nodeName": "x_shape", "type": "Any"}, {"lineNumber": 126, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "chainer", "type": "module"}, {"lineNumber": 169, "col_offset": 33, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 169, "col_offset": 58, "nodeName": "b", "type": "Optional[Any]"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 174, "col_offset": 19, "nodeName": "F", "type": "module"}, {"lineNumber": 174, "col_offset": 54, "nodeName": "stride", "type": "Any"}, {"lineNumber": 175, "col_offset": 42, "nodeName": "pad", "type": "Any"}, {"lineNumber": 175, "col_offset": 60, "nodeName": "outsize", "type": "Any"}, {"lineNumber": 176, "col_offset": 45, "nodeName": "dilate", "type": "Any"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "F", "type": "module"}, {"lineNumber": 177, "col_offset": 54, "nodeName": "stride", "type": "Any"}, {"lineNumber": 178, "col_offset": 42, "nodeName": "pad", "type": "Any"}, {"lineNumber": 178, "col_offset": 60, "nodeName": "outsize", "type": "Any"}, {"lineNumber": 179, "col_offset": 45, "nodeName": "dilate", "type": "Any"}, {"lineNumber": 182, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 206, "col_offset": 34, "nodeName": "reduce", "type": "Callable"}, {"lineNumber": 206, "col_offset": 51, "nodeName": "mul", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 206, "col_offset": 56, "nodeName": "ksize", "type": "Tuple[int, ...]"}, {"lineNumber": 206, "col_offset": 63, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 208, "col_offset": 17, "nodeName": "normal", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "W_scale", "type": "Any"}, {"lineNumber": 209, "col_offset": 24, "nodeName": "W_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 214, "col_offset": 49, "nodeName": "x_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 216, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 216, "col_offset": 50, "nodeName": "gy_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 217, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 217, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "should_use_cudnn", "type": "Callable[..., bool]"}, {"lineNumber": 218, "col_offset": 67, "nodeName": "ndim", "type": "int"}, {"lineNumber": 227, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 227, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "patch", "type": "Callable[..., mock._patch]"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "name", "type": "str"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "forward", "type": "Any"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 230, "col_offset": 33, "nodeName": "called", "type": "Any"}, {"lineNumber": 230, "col_offset": 46, "nodeName": "expected", "type": "Any"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 233, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "patch", "type": "Callable[..., mock._patch]"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "backward", "type": "Any"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 238, "col_offset": 33, "nodeName": "called", "type": "Any"}, {"lineNumber": 238, "col_offset": 46, "nodeName": "expected", "type": "Any"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 250, "col_offset": 50, "nodeName": "x_shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 252, "col_offset": 50, "nodeName": "W_shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 253, "col_offset": 50, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 270, "col_offset": 34, "nodeName": "cuda", "type": "module"}, {"lineNumber": 270, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 271, "col_offset": 34, "nodeName": "cuda", "type": "module"}, {"lineNumber": 271, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 272, "col_offset": 34, "nodeName": "cuda", "type": "module"}, {"lineNumber": 272, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 280, "col_offset": 13, "nodeName": "self", "type": "TestDeconvolutionNDTypeCheck"}, {"lineNumber": 280, "col_offset": 31, "nodeName": "type_check", "type": "module"}, {"lineNumber": 281, "col_offset": 68, "nodeName": "x", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 287, "col_offset": 13, "nodeName": "self", "type": "TestDeconvolutionNDTypeCheck"}, {"lineNumber": 287, "col_offset": 31, "nodeName": "type_check", "type": "module"}, {"lineNumber": 289, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "W", "type": "Any"}, {"lineNumber": 289, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 289, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 295, "col_offset": 13, "nodeName": "self", "type": "TestDeconvolutionNDTypeCheck"}, {"lineNumber": 295, "col_offset": 31, "nodeName": "type_check", "type": "module"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "F", "type": "module"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 301, "col_offset": 13, "nodeName": "self", "type": "TestDeconvolutionNDTypeCheck"}, {"lineNumber": 301, "col_offset": 31, "nodeName": "type_check", "type": "module"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "F", "type": "module"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 307, "col_offset": 13, "nodeName": "self", "type": "TestDeconvolutionNDTypeCheck"}, {"lineNumber": 307, "col_offset": 31, "nodeName": "type_check", "type": "module"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "F", "type": "module"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 313, "col_offset": 13, "nodeName": "self", "type": "TestDeconvolutionNDTypeCheck"}, {"lineNumber": 313, "col_offset": 31, "nodeName": "type_check", "type": "module"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "F", "type": "module"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 320, "col_offset": 13, "nodeName": "self", "type": "TestDeconvolutionNDTypeCheck"}, {"lineNumber": 320, "col_offset": 31, "nodeName": "type_check", "type": "module"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "F", "type": "module"}, {"lineNumber": 321, "col_offset": 45, "nodeName": "outsize", "type": "Tuple[int]"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 328, "col_offset": 13, "nodeName": "self", "type": "TestDeconvolutionNDTypeCheck"}, {"lineNumber": 328, "col_offset": 31, "nodeName": "type_check", "type": "module"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "F", "type": "module"}, {"lineNumber": 329, "col_offset": 39, "nodeName": "b", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "self", "type": "TestDeconvolutionNDTypeCheck"}, {"lineNumber": 335, "col_offset": 31, "nodeName": "type_check", "type": "module"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "F", "type": "module"}, {"lineNumber": 336, "col_offset": 39, "nodeName": "b", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 343, "col_offset": 13, "nodeName": "self", "type": "TestDeconvolutionNDTypeCheck"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "F", "type": "module"}, {"lineNumber": 344, "col_offset": 44, "nodeName": "stride", "type": "int"}, {"lineNumber": 344, "col_offset": 56, "nodeName": "pad", "type": "int"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 355, "col_offset": 40, "nodeName": "x_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 357, "col_offset": 40, "nodeName": "W_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 358, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "deconvolution_nd", "type": "Callable[..., Any]"}, {"lineNumber": 365, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 365, "col_offset": 34, "nodeName": "W", "type": "Any"}, {"lineNumber": 365, "col_offset": 37, "nodeName": "b", "type": "Any"}, {"lineNumber": 365, "col_offset": 46, "nodeName": "deconvolution_1d", "type": "Callable[..., Any]"}, {"lineNumber": 365, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 365, "col_offset": 68, "nodeName": "W", "type": "Any"}, {"lineNumber": 365, "col_offset": 71, "nodeName": "b", "type": "Any"}, {"lineNumber": 369, "col_offset": 13, "nodeName": "self", "type": "TestDeconvolutionNDWrappers"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "F", "type": "module"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "deconvolution_nd", "type": "Callable[..., Any]"}, {"lineNumber": 375, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 375, "col_offset": 34, "nodeName": "W", "type": "Any"}, {"lineNumber": 375, "col_offset": 37, "nodeName": "b", "type": "Any"}, {"lineNumber": 375, "col_offset": 46, "nodeName": "deconvolution_3d", "type": "Callable[..., Any]"}, {"lineNumber": 375, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 375, "col_offset": 68, "nodeName": "W", "type": "Any"}, {"lineNumber": 375, "col_offset": 71, "nodeName": "b", "type": "Any"}, {"lineNumber": 379, "col_offset": 13, "nodeName": "self", "type": "TestDeconvolutionNDWrappers"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "F", "type": "module"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "functools", "type": "module"}, {"lineNumber": 85, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "s", "type": "Any"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "di", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "dims", "type": "Any"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "ksize", "type": "Tuple[int, ...]"}, {"lineNumber": 92, "col_offset": 42, "nodeName": "stride", "type": "Tuple[int, ...]"}, {"lineNumber": 92, "col_offset": 55, "nodeName": "pad", "type": "Tuple[int, ...]"}, {"lineNumber": 92, "col_offset": 65, "nodeName": "dilate", "type": "Union[Any, Tuple[Any, ...]]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 121, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 169, "col_offset": 33, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 174, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 206, "col_offset": 34, "nodeName": "functools", "type": "module"}, {"lineNumber": 208, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "s", "type": "Any"}, {"lineNumber": 212, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 212, "col_offset": 36, "nodeName": "dims", "type": "Any"}, {"lineNumber": 212, "col_offset": 47, "nodeName": "ksize", "type": "Tuple[int, ...]"}, {"lineNumber": 212, "col_offset": 54, "nodeName": "stride", "type": "Tuple[int, ...]"}, {"lineNumber": 212, "col_offset": 62, "nodeName": "pad", "type": "Tuple[int, ...]"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 216, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "chainer", "type": "module"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "testing", "type": "module"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 230, "col_offset": 33, "nodeName": "func", "type": "Any"}, {"lineNumber": 230, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "testing", "type": "module"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 33, "nodeName": "func", "type": "Any"}, {"lineNumber": 238, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "DeconvolutionND", "type": "Type[chainer.functions.connection.deconvolution_nd.DeconvolutionND]"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "DeconvolutionND", "type": "Type[chainer.functions.connection.deconvolution_nd.DeconvolutionND]"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "F", "type": "module"}, {"lineNumber": 365, "col_offset": 46, "nodeName": "F", "type": "module"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "F", "type": "module"}, {"lineNumber": 375, "col_offset": 46, "nodeName": "F", "type": "module"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 17, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 212, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 216, "col_offset": 18, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "deconvolution_nd", "type": "module"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "deconvolution_nd", "type": "module"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "cuda", "type": "module"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 208, "col_offset": 17, "nodeName": "cuda", "type": "module"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "cuda", "type": "module"}, {"lineNumber": 216, "col_offset": 18, "nodeName": "cuda", "type": "module"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "connection", "type": "module"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "connection", "type": "module"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "F", "type": "module"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "F", "type": "module"}]