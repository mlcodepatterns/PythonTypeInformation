[{"lineNumber": 44, "col_offset": 21, "nodeName": "FunctionTestCase", "type": "Type[chainer.testing.function.FunctionTestCase]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "generate_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "forward_expected", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "test_call_cudnn_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "test_call_cudnn_backward", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "testing", "type": "module"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "unittest", "type": "module"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "check_forward_options", "type": "Dict[nothing, nothing]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "check_backward_options", "type": "Dict[nothing, nothing]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "check_double_backward_options", "type": "Dict[nothing, nothing]"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "y_expect", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "check_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "value", "type": "int"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "logaddexp", "type": "Any"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "log_z", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "y_expect", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 84, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 85, "col_offset": 65, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "expect", "type": "bool"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "log_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "gy", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 61, "col_offset": 63, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "log_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "ufunc", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "axis", "type": "Any"}, {"lineNumber": 84, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "should_use_cudnn", "type": "Callable[..., bool]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 94, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 95, "col_offset": 64, "nodeName": "func", "type": "Any"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "forward", "type": "Callable[[], Any]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 65, "nodeName": "func", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "float16", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 61, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 66, "col_offset": 45, "nodeName": "axis", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "chainer", "type": "module"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 94, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "patch", "type": "Callable[..., mock._patch]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "forward", "type": "Callable[[], Any]"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "called", "type": "Any"}, {"lineNumber": 97, "col_offset": 46, "nodeName": "expect", "type": "bool"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "patch", "type": "Callable[..., mock._patch]"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "backward", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "called", "type": "Any"}, {"lineNumber": 105, "col_offset": 46, "nodeName": "expect", "type": "bool"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "numpy", "type": "module"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "value", "type": "int"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 66, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "testing", "type": "module"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "func", "type": "Any"}, {"lineNumber": 97, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "testing", "type": "module"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "func", "type": "Any"}, {"lineNumber": 105, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "cuda", "type": "module"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "cuda", "type": "module"}]