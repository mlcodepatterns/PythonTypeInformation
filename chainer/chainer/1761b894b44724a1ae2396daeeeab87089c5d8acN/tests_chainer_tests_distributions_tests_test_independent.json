[{"lineNumber": 14, "col_offset": 0, "nodeName": "skip_not_in_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "_generate_valid_shape_pattern", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "_generate_test_parameter", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "distribution_unittest", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "decorator", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "shape_pattern", "type": "List[Dict[str, Optional[Union[int, Tuple[()], Tuple[int, int], Tuple[int], Tuple[int, ...]]]]]"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "shape_pattern", "type": "List[Dict[str, Optional[Union[int, Tuple[()], Tuple[int, int], Tuple[int], Tuple[int, ...]]]]]"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "testing", "type": "module"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "scipy_onebyone", "type": "bool"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "new_f", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "product", "type": "Callable"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "inner_shape", "type": "List[Union[Tuple[int, int], Tuple[int], Tuple[()]]]"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "inner_event_shape", "type": "List[Tuple[()]]"}, {"lineNumber": 31, "col_offset": 44, "nodeName": "reinterpreted_batch_ndims", "type": "List[Optional[int]]"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "_generate_valid_shape_pattern", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "inner_shape", "type": "List[Union[Tuple[int, int], Tuple[int], Tuple[()]]]"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "inner_event_shape", "type": "List[Tuple[()]]"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "reinterpreted_batch_ndims", "type": "List[Optional[int]]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "dist", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "batch_ndim", "type": "Union[int, Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "smp", "type": "Any"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "is_gpu", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "cov2", "type": "Any"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "itertools", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "dicts", "type": "Tuple[Any, ...]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "force_array", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "force_array", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "reinterpreted_batch_ndims", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "reinterpreted_batch_ndims", "type": "int"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "reinterpreted_batch_ndims", "type": "Any"}, {"lineNumber": 89, "col_offset": 40, "nodeName": "reinterpreted_batch_ndims", "type": "Any"}, {"lineNumber": 91, "col_offset": 45, "nodeName": "reinterpreted_batch_ndims", "type": "Union[int, Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "inner_shape", "type": "Any"}, {"lineNumber": 94, "col_offset": 44, "nodeName": "inner_event_shape", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "reduce", "type": "Callable"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "mul", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 43, "nodeName": "event_shape", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "event_shape", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "scipy_dist", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "norm", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "scipy_params", "type": "Dict[str, Any]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "scipy_dist", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "multivariate_normal", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "cov", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "float32", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "cov1", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "cov1", "type": "Any"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "params", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "cov1", "type": "Any"}, {"lineNumber": 132, "col_offset": 36, "nodeName": "cov2", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "check_covariance", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "check_covariance", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "property", "type": "str"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "m", "type": "Optional[int]"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "m", "type": "Optional[int]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "shape_pattern", "type": "List[Dict[str, Optional[Union[int, Tuple[()], Tuple[int, int], Tuple[int], Tuple[int, ...]]]]]"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "bs", "type": "Union[Tuple[int], Tuple[int, int], Tuple[()]]"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "es", "type": "Tuple[()]"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "m", "type": "Optional[int]"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "product", "type": "Callable"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "parameter_list", "type": "Any"}, {"lineNumber": 50, "col_offset": 55, "nodeName": "shape_pattern", "type": "List[Dict[str, Optional[Union[int, Tuple[()], Tuple[int, int], Tuple[int], Tuple[int, ...]]]]]"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "Independent", "type": "Type[chainer.distributions.independent.Independent]"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "reinterpreted_batch_ndims", "type": "Any"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "utils", "type": "module"}, {"lineNumber": 82, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "utils", "type": "module"}, {"lineNumber": 84, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 40, "nodeName": "max", "type": "Callable"}, {"lineNumber": 89, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "inner_shape", "type": "Any"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "batch_ndim", "type": "Union[int, Any]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "inner_shape", "type": "Any"}, {"lineNumber": 94, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "functools", "type": "module"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "operator", "type": "module"}, {"lineNumber": 95, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "stats", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 34, "nodeName": "loc", "type": "Any"}, {"lineNumber": 100, "col_offset": 48, "nodeName": "scale", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "loc", "type": "Any"}, {"lineNumber": 101, "col_offset": 54, "nodeName": "scale", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "stats", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "einsum", "type": "Any"}, {"lineNumber": 108, "col_offset": 53, "nodeName": "scale_tril", "type": "Any"}, {"lineNumber": 108, "col_offset": 65, "nodeName": "scale_tril", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "loc", "type": "Any"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "scale", "type": "Any"}, {"lineNumber": 112, "col_offset": 48, "nodeName": "cov", "type": "Any"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "Independent", "type": "Type[chainer.distributions.independent.Independent]"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "covariance", "type": "Any"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "covariance", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "array", "type": "module"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "keys", "type": "Any"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "bs", "type": "Union[Tuple[int], Tuple[int, int], Tuple[()]]"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "bs", "type": "Union[Tuple[int], Tuple[int, int], Tuple[()]]"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "es", "type": "Tuple[()]"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "itertools", "type": "module"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "distributions", "type": "module"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "Normal", "type": "Type[chainer.distributions.normal.Normal]"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 43, "nodeName": "numpy", "type": "module"}, {"lineNumber": 84, "col_offset": 44, "nodeName": "numpy", "type": "module"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "batch_ndim", "type": "Union[int, Any]"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 106, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "loc", "type": "Any"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "normal", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "distributions", "type": "module"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "Normal", "type": "Type[chainer.distributions.normal.Normal]"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "gpu_dist", "type": "Any"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "cpu_dist", "type": "Any"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 20, "col_offset": 64, "nodeName": "property", "type": "str"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 22, "col_offset": 33, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "distributions", "type": "module"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "full_shape", "type": "Any"}, {"lineNumber": 83, "col_offset": 34, "nodeName": "exp", "type": "Any"}, {"lineNumber": 87, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "inner_shape", "type": "Any"}, {"lineNumber": 106, "col_offset": 45, "nodeName": "numpy", "type": "module"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "numpy", "type": "module"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "distributions", "type": "module"}, {"lineNumber": 123, "col_offset": 39, "nodeName": "params", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "inner_shape", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "random", "type": "Any"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "full_shape", "type": "Any"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "eye", "type": "Any"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "scale", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "sample_shape", "type": "Any"}, {"lineNumber": 116, "col_offset": 37, "nodeName": "full_shape", "type": "Any"}, {"lineNumber": 123, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "numpy", "type": "module"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "random", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 44, "nodeName": "d", "type": "Any"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "numpy", "type": "module"}]