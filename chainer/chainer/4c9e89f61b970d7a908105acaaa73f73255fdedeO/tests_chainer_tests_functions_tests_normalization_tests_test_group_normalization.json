[{"lineNumber": 10, "col_offset": 0, "nodeName": "_simple_group_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "FunctionTestCase", "type": "Type[chainer.testing.function_link.FunctionTestCase]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "generate_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "forward_expected", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "FunctionTestCase", "type": "Type[chainer.testing.function_link.FunctionTestCase]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "generate_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "forward_expected", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "x_reshape", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "mean", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "var", "type": "Any"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "std", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "x_hat", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "x_hat", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "testing", "type": "module"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "testing", "type": "module"}, {"lineNumber": 147, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 11, "col_offset": 16, "nodeName": "channels", "type": "Any"}, {"lineNumber": 11, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 12, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 12, "col_offset": 26, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 12, "col_offset": 38, "nodeName": "groups", "type": "Any"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "mean", "type": "Any"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "x_reshape", "type": "Any"}, {"lineNumber": 15, "col_offset": 10, "nodeName": "var", "type": "Any"}, {"lineNumber": 15, "col_offset": 20, "nodeName": "x_reshape", "type": "Any"}, {"lineNumber": 16, "col_offset": 10, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 18, "col_offset": 33, "nodeName": "std", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "xrange", "type": "Type[xrange]"}, {"lineNumber": 21, "col_offset": 30, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "beta", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "min_std", "type": "float"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "retry", "type": "int"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "beta", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "mean", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "inv_std", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "inv_std", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 147, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 11, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 12, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 12, "col_offset": 46, "nodeName": "channels", "type": "Any"}, {"lineNumber": 12, "col_offset": 58, "nodeName": "groups", "type": "Any"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 15, "col_offset": 10, "nodeName": "numpy", "type": "module"}, {"lineNumber": 16, "col_offset": 10, "nodeName": "numpy", "type": "module"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 16, "col_offset": 27, "nodeName": "eps", "type": "Any"}, {"lineNumber": 16, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "x_reshape", "type": "Any"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "x_hat", "type": "Any"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "moves", "type": "module"}, {"lineNumber": 21, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "i", "type": "int"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "beta", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "x_hat", "type": "Any"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "x_groups", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "retry", "type": "int"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 79, "col_offset": 61, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 80, "col_offset": 60, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "beta", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "beta", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "group_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "groups", "type": "Any"}, {"lineNumber": 85, "col_offset": 58, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 85, "col_offset": 65, "nodeName": "beta", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "beta", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "_simple_group_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "groups", "type": "Any"}, {"lineNumber": 91, "col_offset": 56, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 91, "col_offset": 63, "nodeName": "beta", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 122, "col_offset": 59, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 123, "col_offset": 59, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "y", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 131, "col_offset": 14, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "rsqrt", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 143, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "z", "type": "Any"}, {"lineNumber": 16, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "six", "type": "module"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 23, "col_offset": 38, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 23, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "beta", "type": "Any"}, {"lineNumber": 24, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "check_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "check_double_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "float16", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 72, "col_offset": 58, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "groups", "type": "Any"}, {"lineNumber": 74, "col_offset": 45, "nodeName": "min_std", "type": "float"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "retry", "type": "int"}, {"lineNumber": 79, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "eps", "type": "Any"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "eps", "type": "Any"}, {"lineNumber": 122, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 131, "col_offset": 14, "nodeName": "functions", "type": "module"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "d", "type": "Any"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "d", "type": "Any"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "functions", "type": "module"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "var", "type": "Any"}, {"lineNumber": 132, "col_offset": 40, "nodeName": "eps", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "xp", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "shape", "type": "Any"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 138, "col_offset": 69, "nodeName": "x", "type": "Any"}, {"lineNumber": 138, "col_offset": 72, "nodeName": "y", "type": "Any"}, {"lineNumber": 142, "col_offset": 42, "nodeName": "eps", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "inv_std", "type": "Any"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "numpy", "type": "module"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "check_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "numpy", "type": "module"}, {"lineNumber": 72, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "min", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 123, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 132, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "_MulInvStd", "type": "Type[chainer.functions.normalization.group_normalization._MulInvStd]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "eps", "type": "Any"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "array", "type": "Any"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "array", "type": "Any"}, {"lineNumber": 138, "col_offset": 49, "nodeName": "dummy_gamma", "type": "Any"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 142, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "shape", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 123, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "gn_module", "type": "module"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "mean", "type": "Any"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "inv_std", "type": "Any"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "std", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "x_groups", "type": "Any"}]