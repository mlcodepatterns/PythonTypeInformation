[{"lineNumber": 17, "col_offset": 0, "nodeName": "_to_fcontiguous", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "forward_cpu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "check_forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "test_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "test_backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "check_double_backward", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "test_double_backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 158, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "test_call_cudnn_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "test_call_cudnn_backward", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "xp", "type": "Any"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 188, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 20, "col_offset": 7, "nodeName": "xp", "type": "Any"}, {"lineNumber": 20, "col_offset": 13, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "grad_outputs", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "grad_grad_inputs", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "check_forward_options", "type": "Dict[nothing, nothing]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "expect", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "y_data", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "gy", "type": "Any"}, {"lineNumber": 188, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "backend", "type": "module"}, {"lineNumber": 18, "col_offset": 43, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 21, "col_offset": 14, "nodeName": "SkipTest", "type": "Type[unittest.SkipTest]"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "asfortranarray", "type": "Any"}, {"lineNumber": 22, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 22, "col_offset": 37, "nodeName": "a", "type": "Any"}, {"lineNumber": 22, "col_offset": 42, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 50, "col_offset": 61, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 51, "col_offset": 62, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "astype", "type": "Any"}, {"lineNumber": 52, "col_offset": 63, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "gy", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "gy", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "float64", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "empty", "type": "Any"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "c", "type": "int"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "expect", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "use_chainerx", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "y_expect", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "forward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 85, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "c_contiguous", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "inputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "y_expect", "type": "Any"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "y_data", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "check_forward", "type": "Any"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "use_chainerx", "type": "Any"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 108, "col_offset": 48, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "c_contiguous", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "grad_outputs", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "check_backward", "type": "Any"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 122, "col_offset": 41, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 122, "col_offset": 60, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "use_chainerx", "type": "Any"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 131, "col_offset": 48, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 132, "col_offset": 52, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "c_contiguous", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "grad_outputs", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "grad_grad_inputs", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "check_double_backward", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 149, "col_offset": 44, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 164, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "average_pooling_2d", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "expect", "type": "bool"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 61, "nodeName": "func", "type": "Any"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "chainer", "type": "module"}, {"lineNumber": 21, "col_offset": 14, "nodeName": "unittest", "type": "module"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "float64", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "moves", "type": "module"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "xx", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 80, "col_offset": 57, "nodeName": "float16", "type": "Any"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.SkipTest]"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "_to_fcontiguous", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "average_pooling_2d", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "cuda", "type": "module"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "y_data", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 96, "col_offset": 52, "nodeName": "check_forward_options", "type": "Union[Dict[nothing, nothing], Dict[str, float]]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 104, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 104, "col_offset": 57, "nodeName": "float16", "type": "Any"}, {"lineNumber": 105, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.SkipTest]"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "_to_fcontiguous", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "_to_fcontiguous", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 43, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "average_pooling_2d", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "check_backward", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "inputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "grad_outputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 127, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 127, "col_offset": 57, "nodeName": "float16", "type": "Any"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.SkipTest]"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "_to_fcontiguous", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "_to_fcontiguous", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 43, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "_to_fcontiguous", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 47, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "average_pooling_2d", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "check_double_backward", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "inputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "grad_outputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 143, "col_offset": 41, "nodeName": "grad_grad_inputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 171, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 172, "col_offset": 64, "nodeName": "func", "type": "Any"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 178, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "should_use_cudnn", "type": "Callable[..., bool]"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "forward", "type": "Callable[[], Any]"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "patch", "type": "Callable[..., mock._patch]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 29, "nodeName": "called", "type": "Any"}, {"lineNumber": 185, "col_offset": 42, "nodeName": "expect", "type": "bool"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 69, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "six", "type": "module"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "moves", "type": "module"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 57, "nodeName": "numpy", "type": "module"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "functions", "type": "module"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 96, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 57, "nodeName": "numpy", "type": "module"}, {"lineNumber": 105, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 127, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 57, "nodeName": "numpy", "type": "module"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 171, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "patch", "type": "Callable[..., mock._patch]"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "forward", "type": "Callable[[], Any]"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 33, "nodeName": "called", "type": "Any"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 178, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "chainer", "type": "module"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "testing", "type": "module"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 185, "col_offset": 29, "nodeName": "func", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "six", "type": "module"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "testing", "type": "module"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 174, "col_offset": 33, "nodeName": "func", "type": "Any"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "should_use_cudnn", "type": "Callable[..., bool]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "k", "type": "int"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "c", "type": "int"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "numpy", "type": "module"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "cuda", "type": "module"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "chainer", "type": "module"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "cuda", "type": "module"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "sum", "type": "Any"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "sum", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "sum", "type": "Any"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "sum", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "xx", "type": "Any"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "xx", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "xx", "type": "Any"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "xx", "type": "Any"}]