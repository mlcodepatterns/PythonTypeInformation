[{"lineNumber": 13, "col_offset": 0, "nodeName": "inject_backend_tests", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "check_forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "test_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "test_backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "test_backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 30, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "check_forward_force_tuple", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "test_forward_force_tuple", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "check_forward_single", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "test_forward_single", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "test_invalid_sections", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "decorator", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 222, "col_offset": 30, "nodeName": "unittest", "type": "module"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "unittest", "type": "module"}, {"lineNumber": 275, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 275, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 14, "col_offset": 16, "nodeName": "inject_backend_tests", "type": "Callable[[Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "method_names", "type": "List[str]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "ys_expected", "type": "List[Any]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "x", "type": "chainer.variable.Variable"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "ys_section", "type": "List[int]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "axis", "type": "int"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "inputs", "type": "List[numpy.ndarray]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "grad_outputs", "type": "List[Optional[numpy.ndarray]]"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "axis", "type": "int"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "x", "type": "chainer.variable.Variable"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 248, "col_offset": 13, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "x", "type": "chainer.variable.Variable"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "default_debug", "type": "bool"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 275, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 14, "col_offset": 16, "nodeName": "backend", "type": "module"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 141, "col_offset": 65, "nodeName": "shape", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "float64", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "split_axis", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "ys_section", "type": "Any"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "axis", "type": "Any"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.variable.Variable]"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 160, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "ys", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "yd", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "ys_expected", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "ys", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "check_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 169, "col_offset": 40, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 186, "col_offset": 41, "nodeName": "grad_outputs", "type": "List[Any]"}, {"lineNumber": 186, "col_offset": 55, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "float64", "type": "Any"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "split_axis", "type": "Callable[..., Any]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "ys_section", "type": "List[int]"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "axis", "type": "int"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "inputs", "type": "List[numpy.ndarray]"}, {"lineNumber": 218, "col_offset": 41, "nodeName": "grad_outputs", "type": "List[Optional[numpy.ndarray]]"}, {"lineNumber": 218, "col_offset": 60, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.variable.Variable]"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 235, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "ys", "type": "Any"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 238, "col_offset": 26, "nodeName": "ys", "type": "Any"}, {"lineNumber": 238, "col_offset": 30, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "check_forward_force_tuple", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 242, "col_offset": 39, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 242, "col_offset": 52, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 248, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.variable.Variable]"}, {"lineNumber": 249, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 251, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "ys", "type": "Any"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 254, "col_offset": 26, "nodeName": "ys", "type": "Any"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "Variable", "type": "Type[chainer.variable.Variable]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "check_forward_single", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 257, "col_offset": 34, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 257, "col_offset": 47, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "TestSplitAxisInvalidSections"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "is_debug", "type": "Callable[[], bool]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "set_debug", "type": "Callable[[Any], None]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "set_debug", "type": "Callable[[Any], None]"}, {"lineNumber": 267, "col_offset": 26, "nodeName": "default_debug", "type": "bool"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "product", "type": "Callable[[Any], List[Dict[Any, Any]]]"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 142, "col_offset": 37, "nodeName": "s", "type": "Any"}, {"lineNumber": 142, "col_offset": 42, "nodeName": "slices", "type": "Any"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "numpy", "type": "module"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 31, "nodeName": "x", "type": "chainer.variable.Variable"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 165, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 165, "col_offset": 44, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 36, "nodeName": "yd", "type": "Any"}, {"lineNumber": 166, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 173, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 39, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "check_backward", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 178, "col_offset": 39, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "ys_expected", "type": "List[Any]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "numpy", "type": "module"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 21, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 210, "col_offset": 27, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 39, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "check_backward", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 214, "col_offset": 39, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 218, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 230, "col_offset": 21, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 230, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "split_axis", "type": "Callable[..., Any]"}, {"lineNumber": 236, "col_offset": 38, "nodeName": "x", "type": "chainer.variable.Variable"}, {"lineNumber": 236, "col_offset": 44, "nodeName": "axis", "type": "int"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "ys", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 246, "col_offset": 21, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 246, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "split_axis", "type": "Callable[..., Any]"}, {"lineNumber": 252, "col_offset": 38, "nodeName": "x", "type": "chainer.variable.Variable"}, {"lineNumber": 252, "col_offset": 44, "nodeName": "axis", "type": "int"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "chainer", "type": "module"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 257, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "chainer", "type": "module"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "chainer", "type": "module"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "chainer", "type": "module"}, {"lineNumber": 267, "col_offset": 26, "nodeName": "self", "type": "TestSplitAxisInvalidSections"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 271, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 271, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "split_axis", "type": "Callable[..., Any]"}, {"lineNumber": 272, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "s", "type": "Any"}, {"lineNumber": 142, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "cuda", "type": "module"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "testing", "type": "module"}, {"lineNumber": 166, "col_offset": 40, "nodeName": "y", "type": "Any"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "cuda", "type": "module"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "cuda", "type": "module"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 18, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 196, "col_offset": 49, "nodeName": "float32", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 197, "col_offset": 52, "nodeName": "float32", "type": "Any"}, {"lineNumber": 209, "col_offset": 21, "nodeName": "cuda", "type": "module"}, {"lineNumber": 210, "col_offset": 27, "nodeName": "cuda", "type": "module"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 230, "col_offset": 21, "nodeName": "cuda", "type": "module"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "functions", "type": "module"}, {"lineNumber": 236, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 246, "col_offset": 21, "nodeName": "cuda", "type": "module"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "functions", "type": "module"}, {"lineNumber": 252, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 271, "col_offset": 13, "nodeName": "self", "type": "TestSplitAxisInvalidSections"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "prod", "type": "Any"}, {"lineNumber": 141, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 141, "col_offset": 50, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 165, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 179, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 49, "nodeName": "numpy", "type": "module"}, {"lineNumber": 197, "col_offset": 52, "nodeName": "numpy", "type": "module"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "arange", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 226, "col_offset": 46, "nodeName": "float32", "type": "Any"}, {"lineNumber": 226, "col_offset": 46, "nodeName": "numpy", "type": "module"}]