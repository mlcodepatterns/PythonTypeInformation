[{"lineNumber": 11, "col_offset": 23, "nodeName": "Link", "type": "Type[chainer.link.Link]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "to_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "forward", "type": "Callable[..., Any]"}, {"lineNumber": 11, "col_offset": 23, "nodeName": "link", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "power", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "sampler", "type": "chainer.utils.walker_alias.WalkerAlias"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "self", "type": "NegativeSampling"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "self", "type": "NegativeSampling"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "return_samples", "type": "bool"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "counts", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "NegativeSampling"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "float32", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "power", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "counts", "type": "Any"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "power", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "power", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "NegativeSampling"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "WalkerAlias", "type": "Type[chainer.utils.walker_alias.WalkerAlias]"}, {"lineNumber": 39, "col_offset": 48, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "W", "type": "chainer.variable.Parameter"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "to_cpu", "type": "Callable"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "to_cpu", "type": "Callable[[], None]"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "negative_sampling", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "t", "type": "Any"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "W", "type": "chainer.variable.Parameter"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "power", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "walker_alias", "type": "module"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "init_scope", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "NegativeSampling"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "Parameter", "type": "Type[chainer.variable.Parameter]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "sampler", "type": "chainer.utils.walker_alias.WalkerAlias"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "_get_device", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "device", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "to_gpu", "type": "Callable"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "to_gpu", "type": "Callable[[], None]"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "parse_kwargs", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "negative_sampling", "type": "module"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "self", "type": "NegativeSampling"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "sampler", "type": "chainer.utils.walker_alias.WalkerAlias"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "self", "type": "NegativeSampling"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 90, "col_offset": 42, "nodeName": "return_samples", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "NegativeSampling", "type": "Type[NegativeSampling]"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "self", "type": "NegativeSampling"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "self", "type": "NegativeSampling"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "variable", "type": "module"}, {"lineNumber": 42, "col_offset": 44, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 42, "col_offset": 56, "nodeName": "in_size", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "NegativeSampling", "type": "Type[NegativeSampling]"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "self", "type": "NegativeSampling"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "NegativeSampling"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "cuda", "type": "module"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "sampler", "type": "chainer.utils.walker_alias.WalkerAlias"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "argument", "type": "module"}, {"lineNumber": 86, "col_offset": 43, "nodeName": "return_samples", "type": "bool"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "self", "type": "NegativeSampling"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "NegativeSampling", "type": "Type[NegativeSampling]"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "self", "type": "NegativeSampling"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "NegativeSampling"}]