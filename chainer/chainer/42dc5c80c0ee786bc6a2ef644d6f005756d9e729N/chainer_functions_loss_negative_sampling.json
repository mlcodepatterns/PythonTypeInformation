[{"lineNumber": 12, "col_offset": 0, "nodeName": "_sigmoid_grad", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 320, "col_offset": 0, "nodeName": "negative_sampling", "type": "Callable[..., Any]"}, {"lineNumber": 17, "col_offset": 31, "nodeName": "FunctionNode", "type": "Type[chainer.function_node.FunctionNode]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "_make_samples", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "check_type_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "forward_cpu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "forward_gpu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "FunctionNode", "type": "Type[chainer.function_node.FunctionNode]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "forward_cpu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "forward_gpu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 17, "col_offset": 31, "nodeName": "function_node", "type": "module"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "ignore_label", "type": "int"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "samples", "type": "None"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "function_node", "type": "module"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "return_samples", "type": "bool"}, {"lineNumber": 392, "col_offset": 7, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "func", "type": "NegativeSamplingFunction"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 399, "col_offset": 7, "nodeName": "return_samples", "type": "Any"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "wx", "type": "None"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "size", "type": "int"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "t", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "samples", "type": "Any"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "in_types", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "ignore_mask", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "samples", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "ignore_mask", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "n_in", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "samples", "type": "Any"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "ignore_mask", "type": "Any"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "ignore_mask", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "samples", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "wx", "type": "Any"}, {"lineNumber": 143, "col_offset": 18, "nodeName": "wx", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "gx", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "gW", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "wx", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "gx", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "n_in", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "gW", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 245, "col_offset": 22, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "pos_neg_mask", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 396, "col_offset": 11, "nodeName": "NegativeSamplingFunction", "type": "Type[NegativeSamplingFunction]"}, {"lineNumber": 396, "col_offset": 36, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 396, "col_offset": 45, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 396, "col_offset": 58, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "apply", "type": "Callable[[Any], Tuple[Any, ...]]"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "_argname", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "in_types", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "x_type", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "t_type", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "w_type", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "expect", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "retain_inputs", "type": "Callable[[Any], None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "t", "type": "Any"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "t", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "ignore_label", "type": "int"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "_make_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "t", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "W", "type": "Any"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "einsum", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "wx", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "sum", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "loss", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "retain_inputs", "type": "Callable[[Any], None]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "t", "type": "Any"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "t", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "ignore_label", "type": "int"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "_make_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "t", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 97, "col_offset": 10, "nodeName": "W", "type": "Any"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 97, "col_offset": 43, "nodeName": "samples", "type": "Any"}, {"lineNumber": 97, "col_offset": 52, "nodeName": "n_in", "type": "Any"}, {"lineNumber": 118, "col_offset": 10, "nodeName": "wx", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "n_in", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "t", "type": "Any"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "get_retained_inputs", "type": "Callable[[], Optional[Tuple[Any, ...]]]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "retain_inputs", "type": "Callable[[Any], None]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "W", "type": "Any"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "gloss", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "W", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "ix", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "g", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "gx", "type": "Any"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "gW", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "retain_inputs", "type": "Callable[[Any], None]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "W", "type": "Any"}, {"lineNumber": 176, "col_offset": 14, "nodeName": "gy", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "gy", "type": "Any"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 195, "col_offset": 10, "nodeName": "wx", "type": "Any"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "gy", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "cuda", "type": "module"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 213, "col_offset": 10, "nodeName": "g", "type": "Any"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "W", "type": "Any"}, {"lineNumber": 213, "col_offset": 43, "nodeName": "samples", "type": "Any"}, {"lineNumber": 213, "col_offset": 57, "nodeName": "n_in", "type": "Any"}, {"lineNumber": 214, "col_offset": 32, "nodeName": "gx", "type": "Any"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 216, "col_offset": 29, "nodeName": "W", "type": "Any"}, {"lineNumber": 229, "col_offset": 10, "nodeName": "g", "type": "Any"}, {"lineNumber": 229, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "samples", "type": "Any"}, {"lineNumber": 229, "col_offset": 57, "nodeName": "n_in", "type": "Any"}, {"lineNumber": 230, "col_offset": 32, "nodeName": "gW", "type": "Any"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "gx", "type": "Any"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "gW", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "W", "type": "Any"}, {"lineNumber": 234, "col_offset": 14, "nodeName": "gy", "type": "Any"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "get_retained_inputs", "type": "Callable[[], Optional[Tuple[Any, ...]]]"}, {"lineNumber": 236, "col_offset": 13, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 236, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "indexes", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "gx", "type": "chainer.variable.Variable"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "indexes", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "gW", "type": "chainer.variable.Variable"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "indexes", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "ggy", "type": "chainer.variable.Variable"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 245, "col_offset": 13, "nodeName": "_", "type": "Any"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "ggW", "type": "Any"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "ones", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "pos_neg_mask", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "ix", "type": "Any"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "sigf", "type": "Any"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "indexes", "type": "Any"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "indexes", "type": "Any"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "indexes", "type": "Any"}, {"lineNumber": 393, "col_offset": 26, "nodeName": "parse_kwargs", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 397, "col_offset": 10, "nodeName": "apply", "type": "Callable[[Any], Tuple[Any, ...]]"}, {"lineNumber": 400, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 400, "col_offset": 20, "nodeName": "samples", "type": "Any"}, {"lineNumber": 14, "col_offset": 9, "nodeName": "y", "type": "Any"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "gy", "type": "Any"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "size", "type": "int"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "type_check", "type": "module"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "type_check", "type": "module"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "kind", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "int32", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "samples", "type": "Any"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 63, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "ignore_mask", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "numpy", "type": "module"}, {"lineNumber": 67, "col_offset": 43, "nodeName": "logaddexp", "type": "Any"}, {"lineNumber": 67, "col_offset": 59, "nodeName": "wx", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "elementwise", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "ignore_mask", "type": "Any"}, {"lineNumber": 98, "col_offset": 10, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "elementwise", "type": "Any"}, {"lineNumber": 118, "col_offset": 10, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 118, "col_offset": 47, "nodeName": "ignore_mask", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "sum", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "sum", "type": "Any"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "W", "type": "Any"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "gy", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 152, "col_offset": 53, "nodeName": "ignore_mask", "type": "Any"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "samples", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "igy", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "gloss", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "igy", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "W", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "ix", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "igy", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "g", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "gx", "type": "Any"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "dot", "type": "Any"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "w", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "ik", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "ig", "type": "Any"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 170, "col_offset": 40, "nodeName": "k", "type": "Any"}, {"lineNumber": 170, "col_offset": 43, "nodeName": "g", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "gy", "type": "Any"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "wx", "type": "Any"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "elementwise", "type": "Any"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "elementwise", "type": "Any"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "ignore_mask", "type": "Any"}, {"lineNumber": 213, "col_offset": 43, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 214, "col_offset": 10, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "elementwise", "type": "Any"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "ignore_mask", "type": "Any"}, {"lineNumber": 230, "col_offset": 10, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 236, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 236, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "Variable", "type": "Type[chainer.variable.Variable]"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "Variable", "type": "Type[chainer.variable.Variable]"}, {"lineNumber": 243, "col_offset": 18, "nodeName": "Variable", "type": "Type[chainer.variable.Variable]"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "xp", "type": "Any"}, {"lineNumber": 247, "col_offset": 31, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 250, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 250, "col_offset": 50, "nodeName": "ignore_mask", "type": "Any"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "samples", "type": "Any"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "igy", "type": "Any"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "gy", "type": "Any"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "igy", "type": "Any"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "W", "type": "Any"}, {"lineNumber": 262, "col_offset": 60, "nodeName": "pos_neg_mask", "type": "Any"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "sigmoid", "type": "Callable[[Any], Any]"}, {"lineNumber": 263, "col_offset": 45, "nodeName": "f", "type": "Any"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "pos_neg_mask", "type": "Any"}, {"lineNumber": 268, "col_offset": 65, "nodeName": "pos_neg_mask", "type": "Any"}, {"lineNumber": 270, "col_offset": 51, "nodeName": "pos_neg_mask", "type": "Any"}, {"lineNumber": 271, "col_offset": 21, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 276, "col_offset": 20, "nodeName": "indexes", "type": "Any"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "dgx", "type": "Any"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "dgx", "type": "Any"}, {"lineNumber": 281, "col_offset": 23, "nodeName": "T", "type": "Any"}, {"lineNumber": 288, "col_offset": 20, "nodeName": "indexes", "type": "Any"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 290, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 302, "col_offset": 20, "nodeName": "indexes", "type": "Any"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "dgx_dg", "type": "Any"}, {"lineNumber": 303, "col_offset": 26, "nodeName": "pos_neg_mask", "type": "Any"}, {"lineNumber": 304, "col_offset": 16, "nodeName": "dggy", "type": "Any"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 312, "col_offset": 23, "nodeName": "gx", "type": "Any"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 314, "col_offset": 23, "nodeName": "gW", "type": "Any"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "ggy", "type": "Any"}, {"lineNumber": 393, "col_offset": 26, "nodeName": "argument", "type": "module"}, {"lineNumber": 394, "col_offset": 39, "nodeName": "return_samples", "type": "bool"}, {"lineNumber": 397, "col_offset": 10, "nodeName": "func", "type": "NegativeSamplingFunction"}, {"lineNumber": 397, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 397, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 397, "col_offset": 28, "nodeName": "W", "type": "Any"}, {"lineNumber": 400, "col_offset": 20, "nodeName": "func", "type": "NegativeSamplingFunction"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "SigmoidGrad", "type": "Type[chainer.functions.activation.sigmoid.SigmoidGrad]"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "t", "type": "Any"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "x_type", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "t_type", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "t_type", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "shape", "type": "Any"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "w_type", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "x_type", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "w_type", "type": "Any"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "ignore_mask", "type": "Any"}, {"lineNumber": 63, "col_offset": 49, "nodeName": "ignore_mask", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 67, "col_offset": 43, "nodeName": "numpy", "type": "module"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "cuda", "type": "module"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 98, "col_offset": 10, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "cuda", "type": "module"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 118, "col_offset": 47, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "loss", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "loss", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "NegativeSamplingFunctionGrad", "type": "Type[NegativeSamplingFunctionGrad]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "ignore_mask", "type": "Any"}, {"lineNumber": 132, "col_offset": 43, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 132, "col_offset": 61, "nodeName": "samples", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "wx", "type": "Any"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 152, "col_offset": 34, "nodeName": "ignore_mask", "type": "Any"}, {"lineNumber": 152, "col_offset": 53, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "i", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "i", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "gloss", "type": "Any"}, {"lineNumber": 161, "col_offset": 18, "nodeName": "k", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "w", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "i", "type": "Any"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "g", "type": "Any"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "moves", "type": "module"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "gW", "type": "Any"}, {"lineNumber": 171, "col_offset": 26, "nodeName": "ig", "type": "Any"}, {"lineNumber": 171, "col_offset": 31, "nodeName": "ix", "type": "Any"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "cuda", "type": "module"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 214, "col_offset": 10, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "cuda", "type": "module"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 230, "col_offset": 10, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 239, "col_offset": 34, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 239, "col_offset": 48, "nodeName": "data", "type": "Any"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 241, "col_offset": 34, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 241, "col_offset": 48, "nodeName": "data", "type": "Any"}, {"lineNumber": 243, "col_offset": 18, "nodeName": "chainer", "type": "module"}, {"lineNumber": 243, "col_offset": 35, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 243, "col_offset": 49, "nodeName": "data", "type": "Any"}, {"lineNumber": 247, "col_offset": 31, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 250, "col_offset": 17, "nodeName": "xp", "type": "Any"}, {"lineNumber": 250, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 250, "col_offset": 31, "nodeName": "ignore_mask", "type": "Any"}, {"lineNumber": 250, "col_offset": 50, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "i", "type": "Any"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 253, "col_offset": 29, "nodeName": "i", "type": "Any"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 258, "col_offset": 22, "nodeName": "gy", "type": "Any"}, {"lineNumber": 260, "col_offset": 18, "nodeName": "k", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 267, "col_offset": 21, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 271, "col_offset": 21, "nodeName": "functions", "type": "module"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "matmul", "type": "Callable[..., Any]"}, {"lineNumber": 272, "col_offset": 58, "nodeName": "w", "type": "Any"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "broadcast_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 273, "col_offset": 52, "nodeName": "igy", "type": "Any"}, {"lineNumber": 273, "col_offset": 57, "nodeName": "shape", "type": "Any"}, {"lineNumber": 274, "col_offset": 18, "nodeName": "_sigmoid_grad", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 274, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 274, "col_offset": 35, "nodeName": "sigf", "type": "Any"}, {"lineNumber": 274, "col_offset": 41, "nodeName": "dgx_dg", "type": "Any"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "matmul", "type": "Callable[..., Any]"}, {"lineNumber": 278, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "matmul", "type": "Callable[..., Any]"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 285, "col_offset": 21, "nodeName": "scatter_add", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "gx", "type": "chainer.variable.Variable"}, {"lineNumber": 286, "col_offset": 24, "nodeName": "i", "type": "Any"}, {"lineNumber": 291, "col_offset": 20, "nodeName": "ik", "type": "Any"}, {"lineNumber": 291, "col_offset": 24, "nodeName": "ig", "type": "Any"}, {"lineNumber": 291, "col_offset": 28, "nodeName": "idgx_df", "type": "Any"}, {"lineNumber": 291, "col_offset": 39, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 291, "col_offset": 53, "nodeName": "k", "type": "Any"}, {"lineNumber": 291, "col_offset": 56, "nodeName": "g", "type": "Any"}, {"lineNumber": 291, "col_offset": 59, "nodeName": "dgx_df", "type": "Any"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "ig", "type": "Any"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "idgx_df", "type": "Any"}, {"lineNumber": 298, "col_offset": 21, "nodeName": "scatter_add", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 299, "col_offset": 20, "nodeName": "gW", "type": "Any"}, {"lineNumber": 299, "col_offset": 24, "nodeName": "k", "type": "Any"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "sum", "type": "Callable[..., Any]"}, {"lineNumber": 305, "col_offset": 19, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "ggy", "type": "Any"}, {"lineNumber": 306, "col_offset": 27, "nodeName": "dggy", "type": "Any"}, {"lineNumber": 308, "col_offset": 20, "nodeName": "ggy", "type": "Any"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "sigmoid", "type": "module"}, {"lineNumber": 13, "col_offset": 61, "nodeName": "x", "type": "Any"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "x_type", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "x_type", "type": "Any"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "t_type", "type": "Any"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 63, "col_offset": 49, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "loss", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 132, "col_offset": 43, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 132, "col_offset": 61, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "self", "type": "NegativeSamplingFunction"}, {"lineNumber": 152, "col_offset": 34, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "i", "type": "Any"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "exp", "type": "Any"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "six", "type": "module"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "ik", "type": "Any"}, {"lineNumber": 239, "col_offset": 34, "nodeName": "xp", "type": "Any"}, {"lineNumber": 239, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 241, "col_offset": 34, "nodeName": "xp", "type": "Any"}, {"lineNumber": 241, "col_offset": 48, "nodeName": "W", "type": "Any"}, {"lineNumber": 243, "col_offset": 35, "nodeName": "xp", "type": "Any"}, {"lineNumber": 243, "col_offset": 49, "nodeName": "gy", "type": "Any"}, {"lineNumber": 250, "col_offset": 31, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "i", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "functions", "type": "module"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "matmul", "type": "Callable[..., Any]"}, {"lineNumber": 262, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "chainer", "type": "module"}, {"lineNumber": 267, "col_offset": 21, "nodeName": "functions", "type": "module"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "matmul", "type": "Callable[..., Any]"}, {"lineNumber": 270, "col_offset": 18, "nodeName": "_sigmoid_grad", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 270, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 270, "col_offset": 35, "nodeName": "sigf", "type": "Any"}, {"lineNumber": 270, "col_offset": 41, "nodeName": "dgW_dg", "type": "Any"}, {"lineNumber": 271, "col_offset": 21, "nodeName": "chainer", "type": "module"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "functions", "type": "module"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "functions", "type": "module"}, {"lineNumber": 273, "col_offset": 57, "nodeName": "f", "type": "Any"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "functions", "type": "module"}, {"lineNumber": 278, "col_offset": 50, "nodeName": "dgx_df", "type": "Any"}, {"lineNumber": 281, "col_offset": 23, "nodeName": "matmul", "type": "Callable[..., Any]"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "functions", "type": "module"}, {"lineNumber": 283, "col_offset": 23, "nodeName": "dgW_df", "type": "Any"}, {"lineNumber": 285, "col_offset": 21, "nodeName": "functions", "type": "module"}, {"lineNumber": 286, "col_offset": 27, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 286, "col_offset": 53, "nodeName": "dgx", "type": "Any"}, {"lineNumber": 290, "col_offset": 24, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 291, "col_offset": 39, "nodeName": "moves", "type": "module"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "broadcast_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 292, "col_offset": 56, "nodeName": "ig", "type": "Any"}, {"lineNumber": 292, "col_offset": 60, "nodeName": "shape", "type": "Any"}, {"lineNumber": 293, "col_offset": 30, "nodeName": "broadcast_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 293, "col_offset": 61, "nodeName": "idgx_df", "type": "Any"}, {"lineNumber": 293, "col_offset": 70, "nodeName": "shape", "type": "Any"}, {"lineNumber": 294, "col_offset": 25, "nodeName": "scatter_add", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 295, "col_offset": 24, "nodeName": "gW", "type": "chainer.variable.Variable"}, {"lineNumber": 295, "col_offset": 28, "nodeName": "ik", "type": "Any"}, {"lineNumber": 298, "col_offset": 21, "nodeName": "functions", "type": "module"}, {"lineNumber": 300, "col_offset": 20, "nodeName": "matmul", "type": "Callable[..., Any]"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "functions", "type": "module"}, {"lineNumber": 304, "col_offset": 65, "nodeName": "sigf", "type": "Any"}, {"lineNumber": 305, "col_offset": 19, "nodeName": "self", "type": "NegativeSamplingFunctionGrad"}, {"lineNumber": 308, "col_offset": 26, "nodeName": "scatter_add", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 308, "col_offset": 56, "nodeName": "ggy", "type": "chainer.variable.Variable"}, {"lineNumber": 308, "col_offset": 61, "nodeName": "i", "type": "Any"}, {"lineNumber": 308, "col_offset": 64, "nodeName": "dggy", "type": "Any"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "activation", "type": "module"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "numpy", "type": "module"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "f", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "chainer", "type": "module"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "functions", "type": "module"}, {"lineNumber": 262, "col_offset": 44, "nodeName": "ix", "type": "Any"}, {"lineNumber": 267, "col_offset": 21, "nodeName": "chainer", "type": "module"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "functions", "type": "module"}, {"lineNumber": 268, "col_offset": 41, "nodeName": "ggW", "type": "Any"}, {"lineNumber": 268, "col_offset": 49, "nodeName": "ix", "type": "Any"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "chainer", "type": "module"}, {"lineNumber": 272, "col_offset": 41, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "chainer", "type": "module"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "chainer", "type": "module"}, {"lineNumber": 281, "col_offset": 23, "nodeName": "functions", "type": "module"}, {"lineNumber": 281, "col_offset": 48, "nodeName": "g", "type": "Any"}, {"lineNumber": 281, "col_offset": 60, "nodeName": "ggW", "type": "Any"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "chainer", "type": "module"}, {"lineNumber": 285, "col_offset": 21, "nodeName": "chainer", "type": "module"}, {"lineNumber": 286, "col_offset": 27, "nodeName": "functions", "type": "module"}, {"lineNumber": 290, "col_offset": 28, "nodeName": "i", "type": "Any"}, {"lineNumber": 291, "col_offset": 39, "nodeName": "six", "type": "module"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "functions", "type": "module"}, {"lineNumber": 293, "col_offset": 30, "nodeName": "functions", "type": "module"}, {"lineNumber": 294, "col_offset": 25, "nodeName": "functions", "type": "module"}, {"lineNumber": 298, "col_offset": 21, "nodeName": "chainer", "type": "module"}, {"lineNumber": 300, "col_offset": 20, "nodeName": "functions", "type": "module"}, {"lineNumber": 300, "col_offset": 45, "nodeName": "dgW_df", "type": "Any"}, {"lineNumber": 300, "col_offset": 62, "nodeName": "ix", "type": "Any"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "chainer", "type": "module"}, {"lineNumber": 304, "col_offset": 46, "nodeName": "dgx_dg", "type": "Any"}, {"lineNumber": 304, "col_offset": 55, "nodeName": "dgW_dg", "type": "Any"}, {"lineNumber": 308, "col_offset": 26, "nodeName": "functions", "type": "module"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "functions", "type": "module"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "chainer", "type": "module"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "chainer", "type": "module"}, {"lineNumber": 268, "col_offset": 45, "nodeName": "k", "type": "Any"}, {"lineNumber": 272, "col_offset": 45, "nodeName": "i", "type": "Any"}, {"lineNumber": 281, "col_offset": 23, "nodeName": "chainer", "type": "module"}, {"lineNumber": 281, "col_offset": 64, "nodeName": "k", "type": "Any"}, {"lineNumber": 286, "col_offset": 27, "nodeName": "chainer", "type": "module"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "chainer", "type": "module"}, {"lineNumber": 293, "col_offset": 30, "nodeName": "chainer", "type": "module"}, {"lineNumber": 294, "col_offset": 25, "nodeName": "chainer", "type": "module"}, {"lineNumber": 295, "col_offset": 32, "nodeName": "ig", "type": "Any"}, {"lineNumber": 295, "col_offset": 46, "nodeName": "idgx_df", "type": "Any"}, {"lineNumber": 295, "col_offset": 56, "nodeName": "ix", "type": "Any"}, {"lineNumber": 300, "col_offset": 20, "nodeName": "chainer", "type": "module"}, {"lineNumber": 308, "col_offset": 26, "nodeName": "chainer", "type": "module"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "chainer", "type": "module"}, {"lineNumber": 295, "col_offset": 37, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 295, "col_offset": 41, "nodeName": "i", "type": "Any"}]