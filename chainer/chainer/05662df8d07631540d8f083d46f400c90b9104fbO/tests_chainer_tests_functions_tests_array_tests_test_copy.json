[{"lineNumber": 14, "col_offset": 0, "nodeName": "_to_gpu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "check_forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "test_forward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "test_backward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "test_forward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "test_check_backward_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "test_forward_cpu_to_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "test_backward_cpu_to_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "test_forward_gpu_to_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "test_backward_gpu_to_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "test_forward_multigpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "test_backward_multigpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "check_double_backward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "test_double_backward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "test_call_forward_with_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 123, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 15, "col_offset": 7, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "check_double_backward_options", "type": "Dict[nothing, nothing]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "gy", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "x_grad", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "grad", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "id", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "id", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "id", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "id", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "id", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "id", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 123, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 16, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 16, "col_offset": 30, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 28, "col_offset": 35, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 29, "col_offset": 62, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 30, "col_offset": 63, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "check_double_backward_options", "type": "Dict[str, float]"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "_to_gpu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "src_id", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "copy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "dst_id", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 40, "col_offset": 44, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 41, "col_offset": 41, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "_to_gpu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "src_id", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "copy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "dst_id", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "_to_gpu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "gy", "type": "Any"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "dst_id", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "id", "type": "Any"}, {"lineNumber": 54, "col_offset": 64, "nodeName": "src_id", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "gy", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "check_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "check_backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "check_forward", "type": "Any"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "check_forward", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "check_forward", "type": "Any"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "check_backward", "type": "Any"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "check_forward", "type": "Any"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "check_backward", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "check_forward", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "check_backward", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "check_double_backward", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "y_grad", "type": "Any"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "x_grad_grad", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "check_double_backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 111, "col_offset": 48, "nodeName": "gy", "type": "Any"}, {"lineNumber": 111, "col_offset": 57, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "TestCopyArgument"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "copy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 120, "col_offset": 36, "nodeName": "DummyDevice", "type": "Any"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "cuda", "type": "module"}, {"lineNumber": 28, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 29, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 30, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 40, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 41, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 54, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 41, "col_offset": 66, "nodeName": "data", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "chainer", "type": "module"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "x_grad", "type": "Any"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "Device", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "Device", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "Device", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "Device", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "Device", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "Device", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "copy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 107, "col_offset": 50, "nodeName": "float64", "type": "Any"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "check_double_backward_options", "type": "Union[Dict[nothing, nothing], Dict[str, float]]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "functions", "type": "module"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "self", "type": "TestCopyArgument"}, {"lineNumber": 120, "col_offset": 36, "nodeName": "cuda", "type": "module"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 41, "col_offset": 54, "nodeName": "cuda", "type": "module"}, {"lineNumber": 41, "col_offset": 66, "nodeName": "y", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "get_device_from_array", "type": "Any"}, {"lineNumber": 54, "col_offset": 52, "nodeName": "x_grad", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "cuda", "type": "module"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "cuda", "type": "module"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "cuda", "type": "module"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "cuda", "type": "module"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "cuda", "type": "module"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "cuda", "type": "module"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 107, "col_offset": 50, "nodeName": "numpy", "type": "module"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "cuda", "type": "module"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "numpy", "type": "module"}]