[{"lineNumber": 16, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "_get_dst", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "test_from_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "test_from_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "test_from_ideep", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "_TestCopyToBase", "type": "Type[_TestCopyToBase]"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "_get_dst", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "_TestCopyToBase", "type": "Type[_TestCopyToBase]"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "_get_dst", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "test_gpu_to_another_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "_TestCopyToBase", "type": "Type[_TestCopyToBase]"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "_get_dst", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "test_fail_on_invalid_src", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "test_fail_on_invalid_dst", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "test_get_array_module_for_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "test_get_array_module_for_numpy_variable", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "test_get_array_module_for_cupy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "test_get_array_module_for_cupy_variable", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "test_get_array_module_for_chainerx_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "test_get_array_module_for_chainerx_variable", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "test_numpy_int", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "test_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "test_empty_cupy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "test_cupy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "test_chainerx_cpu_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "orig_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "orig_cupy", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "orig_chainerx", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "to_numpy_check_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "to_chainerx_check_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "test_numpy_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "test_cupy_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "test_numpy_to_chainerx", "type": "Callable[[Any], Any]"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "test_chainerx_to_chainerx", "type": "Callable[[Any], Any]"}, {"lineNumber": 255, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "check_device_spec_numpy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "check_device_spec_cupy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "check_device_spec_chainerx", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "check_device_spec_intel64", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "check_invalid", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "test_module_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "test_module_numpy_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "test_str_chainerx_backend", "type": "Callable[[Any], Any]"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "test_str_chainerx_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "test_tuple_chainerx_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "test_tuple_cupy_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "test_chainerx_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "test_cuda_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "test_intel64", "type": "Callable[[Any], Any]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "test_str_chainerx_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "test_tuple_chainerx_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "test_tuple_cupy_invalid_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 333, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "test_repr_module_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "test_repr_tuple_chainerx_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "test_repr_tuple_cupy_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "test_repr_tuple_intel64_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "test_eq_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "test_eq_cupy", "type": "Callable[[Any], Any]"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "test_eq_chainerx", "type": "Callable[[Any], Any]"}, {"lineNumber": 381, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "orig_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "orig_cupy", "type": "Callable[[Any], Any]"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "orig_chainerx", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "send_check_equal", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "test_numpy_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "test_numpy_to_cupy", "type": "Callable[[Any], Any]"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "test_numpy_to_chainerx", "type": "Callable[[Any], Any]"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "test_cupy_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "test_cupy_to_cupy", "type": "Callable[[Any], Any]"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "test_cupy_to_cupy_multigpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "test_cupy_to_chainerx_native", "type": "Callable[[Any], Any]"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "test_chainerx_native_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "test_numpy_to_numpy_with_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "src_data", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "dst_data", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "unittest", "type": "module"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "unittest", "type": "module"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "unittest", "type": "module"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 255, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 333, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 381, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 539, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 539, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 539, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "arange", "type": "Any"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "src_data", "type": "Any"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "src", "type": "Any"}, {"lineNumber": 25, "col_offset": 14, "nodeName": "src_data", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "src", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "dst", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "src", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "dst", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "dst_data", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "src", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "dst", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "dst", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "src", "type": "None"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "dst", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "src", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "dst", "type": "None"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "arr", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "chainerx_device", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "cupy_device", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 389, "col_offset": 15, "nodeName": "arr", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 400, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "converted_copy", "type": "Any"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 539, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 18, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 25, "col_offset": 14, "nodeName": "self", "type": "_TestCopyToBase"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "_get_dst", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "array", "type": "Any"}, {"lineNumber": 32, "col_offset": 30, "nodeName": "src_data", "type": "Any"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "_get_dst", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "copyto", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "dst", "type": "Any"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "src", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 35, "col_offset": 59, "nodeName": "src_data", "type": "Any"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "array", "type": "Any"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "src_data", "type": "Any"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "_get_dst", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "src", "type": "Any"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "mdarray", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "copyto", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 42, "col_offset": 23, "nodeName": "dst", "type": "Any"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "src", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 43, "col_offset": 59, "nodeName": "src_data", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "self", "type": "TestCopyToCPU"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "array", "type": "Any"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "dst_data", "type": "Any"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "array", "type": "Any"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "src_data", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "dst", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "copyto", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "dst", "type": "Any"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "src", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "dst", "type": "Any"}, {"lineNumber": 62, "col_offset": 50, "nodeName": "src", "type": "Any"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "array", "type": "Any"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "src_data", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "dst", "type": "Any"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "mdarray", "type": "Any"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "xp", "type": "Any"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "numpy", "type": "module"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "numpy", "type": "module"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "get_device_from_array", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "CpuDevice", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "get_device_from_array", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "CpuDevice", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "get_device_from_array", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 55, "nodeName": "arr", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 146, "col_offset": 34, "nodeName": "GpuDevice", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 147, "col_offset": 28, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "get_device_from_array", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "GpuDevice", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "to_chainerx", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "get_device_from_array", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 55, "nodeName": "arr", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "ChainerxDevice", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "to_chainerx", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "get_device_from_array", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 55, "nodeName": "arr", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 170, "col_offset": 34, "nodeName": "ChainerxDevice", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 178, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "arr", "type": "Any"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 186, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "array1", "type": "Any"}, {"lineNumber": 190, "col_offset": 30, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "array1", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 192, "col_offset": 22, "nodeName": "array2", "type": "Any"}, {"lineNumber": 192, "col_offset": 30, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "array1", "type": "Any"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 37, "nodeName": "orig", "type": "Any"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 205, "col_offset": 37, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 206, "col_offset": 32, "nodeName": "orig", "type": "Any"}, {"lineNumber": 206, "col_offset": 38, "nodeName": "converted", "type": "Any"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "to_chainerx", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 40, "nodeName": "orig", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 211, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 211, "col_offset": 37, "nodeName": "ndarray", "type": "Type[chainerx.ndarray]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "orig", "type": "Any"}, {"lineNumber": 212, "col_offset": 38, "nodeName": "converted", "type": "Any"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "orig_numpy", "type": "Callable[[], Any]"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "to_numpy_check_equal", "type": "Callable[[Any], Any]"}, {"lineNumber": 217, "col_offset": 46, "nodeName": "orig", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "orig", "type": "Any"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "orig_cupy", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "to_numpy_check_equal", "type": "Any"}, {"lineNumber": 223, "col_offset": 34, "nodeName": "orig", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "orig_numpy", "type": "Any"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "to_chainerx_check_equal", "type": "Any"}, {"lineNumber": 228, "col_offset": 49, "nodeName": "orig", "type": "Any"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 233, "col_offset": 32, "nodeName": "orig", "type": "Any"}, {"lineNumber": 233, "col_offset": 38, "nodeName": "converted", "type": "Any"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "orig_cupy", "type": "Any"}, {"lineNumber": 239, "col_offset": 20, "nodeName": "to_chainerx_check_equal", "type": "Any"}, {"lineNumber": 239, "col_offset": 49, "nodeName": "orig", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 244, "col_offset": 32, "nodeName": "orig", "type": "Any"}, {"lineNumber": 244, "col_offset": 38, "nodeName": "converted", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "orig_chainerx", "type": "Any"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "to_chainerx_check_equal", "type": "Any"}, {"lineNumber": 249, "col_offset": 49, "nodeName": "orig", "type": "Any"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 250, "col_offset": 28, "nodeName": "orig", "type": "Any"}, {"lineNumber": 259, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 259, "col_offset": 36, "nodeName": "device_spec", "type": "Any"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 260, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 260, "col_offset": 34, "nodeName": "CpuDevice", "type": "Any"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 261, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 264, "col_offset": 36, "nodeName": "device_spec", "type": "Any"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 265, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 265, "col_offset": 34, "nodeName": "GpuDevice", "type": "Any"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 266, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 266, "col_offset": 41, "nodeName": "Device", "type": "Any"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 267, "col_offset": 28, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "id", "type": "Any"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "expected_device_id", "type": "Any"}, {"lineNumber": 271, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 271, "col_offset": 36, "nodeName": "device_spec", "type": "Any"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 272, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 272, "col_offset": 34, "nodeName": "ChainerxDevice", "type": "Any"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 273, "col_offset": 28, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 274, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 274, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 274, "col_offset": 41, "nodeName": "Device", "type": "Any"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 275, "col_offset": 37, "nodeName": "expected_device_name", "type": "Any"}, {"lineNumber": 279, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 279, "col_offset": 36, "nodeName": "device_spec", "type": "Any"}, {"lineNumber": 280, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 280, "col_offset": 34, "nodeName": "Intel64Device", "type": "Type[chainer.backends.intel64.Intel64Device]"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 281, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "check_device_spec_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 288, "col_offset": 37, "nodeName": "numpy", "type": "module"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "check_device_spec_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "check_device_spec_chainerx", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "check_device_spec_chainerx", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "check_device_spec_chainerx", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "check_device_spec_cupy", "type": "Any"}, {"lineNumber": 311, "col_offset": 26, "nodeName": "get_device", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "check_device_spec_chainerx", "type": "Any"}, {"lineNumber": 312, "col_offset": 40, "nodeName": "chainerx_device", "type": "Any"}, {"lineNumber": 316, "col_offset": 22, "nodeName": "Device", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "check_device_spec_cupy", "type": "Any"}, {"lineNumber": 317, "col_offset": 36, "nodeName": "cupy_device", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "check_device_spec_intel64", "type": "Any"}, {"lineNumber": 321, "col_offset": 39, "nodeName": "intel64", "type": "module"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "check_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "check_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "check_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 336, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 336, "col_offset": 36, "nodeName": "numpy", "type": "module"}, {"lineNumber": 341, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 346, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 351, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 351, "col_offset": 36, "nodeName": "intel64", "type": "module"}, {"lineNumber": 384, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 384, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 387, "col_offset": 14, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 388, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 388, "col_offset": 26, "nodeName": "arr", "type": "Any"}, {"lineNumber": 388, "col_offset": 31, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 392, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 395, "col_offset": 17, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 395, "col_offset": 36, "nodeName": "device_spec", "type": "Any"}, {"lineNumber": 396, "col_offset": 20, "nodeName": "send", "type": "Any"}, {"lineNumber": 396, "col_offset": 32, "nodeName": "orig", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "orig_numpy", "type": "Callable[[], Any]"}, {"lineNumber": 404, "col_offset": 20, "nodeName": "send_check_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 404, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 404, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 405, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 405, "col_offset": 28, "nodeName": "orig", "type": "Any"}, {"lineNumber": 409, "col_offset": 15, "nodeName": "orig_numpy", "type": "Any"}, {"lineNumber": 410, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 410, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 411, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 411, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 411, "col_offset": 37, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 412, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 416, "col_offset": 15, "nodeName": "orig_numpy", "type": "Any"}, {"lineNumber": 417, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 417, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 418, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 418, "col_offset": 37, "nodeName": "ndarray", "type": "Type[chainerx.ndarray]"}, {"lineNumber": 419, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "orig", "type": "Any"}, {"lineNumber": 429, "col_offset": 15, "nodeName": "orig_numpy", "type": "Any"}, {"lineNumber": 430, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 430, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 431, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 431, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 431, "col_offset": 37, "nodeName": "ndarray", "type": "Type[chainerx.ndarray]"}, {"lineNumber": 432, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 436, "col_offset": 15, "nodeName": "orig_cupy", "type": "Any"}, {"lineNumber": 437, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 437, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 437, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 438, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 438, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 438, "col_offset": 37, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 442, "col_offset": 15, "nodeName": "orig_cupy", "type": "Any"}, {"lineNumber": 443, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 443, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 444, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 444, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 444, "col_offset": 37, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 445, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 445, "col_offset": 35, "nodeName": "device", "type": "Any"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 455, "col_offset": 15, "nodeName": "orig_cupy", "type": "Any"}, {"lineNumber": 456, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 456, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 457, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 457, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 457, "col_offset": 37, "nodeName": "ndarray", "type": "Type[chainerx.ndarray]"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 467, "col_offset": 15, "nodeName": "orig_cupy", "type": "Any"}, {"lineNumber": 468, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 468, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 469, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 469, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 469, "col_offset": 37, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 470, "col_offset": 15, "nodeName": "id", "type": "Any"}, {"lineNumber": 474, "col_offset": 15, "nodeName": "orig_cupy", "type": "Any"}, {"lineNumber": 475, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 475, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 476, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 476, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 476, "col_offset": 37, "nodeName": "ndarray", "type": "Type[chainerx.ndarray]"}, {"lineNumber": 477, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "orig_cupy", "type": "Any"}, {"lineNumber": 483, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 483, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 484, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 484, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 484, "col_offset": 37, "nodeName": "ndarray", "type": "Type[chainerx.ndarray]"}, {"lineNumber": 485, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 489, "col_offset": 15, "nodeName": "orig_chainerx", "type": "Any"}, {"lineNumber": 490, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 490, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 490, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 491, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 491, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 491, "col_offset": 37, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 501, "col_offset": 15, "nodeName": "orig_chainerx", "type": "Any"}, {"lineNumber": 502, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 502, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 503, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 503, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 503, "col_offset": 37, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 504, "col_offset": 15, "nodeName": "id", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "converted", "type": "Any"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 514, "col_offset": 15, "nodeName": "orig_chainerx", "type": "Any"}, {"lineNumber": 515, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 515, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 516, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 516, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 516, "col_offset": 37, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 517, "col_offset": 15, "nodeName": "id", "type": "Any"}, {"lineNumber": 520, "col_offset": 25, "nodeName": "copy", "type": "Any"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 529, "col_offset": 15, "nodeName": "orig_chainerx", "type": "Any"}, {"lineNumber": 530, "col_offset": 20, "nodeName": "send_check_equal", "type": "Any"}, {"lineNumber": 530, "col_offset": 42, "nodeName": "orig", "type": "Any"}, {"lineNumber": 530, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 531, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 531, "col_offset": 26, "nodeName": "converted", "type": "Any"}, {"lineNumber": 531, "col_offset": 37, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 534, "col_offset": 15, "nodeName": "orig_numpy", "type": "Callable[[], Any]"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "send_check_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 536, "col_offset": 12, "nodeName": "orig", "type": "Any"}, {"lineNumber": 18, "col_offset": 40, "nodeName": "numpy", "type": "module"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "self", "type": "_TestCopyToBase"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 32, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "backend", "type": "module"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 35, "col_offset": 53, "nodeName": "dst", "type": "Any"}, {"lineNumber": 35, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "ideep", "type": "Any"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "intel64", "type": "module"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "backend", "type": "module"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 43, "col_offset": 53, "nodeName": "dst", "type": "Any"}, {"lineNumber": 43, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "get_device_from_id", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "_get_dst", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "backend", "type": "module"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "ideep", "type": "Any"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "intel64", "type": "module"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "copyto", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "dst", "type": "Any"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "src", "type": "None"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "copyto", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "dst", "type": "None"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "src", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 90, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestGetArrayModule"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "cuda", "type": "module"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "cuda", "type": "module"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "array", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "cuda", "type": "module"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "cuda", "type": "module"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 117, "col_offset": 38, "nodeName": "array", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "cuda", "type": "module"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 124, "col_offset": 38, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "cuda", "type": "module"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 133, "col_offset": 55, "nodeName": "int64", "type": "Any"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "backend", "type": "module"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 138, "col_offset": 55, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "backend", "type": "module"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 146, "col_offset": 34, "nodeName": "backend", "type": "module"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 147, "col_offset": 28, "nodeName": "cuda", "type": "module"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "Device", "type": "Any"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 152, "col_offset": 55, "nodeName": "array", "type": "Any"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "backend", "type": "module"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "cuda", "type": "module"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "Device", "type": "Any"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "backend", "type": "module"}, {"lineNumber": 159, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "backend", "type": "module"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "get_device", "type": "Any"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "backend", "type": "module"}, {"lineNumber": 168, "col_offset": 42, "nodeName": "array", "type": "Any"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 170, "col_offset": 34, "nodeName": "backend", "type": "module"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "get_device", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 178, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "cuda", "type": "module"}, {"lineNumber": 181, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 181, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "cuda", "type": "module"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 186, "col_offset": 37, "nodeName": "numpy", "type": "module"}, {"lineNumber": 186, "col_offset": 59, "nodeName": "device_name", "type": "Any"}, {"lineNumber": 190, "col_offset": 30, "nodeName": "cuda", "type": "module"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 192, "col_offset": 30, "nodeName": "cuda", "type": "module"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "array1", "type": "Any"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 198, "col_offset": 31, "nodeName": "array2", "type": "Any"}, {"lineNumber": 198, "col_offset": 39, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 199, "col_offset": 45, "nodeName": "array1", "type": "Any"}, {"lineNumber": 199, "col_offset": 53, "nodeName": "array2", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 201, "col_offset": 48, "nodeName": "array1", "type": "Any"}, {"lineNumber": 201, "col_offset": 56, "nodeName": "array2", "type": "Any"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "backend", "type": "module"}, {"lineNumber": 205, "col_offset": 37, "nodeName": "numpy", "type": "module"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "TestToBackend"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "backend", "type": "module"}, {"lineNumber": 211, "col_offset": 37, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "TestToBackend"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "self", "type": "TestToBackend"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "self", "type": "TestToBackend"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 229, "col_offset": 35, "nodeName": "get_device", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 239, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 240, "col_offset": 35, "nodeName": "get_device", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 259, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 260, "col_offset": 34, "nodeName": "backend", "type": "module"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 265, "col_offset": 34, "nodeName": "backend", "type": "module"}, {"lineNumber": 266, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 266, "col_offset": 41, "nodeName": "cuda", "type": "module"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 267, "col_offset": 28, "nodeName": "cuda", "type": "module"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 271, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 272, "col_offset": 34, "nodeName": "backend", "type": "module"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 274, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 274, "col_offset": 41, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 279, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 280, "col_offset": 34, "nodeName": "backend", "type": "module"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 284, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 284, "col_offset": 27, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 285, "col_offset": 31, "nodeName": "device_spec", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "self", "type": "TestGetDevice"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self", "type": "TestGetDevice"}, {"lineNumber": 291, "col_offset": 37, "nodeName": "CpuDevice", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 307, "col_offset": 37, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 311, "col_offset": 26, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 316, "col_offset": 22, "nodeName": "cuda", "type": "module"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "self", "type": "TestGetDevice"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "self", "type": "TestGetDevice"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "self", "type": "TestGetDevice"}, {"lineNumber": 330, "col_offset": 28, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 336, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 337, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 337, "col_offset": 19, "nodeName": "device", "type": "Any"}, {"lineNumber": 341, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 342, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 342, "col_offset": 19, "nodeName": "device", "type": "Any"}, {"lineNumber": 346, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 346, "col_offset": 37, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 347, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 347, "col_offset": 19, "nodeName": "device", "type": "Any"}, {"lineNumber": 351, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 352, "col_offset": 19, "nodeName": "device", "type": "Any"}, {"lineNumber": 355, "col_offset": 15, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 355, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 355, "col_offset": 44, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 355, "col_offset": 63, "nodeName": "numpy", "type": "module"}, {"lineNumber": 356, "col_offset": 16, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 357, "col_offset": 19, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 357, "col_offset": 38, "nodeName": "numpy", "type": "module"}, {"lineNumber": 361, "col_offset": 16, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 362, "col_offset": 19, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 362, "col_offset": 38, "nodeName": "numpy", "type": "module"}, {"lineNumber": 363, "col_offset": 16, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 364, "col_offset": 19, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 365, "col_offset": 16, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 366, "col_offset": 19, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 370, "col_offset": 49, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 371, "col_offset": 15, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 371, "col_offset": 49, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 378, "col_offset": 15, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 384, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 384, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 387, "col_offset": 14, "nodeName": "cuda", "type": "module"}, {"lineNumber": 387, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 387, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 388, "col_offset": 31, "nodeName": "cuda", "type": "module"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 392, "col_offset": 37, "nodeName": "numpy", "type": "module"}, {"lineNumber": 392, "col_offset": 59, "nodeName": "device_name", "type": "Any"}, {"lineNumber": 395, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 396, "col_offset": 20, "nodeName": "device", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 398, "col_offset": 29, "nodeName": "orig", "type": "Any"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 399, "col_offset": 29, "nodeName": "converted", "type": "Any"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "self", "type": "TestDeviceSend"}, {"lineNumber": 404, "col_offset": 20, "nodeName": "self", "type": "TestDeviceSend"}, {"lineNumber": 409, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 410, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 410, "col_offset": 49, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 411, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 412, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 412, "col_offset": 35, "nodeName": "Device", "type": "Any"}, {"lineNumber": 416, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 417, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 418, "col_offset": 37, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 419, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 424, "col_offset": 18, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 424, "col_offset": 35, "nodeName": "converted", "type": "Any"}, {"lineNumber": 429, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 430, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 431, "col_offset": 37, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 432, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 436, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 437, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 438, "col_offset": 37, "nodeName": "numpy", "type": "module"}, {"lineNumber": 442, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 443, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 443, "col_offset": 49, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 444, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 445, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 445, "col_offset": 35, "nodeName": "orig", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 450, "col_offset": 29, "nodeName": "orig", "type": "Any"}, {"lineNumber": 450, "col_offset": 36, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 450, "col_offset": 53, "nodeName": "converted", "type": "Any"}, {"lineNumber": 455, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 456, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 457, "col_offset": 37, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 463, "col_offset": 12, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 463, "col_offset": 29, "nodeName": "orig", "type": "Any"}, {"lineNumber": 463, "col_offset": 36, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 463, "col_offset": 53, "nodeName": "converted", "type": "Any"}, {"lineNumber": 467, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 468, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 468, "col_offset": 49, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 469, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 470, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 474, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 475, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 476, "col_offset": 37, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 477, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 483, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 484, "col_offset": 37, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 485, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 489, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 490, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 491, "col_offset": 37, "nodeName": "numpy", "type": "module"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 496, "col_offset": 29, "nodeName": "orig", "type": "Any"}, {"lineNumber": 496, "col_offset": 36, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 496, "col_offset": 53, "nodeName": "converted", "type": "Any"}, {"lineNumber": 501, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 502, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 502, "col_offset": 49, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 503, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 504, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 509, "col_offset": 12, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 509, "col_offset": 29, "nodeName": "orig", "type": "Any"}, {"lineNumber": 509, "col_offset": 36, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 509, "col_offset": 53, "nodeName": "converted", "type": "Any"}, {"lineNumber": 514, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 515, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 515, "col_offset": 49, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 516, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 517, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 520, "col_offset": 25, "nodeName": "converted", "type": "Any"}, {"lineNumber": 521, "col_offset": 13, "nodeName": "Device", "type": "Any"}, {"lineNumber": 522, "col_offset": 12, "nodeName": "converted", "type": "Any"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 524, "col_offset": 12, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 524, "col_offset": 29, "nodeName": "orig", "type": "Any"}, {"lineNumber": 524, "col_offset": 36, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 524, "col_offset": 53, "nodeName": "converted_copy", "type": "Any"}, {"lineNumber": 529, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 530, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 531, "col_offset": 37, "nodeName": "numpy", "type": "module"}, {"lineNumber": 534, "col_offset": 15, "nodeName": "self", "type": "TestDeviceSend"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "self", "type": "TestDeviceSend"}, {"lineNumber": 536, "col_offset": 18, "nodeName": "get_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "cuda", "type": "module"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "cuda", "type": "module"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "intel64", "type": "module"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "cuda", "type": "module"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "cuda", "type": "module"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "cuda", "type": "module"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "cuda", "type": "module"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "intel64", "type": "module"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "self", "type": "TestCopyToError"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "self", "type": "TestCopyToError"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 90, "col_offset": 38, "nodeName": "numpy", "type": "module"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "chainer", "type": "module"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "chainer", "type": "module"}, {"lineNumber": 110, "col_offset": 55, "nodeName": "array", "type": "Any"}, {"lineNumber": 117, "col_offset": 38, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 124, "col_offset": 38, "nodeName": "chainer", "type": "module"}, {"lineNumber": 124, "col_offset": 55, "nodeName": "array", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 133, "col_offset": 55, "nodeName": "numpy", "type": "module"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 138, "col_offset": 55, "nodeName": "numpy", "type": "module"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "array", "type": "Any"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "cuda", "type": "module"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 152, "col_offset": 55, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "cuda", "type": "module"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "chainer", "type": "module"}, {"lineNumber": 159, "col_offset": 42, "nodeName": "numpy", "type": "module"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "chainer", "type": "module"}, {"lineNumber": 168, "col_offset": 42, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 181, "col_offset": 26, "nodeName": "numpy", "type": "module"}, {"lineNumber": 181, "col_offset": 45, "nodeName": "numpy", "type": "module"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "array1", "type": "Any"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "array2", "type": "Any"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "numpy", "type": "module"}, {"lineNumber": 198, "col_offset": 39, "nodeName": "numpy", "type": "module"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "testing", "type": "module"}, {"lineNumber": 229, "col_offset": 35, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 240, "col_offset": 35, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "device", "type": "Any"}, {"lineNumber": 284, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 291, "col_offset": 37, "nodeName": "backend", "type": "module"}, {"lineNumber": 307, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 330, "col_offset": 28, "nodeName": "cuda", "type": "module"}, {"lineNumber": 346, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 355, "col_offset": 15, "nodeName": "backend", "type": "module"}, {"lineNumber": 355, "col_offset": 44, "nodeName": "backend", "type": "module"}, {"lineNumber": 356, "col_offset": 16, "nodeName": "backend", "type": "module"}, {"lineNumber": 356, "col_offset": 35, "nodeName": "CpuDevice", "type": "Any"}, {"lineNumber": 357, "col_offset": 19, "nodeName": "backend", "type": "module"}, {"lineNumber": 361, "col_offset": 16, "nodeName": "backend", "type": "module"}, {"lineNumber": 361, "col_offset": 36, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 362, "col_offset": 19, "nodeName": "backend", "type": "module"}, {"lineNumber": 363, "col_offset": 16, "nodeName": "backend", "type": "module"}, {"lineNumber": 363, "col_offset": 36, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 364, "col_offset": 19, "nodeName": "backend", "type": "module"}, {"lineNumber": 364, "col_offset": 39, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 365, "col_offset": 16, "nodeName": "backend", "type": "module"}, {"lineNumber": 365, "col_offset": 36, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 366, "col_offset": 19, "nodeName": "backend", "type": "module"}, {"lineNumber": 366, "col_offset": 39, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "backend", "type": "module"}, {"lineNumber": 370, "col_offset": 49, "nodeName": "backend", "type": "module"}, {"lineNumber": 371, "col_offset": 15, "nodeName": "backend", "type": "module"}, {"lineNumber": 371, "col_offset": 49, "nodeName": "backend", "type": "module"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 378, "col_offset": 15, "nodeName": "backend", "type": "module"}, {"lineNumber": 378, "col_offset": 35, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 387, "col_offset": 26, "nodeName": "numpy", "type": "module"}, {"lineNumber": 387, "col_offset": 45, "nodeName": "numpy", "type": "module"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 410, "col_offset": 49, "nodeName": "cuda", "type": "module"}, {"lineNumber": 412, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 419, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 424, "col_offset": 18, "nodeName": "backend", "type": "module"}, {"lineNumber": 432, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 443, "col_offset": 49, "nodeName": "cuda", "type": "module"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 450, "col_offset": 36, "nodeName": "backend", "type": "module"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 463, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 463, "col_offset": 36, "nodeName": "backend", "type": "module"}, {"lineNumber": 468, "col_offset": 49, "nodeName": "cuda", "type": "module"}, {"lineNumber": 470, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 477, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 485, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 496, "col_offset": 36, "nodeName": "backend", "type": "module"}, {"lineNumber": 502, "col_offset": 49, "nodeName": "cuda", "type": "module"}, {"lineNumber": 504, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 509, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 509, "col_offset": 36, "nodeName": "backend", "type": "module"}, {"lineNumber": 515, "col_offset": 49, "nodeName": "cuda", "type": "module"}, {"lineNumber": 517, "col_offset": 15, "nodeName": "converted", "type": "Any"}, {"lineNumber": 521, "col_offset": 13, "nodeName": "cuda", "type": "module"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 524, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 524, "col_offset": 36, "nodeName": "backend", "type": "module"}, {"lineNumber": 536, "col_offset": 18, "nodeName": "chainer", "type": "module"}, {"lineNumber": 536, "col_offset": 37, "nodeName": "CpuDevice", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "cuda", "type": "module"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "numpy", "type": "module"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "cuda", "type": "module"}, {"lineNumber": 110, "col_offset": 55, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 124, "col_offset": 55, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 152, "col_offset": 55, "nodeName": "cuda", "type": "module"}, {"lineNumber": 168, "col_offset": 42, "nodeName": "cuda", "type": "module"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 356, "col_offset": 35, "nodeName": "backend", "type": "module"}, {"lineNumber": 361, "col_offset": 36, "nodeName": "cuda", "type": "module"}, {"lineNumber": 363, "col_offset": 36, "nodeName": "cuda", "type": "module"}, {"lineNumber": 364, "col_offset": 39, "nodeName": "cuda", "type": "module"}, {"lineNumber": 365, "col_offset": 36, "nodeName": "cuda", "type": "module"}, {"lineNumber": 366, "col_offset": 39, "nodeName": "cuda", "type": "module"}, {"lineNumber": 378, "col_offset": 35, "nodeName": "cuda", "type": "module"}, {"lineNumber": 536, "col_offset": 37, "nodeName": "backend", "type": "module"}, {"lineNumber": 110, "col_offset": 55, "nodeName": "cuda", "type": "module"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "cuda", "type": "module"}]