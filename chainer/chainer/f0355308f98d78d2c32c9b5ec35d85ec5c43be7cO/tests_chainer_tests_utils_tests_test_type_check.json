[{"lineNumber": 12, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "test_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "test_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "test_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "test_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "test_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "test_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "test_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "test_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "test_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "test_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "test_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "test_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "test_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "test_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "test_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "test_priority", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "test_div", "type": "Callable[[Any], Any]"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "test_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "test_simple", "type": "Callable[[Any], Any]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "test_invalid_arg", "type": "Callable[[Any], Any]"}, {"lineNumber": 277, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "test_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "test_expect", "type": "Callable[[Any], Any]"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "test_bool", "type": "Callable[[Any], Any]"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "test_bool_operator", "type": "Callable[[Any], Any]"}, {"lineNumber": 305, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "test_evaluate_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 326, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "test_eval_list_items", "type": "Callable[[Any], Any]"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "test_list_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "test_eval_tuple_items", "type": "Callable[[Any], Any]"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "test_tuple_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "test_eval_nest_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "test_nest_list_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "test_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "test_value", "type": "Callable[[Any], Any]"}, {"lineNumber": 360, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "test_all_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "test_all_numpy_subclasses", "type": "Callable[[Any], Any]"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "test_all_cupy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "test_numpy_cupy_mixed_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "test_numpy_cupy_mixed_2", "type": "Callable[[Any], Any]"}, {"lineNumber": 12, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 277, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 305, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 326, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 360, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 396, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 396, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 396, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Constant"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "x", "type": "Object"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "value", "type": "chainer.utils.type_check.GetAttr"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "value2", "type": "chainer.utils.type_check.GetAttr"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "value3", "type": "chainer.utils.type_check.GetAttr"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "v1", "type": "chainer.utils.type_check.GetItem"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "v2", "type": "chainer.utils.type_check.GetItem"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "f", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "c1", "type": "chainer.utils.type_check.Call"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "c2", "type": "chainer.utils.type_check.Call"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "c3", "type": "chainer.utils.type_check.Call"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "op1", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "op2", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "op3", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "op4", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "op5", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "op6", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "op1", "type": "chainer.utils.type_check.UnaryOperator"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "op2", "type": "chainer.utils.type_check.UnaryOperator"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "ts", "type": "chainer.utils.type_check.TypeInfoTuple"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "data", "type": "Tuple[Any]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "ts", "type": "chainer.utils.type_check.TypeInfoTuple"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "t", "type": "nothing"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "z", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "op1", "type": "chainer.utils.type_check.BoolBinaryOperator"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "op2", "type": "chainer.utils.type_check.BoolBinaryOperator"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "t", "type": "chainer.utils.type_check.Constant"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "z", "type": "numpy.ndarray"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "z", "type": "numpy.ndarray"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 396, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "TestConstant"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestVariable"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Object"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "Object", "type": "Type[Object]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "GetAttr", "type": "Type[chainer.utils.type_check.GetAttr]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "GetAttr", "type": "Type[chainer.utils.type_check.GetAttr]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "GetAttr", "type": "Type[chainer.utils.type_check.GetAttr]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "GetItem", "type": "Type[chainer.utils.type_check.GetItem]"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "GetItem", "type": "Type[chainer.utils.type_check.GetItem]"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "Call", "type": "Type[chainer.utils.type_check.Call]"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "f", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "f", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "Call", "type": "Type[chainer.utils.type_check.Call]"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "f", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "BinaryOperator", "type": "Type[chainer.utils.type_check.BinaryOperator]"}, {"lineNumber": 119, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 119, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 119, "col_offset": 50, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "BinaryOperator", "type": "Type[chainer.utils.type_check.BinaryOperator]"}, {"lineNumber": 120, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 120, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 120, "col_offset": 50, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "BinaryOperator", "type": "Type[chainer.utils.type_check.BinaryOperator]"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 121, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 121, "col_offset": 50, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "BinaryOperator", "type": "Type[chainer.utils.type_check.BinaryOperator]"}, {"lineNumber": 123, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 123, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 123, "col_offset": 50, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "BinaryOperator", "type": "Type[chainer.utils.type_check.BinaryOperator]"}, {"lineNumber": 124, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 124, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "BinaryOperator", "type": "Type[chainer.utils.type_check.BinaryOperator]"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 125, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 125, "col_offset": 50, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestUnaryOperator"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "UnaryOperator", "type": "Type[chainer.utils.type_check.UnaryOperator]"}, {"lineNumber": 147, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 147, "col_offset": 46, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestUnaryOperator"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "UnaryOperator", "type": "Type[chainer.utils.type_check.UnaryOperator]"}, {"lineNumber": 148, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 148, "col_offset": 46, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "TestDivOperator"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "TestDivOperator"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 252, "col_offset": 13, "nodeName": "get_types", "type": "Callable[[Any, Any, Any], chainer.utils.type_check.TypeInfoTuple]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 253, "col_offset": 30, "nodeName": "ts", "type": "chainer.utils.type_check.TypeInfoTuple"}, {"lineNumber": 253, "col_offset": 34, "nodeName": "TypeInfoTuple", "type": "Type[chainer.utils.type_check.TypeInfoTuple]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 255, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 259, "col_offset": 13, "nodeName": "get_types", "type": "Callable[[Any, Any, Any], chainer.utils.type_check.TypeInfoTuple]"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "data", "type": "Tuple[Any]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 260, "col_offset": 30, "nodeName": "ts", "type": "chainer.utils.type_check.TypeInfoTuple"}, {"lineNumber": 260, "col_offset": 34, "nodeName": "TypeInfoTuple", "type": "Type[chainer.utils.type_check.TypeInfoTuple]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 262, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "ts", "type": "chainer.utils.type_check.TypeInfoTuple"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 265, "col_offset": 30, "nodeName": "t", "type": "nothing"}, {"lineNumber": 265, "col_offset": 33, "nodeName": "Expr", "type": "Type[chainer.utils.type_check.Expr]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 286, "col_offset": 19, "nodeName": "BoolBinaryOperator", "type": "Type[chainer.utils.type_check.BoolBinaryOperator]"}, {"lineNumber": 286, "col_offset": 40, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 286, "col_offset": 43, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 286, "col_offset": 58, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 287, "col_offset": 19, "nodeName": "BoolBinaryOperator", "type": "Type[chainer.utils.type_check.BoolBinaryOperator]"}, {"lineNumber": 287, "col_offset": 40, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 287, "col_offset": 43, "nodeName": "z", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 287, "col_offset": 58, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 308, "col_offset": 17, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 313, "col_offset": 41, "nodeName": "Expr", "type": "Type[chainer.utils.type_check.Expr]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 314, "col_offset": 30, "nodeName": "x", "type": "chainer.utils.type_check.GetAttr"}, {"lineNumber": 314, "col_offset": 40, "nodeName": "Expr", "type": "Type[chainer.utils.type_check.Expr]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 315, "col_offset": 40, "nodeName": "Expr", "type": "Type[chainer.utils.type_check.Expr]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "prod", "type": "Callable[[Any], Any]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 356, "col_offset": 16, "nodeName": "eval", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 357, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "T", "type": "module"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestConstant"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 18, "col_offset": 35, "nodeName": "x", "type": "chainer.utils.type_check.Constant"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestConstant"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "T", "type": "module"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestVariable"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestVariable"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "T", "type": "module"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "x", "type": "Object"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "T", "type": "module"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "x", "type": "Object"}, {"lineNumber": 47, "col_offset": 52, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "T", "type": "module"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "Variable", "type": "Type[chainer.utils.type_check.Variable]"}, {"lineNumber": 48, "col_offset": 43, "nodeName": "x", "type": "Object"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 51, "col_offset": 40, "nodeName": "value", "type": "chainer.utils.type_check.GetAttr"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "value2", "type": "chainer.utils.type_check.GetAttr"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 46, "nodeName": "value3", "type": "chainer.utils.type_check.GetAttr"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "T", "type": "module"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "T", "type": "module"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "v1", "type": "chainer.utils.type_check.GetItem"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "v2", "type": "chainer.utils.type_check.GetItem"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 83, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "T", "type": "module"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "T", "type": "module"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 99, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "c1", "type": "chainer.utils.type_check.Call"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "c2", "type": "chainer.utils.type_check.Call"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "c3", "type": "chainer.utils.type_check.Call"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "T", "type": "module"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "T", "type": "module"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "T", "type": "module"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "T", "type": "module"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "T", "type": "module"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "T", "type": "module"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 128, "col_offset": 38, "nodeName": "op1", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 129, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 129, "col_offset": 40, "nodeName": "op2", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "op3", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "op4", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 133, "col_offset": 40, "nodeName": "op5", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 134, "col_offset": 42, "nodeName": "op6", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "T", "type": "module"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "T", "type": "module"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TestUnaryOperator"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 151, "col_offset": 35, "nodeName": "op1", "type": "chainer.utils.type_check.UnaryOperator"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "TestUnaryOperator"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "op2", "type": "chainer.utils.type_check.UnaryOperator"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "TestUnaryOperator"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "T", "type": "module"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "T", "type": "module"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 167, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 170, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 171, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 173, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 176, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 178, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 181, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 185, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 188, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 189, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 190, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 194, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 197, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 199, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 202, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 203, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 204, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 206, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 209, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 210, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 216, "col_offset": 46, "nodeName": "priority", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 217, "col_offset": 45, "nodeName": "priority", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 222, "col_offset": 42, "nodeName": "priority", "type": "Any"}, {"lineNumber": 222, "col_offset": 59, "nodeName": "priority", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "TestOperators"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "priority", "type": "Any"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "priority", "type": "int"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "T", "type": "module"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "T", "type": "module"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "sys", "type": "module"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 252, "col_offset": 13, "nodeName": "T", "type": "module"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 253, "col_offset": 34, "nodeName": "T", "type": "module"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 254, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 254, "col_offset": 32, "nodeName": "ts", "type": "chainer.utils.type_check.TypeInfoTuple"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 255, "col_offset": 33, "nodeName": "ts", "type": "chainer.utils.type_check.TypeInfoTuple"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 258, "col_offset": 46, "nodeName": "float32", "type": "Any"}, {"lineNumber": 259, "col_offset": 13, "nodeName": "T", "type": "module"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 260, "col_offset": 34, "nodeName": "T", "type": "module"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 261, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 261, "col_offset": 32, "nodeName": "ts", "type": "chainer.utils.type_check.TypeInfoTuple"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 262, "col_offset": 33, "nodeName": "ts", "type": "chainer.utils.type_check.TypeInfoTuple"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 265, "col_offset": 33, "nodeName": "T", "type": "module"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 266, "col_offset": 28, "nodeName": "eval", "type": "nothing"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 267, "col_offset": 28, "nodeName": "eval", "type": "nothing"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "eval", "type": "nothing"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 269, "col_offset": 28, "nodeName": "eval", "type": "nothing"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 270, "col_offset": 40, "nodeName": "eval", "type": "nothing"}, {"lineNumber": 273, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 273, "col_offset": 31, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "get_types", "type": "Callable[[Any, Any, Any], chainer.utils.type_check.TypeInfoTuple]"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "y", "type": "Any"}, {"lineNumber": 286, "col_offset": 19, "nodeName": "T", "type": "module"}, {"lineNumber": 287, "col_offset": 19, "nodeName": "T", "type": "module"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 290, "col_offset": 24, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 293, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 293, "col_offset": 31, "nodeName": "InvalidType", "type": "Type[chainer.utils.type_check.InvalidType]"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "expect", "type": "Callable[[], None]"}, {"lineNumber": 297, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 297, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 298, "col_offset": 17, "nodeName": "op1", "type": "chainer.utils.type_check.BoolBinaryOperator"}, {"lineNumber": 301, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 301, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 302, "col_offset": 16, "nodeName": "op1", "type": "chainer.utils.type_check.BoolBinaryOperator"}, {"lineNumber": 308, "col_offset": 17, "nodeName": "T", "type": "module"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 313, "col_offset": 30, "nodeName": "t", "type": "chainer.utils.type_check.Constant"}, {"lineNumber": 313, "col_offset": 41, "nodeName": "T", "type": "module"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 314, "col_offset": 30, "nodeName": "t", "type": "chainer.utils.type_check.Constant"}, {"lineNumber": 314, "col_offset": 40, "nodeName": "T", "type": "module"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 315, "col_offset": 30, "nodeName": "t", "type": "chainer.utils.type_check.Constant"}, {"lineNumber": 315, "col_offset": 40, "nodeName": "T", "type": "module"}, {"lineNumber": 318, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 318, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 320, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 320, "col_offset": 31, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 322, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 322, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "self", "type": "TestListItem"}, {"lineNumber": 329, "col_offset": 25, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "self", "type": "TestListItem"}, {"lineNumber": 332, "col_offset": 32, "nodeName": "_repr", "type": "Callable[[Any], str]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "self", "type": "TestListItem"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "TestListItem"}, {"lineNumber": 338, "col_offset": 31, "nodeName": "_repr", "type": "Callable[[Any], str]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "TestListItem"}, {"lineNumber": 339, "col_offset": 33, "nodeName": "_repr", "type": "Callable[[Any], str]"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "self", "type": "TestListItem"}, {"lineNumber": 340, "col_offset": 35, "nodeName": "_repr", "type": "Callable[[Any], str]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "self", "type": "TestListItem"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "TestListItem"}, {"lineNumber": 346, "col_offset": 34, "nodeName": "_repr", "type": "Callable[[Any], str]"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "self", "type": "TestProd"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 353, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "self", "type": "TestProd"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "self", "type": "TestSameTypes"}, {"lineNumber": 366, "col_offset": 24, "nodeName": "same_types", "type": "Callable[..., bool]"}, {"lineNumber": 366, "col_offset": 37, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 366, "col_offset": 40, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 366, "col_offset": 43, "nodeName": "z", "type": "numpy.ndarray"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "self", "type": "TestSameTypes"}, {"lineNumber": 372, "col_offset": 24, "nodeName": "same_types", "type": "Callable[..., bool]"}, {"lineNumber": 372, "col_offset": 37, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 372, "col_offset": 40, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 372, "col_offset": 43, "nodeName": "z", "type": "Any"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 379, "col_offset": 24, "nodeName": "same_types", "type": "Callable[..., bool]"}, {"lineNumber": 379, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 379, "col_offset": 40, "nodeName": "y", "type": "Any"}, {"lineNumber": 379, "col_offset": 43, "nodeName": "z", "type": "Any"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 386, "col_offset": 25, "nodeName": "same_types", "type": "Callable[..., bool]"}, {"lineNumber": 386, "col_offset": 38, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 386, "col_offset": 41, "nodeName": "y", "type": "Any"}, {"lineNumber": 386, "col_offset": 44, "nodeName": "z", "type": "numpy.ndarray"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 393, "col_offset": 25, "nodeName": "same_types", "type": "Callable[..., bool]"}, {"lineNumber": 393, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 393, "col_offset": 41, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 393, "col_offset": 44, "nodeName": "z", "type": "Any"}, {"lineNumber": 18, "col_offset": 35, "nodeName": "self", "type": "TestConstant"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "x", "type": "chainer.utils.type_check.Constant"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "self", "type": "TestVariable"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "T", "type": "module"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "T", "type": "module"}, {"lineNumber": 47, "col_offset": 52, "nodeName": "T", "type": "module"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "T", "type": "module"}, {"lineNumber": 51, "col_offset": 40, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 53, "col_offset": 46, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "value", "type": "chainer.utils.type_check.GetAttr"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 81, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 82, "col_offset": 40, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "v1", "type": "chainer.utils.type_check.GetItem"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "v2", "type": "chainer.utils.type_check.GetItem"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "c1", "type": "chainer.utils.type_check.Call"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "c2", "type": "chainer.utils.type_check.Call"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 128, "col_offset": 38, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 129, "col_offset": 40, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 133, "col_offset": 40, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 134, "col_offset": 42, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "op1", "type": "chainer.utils.type_check.BinaryOperator"}, {"lineNumber": 151, "col_offset": 35, "nodeName": "self", "type": "TestUnaryOperator"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "self", "type": "TestUnaryOperator"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "op1", "type": "chainer.utils.type_check.UnaryOperator"}, {"lineNumber": 167, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 167, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 168, "col_offset": 42, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 169, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 170, "col_offset": 42, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 171, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 173, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 173, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 174, "col_offset": 42, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 175, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 175, "col_offset": 44, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 176, "col_offset": 44, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 177, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 177, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 178, "col_offset": 42, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 179, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 179, "col_offset": 44, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 180, "col_offset": 39, "nodeName": "pow", "type": "Callable"}, {"lineNumber": 180, "col_offset": 43, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 180, "col_offset": 46, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 181, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 181, "col_offset": 44, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 182, "col_offset": 44, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 183, "col_offset": 44, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 184, "col_offset": 44, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 185, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 185, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 186, "col_offset": 42, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 187, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 187, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 189, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 190, "col_offset": 42, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 192, "col_offset": 36, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 193, "col_offset": 36, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 194, "col_offset": 36, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 197, "col_offset": 50, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 198, "col_offset": 44, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 199, "col_offset": 46, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 202, "col_offset": 44, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 203, "col_offset": 44, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 204, "col_offset": 58, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 210, "col_offset": 50, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "self", "type": "TestDivOperator"}, {"lineNumber": 244, "col_offset": 33, "nodeName": "eval", "type": "Callable[[], Any]"}, {"lineNumber": 258, "col_offset": 46, "nodeName": "numpy", "type": "module"}, {"lineNumber": 269, "col_offset": 28, "nodeName": "ndim", "type": "nothing"}, {"lineNumber": 270, "col_offset": 40, "nodeName": "dtype", "type": "nothing"}, {"lineNumber": 273, "col_offset": 13, "nodeName": "self", "type": "TestGetType"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "T", "type": "module"}, {"lineNumber": 290, "col_offset": 24, "nodeName": "op1", "type": "chainer.utils.type_check.BoolBinaryOperator"}, {"lineNumber": 293, "col_offset": 13, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 293, "col_offset": 31, "nodeName": "T", "type": "module"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "op2", "type": "chainer.utils.type_check.BoolBinaryOperator"}, {"lineNumber": 297, "col_offset": 13, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 298, "col_offset": 17, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 301, "col_offset": 13, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 302, "col_offset": 16, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 313, "col_offset": 30, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 314, "col_offset": 30, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 315, "col_offset": 30, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 318, "col_offset": 13, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 320, "col_offset": 13, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "x", "type": "chainer.utils.type_check.GetAttr"}, {"lineNumber": 322, "col_offset": 13, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 332, "col_offset": 32, "nodeName": "T", "type": "module"}, {"lineNumber": 338, "col_offset": 31, "nodeName": "T", "type": "module"}, {"lineNumber": 339, "col_offset": 33, "nodeName": "T", "type": "module"}, {"lineNumber": 340, "col_offset": 35, "nodeName": "T", "type": "module"}, {"lineNumber": 346, "col_offset": 34, "nodeName": "T", "type": "module"}, {"lineNumber": 356, "col_offset": 16, "nodeName": "prod", "type": "Callable[[Any], Any]"}, {"lineNumber": 366, "col_offset": 24, "nodeName": "T", "type": "module"}, {"lineNumber": 372, "col_offset": 24, "nodeName": "T", "type": "module"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 379, "col_offset": 24, "nodeName": "T", "type": "module"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 386, "col_offset": 25, "nodeName": "T", "type": "module"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 393, "col_offset": 25, "nodeName": "T", "type": "module"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "self", "type": "TestConstant"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "self", "type": "TestVariable"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "self", "type": "TestGetAttr"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "self", "type": "TestGetItem"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "c3", "type": "chainer.utils.type_check.Call"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "self", "type": "TestBinaryOperator"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "self", "type": "TestUnaryOperator"}, {"lineNumber": 197, "col_offset": 42, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 197, "col_offset": 46, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 198, "col_offset": 49, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 198, "col_offset": 53, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 199, "col_offset": 52, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 199, "col_offset": 57, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 202, "col_offset": 49, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 202, "col_offset": 54, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 203, "col_offset": 50, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 203, "col_offset": 55, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 204, "col_offset": 47, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 204, "col_offset": 52, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 206, "col_offset": 43, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 206, "col_offset": 47, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 209, "col_offset": 41, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 209, "col_offset": 46, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 210, "col_offset": 44, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 216, "col_offset": 30, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 216, "col_offset": 46, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 216, "col_offset": 51, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 217, "col_offset": 45, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 217, "col_offset": 49, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 220, "col_offset": 30, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 222, "col_offset": 43, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 222, "col_offset": 60, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 226, "col_offset": 29, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 227, "col_offset": 30, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 231, "col_offset": 30, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 266, "col_offset": 28, "nodeName": "shape", "type": "nothing"}, {"lineNumber": 267, "col_offset": 28, "nodeName": "shape", "type": "nothing"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "shape", "type": "nothing"}, {"lineNumber": 269, "col_offset": 28, "nodeName": "t", "type": "nothing"}, {"lineNumber": 270, "col_offset": 40, "nodeName": "t", "type": "nothing"}, {"lineNumber": 290, "col_offset": 24, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "self", "type": "TestBoolBinaryOperator"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "t", "type": "chainer.utils.type_check.Constant"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "t", "type": "chainer.utils.type_check.Constant"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "t", "type": "chainer.utils.type_check.Constant"}, {"lineNumber": 332, "col_offset": 41, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 339, "col_offset": 42, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 340, "col_offset": 44, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 340, "col_offset": 59, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 356, "col_offset": 16, "nodeName": "T", "type": "module"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "self", "type": "TestCall"}, {"lineNumber": 244, "col_offset": 33, "nodeName": "x", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 244, "col_offset": 42, "nodeName": "y", "type": "chainer.utils.type_check.Variable"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 266, "col_offset": 28, "nodeName": "t", "type": "nothing"}, {"lineNumber": 267, "col_offset": 28, "nodeName": "t", "type": "nothing"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "t", "type": "nothing"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "self", "type": "TestLazyGetItem"}, {"lineNumber": 329, "col_offset": 25, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 332, "col_offset": 41, "nodeName": "T", "type": "module"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 339, "col_offset": 42, "nodeName": "T", "type": "module"}, {"lineNumber": 340, "col_offset": 44, "nodeName": "T", "type": "module"}, {"lineNumber": 340, "col_offset": 59, "nodeName": "T", "type": "module"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 346, "col_offset": 44, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 244, "col_offset": 33, "nodeName": "self", "type": "TestDivOperator"}, {"lineNumber": 244, "col_offset": 42, "nodeName": "self", "type": "TestDivOperator"}, {"lineNumber": 329, "col_offset": 25, "nodeName": "T", "type": "module"}, {"lineNumber": 329, "col_offset": 45, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "T", "type": "module"}, {"lineNumber": 335, "col_offset": 46, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "T", "type": "module"}, {"lineNumber": 346, "col_offset": 44, "nodeName": "T", "type": "module"}, {"lineNumber": 329, "col_offset": 45, "nodeName": "T", "type": "module"}, {"lineNumber": 335, "col_offset": 46, "nodeName": "T", "type": "module"}, {"lineNumber": 343, "col_offset": 48, "nodeName": "Constant", "type": "Type[chainer.utils.type_check.Constant]"}, {"lineNumber": 343, "col_offset": 48, "nodeName": "T", "type": "module"}]