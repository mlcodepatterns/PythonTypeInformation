[{"lineNumber": 16, "col_offset": 17, "nodeName": "Link", "type": "Type[chainer.link.Link]"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "w", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "g", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "x1", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "a0", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "a1", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "norm", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "opt", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerUtility"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerUtility"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "SimpleLink", "type": "Type[SimpleLink]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "w", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "norm", "type": "Any"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "multiplier", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "multiplier", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "expect", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "expect", "type": "Any"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "SGD", "type": "Type[chainer.optimizers.sgd.SGD]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "target", "type": "SimpleLink"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "expect", "type": "Any"}, {"lineNumber": 91, "col_offset": 40, "nodeName": "w", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "check_clipping", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "check_clipping", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "check_clipping", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "check_clipping", "type": "Any"}, {"lineNumber": 20, "col_offset": 13, "nodeName": "init_scope", "type": "Callable[..., contextlib._GeneratorContextManager[None]]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "self", "type": "SimpleLink"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 21, "col_offset": 53, "nodeName": "shape", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "SimpleLink"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "SimpleLink"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerUtility"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "_sum_sqnorm", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerUtility"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "_sum_sqnorm", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "_sum_sqnorm", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "_sum_sqnorm", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "_sum_sqnorm", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "cuda", "type": "module"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "cuda", "type": "module"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "cuda", "type": "module"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "cuda", "type": "module"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "_sum_sqnorm", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "target", "type": "SimpleLink"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "target", "type": "SimpleLink"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "_sum_sqnorm", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 53, "nodeName": "g", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "g", "type": "Any"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "optimizers", "type": "module"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "opt", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "self", "type": "TestGradientClipping"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "opt", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "GradientClipping", "type": "Type[chainer.optimizer_hooks.gradient_clipping.GradientClipping]"}, {"lineNumber": 88, "col_offset": 45, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "opt", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestGradientClipping"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestGradientClipping"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "SimpleLink", "type": "Type[SimpleLink]"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "self", "type": "SimpleLink"}, {"lineNumber": 20, "col_offset": 13, "nodeName": "self", "type": "SimpleLink"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "chainer", "type": "module"}, {"lineNumber": 21, "col_offset": 43, "nodeName": "Zero", "type": "Type[chainer.initializers.constant.Zero]"}, {"lineNumber": 21, "col_offset": 53, "nodeName": "w", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 29, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "gradient_clipping", "type": "module"}, {"lineNumber": 34, "col_offset": 62, "nodeName": "x", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "gradient_clipping", "type": "module"}, {"lineNumber": 37, "col_offset": 62, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "gradient_clipping", "type": "module"}, {"lineNumber": 42, "col_offset": 62, "nodeName": "x", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "gradient_clipping", "type": "module"}, {"lineNumber": 47, "col_offset": 62, "nodeName": "a", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "gradient_clipping", "type": "module"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "a", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "gradient_clipping", "type": "module"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "x0", "type": "Any"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "a0", "type": "Any"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "x1", "type": "Any"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "a1", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "TestGradientClipping"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "self", "type": "TestGradientClipping"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "gradient_clipping", "type": "module"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "g", "type": "Any"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "multiplier", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "optimizer_hooks", "type": "module"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 21, "col_offset": 43, "nodeName": "I", "type": "module"}, {"lineNumber": 29, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 62, "nodeName": "self", "type": "TestOptimizerUtility"}, {"lineNumber": 37, "col_offset": 62, "nodeName": "self", "type": "TestOptimizerUtility"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 39, "nodeName": "np", "type": "module"}]