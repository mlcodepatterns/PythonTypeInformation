[{"lineNumber": 14, "col_offset": 0, "nodeName": "make_array", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "FunctionNode", "type": "Type[chainer.function_node.FunctionNode]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 28, "col_offset": 33, "nodeName": "FunctionNode", "type": "Type[chainer.function_node.FunctionNode]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "backward_accumulate", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "_get_method", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "setup_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "check_backprop_step", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "test_backprop_step_none_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "test_backprop_step_none_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "test_backprop_step_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "test_backprop_step_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "size", "type": "Any"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "a", "type": "Any"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "chainer", "type": "module"}, {"lineNumber": 28, "col_offset": 33, "nodeName": "chainer", "type": "module"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 205, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 205, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "product", "type": "Any"}, {"lineNumber": 15, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "arange", "type": "Any"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "start", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "shape", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "gxs", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "len_gxs", "type": "int"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "suffix", "type": "str"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "y_shape", "type": "Any"}, {"lineNumber": 105, "col_offset": 18, "nodeName": "y_shape", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "x_shape", "type": "Any"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "x_shape", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "gx2", "type": "None"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "gy1", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "gy2", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "_mock_backward", "type": "mock.MagicMock"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "check_type_forward", "type": "mock.MagicMock"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "forward_cpu", "type": "mock.MagicMock"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "forward_gpu", "type": "mock.MagicMock"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "f", "type": "Union[FuncWithBackward, FuncWithBackwardAccumulate]"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "f", "type": "Union[FuncWithBackward, FuncWithBackwardAccumulate]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "x1", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "y1", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "y2", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "gx1", "type": "Any"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "gx1", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "gx2", "type": "None"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "gx2", "type": "None"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "gx1_accum", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "gy1", "type": "Any"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "gy1", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "gy2", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "gy2", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "f", "type": "None"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "y1", "type": "None"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "y2", "type": "None"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "gx1", "type": "None"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "x1", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "gy1", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "gy2", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "forward_gpu", "type": "mock.MagicMock"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "flag_none", "type": "bool"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "x1", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "inputs", "type": "Tuple[Any, Any]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "gxrefs", "type": "List[Union[List[nothing], List[Any]]]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "grad_outputs", "type": "Tuple[Any, Any]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "grad_inputs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "gx1", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "gx2", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "flag_none", "type": "bool"}, {"lineNumber": 205, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "start", "type": "Any"}, {"lineNumber": 16, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "_mock_backward", "type": "Any"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "target_input_indexes", "type": "Any"}, {"lineNumber": 25, "col_offset": 57, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "target_input_indexes", "type": "Any"}, {"lineNumber": 71, "col_offset": 48, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 72, "col_offset": 40, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "grad_inputs", "type": "Any"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "_mock_backward", "type": "Any"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "target_input_indexes", "type": "Any"}, {"lineNumber": 77, "col_offset": 56, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "gxs", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "len_gxs", "type": "int"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "gxs", "type": "Tuple[Any, ...]"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "f", "type": "Union[FuncWithBackward, FuncWithBackwardAccumulate]"}, {"lineNumber": 105, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "make_array", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "y_shape", "type": "Any"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "make_array", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "y_shape", "type": "Any"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 112, "col_offset": 14, "nodeName": "make_array", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "y_shape", "type": "Any"}, {"lineNumber": 112, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "make_array", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "y_shape", "type": "Any"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "f", "type": "Union[FuncWithBackward, FuncWithBackwardAccumulate]"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "f", "type": "Union[FuncWithBackward, FuncWithBackwardAccumulate]"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "f", "type": "Union[FuncWithBackward, FuncWithBackwardAccumulate]"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "f", "type": "Union[FuncWithBackward, FuncWithBackwardAccumulate]"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "make_array", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "x_shape", "type": "Any"}, {"lineNumber": 125, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "make_array", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "x_shape", "type": "Any"}, {"lineNumber": 126, "col_offset": 41, "nodeName": "int32", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "gx1", "type": "Any"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "gx1_orig", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "x1", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "x2", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 18, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "y1", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 18, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "y2", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 19, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 155, "col_offset": 31, "nodeName": "gy1", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "gy2", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "f", "type": "Union[FuncWithBackward, FuncWithBackwardAccumulate]"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "x1", "type": "Any"}, {"lineNumber": 165, "col_offset": 13, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 165, "col_offset": 30, "nodeName": "x2", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "f", "type": "Union[FuncWithBackward, FuncWithBackwardAccumulate]"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "node", "type": "Any"}, {"lineNumber": 166, "col_offset": 34, "nodeName": "node", "type": "Any"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "gy1", "type": "Any"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "gy2", "type": "Any"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "backprop_step", "type": "Callable[[Any, Any, Any, Any, Any], None]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "f", "type": "Union[FuncWithBackward, FuncWithBackwardAccumulate]"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "grad_outputs", "type": "Tuple[Any, Any]"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "grad_inputs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "lazy_grad_sum", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "gxref", "type": "Union[List[nothing], List[Any]]"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "gxrefs", "type": "List[Union[List[nothing], List[Any]]]"}, {"lineNumber": 176, "col_offset": 14, "nodeName": "_reduce", "type": "Callable[[Any], Any]"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "_reduce", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "check_backprop_step", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "setup_gpu", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "check_backprop_step", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "check_backprop_step", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "setup_gpu", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "check_backprop_step", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "self", "type": "FuncWithBackward"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "self", "type": "FuncWithBackwardAccumulate"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "len_gxs", "type": "int"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "suffix", "type": "str"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "numpy", "type": "module"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "numpy", "type": "module"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "chainer", "type": "module"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "make_array", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "x_shape", "type": "Any"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "float32", "type": "Any"}, {"lineNumber": 112, "col_offset": 37, "nodeName": "numpy", "type": "module"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "numpy", "type": "module"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "mock", "type": "module"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "mock", "type": "module"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "mock", "type": "module"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "mock", "type": "module"}, {"lineNumber": 125, "col_offset": 41, "nodeName": "numpy", "type": "module"}, {"lineNumber": 126, "col_offset": 41, "nodeName": "numpy", "type": "module"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "chainer", "type": "module"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "make_array", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "x_shape", "type": "Any"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "float32", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "chainer", "type": "module"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "make_array", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "x_shape", "type": "Any"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "float32", "type": "Any"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "cuda", "type": "module"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "cuda", "type": "module"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 18, "nodeName": "cuda", "type": "module"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 18, "nodeName": "cuda", "type": "module"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "gx1", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "gx1_orig", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "gx2_orig", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "gx1_accum", "type": "Any"}, {"lineNumber": 155, "col_offset": 19, "nodeName": "cuda", "type": "module"}, {"lineNumber": 155, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "cuda", "type": "module"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "mock", "type": "module"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "mock", "type": "module"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "gxs", "type": "Any"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 165, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "x1", "type": "Any"}, {"lineNumber": 166, "col_offset": 34, "nodeName": "x2", "type": "Any"}, {"lineNumber": 167, "col_offset": 53, "nodeName": "gx", "type": "Any"}, {"lineNumber": 167, "col_offset": 59, "nodeName": "gxs", "type": "Any"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "inputs", "type": "Tuple[Any, Any]"}, {"lineNumber": 169, "col_offset": 46, "nodeName": "gxrefs", "type": "List[Union[List[nothing], List[Any]]]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "_backprop_utils", "type": "module"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "config", "type": "chainer.configuration.LocalConfig"}, {"lineNumber": 176, "col_offset": 14, "nodeName": "_backprop_utils", "type": "module"}, {"lineNumber": 176, "col_offset": 38, "nodeName": "gxrefs", "type": "List[Union[List[nothing], List[Any]]]"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "_backprop_utils", "type": "module"}, {"lineNumber": 177, "col_offset": 38, "nodeName": "gxrefs", "type": "List[Union[List[nothing], List[Any]]]"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 30, "nodeName": "gx2", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 34, "nodeName": "gx1_orig", "type": "Any"}, {"lineNumber": 197, "col_offset": 49, "nodeName": "gx2_orig", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 34, "nodeName": "gx1_orig", "type": "Any"}, {"lineNumber": 202, "col_offset": 49, "nodeName": "gx2_orig", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "self", "type": "FuncWithBackwardAccumulate"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "target_input_indexes", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "numpy", "type": "module"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "FuncWithBackward", "type": "Type[FuncWithBackward]"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "FuncWithBackwardAccumulate", "type": "Type[FuncWithBackwardAccumulate]"}, {"lineNumber": 118, "col_offset": 10, "nodeName": "override", "type": "Any"}, {"lineNumber": 119, "col_offset": 56, "nodeName": "gx1", "type": "Any"}, {"lineNumber": 119, "col_offset": 61, "nodeName": "gx2", "type": "None"}, {"lineNumber": 121, "col_offset": 53, "nodeName": "y1", "type": "Any"}, {"lineNumber": 121, "col_offset": 57, "nodeName": "y2", "type": "Any"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "numpy", "type": "module"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "numpy", "type": "module"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 58, "nodeName": "y1", "type": "Any"}, {"lineNumber": 157, "col_offset": 67, "nodeName": "y2", "type": "Any"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "gx1", "type": "Any"}, {"lineNumber": 159, "col_offset": 36, "nodeName": "gx2", "type": "Any"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "gx", "type": "Any"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "gx", "type": "Any"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "f", "type": "Union[FuncWithBackward, FuncWithBackwardAccumulate]"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "configuration", "type": "module"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 179, "col_offset": 45, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 179, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 180, "col_offset": 45, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 180, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 183, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 184, "col_offset": 45, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 184, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 185, "col_offset": 45, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 185, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 186, "col_offset": 45, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 186, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 197, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "gxs", "type": "Any"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "i", "type": "Any"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "target_input_indexes", "type": "Any"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "gx", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "g_input", "type": "Any"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 90, "col_offset": 55, "nodeName": "gxs", "type": "Any"}, {"lineNumber": 90, "col_offset": 60, "nodeName": "grad_inputs", "type": "Any"}, {"lineNumber": 118, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 67, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "chainer", "type": "module"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 175, "col_offset": 41, "nodeName": "gxref", "type": "Union[List[Any], List[nothing]]"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 179, "col_offset": 45, "nodeName": "cuda", "type": "module"}, {"lineNumber": 179, "col_offset": 57, "nodeName": "gx1", "type": "Any"}, {"lineNumber": 180, "col_offset": 45, "nodeName": "cuda", "type": "module"}, {"lineNumber": 180, "col_offset": 57, "nodeName": "gx1", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "cuda", "type": "module"}, {"lineNumber": 183, "col_offset": 57, "nodeName": "gx1", "type": "Any"}, {"lineNumber": 184, "col_offset": 45, "nodeName": "cuda", "type": "module"}, {"lineNumber": 184, "col_offset": 57, "nodeName": "gx1_accum", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 185, "col_offset": 45, "nodeName": "cuda", "type": "module"}, {"lineNumber": 185, "col_offset": 57, "nodeName": "gx2", "type": "Any"}, {"lineNumber": 186, "col_offset": 45, "nodeName": "cuda", "type": "module"}, {"lineNumber": 186, "col_offset": 57, "nodeName": "gx2_orig", "type": "Any"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "i", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "_impl_name", "type": "Any"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "label", "type": "Any"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "moves", "type": "module"}, {"lineNumber": 180, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 186, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "self", "type": "FuncWithBackwardAccumulate"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "self", "type": "FuncWithBackwardAccumulate"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "six", "type": "module"}]