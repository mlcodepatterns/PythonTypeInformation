[{"lineNumber": 19, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "test_getattr", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "test_get_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "test_repr", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "test_deep_copy", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "Deserializer", "type": "Type[chainer.serializer.Deserializer]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "__getitem__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "test_update_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "test_update_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "test_update_chainerx", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "test_update_chainerx_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "check_add_hook", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "test_add_hook", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "test_add_hook_with_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "test_remove_hook", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "test_add_hook_with_function_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "test_add_hook_no_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "test_add_hook_duplicated_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "test_remove_hook_not_exist", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "test_disabled_update_rule", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "setup_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "test_state_copy_to_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "test_state_copy_to_another_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "get_target", "type": "Callable[[Any], Any]"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "test_state_copy_to_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "test_state_copy_to_chainerx", "type": "Callable[[Any], Any]"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "test_deserialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "test_deserialize_by_strict_deserializer", "type": "Callable[[Any], Any]"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "test_deserialize_by_nonstrict_deserializer", "type": "Callable[[Any], Any]"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "test_deserialize_disabled_update_rule_by_strict_deserializer", "type": "Callable[[Any], Any]"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "test_new_epoch", "type": "Callable[[Any], Any]"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "test_invalid_new_epoch", "type": "Callable[[Any], Any]"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "test_auto_new_epoch", "type": "Callable[[Any], Any]"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "test_invalid_auto_new_epoch", "type": "Callable[[Any], Any]"}, {"lineNumber": 330, "col_offset": 46, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "test_upate", "type": "Callable[[Any], Any]"}, {"lineNumber": 377, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "test_add_hook", "type": "Callable[[Any], Any]"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "test_add_hook_call_for_each_param", "type": "Callable[[Any], Any]"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "test_remove_hook", "type": "Callable[[Any], Any]"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "test_duplicated_hook", "type": "Callable[[Any], Any]"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "test_invalid_hook", "type": "Callable[[Any], Any]"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "test_add_hook_before_setup", "type": "Callable[[Any], Any]"}, {"lineNumber": 424, "col_offset": 17, "nodeName": "Link", "type": "Type[chainer.link.Link]"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 433, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "setup_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "setup_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "setup_chainerx", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "test_setup", "type": "Callable[[Any], Any]"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "check_update", "type": "Callable[[Any], Any]"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "test_update_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "test_update_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "test_update_chainerx_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 505, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 507, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "setup_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 525, "col_offset": 4, "nodeName": "setup_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "setup_chainerx", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "check_update", "type": "Callable[[Any], Any]"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "test_update_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 552, "col_offset": 4, "nodeName": "test_update_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "test_update_chainerx_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 574, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 581, "col_offset": 4, "nodeName": "check_cleargrad", "type": "Callable[[Any], Any]"}, {"lineNumber": 589, "col_offset": 4, "nodeName": "test_cleargrad_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 592, "col_offset": 4, "nodeName": "test_cleargrad_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 598, "col_offset": 21, "nodeName": "GradientMethod", "type": "Type[chainer.optimizer.GradientMethod]"}, {"lineNumber": 600, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 604, "col_offset": 4, "nodeName": "create_update_rule", "type": "Callable[[Any], Any]"}, {"lineNumber": 608, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 613, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 622, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 630, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 636, "col_offset": 35, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 638, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 646, "col_offset": 4, "nodeName": "test_update", "type": "Callable[[Any], Any]"}, {"lineNumber": 651, "col_offset": 47, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 653, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 658, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 661, "col_offset": 4, "nodeName": "test_gradient_clipping", "type": "Callable[[Any], Any]"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "test_gradient_hard_clipping", "type": "Callable[[Any], Any]"}, {"lineNumber": 671, "col_offset": 4, "nodeName": "test_gradient_noise", "type": "Callable[[Any], Any]"}, {"lineNumber": 676, "col_offset": 4, "nodeName": "test_lasso", "type": "Callable[[Any], Any]"}, {"lineNumber": 681, "col_offset": 4, "nodeName": "test_weight_decay", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "serializer", "type": "module"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "UpdateRule", "type": "Type[chainer.optimizer.UpdateRule]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "update_core_cpu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "update_core_gpu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 330, "col_offset": 46, "nodeName": "unittest", "type": "module"}, {"lineNumber": 377, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 424, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 433, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 505, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 574, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 598, "col_offset": 21, "nodeName": "chainer", "type": "module"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 611, "col_offset": 4, "nodeName": "timing", "type": "str"}, {"lineNumber": 624, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 625, "col_offset": 4, "nodeName": "timing", "type": "str"}, {"lineNumber": 636, "col_offset": 35, "nodeName": "unittest", "type": "module"}, {"lineNumber": 651, "col_offset": 47, "nodeName": "unittest", "type": "module"}, {"lineNumber": 687, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 687, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 687, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "x", "type": "int"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "y", "type": "int"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "y", "type": "int"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "z", "type": "int"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "hook", "type": "mock.MagicMock"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "hook", "type": "mock.MagicMock"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "hook", "type": "mock.MagicMock"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "hook_body", "type": "mock.MagicMock"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "__call__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "update_core", "type": "mock.MagicMock"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "enabled", "type": "bool"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "enabled", "type": "bool"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "init_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "init_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "update_core", "type": "Callable[[Any], Any]"}, {"lineNumber": 210, "col_offset": 39, "nodeName": "update_core", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "update_core", "type": "Callable[[Any], Any]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "update_core", "type": "Callable[[Any], Any]"}, {"lineNumber": 228, "col_offset": 39, "nodeName": "update_core", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "target", "type": "Dict[str, Union[int, numpy.ndarray]]"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "target", "type": "Dict[str, Union[int, numpy.ndarray]]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "update_core", "type": "Callable[[Any], Any]"}, {"lineNumber": 250, "col_offset": 39, "nodeName": "update_core", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "update_core", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 39, "nodeName": "update_core", "type": "Callable[[Any], Any]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "target", "type": "Dict[str, Union[int, numpy.ndarray]]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "target", "type": "Dict[str, Union[int, numpy.ndarray]]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "target", "type": "Dict[str, Optional[Union[int, numpy.ndarray]]]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "enabled", "type": "bool"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "target", "type": "Dict[str, Union[int, numpy.ndarray]]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "use_auto_new_epoch", "type": "bool"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "use_auto_new_epoch", "type": "bool"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "initial_p", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "expected_p", "type": "Any"}, {"lineNumber": 340, "col_offset": 33, "nodeName": "UpdateRule", "type": "Type[chainer.optimizer.UpdateRule]"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "update_core_chainerx", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 352, "col_offset": 32, "nodeName": "GradientMethod", "type": "Type[chainer.optimizer.GradientMethod]"}, {"lineNumber": 356, "col_offset": 19, "nodeName": "Link", "type": "Type[chainer.link.Link]"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "link", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "call_for_each_param", "type": "bool"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "call_for_each_param", "type": "bool"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.GradientMethod"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "create_update_rule", "type": "Type[mock.MagicMock]"}, {"lineNumber": 442, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "create_update_rule", "type": "mock.MagicMock"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "create_update_rule", "type": "mock.MagicMock"}, {"lineNumber": 461, "col_offset": 44, "nodeName": "create_update_rule", "type": "mock.MagicMock"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "param0_data", "type": "Any"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "param0_grad", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "param1_data", "type": "Any"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "param1_grad", "type": "Any"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "lr", "type": "float"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "expected_data", "type": "Any"}, {"lineNumber": 544, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "opt", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 602, "col_offset": 20, "nodeName": "test", "type": "Any"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 614, "col_offset": 20, "nodeName": "test", "type": "Any"}, {"lineNumber": 617, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 631, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "optimizer", "type": "DummyOptimizer"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "context", "type": "warnings._catch_warnings_with_records"}, {"lineNumber": 655, "col_offset": 8, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 687, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "Hyperparameter", "type": "Type[chainer.optimizer.Hyperparameter]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "Hyperparameter", "type": "Type[chainer.optimizer.Hyperparameter]"}, {"lineNumber": 25, "col_offset": 46, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "x", "type": "int"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "y", "type": "int"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "y", "type": "int"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "z", "type": "int"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "parent_copy", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "child_copy", "type": "Any"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "parent", "type": "Any"}, {"lineNumber": 55, "col_offset": 41, "nodeName": "parent_copy", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "DummyDeserializer"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "value", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "ones", "type": "Any"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "SimpleUpdateRule", "type": "Type[Any]"}, {"lineNumber": 92, "col_offset": 38, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 96, "col_offset": 43, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "update", "type": "Callable[[Any], None]"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "call_count", "type": "int"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "call_count", "type": "int"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "call_count", "type": "int"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "to_chainerx", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "to_chainerx", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "update", "type": "Callable[[Any], None]"}, {"lineNumber": 132, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "var", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 34, "nodeName": "hook", "type": "mock.MagicMock"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "check_add_hook", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 28, "nodeName": "hook", "type": "mock.MagicMock"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "hook", "type": "mock.MagicMock"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "check_add_hook", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 28, "nodeName": "hook", "type": "mock.MagicMock"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 34, "nodeName": "hook", "type": "mock.MagicMock"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "remove_hook", "type": "Callable[[Any], None]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "update", "type": "Callable[[Any], None]"}, {"lineNumber": 154, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "call_count", "type": "int"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "foo", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "remove_hook", "type": "Callable[[Any], None]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "update", "type": "Callable[[Any], None]"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "call_count", "type": "int"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "update", "type": "Callable[[Any], None]"}, {"lineNumber": 188, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "call_count", "type": "int"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "update", "type": "Callable[[Any], None]"}, {"lineNumber": 192, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "call_count", "type": "int"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 197, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "setup_state", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "setup_state", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "target", "type": "Dict[str, Union[int, numpy.ndarray]]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "target", "type": "Dict[str, Union[int, numpy.ndarray]]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "target", "type": "Dict[str, Union[int, numpy.ndarray]]"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "setup_state", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 248, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 251, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "setup_state", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 263, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "to_chainerx", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 266, "col_offset": 32, "nodeName": "var", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "setup_state", "type": "Callable[[], Any]"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "get_target", "type": "Callable[[], Any]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "serialize", "type": "Callable[[Any], None]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "setup_state", "type": "Callable[[], Any]"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "get_target", "type": "Callable[[], Any]"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "target", "type": "Dict[str, Union[int, numpy.ndarray]]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "setup_state", "type": "Callable[[], Any]"}, {"lineNumber": 287, "col_offset": 17, "nodeName": "get_target", "type": "Callable[[], Any]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "target", "type": "Dict[str, Optional[Union[int, numpy.ndarray]]]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "serialize", "type": "Callable[[Any], None]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 292, "col_offset": 26, "nodeName": "state", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "setup_state", "type": "Callable[[], Any]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 297, "col_offset": 17, "nodeName": "get_target", "type": "Callable[[], Any]"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "target", "type": "Dict[str, Union[int, numpy.ndarray]]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "serialize", "type": "Callable[[Any], None]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 302, "col_offset": 26, "nodeName": "state", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 308, "col_offset": 25, "nodeName": "Optimizer", "type": "Type[chainer.optimizer.Optimizer]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "new_epoch", "type": "Callable[..., None]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 312, "col_offset": 28, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "new_epoch", "type": "Callable[..., None]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 335, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 335, "col_offset": 49, "nodeName": "float32", "type": "Any"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 336, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 338, "col_offset": 21, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 340, "col_offset": 33, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "call_count", "type": "int"}, {"lineNumber": 352, "col_offset": 32, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 356, "col_offset": 19, "nodeName": "chainer", "type": "module"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "Link", "type": "Type[Any]"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "link", "type": "Any"}, {"lineNumber": 366, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 368, "col_offset": 21, "nodeName": "ChainerxOptimizer", "type": "Type[Any]"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 369, "col_offset": 25, "nodeName": "link", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 372, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 374, "col_offset": 44, "nodeName": "expected_p", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 380, "col_offset": 25, "nodeName": "Optimizer", "type": "Type[chainer.optimizer.Optimizer]"}, {"lineNumber": 381, "col_offset": 22, "nodeName": "SimpleLink", "type": "Type[SimpleLink]"}, {"lineNumber": 386, "col_offset": 13, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 388, "col_offset": 29, "nodeName": "target", "type": "SimpleLink"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 389, "col_offset": 32, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "call_hooks", "type": "Callable[..., None]"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 391, "col_offset": 30, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 394, "col_offset": 13, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 396, "col_offset": 29, "nodeName": "target", "type": "SimpleLink"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 397, "col_offset": 32, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "call_hooks", "type": "Callable[..., None]"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 399, "col_offset": 30, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 399, "col_offset": 61, "nodeName": "param", "type": "Any"}, {"lineNumber": 402, "col_offset": 13, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 403, "col_offset": 29, "nodeName": "target", "type": "SimpleLink"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 404, "col_offset": 32, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "remove_hook", "type": "Callable[[Any], None]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "call_hooks", "type": "Callable[..., None]"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 407, "col_offset": 25, "nodeName": "called", "type": "bool"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 410, "col_offset": 29, "nodeName": "target", "type": "SimpleLink"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 430, "col_offset": 30, "nodeName": "g", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 436, "col_offset": 25, "nodeName": "GradientMethod", "type": "Type[chainer.optimizer.GradientMethod]"}, {"lineNumber": 437, "col_offset": 22, "nodeName": "ChainList", "type": "Type[chainer.link.ChainList]"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.GradientMethod"}, {"lineNumber": 442, "col_offset": 44, "nodeName": "mock", "type": "module"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 445, "col_offset": 29, "nodeName": "target", "type": "chainer.link.ChainList"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "to_gpu", "type": "Callable"}, {"lineNumber": 448, "col_offset": 27, "nodeName": "device", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 449, "col_offset": 29, "nodeName": "target", "type": "chainer.link.ChainList"}, {"lineNumber": 452, "col_offset": 11, "nodeName": "orig_xp", "type": "Any"}, {"lineNumber": 452, "col_offset": 22, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "to_chainerx", "type": "Callable"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 457, "col_offset": 29, "nodeName": "target", "type": "chainer.link.ChainList"}, {"lineNumber": 460, "col_offset": 29, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.GradientMethod"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 462, "col_offset": 29, "nodeName": "target", "type": "chainer.link.ChainList"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 464, "col_offset": 25, "nodeName": "call_count", "type": "int"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 469, "col_offset": 25, "nodeName": "t", "type": "int"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 472, "col_offset": 25, "nodeName": "t", "type": "int"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 477, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "setup_cpu", "type": "Callable[[], Any]"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "check_update", "type": "Callable[[], Any]"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "setup_gpu", "type": "Any"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "check_update", "type": "Any"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "setup_chainerx", "type": "Any"}, {"lineNumber": 490, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "check_update", "type": "Any"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "setup_chainerx", "type": "Any"}, {"lineNumber": 496, "col_offset": 28, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "check_update", "type": "Any"}, {"lineNumber": 508, "col_offset": 22, "nodeName": "astype", "type": "Any"}, {"lineNumber": 508, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 509, "col_offset": 22, "nodeName": "copy", "type": "Any"}, {"lineNumber": 509, "col_offset": 30, "nodeName": "param0_data", "type": "Any"}, {"lineNumber": 510, "col_offset": 22, "nodeName": "astype", "type": "Any"}, {"lineNumber": 510, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 511, "col_offset": 22, "nodeName": "copy", "type": "Any"}, {"lineNumber": 511, "col_offset": 30, "nodeName": "param1_data", "type": "Any"}, {"lineNumber": 512, "col_offset": 22, "nodeName": "ChainList", "type": "Type[chainer.link.ChainList]"}, {"lineNumber": 516, "col_offset": 11, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 517, "col_offset": 12, "nodeName": "lr", "type": "Any"}, {"lineNumber": 517, "col_offset": 17, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 518, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 520, "col_offset": 25, "nodeName": "SGD", "type": "Type[chainer.optimizers.sgd.SGD]"}, {"lineNumber": 520, "col_offset": 48, "nodeName": "lr", "type": "Any"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 523, "col_offset": 29, "nodeName": "target", "type": "chainer.link.ChainList"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "to_gpu", "type": "Callable"}, {"lineNumber": 526, "col_offset": 27, "nodeName": "device", "type": "Any"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 527, "col_offset": 29, "nodeName": "target", "type": "chainer.link.ChainList"}, {"lineNumber": 530, "col_offset": 11, "nodeName": "orig_xp", "type": "Any"}, {"lineNumber": 530, "col_offset": 22, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "to_chainerx", "type": "Callable"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 535, "col_offset": 29, "nodeName": "target", "type": "chainer.link.ChainList"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 539, "col_offset": 13, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 539, "col_offset": 38, "nodeName": "param", "type": "Any"}, {"lineNumber": 540, "col_offset": 24, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 540, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "rtol", "type": "float"}, {"lineNumber": 541, "col_offset": 14, "nodeName": "atol", "type": "float"}, {"lineNumber": 542, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 542, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 544, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "setup_cpu", "type": "Callable[[], Any]"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "check_update", "type": "Callable[[], Any]"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "setup_gpu", "type": "Any"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "check_update", "type": "Any"}, {"lineNumber": 559, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 559, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "setup_chainerx", "type": "Any"}, {"lineNumber": 561, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "check_update", "type": "Any"}, {"lineNumber": 567, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 567, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "setup_gpu", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "setup_chainerx", "type": "Any"}, {"lineNumber": 570, "col_offset": 28, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "check_update", "type": "Any"}, {"lineNumber": 577, "col_offset": 22, "nodeName": "SimpleLink", "type": "Type[SimpleLink]"}, {"lineNumber": 582, "col_offset": 14, "nodeName": "SGD", "type": "Type[chainer.optimizers.sgd.SGD]"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 583, "col_offset": 18, "nodeName": "target", "type": "SimpleLink"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "check_cleargrad", "type": "Callable[[], Any]"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "check_cleargrad", "type": "Any"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "self", "type": "DummyOptimizer"}, {"lineNumber": 605, "col_offset": 15, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "self", "type": "DummyHook"}, {"lineNumber": 617, "col_offset": 21, "nodeName": "params", "type": "Any"}, {"lineNumber": 631, "col_offset": 21, "nodeName": "params", "type": "Any"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethodClearGrads"}, {"lineNumber": 639, "col_offset": 25, "nodeName": "DummyOptimizer", "type": "Type[DummyOptimizer]"}, {"lineNumber": 639, "col_offset": 40, "nodeName": "self", "type": "TestGradientMethodClearGrads"}, {"lineNumber": 640, "col_offset": 22, "nodeName": "SimpleLink", "type": "Type[SimpleLink]"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 643, "col_offset": 29, "nodeName": "target", "type": "SimpleLink"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "cleargrads", "type": "Callable[[], None]"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 654, "col_offset": 23, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 655, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 655, "col_offset": 24, "nodeName": "__enter__", "type": "Callable[[], List[warnings.WarningMessage]]"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "filterwarnings", "type": "Callable[..., None]"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "__exit__", "type": "Callable[[Optional[Type[BaseException]], Optional[BaseException], Optional[types.TracebackType]], None]"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "GradientClipping", "type": "Type[chainer.optimizer.GradientClipping]"}, {"lineNumber": 663, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 664, "col_offset": 22, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 664, "col_offset": 50, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "GradientHardClipping", "type": "Type[chainer.optimizer.GradientHardClipping]"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 669, "col_offset": 22, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 669, "col_offset": 50, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 672, "col_offset": 8, "nodeName": "GradientNoise", "type": "Type[chainer.optimizer.GradientNoise]"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 674, "col_offset": 22, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 674, "col_offset": 50, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "Lasso", "type": "Type[chainer.optimizer.Lasso]"}, {"lineNumber": 678, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 679, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 679, "col_offset": 22, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 679, "col_offset": 50, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "WeightDecay", "type": "Type[chainer.optimizer.WeightDecay]"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 684, "col_offset": 22, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 684, "col_offset": 50, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 25, "col_offset": 46, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 30, "col_offset": 32, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 34, "col_offset": 33, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "get_dict", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "get_dict", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "copy", "type": "module"}, {"lineNumber": 52, "col_offset": 49, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 52, "col_offset": 62, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "get_dict", "type": "Callable[[], Any]"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "get_dict", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "get_dict", "type": "Callable[[], Any]"}, {"lineNumber": 54, "col_offset": 49, "nodeName": "get_dict", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "child_copy", "type": "Any"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "target", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "chainer", "type": "module"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 89, "col_offset": 52, "nodeName": "grad", "type": "Any"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 92, "col_offset": 38, "nodeName": "mock", "type": "module"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "update_core_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "mock", "type": "module"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "update_core_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 43, "nodeName": "mock", "type": "module"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "update_core_chainerx", "type": "Callable[[Any], None]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "update_core_cpu", "type": "mock.MagicMock"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "update_core_gpu", "type": "mock.MagicMock"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "update_core_chainerx", "type": "mock.MagicMock"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "update_core_cpu", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "update_core_gpu", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "update_core_chainerx", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "update_core_cpu", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "update_core_gpu", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "update_core_chainerx", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "update_core_cpu", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "update_core_gpu", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "update_core_chainerx", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 132, "col_offset": 32, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "hook", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "args", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "mock", "type": "module"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "mock", "type": "module"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "mock", "type": "module"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 154, "col_offset": 32, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "hook", "type": "mock.MagicMock"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "mock", "type": "module"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "hook_body", "type": "mock.MagicMock"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 161, "col_offset": 41, "nodeName": "grad", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "hook_body", "type": "mock.MagicMock"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 173, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "remove_hook", "type": "Callable[[Any], None]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "mock", "type": "module"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 188, "col_offset": 32, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "update_core", "type": "mock.MagicMock"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 192, "col_offset": 32, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "update_core", "type": "mock.MagicMock"}, {"lineNumber": 197, "col_offset": 20, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 207, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 208, "col_offset": 63, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 219, "col_offset": 63, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "id", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 224, "col_offset": 32, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 229, "col_offset": 32, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 236, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 244, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 245, "col_offset": 63, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 248, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 251, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 258, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 260, "col_offset": 45, "nodeName": "ndarray", "type": "Type[chainerx.ndarray]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 263, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 266, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 271, "col_offset": 35, "nodeName": "DummyDeserializer", "type": "Type[DummyDeserializer]"}, {"lineNumber": 271, "col_offset": 53, "nodeName": "target", "type": "Dict[str, Union[int, numpy.ndarray]]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 273, "col_offset": 45, "nodeName": "target", "type": "Dict[str, Union[int, numpy.ndarray]]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 275, "col_offset": 54, "nodeName": "target", "type": "Dict[str, Union[int, numpy.ndarray]]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 276, "col_offset": 38, "nodeName": "state", "type": "Any"}, {"lineNumber": 276, "col_offset": 67, "nodeName": "target", "type": "Dict[str, Union[int, numpy.ndarray]]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 282, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 282, "col_offset": 31, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "serialize", "type": "Callable[[Any], None]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 287, "col_offset": 17, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 289, "col_offset": 35, "nodeName": "DummyDeserializer", "type": "Type[DummyDeserializer]"}, {"lineNumber": 289, "col_offset": 53, "nodeName": "target", "type": "Dict[str, Optional[Union[int, numpy.ndarray]]]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 291, "col_offset": 45, "nodeName": "target", "type": "Dict[str, Optional[Union[int, numpy.ndarray]]]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 292, "col_offset": 26, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 297, "col_offset": 17, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 299, "col_offset": 35, "nodeName": "DummyDeserializer", "type": "Type[DummyDeserializer]"}, {"lineNumber": 299, "col_offset": 53, "nodeName": "target", "type": "Dict[str, Union[int, numpy.ndarray]]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 301, "col_offset": 45, "nodeName": "target", "type": "Dict[str, Union[int, numpy.ndarray]]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 302, "col_offset": 26, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 308, "col_offset": 25, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 312, "col_offset": 28, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 316, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 316, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "new_epoch", "type": "Callable[..., None]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 325, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "new_epoch", "type": "Callable[..., None]"}, {"lineNumber": 335, "col_offset": 20, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 335, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 336, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 338, "col_offset": 21, "nodeName": "backend", "type": "module"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "array", "type": "Any"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "t1", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "t2", "type": "Any"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "delta", "type": "Any"}, {"lineNumber": 349, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "delta", "type": "Any"}, {"lineNumber": 350, "col_offset": 16, "nodeName": "call_count", "type": "int"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 372, "col_offset": 15, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 374, "col_offset": 29, "nodeName": "array", "type": "Any"}, {"lineNumber": 380, "col_offset": 25, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 386, "col_offset": 13, "nodeName": "mock", "type": "module"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 388, "col_offset": 29, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 391, "col_offset": 30, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 394, "col_offset": 13, "nodeName": "mock", "type": "module"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 396, "col_offset": 29, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 399, "col_offset": 30, "nodeName": "param", "type": "Any"}, {"lineNumber": 399, "col_offset": 61, "nodeName": "target", "type": "SimpleLink"}, {"lineNumber": 402, "col_offset": 13, "nodeName": "mock", "type": "module"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 403, "col_offset": 29, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 407, "col_offset": 25, "nodeName": "h1", "type": "mock.MagicMock"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 410, "col_offset": 29, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 412, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 412, "col_offset": 31, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 416, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 416, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 420, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 420, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "add_hook", "type": "Callable[..., None]"}, {"lineNumber": 428, "col_offset": 13, "nodeName": "init_scope", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "self", "type": "SimpleLink"}, {"lineNumber": 429, "col_offset": 25, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 429, "col_offset": 43, "nodeName": "w", "type": "Any"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 436, "col_offset": 25, "nodeName": "chainer", "type": "module"}, {"lineNumber": 437, "col_offset": 22, "nodeName": "chainer", "type": "module"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "SimpleLink", "type": "Type[SimpleLink]"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "SimpleLink", "type": "Type[SimpleLink]"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.GradientMethod"}, {"lineNumber": 445, "col_offset": 29, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "target", "type": "chainer.link.ChainList"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.GradientMethod"}, {"lineNumber": 449, "col_offset": 29, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 452, "col_offset": 22, "nodeName": "cuda", "type": "module"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "to_gpu", "type": "Callable"}, {"lineNumber": 455, "col_offset": 19, "nodeName": "orig_xp", "type": "Any"}, {"lineNumber": 455, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "target", "type": "chainer.link.ChainList"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.GradientMethod"}, {"lineNumber": 457, "col_offset": 29, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 460, "col_offset": 29, "nodeName": "mock", "type": "module"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.GradientMethod"}, {"lineNumber": 462, "col_offset": 29, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 464, "col_offset": 25, "nodeName": "create_update_rule", "type": "mock.MagicMock"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 465, "col_offset": 25, "nodeName": "call_args_list", "type": "mock._CallList"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 466, "col_offset": 25, "nodeName": "call_args_list", "type": "mock._CallList"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 469, "col_offset": 25, "nodeName": "optimizer", "type": "chainer.optimizer.GradientMethod"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizer.GradientMethod"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 472, "col_offset": 25, "nodeName": "optimizer", "type": "chainer.optimizer.GradientMethod"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 496, "col_offset": 28, "nodeName": "cuda", "type": "module"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 508, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 509, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 510, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 511, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 512, "col_offset": 22, "nodeName": "chainer", "type": "module"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "SimpleLink", "type": "Type[SimpleLink]"}, {"lineNumber": 513, "col_offset": 23, "nodeName": "param0_data", "type": "Any"}, {"lineNumber": 513, "col_offset": 36, "nodeName": "param0_grad", "type": "Any"}, {"lineNumber": 514, "col_offset": 12, "nodeName": "SimpleLink", "type": "Type[SimpleLink]"}, {"lineNumber": 514, "col_offset": 23, "nodeName": "param1_data", "type": "Any"}, {"lineNumber": 514, "col_offset": 36, "nodeName": "param1_grad", "type": "Any"}, {"lineNumber": 516, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 517, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 518, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "_loss_scale", "type": "Any"}, {"lineNumber": 519, "col_offset": 51, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 520, "col_offset": 25, "nodeName": "optimizers", "type": "module"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 523, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "target", "type": "chainer.link.ChainList"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 527, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 530, "col_offset": 22, "nodeName": "cuda", "type": "module"}, {"lineNumber": 531, "col_offset": 12, "nodeName": "to_gpu", "type": "Callable"}, {"lineNumber": 533, "col_offset": 19, "nodeName": "orig_xp", "type": "Any"}, {"lineNumber": 533, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "target", "type": "chainer.link.ChainList"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 535, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "optimizer", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 539, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 540, "col_offset": 24, "nodeName": "xp", "type": "Any"}, {"lineNumber": 540, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 540, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 542, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 542, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 543, "col_offset": 12, "nodeName": "rtol", "type": "float"}, {"lineNumber": 543, "col_offset": 18, "nodeName": "atol", "type": "float"}, {"lineNumber": 545, "col_offset": 12, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 545, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 545, "col_offset": 63, "nodeName": "expected_data", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 559, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 559, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 560, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.SkipTest]"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 567, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 567, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 568, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.SkipTest]"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 570, "col_offset": 28, "nodeName": "cuda", "type": "module"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 578, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 582, "col_offset": 14, "nodeName": "optimizers", "type": "module"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "opt", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 583, "col_offset": 18, "nodeName": "self", "type": "TestCleargradHook"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "opt", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 584, "col_offset": 21, "nodeName": "CleargradHook", "type": "Type[CleargradHook]"}, {"lineNumber": 584, "col_offset": 35, "nodeName": "self", "type": "TestCleargradHook"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "opt", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 585, "col_offset": 21, "nodeName": "DummyHook", "type": "Type[DummyHook]"}, {"lineNumber": 585, "col_offset": 31, "nodeName": "self", "type": "TestCleargradHook"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "opt", "type": "chainer.optimizers.sgd.SGD"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "self", "type": "TestCleargradHook"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 605, "col_offset": 15, "nodeName": "mock", "type": "module"}, {"lineNumber": 617, "col_offset": 21, "nodeName": "target", "type": "Any"}, {"lineNumber": 619, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Any"}, {"lineNumber": 619, "col_offset": 38, "nodeName": "grad", "type": "Any"}, {"lineNumber": 631, "col_offset": 21, "nodeName": "target", "type": "Any"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "cleargrad", "type": "Any"}, {"lineNumber": 641, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 641, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 642, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 642, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "optimizer", "type": "DummyOptimizer"}, {"lineNumber": 643, "col_offset": 29, "nodeName": "self", "type": "TestGradientMethodClearGrads"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "optimizer", "type": "DummyOptimizer"}, {"lineNumber": 644, "col_offset": 32, "nodeName": "DummyHook", "type": "Type[DummyHook]"}, {"lineNumber": 644, "col_offset": 42, "nodeName": "self", "type": "TestGradientMethodClearGrads"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "target", "type": "SimpleLink"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "optimizer", "type": "DummyOptimizer"}, {"lineNumber": 654, "col_offset": 23, "nodeName": "warnings", "type": "module"}, {"lineNumber": 655, "col_offset": 24, "nodeName": "context", "type": "warnings._catch_warnings_with_records"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 656, "col_offset": 58, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "context", "type": "warnings._catch_warnings_with_records"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 663, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 663, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 663, "col_offset": 29, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 668, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 668, "col_offset": 29, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 672, "col_offset": 8, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 673, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 673, "col_offset": 29, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 678, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 678, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 678, "col_offset": 29, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 679, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "optimizer", "type": "module"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 683, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 683, "col_offset": 29, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 30, "col_offset": 32, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 34, "col_offset": 33, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 52, "col_offset": 49, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 52, "col_offset": 62, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "child", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "child_copy", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "parent", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 54, "col_offset": 49, "nodeName": "parent_copy", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "DummyDeserializer", "type": "Type[DummyDeserializer]"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "self", "type": "DummyDeserializer"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "self", "type": "DummyDeserializer"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "key", "type": "Any"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "copyto", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "value", "type": "Any"}, {"lineNumber": 89, "col_offset": 52, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "hook", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "CallableWithoutName", "type": "Type[Any]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "mock", "type": "module"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 197, "col_offset": 20, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 199, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 34, "nodeName": "state", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 34, "nodeName": "state", "type": "Any"}, {"lineNumber": 208, "col_offset": 63, "nodeName": "cuda", "type": "module"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 34, "nodeName": "state", "type": "Any"}, {"lineNumber": 219, "col_offset": 63, "nodeName": "cuda", "type": "module"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "device", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 224, "col_offset": 32, "nodeName": "chainer", "type": "module"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 229, "col_offset": 32, "nodeName": "chainer", "type": "module"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 230, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 236, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 34, "nodeName": "state", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 34, "nodeName": "state", "type": "Any"}, {"lineNumber": 245, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 34, "nodeName": "state", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 260, "col_offset": 45, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 38, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 282, "col_offset": 13, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 283, "col_offset": 39, "nodeName": "DummyDeserializer", "type": "Type[DummyDeserializer]"}, {"lineNumber": 283, "col_offset": 57, "nodeName": "target", "type": "Dict[str, Union[int, numpy.ndarray]]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 292, "col_offset": 26, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 302, "col_offset": 26, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 312, "col_offset": 28, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 316, "col_offset": 13, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 338, "col_offset": 43, "nodeName": "initial_p", "type": "Any"}, {"lineNumber": 338, "col_offset": 60, "nodeName": "x", "type": "Any"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "param", "type": "Any"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "t1", "type": "Any"}, {"lineNumber": 348, "col_offset": 29, "nodeName": "t2", "type": "Any"}, {"lineNumber": 350, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 354, "col_offset": 23, "nodeName": "ChainerxUpdateRule", "type": "Type[Any]"}, {"lineNumber": 354, "col_offset": 42, "nodeName": "hyperparam", "type": "chainer.optimizer.Hyperparameter"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 360, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 363, "col_offset": 32, "nodeName": "p", "type": "Any"}, {"lineNumber": 372, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 374, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 399, "col_offset": 30, "nodeName": "target", "type": "SimpleLink"}, {"lineNumber": 399, "col_offset": 61, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 412, "col_offset": 13, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 416, "col_offset": 13, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 420, "col_offset": 13, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "optimizer", "type": "chainer.optimizer.Optimizer"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 427, "col_offset": 14, "nodeName": "SimpleLink", "type": "Type[SimpleLink]"}, {"lineNumber": 427, "col_offset": 26, "nodeName": "self", "type": "SimpleLink"}, {"lineNumber": 428, "col_offset": 13, "nodeName": "self", "type": "SimpleLink"}, {"lineNumber": 429, "col_offset": 25, "nodeName": "chainer", "type": "module"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "self", "type": "SimpleLink"}, {"lineNumber": 438, "col_offset": 23, "nodeName": "astype", "type": "Any"}, {"lineNumber": 438, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 439, "col_offset": 23, "nodeName": "astype", "type": "Any"}, {"lineNumber": 439, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 440, "col_offset": 23, "nodeName": "astype", "type": "Any"}, {"lineNumber": 440, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 441, "col_offset": 23, "nodeName": "astype", "type": "Any"}, {"lineNumber": 441, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "target", "type": "chainer.link.ChainList"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 465, "col_offset": 25, "nodeName": "create_update_rule", "type": "mock.MagicMock"}, {"lineNumber": 466, "col_offset": 25, "nodeName": "create_update_rule", "type": "mock.MagicMock"}, {"lineNumber": 469, "col_offset": 25, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 472, "col_offset": 25, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "target", "type": "chainer.link.ChainList"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 477, "col_offset": 12, "nodeName": "target", "type": "chainer.link.ChainList"}, {"lineNumber": 508, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 508, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 510, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 510, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 519, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 520, "col_offset": 25, "nodeName": "chainer", "type": "module"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 531, "col_offset": 12, "nodeName": "target", "type": "chainer.link.ChainList"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 539, "col_offset": 38, "nodeName": "target", "type": "chainer.link.ChainList"}, {"lineNumber": 540, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 545, "col_offset": 12, "nodeName": "testing", "type": "module"}, {"lineNumber": 545, "col_offset": 36, "nodeName": "param", "type": "Any"}, {"lineNumber": 546, "col_offset": 41, "nodeName": "rtol", "type": "float"}, {"lineNumber": 546, "col_offset": 52, "nodeName": "atol", "type": "float"}, {"lineNumber": 560, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 568, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 601, "col_offset": 14, "nodeName": "DummyOptimizer", "type": "Type[DummyOptimizer]"}, {"lineNumber": 601, "col_offset": 30, "nodeName": "self", "type": "DummyOptimizer"}, {"lineNumber": 617, "col_offset": 21, "nodeName": "opt", "type": "Any"}, {"lineNumber": 619, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 619, "col_offset": 38, "nodeName": "param", "type": "Any"}, {"lineNumber": 631, "col_offset": 21, "nodeName": "opt", "type": "Any"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 641, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 642, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethodClearGrads"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethodClearGrads"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethodClearGrads"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethodClearGrads"}, {"lineNumber": 655, "col_offset": 24, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "chainer", "type": "module"}, {"lineNumber": 663, "col_offset": 29, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 664, "col_offset": 22, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "chainer", "type": "module"}, {"lineNumber": 668, "col_offset": 29, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 669, "col_offset": 22, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 672, "col_offset": 8, "nodeName": "chainer", "type": "module"}, {"lineNumber": 673, "col_offset": 29, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 674, "col_offset": 22, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "chainer", "type": "module"}, {"lineNumber": 678, "col_offset": 29, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 679, "col_offset": 22, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "chainer", "type": "module"}, {"lineNumber": 683, "col_offset": 29, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 684, "col_offset": 22, "nodeName": "warnings", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "self", "type": "TestHyperparameter"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "target", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "mock", "type": "module"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 199, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 34, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 208, "col_offset": 34, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 219, "col_offset": 34, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 44, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 225, "col_offset": 56, "nodeName": "grad", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 230, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 230, "col_offset": 44, "nodeName": "to_gpu", "type": "Callable[..., Any]"}, {"lineNumber": 230, "col_offset": 56, "nodeName": "grad", "type": "Any"}, {"lineNumber": 244, "col_offset": 34, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 245, "col_offset": 34, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 258, "col_offset": 34, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 276, "col_offset": 38, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "self", "type": "TestUpdateRule"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 346, "col_offset": 21, "nodeName": "as_grad_stopped", "type": "Any"}, {"lineNumber": 347, "col_offset": 21, "nodeName": "as_grad_stopped", "type": "Any"}, {"lineNumber": 354, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 359, "col_offset": 21, "nodeName": "init_scope", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 360, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 360, "col_offset": 29, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 360, "col_offset": 47, "nodeName": "initial_p", "type": "Any"}, {"lineNumber": 363, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 363, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 372, "col_offset": 15, "nodeName": "link", "type": "Any"}, {"lineNumber": 374, "col_offset": 29, "nodeName": "link", "type": "Any"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 399, "col_offset": 30, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "self", "type": "TestOptimizerHook"}, {"lineNumber": 438, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 439, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 440, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 441, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 477, "col_offset": 12, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 508, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 508, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 510, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 510, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 531, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 539, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 578, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 619, "col_offset": 12, "nodeName": "self", "type": "DummyHook"}, {"lineNumber": 641, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 642, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 664, "col_offset": 22, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 669, "col_offset": 22, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 674, "col_offset": 22, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 679, "col_offset": 22, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 684, "col_offset": 22, "nodeName": "self", "type": "TestDeprecatedOptimizerHooksEmitsWarning"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "self", "type": "DummyDeserializer"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "key", "type": "Any"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "target", "type": "Any"}, {"lineNumber": 207, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 225, "col_offset": 44, "nodeName": "cuda", "type": "module"}, {"lineNumber": 225, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 230, "col_offset": 44, "nodeName": "cuda", "type": "module"}, {"lineNumber": 230, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 346, "col_offset": 21, "nodeName": "array", "type": "Any"}, {"lineNumber": 347, "col_offset": 21, "nodeName": "grad", "type": "Any"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 358, "col_offset": 22, "nodeName": "Link", "type": "Type[Any]"}, {"lineNumber": 358, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 359, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 360, "col_offset": 29, "nodeName": "chainer", "type": "module"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 382, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 383, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 438, "col_offset": 23, "nodeName": "arange", "type": "Any"}, {"lineNumber": 439, "col_offset": 23, "nodeName": "arange", "type": "Any"}, {"lineNumber": 440, "col_offset": 23, "nodeName": "arange", "type": "Any"}, {"lineNumber": 441, "col_offset": 23, "nodeName": "arange", "type": "Any"}, {"lineNumber": 508, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 510, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "target", "type": "chainer.link.ChainList"}, {"lineNumber": 545, "col_offset": 36, "nodeName": "target", "type": "chainer.link.ChainList"}, {"lineNumber": 578, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 578, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 579, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 641, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 642, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "self", "type": "DummyDeserializer"}, {"lineNumber": 73, "col_offset": 55, "nodeName": "key", "type": "Any"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "update_rule", "type": "Any"}, {"lineNumber": 346, "col_offset": 21, "nodeName": "param", "type": "Any"}, {"lineNumber": 347, "col_offset": 21, "nodeName": "param", "type": "Any"}, {"lineNumber": 382, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 383, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 438, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 439, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 440, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 441, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "target", "type": "chainer.link.ChainList"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "target", "type": "chainer.link.ChainList"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 519, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 545, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 545, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 578, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 579, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethod"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "self", "type": "TestGradientMethod"}]