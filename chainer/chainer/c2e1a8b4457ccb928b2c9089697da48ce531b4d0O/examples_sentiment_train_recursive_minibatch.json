[{"lineNumber": 17, "col_offset": 0, "nodeName": "linearize_tree", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "convert", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 182, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "Chain", "type": "Type[chainer.link.Chain]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "leaf", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "node", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "label", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "forward", "type": "Callable[..., Any]"}, {"lineNumber": 17, "col_offset": 35, "nodeName": "numpy", "type": "module"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "lefts", "type": "List[Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "rights", "type": "List[Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "dests", "type": "List[int]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "words", "type": "List[int]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "leaf_labels", "type": "List[int]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "leaf_index", "type": "List[int]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "node_index", "type": "List[int]"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "leaf_index", "type": "List[int]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "leaf_index", "type": "List[int]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "to_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "chainer", "type": "module"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "vocab", "type": "Dict[Any, int]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "max_size", "type": "None"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "train_trees", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "test_trees", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "train_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "train_iter", "type": "chainer.iterators.serial_iterator.SerialIterator"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "test_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "model", "type": "ThinStackRecursiveNet"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "optimizer", "type": "chainer.optimizers.ada_grad.AdaGrad"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "trainer", "type": "chainer.training.trainer.Trainer"}, {"lineNumber": 246, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "traverse_leaf", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "root", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "traverse_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "root", "type": "Any"}, {"lineNumber": 85, "col_offset": 7, "nodeName": "device", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "n_units", "type": "Any"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "n_units", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "batch", "type": "int"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "lefts", "type": "Tuple[Any, ...]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "rights", "type": "Tuple[Any, ...]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "dests", "type": "Tuple[Any, ...]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "labels", "type": "Tuple[Any, ...]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "sequences", "type": "Tuple[Any, ...]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "leaf_labels", "type": "Tuple[Any, ...]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "inds", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "lefts", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "rights", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "dests", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "batch", "type": "int"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "maxlen", "type": "int"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "loss", "type": "int"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "count", "type": "int"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "correct", "type": "int"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "count", "type": "Union[Any, int]"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "set_defaults", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "read_corpus", "type": "Any"}, {"lineNumber": 202, "col_offset": 54, "nodeName": "max_size", "type": "None"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "read_corpus", "type": "Any"}, {"lineNumber": 203, "col_offset": 52, "nodeName": "max_size", "type": "None"}, {"lineNumber": 205, "col_offset": 7, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "xp", "type": "Any"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "xp", "type": "module"}, {"lineNumber": 209, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "SerialIterator", "type": "Type[chainer.iterators.serial_iterator.SerialIterator]"}, {"lineNumber": 212, "col_offset": 50, "nodeName": "train_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 212, "col_offset": 62, "nodeName": "batchsize", "type": "Any"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "SerialIterator", "type": "Type[chainer.iterators.serial_iterator.SerialIterator]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "test_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "batchsize", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "ThinStackRecursiveNet", "type": "Type[ThinStackRecursiveNet]"}, {"lineNumber": 217, "col_offset": 46, "nodeName": "unit", "type": "Any"}, {"lineNumber": 217, "col_offset": 57, "nodeName": "label", "type": "Any"}, {"lineNumber": 219, "col_offset": 7, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "AdaGrad", "type": "Type[chainer.optimizers.ada_grad.AdaGrad]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "setup", "type": "Callable"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "model", "type": "ThinStackRecursiveNet"}, {"lineNumber": 225, "col_offset": 14, "nodeName": "StandardUpdater", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "train_iter", "type": "chainer.iterators.serial_iterator.SerialIterator"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "optimizer", "type": "chainer.optimizers.ada_grad.AdaGrad"}, {"lineNumber": 227, "col_offset": 14, "nodeName": "Trainer", "type": "Type[chainer.training.trainer.Trainer]"}, {"lineNumber": 227, "col_offset": 31, "nodeName": "updater", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "extend", "type": "Callable[..., None]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "extend", "type": "Callable[..., None]"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "extend", "type": "Callable[..., None]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "extend", "type": "Callable[..., None]"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "extend", "type": "Callable[..., None]"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "run", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "exp", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "lefts", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "array", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "lefts", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "int32", "type": "Any"}, {"lineNumber": 76, "col_offset": 18, "nodeName": "array", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "rights", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "int32", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "array", "type": "Any"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "dests", "type": "List[int]"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "int32", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "array", "type": "Any"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "words", "type": "List[int]"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "int32", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "array", "type": "Any"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "int32", "type": "Any"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "array", "type": "Any"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "leaf_labels", "type": "List[int]"}, {"lineNumber": 80, "col_offset": 45, "nodeName": "int32", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "device", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "to_cpu", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "ThinStackRecursiveNet"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "embed", "type": "Any"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "tanh", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "w", "type": "Any"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "argsort", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "transpose_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "transpose_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "transpose_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "transpose_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "transpose_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "transpose_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "inds", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 149, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "es", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "ds", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "count", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "batch", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "predict", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "correct", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "stack", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "left", "type": "Any"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "right", "type": "Any"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "dest", "type": "Any"}, {"lineNumber": 162, "col_offset": 31, "nodeName": "label", "type": "Any"}, {"lineNumber": 162, "col_offset": 40, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 162, "col_offset": 44, "nodeName": "lefts", "type": "Any"}, {"lineNumber": 162, "col_offset": 51, "nodeName": "rights", "type": "Any"}, {"lineNumber": 162, "col_offset": 59, "nodeName": "dests", "type": "Any"}, {"lineNumber": 162, "col_offset": 66, "nodeName": "labels", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "o", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "count", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "batch", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "predict", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "correct", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "stack", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "report", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 40, "nodeName": "self", "type": "ThinStackRecursiveNet"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "report", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 42, "nodeName": "self", "type": "ThinStackRecursiveNet"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "report", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 46, "nodeName": "self", "type": "ThinStackRecursiveNet"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 184, "col_offset": 56, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 186, "col_offset": 59, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 188, "col_offset": 57, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 190, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 192, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 194, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 205, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "use", "type": "Any"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "cuda", "type": "module"}, {"lineNumber": 211, "col_offset": 18, "nodeName": "linearize_tree", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "vocab", "type": "Dict[Any, int]"}, {"lineNumber": 211, "col_offset": 40, "nodeName": "t", "type": "Any"}, {"lineNumber": 211, "col_offset": 43, "nodeName": "xp", "type": "Any"}, {"lineNumber": 211, "col_offset": 51, "nodeName": "t", "type": "Any"}, {"lineNumber": 211, "col_offset": 56, "nodeName": "train_trees", "type": "Any"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "iterators", "type": "module"}, {"lineNumber": 212, "col_offset": 62, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "linearize_tree", "type": "Callable[..., Any]"}, {"lineNumber": 213, "col_offset": 32, "nodeName": "vocab", "type": "Dict[Any, int]"}, {"lineNumber": 213, "col_offset": 39, "nodeName": "t", "type": "Any"}, {"lineNumber": 213, "col_offset": 42, "nodeName": "xp", "type": "Any"}, {"lineNumber": 213, "col_offset": 50, "nodeName": "t", "type": "Any"}, {"lineNumber": 213, "col_offset": 55, "nodeName": "test_trees", "type": "Any"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "iterators", "type": "module"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 217, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 217, "col_offset": 38, "nodeName": "vocab", "type": "Dict[Any, int]"}, {"lineNumber": 217, "col_offset": 46, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 217, "col_offset": 57, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 219, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "optimizers", "type": "module"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "optimizer", "type": "chainer.optimizers.ada_grad.AdaGrad"}, {"lineNumber": 225, "col_offset": 14, "nodeName": "training", "type": "module"}, {"lineNumber": 226, "col_offset": 54, "nodeName": "convert", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 227, "col_offset": 14, "nodeName": "training", "type": "module"}, {"lineNumber": 227, "col_offset": 41, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "trainer", "type": "chainer.training.trainer.Trainer"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "Evaluator", "type": "Type[chainer.training.extensions.evaluator.Evaluator]"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "test_iter", "type": "chainer.iterators.serial_iterator.SerialIterator"}, {"lineNumber": 229, "col_offset": 40, "nodeName": "model", "type": "ThinStackRecursiveNet"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "trainer", "type": "chainer.training.trainer.Trainer"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "LogReport", "type": "Type[chainer.training.extensions.log_report.LogReport]"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "trainer", "type": "chainer.training.trainer.Trainer"}, {"lineNumber": 233, "col_offset": 19, "nodeName": "MicroAverage", "type": "Type[chainer.training.extensions.micro_average.MicroAverage]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "trainer", "type": "chainer.training.trainer.Trainer"}, {"lineNumber": 235, "col_offset": 19, "nodeName": "MicroAverage", "type": "Type[chainer.training.extensions.micro_average.MicroAverage]"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "trainer", "type": "chainer.training.trainer.Trainer"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "PrintReport", "type": "Type[chainer.training.extensions.print_report.PrintReport]"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "trainer", "type": "chainer.training.trainer.Trainer"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "exp", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "label", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "leaf", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "leaf", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "vocab", "type": "Dict[Any, int]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "leaf_index", "type": "List[int]"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "exp", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "exp", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "leaf_index", "type": "List[int]"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "exp", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "l", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "words", "type": "List[int]"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "xp", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "xp", "type": "Any"}, {"lineNumber": 76, "col_offset": 18, "nodeName": "xp", "type": "Any"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "xp", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "xp", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "xp", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "xp", "type": "Any"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "xp", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "xp", "type": "Any"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "xp", "type": "Any"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "xp", "type": "Any"}, {"lineNumber": 80, "col_offset": 45, "nodeName": "xp", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "cuda", "type": "module"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "self", "type": "ThinStackRecursiveNet"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "F", "type": "module"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "l", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "self", "type": "ThinStackRecursiveNet"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "batch", "type": "int"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "batch", "type": "int"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "F", "type": "module"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "F", "type": "module"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "F", "type": "module"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "F", "type": "module"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "F", "type": "module"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "F", "type": "module"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "xp", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "batch", "type": "int"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "n_units", "type": "Any"}, {"lineNumber": 149, "col_offset": 47, "nodeName": "xp", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "word", "type": "Any"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "label", "type": "Any"}, {"lineNumber": 150, "col_offset": 42, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 150, "col_offset": 46, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 150, "col_offset": 57, "nodeName": "leaf_labels", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "leaf", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "word", "type": "Any"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "full", "type": "Any"}, {"lineNumber": 153, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 153, "col_offset": 43, "nodeName": "int32", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "label", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "es", "type": "Any"}, {"lineNumber": 155, "col_offset": 73, "nodeName": "batch", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 157, "col_offset": 37, "nodeName": "array", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "thin_stack_set", "type": "Any"}, {"lineNumber": 160, "col_offset": 46, "nodeName": "stack", "type": "Any"}, {"lineNumber": 160, "col_offset": 53, "nodeName": "ds", "type": "Any"}, {"lineNumber": 160, "col_offset": 57, "nodeName": "es", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "l", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "stack", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "thin_stack_get", "type": "Any"}, {"lineNumber": 163, "col_offset": 49, "nodeName": "stack", "type": "Any"}, {"lineNumber": 163, "col_offset": 56, "nodeName": "left", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "stack", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "thin_stack_get", "type": "Any"}, {"lineNumber": 164, "col_offset": 49, "nodeName": "stack", "type": "Any"}, {"lineNumber": 164, "col_offset": 56, "nodeName": "right", "type": "Any"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "node", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "l", "type": "Any"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "r", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "label", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "o", "type": "Any"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 168, "col_offset": 73, "nodeName": "batch", "type": "Any"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 170, "col_offset": 37, "nodeName": "array", "type": "Any"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "thin_stack_set", "type": "Any"}, {"lineNumber": 173, "col_offset": 46, "nodeName": "stack", "type": "Any"}, {"lineNumber": 173, "col_offset": 53, "nodeName": "dest", "type": "Any"}, {"lineNumber": 173, "col_offset": 59, "nodeName": "o", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "reporter", "type": "module"}, {"lineNumber": 176, "col_offset": 33, "nodeName": "loss", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "reporter", "type": "module"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "count", "type": "Union[Any, int]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "reporter", "type": "module"}, {"lineNumber": 178, "col_offset": 36, "nodeName": "correct", "type": "Union[Any, int]"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "chainer", "type": "module"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "chainer", "type": "module"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "model", "type": "ThinStackRecursiveNet"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "chainer", "type": "module"}, {"lineNumber": 227, "col_offset": 41, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "extensions", "type": "module"}, {"lineNumber": 229, "col_offset": 57, "nodeName": "convert", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "epocheval", "type": "Any"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "extensions", "type": "module"}, {"lineNumber": 233, "col_offset": 19, "nodeName": "extensions", "type": "module"}, {"lineNumber": 235, "col_offset": 19, "nodeName": "extensions", "type": "module"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "extensions", "type": "module"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "vocab", "type": "Dict[Any, int]"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "vocab", "type": "Dict[Any, int]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "words", "type": "List[int]"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "vocab", "type": "Dict[Any, int]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "leaf_labels", "type": "List[int]"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "label", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "exp", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "left", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "right", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "traverse_leaf", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "left", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "traverse_leaf", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "right", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "leaf_index", "type": "List[int]"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "exp", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "label", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "left", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "right", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "traverse_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "left", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "traverse_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "right", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "l", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "r", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "node_index", "type": "List[int]"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "to_gpu", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "device", "type": "Any"}, {"lineNumber": 92, "col_offset": 42, "nodeName": "null", "type": "Any"}, {"lineNumber": 100, "col_offset": 9, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "d", "type": "Any"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "batch", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "ThinStackRecursiveNet", "type": "Type[ThinStackRecursiveNet]"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "self", "type": "ThinStackRecursiveNet"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "EmbedID", "type": "Type[chainer.links.connection.embed_id.EmbedID]"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "n_vocab", "type": "int"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "n_units", "type": "Any"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "Linear", "type": "Type[chainer.links.connection.linear.Linear]"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "n_units", "type": "Any"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "Linear", "type": "Type[chainer.links.connection.linear.Linear]"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "n_units", "type": "Any"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "n_label", "type": "Any"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "self", "type": "ThinStackRecursiveNet"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "concat", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "batch", "type": "int"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "batch", "type": "int"}, {"lineNumber": 126, "col_offset": 34, "nodeName": "batch", "type": "int"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "batch", "type": "int"}, {"lineNumber": 127, "col_offset": 35, "nodeName": "batch", "type": "int"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "batch", "type": "int"}, {"lineNumber": 128, "col_offset": 38, "nodeName": "batch", "type": "int"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "batch", "type": "int"}, {"lineNumber": 129, "col_offset": 40, "nodeName": "batch", "type": "int"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "l", "type": "Any"}, {"lineNumber": 131, "col_offset": 47, "nodeName": "lefts", "type": "Tuple[Any, ...]"}, {"lineNumber": 133, "col_offset": 38, "nodeName": "lefts", "type": "Tuple[Any, ...]"}, {"lineNumber": 133, "col_offset": 51, "nodeName": "i", "type": "Any"}, {"lineNumber": 133, "col_offset": 56, "nodeName": "inds", "type": "Any"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "rights", "type": "Tuple[Any, ...]"}, {"lineNumber": 134, "col_offset": 53, "nodeName": "i", "type": "Any"}, {"lineNumber": 134, "col_offset": 58, "nodeName": "inds", "type": "Any"}, {"lineNumber": 135, "col_offset": 38, "nodeName": "dests", "type": "Tuple[Any, ...]"}, {"lineNumber": 135, "col_offset": 51, "nodeName": "i", "type": "Any"}, {"lineNumber": 135, "col_offset": 56, "nodeName": "inds", "type": "Any"}, {"lineNumber": 136, "col_offset": 39, "nodeName": "labels", "type": "Tuple[Any, ...]"}, {"lineNumber": 136, "col_offset": 53, "nodeName": "i", "type": "Any"}, {"lineNumber": 136, "col_offset": 58, "nodeName": "inds", "type": "Any"}, {"lineNumber": 137, "col_offset": 42, "nodeName": "sequences", "type": "Tuple[Any, ...]"}, {"lineNumber": 137, "col_offset": 59, "nodeName": "i", "type": "Any"}, {"lineNumber": 137, "col_offset": 64, "nodeName": "inds", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "leaf_labels", "type": "Tuple[Any, ...]"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "i", "type": "Any"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "inds", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "self", "type": "ThinStackRecursiveNet"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "maxlen", "type": "int"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "self", "type": "ThinStackRecursiveNet"}, {"lineNumber": 149, "col_offset": 47, "nodeName": "self", "type": "ThinStackRecursiveNet"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "word", "type": "Any"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "self", "type": "ThinStackRecursiveNet"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "xp", "type": "Any"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 153, "col_offset": 43, "nodeName": "xp", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "self", "type": "ThinStackRecursiveNet"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "softmax_cross_entropy", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 44, "nodeName": "y", "type": "Any"}, {"lineNumber": 155, "col_offset": 47, "nodeName": "label", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "xp", "type": "Any"}, {"lineNumber": 157, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "thin_stack", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "thin_stack", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "thin_stack", "type": "Any"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "self", "type": "ThinStackRecursiveNet"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "self", "type": "ThinStackRecursiveNet"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "l", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "softmax_cross_entropy", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 44, "nodeName": "y", "type": "Any"}, {"lineNumber": 168, "col_offset": 47, "nodeName": "label", "type": "Any"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "xp", "type": "Any"}, {"lineNumber": 170, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "thin_stack", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "get_device", "type": "Any"}, {"lineNumber": 206, "col_offset": 32, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "leaf", "type": "Any"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "leaf", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "lefts", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "rights", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "dests", "type": "List[int]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "node_index", "type": "List[int]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "label", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "node_index", "type": "List[int]"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "cuda", "type": "module"}, {"lineNumber": 92, "col_offset": 42, "nodeName": "Stream", "type": "Any"}, {"lineNumber": 99, "col_offset": 9, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "batch", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "L", "type": "module"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "L", "type": "module"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "n_units", "type": "Any"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "L", "type": "module"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "F", "type": "module"}, {"lineNumber": 117, "col_offset": 39, "nodeName": "left", "type": "Any"}, {"lineNumber": 117, "col_offset": 45, "nodeName": "right", "type": "Any"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "l", "type": "Any"}, {"lineNumber": 133, "col_offset": 44, "nodeName": "i", "type": "Any"}, {"lineNumber": 134, "col_offset": 46, "nodeName": "i", "type": "Any"}, {"lineNumber": 135, "col_offset": 44, "nodeName": "i", "type": "Any"}, {"lineNumber": 136, "col_offset": 46, "nodeName": "i", "type": "Any"}, {"lineNumber": 137, "col_offset": 52, "nodeName": "i", "type": "Any"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "i", "type": "Any"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "self", "type": "ThinStackRecursiveNet"}, {"lineNumber": 153, "col_offset": 43, "nodeName": "self", "type": "ThinStackRecursiveNet"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "F", "type": "module"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "self", "type": "ThinStackRecursiveNet"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "predict", "type": "Any"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "F", "type": "module"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "self", "type": "ThinStackRecursiveNet"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "predict", "type": "Any"}, {"lineNumber": 171, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "cuda", "type": "module"}, {"lineNumber": 206, "col_offset": 32, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 92, "col_offset": 42, "nodeName": "cuda", "type": "module"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "label", "type": "Any"}, {"lineNumber": 171, "col_offset": 35, "nodeName": "label", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "chainer", "type": "module"}]