[{"lineNumber": 17, "col_offset": 0, "nodeName": "_to_fcontiguous", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "_as_noncontiguous_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "_batch_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "forward_cpu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "check_forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "test_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "test_backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "check_double_backward", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "test_double_backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 254, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "forward_cpu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "check_forward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "test_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "test_forward_with_enable_backprop", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "test_backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "check_double_backward", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "test_double_backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 379, "col_offset": 38, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "test_call_cudnn_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "test_call_cudnn_backward", "type": "Callable[[Any], Any]"}, {"lineNumber": 424, "col_offset": 37, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "test_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "test_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 444, "col_offset": 42, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "test_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "test_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 465, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "create_batch", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "test_invalid_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "test_invalid_batch_no_batch_axis", "type": "Callable[[Any], Any]"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "test_valid_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "test_valid_batch_no_batch_axis", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "xp", "type": "Any"}, {"lineNumber": 32, "col_offset": 47, "nodeName": "args", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "mean", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "std", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "y_expect", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "y_expect", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 254, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 379, "col_offset": 38, "nodeName": "unittest", "type": "module"}, {"lineNumber": 424, "col_offset": 37, "nodeName": "unittest", "type": "module"}, {"lineNumber": 444, "col_offset": 42, "nodeName": "unittest", "type": "module"}, {"lineNumber": 465, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 500, "col_offset": 0, "nodeName": "run_module", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 500, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 500, "col_offset": 29, "nodeName": "__file__", "type": "str"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "get_array_module", "type": "Callable[..., Any]"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "_as_noncontiguous_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 49, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "beta", "type": "Any"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "mean", "type": "Any"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "var", "type": "Any"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "eps", "type": "Any"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "expander", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "mean", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "beta", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "gggamma", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "ggbeta", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "mean", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "decay", "type": "float"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "mean", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "mean", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "grad_outputs", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "grad_grad_inputs", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "param_shape", "type": "Any"}, {"lineNumber": 257, "col_offset": 22, "nodeName": "param_shape", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "beta", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "shape", "type": "Union[Tuple[int, ...], Tuple[Any, ...]]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "mean", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "gggamma", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "ggbeta", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "ggmean", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "ggvar", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "decay", "type": "float"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "expander", "type": "Tuple[Optional[ellipsis], ...]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "grad_outputs", "type": "List[Any]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "grad_grad_inputs", "type": "List[Any]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "check_double_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "y_expect", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "ndim", "type": "int"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "param_shape", "type": "Tuple[int]"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "gy", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "head_ndim", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "aggr_axes", "type": "Tuple[int, ...]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "mean", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "ndim", "type": "int"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "param_shape", "type": "Tuple[int]"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 428, "col_offset": 16, "nodeName": "float32", "type": "Any"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "beta", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "ndim", "type": "int"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "param_shape", "type": "Tuple[int]"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 448, "col_offset": 16, "nodeName": "float32", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "beta", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "mean", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 470, "col_offset": 16, "nodeName": "float32", "type": "Any"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "beta", "type": "Any"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 475, "col_offset": 15, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 500, "col_offset": 0, "nodeName": "testing", "type": "module"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "backend", "type": "module"}, {"lineNumber": 18, "col_offset": 43, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "asfortranarray", "type": "Any"}, {"lineNumber": 19, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 19, "col_offset": 37, "nodeName": "a", "type": "Any"}, {"lineNumber": 19, "col_offset": 42, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "_to_fcontiguous", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "array", "type": "module"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "expander", "type": "Any"}, {"lineNumber": 34, "col_offset": 10, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "expander", "type": "Any"}, {"lineNumber": 35, "col_offset": 47, "nodeName": "std", "type": "Any"}, {"lineNumber": 35, "col_offset": 53, "nodeName": "beta", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "param_shape", "type": "Any"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "param_shape", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "shape", "type": "Union[Tuple[int, ...], Tuple[Any, ...]]"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 98, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 99, "col_offset": 63, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 100, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 101, "col_offset": 55, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "astype", "type": "Any"}, {"lineNumber": 102, "col_offset": 56, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 103, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 104, "col_offset": 65, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "head_ndim", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "aggr_axes", "type": "Tuple[int, ...]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "expander", "type": "Tuple[Optional[ellipsis], ...]"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "mean", "type": "Any"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "var", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "beta", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "gy", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "gggamma", "type": "Any"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "ggbeta", "type": "Any"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "decay", "type": "float"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "eps", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 48, "nodeName": "float64", "type": "Any"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "float64", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "_batch_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "y_expect", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "use_chainerx", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "forward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 155, "col_offset": 39, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 157, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "c_contiguous", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "check_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "use_chainerx", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 178, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 179, "col_offset": 48, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "c_contiguous", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 189, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 195, "col_offset": 28, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 195, "col_offset": 41, "nodeName": "grad_outputs", "type": "List[Any]"}, {"lineNumber": 195, "col_offset": 60, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "use_chainerx", "type": "Any"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 203, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 204, "col_offset": 48, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 205, "col_offset": 27, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 205, "col_offset": 52, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "c_contiguous", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "check_double_backward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "grad_outputs", "type": "List[Any]"}, {"lineNumber": 222, "col_offset": 44, "nodeName": "grad_grad_inputs", "type": "List[Any]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 257, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 261, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 262, "col_offset": 63, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 264, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 265, "col_offset": 63, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 266, "col_offset": 14, "nodeName": "astype", "type": "Any"}, {"lineNumber": 266, "col_offset": 63, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 268, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 268, "col_offset": 55, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 269, "col_offset": 14, "nodeName": "astype", "type": "Any"}, {"lineNumber": 269, "col_offset": 56, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 270, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 270, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 271, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 271, "col_offset": 65, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 272, "col_offset": 65, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 273, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 278, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 278, "col_offset": 26, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 278, "col_offset": 33, "nodeName": "beta", "type": "Any"}, {"lineNumber": 278, "col_offset": 39, "nodeName": "mean", "type": "Any"}, {"lineNumber": 278, "col_offset": 45, "nodeName": "var", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 279, "col_offset": 29, "nodeName": "gy", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 280, "col_offset": 33, "nodeName": "ggx", "type": "Any"}, {"lineNumber": 280, "col_offset": 38, "nodeName": "gggamma", "type": "Any"}, {"lineNumber": 280, "col_offset": 47, "nodeName": "ggbeta", "type": "Any"}, {"lineNumber": 280, "col_offset": 55, "nodeName": "ggmean", "type": "Any"}, {"lineNumber": 280, "col_offset": 63, "nodeName": "ggvar", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 283, "col_offset": 48, "nodeName": "float64", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 284, "col_offset": 55, "nodeName": "float64", "type": "Any"}, {"lineNumber": 285, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "float16", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 293, "col_offset": 19, "nodeName": "_batch_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "y_expect", "type": "Any"}, {"lineNumber": 298, "col_offset": 11, "nodeName": "use_chainerx", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "forward_cpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 301, "col_offset": 39, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 303, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 303, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "c_contiguous", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 310, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 310, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "assert_allclose", "type": "Callable[..., None]"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "y_expected", "type": "Any"}, {"lineNumber": 313, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "check_forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 316, "col_offset": 27, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 316, "col_offset": 47, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "check_forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 319, "col_offset": 27, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 319, "col_offset": 46, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 323, "col_offset": 11, "nodeName": "use_chainerx", "type": "Any"}, {"lineNumber": 326, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 326, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 327, "col_offset": 48, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 328, "col_offset": 15, "nodeName": "c_contiguous", "type": "Any"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 336, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "check_backward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 342, "col_offset": 28, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 342, "col_offset": 41, "nodeName": "grad_outputs", "type": "List[Any]"}, {"lineNumber": 342, "col_offset": 60, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 347, "col_offset": 11, "nodeName": "use_chainerx", "type": "Any"}, {"lineNumber": 350, "col_offset": 17, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 350, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 351, "col_offset": 23, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 351, "col_offset": 48, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 352, "col_offset": 27, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 352, "col_offset": 52, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 353, "col_offset": 15, "nodeName": "c_contiguous", "type": "Any"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 361, "col_offset": 13, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "check_double_backward", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 368, "col_offset": 25, "nodeName": "grad_outputs", "type": "List[Any]"}, {"lineNumber": 368, "col_offset": 44, "nodeName": "grad_grad_inputs", "type": "List[Any]"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 385, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 387, "col_offset": 65, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 389, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 389, "col_offset": 63, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 390, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 390, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 391, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 391, "col_offset": 29, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 391, "col_offset": 41, "nodeName": "beta", "type": "Any"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 394, "col_offset": 20, "nodeName": "mean", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 395, "col_offset": 53, "nodeName": "eps", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "expect", "type": "bool"}, {"lineNumber": 400, "col_offset": 15, "nodeName": "batch_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 415, "col_offset": 21, "nodeName": "gy", "type": "Any"}, {"lineNumber": 428, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 429, "col_offset": 68, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 430, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 430, "col_offset": 67, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 432, "col_offset": 58, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 433, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 433, "col_offset": 24, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 433, "col_offset": 31, "nodeName": "beta", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "batch_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 448, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 449, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 449, "col_offset": 68, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 450, "col_offset": 67, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 451, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 451, "col_offset": 67, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 452, "col_offset": 14, "nodeName": "astype", "type": "Any"}, {"lineNumber": 452, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 454, "col_offset": 58, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 455, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 455, "col_offset": 24, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 455, "col_offset": 31, "nodeName": "beta", "type": "Any"}, {"lineNumber": 455, "col_offset": 37, "nodeName": "mean", "type": "Any"}, {"lineNumber": 455, "col_offset": 43, "nodeName": "var", "type": "Any"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "fixed_batch_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 470, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 471, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 471, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 472, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 472, "col_offset": 63, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 473, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 473, "col_offset": 56, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 474, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 474, "col_offset": 19, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 474, "col_offset": 26, "nodeName": "beta", "type": "Any"}, {"lineNumber": 478, "col_offset": 15, "nodeName": "create_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "create_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 488, "col_offset": 15, "nodeName": "create_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 489, "col_offset": 53, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "create_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 495, "col_offset": 53, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "chainer", "type": "module"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "xp", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "is_available", "type": "Callable[[], bool]"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 26, "col_offset": 38, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "testing", "type": "module"}, {"lineNumber": 34, "col_offset": 10, "nodeName": "numpy", "type": "module"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "eps", "type": "Any"}, {"lineNumber": 35, "col_offset": 58, "nodeName": "expander", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "aggr_axes", "type": "Tuple[int, ...]"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "aggr_axes", "type": "Tuple[int, ...]"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "numpy", "type": "module"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "float64", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "float64", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 152, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 152, "col_offset": 57, "nodeName": "float16", "type": "Any"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.SkipTest]"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "_as_noncontiguous_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 159, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "batch_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "y", "type": "Any"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 175, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 175, "col_offset": 57, "nodeName": "float16", "type": "Any"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.SkipTest]"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "_as_noncontiguous_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 182, "col_offset": 27, "nodeName": "_as_noncontiguous_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 51, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "batch_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "check_backward", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 195, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 195, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 200, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 200, "col_offset": 57, "nodeName": "float16", "type": "Any"}, {"lineNumber": 201, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.SkipTest]"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 205, "col_offset": 27, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "_as_noncontiguous_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 208, "col_offset": 27, "nodeName": "_as_noncontiguous_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 51, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 209, "col_offset": 31, "nodeName": "_as_noncontiguous_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 209, "col_offset": 55, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 212, "col_offset": 19, "nodeName": "batch_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "check_double_backward", "type": "Callable[..., None]"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 217, "col_offset": 27, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 217, "col_offset": 41, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 222, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "param_shape", "type": "Any"}, {"lineNumber": 263, "col_offset": 44, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 276, "col_offset": 31, "nodeName": "Ellipsis", "type": "ellipsis"}, {"lineNumber": 276, "col_offset": 53, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 283, "col_offset": 48, "nodeName": "numpy", "type": "module"}, {"lineNumber": 284, "col_offset": 55, "nodeName": "numpy", "type": "module"}, {"lineNumber": 285, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "float64", "type": "Any"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "float64", "type": "Any"}, {"lineNumber": 293, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 298, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 298, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 298, "col_offset": 57, "nodeName": "float16", "type": "Any"}, {"lineNumber": 299, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.SkipTest]"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 303, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 21, "nodeName": "_as_noncontiguous_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 305, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 307, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 307, "col_offset": 53, "nodeName": "enable_backprop", "type": "Any"}, {"lineNumber": 308, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 309, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 310, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 310, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 313, "col_offset": 24, "nodeName": "y", "type": "Any"}, {"lineNumber": 313, "col_offset": 34, "nodeName": "check_forward_options", "type": "Dict[str, float]"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 316, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 319, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 323, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 323, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 323, "col_offset": 57, "nodeName": "float16", "type": "Any"}, {"lineNumber": 324, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.SkipTest]"}, {"lineNumber": 326, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 328, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 329, "col_offset": 21, "nodeName": "_as_noncontiguous_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 329, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 330, "col_offset": 27, "nodeName": "_as_noncontiguous_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 330, "col_offset": 51, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "fixed_batch_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 334, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "check_backward", "type": "Callable[..., None]"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 338, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 338, "col_offset": 27, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 342, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 342, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 347, "col_offset": 11, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 347, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 347, "col_offset": 57, "nodeName": "float16", "type": "Any"}, {"lineNumber": 348, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.SkipTest]"}, {"lineNumber": 350, "col_offset": 17, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 351, "col_offset": 23, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 352, "col_offset": 27, "nodeName": "backend_config", "type": "Any"}, {"lineNumber": 353, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 354, "col_offset": 21, "nodeName": "_as_noncontiguous_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 354, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 355, "col_offset": 27, "nodeName": "_as_noncontiguous_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 355, "col_offset": 51, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 356, "col_offset": 31, "nodeName": "_as_noncontiguous_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 356, "col_offset": 55, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 359, "col_offset": 19, "nodeName": "fixed_batch_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "check_double_backward", "type": "Callable[..., None]"}, {"lineNumber": 363, "col_offset": 16, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 363, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 363, "col_offset": 27, "nodeName": "grad_outputs", "type": "Any"}, {"lineNumber": 363, "col_offset": 41, "nodeName": "grad_grad_inputs", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 368, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 368, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 385, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 387, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 388, "col_offset": 23, "nodeName": "param_shape", "type": "Tuple[int]"}, {"lineNumber": 388, "col_offset": 44, "nodeName": "ndim", "type": "int"}, {"lineNumber": 389, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 390, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 391, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 391, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 391, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 393, "col_offset": 32, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 394, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 394, "col_offset": 37, "nodeName": "aggr_axes", "type": "Tuple[int, ...]"}, {"lineNumber": 395, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 395, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 396, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 396, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 397, "col_offset": 26, "nodeName": "should_use_cudnn", "type": "Callable[..., bool]"}, {"lineNumber": 400, "col_offset": 15, "nodeName": "functions", "type": "module"}, {"lineNumber": 401, "col_offset": 59, "nodeName": "eps", "type": "Any"}, {"lineNumber": 402, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 402, "col_offset": 48, "nodeName": "var", "type": "Any"}, {"lineNumber": 405, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 405, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 408, "col_offset": 17, "nodeName": "func", "type": "Any"}, {"lineNumber": 413, "col_offset": 13, "nodeName": "using_config", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 413, "col_offset": 47, "nodeName": "use_cudnn", "type": "Any"}, {"lineNumber": 414, "col_offset": 16, "nodeName": "forward", "type": "Callable[[], Any]"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 415, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 418, "col_offset": 17, "nodeName": "func", "type": "Any"}, {"lineNumber": 431, "col_offset": 23, "nodeName": "param_shape", "type": "Tuple[int]"}, {"lineNumber": 431, "col_offset": 44, "nodeName": "ndim", "type": "int"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "functions", "type": "module"}, {"lineNumber": 436, "col_offset": 39, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 439, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 439, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "batch_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 453, "col_offset": 23, "nodeName": "param_shape", "type": "Tuple[int]"}, {"lineNumber": 453, "col_offset": 44, "nodeName": "ndim", "type": "int"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "functions", "type": "module"}, {"lineNumber": 458, "col_offset": 45, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 461, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 461, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 462, "col_offset": 12, "nodeName": "fixed_batch_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 478, "col_offset": 15, "nodeName": "self", "type": "TestBatchNormalizationWarning"}, {"lineNumber": 479, "col_offset": 13, "nodeName": "assert_warns", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 479, "col_offset": 34, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "batch_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "self", "type": "TestBatchNormalizationWarning"}, {"lineNumber": 484, "col_offset": 13, "nodeName": "assert_warns", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 484, "col_offset": 34, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "batch_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 488, "col_offset": 15, "nodeName": "self", "type": "TestBatchNormalizationWarning"}, {"lineNumber": 489, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "batch_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "self", "type": "TestBatchNormalizationWarning"}, {"lineNumber": 495, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "batch_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 26, "col_offset": 38, "nodeName": "chainerx", "type": "module"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "mean", "type": "Any"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "param_shape", "type": "Any"}, {"lineNumber": 86, "col_offset": 48, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 98, "col_offset": 44, "nodeName": "param_shape", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 99, "col_offset": 43, "nodeName": "param_shape", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "shape", "type": "Union[Tuple[int, ...], Tuple[Any, ...]]"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 101, "col_offset": 41, "nodeName": "shape", "type": "Union[Tuple[int, ...], Tuple[Any, ...]]"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 102, "col_offset": 42, "nodeName": "shape", "type": "Union[Tuple[int, ...], Tuple[Any, ...]]"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "param_shape", "type": "Any"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 104, "col_offset": 45, "nodeName": "param_shape", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "Ellipsis", "type": "ellipsis"}, {"lineNumber": 110, "col_offset": 57, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "mean", "type": "Any"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "var", "type": "Any"}, {"lineNumber": 147, "col_offset": 43, "nodeName": "eps", "type": "Any"}, {"lineNumber": 147, "col_offset": 53, "nodeName": "expander", "type": "Tuple[Optional[ellipsis], ...]"}, {"lineNumber": 152, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 57, "nodeName": "numpy", "type": "module"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "functions", "type": "module"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "bn_options", "type": "Dict[str, Any]"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 57, "nodeName": "numpy", "type": "module"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "functions", "type": "module"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "bn_options", "type": "Dict[str, Any]"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 200, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 200, "col_offset": 57, "nodeName": "numpy", "type": "module"}, {"lineNumber": 201, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 212, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 213, "col_offset": 27, "nodeName": "bn_options", "type": "Dict[str, Any]"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 218, "col_offset": 18, "nodeName": "check_double_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 261, "col_offset": 44, "nodeName": "param_shape", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 262, "col_offset": 43, "nodeName": "param_shape", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 264, "col_offset": 40, "nodeName": "shape", "type": "Union[Tuple[int, ...], Tuple[Any, ...]]"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 265, "col_offset": 43, "nodeName": "param_shape", "type": "Any"}, {"lineNumber": 266, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 266, "col_offset": 43, "nodeName": "param_shape", "type": "Any"}, {"lineNumber": 268, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 268, "col_offset": 41, "nodeName": "shape", "type": "Union[Tuple[int, ...], Tuple[Any, ...]]"}, {"lineNumber": 269, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 269, "col_offset": 42, "nodeName": "shape", "type": "Union[Tuple[int, ...], Tuple[Any, ...]]"}, {"lineNumber": 270, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 270, "col_offset": 46, "nodeName": "param_shape", "type": "Any"}, {"lineNumber": 271, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 271, "col_offset": 45, "nodeName": "param_shape", "type": "Any"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 272, "col_offset": 45, "nodeName": "param_shape", "type": "Any"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 273, "col_offset": 44, "nodeName": "param_shape", "type": "Any"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 293, "col_offset": 50, "nodeName": "eps", "type": "Any"}, {"lineNumber": 293, "col_offset": 60, "nodeName": "expander", "type": "Tuple[Optional[ellipsis], ...]"}, {"lineNumber": 298, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 298, "col_offset": 57, "nodeName": "numpy", "type": "module"}, {"lineNumber": 299, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 307, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 309, "col_offset": 20, "nodeName": "fixed_batch_normalization", "type": "Callable[..., Any]"}, {"lineNumber": 310, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 313, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 323, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 323, "col_offset": 57, "nodeName": "numpy", "type": "module"}, {"lineNumber": 324, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "functions", "type": "module"}, {"lineNumber": 333, "col_offset": 53, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 333, "col_offset": 65, "nodeName": "eps", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 339, "col_offset": 18, "nodeName": "check_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 347, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 347, "col_offset": 57, "nodeName": "numpy", "type": "module"}, {"lineNumber": 348, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 359, "col_offset": 19, "nodeName": "functions", "type": "module"}, {"lineNumber": 359, "col_offset": 56, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 359, "col_offset": 68, "nodeName": "eps", "type": "Any"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "gradient_check", "type": "module"}, {"lineNumber": 364, "col_offset": 18, "nodeName": "check_double_backward_options", "type": "Dict[str, Any]"}, {"lineNumber": 384, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 385, "col_offset": 46, "nodeName": "param_shape", "type": "Tuple[int]"}, {"lineNumber": 386, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 387, "col_offset": 45, "nodeName": "param_shape", "type": "Tuple[int]"}, {"lineNumber": 389, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 389, "col_offset": 49, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 390, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 390, "col_offset": 50, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 393, "col_offset": 38, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 393, "col_offset": 54, "nodeName": "head_ndim", "type": "Any"}, {"lineNumber": 393, "col_offset": 65, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 394, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 394, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 395, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 395, "col_offset": 35, "nodeName": "aggr_axes", "type": "Tuple[int, ...]"}, {"lineNumber": 396, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 396, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 397, "col_offset": 26, "nodeName": "chainer", "type": "module"}, {"lineNumber": 401, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 402, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 402, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 405, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 405, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 406, "col_offset": 17, "nodeName": "patch", "type": "Callable[..., mock._patch]"}, {"lineNumber": 409, "col_offset": 16, "nodeName": "forward", "type": "Callable[[], Any]"}, {"lineNumber": 410, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 410, "col_offset": 33, "nodeName": "called", "type": "Any"}, {"lineNumber": 410, "col_offset": 46, "nodeName": "expect", "type": "bool"}, {"lineNumber": 413, "col_offset": 13, "nodeName": "chainer", "type": "module"}, {"lineNumber": 413, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 414, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 416, "col_offset": 17, "nodeName": "patch", "type": "Callable[..., mock._patch]"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "backward", "type": "Any"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 420, "col_offset": 33, "nodeName": "called", "type": "Any"}, {"lineNumber": 420, "col_offset": 46, "nodeName": "expect", "type": "bool"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 429, "col_offset": 48, "nodeName": "param_shape", "type": "Tuple[int]"}, {"lineNumber": 430, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 430, "col_offset": 47, "nodeName": "param_shape", "type": "Tuple[int]"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 432, "col_offset": 44, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 436, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 439, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 440, "col_offset": 43, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 449, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 449, "col_offset": 48, "nodeName": "param_shape", "type": "Tuple[int]"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 450, "col_offset": 47, "nodeName": "param_shape", "type": "Tuple[int]"}, {"lineNumber": 451, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 451, "col_offset": 47, "nodeName": "param_shape", "type": "Tuple[int]"}, {"lineNumber": 452, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 452, "col_offset": 46, "nodeName": "param_shape", "type": "Tuple[int]"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 454, "col_offset": 44, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 458, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 461, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 462, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 462, "col_offset": 49, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 471, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 471, "col_offset": 44, "nodeName": "param_shape", "type": "Any"}, {"lineNumber": 472, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 472, "col_offset": 43, "nodeName": "param_shape", "type": "Any"}, {"lineNumber": 473, "col_offset": 12, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 473, "col_offset": 40, "nodeName": "x_shape", "type": "Any"}, {"lineNumber": 479, "col_offset": 13, "nodeName": "testing", "type": "module"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 480, "col_offset": 43, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 484, "col_offset": 13, "nodeName": "testing", "type": "module"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 485, "col_offset": 43, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 489, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 490, "col_offset": 43, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 491, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 491, "col_offset": 23, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 495, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "functions", "type": "module"}, {"lineNumber": 496, "col_offset": 43, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 497, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 497, "col_offset": 23, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "expander", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 108, "col_offset": 53, "nodeName": "head_ndim", "type": "Any"}, {"lineNumber": 108, "col_offset": 64, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 213, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 218, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 266, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 268, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 269, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 270, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 271, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 293, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 293, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 309, "col_offset": 20, "nodeName": "functions", "type": "module"}, {"lineNumber": 309, "col_offset": 57, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 309, "col_offset": 69, "nodeName": "eps", "type": "Any"}, {"lineNumber": 333, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 339, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 359, "col_offset": 68, "nodeName": "self", "type": "Any"}, {"lineNumber": 364, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 384, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 386, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 389, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 390, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 393, "col_offset": 38, "nodeName": "moves", "type": "module"}, {"lineNumber": 393, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 395, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 395, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 406, "col_offset": 17, "nodeName": "testing", "type": "module"}, {"lineNumber": 409, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 410, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 410, "col_offset": 33, "nodeName": "func", "type": "Any"}, {"lineNumber": 410, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 416, "col_offset": 17, "nodeName": "testing", "type": "module"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 420, "col_offset": 33, "nodeName": "func", "type": "Any"}, {"lineNumber": 420, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 430, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 440, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 449, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 451, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 452, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 462, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 471, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 472, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 473, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "moves", "type": "module"}, {"lineNumber": 108, "col_offset": 64, "nodeName": "x", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 266, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 268, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 269, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 270, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 271, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 309, "col_offset": 69, "nodeName": "self", "type": "Any"}, {"lineNumber": 384, "col_offset": 21, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 386, "col_offset": 20, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 389, "col_offset": 17, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 390, "col_offset": 18, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 393, "col_offset": 38, "nodeName": "six", "type": "module"}, {"lineNumber": 393, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 401, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 430, "col_offset": 15, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 449, "col_offset": 16, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 451, "col_offset": 15, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 452, "col_offset": 14, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "cupy", "type": "Any"}, {"lineNumber": 471, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 472, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 473, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "six", "type": "module"}, {"lineNumber": 384, "col_offset": 21, "nodeName": "cuda", "type": "module"}, {"lineNumber": 386, "col_offset": 20, "nodeName": "cuda", "type": "module"}, {"lineNumber": 389, "col_offset": 17, "nodeName": "cuda", "type": "module"}, {"lineNumber": 390, "col_offset": 18, "nodeName": "cuda", "type": "module"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "cuda", "type": "module"}, {"lineNumber": 430, "col_offset": 15, "nodeName": "cuda", "type": "module"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "cuda", "type": "module"}, {"lineNumber": 449, "col_offset": 16, "nodeName": "cuda", "type": "module"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "cuda", "type": "module"}, {"lineNumber": 451, "col_offset": 15, "nodeName": "cuda", "type": "module"}, {"lineNumber": 452, "col_offset": 14, "nodeName": "cuda", "type": "module"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "cuda", "type": "module"}]