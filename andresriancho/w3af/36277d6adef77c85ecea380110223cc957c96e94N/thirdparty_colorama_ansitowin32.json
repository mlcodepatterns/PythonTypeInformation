[{"lineNumber": 16, "col_offset": 0, "nodeName": "is_stream_closed", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "is_a_tty", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "winterm", "type": "None"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 12, "col_offset": 3, "nodeName": "windll", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "ANSI_CSI_RE", "type": "Pattern[str]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "ANSI_OSC_RE", "type": "Pattern[str]"}, {"lineNumber": 13, "col_offset": 14, "nodeName": "WinTerm", "type": "Any"}, {"lineNumber": 17, "col_offset": 44, "nodeName": "closed", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "converter", "type": "AnsiToWin32"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "autoreset", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "autoreset", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "stream", "type": "StreamWrapper"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "on_windows", "type": "bool"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "conversion_supported", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "strip", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "strip", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "convert", "type": "Any"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "convert", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "win32_calls", "type": "Union[Dict[Any, Union[Tuple[Any], Tuple[Any, Any], Tuple[Any, Any, bool]]], Dict[nothing, nothing]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "on_stderr", "type": "bool"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "autoreset", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "convert", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "cursor", "type": "int"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "convert", "type": "Any"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "params", "type": "Union[Tuple[int, ...], Tuple[int]]"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "text", "type": "Any"}, {"lineNumber": 17, "col_offset": 44, "nodeName": "stream", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "stream", "type": "Any"}, {"lineNumber": 21, "col_offset": 41, "nodeName": "isatty", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "StreamWrapper"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "StreamWrapper"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "name", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "write", "type": "Any"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "text", "type": "Any"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "re", "type": "module"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "re", "type": "module"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "StreamWrapper", "type": "Type[StreamWrapper]"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 60, "col_offset": 45, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "name", "type": "str"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "on_windows", "type": "bool"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "strip", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "strip", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "convert", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "convert", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "get_win32_calls", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "convert", "type": "Any"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "strip", "type": "Any"}, {"lineNumber": 93, "col_offset": 45, "nodeName": "autoreset", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "convert", "type": "Any"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "strip", "type": "Any"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "convert", "type": "Any"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "convert_osc", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "text", "type": "Any"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "finditer", "type": "Callable"}, {"lineNumber": 164, "col_offset": 47, "nodeName": "text", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "cursor", "type": "int"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "end", "type": "int"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "write_plain_text", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "text", "type": "Any"}, {"lineNumber": 169, "col_offset": 36, "nodeName": "cursor", "type": "int"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "start", "type": "int"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "end", "type": "int"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "params", "type": "Union[Tuple[int, ...], Tuple[int]]"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "command", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "params", "type": "Tuple[int, ...]"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "params", "type": "Tuple[int, ...]"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "command", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "finditer", "type": "Callable"}, {"lineNumber": 225, "col_offset": 47, "nodeName": "text", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "stream", "type": "Any"}, {"lineNumber": 21, "col_offset": 41, "nodeName": "stream", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "self", "type": "StreamWrapper"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 67, "col_offset": 46, "nodeName": "winapi_test", "type": "Any"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "conversion_supported", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "conversion_supported", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "sys", "type": "module"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 93, "col_offset": 45, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "RESET_ALL", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "BRIGHT", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "DIM", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "NORMAL", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "BLACK", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "RED", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "GREEN", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "YELLOW", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "BLUE", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "MAGENTA", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "CYAN", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "WHITE", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "RESET", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "LIGHTBLACK_EX", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "LIGHTRED_EX", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "LIGHTGREEN_EX", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "LIGHTYELLOW_EX", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "LIGHTBLUE_EX", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "LIGHTMAGENTA_EX", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "LIGHTCYAN_EX", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "LIGHTWHITE_EX", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "BLACK", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "RED", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "GREEN", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "YELLOW", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "BLUE", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "MAGENTA", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "CYAN", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "WHITE", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "RESET", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "LIGHTBLACK_EX", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "LIGHTRED_EX", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "LIGHTGREEN_EX", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "LIGHTYELLOW_EX", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "LIGHTBLUE_EX", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "LIGHTMAGENTA_EX", "type": "Any"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "LIGHTCYAN_EX", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "LIGHTWHITE_EX", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "write_and_convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "text", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 143, "col_offset": 31, "nodeName": "text", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "flush", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "reset_all", "type": "Callable[[], Any]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "call_win32", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "ANSI_CSI_RE", "type": "Pattern[str]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "start", "type": "int"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "end", "type": "int"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "span", "type": "Callable[..., Tuple[int, int]]"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "write_plain_text", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 166, "col_offset": 34, "nodeName": "text", "type": "Any"}, {"lineNumber": 166, "col_offset": 40, "nodeName": "cursor", "type": "int"}, {"lineNumber": 166, "col_offset": 48, "nodeName": "start", "type": "int"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "convert_ansi", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 169, "col_offset": 48, "nodeName": "text", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "flush", "type": "Any"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "extract_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 180, "col_offset": 41, "nodeName": "command", "type": "Any"}, {"lineNumber": 180, "col_offset": 50, "nodeName": "paramstring", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "call_win32", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "command", "type": "Any"}, {"lineNumber": 181, "col_offset": 37, "nodeName": "params", "type": "Union[Tuple[int, ...], Tuple[int]]"}, {"lineNumber": 186, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "params", "type": "Tuple[int, ...]"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "command", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "ANSI_OSC_RE", "type": "Pattern[str]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "start", "type": "int"}, {"lineNumber": 226, "col_offset": 19, "nodeName": "end", "type": "int"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "span", "type": "Callable[..., Tuple[int, int]]"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "paramstring", "type": "Optional[str]"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "command", "type": "Optional[str]"}, {"lineNumber": 228, "col_offset": 35, "nodeName": "groups", "type": "Callable"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "command", "type": "Optional[str]"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "params", "type": "List[str]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "StreamWrapper"}, {"lineNumber": 76, "col_offset": 81, "nodeName": "is_a_tty", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 90, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "AnsiStyle", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "AnsiStyle", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "AnsiStyle", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "AnsiStyle", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "reset_all", "type": "Any"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "style", "type": "Any"}, {"lineNumber": 99, "col_offset": 50, "nodeName": "BRIGHT", "type": "Any"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "style", "type": "Any"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "NORMAL", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "style", "type": "Any"}, {"lineNumber": 101, "col_offset": 50, "nodeName": "NORMAL", "type": "Any"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "fore", "type": "Any"}, {"lineNumber": 102, "col_offset": 47, "nodeName": "BLACK", "type": "Any"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "fore", "type": "Any"}, {"lineNumber": 103, "col_offset": 45, "nodeName": "RED", "type": "Any"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "fore", "type": "Any"}, {"lineNumber": 104, "col_offset": 47, "nodeName": "GREEN", "type": "Any"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "fore", "type": "Any"}, {"lineNumber": 105, "col_offset": 48, "nodeName": "YELLOW", "type": "Any"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "fore", "type": "Any"}, {"lineNumber": 106, "col_offset": 46, "nodeName": "BLUE", "type": "Any"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "fore", "type": "Any"}, {"lineNumber": 107, "col_offset": 49, "nodeName": "MAGENTA", "type": "Any"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "fore", "type": "Any"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "CYAN", "type": "Any"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "fore", "type": "Any"}, {"lineNumber": 109, "col_offset": 47, "nodeName": "GREY", "type": "Any"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "fore", "type": "Any"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "fore", "type": "Any"}, {"lineNumber": 111, "col_offset": 55, "nodeName": "BLACK", "type": "Any"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "fore", "type": "Any"}, {"lineNumber": 112, "col_offset": 53, "nodeName": "RED", "type": "Any"}, {"lineNumber": 113, "col_offset": 41, "nodeName": "fore", "type": "Any"}, {"lineNumber": 113, "col_offset": 55, "nodeName": "GREEN", "type": "Any"}, {"lineNumber": 114, "col_offset": 42, "nodeName": "fore", "type": "Any"}, {"lineNumber": 114, "col_offset": 56, "nodeName": "YELLOW", "type": "Any"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "fore", "type": "Any"}, {"lineNumber": 115, "col_offset": 54, "nodeName": "BLUE", "type": "Any"}, {"lineNumber": 116, "col_offset": 43, "nodeName": "fore", "type": "Any"}, {"lineNumber": 116, "col_offset": 57, "nodeName": "MAGENTA", "type": "Any"}, {"lineNumber": 117, "col_offset": 40, "nodeName": "fore", "type": "Any"}, {"lineNumber": 117, "col_offset": 54, "nodeName": "CYAN", "type": "Any"}, {"lineNumber": 118, "col_offset": 41, "nodeName": "fore", "type": "Any"}, {"lineNumber": 118, "col_offset": 55, "nodeName": "GREY", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "back", "type": "Any"}, {"lineNumber": 119, "col_offset": 47, "nodeName": "BLACK", "type": "Any"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "back", "type": "Any"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "RED", "type": "Any"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "back", "type": "Any"}, {"lineNumber": 121, "col_offset": 47, "nodeName": "GREEN", "type": "Any"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "back", "type": "Any"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "YELLOW", "type": "Any"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "back", "type": "Any"}, {"lineNumber": 123, "col_offset": 46, "nodeName": "BLUE", "type": "Any"}, {"lineNumber": 124, "col_offset": 35, "nodeName": "back", "type": "Any"}, {"lineNumber": 124, "col_offset": 49, "nodeName": "MAGENTA", "type": "Any"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "back", "type": "Any"}, {"lineNumber": 125, "col_offset": 46, "nodeName": "CYAN", "type": "Any"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "back", "type": "Any"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "GREY", "type": "Any"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "back", "type": "Any"}, {"lineNumber": 128, "col_offset": 41, "nodeName": "back", "type": "Any"}, {"lineNumber": 128, "col_offset": 55, "nodeName": "BLACK", "type": "Any"}, {"lineNumber": 129, "col_offset": 39, "nodeName": "back", "type": "Any"}, {"lineNumber": 129, "col_offset": 53, "nodeName": "RED", "type": "Any"}, {"lineNumber": 130, "col_offset": 41, "nodeName": "back", "type": "Any"}, {"lineNumber": 130, "col_offset": 55, "nodeName": "GREEN", "type": "Any"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "back", "type": "Any"}, {"lineNumber": 131, "col_offset": 56, "nodeName": "YELLOW", "type": "Any"}, {"lineNumber": 132, "col_offset": 40, "nodeName": "back", "type": "Any"}, {"lineNumber": 132, "col_offset": 54, "nodeName": "BLUE", "type": "Any"}, {"lineNumber": 133, "col_offset": 43, "nodeName": "back", "type": "Any"}, {"lineNumber": 133, "col_offset": 57, "nodeName": "MAGENTA", "type": "Any"}, {"lineNumber": 134, "col_offset": 40, "nodeName": "back", "type": "Any"}, {"lineNumber": 134, "col_offset": 54, "nodeName": "CYAN", "type": "Any"}, {"lineNumber": 135, "col_offset": 41, "nodeName": "back", "type": "Any"}, {"lineNumber": 135, "col_offset": 55, "nodeName": "GREY", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "strip", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "RESET_ALL", "type": "Any"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "text", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "params", "type": "Tuple[int, ...]"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "params", "type": "Tuple[int, ...]"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "params", "type": "Tuple[int, ...]"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "command", "type": "Any"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "params", "type": "Tuple[int]"}, {"lineNumber": 205, "col_offset": 19, "nodeName": "param", "type": "Any"}, {"lineNumber": 205, "col_offset": 28, "nodeName": "win32_calls", "type": "Union[Dict[Any, Union[Tuple[Any], Tuple[Any, Any], Tuple[Any, Any, bool]]], Dict[nothing, nothing]]"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "func_args", "type": "Union[Tuple[Any], Tuple[Any, Any], Tuple[Any, Any, bool]]"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "func", "type": "Any"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "args", "type": "Union[Tuple[()], Tuple[Any], Tuple[Any, bool]]"}, {"lineNumber": 209, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "erase_screen", "type": "Any"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "command", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "text", "type": "Any"}, {"lineNumber": 227, "col_offset": 34, "nodeName": "text", "type": "Any"}, {"lineNumber": 228, "col_offset": 35, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 76, "col_offset": 51, "nodeName": "is_stream_closed", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 68, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 99, "col_offset": 50, "nodeName": "WinStyle", "type": "Any"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "WinStyle", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 101, "col_offset": 50, "nodeName": "WinStyle", "type": "Any"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 102, "col_offset": 47, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 103, "col_offset": 45, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 104, "col_offset": 47, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 105, "col_offset": 48, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 106, "col_offset": 46, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 107, "col_offset": 49, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 109, "col_offset": 47, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 111, "col_offset": 55, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 112, "col_offset": 53, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 113, "col_offset": 41, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 113, "col_offset": 55, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 114, "col_offset": 42, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 114, "col_offset": 56, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 115, "col_offset": 54, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 116, "col_offset": 43, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 116, "col_offset": 57, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 117, "col_offset": 40, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 117, "col_offset": 54, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 118, "col_offset": 41, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 118, "col_offset": 55, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 119, "col_offset": 47, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 121, "col_offset": 47, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 123, "col_offset": 46, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 124, "col_offset": 35, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 124, "col_offset": 49, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 125, "col_offset": 46, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 128, "col_offset": 41, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 128, "col_offset": 55, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 129, "col_offset": 39, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 129, "col_offset": 53, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 130, "col_offset": 41, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 130, "col_offset": 55, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 131, "col_offset": 56, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 132, "col_offset": 40, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 132, "col_offset": 54, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 133, "col_offset": 43, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 133, "col_offset": 57, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 134, "col_offset": 40, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 134, "col_offset": 54, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 135, "col_offset": 41, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 135, "col_offset": 55, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 152, "col_offset": 36, "nodeName": "is_stream_closed", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 53, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "Style", "type": "Any"}, {"lineNumber": 167, "col_offset": 31, "nodeName": "groups", "type": "Callable"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 174, "col_offset": 36, "nodeName": "start", "type": "int"}, {"lineNumber": 174, "col_offset": 42, "nodeName": "end", "type": "int"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 186, "col_offset": 60, "nodeName": "p", "type": "Any"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 191, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "p", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "command", "type": "Any"}, {"lineNumber": 197, "col_offset": 20, "nodeName": "params", "type": "Tuple[int]"}, {"lineNumber": 205, "col_offset": 28, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 206, "col_offset": 32, "nodeName": "win32_calls", "type": "Union[Dict[Any, Union[Tuple[Any], Tuple[Any, Any], Tuple[Any, Any, bool]]], Dict[nothing, nothing]]"}, {"lineNumber": 207, "col_offset": 27, "nodeName": "func_args", "type": "Union[Tuple[Any], Tuple[Any, Any], Tuple[Any, Any, bool]]"}, {"lineNumber": 208, "col_offset": 27, "nodeName": "func_args", "type": "Union[Tuple[Any], Tuple[Any, Any], Tuple[Any, Any, bool]]"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "func", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "params", "type": "Any"}, {"lineNumber": 212, "col_offset": 54, "nodeName": "on_stderr", "type": "bool"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "erase_line", "type": "Any"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "command", "type": "Any"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "start", "type": "int"}, {"lineNumber": 227, "col_offset": 39, "nodeName": "end", "type": "int"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "paramstring", "type": "Optional[str]"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "params", "type": "List[str]"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "set_title", "type": "Any"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "is_stream_closed", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 66, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 71, "col_offset": 83, "nodeName": "is_a_tty", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 92, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 152, "col_offset": 53, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 167, "col_offset": 31, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 186, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 186, "col_offset": 65, "nodeName": "split", "type": "Any"}, {"lineNumber": 191, "col_offset": 43, "nodeName": "split", "type": "Any"}, {"lineNumber": 206, "col_offset": 32, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 206, "col_offset": 49, "nodeName": "param", "type": "Any"}, {"lineNumber": 209, "col_offset": 44, "nodeName": "on_stderr", "type": "bool"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "args", "type": "Union[Tuple[()], Tuple[Any], Tuple[Any, bool]]"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 212, "col_offset": 54, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 214, "col_offset": 52, "nodeName": "on_stderr", "type": "bool"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "set_cursor_position", "type": "Any"}, {"lineNumber": 216, "col_offset": 40, "nodeName": "params", "type": "Any"}, {"lineNumber": 217, "col_offset": 13, "nodeName": "command", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 235, "col_offset": 38, "nodeName": "params", "type": "List[str]"}, {"lineNumber": 186, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 186, "col_offset": 41, "nodeName": "p", "type": "Any"}, {"lineNumber": 186, "col_offset": 65, "nodeName": "paramstring", "type": "Any"}, {"lineNumber": 191, "col_offset": 43, "nodeName": "paramstring", "type": "Any"}, {"lineNumber": 191, "col_offset": 69, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 191, "col_offset": 73, "nodeName": "p", "type": "Any"}, {"lineNumber": 209, "col_offset": 44, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 214, "col_offset": 52, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 216, "col_offset": 58, "nodeName": "on_stderr", "type": "bool"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "params", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "x", "type": "Union[Any, int]"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "y", "type": "Union[int, Any]"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "cursor_adjust", "type": "Any"}, {"lineNumber": 221, "col_offset": 34, "nodeName": "x", "type": "Union[Any, int]"}, {"lineNumber": 221, "col_offset": 37, "nodeName": "y", "type": "Union[int, Any]"}, {"lineNumber": 216, "col_offset": 58, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 220, "col_offset": 74, "nodeName": "command", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 221, "col_offset": 50, "nodeName": "on_stderr", "type": "bool"}, {"lineNumber": 220, "col_offset": 43, "nodeName": "n", "type": "Any"}, {"lineNumber": 220, "col_offset": 53, "nodeName": "n", "type": "Any"}, {"lineNumber": 221, "col_offset": 50, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 220, "col_offset": 30, "nodeName": "n", "type": "Any"}, {"lineNumber": 220, "col_offset": 67, "nodeName": "n", "type": "Any"}]