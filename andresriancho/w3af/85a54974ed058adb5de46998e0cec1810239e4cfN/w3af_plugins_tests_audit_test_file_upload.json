[{"lineNumber": 27, "col_offset": 21, "nodeName": "PluginTest", "type": "Any"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "PluginTest", "type": "Any"}, {"lineNumber": 167, "col_offset": 32, "nodeName": "TestParseOutputFromUpload", "type": "Type[TestParseOutputFromUpload]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "file_upload_url", "type": "str"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "file_upload_url_534", "type": "Tuple[str, str]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "_run_configs", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Tuple[Any]], Tuple[str, str]]], Dict[str, Union[Dict[str, Tuple[Any]], str]]]]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "target_url", "type": "str"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "FORM", "type": "str"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "RESULT", "type": "str"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "image_content", "type": "str"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "MOCK_RESPONSES", "type": "List[Any]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "_run_configs", "type": "Dict[str, Dict[str, Union[Dict[str, Tuple[Any]], str]]]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "target_url", "type": "str"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "FORM", "type": "str"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "RESULT", "type": "str"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "FILE_CONTENT_RAND", "type": "str"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "IMAGE_CONTENT", "type": "str"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "FILENAME_RAND_ALPHA", "type": "str"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "MOCK_RESPONSES", "type": "List[Any]"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "moth", "type": "Callable[..., str]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "fu_vulns", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Tuple[Any]], Tuple[str, str]]]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "fu_vulns", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "EXPECTED_FILES", "type": "Set[str]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "found_files", "type": "Set[Any]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "fu_vulns", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "fu_vulns", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "moth", "type": "Callable[..., str]"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "moth", "type": "Callable[..., str]"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "file_upload_url", "type": "str"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "file_upload_url_534", "type": "Tuple[str, str]"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "_run_configs", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Tuple[Any]], Tuple[str, str]]], Dict[str, Union[Dict[str, Tuple[Any]], str]]]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "_scan", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "fu_vulns", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "file_upload_url", "type": "str"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "_run_configs", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Tuple[Any]], Tuple[str, str]]], Dict[str, Union[Dict[str, Tuple[Any]], str]]]]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "_scan", "type": "Any"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "EXPECTED_FILES", "type": "Set[str]"}, {"lineNumber": 95, "col_offset": 42, "nodeName": "found_files", "type": "Set[Any]"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "MockResponse", "type": "Any"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "MockResponse", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "MockResponse", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "target_url", "type": "str"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "_run_configs", "type": "Dict[str, Dict[str, Union[Dict[str, Tuple[Any]], str]]]"}, {"lineNumber": 154, "col_offset": 64, "nodeName": "rand_alnum_mock", "type": "mock.MagicMock"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "fu_vulns", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 164, "col_offset": 62, "nodeName": "target_url", "type": "str"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "MockResponse", "type": "Any"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "MockResponse", "type": "Any"}, {"lineNumber": 197, "col_offset": 14, "nodeName": "MockResponse", "type": "Any"}, {"lineNumber": 204, "col_offset": 48, "nodeName": "rand_alpha_mock", "type": "mock.MagicMock"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 213, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "fu_vulns", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 218, "col_offset": 62, "nodeName": "target_url", "type": "str"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "self", "type": "TestFileUpload"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestFileUpload"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "kb", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestFileUpload"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "fu_vulns", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestFileUpload"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestFileUpload"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "self", "type": "TestFileUpload"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "self", "type": "TestFileUpload"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestFileUpload"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Tuple[Any]], Tuple[str, str]]]"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Tuple[Any]], Tuple[str, str]]]"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "kb", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestFileUpload"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestFileUpload"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "target_url", "type": "str"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "FORM", "type": "str"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "RESULT", "type": "str"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "image_content", "type": "str"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "self", "type": "TestParseOutputFromUpload"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "rand_alnum_mock", "type": "mock.MagicMock"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "_scan", "type": "Any"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "kb", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "TestParseOutputFromUpload"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 160, "col_offset": 33, "nodeName": "fu_vulns", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "TestParseOutputFromUpload"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "TestParseOutputFromUpload"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 164, "col_offset": 62, "nodeName": "self", "type": "TestParseOutputFromUpload"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "target_url", "type": "str"}, {"lineNumber": 188, "col_offset": 32, "nodeName": "FORM", "type": "str"}, {"lineNumber": 193, "col_offset": 32, "nodeName": "RESULT", "type": "str"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "IMAGE_CONTENT", "type": "str"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "FILENAME_RAND_ALPHA", "type": "str"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "rand_alpha_mock", "type": "mock.MagicMock"}, {"lineNumber": 207, "col_offset": 50, "nodeName": "rand_alnum_mock", "type": "mock.MagicMock"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 213, "col_offset": 19, "nodeName": "kb", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "TestRegexOutputFromUpload"}, {"lineNumber": 214, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 214, "col_offset": 33, "nodeName": "fu_vulns", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "TestRegexOutputFromUpload"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "TestRegexOutputFromUpload"}, {"lineNumber": 218, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 218, "col_offset": 62, "nodeName": "self", "type": "TestRegexOutputFromUpload"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "self", "type": "TestFileUpload"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "v", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "get_domain_path", "type": "Any"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "self", "type": "TestFileUpload"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "get_file_name", "type": "Any"}, {"lineNumber": 94, "col_offset": 58, "nodeName": "v", "type": "Any"}, {"lineNumber": 94, "col_offset": 63, "nodeName": "fu_vulns", "type": "Any"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "target_url", "type": "str"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "target_url", "type": "str"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "self", "type": "TestParseOutputFromUpload"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 157, "col_offset": 38, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "self", "type": "TestParseOutputFromUpload"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "v", "type": "Any"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "get_domain_path", "type": "Any"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "target_url", "type": "str"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "target_url", "type": "str"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "self", "type": "TestRegexOutputFromUpload"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "FILE_CONTENT_RAND", "type": "str"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "rand_alnum_mock", "type": "mock.MagicMock"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "_run_configs", "type": "Dict[str, Dict[str, Union[Dict[str, Tuple[Any]], str]]]"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "_scan", "type": "Any"}, {"lineNumber": 213, "col_offset": 19, "nodeName": "self", "type": "TestRegexOutputFromUpload"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "v", "type": "Any"}, {"lineNumber": 218, "col_offset": 30, "nodeName": "get_domain_path", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 91, "col_offset": 71, "nodeName": "v", "type": "Any"}, {"lineNumber": 91, "col_offset": 76, "nodeName": "fu_vulns", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "self", "type": "TestRegexOutputFromUpload"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "self", "type": "TestRegexOutputFromUpload"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "self", "type": "TestRegexOutputFromUpload"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 211, "col_offset": 42, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 41, "col_offset": 47, "nodeName": "BOOL", "type": "Any"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "LIST", "type": "Any"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "LIST", "type": "Any"}, {"lineNumber": 63, "col_offset": 56, "nodeName": "BOOL", "type": "Any"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "STR", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "get_url", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "get_url", "type": "Any"}, {"lineNumber": 141, "col_offset": 56, "nodeName": "BOOL", "type": "Any"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "STR", "type": "Any"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "get_url", "type": "Any"}, {"lineNumber": 218, "col_offset": 30, "nodeName": "get_url", "type": "Any"}, {"lineNumber": 41, "col_offset": 47, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 63, "col_offset": 56, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "v", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "v", "type": "Any"}, {"lineNumber": 141, "col_offset": 56, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "v", "type": "Any"}, {"lineNumber": 218, "col_offset": 30, "nodeName": "v", "type": "Any"}]