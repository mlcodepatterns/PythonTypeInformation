[{"lineNumber": 42, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "get_headers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "test_multipart", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "test_json", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "test_xmlrpc", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "test_form", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "test_unknown_default_form", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "test_unknown_default_form_no_urlencoded", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "test_dc_from_form_params_with_files", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "test_dc_from_form_params_without_files_with_multipart_enctype", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "test_dc_from_form_params_without_files_nor_enctype", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 33, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "test_json_simple", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "test_multipart_no_files", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "test_multipart_with_files", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "test_urlencoded_form", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 149, "col_offset": 33, "nodeName": "unittest", "type": "module"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "multipart_boundary", "type": "str"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "dc", "type": "Union[w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.xmlrpc.XmlRpcContainer]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "EXPECTED_PARAMS", "type": "List[unicode]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "headers", "type": "w3af.core.data.dc.headers.Headers"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "dc", "type": "Union[w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.xmlrpc.XmlRpcContainer]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "headers", "type": "w3af.core.data.dc.headers.Headers"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "dc", "type": "Union[w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.xmlrpc.XmlRpcContainer]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "headers", "type": "w3af.core.data.dc.headers.Headers"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "dc", "type": "Union[w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.xmlrpc.XmlRpcContainer]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "headers", "type": "w3af.core.data.dc.headers.Headers"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "dc", "type": "Union[w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.xmlrpc.XmlRpcContainer]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "headers", "type": "w3af.core.data.dc.headers.Headers"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "dc", "type": "Union[w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.xmlrpc.XmlRpcContainer]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "form_params", "type": "w3af.core.data.parsers.utils.form_params.FormParameters"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "mpdc", "type": "Union[w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "form_params", "type": "w3af.core.data.parsers.utils.form_params.FormParameters"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "mpdc", "type": "Union[w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "form_params", "type": "w3af.core.data.parsers.utils.form_params.FormParameters"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "urlencode_dc", "type": "Union[w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "dc", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "params", "type": "Dict[str, str]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "dc", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "dc", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "params", "type": "Dict[str, str]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "dc", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "Headers", "type": "Type[w3af.core.data.dc.headers.Headers]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "boundary", "type": "Any"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "post_data", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "multipart_encode", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "Headers", "type": "Type[w3af.core.data.dc.headers.Headers]"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "dc_from_hdrs_post", "type": "Callable[[Any, Any], Union[w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.xmlrpc.XmlRpcContainer]]"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "headers", "type": "w3af.core.data.dc.headers.Headers"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "post_data", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "dc", "type": "Union[w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.xmlrpc.XmlRpcContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer]"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "MultipartContainer", "type": "Type[w3af.core.data.dc.multipart_container.MultipartContainer]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 47, "nodeName": "EXPECTED_PARAMS", "type": "List[unicode]"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "get_headers", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "dc_from_hdrs_post", "type": "Callable[[Any, Any], Union[w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.xmlrpc.XmlRpcContainer]]"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "headers", "type": "w3af.core.data.dc.headers.Headers"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "COMPLEX_OBJECT", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "dc", "type": "Union[w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.xmlrpc.XmlRpcContainer, w3af.core.data.dc.json_container.JSONContainer]"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "JSONContainer", "type": "Type[w3af.core.data.dc.json_container.JSONContainer]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 47, "nodeName": "EXPECTED_PARAMS", "type": "List[unicode]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "get_headers", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "dc_from_hdrs_post", "type": "Callable[[Any, Any], Union[w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.xmlrpc.XmlRpcContainer]]"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "headers", "type": "w3af.core.data.dc.headers.Headers"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "XML_WITH_FUZZABLE", "type": "str"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "dc", "type": "Union[w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.xmlrpc.XmlRpcContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer]"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "XmlRpcContainer", "type": "Type[w3af.core.data.dc.xmlrpc.XmlRpcContainer]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "dc", "type": "Union[w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.xmlrpc.XmlRpcContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "dc", "type": "Union[w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.xmlrpc.XmlRpcContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "XML_WITH_FUZZABLE", "type": "str"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "get_headers", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "dc_from_hdrs_post", "type": "Callable[[Any, Any], Union[w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.xmlrpc.XmlRpcContainer]]"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "headers", "type": "w3af.core.data.dc.headers.Headers"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "dc", "type": "Union[w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.xmlrpc.XmlRpcContainer]"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "URLEncodedForm", "type": "Type[w3af.core.data.dc.urlencoded_form.URLEncodedForm]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "dc", "type": "Union[w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.xmlrpc.XmlRpcContainer]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "dc", "type": "Union[w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.xmlrpc.XmlRpcContainer]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "get_headers", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "dc_from_hdrs_post", "type": "Callable[[Any, Any], Union[w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.xmlrpc.XmlRpcContainer]]"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "headers", "type": "w3af.core.data.dc.headers.Headers"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "dc", "type": "Union[w3af.core.data.dc.xmlrpc.XmlRpcContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.generic.plain.PlainContainer]"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "PlainContainer", "type": "Type[w3af.core.data.dc.generic.plain.PlainContainer]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "get_headers", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "dc_from_hdrs_post", "type": "Callable[[Any, Any], Union[w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.xmlrpc.XmlRpcContainer]]"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "headers", "type": "w3af.core.data.dc.headers.Headers"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "dc", "type": "Union[w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.xmlrpc.XmlRpcContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer]"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "PlainContainer", "type": "Type[w3af.core.data.dc.generic.plain.PlainContainer]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "FormParameters", "type": "Type[w3af.core.data.parsers.utils.form_params.FormParameters]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "add_field_by_attr_items", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "add_field_by_attr_items", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "set_file_name", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "dc_from_form_params", "type": "Callable[[Any], Union[w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm]]"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "form_params", "type": "w3af.core.data.parsers.utils.form_params.FormParameters"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "mpdc", "type": "Union[w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.multipart_container.MultipartContainer]"}, {"lineNumber": 117, "col_offset": 36, "nodeName": "MultipartContainer", "type": "Type[w3af.core.data.dc.multipart_container.MultipartContainer]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "FormParameters", "type": "Type[w3af.core.data.parsers.utils.form_params.FormParameters]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "set_method", "type": "Callable[[Any], None]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "set_form_encoding", "type": "Callable[[Any], None]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "add_field_by_attr_items", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "dc_from_form_params", "type": "Callable[[Any], Union[w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm]]"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "form_params", "type": "w3af.core.data.parsers.utils.form_params.FormParameters"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "mpdc", "type": "Union[w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm]"}, {"lineNumber": 131, "col_offset": 36, "nodeName": "MultipartContainer", "type": "Type[w3af.core.data.dc.multipart_container.MultipartContainer]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "FormParameters", "type": "Type[w3af.core.data.parsers.utils.form_params.FormParameters]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "add_field_by_attr_items", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "dc_from_form_params", "type": "Callable[[Any], Union[w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm]]"}, {"lineNumber": 142, "col_offset": 43, "nodeName": "form_params", "type": "w3af.core.data.parsers.utils.form_params.FormParameters"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "urlencode_dc", "type": "Union[w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.multipart_container.MultipartContainer]"}, {"lineNumber": 144, "col_offset": 44, "nodeName": "URLEncodedForm", "type": "Type[w3af.core.data.dc.urlencoded_form.URLEncodedForm]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "dc_from_content_type_and_raw_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 152, "col_offset": 69, "nodeName": "params", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "dc", "type": "Any"}, {"lineNumber": 154, "col_offset": 34, "nodeName": "JSONContainer", "type": "Type[w3af.core.data.dc.json_container.JSONContainer]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "dc_from_content_type_and_raw_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 72, "nodeName": "params", "type": "Dict[str, str]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "dc", "type": "Any"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "MultipartContainer", "type": "Type[w3af.core.data.dc.multipart_container.MultipartContainer]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "dc_from_content_type_and_raw_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 72, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "dc", "type": "Any"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "MultipartContainer", "type": "Type[w3af.core.data.dc.multipart_container.MultipartContainer]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "dc_from_content_type_and_raw_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 175, "col_offset": 86, "nodeName": "params", "type": "Dict[str, str]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "dc", "type": "Any"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "URLEncodedForm", "type": "Type[w3af.core.data.dc.urlencoded_form.URLEncodedForm]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "get_param_names", "type": "Callable[[], List[Any]]"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "get_param_names", "type": "Callable[[], List[Any]]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "COMPLEX_OBJECT", "type": "str"}, {"lineNumber": 69, "col_offset": 53, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 78, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 78, "col_offset": 48, "nodeName": "dc", "type": "Union[w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.xmlrpc.XmlRpcContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer]"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 87, "col_offset": 40, "nodeName": "dc", "type": "Union[w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.xmlrpc.XmlRpcContainer]"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "items", "type": "Any"}, {"lineNumber": 94, "col_offset": 42, "nodeName": "get_headers", "type": "Union[Callable[[], List[Tuple[str, str]]], Callable[[], List[Any]], Callable[[], List[Tuple[str, Any]]]]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "dc", "type": "Union[w3af.core.data.dc.xmlrpc.XmlRpcContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.generic.plain.PlainContainer]"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "items", "type": "Any"}, {"lineNumber": 102, "col_offset": 42, "nodeName": "get_headers", "type": "Union[Callable[[], List[Any]], Callable[[], List[Tuple[str, Any]]], Callable[[], List[Tuple[str, str]]]]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "dc", "type": "Union[w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.xmlrpc.XmlRpcContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "form_params", "type": "w3af.core.data.parsers.utils.form_params.FormParameters"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "form_params", "type": "w3af.core.data.parsers.utils.form_params.FormParameters"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "form_params", "type": "w3af.core.data.parsers.utils.form_params.FormParameters"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "get_file_vars", "type": "Callable[[], Any]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "mpdc", "type": "Union[w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.multipart_container.MultipartContainer]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "form_params", "type": "w3af.core.data.parsers.utils.form_params.FormParameters"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "form_params", "type": "w3af.core.data.parsers.utils.form_params.FormParameters"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "form_params", "type": "w3af.core.data.parsers.utils.form_params.FormParameters"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "get_file_vars", "type": "Callable[[], Any]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "mpdc", "type": "Union[w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "form_params", "type": "w3af.core.data.parsers.utils.form_params.FormParameters"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "get_file_vars", "type": "Callable[[], Any]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TestDCFactory"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "urlencode_dc", "type": "Union[w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.multipart_container.MultipartContainer]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "TestDCFactoryFromRawParams"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "TestDCFactoryFromRawParams"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "dc", "type": "Any"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "params", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "TestDCFactoryFromRawParams"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "TestDCFactoryFromRawParams"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "dc", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "TestDCFactoryFromRawParams"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "dc", "type": "Any"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "smart_fill_file", "type": "w3af.core.controllers.misc.decorators.memoized"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "TestDCFactoryFromRawParams"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "TestDCFactoryFromRawParams"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "dc", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "TestDCFactoryFromRawParams"}, {"lineNumber": 171, "col_offset": 30, "nodeName": "get_file_vars", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "TestDCFactoryFromRawParams"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "TestDCFactoryFromRawParams"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "dc", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "TestDCFactoryFromRawParams"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "dc", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "dc", "type": "Union[w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.xmlrpc.XmlRpcContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer]"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "dc", "type": "Union[w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.xmlrpc.XmlRpcContainer, w3af.core.data.dc.json_container.JSONContainer]"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "json", "type": "module"}, {"lineNumber": 69, "col_offset": 53, "nodeName": "json", "type": "module"}, {"lineNumber": 69, "col_offset": 64, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 69, "col_offset": 68, "nodeName": "dc", "type": "Union[w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.xmlrpc.XmlRpcContainer, w3af.core.data.dc.json_container.JSONContainer]"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "headers", "type": "w3af.core.data.dc.headers.Headers"}, {"lineNumber": 94, "col_offset": 42, "nodeName": "dc", "type": "Union[w3af.core.data.dc.xmlrpc.XmlRpcContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.generic.plain.PlainContainer]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "headers", "type": "w3af.core.data.dc.headers.Headers"}, {"lineNumber": 102, "col_offset": 42, "nodeName": "dc", "type": "Union[w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.generic.plain.PlainContainer, w3af.core.data.dc.xmlrpc.XmlRpcContainer, w3af.core.data.dc.json_container.JSONContainer, w3af.core.data.dc.multipart_container.MultipartContainer]"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "mpdc", "type": "Union[w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.multipart_container.MultipartContainer]"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "mpdc", "type": "Union[w3af.core.data.dc.multipart_container.MultipartContainer, w3af.core.data.dc.urlencoded_form.URLEncodedForm]"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "urlencode_dc", "type": "Union[w3af.core.data.dc.urlencoded_form.URLEncodedForm, w3af.core.data.dc.multipart_container.MultipartContainer]"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "json", "type": "module"}, {"lineNumber": 171, "col_offset": 30, "nodeName": "dc", "type": "Any"}, {"lineNumber": 44, "col_offset": 50, "nodeName": "content_type", "type": "Any"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 51, "col_offset": 44, "nodeName": "multipart_boundary", "type": "str"}, {"lineNumber": 51, "col_offset": 65, "nodeName": "boundary", "type": "Any"}, {"lineNumber": 50, "col_offset": 50, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 50, "col_offset": 54, "nodeName": "post_data", "type": "Any"}]