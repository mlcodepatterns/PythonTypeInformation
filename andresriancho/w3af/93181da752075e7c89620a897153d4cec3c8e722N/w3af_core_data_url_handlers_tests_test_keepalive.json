[{"lineNumber": 45, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "test_get_and_remove_conn", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "test_timeout", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "test_free_connection", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "test_single_conn_mgr", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "test_close_all_established_sockets", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "test_close_all_close_wait_sockets", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "close_all_sockets", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "test_get_available_conn_reuse", "type": "Callable[[Any], Any]"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "test_get_available_conn_new_connection_requested", "type": "Callable[[Any], Any]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "test_replace_conn", "type": "Callable[[Any], Any]"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "test_remove_conn", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "conn_factory", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "kahdler", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "_curr_check_failures", "type": "int"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "host", "type": "str"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "is_fresh", "type": "int"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "getresponse", "type": "str"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "kahdler", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "host", "type": "str"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "host", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "get_host", "type": "mock.MagicMock"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "get_full_url", "type": "mock.MagicMock"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "_start_transaction", "type": "mock.MagicMock"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "conn_factory", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "get_connection", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "resp", "type": "w3af.core.data.url.handlers.keepalive.http_response.HTTPResponse"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "will_close", "type": "bool"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "read", "type": "mock.MagicMock"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "getresponse", "type": "mock.MagicMock"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "conn_mgr_mock", "type": "mock.Mock"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "get_available_connection", "type": "mock.MagicMock"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "remove_connection", "type": "mock.MagicMock"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "_cm", "type": "mock.Mock"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "conn_mgr_mock", "type": "mock.Mock"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "kahdler", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "host", "type": "str"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "host", "type": "str"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "get_host", "type": "mock.MagicMock"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "_start_transaction", "type": "mock.MagicMock"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "conn_mgr", "type": "mock.Mock"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "get_available_connection", "type": "mock.MagicMock"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "remove_connection", "type": "mock.MagicMock"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "_cm", "type": "mock.Mock"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "conn_mgr", "type": "mock.Mock"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "kahdler", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "conn_mgr", "type": "mock.Mock"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "free_connection", "type": "mock.MagicMock"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "_cm", "type": "mock.Mock"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "conn_mgr", "type": "mock.Mock"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "conn_mgr_http", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "_cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "conn_mgr_https", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "_cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "keep_alive_http", "type": "w3af.core.data.url.handlers.keepalive.handler.HTTPHandler"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "uri_opener", "type": "urllib2.OpenerDirector"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "request", "type": "w3af.core.data.url.HTTPRequest.HTTPRequest"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "response", "type": "Optional[urllib.addinfourl]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "pid", "type": "int"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "connections_before", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "connections_after", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "new_connection", "type": "bool"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "get_host", "type": "Callable[[], Any]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "MAX_CONNECTIONS", "type": "int"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "conn_1", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "conn_2", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "new_connection", "type": "bool"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "MAX_CONNECTIONS", "type": "int"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "cf", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "conn_1", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "conn_2", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "cf", "type": "Callable[[Any], Any]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "bad_conn", "type": "mock.Mock"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "bad_conn", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "old_len", "type": "int"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "new_conn", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "conn", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "non_exist_host", "type": "str"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "KeepAliveHandler", "type": "Type[w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "kahdler", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "HTTPResponse", "type": "Type[w3af.core.data.url.handlers.keepalive.http_response.HTTPResponse]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "resp", "type": "w3af.core.data.url.handlers.keepalive.http_response.HTTPResponse"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "resp", "type": "w3af.core.data.url.handlers.keepalive.http_response.HTTPResponse"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "conn_mgr_mock", "type": "mock.Mock"}, {"lineNumber": 86, "col_offset": 49, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "conn_mgr_mock", "type": "mock.Mock"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "do_open", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 94, "col_offset": 55, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 94, "col_offset": 61, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 95, "col_offset": 71, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 96, "col_offset": 71, "nodeName": "conn_factory", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 97, "col_offset": 64, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 98, "col_offset": 64, "nodeName": "host", "type": "str"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "conn_mgr", "type": "mock.Mock"}, {"lineNumber": 118, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "conn_mgr", "type": "mock.Mock"}, {"lineNumber": 119, "col_offset": 37, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "URLTimeoutError", "type": "Type[w3af.core.data.url.handlers.keepalive.handler.URLTimeoutError]"}, {"lineNumber": 127, "col_offset": 43, "nodeName": "do_open", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 56, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "URLTimeoutError", "type": "Type[w3af.core.data.url.handlers.keepalive.handler.URLTimeoutError]"}, {"lineNumber": 128, "col_offset": 43, "nodeName": "do_open", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 56, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "conn_mgr", "type": "mock.Mock"}, {"lineNumber": 143, "col_offset": 35, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "_request_closed", "type": "Callable[[Any], None]"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 148, "col_offset": 57, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "conn_mgr_http", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 158, "col_offset": 40, "nodeName": "conn_mgr_https", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "close_all_sockets", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "close_all_sockets", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "HTTPHandler", "type": "Type[w3af.core.data.url.handlers.keepalive.handler.HTTPHandler]"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "build_opener", "type": "Callable[..., urllib2.OpenerDirector]"}, {"lineNumber": 170, "col_offset": 42, "nodeName": "keep_alive_http", "type": "w3af.core.data.url.handlers.keepalive.handler.HTTPHandler"}, {"lineNumber": 172, "col_offset": 18, "nodeName": "HTTPRequest", "type": "Type[w3af.core.data.url.HTTPRequest.HTTPRequest]"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "open", "type": "Callable[..., Optional[urllib.addinfourl]]"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "request", "type": "w3af.core.data.url.HTTPRequest.HTTPRequest"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "sleep", "type": "Callable[[Union[float, int]], None]"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "wait", "type": "Any"}, {"lineNumber": 178, "col_offset": 14, "nodeName": "getpid", "type": "Callable[[], int]"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "Process", "type": "Any"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "pid", "type": "int"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "get_connections", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "close_all", "type": "Callable[[], None]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "sleep", "type": "Callable[[Union[float, int]], None]"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "get_connections", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "ConnectionManager", "type": "Type[w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 194, "col_offset": 23, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "mock", "type": "mock.Mock"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "host", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "mock", "type": "mock.Mock"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "get_available_connection", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 211, "col_offset": 50, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 211, "col_offset": 64, "nodeName": "conn_factory", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "free_connection", "type": "Callable[[Any], None]"}, {"lineNumber": 216, "col_offset": 32, "nodeName": "conn_1", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "get_available_connection", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 50, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 222, "col_offset": 64, "nodeName": "conn_factory", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "conn_2", "type": "Any"}, {"lineNumber": 223, "col_offset": 30, "nodeName": "conn_1", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "get_available_connection", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 235, "col_offset": 50, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 235, "col_offset": 64, "nodeName": "cf", "type": "Callable[[Any], Any]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "free_connection", "type": "Callable[[Any], None]"}, {"lineNumber": 240, "col_offset": 32, "nodeName": "conn_1", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 17, "nodeName": "get_available_connection", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 245, "col_offset": 50, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 245, "col_offset": 64, "nodeName": "cf", "type": "Callable[[Any], Any]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "conn_1", "type": "Any"}, {"lineNumber": 246, "col_offset": 33, "nodeName": "conn_2", "type": "Any"}, {"lineNumber": 250, "col_offset": 19, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "replace_connection", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 251, "col_offset": 35, "nodeName": "bad_conn", "type": "mock.Mock"}, {"lineNumber": 251, "col_offset": 45, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 251, "col_offset": 59, "nodeName": "cf", "type": "Callable[[Any], Any]"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "get_available_connection", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 252, "col_offset": 52, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 252, "col_offset": 66, "nodeName": "cf", "type": "Callable[[Any], Any]"}, {"lineNumber": 253, "col_offset": 18, "nodeName": "get_connections_total", "type": "Callable[..., int]"}, {"lineNumber": 256, "col_offset": 19, "nodeName": "replace_connection", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 256, "col_offset": 46, "nodeName": "bad_conn", "type": "Any"}, {"lineNumber": 256, "col_offset": 56, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 256, "col_offset": 70, "nodeName": "cf", "type": "Callable[[Any], Any]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assertNotEquals", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 29, "nodeName": "bad_conn", "type": "Any"}, {"lineNumber": 259, "col_offset": 39, "nodeName": "new_conn", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 262, "col_offset": 59, "nodeName": "old_len", "type": "int"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "get_available_connection", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 270, "col_offset": 48, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "remove_connection", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 34, "nodeName": "conn", "type": "Any"}, {"lineNumber": 275, "col_offset": 40, "nodeName": "non_exist_host", "type": "str"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "remove_connection", "type": "Callable[..., None]"}, {"lineNumber": 276, "col_offset": 34, "nodeName": "conn", "type": "Any"}, {"lineNumber": 276, "col_offset": 40, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 46, "nodeName": "host", "type": "str"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "socket", "type": "Type[socket.socket]"}, {"lineNumber": 82, "col_offset": 50, "nodeName": "resp", "type": "w3af.core.data.url.handlers.keepalive.http_response.HTTPResponse"}, {"lineNumber": 86, "col_offset": 72, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "_start_transaction", "type": "mock.MagicMock"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "get_available_connection", "type": "mock.MagicMock"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "remove_connection", "type": "mock.MagicMock"}, {"lineNumber": 118, "col_offset": 67, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 43, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 43, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "call_args_list", "type": "mock._CallList"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "call_args_list", "type": "mock._CallList"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "free_connection", "type": "mock.MagicMock"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "HTTPHandler", "type": "Type[w3af.core.data.url.handlers.keepalive.handler.HTTPHandler]"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "HTTPSHandler", "type": "Type[w3af.core.data.url.handlers.keepalive.handler.HTTPSHandler]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "urllib2", "type": "module"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "URL", "type": "Type[w3af.core.data.parsers.doc.url.URL]"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "uri_opener", "type": "urllib2.OpenerDirector"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "response", "type": "Optional[urllib.addinfourl]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "time", "type": "module"}, {"lineNumber": 178, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "psutil", "type": "Any"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "keep_alive_http", "type": "w3af.core.data.url.handlers.keepalive.handler.HTTPHandler"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "time", "type": "module"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "p", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "connections_after", "type": "Any"}, {"lineNumber": 187, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 187, "col_offset": 52, "nodeName": "connections_before", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 202, "col_offset": 33, "nodeName": "_used_conns", "type": "Set[Any]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 203, "col_offset": 33, "nodeName": "_free_conns", "type": "Set[Any]"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "mock", "type": "mock.Mock"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "get_host", "type": "Any"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 211, "col_offset": 50, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 212, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "_used_conns", "type": "Set[Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "_free_conns", "type": "Set[Any]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 217, "col_offset": 33, "nodeName": "_used_conns", "type": "Set[Any]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 218, "col_offset": 33, "nodeName": "_free_conns", "type": "Set[Any]"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 222, "col_offset": 50, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 230, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 230, "col_offset": 33, "nodeName": "_used_conns", "type": "Set[Any]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 231, "col_offset": 33, "nodeName": "_free_conns", "type": "Set[Any]"}, {"lineNumber": 234, "col_offset": 23, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 235, "col_offset": 50, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 236, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 236, "col_offset": 33, "nodeName": "_used_conns", "type": "Set[Any]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 237, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 237, "col_offset": 33, "nodeName": "_free_conns", "type": "Set[Any]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 241, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 241, "col_offset": 33, "nodeName": "_used_conns", "type": "Set[Any]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 242, "col_offset": 33, "nodeName": "_free_conns", "type": "Set[Any]"}, {"lineNumber": 245, "col_offset": 17, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 245, "col_offset": 50, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 249, "col_offset": 23, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 251, "col_offset": 45, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 252, "col_offset": 52, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 253, "col_offset": 18, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 256, "col_offset": 19, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 256, "col_offset": 56, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 262, "col_offset": 26, "nodeName": "get_connections_total", "type": "Callable[..., int]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "get_connections_total", "type": "Callable[..., int]"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 270, "col_offset": 48, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "get_connections_total", "type": "Callable[..., int]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 276, "col_offset": 40, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "get_connections_total", "type": "Callable[..., int]"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "socket", "type": "module"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "conn_mgr_mock", "type": "mock.Mock"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "conn_mgr_mock", "type": "mock.Mock"}, {"lineNumber": 111, "col_offset": 46, "nodeName": "host", "type": "str"}, {"lineNumber": 111, "col_offset": 52, "nodeName": "host", "type": "str"}, {"lineNumber": 114, "col_offset": 55, "nodeName": "timeout", "type": "Type[socket.timeout]"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "get_available_connection", "type": "mock.MagicMock"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "remove_connection", "type": "mock.MagicMock"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "conn_mgr", "type": "mock.Mock"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "get_moth_http", "type": "Callable[..., str]"}, {"lineNumber": 202, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 203, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "request", "type": "Any"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 217, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 218, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 230, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 231, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 236, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 237, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 241, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 242, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 245, "col_offset": 17, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 253, "col_offset": 18, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 256, "col_offset": 19, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 262, "col_offset": 26, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 270, "col_offset": 72, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 114, "col_offset": 55, "nodeName": "socket", "type": "module"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "conn_mgr", "type": "mock.Mock"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "conn_mgr", "type": "mock.Mock"}, {"lineNumber": 202, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 203, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 217, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 218, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 230, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 231, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 236, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 237, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 241, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 242, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 262, "col_offset": 26, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "self", "type": "TestConnectionMgr"}]