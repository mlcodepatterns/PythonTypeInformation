[{"lineNumber": 30, "col_offset": 36, "nodeName": "MockResponse", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "PluginTest", "type": "Any"}, {"lineNumber": 85, "col_offset": 61, "nodeName": "MockResponse", "type": "Any"}, {"lineNumber": 112, "col_offset": 53, "nodeName": "PluginTest", "type": "Any"}, {"lineNumber": 143, "col_offset": 42, "nodeName": "MockResponse", "type": "Any"}, {"lineNumber": 166, "col_offset": 34, "nodeName": "PluginTest", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "target_url", "type": "str"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "target_url_re", "type": "Pattern[str]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "MOCK_RESPONSES", "type": "List[ResponseSplittingMockResponse]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "_run_configs", "type": "Dict[str, Dict[str, Union[Dict[str, Tuple[Any]], str]]]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "target_url", "type": "str"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "target_url_re", "type": "Pattern[str]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "MOCK_RESPONSES", "type": "List[ResponseSplittingParameterModifiesResponseMockResponse]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "_run_configs", "type": "Dict[str, Dict[str, Union[Dict[str, Tuple[Any]], str]]]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "target_url", "type": "str"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "target_url_re", "type": "Pattern[str]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "MOCK_RESPONSES", "type": "List[ResponseSplittingHeaderMockResponse]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "_run_configs", "type": "Dict[str, Dict[str, Union[Dict[str, List[str]], Dict[str, Tuple[Any]], str]]]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "uri", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "headers_to_inject", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "header_name_1", "type": "str"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "uri", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "headers_to_inject", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "header_name_1", "type": "str"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "referer", "type": "Union[Any, str]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "headers_to_inject", "type": "bytes"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "header_name_1", "type": "str"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, List[str]], Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "unquote", "type": "Any"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "uri", "type": "Any"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "uri", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "headers_to_inject", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "header_value_1", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "headers_to_inject", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "header_name_2", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "header_value_2", "type": "Any"}, {"lineNumber": 47, "col_offset": 46, "nodeName": "header_value_1", "type": "Any"}, {"lineNumber": 48, "col_offset": 46, "nodeName": "header_value_2", "type": "Any"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "re", "type": "module"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "ResponseSplittingMockResponse", "type": "Type[ResponseSplittingMockResponse]"}, {"lineNumber": 58, "col_offset": 52, "nodeName": "target_url_re", "type": "Pattern[str]"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "target_url", "type": "str"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "_run_configs", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "_scan", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "unquote", "type": "Any"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "uri", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "uri", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "headers_to_inject", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "header_value_1", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "headers_to_inject", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "header_name_2", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "header_value_2", "type": "Any"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "header_value_1", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "body", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "body", "type": "Any"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "re", "type": "module"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "ResponseSplittingParameterModifiesResponseMockResponse", "type": "Type[ResponseSplittingParameterModifiesResponseMockResponse]"}, {"lineNumber": 116, "col_offset": 77, "nodeName": "target_url_re", "type": "Pattern[str]"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "target_url", "type": "str"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "_run_configs", "type": "Dict[str, Dict[str, Union[Dict[str, Tuple[Any]], str]]]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "_scan", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 134, "col_offset": 41, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "headers_to_inject", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "header_value_1", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "headers_to_inject", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "header_name_2", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "header_value_2", "type": "Any"}, {"lineNumber": 161, "col_offset": 46, "nodeName": "header_value_1", "type": "Any"}, {"lineNumber": 162, "col_offset": 46, "nodeName": "header_value_2", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "re", "type": "module"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "ResponseSplittingHeaderMockResponse", "type": "Type[ResponseSplittingHeaderMockResponse]"}, {"lineNumber": 170, "col_offset": 58, "nodeName": "target_url_re", "type": "Pattern[str]"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "target_url", "type": "str"}, {"lineNumber": 185, "col_offset": 14, "nodeName": "_run_configs", "type": "Dict[str, Dict[str, Union[Dict[str, List[str]], Dict[str, Tuple[Any]], str]]]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "_scan", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 191, "col_offset": 41, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "urllib", "type": "module"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "split", "type": "Any"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "strip", "type": "Any"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "headers_to_inject", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "header_name_2", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "header_value_2", "type": "Any"}, {"lineNumber": 41, "col_offset": 44, "nodeName": "split", "type": "Any"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "strip", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "strip", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "response_headers", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "response_headers", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "status", "type": "Any"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "response_headers", "type": "Any"}, {"lineNumber": 49, "col_offset": 50, "nodeName": "body", "type": "Any"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 73, "col_offset": 34, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "kb", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 62, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "get_token_name", "type": "Any"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "urllib", "type": "module"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "split", "type": "Any"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "strip", "type": "Any"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "headers_to_inject", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "header_name_2", "type": "Any"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "header_value_2", "type": "Any"}, {"lineNumber": 97, "col_offset": 44, "nodeName": "split", "type": "Any"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "strip", "type": "Any"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "strip", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "response_headers", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "self", "type": "ResponseSplittingParameterModifiesResponseMockResponse"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "header_name_2", "type": "Any"}, {"lineNumber": 106, "col_offset": 33, "nodeName": "header_value_2", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "body", "type": "str"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "status", "type": "Any"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "response_headers", "type": "Any"}, {"lineNumber": 109, "col_offset": 50, "nodeName": "body", "type": "Any"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "self", "type": "TestResponseSplittingParameterModifiesResponse"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestResponseSplittingParameterModifiesResponse"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 131, "col_offset": 34, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "kb", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "TestResponseSplittingParameterModifiesResponse"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestResponseSplittingParameterModifiesResponse"}, {"lineNumber": 138, "col_offset": 65, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestResponseSplittingParameterModifiesResponse"}, {"lineNumber": 139, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "TestResponseSplittingParameterModifiesResponse"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "get_token_name", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "get", "type": "Any"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "split", "type": "Callable[..., List[bytes]]"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "strip", "type": "Any"}, {"lineNumber": 154, "col_offset": 32, "nodeName": "headers_to_inject", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "header_name_2", "type": "Any"}, {"lineNumber": 155, "col_offset": 27, "nodeName": "header_value_2", "type": "Any"}, {"lineNumber": 155, "col_offset": 44, "nodeName": "split", "type": "Any"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "strip", "type": "Any"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "strip", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "response_headers", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "response_headers", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "status", "type": "Any"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "response_headers", "type": "Any"}, {"lineNumber": 163, "col_offset": 50, "nodeName": "body", "type": "Any"}, {"lineNumber": 185, "col_offset": 14, "nodeName": "self", "type": "TestResponseSplittingHeader"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "TestResponseSplittingHeader"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, List[str]], Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, List[str]], Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "kb", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "TestResponseSplittingHeader"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 191, "col_offset": 33, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "TestResponseSplittingHeader"}, {"lineNumber": 195, "col_offset": 62, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TestResponseSplittingHeader"}, {"lineNumber": 196, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "TestResponseSplittingHeader"}, {"lineNumber": 197, "col_offset": 37, "nodeName": "get_token_name", "type": "Any"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "headers_to_inject", "type": "Any"}, {"lineNumber": 41, "col_offset": 44, "nodeName": "headers_to_inject", "type": "Any"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "header_name_2", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "header_value_2", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "status", "type": "Any"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "response_headers", "type": "Any"}, {"lineNumber": 45, "col_offset": 50, "nodeName": "body", "type": "Any"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "header_name_1", "type": "str"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "header_name_2", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "self", "type": "ResponseSplittingMockResponse"}, {"lineNumber": 49, "col_offset": 50, "nodeName": "self", "type": "ResponseSplittingMockResponse"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 62, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 81, "col_offset": 50, "nodeName": "get_url", "type": "Any"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "headers_to_inject", "type": "Any"}, {"lineNumber": 97, "col_offset": 44, "nodeName": "headers_to_inject", "type": "Any"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "header_name_2", "type": "Any"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "header_value_2", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "status", "type": "Any"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "response_headers", "type": "Any"}, {"lineNumber": 101, "col_offset": 50, "nodeName": "body", "type": "Any"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "header_name_1", "type": "str"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "self", "type": "ResponseSplittingParameterModifiesResponseMockResponse"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "self", "type": "TestResponseSplittingParameterModifiesResponse"}, {"lineNumber": 138, "col_offset": 65, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 139, "col_offset": 50, "nodeName": "get_url", "type": "Any"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "headers", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "decode_header", "type": "Callable[[Union[email.header.Header, str]], List[Tuple[bytes, Optional[str]]]]"}, {"lineNumber": 146, "col_offset": 42, "nodeName": "referer", "type": "Union[Any, str]"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "headers_to_inject", "type": "bytes"}, {"lineNumber": 155, "col_offset": 44, "nodeName": "headers_to_inject", "type": "Any"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "header_name_2", "type": "Any"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "header_value_2", "type": "Any"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "status", "type": "Any"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "response_headers", "type": "Any"}, {"lineNumber": 159, "col_offset": 50, "nodeName": "body", "type": "Any"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "header_name_1", "type": "str"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "header_name_2", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "self", "type": "ResponseSplittingHeaderMockResponse"}, {"lineNumber": 163, "col_offset": 50, "nodeName": "self", "type": "ResponseSplittingHeaderMockResponse"}, {"lineNumber": 188, "col_offset": 33, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, List[str]], Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "self", "type": "TestResponseSplittingHeader"}, {"lineNumber": 195, "col_offset": 62, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 196, "col_offset": 50, "nodeName": "get_url", "type": "Any"}, {"lineNumber": 197, "col_offset": 37, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "find", "type": "Any"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "headers_to_inject", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "self", "type": "ResponseSplittingMockResponse"}, {"lineNumber": 45, "col_offset": 50, "nodeName": "self", "type": "ResponseSplittingMockResponse"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 81, "col_offset": 50, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "find", "type": "Any"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "headers_to_inject", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "self", "type": "ResponseSplittingParameterModifiesResponseMockResponse"}, {"lineNumber": 101, "col_offset": 50, "nodeName": "self", "type": "ResponseSplittingParameterModifiesResponseMockResponse"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 139, "col_offset": 50, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "http_request", "type": "Any"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "headers_to_inject", "type": "Any"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "self", "type": "ResponseSplittingHeaderMockResponse"}, {"lineNumber": 159, "col_offset": 50, "nodeName": "self", "type": "ResponseSplittingHeaderMockResponse"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 196, "col_offset": 50, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "uri", "type": "Any"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "uri", "type": "Any"}]