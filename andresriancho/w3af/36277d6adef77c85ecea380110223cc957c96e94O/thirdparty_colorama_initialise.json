[{"lineNumber": 16, "col_offset": 0, "nodeName": "reset_all", "type": "Callable[[], Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "init", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "deinit", "type": "Callable[[], Any]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "reinit", "type": "Callable[[], Any]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "wrap_stream", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "orig_stdout", "type": "TextIO"}, {"lineNumber": 7, "col_offset": 14, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "orig_stderr", "type": "TextIO"}, {"lineNumber": 8, "col_offset": 14, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "wrapped_stdout", "type": "TextIO"}, {"lineNumber": 10, "col_offset": 17, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "wrapped_stderr", "type": "TextIO"}, {"lineNumber": 11, "col_offset": 17, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "atexit_done", "type": "bool"}, {"lineNumber": 7, "col_offset": 14, "nodeName": "sys", "type": "module"}, {"lineNumber": 8, "col_offset": 14, "nodeName": "sys", "type": "module"}, {"lineNumber": 10, "col_offset": 17, "nodeName": "sys", "type": "module"}, {"lineNumber": 11, "col_offset": 17, "nodeName": "sys", "type": "module"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "wrapped_stdout", "type": "Any"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "wrapped_stderr", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "orig_stdout", "type": "TextIO"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "orig_stderr", "type": "TextIO"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "wrapped_stdout", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "stderr", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "wrapped_stdout", "type": "Any"}, {"lineNumber": 48, "col_offset": 7, "nodeName": "wrap", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "stream", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "reset_all", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "wrap_stream", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "orig_stdout", "type": "TextIO"}, {"lineNumber": 27, "col_offset": 33, "nodeName": "convert", "type": "Any"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "strip", "type": "Any"}, {"lineNumber": 27, "col_offset": 49, "nodeName": "autoreset", "type": "Any"}, {"lineNumber": 27, "col_offset": 60, "nodeName": "wrap", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "wrap_stream", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "orig_stderr", "type": "TextIO"}, {"lineNumber": 29, "col_offset": 33, "nodeName": "convert", "type": "Any"}, {"lineNumber": 29, "col_offset": 42, "nodeName": "strip", "type": "Any"}, {"lineNumber": 29, "col_offset": 49, "nodeName": "autoreset", "type": "Any"}, {"lineNumber": 29, "col_offset": 60, "nodeName": "wrap", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "atexit_done", "type": "bool"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "atexit_done", "type": "bool"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "sys", "type": "module"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "sys", "type": "module"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "sys", "type": "module"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "sys", "type": "module"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "wrapper", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "wrap", "type": "Any"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 23, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "register", "type": "Callable[..., Callable[..., Any]]"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "reset_all", "type": "Callable[[], Any]"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "AnsiToWin32", "type": "Any"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "stream", "type": "TextIO"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "should_wrap", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "stream", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "stream", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "AnsiToWin32", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "orig_stdout", "type": "TextIO"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "autoreset", "type": "Any"}, {"lineNumber": 22, "col_offset": 36, "nodeName": "convert", "type": "Any"}, {"lineNumber": 22, "col_offset": 45, "nodeName": "strip", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "atexit", "type": "module"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "convert", "type": "Any"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "strip", "type": "Any"}, {"lineNumber": 50, "col_offset": 52, "nodeName": "autoreset", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "wrapper", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "wrapper", "type": "Any"}]