[{"lineNumber": 14, "col_offset": 0, "nodeName": "is_a_tty", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 10, "col_offset": 3, "nodeName": "windll", "type": "Any"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "ANSI_RE", "type": "Pattern[str]"}, {"lineNumber": 11, "col_offset": 14, "nodeName": "WinTerm", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "converter", "type": "AnsiToWin32"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "autoreset", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "autoreset", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "stream", "type": "StreamWrapper"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "on_windows", "type": "bool"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "strip", "type": "Union[bool, Any]"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "strip", "type": "Union[bool, Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "convert", "type": "Union[bool, Any]"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "convert", "type": "Union[bool, Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "win32_calls", "type": "Optional[Dict[Any, Union[Tuple[Any], Tuple[Any, Any]]]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "on_stderr", "type": "bool"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "autoreset", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "convert", "type": "Union[bool, Any]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "cursor", "type": "int"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "convert", "type": "Union[bool, Any]"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 15, "col_offset": 19, "nodeName": "stream", "type": "Any"}, {"lineNumber": 15, "col_offset": 41, "nodeName": "isatty", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "StreamWrapper"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "StreamWrapper"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "name", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "write", "type": "Any"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "text", "type": "Any"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "re", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "StreamWrapper", "type": "Type[StreamWrapper]"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "strip", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "strip", "type": "bool"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "on_windows", "type": "bool"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "convert", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "convert", "type": "Union[bool, Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "get_win32_calls", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "convert", "type": "Union[bool, Any]"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "strip", "type": "Union[bool, Any]"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "autoreset", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "convert", "type": "Union[bool, Any]"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "strip", "type": "Union[bool, Any]"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "convert", "type": "Union[bool, Any]"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "finditer", "type": "Callable"}, {"lineNumber": 137, "col_offset": 43, "nodeName": "text", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "cursor", "type": "int"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "end", "type": "int"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "write_plain_text", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "text", "type": "Any"}, {"lineNumber": 142, "col_offset": 36, "nodeName": "cursor", "type": "int"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "start", "type": "int"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "end", "type": "int"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "params", "type": "Tuple[int, ...]"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "params", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "params", "type": "List[int]"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "command", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "param", "type": "Union[int, Any]"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "params", "type": "Union[List[int], Any]"}, {"lineNumber": 15, "col_offset": 41, "nodeName": "stream", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "self", "type": "StreamWrapper"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "platform", "type": "str"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "on_windows", "type": "bool"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "sys", "type": "module"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "RESET_ALL", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "BRIGHT", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "DIM", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "NORMAL", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "BLACK", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "RED", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "GREEN", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "YELLOW", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "BLUE", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "MAGENTA", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "CYAN", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "WHITE", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "RESET", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "BLACK", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "RED", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "GREEN", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "YELLOW", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "BLUE", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "MAGENTA", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "CYAN", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "WHITE", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "RESET", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "write_and_convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "text", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "text", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "flush", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "reset_all", "type": "Callable[[], Any]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "call_win32", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "is_a_tty", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "ANSI_RE", "type": "Pattern[str]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "start", "type": "int"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "end", "type": "int"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "span", "type": "Callable[..., Tuple[int, int]]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "write_plain_text", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "text", "type": "Any"}, {"lineNumber": 139, "col_offset": 40, "nodeName": "cursor", "type": "int"}, {"lineNumber": 139, "col_offset": 48, "nodeName": "start", "type": "int"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "convert_ansi", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 142, "col_offset": 44, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 142, "col_offset": 48, "nodeName": "text", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "flush", "type": "Any"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "extract_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 41, "nodeName": "paramstring", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "call_win32", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "command", "type": "Any"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "params", "type": "Tuple[int, ...]"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "split", "type": "Any"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "split", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "paramstring", "type": "Any"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "command", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "func", "type": "Any"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "set_cursor_position", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "StreamWrapper"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 64, "col_offset": 37, "nodeName": "is_a_tty", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 46, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "AnsiStyle", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "AnsiStyle", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "AnsiStyle", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "AnsiStyle", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "AnsiFore", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "AnsiBack", "type": "Any"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "reset_all", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "style", "type": "Any"}, {"lineNumber": 89, "col_offset": 50, "nodeName": "BRIGHT", "type": "Any"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "style", "type": "Any"}, {"lineNumber": 90, "col_offset": 47, "nodeName": "NORMAL", "type": "Any"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "style", "type": "Any"}, {"lineNumber": 91, "col_offset": 50, "nodeName": "NORMAL", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "fore", "type": "Any"}, {"lineNumber": 92, "col_offset": 47, "nodeName": "BLACK", "type": "Any"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "fore", "type": "Any"}, {"lineNumber": 93, "col_offset": 45, "nodeName": "RED", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "fore", "type": "Any"}, {"lineNumber": 94, "col_offset": 47, "nodeName": "GREEN", "type": "Any"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "fore", "type": "Any"}, {"lineNumber": 95, "col_offset": 48, "nodeName": "YELLOW", "type": "Any"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "fore", "type": "Any"}, {"lineNumber": 96, "col_offset": 46, "nodeName": "BLUE", "type": "Any"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "fore", "type": "Any"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "MAGENTA", "type": "Any"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "fore", "type": "Any"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "CYAN", "type": "Any"}, {"lineNumber": 99, "col_offset": 33, "nodeName": "fore", "type": "Any"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "GREY", "type": "Any"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "fore", "type": "Any"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "back", "type": "Any"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "BLACK", "type": "Any"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "back", "type": "Any"}, {"lineNumber": 102, "col_offset": 45, "nodeName": "RED", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "back", "type": "Any"}, {"lineNumber": 103, "col_offset": 47, "nodeName": "GREEN", "type": "Any"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "back", "type": "Any"}, {"lineNumber": 104, "col_offset": 48, "nodeName": "YELLOW", "type": "Any"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "back", "type": "Any"}, {"lineNumber": 105, "col_offset": 46, "nodeName": "BLUE", "type": "Any"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "back", "type": "Any"}, {"lineNumber": 106, "col_offset": 49, "nodeName": "MAGENTA", "type": "Any"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "back", "type": "Any"}, {"lineNumber": 107, "col_offset": 46, "nodeName": "CYAN", "type": "Any"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "back", "type": "Any"}, {"lineNumber": 108, "col_offset": 47, "nodeName": "GREY", "type": "Any"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "back", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "RESET_ALL", "type": "Any"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 147, "col_offset": 31, "nodeName": "text", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "paramstring", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "p", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "param", "type": "Union[int, Any]"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "win32_calls", "type": "Any"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "func_args", "type": "Any"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "func", "type": "Any"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "args", "type": "Any"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "func", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "params", "type": "Union[List[int], Any]"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "command", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "func", "type": "Any"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "erase_data", "type": "Any"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 89, "col_offset": 50, "nodeName": "WinStyle", "type": "Any"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 90, "col_offset": 47, "nodeName": "WinStyle", "type": "Any"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 91, "col_offset": 50, "nodeName": "WinStyle", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 92, "col_offset": 47, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 93, "col_offset": 45, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 94, "col_offset": 47, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 95, "col_offset": 48, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 96, "col_offset": 46, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 99, "col_offset": 33, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 102, "col_offset": 45, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 103, "col_offset": 47, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 104, "col_offset": 48, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 105, "col_offset": 46, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 106, "col_offset": 49, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 107, "col_offset": 46, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 108, "col_offset": 47, "nodeName": "WinColor", "type": "Any"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "Style", "type": "Any"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "groups", "type": "Callable"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 147, "col_offset": 36, "nodeName": "start", "type": "int"}, {"lineNumber": 147, "col_offset": 42, "nodeName": "end", "type": "int"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "win32_calls", "type": "Any"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "func_args", "type": "Any"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "func_args", "type": "Any"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "func", "type": "Any"}, {"lineNumber": 178, "col_offset": 35, "nodeName": "on_stderr", "type": "bool"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "func", "type": "Any"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "params", "type": "Union[List[int], Any]"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "command", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "func", "type": "Any"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "cursor_up", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 171, "col_offset": 49, "nodeName": "param", "type": "Union[int, Any]"}, {"lineNumber": 174, "col_offset": 44, "nodeName": "on_stderr", "type": "bool"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 175, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 178, "col_offset": 35, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 181, "col_offset": 35, "nodeName": "on_stderr", "type": "bool"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "num_rows", "type": "int"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "num_rows", "type": "Union[int, Any]"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "winterm", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "func", "type": "Any"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "num_rows", "type": "Union[int, Any]"}, {"lineNumber": 174, "col_offset": 44, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 181, "col_offset": 35, "nodeName": "self", "type": "AnsiToWin32"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "params", "type": "Union[List[int], Any]"}, {"lineNumber": 183, "col_offset": 31, "nodeName": "params", "type": "Union[List[int], Any]"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "params", "type": "Union[List[int], Any]"}, {"lineNumber": 188, "col_offset": 37, "nodeName": "on_stderr", "type": "bool"}, {"lineNumber": 188, "col_offset": 37, "nodeName": "self", "type": "AnsiToWin32"}]