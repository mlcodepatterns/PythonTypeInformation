[{"lineNumber": 14, "col_offset": 0, "nodeName": "dependencies", "type": "Callable[[], Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "tamper", "type": "Callable[..., Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "__priority__", "type": "int"}, {"lineNumber": 12, "col_offset": 15, "nodeName": "LOW", "type": "int"}, {"lineNumber": 12, "col_offset": 15, "nodeName": "PRIORITY", "type": "Type[lib.core.enums.PRIORITY]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "blanks", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "retVal", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "payload", "type": "Any"}, {"lineNumber": 44, "col_offset": 7, "nodeName": "payload", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "retVal", "type": "Union[str, Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "retVal", "type": "str"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "quote", "type": "bool"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "doublequote", "type": "bool"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "firstspace", "type": "bool"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "retVal", "type": "str"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "payload", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "firstspace", "type": "bool"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "payload", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "isspace", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "firstspace", "type": "bool"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "retVal", "type": "str"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "i", "type": "Any"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "choice", "type": "Callable"}, {"lineNumber": 52, "col_offset": 44, "nodeName": "blanks", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "payload", "type": "Any"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "random", "type": "module"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "i", "type": "Any"}]