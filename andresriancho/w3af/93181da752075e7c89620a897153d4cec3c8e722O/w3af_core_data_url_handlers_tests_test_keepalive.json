[{"lineNumber": 44, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "test_get_and_remove_conn", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "test_timeout", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "test_free_connection", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "test_single_conn_mgr", "type": "Callable[[Any], Any]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "test_close_all_established_sockets", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "test_close_all_close_wait_sockets", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "close_all_sockets", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "test_get_available_conn", "type": "Callable[[Any], Any]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "test_get_available_conn_new_connection_requested", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "test_replace_conn", "type": "Callable[[Any], Any]"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "test_remove_conn", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "kahdler", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "_curr_check_failures", "type": "int"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "host", "type": "str"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "is_fresh", "type": "int"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "getresponse", "type": "str"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "kahdler", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "host", "type": "str"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "host", "type": "str"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "get_host", "type": "mock.MagicMock"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "get_full_url", "type": "mock.MagicMock"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "_start_transaction", "type": "mock.MagicMock"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "conn_factory", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "get_connection", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "resp", "type": "w3af.core.data.url.handlers.keepalive.http_response.HTTPResponse"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "will_close", "type": "bool"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "read", "type": "mock.MagicMock"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "getresponse", "type": "mock.MagicMock"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "conn_mgr_mock", "type": "mock.Mock"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "get_available_connection", "type": "mock.MagicMock"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "remove_connection", "type": "mock.MagicMock"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "_cm", "type": "mock.Mock"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "conn_mgr_mock", "type": "mock.Mock"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "kahdler", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "host", "type": "str"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "host", "type": "str"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "get_host", "type": "mock.MagicMock"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "_start_transaction", "type": "mock.MagicMock"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "conn_mgr", "type": "mock.Mock"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "get_available_connection", "type": "mock.MagicMock"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "remove_connection", "type": "mock.MagicMock"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "_cm", "type": "mock.Mock"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "conn_mgr", "type": "mock.Mock"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "kahdler", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "conn_mgr", "type": "mock.Mock"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "free_connection", "type": "mock.MagicMock"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "_cm", "type": "mock.Mock"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "conn_mgr", "type": "mock.Mock"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "conn_mgr_http", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "_cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "conn_mgr_https", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "_cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "keep_alive_http", "type": "w3af.core.data.url.handlers.keepalive.handler.HTTPHandler"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "uri_opener", "type": "urllib2.OpenerDirector"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "request", "type": "w3af.core.data.url.HTTPRequest.HTTPRequest"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "response", "type": "Optional[urllib.addinfourl]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "pid", "type": "int"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "connections_before", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "connections_after", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "new_connection", "type": "bool"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "_host_pool_size", "type": "int"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "cf", "type": "Callable[[Any], Any]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "conn_1", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "conn_2", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "t0", "type": "float"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "new_connection", "type": "bool"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "_host_pool_size", "type": "int"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "cf", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "conn_1", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "conn_2", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "cf", "type": "Callable[[Any], Any]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "bad_conn", "type": "mock.Mock"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "bad_conn", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "old_len", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "new_conn", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "conn", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "non_exist_host", "type": "str"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "KeepAliveHandler", "type": "Type[w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "kahdler", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "HTTPResponse", "type": "Type[w3af.core.data.url.handlers.keepalive.http_response.HTTPResponse]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "resp", "type": "w3af.core.data.url.handlers.keepalive.http_response.HTTPResponse"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "resp", "type": "w3af.core.data.url.handlers.keepalive.http_response.HTTPResponse"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "conn_mgr_mock", "type": "mock.Mock"}, {"lineNumber": 85, "col_offset": 49, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "conn_mgr_mock", "type": "mock.Mock"}, {"lineNumber": 86, "col_offset": 42, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "do_open", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 93, "col_offset": 55, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 93, "col_offset": 61, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 94, "col_offset": 71, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 95, "col_offset": 71, "nodeName": "conn_factory", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 96, "col_offset": 64, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 97, "col_offset": 64, "nodeName": "host", "type": "str"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "conn_mgr", "type": "mock.Mock"}, {"lineNumber": 117, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "conn_mgr", "type": "mock.Mock"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "URLTimeoutError", "type": "Type[w3af.core.data.url.handlers.keepalive.handler.URLTimeoutError]"}, {"lineNumber": 126, "col_offset": 43, "nodeName": "do_open", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 56, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "URLTimeoutError", "type": "Type[w3af.core.data.url.handlers.keepalive.handler.URLTimeoutError]"}, {"lineNumber": 127, "col_offset": 43, "nodeName": "do_open", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 56, "nodeName": "req", "type": "mock.Mock"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "conn_mgr", "type": "mock.Mock"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "_request_closed", "type": "Callable[[Any], None]"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 147, "col_offset": 57, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "conn_mgr_http", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "conn_mgr_https", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "close_all_sockets", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "close_all_sockets", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "HTTPHandler", "type": "Type[w3af.core.data.url.handlers.keepalive.handler.HTTPHandler]"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "build_opener", "type": "Callable[..., urllib2.OpenerDirector]"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "keep_alive_http", "type": "w3af.core.data.url.handlers.keepalive.handler.HTTPHandler"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "HTTPRequest", "type": "Type[w3af.core.data.url.HTTPRequest.HTTPRequest]"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "open", "type": "Callable[..., Optional[urllib.addinfourl]]"}, {"lineNumber": 172, "col_offset": 35, "nodeName": "request", "type": "w3af.core.data.url.HTTPRequest.HTTPRequest"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "sleep", "type": "Callable[[Union[float, int]], None]"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "wait", "type": "Any"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "getpid", "type": "Callable[[], int]"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "Process", "type": "Any"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "pid", "type": "int"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "get_connections", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "close_all", "type": "Callable[[], None]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "sleep", "type": "Callable[[Union[float, int]], None]"}, {"lineNumber": 184, "col_offset": 28, "nodeName": "get_connections", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "ConnectionManager", "type": "Type[w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 193, "col_offset": 23, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "get_available_connection", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 209, "col_offset": 50, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 209, "col_offset": 64, "nodeName": "cf", "type": "Callable[[Any], Any]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "free_connection", "type": "Callable[[Any], None]"}, {"lineNumber": 215, "col_offset": 32, "nodeName": "conn_1", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "get_available_connection", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 50, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 222, "col_offset": 64, "nodeName": "cf", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "conn_2", "type": "Any"}, {"lineNumber": 223, "col_offset": 30, "nodeName": "conn_1", "type": "Any"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 226, "col_offset": 26, "nodeName": "BaseFrameworkException", "type": "Type[w3af.core.controllers.exceptions.BaseFrameworkException]"}, {"lineNumber": 227, "col_offset": 26, "nodeName": "get_available_connection", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 227, "col_offset": 60, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 227, "col_offset": 74, "nodeName": "cf", "type": "Callable[[Any], Any]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "get_available_connection", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 242, "col_offset": 50, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 242, "col_offset": 64, "nodeName": "cf", "type": "Callable[[Any], Any]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "free_connection", "type": "Callable[[Any], None]"}, {"lineNumber": 248, "col_offset": 32, "nodeName": "conn_1", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "get_available_connection", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 254, "col_offset": 50, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 254, "col_offset": 64, "nodeName": "cf", "type": "Callable[[Any], Any]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "conn_1", "type": "Any"}, {"lineNumber": 255, "col_offset": 33, "nodeName": "conn_2", "type": "Any"}, {"lineNumber": 259, "col_offset": 19, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "replace_connection", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "bad_conn", "type": "mock.Mock"}, {"lineNumber": 260, "col_offset": 45, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 260, "col_offset": 59, "nodeName": "cf", "type": "Callable[[Any], Any]"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "get_available_connection", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 261, "col_offset": 52, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 261, "col_offset": 66, "nodeName": "cf", "type": "Callable[[Any], Any]"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "get_connections_total", "type": "Callable[..., Any]"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "replace_connection", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 265, "col_offset": 46, "nodeName": "bad_conn", "type": "Any"}, {"lineNumber": 265, "col_offset": 56, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 265, "col_offset": 70, "nodeName": "cf", "type": "Callable[[Any], Any]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertNotEquals", "type": "Callable[..., None]"}, {"lineNumber": 268, "col_offset": 29, "nodeName": "bad_conn", "type": "Any"}, {"lineNumber": 268, "col_offset": 39, "nodeName": "new_conn", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 59, "nodeName": "old_len", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "get_available_connection", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 279, "col_offset": 48, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "remove_connection", "type": "Callable[..., None]"}, {"lineNumber": 284, "col_offset": 34, "nodeName": "conn", "type": "Any"}, {"lineNumber": 284, "col_offset": 40, "nodeName": "non_exist_host", "type": "str"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "remove_connection", "type": "Callable[..., None]"}, {"lineNumber": 285, "col_offset": 34, "nodeName": "conn", "type": "Any"}, {"lineNumber": 285, "col_offset": 40, "nodeName": "request", "type": "mock.Mock"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 46, "nodeName": "host", "type": "str"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "socket", "type": "Type[socket.socket]"}, {"lineNumber": 81, "col_offset": 50, "nodeName": "resp", "type": "w3af.core.data.url.handlers.keepalive.http_response.HTTPResponse"}, {"lineNumber": 85, "col_offset": 72, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "_start_transaction", "type": "mock.MagicMock"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "get_available_connection", "type": "mock.MagicMock"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "remove_connection", "type": "mock.MagicMock"}, {"lineNumber": 117, "col_offset": 67, "nodeName": "conn", "type": "mock.Mock"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 43, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 43, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "call_args_list", "type": "mock._CallList"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "call_args_list", "type": "mock._CallList"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "free_connection", "type": "mock.MagicMock"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "HTTPHandler", "type": "Type[w3af.core.data.url.handlers.keepalive.handler.HTTPHandler]"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "HTTPSHandler", "type": "Type[w3af.core.data.url.handlers.keepalive.handler.HTTPSHandler]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "urllib2", "type": "module"}, {"lineNumber": 171, "col_offset": 30, "nodeName": "URL", "type": "Type[w3af.core.data.parsers.doc.url.URL]"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "uri_opener", "type": "urllib2.OpenerDirector"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "response", "type": "Optional[urllib.addinfourl]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "time", "type": "module"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "psutil", "type": "Any"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "keep_alive_http", "type": "w3af.core.data.url.handlers.keepalive.handler.HTTPHandler"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "time", "type": "module"}, {"lineNumber": 184, "col_offset": 28, "nodeName": "p", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "connections_after", "type": "Any"}, {"lineNumber": 186, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 186, "col_offset": 52, "nodeName": "connections_before", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 203, "col_offset": 33, "nodeName": "_hostmap", "type": "Dict[Any, Set[Any]]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 204, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 204, "col_offset": 33, "nodeName": "_used_cons", "type": "Set[Any]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 205, "col_offset": 33, "nodeName": "_free_conns", "type": "Set[Any]"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 209, "col_offset": 50, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 210, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "_hostmap", "type": "Dict[Any, Set[Any]]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "_used_cons", "type": "Set[Any]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 212, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "_free_conns", "type": "Set[Any]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 216, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 216, "col_offset": 33, "nodeName": "_hostmap", "type": "Dict[Any, Set[Any]]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 217, "col_offset": 33, "nodeName": "_used_cons", "type": "Set[Any]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 218, "col_offset": 33, "nodeName": "_free_conns", "type": "Set[Any]"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 222, "col_offset": 50, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "time", "type": "module"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 227, "col_offset": 26, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 227, "col_offset": 60, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 236, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 236, "col_offset": 33, "nodeName": "_hostmap", "type": "Dict[Any, Set[Any]]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 237, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 237, "col_offset": 33, "nodeName": "_used_cons", "type": "Set[Any]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 238, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 238, "col_offset": 33, "nodeName": "_free_conns", "type": "Set[Any]"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 242, "col_offset": 50, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 243, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 243, "col_offset": 33, "nodeName": "_hostmap", "type": "Dict[Any, Set[Any]]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 244, "col_offset": 33, "nodeName": "_used_cons", "type": "Set[Any]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 245, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 245, "col_offset": 33, "nodeName": "_free_conns", "type": "Set[Any]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 249, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 249, "col_offset": 33, "nodeName": "_hostmap", "type": "Dict[Any, Set[Any]]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 250, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 250, "col_offset": 33, "nodeName": "_used_cons", "type": "Set[Any]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 251, "col_offset": 33, "nodeName": "_free_conns", "type": "Set[Any]"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 254, "col_offset": 50, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 258, "col_offset": 23, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 260, "col_offset": 45, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 261, "col_offset": 52, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 265, "col_offset": 56, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 271, "col_offset": 26, "nodeName": "get_connections_total", "type": "Callable[..., Any]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "get_connections_total", "type": "Callable[..., Any]"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 279, "col_offset": 48, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "get_connections_total", "type": "Callable[..., Any]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 285, "col_offset": 40, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "get_connections_total", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "socket", "type": "module"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "kah", "type": "w3af.core.data.url.handlers.keepalive.handler.KeepAliveHandler"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "conn_mgr_mock", "type": "mock.Mock"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "conn_mgr_mock", "type": "mock.Mock"}, {"lineNumber": 110, "col_offset": 46, "nodeName": "host", "type": "str"}, {"lineNumber": 110, "col_offset": 52, "nodeName": "host", "type": "str"}, {"lineNumber": 113, "col_offset": 55, "nodeName": "timeout", "type": "Type[socket.timeout]"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "get_available_connection", "type": "mock.MagicMock"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "remove_connection", "type": "mock.MagicMock"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "conn_mgr", "type": "mock.Mock"}, {"lineNumber": 171, "col_offset": 34, "nodeName": "get_moth_http", "type": "Callable[..., str]"}, {"lineNumber": 203, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 204, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 205, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 216, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 217, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 218, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 227, "col_offset": 26, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 228, "col_offset": 38, "nodeName": "t0", "type": "float"}, {"lineNumber": 236, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 237, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 238, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 243, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 244, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 245, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 249, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 250, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 251, "col_offset": 33, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 271, "col_offset": 26, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 279, "col_offset": 72, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "cm", "type": "w3af.core.data.url.handlers.keepalive.connection_manager.ConnectionManager"}, {"lineNumber": 113, "col_offset": 55, "nodeName": "socket", "type": "module"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "conn_mgr", "type": "mock.Mock"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "conn_mgr", "type": "mock.Mock"}, {"lineNumber": 203, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 204, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 205, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 216, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 217, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 218, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 236, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 237, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 238, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 243, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 244, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 245, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 249, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 250, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 251, "col_offset": 33, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 271, "col_offset": 26, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "self", "type": "TestConnectionMgr"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "time", "type": "module"}]