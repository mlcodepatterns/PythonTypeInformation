[{"lineNumber": 29, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "test_equal", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "test_middle_0", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "test_middle_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "test_start_0", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "test_start_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "test_end", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "test_nono", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "test_all_no_sep", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "test_middle_not_aligned", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "test_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "test_special_chars", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "test_equal", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "test_middle_0", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "test_middle_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "test_start_0", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "test_start_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "test_end", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "test_nono", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "test_all_no_sep", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "test_middle_not_aligned", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "test_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "test_special_chars", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "test_split_by_sep_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "test_split_by_sep_2", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "test_split_by_sep_perf", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "a", "type": "str"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "b", "type": "str"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "a", "type": "str"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "b", "type": "str"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "a", "type": "str"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "b", "type": "str"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "a", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "b", "type": "str"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "a", "type": "str"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "b", "type": "str"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "a", "type": "str"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "b", "type": "str"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "a", "type": "str"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "b", "type": "str"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "a", "type": "str"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "b", "type": "str"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "a", "type": "str"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "b", "type": "str"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "a", "type": "str"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "b", "type": "str"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "result", "type": "List[str]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "result", "type": "List[str]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "loops", "type": "int"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "split_by_sep", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "result", "type": "List[str]"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "split_by_sep", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "result", "type": "List[str]"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "__doc__", "type": "Union[str, unicode]"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "__doc__", "type": "Union[str, unicode]"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "xrange", "type": "Type[xrange]"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "loops", "type": "int"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "_input", "type": "Union[str, unicode]"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "inputs", "type": "List[Union[str, unicode]]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestChunkedDiff"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "chunked_diff", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestChunkedDiff"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "chunked_diff", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestChunkedDiff"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "chunked_diff", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "a", "type": "str"}, {"lineNumber": 41, "col_offset": 41, "nodeName": "b", "type": "str"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestChunkedDiff"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "chunked_diff", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestChunkedDiff"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "chunked_diff", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 50, "col_offset": 38, "nodeName": "a", "type": "str"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "b", "type": "str"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestChunkedDiff"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "chunked_diff", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestChunkedDiff"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "chunked_diff", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestChunkedDiff"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "chunked_diff", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "a", "type": "str"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "b", "type": "str"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestChunkedDiff"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "chunked_diff", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "a", "type": "str"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "b", "type": "str"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestChunkedDiff"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "chunked_diff", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestChunkedDiff"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "chunked_diff", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "a", "type": "str"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "b", "type": "str"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestDiffDMP"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "diff_dmp", "type": "Callable[[Any, Any], Tuple[str, str]]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestDiffDMP"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "diff_dmp", "type": "Callable[[Any, Any], Tuple[str, str]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestDiffDMP"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "diff_dmp", "type": "Callable[[Any, Any], Tuple[str, str]]"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "a", "type": "str"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "b", "type": "str"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestDiffDMP"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "diff_dmp", "type": "Callable[[Any, Any], Tuple[str, str]]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestDiffDMP"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "diff_dmp", "type": "Callable[[Any, Any], Tuple[str, str]]"}, {"lineNumber": 100, "col_offset": 34, "nodeName": "a", "type": "str"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "b", "type": "str"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestDiffDMP"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "diff_dmp", "type": "Callable[[Any, Any], Tuple[str, str]]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestDiffDMP"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "diff_dmp", "type": "Callable[[Any, Any], Tuple[str, str]]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestDiffDMP"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "diff_dmp", "type": "Callable[[Any, Any], Tuple[str, str]]"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "a", "type": "str"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "b", "type": "str"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TestDiffDMP"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "diff_dmp", "type": "Callable[[Any, Any], Tuple[str, str]]"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "a", "type": "str"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "b", "type": "str"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "TestDiffDMP"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "diff_dmp", "type": "Callable[[Any, Any], Tuple[str, str]]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestDiffDMP"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "diff_dmp", "type": "Callable[[Any, Any], Tuple[str, str]]"}, {"lineNumber": 126, "col_offset": 34, "nodeName": "a", "type": "str"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "b", "type": "str"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestSplitBySep"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "TestSplitBySep"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "re", "type": "module"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "split_by_sep", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "_input", "type": "Union[str, unicode]"}]