[{"lineNumber": 14, "col_offset": 0, "nodeName": "cleanupVals", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "parseXmlNode", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "loadPayloads", "type": "Callable[[], Any]"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "text", "type": "Union[int, Any, str]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "element", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "element", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "doc", "type": "xml.etree.ElementTree.ElementTree"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "root", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 15, "col_offset": 7, "nodeName": "tag", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 18, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "text", "type": "Any"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "basestring", "type": "Type[basestring]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "text", "type": "Union[int, str]"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "getiterator", "type": "Callable[..., List[xml.etree.ElementTree.Element]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "boundary", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "child", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "getiterator", "type": "Callable[..., List[xml.etree.ElementTree.Element]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "test", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "child", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "parse", "type": "Callable[..., xml.etree.ElementTree.ElementTree]"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "PAYLOADS_XML", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "getroot", "type": "Callable[[], xml.etree.ElementTree.Element]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "parseXmlNode", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "root", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "split", "type": "Any"}, {"lineNumber": 21, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "text", "type": "Any"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "count", "type": "int"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "text", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "node", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "AttribDict", "type": "Type[lib.core.datatype.AttribDict]"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "getchildren", "type": "Callable[[], List[xml.etree.ElementTree.Element]]"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "text", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "boundary", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "node", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "AttribDict", "type": "Type[lib.core.datatype.AttribDict]"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "getchildren", "type": "Callable[[], List[xml.etree.ElementTree.Element]]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "test", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "et", "type": "module"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "paths", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "doc", "type": "xml.etree.ElementTree.ElementTree"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "text", "type": "Any"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "isdigit", "type": "Any"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 19, "col_offset": 19, "nodeName": "text", "type": "Any"}, {"lineNumber": 19, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 19, "col_offset": 52, "nodeName": "text", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "count", "type": "int"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "element", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "child", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "values", "type": "Any"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "values", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "boundaries", "type": "Any"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "element", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "text", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "values", "type": "Any"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "values", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "gchild", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "tests", "type": "Any"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "text", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 28, "col_offset": 30, "nodeName": "tag", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "text", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "cleanupVals", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "text", "type": "Any"}, {"lineNumber": 39, "col_offset": 49, "nodeName": "tag", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "boundary", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "boundary", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "conf", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "child", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "strip", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "cleanupVals", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "text", "type": "Any"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "tag", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "test", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "getchildren", "type": "Callable[[], List[xml.etree.ElementTree.Element]]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "conf", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "count", "type": "int"}, {"lineNumber": 25, "col_offset": 36, "nodeName": "isdigit", "type": "Any"}, {"lineNumber": 25, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "_", "type": "Any"}, {"lineNumber": 25, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 25, "col_offset": 57, "nodeName": "_", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "text", "type": "Any"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "child", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 39, "col_offset": 49, "nodeName": "child", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "tag", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "tag", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "text", "type": "Any"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "child", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "child", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "tag", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "test", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "test", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "AttribDict", "type": "Type[lib.core.datatype.AttribDict]"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "child", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "tag", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "prevtext", "type": "Any"}, {"lineNumber": 65, "col_offset": 54, "nodeName": "text", "type": "Any"}, {"lineNumber": 25, "col_offset": 36, "nodeName": "_", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "child", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "child", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "child", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "child", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "getchildren", "type": "Callable[[], List[xml.etree.ElementTree.Element]]"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "tag", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "tag", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "gchild", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "test", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 63, "col_offset": 55, "nodeName": "prevtext", "type": "Any"}, {"lineNumber": 63, "col_offset": 65, "nodeName": "text", "type": "Any"}, {"lineNumber": 65, "col_offset": 54, "nodeName": "gchild", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "child", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "child", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "child", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 61, "col_offset": 42, "nodeName": "tag", "type": "Any"}, {"lineNumber": 62, "col_offset": 35, "nodeName": "test", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 62, "col_offset": 51, "nodeName": "tag", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "test", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 63, "col_offset": 40, "nodeName": "tag", "type": "Any"}, {"lineNumber": 63, "col_offset": 65, "nodeName": "gchild", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "test", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 65, "col_offset": 40, "nodeName": "tag", "type": "Any"}, {"lineNumber": 61, "col_offset": 42, "nodeName": "child", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "tag", "type": "Any"}, {"lineNumber": 62, "col_offset": 51, "nodeName": "gchild", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "tag", "type": "Any"}, {"lineNumber": 63, "col_offset": 40, "nodeName": "gchild", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "tag", "type": "Any"}, {"lineNumber": 65, "col_offset": 40, "nodeName": "gchild", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "child", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "child", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "child", "type": "xml.etree.ElementTree.Element"}]