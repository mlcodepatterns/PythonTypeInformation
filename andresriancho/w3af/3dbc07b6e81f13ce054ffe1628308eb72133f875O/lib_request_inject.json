[{"lineNumber": 55, "col_offset": 0, "nodeName": "_goDns", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "_goInference", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "_goInferenceFields", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 0, "nodeName": "_goInferenceProxy", "type": "Callable[..., Any]"}, {"lineNumber": 282, "col_offset": 0, "nodeName": "_goBooleanProxy", "type": "Callable[[Any], Any]"}, {"lineNumber": 316, "col_offset": 0, "nodeName": "_goUnion", "type": "Callable[..., Any]"}, {"lineNumber": 329, "col_offset": 0, "nodeName": "getValue", "type": "Callable[..., Any]"}, {"lineNumber": 453, "col_offset": 0, "nodeName": "goStacked", "type": "Callable[..., Any]"}, {"lineNumber": 473, "col_offset": 0, "nodeName": "checkBooleanExpression", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "value", "type": "None"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "value", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "start", "type": "float"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "value", "type": "None"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "count", "type": "int"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "value", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "timeBasedCompare", "type": "bool"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "value", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "origExpr", "type": "None"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "field", "type": "Any"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "expressionFieldsList", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "query", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "query", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "payload", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "count", "type": "None"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "startLimit", "type": "int"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "stopLimit", "type": "None"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "outputs", "type": "lib.core.bigarray.BigArray"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "rdbRegExp", "type": "Optional[Match[Any]]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 289, "col_offset": 7, "nodeName": "dnsName", "type": "Any"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "vector", "type": "Any"}, {"lineNumber": 298, "col_offset": 13, "nodeName": "vector", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "vector", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "query", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "query", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "payload", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "timeBasedCompare", "type": "bool"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 314, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 327, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 335, "col_offset": 7, "nodeName": "hexConvert", "type": "Any"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "safeCharEncode", "type": "bool"}, {"lineNumber": 338, "col_offset": 24, "nodeName": "safeCharEncode", "type": "bool"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "resumeValues", "type": "bool"}, {"lineNumber": 339, "col_offset": 22, "nodeName": "resumeValue", "type": "bool"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "safeCharEncode", "type": "bool"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "expression", "type": "Any"}, {"lineNumber": 465, "col_offset": 7, "nodeName": "direct", "type": "Any"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "query", "type": "Any"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "query", "type": "Any"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "payload", "type": "Any"}, {"lineNumber": 58, "col_offset": 7, "nodeName": "dnsName", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "dnsTest", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "_goDns", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "payload", "type": "Any"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "expression", "type": "Any"}, {"lineNumber": 74, "col_offset": 7, "nodeName": "value", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "technique", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "inferenceMode", "type": "bool"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "inferenceMode", "type": "bool"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "output", "type": "None"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "initTechnique", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "technique", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "prefixQuery", "type": "Callable[..., Any]"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "vector", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "suffixQuery", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "query", "type": "Any"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "payload", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 14, "nodeName": "BigArray", "type": "Type[lib.core.bigarray.BigArray]"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "unpack", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "_", "type": "Optional[Match[Any]]"}, {"lineNumber": 155, "col_offset": 7, "nodeName": "_", "type": "Optional[Match[Any]]"}, {"lineNumber": 155, "col_offset": 10, "nodeName": "_", "type": "Any"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "_", "type": "Optional[Match[Any]]"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "_", "type": "Optional[Match[Any]]"}, {"lineNumber": 155, "col_offset": 19, "nodeName": "expressionFieldsList", "type": "List[Any]"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "expressionFields", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 155, "col_offset": 59, "nodeName": "_", "type": "Optional[Match[Any]]"}, {"lineNumber": 155, "col_offset": 63, "nodeName": "getFields", "type": "Callable"}, {"lineNumber": 155, "col_offset": 79, "nodeName": "expression", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "search", "type": "Callable"}, {"lineNumber": 157, "col_offset": 55, "nodeName": "expression", "type": "Any"}, {"lineNumber": 157, "col_offset": 67, "nodeName": "I", "type": "int"}, {"lineNumber": 158, "col_offset": 7, "nodeName": "rdbRegExp", "type": "Optional[Match[Any]]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "expressionFieldsList", "type": "List[Optional[Union[Any, str]]]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "infoMsg", "type": "str"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "infoMsg", "type": "str"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "infoMsg", "type": "str"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "infoMsg", "type": "str"}, {"lineNumber": 173, "col_offset": 7, "nodeName": "fromUser", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "limitCond", "type": "bool"}, {"lineNumber": 278, "col_offset": 14, "nodeName": "_goInferenceFields", "type": "Callable[..., Any]"}, {"lineNumber": 278, "col_offset": 33, "nodeName": "expression", "type": "Any"}, {"lineNumber": 278, "col_offset": 45, "nodeName": "expressionFields", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 278, "col_offset": 63, "nodeName": "expressionFieldsList", "type": "Union[List[Optional[Union[Any, str]]], List[Any]]"}, {"lineNumber": 278, "col_offset": 85, "nodeName": "payload", "type": "Any"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "initTechnique", "type": "Callable[..., None]"}, {"lineNumber": 287, "col_offset": 18, "nodeName": "technique", "type": "Any"}, {"lineNumber": 289, "col_offset": 7, "nodeName": "conf", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "payload", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "replace", "type": "Any"}, {"lineNumber": 299, "col_offset": 43, "nodeName": "expression", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "prefixQuery", "type": "Callable[..., Any]"}, {"lineNumber": 300, "col_offset": 30, "nodeName": "vector", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "suffixQuery", "type": "Callable[..., Any]"}, {"lineNumber": 301, "col_offset": 30, "nodeName": "query", "type": "Any"}, {"lineNumber": 302, "col_offset": 14, "nodeName": "payload", "type": "Callable[..., Any]"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "technique", "type": "Any"}, {"lineNumber": 306, "col_offset": 13, "nodeName": "hashDBRetrieve", "type": "Callable[..., Any]"}, {"lineNumber": 306, "col_offset": 28, "nodeName": "expression", "type": "Any"}, {"lineNumber": 308, "col_offset": 7, "nodeName": "output", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 322, "col_offset": 13, "nodeName": "unionUse", "type": "Callable[..., Any]"}, {"lineNumber": 322, "col_offset": 22, "nodeName": "expression", "type": "Any"}, {"lineNumber": 324, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 324, "col_offset": 18, "nodeName": "output", "type": "Any"}, {"lineNumber": 324, "col_offset": 26, "nodeName": "basestring", "type": "Type[basestring]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 335, "col_offset": 7, "nodeName": "conf", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "charsetType", "type": "int"}, {"lineNumber": 336, "col_offset": 22, "nodeName": "HEXADECIMAL", "type": "int"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 341, "col_offset": 7, "nodeName": "suppressOutput", "type": "bool"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "disableStdOut", "type": "bool"}, {"lineNumber": 343, "col_offset": 47, "nodeName": "suppressOutput", "type": "bool"}, {"lineNumber": 357, "col_offset": 11, "nodeName": "direct", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "resumeValues", "type": "bool"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "tbl", "type": "Any"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "db", "type": "Any"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 445, "col_offset": 67, "nodeName": "dbmsHandler", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 451, "col_offset": 11, "nodeName": "extractExpectedValue", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 451, "col_offset": 32, "nodeName": "value", "type": "Any"}, {"lineNumber": 451, "col_offset": 39, "nodeName": "expected", "type": "str"}, {"lineNumber": 454, "col_offset": 7, "nodeName": "STACKED", "type": "Any"}, {"lineNumber": 454, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "technique", "type": "Any"}, {"lineNumber": 455, "col_offset": 23, "nodeName": "STACKED", "type": "Any"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "technique", "type": "Any"}, {"lineNumber": 463, "col_offset": 17, "nodeName": "cleanQuery", "type": "Callable[[Any], Any]"}, {"lineNumber": 463, "col_offset": 28, "nodeName": "expression", "type": "Any"}, {"lineNumber": 465, "col_offset": 7, "nodeName": "conf", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 468, "col_offset": 12, "nodeName": "prefixQuery", "type": "Callable[..., Any]"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "suffixQuery", "type": "Callable[..., Any]"}, {"lineNumber": 469, "col_offset": 30, "nodeName": "query", "type": "Any"}, {"lineNumber": 470, "col_offset": 14, "nodeName": "payload", "type": "Callable[..., Any]"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "queryPage", "type": "Callable[..., Any]"}, {"lineNumber": 471, "col_offset": 22, "nodeName": "payload", "type": "Any"}, {"lineNumber": 474, "col_offset": 11, "nodeName": "getValue", "type": "Callable[..., Any]"}, {"lineNumber": 474, "col_offset": 20, "nodeName": "expression", "type": "Any"}, {"lineNumber": 58, "col_offset": 7, "nodeName": "conf", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "dnsTest", "type": "Any"}, {"lineNumber": 58, "col_offset": 56, "nodeName": "testMode", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "dnsTest", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "time", "type": "module"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "TIME", "type": "Any"}, {"lineNumber": 77, "col_offset": 65, "nodeName": "STACKED", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "timeBasedCompare", "type": "bool"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "dnsTest", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "length", "type": "None"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "count", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "bisection", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "payload", "type": "Any"}, {"lineNumber": 98, "col_offset": 42, "nodeName": "expression", "type": "Union[Any, str]"}, {"lineNumber": 98, "col_offset": 54, "nodeName": "length", "type": "Any"}, {"lineNumber": 98, "col_offset": 62, "nodeName": "charsetType", "type": "Any"}, {"lineNumber": 98, "col_offset": 75, "nodeName": "firstChar", "type": "Any"}, {"lineNumber": 98, "col_offset": 86, "nodeName": "lastChar", "type": "Any"}, {"lineNumber": 98, "col_offset": 96, "nodeName": "dump", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "bruteMode", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "debugMsg", "type": "str"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "num", "type": "Any"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "origExpr", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "expression", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "expression", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "expressionFieldsList", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "expressionReplaced", "type": "Any"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "expression", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "expressionReplaced", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "_goInference", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 30, "nodeName": "payload", "type": "Any"}, {"lineNumber": 126, "col_offset": 39, "nodeName": "expressionReplaced", "type": "Any"}, {"lineNumber": 126, "col_offset": 59, "nodeName": "charsetType", "type": "Any"}, {"lineNumber": 126, "col_offset": 72, "nodeName": "firstChar", "type": "Any"}, {"lineNumber": 126, "col_offset": 83, "nodeName": "lastChar", "type": "Any"}, {"lineNumber": 126, "col_offset": 93, "nodeName": "dump", "type": "Any"}, {"lineNumber": 126, "col_offset": 99, "nodeName": "field", "type": "Any"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "num", "type": "Any"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "expression", "type": "Optional[Any]"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "origExpr", "type": "Optional[Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "agent", "type": "lib.core.agent.Agent"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "agent", "type": "lib.core.agent.Agent"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "agent", "type": "lib.core.agent.Agent"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "query", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "_goInference", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 28, "nodeName": "payload", "type": "Any"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "expression", "type": "Any"}, {"lineNumber": 153, "col_offset": 49, "nodeName": "charsetType", "type": "Any"}, {"lineNumber": 153, "col_offset": 62, "nodeName": "firstChar", "type": "Any"}, {"lineNumber": 153, "col_offset": 73, "nodeName": "lastChar", "type": "Any"}, {"lineNumber": 153, "col_offset": 83, "nodeName": "dump", "type": "Any"}, {"lineNumber": 155, "col_offset": 63, "nodeName": "agent", "type": "lib.core.agent.Agent"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 157, "col_offset": 67, "nodeName": "re", "type": "module"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "isDbms", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 36, "nodeName": "FIREBIRD", "type": "str"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "expressionFields", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 161, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "expressionFieldsList", "type": "Union[List[Optional[Union[Any, str]]], List[Any]]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "infoMsg", "type": "str"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "expression", "type": "Any"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "limitCond", "type": "bool"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "topLimit", "type": "Optional[Match[Any]]"}, {"lineNumber": 177, "col_offset": 41, "nodeName": "startLimit", "type": "Any"}, {"lineNumber": 177, "col_offset": 53, "nodeName": "stopLimit", "type": "Any"}, {"lineNumber": 177, "col_offset": 65, "nodeName": "limitCondition", "type": "Callable"}, {"lineNumber": 177, "col_offset": 86, "nodeName": "expression", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "test", "type": "bool"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "test", "type": "bool"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "expression", "type": "Any"}, {"lineNumber": 278, "col_offset": 106, "nodeName": "charsetType", "type": "Any"}, {"lineNumber": 278, "col_offset": 129, "nodeName": "firstChar", "type": "Any"}, {"lineNumber": 278, "col_offset": 149, "nodeName": "lastChar", "type": "Any"}, {"lineNumber": 278, "col_offset": 164, "nodeName": "dump", "type": "Any"}, {"lineNumber": 280, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 287, "col_offset": 18, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "prefixQuery", "type": "Callable[..., Any]"}, {"lineNumber": 290, "col_offset": 34, "nodeName": "vector", "type": "Any"}, {"lineNumber": 291, "col_offset": 16, "nodeName": "suffixQuery", "type": "Callable[..., Any]"}, {"lineNumber": 291, "col_offset": 34, "nodeName": "query", "type": "Any"}, {"lineNumber": 292, "col_offset": 18, "nodeName": "payload", "type": "Callable[..., Any]"}, {"lineNumber": 293, "col_offset": 17, "nodeName": "_goDns", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 293, "col_offset": 24, "nodeName": "payload", "type": "Any"}, {"lineNumber": 293, "col_offset": 33, "nodeName": "expression", "type": "Any"}, {"lineNumber": 295, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 296, "col_offset": 19, "nodeName": "output", "type": "Any"}, {"lineNumber": 298, "col_offset": 13, "nodeName": "data", "type": "Any"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "vector", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "agent", "type": "lib.core.agent.Agent"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "agent", "type": "lib.core.agent.Agent"}, {"lineNumber": 302, "col_offset": 14, "nodeName": "agent", "type": "lib.core.agent.Agent"}, {"lineNumber": 302, "col_offset": 37, "nodeName": "query", "type": "Any"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 304, "col_offset": 40, "nodeName": "TIME", "type": "Any"}, {"lineNumber": 304, "col_offset": 64, "nodeName": "STACKED", "type": "Any"}, {"lineNumber": 309, "col_offset": 17, "nodeName": "queryPage", "type": "Callable[..., Any]"}, {"lineNumber": 309, "col_offset": 35, "nodeName": "payload", "type": "Any"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 322, "col_offset": 41, "nodeName": "unpack", "type": "Any"}, {"lineNumber": 322, "col_offset": 54, "nodeName": "dump", "type": "Any"}, {"lineNumber": 325, "col_offset": 17, "nodeName": "parseUnionPage", "type": "Callable[[Any], Any]"}, {"lineNumber": 325, "col_offset": 32, "nodeName": "output", "type": "Any"}, {"lineNumber": 336, "col_offset": 22, "nodeName": "CHARSET_TYPE", "type": "Type[lib.core.enums.CHARSET_TYPE]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "pushValue", "type": "Callable[[Any], None]"}, {"lineNumber": 342, "col_offset": 18, "nodeName": "disableStdOut", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "pushValue", "type": "Callable[[Any], None]"}, {"lineNumber": 346, "col_offset": 18, "nodeName": "db", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "pushValue", "type": "Callable[[Any], None]"}, {"lineNumber": 347, "col_offset": 18, "nodeName": "tbl", "type": "Any"}, {"lineNumber": 349, "col_offset": 11, "nodeName": "expected", "type": "str"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "BOOL", "type": "str"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "forgeCaseExpression", "type": "Any"}, {"lineNumber": 350, "col_offset": 34, "nodeName": "booleanExpression", "type": "Any"}, {"lineNumber": 350, "col_offset": 54, "nodeName": "expression", "type": "Any"}, {"lineNumber": 357, "col_offset": 11, "nodeName": "conf", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "conf", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 437, "col_offset": 19, "nodeName": "popValue", "type": "Callable[[], Any]"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "conf", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 438, "col_offset": 18, "nodeName": "popValue", "type": "Callable[[], Any]"}, {"lineNumber": 440, "col_offset": 11, "nodeName": "suppressOutput", "type": "bool"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "disableStdOut", "type": "Any"}, {"lineNumber": 445, "col_offset": 11, "nodeName": "testMode", "type": "Any"}, {"lineNumber": 445, "col_offset": 27, "nodeName": "value", "type": "Any"}, {"lineNumber": 445, "col_offset": 45, "nodeName": "getDbms", "type": "Callable[[], Any]"}, {"lineNumber": 445, "col_offset": 67, "nodeName": "conf", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 445, "col_offset": 92, "nodeName": "noCast", "type": "Any"}, {"lineNumber": 445, "col_offset": 112, "nodeName": "hexConvert", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "singleTimeWarnMessage", "type": "Callable[[Any], None]"}, {"lineNumber": 449, "col_offset": 30, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 454, "col_offset": 7, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 454, "col_offset": 36, "nodeName": "injection", "type": "Any"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 455, "col_offset": 23, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 457, "col_offset": 25, "nodeName": "getPublicTypeMembers", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 457, "col_offset": 46, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 466, "col_offset": 15, "nodeName": "direct", "type": "Callable[..., Any]"}, {"lineNumber": 466, "col_offset": 22, "nodeName": "expression", "type": "Any"}, {"lineNumber": 468, "col_offset": 12, "nodeName": "agent", "type": "lib.core.agent.Agent"}, {"lineNumber": 468, "col_offset": 38, "nodeName": "expression", "type": "Any"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "agent", "type": "lib.core.agent.Agent"}, {"lineNumber": 470, "col_offset": 14, "nodeName": "agent", "type": "lib.core.agent.Agent"}, {"lineNumber": 470, "col_offset": 37, "nodeName": "query", "type": "Any"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "Request", "type": "Type[lib.request.connect.Connect]"}, {"lineNumber": 471, "col_offset": 53, "nodeName": "silent", "type": "Any"}, {"lineNumber": 474, "col_offset": 41, "nodeName": "BOOL", "type": "str"}, {"lineNumber": 474, "col_offset": 68, "nodeName": "BINARY", "type": "int"}, {"lineNumber": 474, "col_offset": 124, "nodeName": "expectingNone", "type": "Any"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 58, "col_offset": 56, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 58, "col_offset": 72, "nodeName": "getDbms", "type": "Callable[[], Any]"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "dnsTest", "type": "Callable[[Any], None]"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "payload", "type": "Any"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "dnsUse", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "payload", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "expression", "type": "Any"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 77, "col_offset": 65, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "eta", "type": "Any"}, {"lineNumber": 80, "col_offset": 46, "nodeName": "getIdentifiedDbms", "type": "Callable[[], Any]"}, {"lineNumber": 80, "col_offset": 137, "nodeName": "timeBasedCompare", "type": "bool"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "field", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "expression", "type": "str"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "nulledCastedField", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "injExpression", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "injExpression", "type": "Union[Any, str]"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "expression", "type": "Union[Any, str]"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "queryOutputLength", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "injExpression", "type": "Union[str, Any]"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "payload", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "debugMsg", "type": "str"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "field", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "limitQuery", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 42, "nodeName": "num", "type": "Any"}, {"lineNumber": 119, "col_offset": 47, "nodeName": "expression", "type": "Any"}, {"lineNumber": 119, "col_offset": 59, "nodeName": "field", "type": "Any"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "replace", "type": "Any"}, {"lineNumber": 124, "col_offset": 52, "nodeName": "expressionFields", "type": "Any"}, {"lineNumber": 124, "col_offset": 70, "nodeName": "field", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "Backend", "type": "Type[lib.core.common.Backend]"}, {"lineNumber": 158, "col_offset": 36, "nodeName": "DBMS", "type": "Type[lib.core.enums.DBMS]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "upper", "type": "Any"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "FROM_DUMMY_TABLE", "type": "Dict[str, str]"}, {"lineNumber": 176, "col_offset": 14, "nodeName": "search", "type": "Callable"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "SQL_SCALAR_REGEX", "type": "str"}, {"lineNumber": 176, "col_offset": 42, "nodeName": "expression", "type": "Any"}, {"lineNumber": 176, "col_offset": 54, "nodeName": "I", "type": "int"}, {"lineNumber": 177, "col_offset": 65, "nodeName": "agent", "type": "lib.core.agent.Agent"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "countFirstField", "type": "Any"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "countedExpression", "type": "Any"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "outputs", "type": "lib.core.bigarray.BigArray"}, {"lineNumber": 275, "col_offset": 40, "nodeName": "FROM_DUMMY_TABLE", "type": "Dict[str, str]"}, {"lineNumber": 275, "col_offset": 61, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 276, "col_offset": 22, "nodeName": "FROM_DUMMY_TABLE", "type": "Dict[str, str]"}, {"lineNumber": 280, "col_offset": 58, "nodeName": "isNoneValue", "type": "Callable[[Any], bool]"}, {"lineNumber": 280, "col_offset": 70, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "agent", "type": "lib.core.agent.Agent"}, {"lineNumber": 291, "col_offset": 16, "nodeName": "agent", "type": "lib.core.agent.Agent"}, {"lineNumber": 292, "col_offset": 18, "nodeName": "agent", "type": "lib.core.agent.Agent"}, {"lineNumber": 292, "col_offset": 41, "nodeName": "query", "type": "Any"}, {"lineNumber": 298, "col_offset": 13, "nodeName": "injection", "type": "Any"}, {"lineNumber": 298, "col_offset": 31, "nodeName": "technique", "type": "Any"}, {"lineNumber": 304, "col_offset": 40, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 304, "col_offset": 64, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 309, "col_offset": 17, "nodeName": "Request", "type": "Type[lib.request.connect.Connect]"}, {"lineNumber": 309, "col_offset": 61, "nodeName": "timeBasedCompare", "type": "bool"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "hashDBWrite", "type": "Callable[..., None]"}, {"lineNumber": 312, "col_offset": 24, "nodeName": "expression", "type": "Any"}, {"lineNumber": 312, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "getCurrentThreadData", "type": "Callable[[], lib.core.threads._ThreadData]"}, {"lineNumber": 346, "col_offset": 18, "nodeName": "conf", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 347, "col_offset": 18, "nodeName": "conf", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "EXPECTED", "type": "Type[lib.core.enums.EXPECTED]"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 353, "col_offset": 16, "nodeName": "booleanExpression", "type": "str"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "forgeCaseExpression", "type": "Any"}, {"lineNumber": 358, "col_offset": 20, "nodeName": "direct", "type": "Callable[..., Any]"}, {"lineNumber": 360, "col_offset": 13, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "query", "type": "Any"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "query", "type": "Any"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "value", "type": "None"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "found", "type": "bool"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "count", "type": "int"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "errMsg", "type": "str"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "errMsg", "type": "str"}, {"lineNumber": 441, "col_offset": 51, "nodeName": "popValue", "type": "Callable[[], Any]"}, {"lineNumber": 445, "col_offset": 11, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 445, "col_offset": 45, "nodeName": "Backend", "type": "Type[lib.core.common.Backend]"}, {"lineNumber": 445, "col_offset": 92, "nodeName": "conf", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 445, "col_offset": 112, "nodeName": "conf", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 454, "col_offset": 7, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 454, "col_offset": 36, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 455, "col_offset": 23, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 457, "col_offset": 46, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 458, "col_offset": 16, "nodeName": "getTechniqueData", "type": "Callable[..., Any]"}, {"lineNumber": 458, "col_offset": 33, "nodeName": "technique", "type": "Any"}, {"lineNumber": 459, "col_offset": 15, "nodeName": "_", "type": "Any"}, {"lineNumber": 460, "col_offset": 16, "nodeName": "technique", "type": "Any"}, {"lineNumber": 460, "col_offset": 31, "nodeName": "technique", "type": "Any"}, {"lineNumber": 474, "col_offset": 41, "nodeName": "EXPECTED", "type": "Type[lib.core.enums.EXPECTED]"}, {"lineNumber": 474, "col_offset": 68, "nodeName": "CHARSET_TYPE", "type": "Type[lib.core.enums.CHARSET_TYPE]"}, {"lineNumber": 58, "col_offset": 72, "nodeName": "Backend", "type": "Type[lib.core.common.Backend]"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 77, "col_offset": 65, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "conf", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "threads", "type": "Any"}, {"lineNumber": 80, "col_offset": 46, "nodeName": "Backend", "type": "Type[lib.core.common.Backend]"}, {"lineNumber": 80, "col_offset": 82, "nodeName": "search", "type": "Callable"}, {"lineNumber": 80, "col_offset": 111, "nodeName": "expression", "type": "Any"}, {"lineNumber": 80, "col_offset": 123, "nodeName": "I", "type": "int"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "search", "type": "Callable"}, {"lineNumber": 82, "col_offset": 74, "nodeName": "expression", "type": "Any"}, {"lineNumber": 82, "col_offset": 86, "nodeName": "I", "type": "int"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "expression", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "field", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "hexConvert", "type": "Any"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "binaryFields", "type": "Any"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "nullAndCastField", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 59, "nodeName": "field", "type": "Any"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "replace", "type": "Union[Any, Callable]"}, {"lineNumber": 90, "col_offset": 51, "nodeName": "field", "type": "Any"}, {"lineNumber": 90, "col_offset": 58, "nodeName": "nulledCastedField", "type": "Any"}, {"lineNumber": 102, "col_offset": 65, "nodeName": "count", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "agent", "type": "lib.core.agent.Agent"}, {"lineNumber": 119, "col_offset": 66, "nodeName": "expressionFieldsList", "type": "Any"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "expression", "type": "Any"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "injection", "type": "Any"}, {"lineNumber": 144, "col_offset": 48, "nodeName": "technique", "type": "Any"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "expression", "type": "Any"}, {"lineNumber": 173, "col_offset": 57, "nodeName": "getIdentifiedDbms", "type": "Callable[[], Any]"}, {"lineNumber": 174, "col_offset": 66, "nodeName": "FROM_DUMMY_TABLE", "type": "Dict[str, str]"}, {"lineNumber": 176, "col_offset": 14, "nodeName": "re", "type": "module"}, {"lineNumber": 176, "col_offset": 54, "nodeName": "re", "type": "module"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "stopLimit", "type": "Any"}, {"lineNumber": 182, "col_offset": 32, "nodeName": "stopLimit", "type": "Any"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "test", "type": "bool"}, {"lineNumber": 188, "col_offset": 34, "nodeName": "query", "type": "nothing"}, {"lineNumber": 189, "col_offset": 36, "nodeName": "replace", "type": "Any"}, {"lineNumber": 189, "col_offset": 55, "nodeName": "expressionFields", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 189, "col_offset": 73, "nodeName": "countFirstField", "type": "Any"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "_", "type": "Any"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "countedExpression", "type": "Any"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "stopLimit", "type": "Any"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "count", "type": "Any"}, {"lineNumber": 264, "col_offset": 24, "nodeName": "num", "type": "int"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "KeyboardInterrupt", "type": "Type[KeyboardInterrupt]"}, {"lineNumber": 275, "col_offset": 9, "nodeName": "getIdentifiedDbms", "type": "Callable[[], Any]"}, {"lineNumber": 275, "col_offset": 122, "nodeName": "upper", "type": "Any"}, {"lineNumber": 280, "col_offset": 32, "nodeName": "output", "type": "Any"}, {"lineNumber": 280, "col_offset": 42, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 290, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 298, "col_offset": 13, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 298, "col_offset": 31, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 304, "col_offset": 40, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 304, "col_offset": 64, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 342, "col_offset": 18, "nodeName": "getCurrentThreadData", "type": "Callable[[], lib.core.threads._ThreadData]"}, {"lineNumber": 355, "col_offset": 38, "nodeName": "forgeCaseStatement", "type": "Callable[[Any], Any]"}, {"lineNumber": 355, "col_offset": 63, "nodeName": "expression", "type": "Any"}, {"lineNumber": 358, "col_offset": 27, "nodeName": "forgeCaseExpression", "type": "Any"}, {"lineNumber": 358, "col_offset": 81, "nodeName": "expression", "type": "Any"}, {"lineNumber": 360, "col_offset": 17, "nodeName": "map", "type": "Callable"}, {"lineNumber": 360, "col_offset": 21, "nodeName": "isTechniqueAvailable", "type": "Callable[[Any], bool]"}, {"lineNumber": 361, "col_offset": 20, "nodeName": "cleanQuery", "type": "Callable[[Any], Any]"}, {"lineNumber": 361, "col_offset": 31, "nodeName": "expression", "type": "Any"}, {"lineNumber": 362, "col_offset": 20, "nodeName": "expandAsteriskForColumns", "type": "Callable[[Any], Any]"}, {"lineNumber": 362, "col_offset": 45, "nodeName": "query", "type": "Any"}, {"lineNumber": 367, "col_offset": 15, "nodeName": "query", "type": "Any"}, {"lineNumber": 368, "col_offset": 16, "nodeName": "query", "type": "Any"}, {"lineNumber": 370, "col_offset": 19, "nodeName": "forceDns", "type": "Any"}, {"lineNumber": 407, "col_offset": 15, "nodeName": "blind", "type": "bool"}, {"lineNumber": 408, "col_offset": 16, "nodeName": "technique", "type": "Any"}, {"lineNumber": 408, "col_offset": 31, "nodeName": "BOOLEAN", "type": "Any"}, {"lineNumber": 415, "col_offset": 16, "nodeName": "count", "type": "int"}, {"lineNumber": 416, "col_offset": 16, "nodeName": "found", "type": "Union[bool, Any]"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "time", "type": "bool"}, {"lineNumber": 432, "col_offset": 18, "nodeName": "SqlmapNotVulnerableException", "type": "Type[lib.core.exception.SqlmapNotVulnerableException]"}, {"lineNumber": 432, "col_offset": 47, "nodeName": "errMsg", "type": "str"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "getCurrentThreadData", "type": "Callable[[], lib.core.threads._ThreadData]"}, {"lineNumber": 448, "col_offset": 42, "nodeName": "getIdentifiedDbms", "type": "Callable[[], Any]"}, {"lineNumber": 448, "col_offset": 78, "nodeName": "ACCESS", "type": "str"}, {"lineNumber": 448, "col_offset": 91, "nodeName": "FIREBIRD", "type": "str"}, {"lineNumber": 460, "col_offset": 16, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "conf", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 80, "col_offset": 82, "nodeName": "re", "type": "module"}, {"lineNumber": 80, "col_offset": 123, "nodeName": "re", "type": "module"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "re", "type": "module"}, {"lineNumber": 82, "col_offset": 86, "nodeName": "re", "type": "module"}, {"lineNumber": 83, "col_offset": 54, "nodeName": "field", "type": "Any"}, {"lineNumber": 83, "col_offset": 61, "nodeName": "expression", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "getIdentifiedDbms", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 51, "nodeName": "MYSQL", "type": "str"}, {"lineNumber": 85, "col_offset": 63, "nodeName": "PGSQL", "type": "str"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "conf", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "conf", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 88, "col_offset": 66, "nodeName": "field", "type": "Any"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "agent", "type": "lib.core.agent.Agent"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "expression", "type": "Union[Any, str]"}, {"lineNumber": 102, "col_offset": 72, "nodeName": "calculateDeltaSeconds", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 94, "nodeName": "start", "type": "float"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 144, "col_offset": 48, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 173, "col_offset": 57, "nodeName": "Backend", "type": "Type[lib.core.common.Backend]"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "getIdentifiedDbms", "type": "Callable[[], Any]"}, {"lineNumber": 175, "col_offset": 6, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 183, "col_offset": 50, "nodeName": "FROM_DUMMY_TABLE", "type": "Dict[str, str]"}, {"lineNumber": 183, "col_offset": 71, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 188, "col_offset": 34, "nodeName": "count", "type": "nothing"}, {"lineNumber": 188, "col_offset": 85, "nodeName": "expressionFieldsList", "type": "Union[List[Optional[Union[Any, str]]], List[Any]]"}, {"lineNumber": 189, "col_offset": 36, "nodeName": "expression", "type": "Any"}, {"lineNumber": 191, "col_offset": 35, "nodeName": "upper", "type": "Any"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "rindex", "type": "Any"}, {"lineNumber": 193, "col_offset": 40, "nodeName": "countedExpression", "type": "Any"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "_goInference", "type": "Callable[..., Any]"}, {"lineNumber": 196, "col_offset": 41, "nodeName": "payload", "type": "Any"}, {"lineNumber": 196, "col_offset": 50, "nodeName": "countedExpression", "type": "Any"}, {"lineNumber": 198, "col_offset": 23, "nodeName": "isNumPosStrValue", "type": "Callable[[Any], Any]"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "count", "type": "Any"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "count", "type": "int"}, {"lineNumber": 264, "col_offset": 31, "nodeName": "xrange", "type": "Type[xrange]"}, {"lineNumber": 264, "col_offset": 38, "nodeName": "startLimit", "type": "Any"}, {"lineNumber": 264, "col_offset": 50, "nodeName": "stopLimit", "type": "Any"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 270, "col_offset": 20, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 275, "col_offset": 9, "nodeName": "Backend", "type": "Type[lib.core.common.Backend]"}, {"lineNumber": 275, "col_offset": 61, "nodeName": "upper", "type": "Any"}, {"lineNumber": 275, "col_offset": 122, "nodeName": "expression", "type": "Any"}, {"lineNumber": 276, "col_offset": 39, "nodeName": "getIdentifiedDbms", "type": "Callable[[], Any]"}, {"lineNumber": 290, "col_offset": 34, "nodeName": "injection", "type": "Any"}, {"lineNumber": 290, "col_offset": 52, "nodeName": "technique", "type": "Any"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "upper", "type": "Any"}, {"lineNumber": 353, "col_offset": 49, "nodeName": "booleanExpression", "type": "Any"}, {"lineNumber": 355, "col_offset": 38, "nodeName": "agent", "type": "lib.core.agent.Agent"}, {"lineNumber": 358, "col_offset": 50, "nodeName": "expected", "type": "str"}, {"lineNumber": 358, "col_offset": 62, "nodeName": "BOOL", "type": "str"}, {"lineNumber": 360, "col_offset": 43, "nodeName": "getPublicTypeMembers", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 360, "col_offset": 64, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 368, "col_offset": 24, "nodeName": "replace", "type": "Any"}, {"lineNumber": 370, "col_offset": 19, "nodeName": "conf", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 371, "col_offset": 19, "nodeName": "union", "type": "bool"}, {"lineNumber": 372, "col_offset": 20, "nodeName": "technique", "type": "Any"}, {"lineNumber": 372, "col_offset": 35, "nodeName": "UNION", "type": "Any"}, {"lineNumber": 373, "col_offset": 20, "nodeName": "forcePartialUnion", "type": "Any"}, {"lineNumber": 374, "col_offset": 20, "nodeName": "value", "type": "Any"}, {"lineNumber": 375, "col_offset": 20, "nodeName": "count", "type": "int"}, {"lineNumber": 376, "col_offset": 20, "nodeName": "found", "type": "Union[bool, Any]"}, {"lineNumber": 394, "col_offset": 19, "nodeName": "error", "type": "bool"}, {"lineNumber": 395, "col_offset": 20, "nodeName": "technique", "type": "Any"}, {"lineNumber": 396, "col_offset": 20, "nodeName": "value", "type": "Any"}, {"lineNumber": 397, "col_offset": 20, "nodeName": "count", "type": "int"}, {"lineNumber": 398, "col_offset": 20, "nodeName": "found", "type": "Union[bool, Any]"}, {"lineNumber": 400, "col_offset": 19, "nodeName": "found", "type": "Union[bool, Any]"}, {"lineNumber": 400, "col_offset": 29, "nodeName": "dnsName", "type": "Any"}, {"lineNumber": 401, "col_offset": 20, "nodeName": "_", "type": "str"}, {"lineNumber": 402, "col_offset": 20, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 403, "col_offset": 20, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 404, "col_offset": 20, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 407, "col_offset": 25, "nodeName": "isTechniqueAvailable", "type": "Callable[[Any], bool]"}, {"lineNumber": 407, "col_offset": 46, "nodeName": "BOOLEAN", "type": "Any"}, {"lineNumber": 407, "col_offset": 81, "nodeName": "found", "type": "Union[bool, Any]"}, {"lineNumber": 408, "col_offset": 16, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 408, "col_offset": 31, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 410, "col_offset": 19, "nodeName": "expected", "type": "str"}, {"lineNumber": 410, "col_offset": 31, "nodeName": "BOOL", "type": "str"}, {"lineNumber": 411, "col_offset": 20, "nodeName": "value", "type": "Any"}, {"lineNumber": 413, "col_offset": 20, "nodeName": "value", "type": "Optional[Any]"}, {"lineNumber": 418, "col_offset": 130, "nodeName": "found", "type": "Union[bool, Any]"}, {"lineNumber": 419, "col_offset": 19, "nodeName": "isTechniqueAvailable", "type": "Callable[[Any], bool]"}, {"lineNumber": 419, "col_offset": 40, "nodeName": "TIME", "type": "Any"}, {"lineNumber": 420, "col_offset": 20, "nodeName": "technique", "type": "Any"}, {"lineNumber": 420, "col_offset": 35, "nodeName": "TIME", "type": "Any"}, {"lineNumber": 422, "col_offset": 20, "nodeName": "technique", "type": "Any"}, {"lineNumber": 422, "col_offset": 35, "nodeName": "STACKED", "type": "Any"}, {"lineNumber": 424, "col_offset": 19, "nodeName": "expected", "type": "str"}, {"lineNumber": 424, "col_offset": 31, "nodeName": "BOOL", "type": "str"}, {"lineNumber": 425, "col_offset": 20, "nodeName": "value", "type": "Any"}, {"lineNumber": 427, "col_offset": 20, "nodeName": "value", "type": "Optional[Any]"}, {"lineNumber": 448, "col_offset": 42, "nodeName": "Backend", "type": "Type[lib.core.common.Backend]"}, {"lineNumber": 448, "col_offset": 78, "nodeName": "DBMS", "type": "Type[lib.core.enums.DBMS]"}, {"lineNumber": 448, "col_offset": 91, "nodeName": "DBMS", "type": "Type[lib.core.enums.DBMS]"}, {"lineNumber": 459, "col_offset": 34, "nodeName": "lower", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "Backend", "type": "Type[lib.core.common.Backend]"}, {"lineNumber": 85, "col_offset": 51, "nodeName": "DBMS", "type": "Type[lib.core.enums.DBMS]"}, {"lineNumber": 85, "col_offset": 63, "nodeName": "DBMS", "type": "Type[lib.core.enums.DBMS]"}, {"lineNumber": 86, "col_offset": 45, "nodeName": "randomStr", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 75, "nodeName": "split", "type": "Any"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "Backend", "type": "Type[lib.core.common.Backend]"}, {"lineNumber": 175, "col_offset": 34, "nodeName": "FROM_DUMMY_TABLE", "type": "Dict[str, str]"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "getIdentifiedDbms", "type": "Callable[[], Any]"}, {"lineNumber": 183, "col_offset": 99, "nodeName": "FROM_DUMMY_TABLE", "type": "Dict[str, str]"}, {"lineNumber": 191, "col_offset": 35, "nodeName": "expression", "type": "Any"}, {"lineNumber": 193, "col_offset": 59, "nodeName": "_", "type": "Any"}, {"lineNumber": 196, "col_offset": 81, "nodeName": "DIGITS", "type": "int"}, {"lineNumber": 196, "col_offset": 112, "nodeName": "firstChar", "type": "Any"}, {"lineNumber": 196, "col_offset": 132, "nodeName": "lastChar", "type": "Any"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 199, "col_offset": 36, "nodeName": "count", "type": "Any"}, {"lineNumber": 201, "col_offset": 27, "nodeName": "batch", "type": "Any"}, {"lineNumber": 202, "col_offset": 28, "nodeName": "stopLimit", "type": "int"}, {"lineNumber": 202, "col_offset": 40, "nodeName": "count", "type": "int"}, {"lineNumber": 204, "col_offset": 28, "nodeName": "message", "type": "str"}, {"lineNumber": 205, "col_offset": 28, "nodeName": "message", "type": "str"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "message", "type": "str"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "message", "type": "str"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "message", "type": "str"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "test", "type": "Any"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "count", "type": "Any"}, {"lineNumber": 244, "col_offset": 24, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 245, "col_offset": 24, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 247, "col_offset": 24, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "stopLimit", "type": "int"}, {"lineNumber": 260, "col_offset": 26, "nodeName": "stopLimit", "type": "Any"}, {"lineNumber": 260, "col_offset": 39, "nodeName": "stopLimit", "type": "Any"}, {"lineNumber": 265, "col_offset": 33, "nodeName": "_goInferenceFields", "type": "Callable[..., Any]"}, {"lineNumber": 265, "col_offset": 52, "nodeName": "expression", "type": "Any"}, {"lineNumber": 265, "col_offset": 64, "nodeName": "expressionFields", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 265, "col_offset": 82, "nodeName": "expressionFieldsList", "type": "Union[List[Optional[Union[Any, str]]], List[Any]]"}, {"lineNumber": 265, "col_offset": 104, "nodeName": "payload", "type": "Any"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "append", "type": "Callable[[Any], None]"}, {"lineNumber": 266, "col_offset": 39, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "warn", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 32, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 275, "col_offset": 61, "nodeName": "expression", "type": "Any"}, {"lineNumber": 276, "col_offset": 39, "nodeName": "Backend", "type": "Type[lib.core.common.Backend]"}, {"lineNumber": 290, "col_offset": 34, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 290, "col_offset": 52, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "expression", "type": "Any"}, {"lineNumber": 358, "col_offset": 62, "nodeName": "EXPECTED", "type": "Type[lib.core.enums.EXPECTED]"}, {"lineNumber": 360, "col_offset": 64, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 367, "col_offset": 29, "nodeName": "search", "type": "Callable"}, {"lineNumber": 367, "col_offset": 69, "nodeName": "query", "type": "Any"}, {"lineNumber": 367, "col_offset": 76, "nodeName": "I", "type": "int"}, {"lineNumber": 368, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "isTechniqueAvailable", "type": "Callable[[Any], bool]"}, {"lineNumber": 371, "col_offset": 50, "nodeName": "UNION", "type": "Any"}, {"lineNumber": 372, "col_offset": 20, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 372, "col_offset": 35, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 373, "col_offset": 20, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 373, "col_offset": 43, "nodeName": "vector", "type": "Any"}, {"lineNumber": 374, "col_offset": 28, "nodeName": "_goUnion", "type": "Callable[..., Any]"}, {"lineNumber": 374, "col_offset": 98, "nodeName": "unpack", "type": "bool"}, {"lineNumber": 374, "col_offset": 106, "nodeName": "dump", "type": "bool"}, {"lineNumber": 379, "col_offset": 24, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 380, "col_offset": 24, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 381, "col_offset": 24, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 394, "col_offset": 29, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 394, "col_offset": 126, "nodeName": "found", "type": "Union[bool, Any]"}, {"lineNumber": 395, "col_offset": 20, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 395, "col_offset": 35, "nodeName": "ERROR", "type": "Any"}, {"lineNumber": 395, "col_offset": 113, "nodeName": "QUERY", "type": "Any"}, {"lineNumber": 396, "col_offset": 28, "nodeName": "errorUse", "type": "Callable[..., Any]"}, {"lineNumber": 396, "col_offset": 98, "nodeName": "dump", "type": "bool"}, {"lineNumber": 400, "col_offset": 29, "nodeName": "conf", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 401, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 404, "col_offset": 41, "nodeName": "_", "type": "str"}, {"lineNumber": 405, "col_offset": 20, "nodeName": "singleTimeWarnMessage", "type": "Callable[[Any], None]"}, {"lineNumber": 405, "col_offset": 42, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 407, "col_offset": 46, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 408, "col_offset": 31, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 410, "col_offset": 31, "nodeName": "EXPECTED", "type": "Type[lib.core.enums.EXPECTED]"}, {"lineNumber": 411, "col_offset": 28, "nodeName": "_goBooleanProxy", "type": "Callable[[Any], Any]"}, {"lineNumber": 411, "col_offset": 44, "nodeName": "booleanExpression", "type": "Union[str, Any]"}, {"lineNumber": 413, "col_offset": 28, "nodeName": "_goInferenceProxy", "type": "Callable[..., Any]"}, {"lineNumber": 413, "col_offset": 46, "nodeName": "query", "type": "Any"}, {"lineNumber": 413, "col_offset": 53, "nodeName": "fromUser", "type": "bool"}, {"lineNumber": 413, "col_offset": 63, "nodeName": "batch", "type": "bool"}, {"lineNumber": 413, "col_offset": 70, "nodeName": "unpack", "type": "bool"}, {"lineNumber": 413, "col_offset": 78, "nodeName": "charsetType", "type": "int"}, {"lineNumber": 413, "col_offset": 91, "nodeName": "firstChar", "type": "None"}, {"lineNumber": 413, "col_offset": 102, "nodeName": "lastChar", "type": "None"}, {"lineNumber": 413, "col_offset": 112, "nodeName": "dump", "type": "bool"}, {"lineNumber": 416, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 416, "col_offset": 66, "nodeName": "expectingNone", "type": "Any"}, {"lineNumber": 416, "col_offset": 84, "nodeName": "count", "type": "int"}, {"lineNumber": 416, "col_offset": 93, "nodeName": "MAX_TECHNIQUES_PER_VALUE", "type": "int"}, {"lineNumber": 418, "col_offset": 25, "nodeName": "isTechniqueAvailable", "type": "Callable[[Any], bool]"}, {"lineNumber": 418, "col_offset": 46, "nodeName": "TIME", "type": "Any"}, {"lineNumber": 418, "col_offset": 73, "nodeName": "isTechniqueAvailable", "type": "Callable[[Any], bool]"}, {"lineNumber": 418, "col_offset": 94, "nodeName": "STACKED", "type": "Any"}, {"lineNumber": 419, "col_offset": 40, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 420, "col_offset": 20, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 420, "col_offset": 35, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 422, "col_offset": 20, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 422, "col_offset": 35, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 424, "col_offset": 31, "nodeName": "EXPECTED", "type": "Type[lib.core.enums.EXPECTED]"}, {"lineNumber": 425, "col_offset": 28, "nodeName": "_goBooleanProxy", "type": "Callable[[Any], Any]"}, {"lineNumber": 425, "col_offset": 44, "nodeName": "booleanExpression", "type": "Union[str, Any]"}, {"lineNumber": 427, "col_offset": 28, "nodeName": "_goInferenceProxy", "type": "Callable[..., Any]"}, {"lineNumber": 427, "col_offset": 46, "nodeName": "query", "type": "Any"}, {"lineNumber": 427, "col_offset": 53, "nodeName": "fromUser", "type": "bool"}, {"lineNumber": 427, "col_offset": 63, "nodeName": "batch", "type": "bool"}, {"lineNumber": 427, "col_offset": 70, "nodeName": "unpack", "type": "bool"}, {"lineNumber": 427, "col_offset": 78, "nodeName": "charsetType", "type": "int"}, {"lineNumber": 427, "col_offset": 91, "nodeName": "firstChar", "type": "None"}, {"lineNumber": 427, "col_offset": 102, "nodeName": "lastChar", "type": "None"}, {"lineNumber": 427, "col_offset": 112, "nodeName": "dump", "type": "bool"}, {"lineNumber": 88, "col_offset": 75, "nodeName": "binaryFields", "type": "Any"}, {"lineNumber": 175, "col_offset": 6, "nodeName": "upper", "type": "Any"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "Backend", "type": "Type[lib.core.common.Backend]"}, {"lineNumber": 183, "col_offset": 71, "nodeName": "upper", "type": "Any"}, {"lineNumber": 188, "col_offset": 34, "nodeName": "queries", "type": "Dict[nothing, nothing]"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "upper", "type": "Any"}, {"lineNumber": 196, "col_offset": 81, "nodeName": "CHARSET_TYPE", "type": "Type[lib.core.enums.CHARSET_TYPE]"}, {"lineNumber": 201, "col_offset": 36, "nodeName": "count", "type": "int"}, {"lineNumber": 205, "col_offset": 65, "nodeName": "count", "type": "int"}, {"lineNumber": 209, "col_offset": 35, "nodeName": "readInput", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 45, "nodeName": "message", "type": "str"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "stopLimit", "type": "int"}, {"lineNumber": 212, "col_offset": 44, "nodeName": "count", "type": "int"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "warn", "type": "Callable[..., None]"}, {"lineNumber": 248, "col_offset": 36, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 265, "col_offset": 117, "nodeName": "num", "type": "int"}, {"lineNumber": 265, "col_offset": 134, "nodeName": "charsetType", "type": "Any"}, {"lineNumber": 265, "col_offset": 157, "nodeName": "firstChar", "type": "Any"}, {"lineNumber": 265, "col_offset": 177, "nodeName": "lastChar", "type": "Any"}, {"lineNumber": 265, "col_offset": 192, "nodeName": "dump", "type": "Any"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "outputs", "type": "lib.core.bigarray.BigArray"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 353, "col_offset": 86, "nodeName": "booleanExpression", "type": "Any"}, {"lineNumber": 367, "col_offset": 29, "nodeName": "re", "type": "module"}, {"lineNumber": 367, "col_offset": 76, "nodeName": "re", "type": "module"}, {"lineNumber": 371, "col_offset": 50, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 372, "col_offset": 35, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 374, "col_offset": 37, "nodeName": "forgeCaseExpression", "type": "Any"}, {"lineNumber": 374, "col_offset": 91, "nodeName": "query", "type": "Any"}, {"lineNumber": 376, "col_offset": 29, "nodeName": "value", "type": "Any"}, {"lineNumber": 376, "col_offset": 70, "nodeName": "expectingNone", "type": "Any"}, {"lineNumber": 376, "col_offset": 88, "nodeName": "count", "type": "int"}, {"lineNumber": 376, "col_offset": 97, "nodeName": "MAX_TECHNIQUES_PER_VALUE", "type": "int"}, {"lineNumber": 378, "col_offset": 27, "nodeName": "found", "type": "Union[bool, Any]"}, {"lineNumber": 378, "col_offset": 41, "nodeName": "expected", "type": "str"}, {"lineNumber": 378, "col_offset": 54, "nodeName": "where", "type": "Any"}, {"lineNumber": 378, "col_offset": 106, "nodeName": "ORIGINAL", "type": "Any"}, {"lineNumber": 378, "col_offset": 137, "nodeName": "forcePartialUnion", "type": "Any"}, {"lineNumber": 383, "col_offset": 28, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 387, "col_offset": 28, "nodeName": "forcePartialUnion", "type": "bool"}, {"lineNumber": 388, "col_offset": 28, "nodeName": "value", "type": "Any"}, {"lineNumber": 389, "col_offset": 28, "nodeName": "found", "type": "Union[bool, Any]"}, {"lineNumber": 390, "col_offset": 28, "nodeName": "forcePartialUnion", "type": "Any"}, {"lineNumber": 395, "col_offset": 62, "nodeName": "isTechniqueAvailable", "type": "Callable[[Any], bool]"}, {"lineNumber": 395, "col_offset": 83, "nodeName": "ERROR", "type": "Any"}, {"lineNumber": 395, "col_offset": 35, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 395, "col_offset": 113, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 396, "col_offset": 37, "nodeName": "forgeCaseExpression", "type": "Any"}, {"lineNumber": 396, "col_offset": 91, "nodeName": "query", "type": "Any"}, {"lineNumber": 398, "col_offset": 29, "nodeName": "value", "type": "Any"}, {"lineNumber": 398, "col_offset": 70, "nodeName": "expectingNone", "type": "Any"}, {"lineNumber": 398, "col_offset": 88, "nodeName": "count", "type": "int"}, {"lineNumber": 398, "col_offset": 97, "nodeName": "MAX_TECHNIQUES_PER_VALUE", "type": "int"}, {"lineNumber": 401, "col_offset": 32, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 407, "col_offset": 46, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 416, "col_offset": 48, "nodeName": "value", "type": "Any"}, {"lineNumber": 418, "col_offset": 46, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 418, "col_offset": 94, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 419, "col_offset": 40, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 420, "col_offset": 35, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 422, "col_offset": 35, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 459, "col_offset": 34, "nodeName": "_", "type": "Any"}, {"lineNumber": 86, "col_offset": 76, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 86, "col_offset": 81, "nodeName": "expression", "type": "str"}, {"lineNumber": 88, "col_offset": 75, "nodeName": "conf", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 175, "col_offset": 6, "nodeName": "expression", "type": "Any"}, {"lineNumber": 175, "col_offset": 51, "nodeName": "getIdentifiedDbms", "type": "Callable[[], Any]"}, {"lineNumber": 183, "col_offset": 71, "nodeName": "expression", "type": "Any"}, {"lineNumber": 183, "col_offset": 116, "nodeName": "getIdentifiedDbms", "type": "Callable[[], Any]"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "countedExpression", "type": "Any"}, {"lineNumber": 211, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 215, "col_offset": 38, "nodeName": "SqlmapUserQuitException", "type": "Type[lib.core.exception.SqlmapUserQuitException]"}, {"lineNumber": 243, "col_offset": 39, "nodeName": "isdigit", "type": "Any"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 252, "col_offset": 30, "nodeName": "count", "type": "Any"}, {"lineNumber": 253, "col_offset": 31, "nodeName": "count", "type": "Any"}, {"lineNumber": 254, "col_offset": 28, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 255, "col_offset": 28, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 371, "col_offset": 50, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 373, "col_offset": 43, "nodeName": "data", "type": "Any"}, {"lineNumber": 374, "col_offset": 60, "nodeName": "expected", "type": "str"}, {"lineNumber": 374, "col_offset": 72, "nodeName": "BOOL", "type": "str"}, {"lineNumber": 376, "col_offset": 52, "nodeName": "value", "type": "Any"}, {"lineNumber": 378, "col_offset": 106, "nodeName": "WHERE", "type": "Any"}, {"lineNumber": 378, "col_offset": 137, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 382, "col_offset": 39, "nodeName": "upper", "type": "Any"}, {"lineNumber": 384, "col_offset": 28, "nodeName": "singleTimeWarnMessage", "type": "Callable[[Any], None]"}, {"lineNumber": 384, "col_offset": 50, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 386, "col_offset": 28, "nodeName": "pushValue", "type": "Callable[[Any], None]"}, {"lineNumber": 386, "col_offset": 38, "nodeName": "forcePartialUnion", "type": "Any"}, {"lineNumber": 387, "col_offset": 28, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 388, "col_offset": 36, "nodeName": "_goUnion", "type": "Callable[..., Any]"}, {"lineNumber": 388, "col_offset": 45, "nodeName": "query", "type": "Any"}, {"lineNumber": 388, "col_offset": 52, "nodeName": "unpack", "type": "bool"}, {"lineNumber": 388, "col_offset": 60, "nodeName": "dump", "type": "bool"}, {"lineNumber": 390, "col_offset": 28, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 390, "col_offset": 51, "nodeName": "popValue", "type": "Callable[[], Any]"}, {"lineNumber": 392, "col_offset": 28, "nodeName": "singleTimeWarnMessage", "type": "Callable[[Any], None]"}, {"lineNumber": 392, "col_offset": 50, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 394, "col_offset": 33, "nodeName": "isTechniqueAvailable", "type": "Callable[[Any], bool]"}, {"lineNumber": 394, "col_offset": 54, "nodeName": "_", "type": "Any"}, {"lineNumber": 394, "col_offset": 61, "nodeName": "_", "type": "Any"}, {"lineNumber": 395, "col_offset": 83, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 395, "col_offset": 35, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 395, "col_offset": 113, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 396, "col_offset": 60, "nodeName": "expected", "type": "str"}, {"lineNumber": 396, "col_offset": 72, "nodeName": "BOOL", "type": "str"}, {"lineNumber": 398, "col_offset": 52, "nodeName": "value", "type": "Any"}, {"lineNumber": 418, "col_offset": 46, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 418, "col_offset": 94, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 175, "col_offset": 51, "nodeName": "Backend", "type": "Type[lib.core.common.Backend]"}, {"lineNumber": 183, "col_offset": 116, "nodeName": "Backend", "type": "Type[lib.core.common.Backend]"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "getIdentifiedDbms", "type": "Callable[[], Any]"}, {"lineNumber": 211, "col_offset": 43, "nodeName": "test", "type": "Any"}, {"lineNumber": 214, "col_offset": 33, "nodeName": "test", "type": "Any"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "stopLimit", "type": "int"}, {"lineNumber": 220, "col_offset": 32, "nodeName": "infoMsg", "type": "str"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "infoMsg", "type": "str"}, {"lineNumber": 243, "col_offset": 39, "nodeName": "count", "type": "Any"}, {"lineNumber": 252, "col_offset": 39, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 252, "col_offset": 43, "nodeName": "count", "type": "Any"}, {"lineNumber": 256, "col_offset": 28, "nodeName": "warn", "type": "Callable[..., None]"}, {"lineNumber": 256, "col_offset": 40, "nodeName": "warnMsg", "type": "str"}, {"lineNumber": 373, "col_offset": 43, "nodeName": "injection", "type": "Any"}, {"lineNumber": 373, "col_offset": 61, "nodeName": "UNION", "type": "Any"}, {"lineNumber": 374, "col_offset": 72, "nodeName": "EXPECTED", "type": "Type[lib.core.enums.EXPECTED]"}, {"lineNumber": 378, "col_offset": 54, "nodeName": "data", "type": "Any"}, {"lineNumber": 378, "col_offset": 106, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 382, "col_offset": 39, "nodeName": "query", "type": "Any"}, {"lineNumber": 386, "col_offset": 38, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 389, "col_offset": 37, "nodeName": "value", "type": "Any"}, {"lineNumber": 389, "col_offset": 78, "nodeName": "expectingNone", "type": "Any"}, {"lineNumber": 394, "col_offset": 67, "nodeName": "ERROR", "type": "Any"}, {"lineNumber": 394, "col_offset": 92, "nodeName": "QUERY", "type": "Any"}, {"lineNumber": 395, "col_offset": 83, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 396, "col_offset": 72, "nodeName": "EXPECTED", "type": "Type[lib.core.enums.EXPECTED]"}, {"lineNumber": 401, "col_offset": 46, "nodeName": "key", "type": "str"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "Backend", "type": "Type[lib.core.common.Backend]"}, {"lineNumber": 217, "col_offset": 33, "nodeName": "isdigit", "type": "Any"}, {"lineNumber": 217, "col_offset": 83, "nodeName": "count", "type": "int"}, {"lineNumber": 218, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 218, "col_offset": 48, "nodeName": "test", "type": "Any"}, {"lineNumber": 221, "col_offset": 77, "nodeName": "stopLimit", "type": "int"}, {"lineNumber": 222, "col_offset": 32, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 222, "col_offset": 44, "nodeName": "infoMsg", "type": "str"}, {"lineNumber": 225, "col_offset": 32, "nodeName": "message", "type": "str"}, {"lineNumber": 226, "col_offset": 32, "nodeName": "stopLimit", "type": "Any"}, {"lineNumber": 238, "col_offset": 32, "nodeName": "errMsg", "type": "str"}, {"lineNumber": 256, "col_offset": 28, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 373, "col_offset": 43, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 373, "col_offset": 61, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 378, "col_offset": 54, "nodeName": "injection", "type": "Any"}, {"lineNumber": 378, "col_offset": 72, "nodeName": "UNION", "type": "Any"}, {"lineNumber": 389, "col_offset": 60, "nodeName": "value", "type": "Any"}, {"lineNumber": 394, "col_offset": 67, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 394, "col_offset": 92, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 401, "col_offset": 53, "nodeName": "isTechniqueAvailable", "type": "Callable[[Any], bool]"}, {"lineNumber": 401, "col_offset": 74, "nodeName": "value", "type": "Any"}, {"lineNumber": 401, "col_offset": 95, "nodeName": "key", "type": "str"}, {"lineNumber": 401, "col_offset": 100, "nodeName": "value", "type": "Any"}, {"lineNumber": 401, "col_offset": 109, "nodeName": "items", "type": "Callable"}, {"lineNumber": 217, "col_offset": 33, "nodeName": "test", "type": "Any"}, {"lineNumber": 217, "col_offset": 52, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 217, "col_offset": 56, "nodeName": "test", "type": "Any"}, {"lineNumber": 217, "col_offset": 70, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 217, "col_offset": 74, "nodeName": "test", "type": "Any"}, {"lineNumber": 222, "col_offset": 32, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 224, "col_offset": 33, "nodeName": "test", "type": "Any"}, {"lineNumber": 226, "col_offset": 44, "nodeName": "readInput", "type": "Callable[..., Any]"}, {"lineNumber": 226, "col_offset": 54, "nodeName": "message", "type": "str"}, {"lineNumber": 229, "col_offset": 36, "nodeName": "errMsg", "type": "str"}, {"lineNumber": 235, "col_offset": 36, "nodeName": "stopLimit", "type": "int"}, {"lineNumber": 239, "col_offset": 32, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 239, "col_offset": 45, "nodeName": "errMsg", "type": "str"}, {"lineNumber": 373, "col_offset": 61, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 378, "col_offset": 54, "nodeName": "kb", "type": "lib.core.datatype.AttribDict"}, {"lineNumber": 378, "col_offset": 72, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 394, "col_offset": 67, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 394, "col_offset": 92, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 228, "col_offset": 39, "nodeName": "isdigit", "type": "Any"}, {"lineNumber": 230, "col_offset": 36, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 230, "col_offset": 49, "nodeName": "errMsg", "type": "str"}, {"lineNumber": 235, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 235, "col_offset": 52, "nodeName": "stopLimit", "type": "Any"}, {"lineNumber": 239, "col_offset": 32, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 378, "col_offset": 72, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 401, "col_offset": 115, "nodeName": "ERROR", "type": "Any"}, {"lineNumber": 401, "col_offset": 145, "nodeName": "QUERY", "type": "Any"}, {"lineNumber": 401, "col_offset": 175, "nodeName": "UNION", "type": "Any"}, {"lineNumber": 228, "col_offset": 39, "nodeName": "stopLimit", "type": "Any"}, {"lineNumber": 230, "col_offset": 36, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 401, "col_offset": 115, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 401, "col_offset": 145, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 401, "col_offset": 175, "nodeName": "TECHNIQUE", "type": "Any"}, {"lineNumber": 401, "col_offset": 115, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 401, "col_offset": 145, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}, {"lineNumber": 401, "col_offset": 175, "nodeName": "PAYLOAD", "type": "Type[lib.core.enums.PAYLOAD]"}]