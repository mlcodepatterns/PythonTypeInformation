[{"lineNumber": 29, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "test_is_known_encoding_true", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "test_is_known_encoding_false", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "test_escaped_char_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "test_escaped_char_no_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "test_escaped_char_error_escape_char", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "test_escaped_char_error_html_encode", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "test_atilde", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "decoded", "type": "unicode"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "decoded", "type": "unicode"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "decoded", "type": "unicode"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "decoded", "type": "unicode"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "decode", "type": "Callable[..., unicode]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "decoded", "type": "unicode"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "decode", "type": "Callable[..., unicode]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "decoded", "type": "unicode"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "decode", "type": "Callable[..., unicode]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "decoded", "type": "unicode"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "decode", "type": "Callable[..., unicode]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "decoded", "type": "unicode"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestEncoding"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "is_known_encoding", "type": "Callable[[Any], bool]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestEncoding"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "is_known_encoding", "type": "Callable[[Any], bool]"}, {"lineNumber": 38, "col_offset": 44, "nodeName": "ESCAPED_CHAR", "type": "str"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestEncoding"}, {"lineNumber": 42, "col_offset": 48, "nodeName": "ESCAPED_CHAR", "type": "str"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestEncoding"}, {"lineNumber": 46, "col_offset": 48, "nodeName": "ESCAPED_CHAR", "type": "str"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestEncoding"}, {"lineNumber": 50, "col_offset": 48, "nodeName": "HTML_ENCODE", "type": "str"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestEncoding"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestEncoding"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "smart_unicode", "type": "Callable[..., Any]"}]