[{"lineNumber": 28, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "test_all", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "test_relative_distance", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "e", "type": "str"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "d", "type": "str"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "f", "type": "float"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "res1", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "res2", "type": "bool"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "e", "type": "str"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "d", "type": "str"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "f", "type": "float"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "res", "type": "float"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "relative_distance_boolean", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 45, "nodeName": "e", "type": "str"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "d", "type": "str"}, {"lineNumber": 61, "col_offset": 51, "nodeName": "f", "type": "float"}, {"lineNumber": 62, "col_offset": 46, "nodeName": "f", "type": "float"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "res1", "type": "Any"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "res2", "type": "bool"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "acceptance_tests", "type": "List[Tuple[str, str, float]]"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "relative_distance", "type": "Callable[[Any, Any], float]"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "e", "type": "str"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "d", "type": "str"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "msg", "type": "str"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "relative_distance", "type": "Callable[[Any, Any], float]"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "e", "type": "str"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "d", "type": "str"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "TestLevenshtein"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "msg", "type": "str"}, {"lineNumber": 83, "col_offset": 55, "nodeName": "res", "type": "float"}, {"lineNumber": 83, "col_offset": 60, "nodeName": "f", "type": "float"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "TestLevenshtein"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "res", "type": "float"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "f", "type": "float"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "e", "type": "str"}, {"lineNumber": 70, "col_offset": 51, "nodeName": "d", "type": "str"}, {"lineNumber": 70, "col_offset": 54, "nodeName": "f", "type": "float"}]