[{"lineNumber": 13, "col_offset": 13, "nodeName": "GenericSyntax", "type": "Type[plugins.generic.syntax.Syntax]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "excluded", "type": "Dict[Any, Any]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "retVal", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "_", "type": "Tuple[Any, Any]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "retVal", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[plugins.generic.syntax.Syntax], None]"}, {"lineNumber": 15, "col_offset": 31, "nodeName": "self", "type": "Syntax"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 28, "col_offset": 48, "nodeName": "expression", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "expression", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "_escape", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "expression", "type": "Any"}, {"lineNumber": 32, "col_offset": 44, "nodeName": "quote", "type": "Any"}, {"lineNumber": 32, "col_offset": 51, "nodeName": "escaper", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "items", "type": "Callable"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "retVal", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "GenericSyntax", "type": "Type[plugins.generic.syntax.Syntax]"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "re", "type": "module"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "excluded", "type": "Dict[Any, Any]"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "randomStr", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "replace", "type": "Any"}, {"lineNumber": 30, "col_offset": 44, "nodeName": "_", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "Syntax", "type": "Type[Syntax]"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "excluded", "type": "Dict[Any, Any]"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "replace", "type": "Any"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "_", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "expression", "type": "Any"}, {"lineNumber": 30, "col_offset": 47, "nodeName": "excluded", "type": "Dict[Any, Any]"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "retVal", "type": "Any"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "_", "type": "Tuple[Any, Any]"}, {"lineNumber": 35, "col_offset": 42, "nodeName": "_", "type": "Tuple[Any, Any]"}, {"lineNumber": 25, "col_offset": 52, "nodeName": "_", "type": "Any"}, {"lineNumber": 25, "col_offset": 57, "nodeName": "value", "type": "Any"}, {"lineNumber": 30, "col_offset": 56, "nodeName": "_", "type": "Any"}, {"lineNumber": 25, "col_offset": 41, "nodeName": "ord", "type": "Callable[[Union[bytes, str]], int]"}, {"lineNumber": 25, "col_offset": 45, "nodeName": "_", "type": "Any"}]