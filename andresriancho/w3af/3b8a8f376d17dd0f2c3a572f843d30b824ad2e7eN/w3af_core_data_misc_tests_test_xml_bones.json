[{"lineNumber": 27, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "test_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "test_simple", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "test_large", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "test_extra_large_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "test_extra_large_2", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "test_attr", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "test_broken_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "test_broken_2", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "test_nested", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "test_just_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestXMLBones"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "get_xml_bones", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestXMLBones"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "get_xml_bones", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestXMLBones"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "get_xml_bones", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestXMLBones"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "get_xml_bones", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestXMLBones"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "get_xml_bones", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestXMLBones"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "get_xml_bones", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestXMLBones"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "get_xml_bones", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestXMLBones"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "get_xml_bones", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestXMLBones"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "get_xml_bones", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestXMLBones"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "get_xml_bones", "type": "Callable[[Any], Any]"}]