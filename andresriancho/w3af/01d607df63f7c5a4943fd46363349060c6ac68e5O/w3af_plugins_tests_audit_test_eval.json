[{"lineNumber": 26, "col_offset": 15, "nodeName": "PluginTest", "type": "Any"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "PluginTest", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "PluginTest", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "target_echo", "type": "str"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "target_delay", "type": "str"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "_run_configs", "type": "Dict[str, Dict[str, Union[Dict[str, Tuple[Any]], str]]]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "target", "type": "str"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Tuple[Any]]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "target", "type": "str"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Tuple[Any]]"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "get_moth_http", "type": "Callable[..., str]"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "get_moth_http", "type": "Callable[..., str]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "get_mcir_http", "type": "Callable[..., str]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "get_mcir_http", "type": "Callable[..., str]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "_run_configs", "type": "Dict[str, Dict[str, Union[Dict[str, Tuple[Any]], str]]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "_scan", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "target_echo", "type": "str"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "_run_configs", "type": "Dict[str, Dict[str, Union[Dict[str, Tuple[Any]], str]]]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "_scan", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "target_delay", "type": "str"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "_scan", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "target", "type": "str"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "config", "type": "Dict[str, Tuple[Any]]"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "_scan", "type": "Any"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "target", "type": "str"}, {"lineNumber": 130, "col_offset": 32, "nodeName": "config", "type": "Dict[str, Tuple[Any]]"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "target_echo", "type": "str"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "target_delay", "type": "str"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "self", "type": "TestEval"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestEval"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "kb", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestEval"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestEval"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestEval"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "get_token_name", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestEval"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "self", "type": "TestEval"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "self", "type": "TestEval"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestEval"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Tuple[Any]], str]]"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "kb", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestEval"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestEval"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestEval"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "get_token_name", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestEval"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "self", "type": "TestEval"}, {"lineNumber": 79, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestPHPEchoEval"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "self", "type": "TestPHPEchoEval"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "self", "type": "TestPHPEchoEval"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "kb", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestPHPEchoEval"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestPHPEchoEval"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "TestPHPEchoEval"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "get_token_name", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestPHPSleepEval"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "self", "type": "TestPHPSleepEval"}, {"lineNumber": 130, "col_offset": 32, "nodeName": "self", "type": "TestPHPSleepEval"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "kb", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TestPHPSleepEval"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "vulns", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "TestPHPSleepEval"}, {"lineNumber": 138, "col_offset": 26, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestPHPSleepEval"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "get_token_name", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "self", "type": "TestEval"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "get_url", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "self", "type": "TestEval"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 79, "col_offset": 49, "nodeName": "get_url", "type": "Any"}, {"lineNumber": 95, "col_offset": 55, "nodeName": "BOOL", "type": "Any"}, {"lineNumber": 96, "col_offset": 62, "nodeName": "BOOL", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "self", "type": "TestPHPEchoEval"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 125, "col_offset": 56, "nodeName": "BOOL", "type": "Any"}, {"lineNumber": 126, "col_offset": 61, "nodeName": "BOOL", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "self", "type": "TestPHPSleepEval"}, {"lineNumber": 138, "col_offset": 26, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 79, "col_offset": 49, "nodeName": "vuln", "type": "Any"}, {"lineNumber": 95, "col_offset": 55, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 96, "col_offset": 62, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 125, "col_offset": 56, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 126, "col_offset": 61, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 36, "col_offset": 58, "nodeName": "BOOL", "type": "Any"}, {"lineNumber": 37, "col_offset": 65, "nodeName": "BOOL", "type": "Any"}, {"lineNumber": 46, "col_offset": 59, "nodeName": "BOOL", "type": "Any"}, {"lineNumber": 47, "col_offset": 64, "nodeName": "BOOL", "type": "Any"}, {"lineNumber": 36, "col_offset": 58, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 37, "col_offset": 65, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 46, "col_offset": 59, "nodeName": "PluginConfig", "type": "Any"}, {"lineNumber": 47, "col_offset": 64, "nodeName": "PluginConfig", "type": "Any"}]