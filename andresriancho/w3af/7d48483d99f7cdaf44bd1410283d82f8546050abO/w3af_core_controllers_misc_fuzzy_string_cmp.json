[{"lineNumber": 27, "col_offset": 0, "nodeName": "fuzzy_equal", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "fuzzy_equal_return_distance", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "_get_optimized_fuzzy_equal", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "upper_bound_similarity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 0, "nodeName": "fuzzy_not_equal", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 0, "nodeName": "relative_distance", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "optimization_result", "type": "Optional[Union[bool, Any]]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "distance", "type": "float"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "optimization_result", "type": "Optional[Union[bool, Any]]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "distance", "type": "float"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "a_len", "type": "int"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "b_len", "type": "int"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "_get_optimized_fuzzy_equal", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 53, "nodeName": "a_str", "type": "Any"}, {"lineNumber": 40, "col_offset": 60, "nodeName": "b_str", "type": "Any"}, {"lineNumber": 42, "col_offset": 7, "nodeName": "optimization_result", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "optimization_result", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "relative_distance", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "a_str", "type": "Any"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "b_str", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "distance", "type": "float"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "_get_optimized_fuzzy_equal", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 53, "nodeName": "a_str", "type": "Any"}, {"lineNumber": 62, "col_offset": 60, "nodeName": "b_str", "type": "Any"}, {"lineNumber": 64, "col_offset": 7, "nodeName": "optimization_result", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "relative_distance", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "a_str", "type": "Any"}, {"lineNumber": 68, "col_offset": 40, "nodeName": "b_str", "type": "Any"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "distance", "type": "float"}, {"lineNumber": 89, "col_offset": 7, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 92, "col_offset": 7, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "a_str", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "b_str", "type": "Any"}, {"lineNumber": 104, "col_offset": 7, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 112, "col_offset": 7, "nodeName": "b_len", "type": "int"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "a_len", "type": "int"}, {"lineNumber": 40, "col_offset": 77, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 62, "col_offset": 77, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "optimization_result", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "distance", "type": "float"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "a_str", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "b_str", "type": "Any"}, {"lineNumber": 98, "col_offset": 7, "nodeName": "b_len", "type": "int"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "a_len", "type": "int"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "a_len", "type": "int"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "b_len", "type": "int"}, {"lineNumber": 101, "col_offset": 7, "nodeName": "b_len", "type": "int"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "a_len", "type": "int"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "a_str", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "b_str", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "upper_bound_similarity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "a_len", "type": "int"}, {"lineNumber": 104, "col_offset": 49, "nodeName": "b_len", "type": "int"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "a_len", "type": "int"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "b_len", "type": "int"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "b_len", "type": "int"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "a_len", "type": "int"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "a_len", "type": "int"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "a_len", "type": "int"}, {"lineNumber": 115, "col_offset": 36, "nodeName": "b_len", "type": "int"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "fuzzy_equal", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "a_str", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "b_str", "type": "Any"}, {"lineNumber": 123, "col_offset": 41, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "SequenceMatcher", "type": "Type[difflib.SequenceMatcher[Any]]"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "difflib", "type": "module"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "split_by_sep", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 138, "col_offset": 48, "nodeName": "a_str", "type": "Any"}, {"lineNumber": 139, "col_offset": 35, "nodeName": "split_by_sep", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 139, "col_offset": 48, "nodeName": "b_str", "type": "Any"}]