[{"lineNumber": 29, "col_offset": 0, "nodeName": "just_sleep", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "use_memory_in_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "test_sub_process_with_low_memory_usage_not_affected", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "test_sub_process_with_high_memory_usage_but_not_so_much_is_not_killed", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "test_effective_kill_limit", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "test_sub_process_with_high_memory_usage_is_killed", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "test_main_process_high_memory_usage_after_starting_nothing_killed", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "test_main_process_high_memory_usage_before_starting_nothing_killed", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "get_pool_with_memlimit", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "secs", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "block_size", "type": "int"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "memory_user", "type": "str"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "MEMORY_LIMIT", "type": "int"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "initializer", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "sleep", "type": "Callable[[Union[float, int]], None]"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "secs", "type": "Any"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "xrange", "type": "Type[xrange]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "memory_user", "type": "str"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "memory_user", "type": "str"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "pool", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "secs", "type": "int"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "future", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "pool", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "workers_before_test", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "usage", "type": "int"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "future", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "pool", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "block_size", "type": "int"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "current_len", "type": "int"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "pool", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "workers_before_test", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "usage", "type": "int"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "MEMORY_LIMIT", "type": "int"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "future", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "secs", "type": "int"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "future", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "pool", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "secs", "type": "int"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "future", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "block_size", "type": "int"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "memory_user", "type": "str"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "pool", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "secs", "type": "int"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "future", "type": "Any"}, {"lineNumber": 184, "col_offset": 22, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "pool", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "time", "type": "module"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "get_pool_with_memlimit", "type": "Callable[[], Any]"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "xrange", "type": "Type[xrange]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "future", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "get_pool_with_memlimit", "type": "Callable[[], Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "schedule", "type": "Any"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "just_sleep", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "MEMORY_LIMIT", "type": "int"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "schedule", "type": "Any"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "use_memory_in_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 42, "nodeName": "usage", "type": "int"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "workers_before_test", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "get_pool_with_memlimit", "type": "Callable[[], Any]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "current_len", "type": "int"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "block_size", "type": "int"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "future", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "get_pool_with_memlimit", "type": "Callable[[], Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "schedule", "type": "Any"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "just_sleep", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "self", "type": "TestPebbleMemoryUsage"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "schedule", "type": "Any"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "use_memory_in_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "MemoryError", "type": "Type[MemoryError]"}, {"lineNumber": 124, "col_offset": 39, "nodeName": "result", "type": "Any"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "xrange", "type": "Type[xrange]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "future", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "workers_before_test", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "get_pool_with_memlimit", "type": "Callable[[], Any]"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "xrange", "type": "Type[xrange]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "future", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "use_memory_in_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "MEMORY_LIMIT", "type": "int"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "xrange", "type": "Type[xrange]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "memory_user", "type": "str"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "get_pool_with_memlimit", "type": "Callable[[], Any]"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "xrange", "type": "Type[xrange]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "future", "type": "Any"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "ProcessPool", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "memory", "type": "int"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "block_size", "type": "int"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "self", "type": "TestPebbleMemoryUsage"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "schedule", "type": "Any"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "just_sleep", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "future", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 46, "nodeName": "secs", "type": "int"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "self", "type": "TestPebbleMemoryUsage"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "pool", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "keys", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "self", "type": "TestPebbleMemoryUsage"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "pool", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestPebbleMemoryUsage"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "result", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestPebbleMemoryUsage"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "self", "type": "TestPebbleMemoryUsage"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "schedule", "type": "Any"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "use_memory_in_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "MemoryError", "type": "Type[MemoryError]"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "self", "type": "TestPebbleMemoryUsage"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "pool", "type": "Any"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "keys", "type": "Any"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "pool", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "TestPebbleMemoryUsage"}, {"lineNumber": 124, "col_offset": 39, "nodeName": "future", "type": "Any"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "schedule", "type": "Any"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "just_sleep", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "future", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 46, "nodeName": "secs", "type": "int"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "TestPebbleMemoryUsage"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "self", "type": "TestPebbleMemoryUsage"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "schedule", "type": "Any"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "just_sleep", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 151, "col_offset": 27, "nodeName": "future", "type": "Any"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "self", "type": "TestPebbleMemoryUsage"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 46, "nodeName": "secs", "type": "int"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "self", "type": "TestPebbleMemoryUsage"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "schedule", "type": "Any"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "just_sleep", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "future", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 46, "nodeName": "secs", "type": "int"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "resource", "type": "module"}, {"lineNumber": 207, "col_offset": 39, "nodeName": "initializer", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "pool", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "self", "type": "TestPebbleMemoryUsage"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "workers", "type": "Any"}, {"lineNumber": 79, "col_offset": 59, "nodeName": "usage", "type": "int"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "future", "type": "Any"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "keys", "type": "Any"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "pool", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "result", "type": "Any"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "workers", "type": "Any"}, {"lineNumber": 121, "col_offset": 59, "nodeName": "usage", "type": "int"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "pool", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "self", "type": "TestPebbleMemoryUsage"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "keys", "type": "Any"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "pool", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "self", "type": "TestPebbleMemoryUsage"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "MEMORY_LIMIT", "type": "int"}, {"lineNumber": 171, "col_offset": 48, "nodeName": "block_size", "type": "int"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "pool", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "self", "type": "TestPebbleMemoryUsage"}, {"lineNumber": 185, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "soft", "type": "int"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "hard", "type": "int"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "getrlimit", "type": "Callable[[int], Tuple[int, int]]"}, {"lineNumber": 197, "col_offset": 48, "nodeName": "RLIMIT_AS", "type": "int"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "setrlimit", "type": "Callable[[int, Tuple[int, int]], None]"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "RLIMIT_AS", "type": "int"}, {"lineNumber": 208, "col_offset": 37, "nodeName": "MEMORY_LIMIT", "type": "int"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "secs", "type": "int"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "future", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "worker_manager", "type": "Any"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "workers", "type": "Any"}, {"lineNumber": 99, "col_offset": 63, "nodeName": "current_len", "type": "int"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "future", "type": "Any"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "worker_manager", "type": "Any"}, {"lineNumber": 131, "col_offset": 53, "nodeName": "secs", "type": "int"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "future", "type": "Any"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "workers", "type": "Any"}, {"lineNumber": 150, "col_offset": 53, "nodeName": "secs", "type": "int"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "future", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "self", "type": "TestPebbleMemoryUsage"}, {"lineNumber": 180, "col_offset": 53, "nodeName": "secs", "type": "int"}, {"lineNumber": 185, "col_offset": 29, "nodeName": "future", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "resource", "type": "module"}, {"lineNumber": 197, "col_offset": 48, "nodeName": "resource", "type": "module"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "resource", "type": "module"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "resource", "type": "module"}, {"lineNumber": 198, "col_offset": 56, "nodeName": "memlimit", "type": "Any"}, {"lineNumber": 198, "col_offset": 66, "nodeName": "hard", "type": "int"}, {"lineNumber": 208, "col_offset": 37, "nodeName": "self", "type": "TestPebbleMemoryUsage"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "_pool_manager", "type": "Any"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "worker_manager", "type": "Any"}, {"lineNumber": 103, "col_offset": 50, "nodeName": "current_len", "type": "int"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "_pool_manager", "type": "Any"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "worker_manager", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "pool", "type": "Any"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "_pool_manager", "type": "Any"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "pool", "type": "Any"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "_pool_manager", "type": "Any"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "pool", "type": "Any"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "pool", "type": "Any"}]