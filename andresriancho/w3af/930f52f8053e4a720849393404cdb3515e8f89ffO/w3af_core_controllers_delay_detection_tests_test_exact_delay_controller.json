[{"lineNumber": 34, "col_offset": 0, "nodeName": "generate_delays", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "test_delay_controlled", "type": "Callable[[Any], Any]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "test_delay_controlled_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "delay_secs", "type": "Union[int, float]"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "wanted_delays", "type": "Union[Tuple[int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int], Tuple[float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int], Tuple[float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float], List[float], Tuple[int, float, int, float, int, float, float, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float], Tuple[float, float, float, float, float, float, float, float, float, float, float, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, float, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float]]"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "delay_secs", "type": "float"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "mock_response", "type": "mock.Mock"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "get_wait_time", "type": "mock.Mock"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "TEST_SUITE", "type": "List[Union[Tuple[bool, Tuple[float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float]], Tuple[bool, List[float]], Tuple[bool, Tuple[int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int]], Tuple[bool, Tuple[float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int]], Tuple[bool, Tuple[int, float, int, float, int, float, float, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float]], Tuple[bool, Tuple[float, float, float, float, float, float, float, float, float, float, float, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, float, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float]]]]"}, {"lineNumber": 204, "col_offset": 39, "nodeName": "TEST_SUITE", "type": "List[Union[Tuple[bool, Tuple[float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float]], Tuple[bool, List[float]], Tuple[bool, Tuple[int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int]], Tuple[bool, Tuple[float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int]], Tuple[bool, Tuple[int, float, int, float, int, float, float, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float]], Tuple[bool, Tuple[float, float, float, float, float, float, float, float, float, float, float, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, float, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float]]]]"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "mock_response", "type": "mock.Mock"}, {"lineNumber": 39, "col_offset": 38, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "mock_response", "type": "mock.Mock"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "expected_result", "type": "bool"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "delays", "type": "Union[Tuple[float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float], List[float], Tuple[int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int], Tuple[float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int], Tuple[int, float, int, float, int, float, float, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float], Tuple[float, float, float, float, float, float, float, float, float, float, float, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, float, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float]]"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "self", "type": "TestExactDelay"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "mock_uri_opener", "type": "mock.Mock"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "side_effect", "type": "Generator[mock.Mock, Any, None]"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "send_mutant", "type": "mock.MagicMock"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "delay_obj", "type": "w3af.core.controllers.delay_detection.exact_delay.ExactDelay"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "url", "type": "w3af.core.data.parsers.doc.url.URL"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "req", "type": "w3af.core.data.request.fuzzable_request.FuzzableRequest"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "mutant", "type": "w3af.core.data.fuzzer.mutants.querystring_mutant.QSMutant"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "ed", "type": "w3af.core.controllers.delay_detection.exact_delay_controller.ExactDelayController"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "expected_result", "type": "bool"}, {"lineNumber": 204, "col_offset": 29, "nodeName": "delays", "type": "Union[Tuple[float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float], List[float], Tuple[int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int], Tuple[float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int], Tuple[int, float, int, float, int, float, float, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float], Tuple[float, float, float, float, float, float, float, float, float, float, float, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, float, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float]]"}, {"lineNumber": 204, "col_offset": 39, "nodeName": "self", "type": "TestExactDelay"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "mock_uri_opener", "type": "mock.Mock"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "side_effect", "type": "Generator[mock.Mock, Any, None]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "send_mutant", "type": "mock.MagicMock"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "delay_obj", "type": "w3af.core.controllers.delay_detection.exact_delay.ExactDelay"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "url", "type": "w3af.core.data.parsers.doc.url.URL"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "req", "type": "w3af.core.data.request.fuzzable_request.FuzzableRequest"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "mutant", "type": "w3af.core.data.fuzzer.mutants.querystring_mutant.QSMutant"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "ed", "type": "w3af.core.controllers.delay_detection.exact_delay_controller.ExactDelayController"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "expected_result", "type": "bool"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 39, "col_offset": 56, "nodeName": "delay_secs", "type": "float"}, {"lineNumber": 188, "col_offset": 30, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "generate_delays", "type": "Callable[..., Any]"}, {"lineNumber": 189, "col_offset": 42, "nodeName": "delays", "type": "Union[List[float], Tuple[int, float, int, float, int, float, float, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float], Tuple[int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int], Tuple[float, float, float, float, float, float, float, float, float, float, float, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, float, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float], Tuple[float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int], Tuple[float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float]]"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "mock_uri_opener", "type": "mock.Mock"}, {"lineNumber": 190, "col_offset": 42, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "ExactDelay", "type": "Type[w3af.core.controllers.delay_detection.exact_delay.ExactDelay]"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "URL", "type": "Type[w3af.core.data.parsers.doc.url.URL]"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "FuzzableRequest", "type": "Type[w3af.core.data.request.fuzzable_request.FuzzableRequest]"}, {"lineNumber": 194, "col_offset": 34, "nodeName": "url", "type": "w3af.core.data.parsers.doc.url.URL"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "QSMutant", "type": "Type[w3af.core.data.fuzzer.mutants.querystring_mutant.QSMutant]"}, {"lineNumber": 195, "col_offset": 30, "nodeName": "req", "type": "w3af.core.data.request.fuzzable_request.FuzzableRequest"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "set_dc", "type": "Callable[[Any], None]"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "querystring", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "set_token", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "ExactDelayController", "type": "Type[w3af.core.controllers.delay_detection.exact_delay_controller.ExactDelayController]"}, {"lineNumber": 199, "col_offset": 38, "nodeName": "mutant", "type": "w3af.core.data.fuzzer.mutants.querystring_mutant.QSMutant"}, {"lineNumber": 199, "col_offset": 46, "nodeName": "delay_obj", "type": "w3af.core.controllers.delay_detection.exact_delay.ExactDelay"}, {"lineNumber": 199, "col_offset": 57, "nodeName": "mock_uri_opener", "type": "mock.Mock"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "controlled", "type": "bool"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "responses", "type": "List[Any]"}, {"lineNumber": 200, "col_offset": 36, "nodeName": "delay_is_controlled", "type": "Callable[[], Tuple[bool, List[Any]]]"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "expected_result", "type": "bool"}, {"lineNumber": 201, "col_offset": 46, "nodeName": "controlled", "type": "bool"}, {"lineNumber": 201, "col_offset": 58, "nodeName": "delays", "type": "Union[List[float], Tuple[int, float, int, float, int, float, float, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float], Tuple[int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int], Tuple[float, float, float, float, float, float, float, float, float, float, float, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, float, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float], Tuple[float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int], Tuple[float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float]]"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 206, "col_offset": 26, "nodeName": "generate_delays", "type": "Callable[..., Any]"}, {"lineNumber": 206, "col_offset": 42, "nodeName": "delays", "type": "Union[Tuple[float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int], Tuple[float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float], Tuple[int, float, int, float, int, float, float, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float], List[float], Tuple[float, float, float, float, float, float, float, float, float, float, float, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, float, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float], Tuple[int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int]]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "mock_uri_opener", "type": "mock.Mock"}, {"lineNumber": 207, "col_offset": 42, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "ExactDelay", "type": "Type[w3af.core.controllers.delay_detection.exact_delay.ExactDelay]"}, {"lineNumber": 210, "col_offset": 18, "nodeName": "URL", "type": "Type[w3af.core.data.parsers.doc.url.URL]"}, {"lineNumber": 211, "col_offset": 18, "nodeName": "FuzzableRequest", "type": "Type[w3af.core.data.request.fuzzable_request.FuzzableRequest]"}, {"lineNumber": 211, "col_offset": 34, "nodeName": "url", "type": "w3af.core.data.parsers.doc.url.URL"}, {"lineNumber": 212, "col_offset": 21, "nodeName": "QSMutant", "type": "Type[w3af.core.data.fuzzer.mutants.querystring_mutant.QSMutant]"}, {"lineNumber": 212, "col_offset": 30, "nodeName": "req", "type": "w3af.core.data.request.fuzzable_request.FuzzableRequest"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "set_dc", "type": "Callable[[Any], None]"}, {"lineNumber": 213, "col_offset": 26, "nodeName": "querystring", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "set_token", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "ExactDelayController", "type": "Type[w3af.core.controllers.delay_detection.exact_delay_controller.ExactDelayController]"}, {"lineNumber": 216, "col_offset": 38, "nodeName": "mutant", "type": "w3af.core.data.fuzzer.mutants.querystring_mutant.QSMutant"}, {"lineNumber": 216, "col_offset": 46, "nodeName": "delay_obj", "type": "w3af.core.controllers.delay_detection.exact_delay.ExactDelay"}, {"lineNumber": 216, "col_offset": 57, "nodeName": "mock_uri_opener", "type": "mock.Mock"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "controlled", "type": "bool"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "responses", "type": "List[Any]"}, {"lineNumber": 217, "col_offset": 36, "nodeName": "delay_is_controlled", "type": "Callable[[], Tuple[bool, List[Any]]]"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "expected_result", "type": "List[bool]"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "expected_result", "type": "List[bool]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 26, "nodeName": "controlled", "type": "bool"}, {"lineNumber": 226, "col_offset": 38, "nodeName": "expected_result", "type": "List[bool]"}, {"lineNumber": 226, "col_offset": 55, "nodeName": "delays", "type": "Union[Tuple[float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int], Tuple[float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float], Tuple[int, float, int, float, int, float, float, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float, int, float], List[float], Tuple[float, float, float, float, float, float, float, float, float, float, float, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, float, float, float, float, int, float, float, float, int, float, float, float, int, float, float, float, int, float], Tuple[int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int]]"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "random", "type": "module"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "rand_range", "type": "Tuple[int, int]"}, {"lineNumber": 190, "col_offset": 64, "nodeName": "side_effect", "type": "Generator[mock.Mock, Any, None]"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "mutant", "type": "w3af.core.data.fuzzer.mutants.querystring_mutant.QSMutant"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "url", "type": "w3af.core.data.parsers.doc.url.URL"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "mutant", "type": "w3af.core.data.fuzzer.mutants.querystring_mutant.QSMutant"}, {"lineNumber": 200, "col_offset": 36, "nodeName": "ed", "type": "w3af.core.controllers.delay_detection.exact_delay_controller.ExactDelayController"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "self", "type": "TestExactDelay"}, {"lineNumber": 207, "col_offset": 64, "nodeName": "side_effect", "type": "Generator[mock.Mock, Any, None]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "mutant", "type": "w3af.core.data.fuzzer.mutants.querystring_mutant.QSMutant"}, {"lineNumber": 213, "col_offset": 26, "nodeName": "url", "type": "w3af.core.data.parsers.doc.url.URL"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "mutant", "type": "w3af.core.data.fuzzer.mutants.querystring_mutant.QSMutant"}, {"lineNumber": 217, "col_offset": 36, "nodeName": "ed", "type": "w3af.core.controllers.delay_detection.exact_delay_controller.ExactDelayController"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "self", "type": "TestExactDelay"}]