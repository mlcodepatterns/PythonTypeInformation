[{"lineNumber": 199, "col_offset": 0, "nodeName": "thermal_chooser", "type": "Callable[..., Any]"}, {"lineNumber": 273, "col_offset": 0, "nodeName": "ssa_path_compute_cost", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 294, "col_offset": 0, "nodeName": "_trial_greedy_ssa_path_and_cost", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 368, "col_offset": 0, "nodeName": "random_greedy", "type": "Callable[..., Any]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 18, "col_offset": 22, "nodeName": "PathOptimizer", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "path", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "parallel", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "parallel", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "_gen_results_parallel", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "_cancel_futures", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "setup", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "__del__", "type": "Callable[[Any], Any]"}, {"lineNumber": 309, "col_offset": 19, "nodeName": "RandomOptimizer", "type": "Type[RandomOptimizer]"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "choose_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "setup", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 375, "col_offset": 0, "nodeName": "random_greedy_128", "type": "functools.partial[nothing]"}, {"lineNumber": 18, "col_offset": 22, "nodeName": "paths", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "n", "type": "int"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "choices", "type": "List[Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "cmin", "type": "Any"}, {"lineNumber": 252, "col_offset": 7, "nodeName": "rel_temperature", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "other", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "choices", "type": "List[Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "output", "type": "FrozenSet[Any]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "remaining", "type": "Set[int]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "total_cost", "type": "int"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "max_size", "type": "int"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "ssa_path", "type": "Any"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "ssa_path", "type": "Any"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "optimizer", "type": "RandomGreedy"}, {"lineNumber": 375, "col_offset": 20, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 375, "col_offset": 38, "nodeName": "random_greedy", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "max_repeats", "type": "Any"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "max_repeats", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "max_time", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "max_time", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "better", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "parallel", "type": "Any"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "parallel", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "pre_dispatch", "type": "Any"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "pre_dispatch", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "costs", "type": "List[nothing]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "sizes", "type": "List[nothing]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "best", "type": "Dict[str, float]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "_repeats_start", "type": "int"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "_parallel", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "_parallel", "type": "Any"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "parallel", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "_managing_executor", "type": "bool"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "_executor", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "parallel", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "_futures", "type": "collections.deque[Any]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "repeats", "type": "Any"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "_futures", "type": "collections.deque[Any]"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "r_start", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "r_stop", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "repeats", "type": "List[int]"}, {"lineNumber": 172, "col_offset": 36, "nodeName": "trials", "type": "Generator[Any, Any, None]"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "path", "type": "Any"}, {"lineNumber": 236, "col_offset": 10, "nodeName": "queue", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 243, "col_offset": 7, "nodeName": "n", "type": "int"}, {"lineNumber": 245, "col_offset": 7, "nodeName": "n", "type": "int"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "temperature", "type": "Any"}, {"lineNumber": 256, "col_offset": 7, "nodeName": "temperature", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "energies", "type": "List[int]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "energies", "type": "List[float]"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "chosen", "type": "Any"}, {"lineNumber": 263, "col_offset": 14, "nodeName": "choices", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "cost", "type": "Any"}, {"lineNumber": 264, "col_offset": 10, "nodeName": "k1", "type": "Any"}, {"lineNumber": 264, "col_offset": 14, "nodeName": "k2", "type": "Any"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "k12", "type": "Any"}, {"lineNumber": 264, "col_offset": 24, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 264, "col_offset": 36, "nodeName": "chosen", "type": "Any"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "cost", "type": "Any"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "k1", "type": "Any"}, {"lineNumber": 270, "col_offset": 21, "nodeName": "k2", "type": "Any"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "k12", "type": "Any"}, {"lineNumber": 276, "col_offset": 13, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 277, "col_offset": 13, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 277, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "i", "type": "Any"}, {"lineNumber": 282, "col_offset": 11, "nodeName": "j", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "total_cost", "type": "Any"}, {"lineNumber": 288, "col_offset": 22, "nodeName": "flops12", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "max_size", "type": "Any"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "total_cost", "type": "Union[int, Any]"}, {"lineNumber": 291, "col_offset": 23, "nodeName": "max_size", "type": "Any"}, {"lineNumber": 297, "col_offset": 7, "nodeName": "r", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "choose_fn", "type": "None"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "ssa_greedy_optimize", "type": "Any"}, {"lineNumber": 303, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 303, "col_offset": 49, "nodeName": "output", "type": "Any"}, {"lineNumber": 303, "col_offset": 57, "nodeName": "size_dict", "type": "Any"}, {"lineNumber": 303, "col_offset": 68, "nodeName": "choose_fn", "type": "Optional[Any]"}, {"lineNumber": 303, "col_offset": 79, "nodeName": "cost_fn", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "cost", "type": "Union[int, Any]"}, {"lineNumber": 304, "col_offset": 10, "nodeName": "size", "type": "Any"}, {"lineNumber": 304, "col_offset": 17, "nodeName": "ssa_path_compute_cost", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 304, "col_offset": 39, "nodeName": "ssa_path", "type": "Any"}, {"lineNumber": 304, "col_offset": 49, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 304, "col_offset": 57, "nodeName": "output", "type": "Any"}, {"lineNumber": 304, "col_offset": 65, "nodeName": "size_dict", "type": "Any"}, {"lineNumber": 306, "col_offset": 11, "nodeName": "ssa_path", "type": "Any"}, {"lineNumber": 306, "col_offset": 21, "nodeName": "cost", "type": "Union[int, Any]"}, {"lineNumber": 306, "col_offset": 27, "nodeName": "size", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "cost_fn", "type": "Any"}, {"lineNumber": 344, "col_offset": 23, "nodeName": "cost_fn", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "temperature", "type": "Any"}, {"lineNumber": 345, "col_offset": 27, "nodeName": "temperature", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "rel_temperature", "type": "Any"}, {"lineNumber": 346, "col_offset": 31, "nodeName": "rel_temperature", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "nbranch", "type": "Any"}, {"lineNumber": 347, "col_offset": 23, "nodeName": "nbranch", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "fn", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 363, "col_offset": 13, "nodeName": "_trial_greedy_ssa_path_and_cost", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "args", "type": "Tuple[Any, Any, Any, Optional[functools.partial[nothing]], Any]"}, {"lineNumber": 371, "col_offset": 16, "nodeName": "RandomGreedy", "type": "Type[RandomGreedy]"}, {"lineNumber": 372, "col_offset": 11, "nodeName": "optimizer", "type": "RandomGreedy"}, {"lineNumber": 372, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 372, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 372, "col_offset": 37, "nodeName": "idx_dict", "type": "Any"}, {"lineNumber": 372, "col_offset": 47, "nodeName": "memory_limit", "type": "Any"}, {"lineNumber": 375, "col_offset": 20, "nodeName": "functools", "type": "module"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "get_better_fn", "type": "Any"}, {"lineNumber": 82, "col_offset": 42, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "ssa_to_linear", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "parallel", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "_executor", "type": "None"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "parallel", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "_executor", "type": "concurrent.futures.process.ProcessPoolExecutor"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "_managing_executor", "type": "bool"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "parallel", "type": "Any"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "Number", "type": "Type[numbers.Number]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "_executor", "type": "concurrent.futures.process.ProcessPoolExecutor"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "_managing_executor", "type": "bool"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "_executor", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "_futures", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "max_time", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "t0", "type": "float"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "trial_fn", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "trial_args", "type": "Tuple[Any, Any, Any, Any, str]"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "setup", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 159, "col_offset": 50, "nodeName": "output", "type": "Any"}, {"lineNumber": 159, "col_offset": 58, "nodeName": "size_dict", "type": "Any"}, {"lineNumber": 161, "col_offset": 18, "nodeName": "_repeats_start", "type": "Any"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "r_start", "type": "Any"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "max_repeats", "type": "Any"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "r_start", "type": "Any"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "r_stop", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "_executor", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "trials", "type": "Generator[Any, Any, None]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "trials", "type": "Generator[Any, Any, None]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "ssa_path", "type": "Any"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "cost", "type": "Any"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "size", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "found_new_best", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "found_new_best", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "_cancel_futures", "type": "Callable[[], Any]"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "n", "type": "int"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "nbranch", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "cost", "type": "Any"}, {"lineNumber": 237, "col_offset": 14, "nodeName": "k1", "type": "Any"}, {"lineNumber": 237, "col_offset": 18, "nodeName": "k2", "type": "Any"}, {"lineNumber": 237, "col_offset": 22, "nodeName": "k12", "type": "Any"}, {"lineNumber": 237, "col_offset": 28, "nodeName": "heappop", "type": "Callable"}, {"lineNumber": 237, "col_offset": 42, "nodeName": "queue", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "choices", "type": "List[Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 248, "col_offset": 30, "nodeName": "choice", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 248, "col_offset": 40, "nodeName": "choices", "type": "List[Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "max", "type": "Callable"}, {"lineNumber": 263, "col_offset": 14, "nodeName": "random", "type": "module"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 263, "col_offset": 35, "nodeName": "n", "type": "int"}, {"lineNumber": 263, "col_offset": 47, "nodeName": "energies", "type": "Union[List[int], List[float]]"}, {"lineNumber": 264, "col_offset": 24, "nodeName": "choices", "type": "List[Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "heappush", "type": "Callable"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "queue", "type": "Any"}, {"lineNumber": 268, "col_offset": 30, "nodeName": "other", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "map", "type": "Callable"}, {"lineNumber": 276, "col_offset": 22, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 276, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 278, "col_offset": 20, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "k12", "type": "Any"}, {"lineNumber": 283, "col_offset": 13, "nodeName": "flops12", "type": "Any"}, {"lineNumber": 283, "col_offset": 23, "nodeName": "calc_k12_flops", "type": "Any"}, {"lineNumber": 283, "col_offset": 44, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 283, "col_offset": 52, "nodeName": "output", "type": "FrozenSet[Any]"}, {"lineNumber": 283, "col_offset": 60, "nodeName": "remaining", "type": "Set[int]"}, {"lineNumber": 283, "col_offset": 71, "nodeName": "i", "type": "Any"}, {"lineNumber": 283, "col_offset": 74, "nodeName": "j", "type": "Any"}, {"lineNumber": 283, "col_offset": 77, "nodeName": "size_dict", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "discard", "type": "Callable[[Any], None]"}, {"lineNumber": 284, "col_offset": 26, "nodeName": "i", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "discard", "type": "Callable[[Any], None]"}, {"lineNumber": 285, "col_offset": 26, "nodeName": "j", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "add", "type": "Callable"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 287, "col_offset": 22, "nodeName": "k12", "type": "Any"}, {"lineNumber": 289, "col_offset": 19, "nodeName": "max", "type": "Callable"}, {"lineNumber": 289, "col_offset": 23, "nodeName": "max_size", "type": "int"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "r", "type": "Any"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "paths", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 356, "col_offset": 11, "nodeName": "nbranch", "type": "Any"}, {"lineNumber": 359, "col_offset": 15, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 359, "col_offset": 33, "nodeName": "thermal_chooser", "type": "Callable[..., Any]"}, {"lineNumber": 364, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 364, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 364, "col_offset": 32, "nodeName": "size_dict", "type": "Any"}, {"lineNumber": 364, "col_offset": 43, "nodeName": "choose_fn", "type": "Optional[functools.partial[nothing]]"}, {"lineNumber": 364, "col_offset": 59, "nodeName": "cost_fn", "type": "Any"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "fn", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 365, "col_offset": 19, "nodeName": "args", "type": "Tuple[Any, Any, Any, Optional[functools.partial[nothing]], Any]"}, {"lineNumber": 371, "col_offset": 31, "nodeName": "optimizer_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "paths", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "paths", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "best", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "shutdown", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "ProcessPoolExecutor", "type": "Type[concurrent.futures.process.ProcessPoolExecutor]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "numbers", "type": "module"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "ProcessPoolExecutor", "type": "Type[concurrent.futures.process.ProcessPoolExecutor]"}, {"lineNumber": 123, "col_offset": 49, "nodeName": "parallel", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "pre_dispatch", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 161, "col_offset": 18, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 161, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 161, "col_offset": 44, "nodeName": "costs", "type": "Any"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 167, "col_offset": 21, "nodeName": "_gen_results_parallel", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 48, "nodeName": "repeats", "type": "List[int]"}, {"lineNumber": 167, "col_offset": 57, "nodeName": "trial_fn", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 67, "nodeName": "trial_args", "type": "Tuple[Any, Any, Any, Any, str]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 175, "col_offset": 30, "nodeName": "cost", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "size", "type": "Any"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "better", "type": "Any"}, {"lineNumber": 179, "col_offset": 41, "nodeName": "cost", "type": "Any"}, {"lineNumber": 179, "col_offset": 47, "nodeName": "size", "type": "Any"}, {"lineNumber": 182, "col_offset": 37, "nodeName": "cost", "type": "Any"}, {"lineNumber": 183, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 184, "col_offset": 40, "nodeName": "ssa_path", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "shutdown", "type": "Any"}, {"lineNumber": 237, "col_offset": 28, "nodeName": "heapq", "type": "module"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "k1", "type": "Any"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "remaining", "type": "Any"}, {"lineNumber": 238, "col_offset": 34, "nodeName": "k2", "type": "Any"}, {"lineNumber": 238, "col_offset": 44, "nodeName": "remaining", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "choices", "type": "List[Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "cost", "type": "Any"}, {"lineNumber": 240, "col_offset": 30, "nodeName": "k1", "type": "Any"}, {"lineNumber": 240, "col_offset": 34, "nodeName": "k2", "type": "Any"}, {"lineNumber": 240, "col_offset": 38, "nodeName": "k12", "type": "Any"}, {"lineNumber": 248, "col_offset": 13, "nodeName": "choice", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 253, "col_offset": 30, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 253, "col_offset": 34, "nodeName": "cmin", "type": "Any"}, {"lineNumber": 257, "col_offset": 46, "nodeName": "c", "type": "Any"}, {"lineNumber": 257, "col_offset": 51, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 260, "col_offset": 20, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 260, "col_offset": 60, "nodeName": "c", "type": "Any"}, {"lineNumber": 260, "col_offset": 65, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "heapq", "type": "module"}, {"lineNumber": 278, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 278, "col_offset": 30, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 283, "col_offset": 23, "nodeName": "paths", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "remaining", "type": "Set[int]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "remaining", "type": "Set[int]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "remaining", "type": "Set[int]"}, {"lineNumber": 286, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 286, "col_offset": 26, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 289, "col_offset": 33, "nodeName": "compute_size_by_dict", "type": "Any"}, {"lineNumber": 289, "col_offset": 62, "nodeName": "k12", "type": "Any"}, {"lineNumber": 289, "col_offset": 67, "nodeName": "size_dict", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 348, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 356, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 359, "col_offset": 15, "nodeName": "functools", "type": "module"}, {"lineNumber": 359, "col_offset": 62, "nodeName": "temperature", "type": "Any"}, {"lineNumber": 360, "col_offset": 41, "nodeName": "nbranch", "type": "Any"}, {"lineNumber": 360, "col_offset": 71, "nodeName": "rel_temperature", "type": "Any"}, {"lineNumber": 364, "col_offset": 43, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 364, "col_offset": 59, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "_executor", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "_futures", "type": "collections.deque[Any]"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "result", "type": "Any"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "result", "type": "Any"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "cancel", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "time", "type": "module"}, {"lineNumber": 161, "col_offset": 44, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 167, "col_offset": 21, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "trial_fn", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "r", "type": "int"}, {"lineNumber": 169, "col_offset": 51, "nodeName": "r", "type": "int"}, {"lineNumber": 169, "col_offset": 56, "nodeName": "repeats", "type": "List[int]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "costs", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "sizes", "type": "Any"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 179, "col_offset": 53, "nodeName": "best", "type": "Any"}, {"lineNumber": 179, "col_offset": 73, "nodeName": "best", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "best", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "best", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "best", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "max_time", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "_executor", "type": "Any"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "c", "type": "Any"}, {"lineNumber": 257, "col_offset": 30, "nodeName": "cmin", "type": "Any"}, {"lineNumber": 260, "col_offset": 20, "nodeName": "math", "type": "module"}, {"lineNumber": 260, "col_offset": 43, "nodeName": "temperature", "type": "Any"}, {"lineNumber": 289, "col_offset": 33, "nodeName": "helpers", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 359, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 360, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 360, "col_offset": 71, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "_futures", "type": "collections.deque[Any]"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "submit", "type": "Any"}, {"lineNumber": 139, "col_offset": 59, "nodeName": "trial_fn", "type": "Any"}, {"lineNumber": 139, "col_offset": 69, "nodeName": "r", "type": "Any"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 169, "col_offset": 35, "nodeName": "trial_args", "type": "Tuple[Any, Any, Any, Any, str]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 179, "col_offset": 53, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 179, "col_offset": 73, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 187, "col_offset": 48, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 187, "col_offset": 62, "nodeName": "t0", "type": "float"}, {"lineNumber": 187, "col_offset": 67, "nodeName": "max_time", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "_executor", "type": "Any"}, {"lineNumber": 139, "col_offset": 73, "nodeName": "args", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "popleft", "type": "Callable"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "popleft", "type": "Callable"}, {"lineNumber": 187, "col_offset": 48, "nodeName": "time", "type": "module"}, {"lineNumber": 187, "col_offset": 67, "nodeName": "self", "type": "RandomGreedy"}, {"lineNumber": 260, "col_offset": 31, "nodeName": "c", "type": "Any"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "cmin", "type": "Any"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "_futures", "type": "collections.deque[Any]"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "_futures", "type": "collections.deque[Any]"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "self", "type": "RandomOptimizer"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "self", "type": "RandomOptimizer"}]