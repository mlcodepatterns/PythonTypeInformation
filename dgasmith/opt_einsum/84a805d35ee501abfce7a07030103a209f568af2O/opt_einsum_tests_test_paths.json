[{"lineNumber": 55, "col_offset": 0, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "assert_contract_order", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "test_size_by_dict", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "test_flop_cost", "type": "Callable[[], Any]"}, {"lineNumber": 117, "col_offset": 0, "nodeName": "test_bad_path_option", "type": "Callable[[], Any]"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "test_explicit_path", "type": "Callable[[], Any]"}, {"lineNumber": 127, "col_offset": 0, "nodeName": "test_path_optimal", "type": "Callable[[], Any]"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "test_path_greedy", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 0, "nodeName": "test_memory_paths", "type": "Callable[[], Any]"}, {"lineNumber": 166, "col_offset": 0, "nodeName": "test_path_edge_cases", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 175, "col_offset": 0, "nodeName": "test_optimal_edge_cases", "type": "Callable[[], Any]"}, {"lineNumber": 187, "col_offset": 0, "nodeName": "test_greedy_edge_cases", "type": "Callable[[], Any]"}, {"lineNumber": 200, "col_offset": 0, "nodeName": "test_can_optimize_outer_products", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 0, "nodeName": "test_large_path", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 0, "nodeName": "test_custom_random_greedy", "type": "Callable[[], Any]"}, {"lineNumber": 250, "col_offset": 0, "nodeName": "test_custom_branchbound", "type": "Callable[[], Any]"}, {"lineNumber": 271, "col_offset": 0, "nodeName": "test_parallel_random_greedy", "type": "Callable[[], Any]"}, {"lineNumber": 315, "col_offset": 0, "nodeName": "test_custom_path_optimizer", "type": "Callable[[], Any]"}, {"lineNumber": 334, "col_offset": 0, "nodeName": "test_custom_random_optimizer", "type": "Callable[[], Any]"}, {"lineNumber": 374, "col_offset": 0, "nodeName": "test_optimizer_registration", "type": "Callable[[], Any]"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "custom_optimizer", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "ret", "type": "bool"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "pos", "type": "int"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "ret", "type": "Union[Any, bool]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "compute_size_by_dict", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "test_func", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "optimal", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "test_data", "type": "Tuple[List[Set[str]], Set[str], Dict[str, int]]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "test_func", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "greedy", "type": "Callable[..., Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "test_data", "type": "Tuple[List[Set[str]], Set[str], Dict[str, int]]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "expression", "type": "str"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "path_ret", "type": "Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "path_ret", "type": "Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "path_ret", "type": "Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "path_ret", "type": "Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "path_ret", "type": "Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "expression", "type": "str"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "edge_test4", "type": "List[Any]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "expression", "type": "str"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "dim_dict", "type": "Dict[str, int]"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "symbols", "type": "str"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "dimension_dict", "type": "Dict[nothing, nothing]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "expression", "type": "str"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "temperature", "type": "float"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "max_repeats", "type": "int"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "nbranch", "type": "int"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "cutoff_flops_factor", "type": "int"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "pool", "type": "concurrent.futures.process.ProcessPoolExecutor"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "max_repeats", "type": "int"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "max_time", "type": "float"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "parallel", "type": "int"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "parallel", "type": "bool"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "are_done", "type": "List[Any]"}, {"lineNumber": 317, "col_offset": 25, "nodeName": "PathOptimizer", "type": "Type[opt_einsum.paths.PathOptimizer]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "__call__", "type": "Callable[..., Any]"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "exp", "type": "Any"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "was_used", "type": "Any"}, {"lineNumber": 336, "col_offset": 31, "nodeName": "RandomOptimizer", "type": "Type[opt_einsum.path_random.RandomOptimizer]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "random_path", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "setup", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "exp", "type": "Any"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "was_used", "type": "Any"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "eq", "type": "str"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "shapes", "type": "List[Tuple[int, int]]"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "ret", "type": "bool"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "func", "type": "Any"}, {"lineNumber": 71, "col_offset": 65, "nodeName": "max_size", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "benchmark", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "ind", "type": "str"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "val", "type": "int"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "val", "type": "int"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "helpers", "type": "module"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "v", "type": "str"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "contract", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "paths", "type": "module"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "explicit_path_tests", "type": "Dict[str, Tuple[List[Set[str]], Set[str], Dict[str, int]]]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "assert_contract_order", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "test_func", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 37, "nodeName": "test_data", "type": "Tuple[List[Set[str]], Set[str], Dict[str, int]]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "assert_contract_order", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "test_func", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 37, "nodeName": "test_data", "type": "Tuple[List[Set[str]], Set[str], Dict[str, int]]"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "paths", "type": "module"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "explicit_path_tests", "type": "Dict[str, Tuple[List[Set[str]], Set[str], Dict[str, int]]]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "assert_contract_order", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "test_func", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 37, "nodeName": "test_data", "type": "Tuple[List[Set[str]], Set[str], Dict[str, int]]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "assert_contract_order", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "test_func", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 37, "nodeName": "test_data", "type": "Tuple[List[Set[str]], Set[str], Dict[str, int]]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "build_views", "type": "Callable[..., List[Any]]"}, {"lineNumber": 149, "col_offset": 35, "nodeName": "expression", "type": "str"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "expression", "type": "str"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "expression", "type": "str"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "expression", "type": "str"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 162, "col_offset": 32, "nodeName": "expression", "type": "str"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "build_views", "type": "Callable[..., List[Any]]"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "expression", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "expression", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 35, "nodeName": "order", "type": "Any"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "build_views", "type": "Callable[..., List[Any]]"}, {"lineNumber": 179, "col_offset": 40, "nodeName": "expression", "type": "str"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 180, "col_offset": 10, "nodeName": "path_str", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 180, "col_offset": 38, "nodeName": "expression", "type": "str"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 22, "nodeName": "path", "type": "Any"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 183, "col_offset": 10, "nodeName": "path_str", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 183, "col_offset": 38, "nodeName": "expression", "type": "str"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 22, "nodeName": "path", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "k", "type": "str"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "build_views", "type": "Callable[..., List[Any]]"}, {"lineNumber": 191, "col_offset": 37, "nodeName": "expression", "type": "str"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 193, "col_offset": 10, "nodeName": "path_str", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 193, "col_offset": 38, "nodeName": "expression", "type": "str"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "path", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 196, "col_offset": 10, "nodeName": "path_str", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 196, "col_offset": 38, "nodeName": "expression", "type": "str"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "path", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 202, "col_offset": 7, "nodeName": "b", "type": "Any"}, {"lineNumber": 202, "col_offset": 10, "nodeName": "c", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 209, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 212, "col_offset": 14, "nodeName": "build_views", "type": "Callable[..., List[Any]]"}, {"lineNumber": 212, "col_offset": 37, "nodeName": "expression", "type": "str"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 215, "col_offset": 21, "nodeName": "expression", "type": "str"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "eq", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "rand_equation", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "RandomGreedy", "type": "Type[opt_einsum.path_random.RandomGreedy]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 226, "col_offset": 10, "nodeName": "path_info", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 226, "col_offset": 39, "nodeName": "eq", "type": "Any"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "path", "type": "Any"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "path", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "largest_intermediate", "type": "decimal.Decimal"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "opt_cost", "type": "decimal.Decimal"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 239, "col_offset": 10, "nodeName": "path_info", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 239, "col_offset": 22, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 239, "col_offset": 39, "nodeName": "eq", "type": "Any"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "path", "type": "Any"}, {"lineNumber": 244, "col_offset": 19, "nodeName": "path", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "largest_intermediate", "type": "decimal.Decimal"}, {"lineNumber": 247, "col_offset": 11, "nodeName": "opt_cost", "type": "decimal.Decimal"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "eq", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 251, "col_offset": 17, "nodeName": "rand_equation", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "BranchBound", "type": "Type[opt_einsum.paths.BranchBound]"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 255, "col_offset": 10, "nodeName": "path_info", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 255, "col_offset": 39, "nodeName": "eq", "type": "Any"}, {"lineNumber": 257, "col_offset": 11, "nodeName": "path", "type": "Any"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "path", "type": "Any"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "largest_intermediate", "type": "decimal.Decimal"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "opt_cost", "type": "decimal.Decimal"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 264, "col_offset": 10, "nodeName": "path_info", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 264, "col_offset": 22, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 264, "col_offset": 39, "nodeName": "eq", "type": "Any"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "path", "type": "Any"}, {"lineNumber": 266, "col_offset": 19, "nodeName": "path", "type": "Any"}, {"lineNumber": 267, "col_offset": 11, "nodeName": "largest_intermediate", "type": "decimal.Decimal"}, {"lineNumber": 268, "col_offset": 11, "nodeName": "opt_cost", "type": "decimal.Decimal"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "ProcessPoolExecutor", "type": "Type[concurrent.futures.process.ProcessPoolExecutor]"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "eq", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "rand_equation", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "RandomGreedy", "type": "Type[opt_einsum.path_random.RandomGreedy]"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 280, "col_offset": 10, "nodeName": "path_info", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 280, "col_offset": 22, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 280, "col_offset": 39, "nodeName": "eq", "type": "Any"}, {"lineNumber": 285, "col_offset": 11, "nodeName": "path", "type": "Any"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "path", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 286, "col_offset": 11, "nodeName": "parallel", "type": "Any"}, {"lineNumber": 286, "col_offset": 33, "nodeName": "pool", "type": "concurrent.futures.process.ProcessPoolExecutor"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "_executor", "type": "Any"}, {"lineNumber": 287, "col_offset": 34, "nodeName": "pool", "type": "concurrent.futures.process.ProcessPoolExecutor"}, {"lineNumber": 289, "col_offset": 11, "nodeName": "largest_intermediate", "type": "decimal.Decimal"}, {"lineNumber": 290, "col_offset": 11, "nodeName": "opt_cost", "type": "decimal.Decimal"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 293, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 297, "col_offset": 10, "nodeName": "path_info", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 297, "col_offset": 22, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 297, "col_offset": 39, "nodeName": "eq", "type": "Any"}, {"lineNumber": 302, "col_offset": 11, "nodeName": "path", "type": "Any"}, {"lineNumber": 302, "col_offset": 19, "nodeName": "path", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "largest_intermediate", "type": "decimal.Decimal"}, {"lineNumber": 305, "col_offset": 11, "nodeName": "opt_cost", "type": "decimal.Decimal"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 308, "col_offset": 11, "nodeName": "_executor", "type": "Any"}, {"lineNumber": 309, "col_offset": 11, "nodeName": "_executor", "type": "Any"}, {"lineNumber": 309, "col_offset": 38, "nodeName": "pool", "type": "concurrent.futures.process.ProcessPoolExecutor"}, {"lineNumber": 312, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "are_done", "type": "List[Any]"}, {"lineNumber": 317, "col_offset": 25, "nodeName": "paths", "type": "module"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "eq", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 323, "col_offset": 17, "nodeName": "rand_equation", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 326, "col_offset": 10, "nodeName": "contract", "type": "Callable[..., Any]"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "eq", "type": "Any"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "NaiveOptimizer", "type": "Type[Any]"}, {"lineNumber": 329, "col_offset": 10, "nodeName": "contract", "type": "Callable[..., Any]"}, {"lineNumber": 329, "col_offset": 22, "nodeName": "eq", "type": "Any"}, {"lineNumber": 330, "col_offset": 11, "nodeName": "exp", "type": "Any"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "out", "type": "Any"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 336, "col_offset": 31, "nodeName": "path_random", "type": "module"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "eq", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 361, "col_offset": 17, "nodeName": "rand_equation", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 364, "col_offset": 10, "nodeName": "contract", "type": "Callable[..., Any]"}, {"lineNumber": 364, "col_offset": 22, "nodeName": "eq", "type": "Any"}, {"lineNumber": 366, "col_offset": 16, "nodeName": "NaiveRandomOptimizer", "type": "Type[Any]"}, {"lineNumber": 367, "col_offset": 10, "nodeName": "contract", "type": "Callable[..., Any]"}, {"lineNumber": 367, "col_offset": 22, "nodeName": "eq", "type": "Any"}, {"lineNumber": 368, "col_offset": 11, "nodeName": "exp", "type": "Any"}, {"lineNumber": 368, "col_offset": 18, "nodeName": "out", "type": "Any"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "register_path_fn", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 382, "col_offset": 40, "nodeName": "custom_optimizer", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 383, "col_offset": 23, "nodeName": "_PATH_OPTIONS", "type": "Dict[Any, Any]"}, {"lineNumber": 387, "col_offset": 22, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 387, "col_offset": 39, "nodeName": "eq", "type": "str"}, {"lineNumber": 389, "col_offset": 11, "nodeName": "path", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "_PATH_OPTIONS", "type": "Dict[Any, Any]"}, {"lineNumber": 15, "col_offset": 51, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 21, "col_offset": 53, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 59, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "benchmark", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 71, "col_offset": 51, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "oe", "type": "module"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "v", "type": "str"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "flop_count", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 100, "col_offset": 54, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "flop_count", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 54, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "flop_count", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 56, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "flop_count", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 53, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "flop_count", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 55, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "flop_count", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 53, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "flop_count", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 57, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "contract", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "oe", "type": "module"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "item", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "oe", "type": "module"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "oe", "type": "module"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "helpers", "type": "module"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "oe", "type": "module"}, {"lineNumber": 152, "col_offset": 45, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "path_ret", "type": "Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "oe", "type": "module"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "path_ret", "type": "Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "oe", "type": "module"}, {"lineNumber": 159, "col_offset": 45, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "path_ret", "type": "Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "oe", "type": "module"}, {"lineNumber": 162, "col_offset": 45, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 22, "nodeName": "path_ret", "type": "Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "helpers", "type": "module"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "oe", "type": "module"}, {"lineNumber": 171, "col_offset": 45, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 61, "nodeName": "alg", "type": "Any"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "path_ret", "type": "Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "oe", "type": "module"}, {"lineNumber": 180, "col_offset": 51, "nodeName": "edge_test4", "type": "List[Any]"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "oe", "type": "module"}, {"lineNumber": 183, "col_offset": 51, "nodeName": "edge_test4", "type": "List[Any]"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "k", "type": "str"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "helpers", "type": "module"}, {"lineNumber": 191, "col_offset": 64, "nodeName": "dim_dict", "type": "Dict[str, int]"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "oe", "type": "module"}, {"lineNumber": 193, "col_offset": 51, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "oe", "type": "module"}, {"lineNumber": 196, "col_offset": 51, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 202, "col_offset": 43, "nodeName": "_", "type": "int"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 210, "col_offset": 30, "nodeName": "symbols", "type": "str"}, {"lineNumber": 212, "col_offset": 14, "nodeName": "helpers", "type": "module"}, {"lineNumber": 212, "col_offset": 64, "nodeName": "dimension_dict", "type": "Dict[nothing, nothing]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "oe", "type": "module"}, {"lineNumber": 215, "col_offset": 34, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 220, "col_offset": 17, "nodeName": "map", "type": "Callable"}, {"lineNumber": 220, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 220, "col_offset": 30, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 222, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 222, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "RandomGreedy", "type": "Type[opt_einsum.path_random.RandomGreedy]"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "oe", "type": "module"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "oe", "type": "module"}, {"lineNumber": 226, "col_offset": 44, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 226, "col_offset": 60, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "sizes", "type": "List[Any]"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 232, "col_offset": 11, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 232, "col_offset": 38, "nodeName": "min", "type": "Callable"}, {"lineNumber": 232, "col_offset": 42, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "path_info", "type": "Union[List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]], opt_einsum.contract.PathInfo]"}, {"lineNumber": 233, "col_offset": 45, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "path_info", "type": "Union[List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]], opt_einsum.contract.PathInfo]"}, {"lineNumber": 234, "col_offset": 33, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 239, "col_offset": 22, "nodeName": "oe", "type": "module"}, {"lineNumber": 239, "col_offset": 44, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 239, "col_offset": 60, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "sizes", "type": "List[Any]"}, {"lineNumber": 244, "col_offset": 19, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 245, "col_offset": 37, "nodeName": "min", "type": "Callable"}, {"lineNumber": 245, "col_offset": 41, "nodeName": "sizes", "type": "List[Any]"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "path_info", "type": "Union[List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]], opt_einsum.contract.PathInfo]"}, {"lineNumber": 246, "col_offset": 45, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 247, "col_offset": 11, "nodeName": "path_info", "type": "Union[List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]], opt_einsum.contract.PathInfo]"}, {"lineNumber": 247, "col_offset": 33, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 251, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "map", "type": "Callable"}, {"lineNumber": 252, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 252, "col_offset": 30, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "oe", "type": "module"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "oe", "type": "module"}, {"lineNumber": 255, "col_offset": 44, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 255, "col_offset": 60, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "path_info", "type": "Union[List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]], opt_einsum.contract.PathInfo]"}, {"lineNumber": 258, "col_offset": 45, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "path_info", "type": "Union[List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]], opt_einsum.contract.PathInfo]"}, {"lineNumber": 259, "col_offset": 33, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 264, "col_offset": 22, "nodeName": "oe", "type": "module"}, {"lineNumber": 264, "col_offset": 44, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 264, "col_offset": 60, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 266, "col_offset": 19, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 267, "col_offset": 11, "nodeName": "path_info", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 267, "col_offset": 45, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 268, "col_offset": 11, "nodeName": "path_info", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 277, "col_offset": 17, "nodeName": "map", "type": "Callable"}, {"lineNumber": 277, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 277, "col_offset": 30, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "oe", "type": "module"}, {"lineNumber": 279, "col_offset": 57, "nodeName": "pool", "type": "concurrent.futures.process.ProcessPoolExecutor"}, {"lineNumber": 280, "col_offset": 22, "nodeName": "oe", "type": "module"}, {"lineNumber": 280, "col_offset": 44, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 280, "col_offset": 60, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 282, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 283, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "sizes", "type": "List[Any]"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 286, "col_offset": 11, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 288, "col_offset": 11, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 288, "col_offset": 38, "nodeName": "min", "type": "Callable"}, {"lineNumber": 288, "col_offset": 42, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 289, "col_offset": 11, "nodeName": "path_info", "type": "Union[List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]], opt_einsum.contract.PathInfo]"}, {"lineNumber": 289, "col_offset": 45, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 290, "col_offset": 11, "nodeName": "path_info", "type": "Union[List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]], opt_einsum.contract.PathInfo]"}, {"lineNumber": 290, "col_offset": 33, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 297, "col_offset": 22, "nodeName": "oe", "type": "module"}, {"lineNumber": 297, "col_offset": 44, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 297, "col_offset": 60, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 299, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 299, "col_offset": 15, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "sizes", "type": "List[Any]"}, {"lineNumber": 302, "col_offset": 19, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 303, "col_offset": 11, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 303, "col_offset": 38, "nodeName": "min", "type": "Callable"}, {"lineNumber": 303, "col_offset": 42, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "path_info", "type": "Union[List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]], opt_einsum.contract.PathInfo]"}, {"lineNumber": 304, "col_offset": 45, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 305, "col_offset": 11, "nodeName": "path_info", "type": "Union[List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]], opt_einsum.contract.PathInfo]"}, {"lineNumber": 305, "col_offset": 33, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 308, "col_offset": 11, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 309, "col_offset": 11, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 311, "col_offset": 44, "nodeName": "f", "type": "Any"}, {"lineNumber": 311, "col_offset": 49, "nodeName": "_futures", "type": "collections.deque[Any]"}, {"lineNumber": 317, "col_offset": 25, "nodeName": "oe", "type": "module"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "was_used", "type": "bool"}, {"lineNumber": 323, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 324, "col_offset": 17, "nodeName": "map", "type": "Callable"}, {"lineNumber": 324, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 324, "col_offset": 30, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 326, "col_offset": 10, "nodeName": "oe", "type": "module"}, {"lineNumber": 326, "col_offset": 27, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 329, "col_offset": 10, "nodeName": "oe", "type": "module"}, {"lineNumber": 329, "col_offset": 27, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 329, "col_offset": 43, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 336, "col_offset": 31, "nodeName": "oe", "type": "module"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "ssa_path", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "remaining", "type": "Set[Any]"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "was_used", "type": "bool"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "trial_fn", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 357, "col_offset": 23, "nodeName": "random_path", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "trial_args", "type": "Tuple[int, Any, Any, Any]"}, {"lineNumber": 361, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 362, "col_offset": 17, "nodeName": "map", "type": "Callable"}, {"lineNumber": 362, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 362, "col_offset": 30, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 364, "col_offset": 10, "nodeName": "oe", "type": "module"}, {"lineNumber": 364, "col_offset": 27, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 367, "col_offset": 10, "nodeName": "oe", "type": "module"}, {"lineNumber": 367, "col_offset": 27, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 367, "col_offset": 43, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 371, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 371, "col_offset": 15, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 379, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 379, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "register_path_fn", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 380, "col_offset": 45, "nodeName": "custom_optimizer", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "paths", "type": "module"}, {"lineNumber": 383, "col_offset": 23, "nodeName": "paths", "type": "module"}, {"lineNumber": 387, "col_offset": 22, "nodeName": "oe", "type": "module"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "paths", "type": "module"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 15, "col_offset": 27, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 15, "col_offset": 38, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 21, "col_offset": 41, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "benchmark", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "ind", "type": "str"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "helpers", "type": "module"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "helpers", "type": "module"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "helpers", "type": "module"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "oe", "type": "module"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "oe", "type": "module"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "oe", "type": "module"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "replace", "type": "Callable"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "oe", "type": "module"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 202, "col_offset": 48, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 204, "col_offset": 43, "nodeName": "a", "type": "Any"}, {"lineNumber": 204, "col_offset": 46, "nodeName": "b", "type": "Any"}, {"lineNumber": 204, "col_offset": 49, "nodeName": "c", "type": "Any"}, {"lineNumber": 204, "col_offset": 52, "nodeName": "d", "type": "Any"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "get_symbol", "type": "Callable[[Any], str]"}, {"lineNumber": 209, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 209, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 210, "col_offset": 39, "nodeName": "cycle", "type": "Type[itertools.cycle[Any]]"}, {"lineNumber": 211, "col_offset": 26, "nodeName": "symbols", "type": "str"}, {"lineNumber": 211, "col_offset": 47, "nodeName": "t", "type": "int"}, {"lineNumber": 212, "col_offset": 14, "nodeName": "oe", "type": "module"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 220, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "oe", "type": "module"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 232, "col_offset": 11, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 232, "col_offset": 42, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 233, "col_offset": 45, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 234, "col_offset": 33, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 245, "col_offset": 41, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 246, "col_offset": 45, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 247, "col_offset": 33, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 251, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 252, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 258, "col_offset": 45, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 259, "col_offset": 33, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 267, "col_offset": 45, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 277, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 288, "col_offset": 11, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 288, "col_offset": 42, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 289, "col_offset": 45, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 290, "col_offset": 33, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 299, "col_offset": 15, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 303, "col_offset": 11, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 303, "col_offset": 42, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 304, "col_offset": 45, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 305, "col_offset": 33, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "running", "type": "Any"}, {"lineNumber": 311, "col_offset": 31, "nodeName": "done", "type": "Any"}, {"lineNumber": 311, "col_offset": 49, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 323, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 324, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 342, "col_offset": 27, "nodeName": "r", "type": "Any"}, {"lineNumber": 344, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "cost", "type": "Any"}, {"lineNumber": 351, "col_offset": 18, "nodeName": "size", "type": "Any"}, {"lineNumber": 351, "col_offset": 25, "nodeName": "ssa_path_compute_cost", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 351, "col_offset": 62, "nodeName": "ssa_path", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 351, "col_offset": 72, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 351, "col_offset": 80, "nodeName": "output", "type": "Any"}, {"lineNumber": 351, "col_offset": 88, "nodeName": "size_dict", "type": "Any"}, {"lineNumber": 352, "col_offset": 19, "nodeName": "ssa_path", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 352, "col_offset": 29, "nodeName": "cost", "type": "Any"}, {"lineNumber": 352, "col_offset": 35, "nodeName": "size", "type": "Any"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 356, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 356, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 357, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 358, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 358, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 358, "col_offset": 37, "nodeName": "output", "type": "Any"}, {"lineNumber": 358, "col_offset": 45, "nodeName": "size_dict", "type": "Any"}, {"lineNumber": 359, "col_offset": 19, "nodeName": "trial_fn", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 359, "col_offset": 29, "nodeName": "trial_args", "type": "Tuple[int, Any, Any, Any]"}, {"lineNumber": 361, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 362, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 371, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 379, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "paths", "type": "module"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "oe", "type": "module"}, {"lineNumber": 383, "col_offset": 23, "nodeName": "oe", "type": "module"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "oe", "type": "module"}, {"lineNumber": 64, "col_offset": 38, "nodeName": "pos", "type": "int"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "pos", "type": "int"}, {"lineNumber": 65, "col_offset": 45, "nodeName": "pos", "type": "int"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "oe", "type": "module"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "oe", "type": "module"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "oe", "type": "module"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "expression", "type": "str"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "oe", "type": "module"}, {"lineNumber": 204, "col_offset": 64, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "oe", "type": "module"}, {"lineNumber": 209, "col_offset": 48, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 209, "col_offset": 54, "nodeName": "num_symbols", "type": "Any"}, {"lineNumber": 210, "col_offset": 39, "nodeName": "itertools", "type": "module"}, {"lineNumber": 211, "col_offset": 34, "nodeName": "t", "type": "int"}, {"lineNumber": 211, "col_offset": 52, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 311, "col_offset": 31, "nodeName": "f", "type": "Any"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 344, "col_offset": 28, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 344, "col_offset": 34, "nodeName": "n", "type": "Any"}, {"lineNumber": 345, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 345, "col_offset": 22, "nodeName": "remaining", "type": "Set[Any]"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 346, "col_offset": 19, "nodeName": "j", "type": "Any"}, {"lineNumber": 346, "col_offset": 23, "nodeName": "choice", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 348, "col_offset": 33, "nodeName": "i", "type": "Any"}, {"lineNumber": 349, "col_offset": 16, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 349, "col_offset": 33, "nodeName": "j", "type": "Any"}, {"lineNumber": 350, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 351, "col_offset": 25, "nodeName": "path_random", "type": "module"}, {"lineNumber": 377, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 377, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "oe", "type": "module"}, {"lineNumber": 211, "col_offset": 36, "nodeName": "t", "type": "int"}, {"lineNumber": 211, "col_offset": 58, "nodeName": "num_symbols", "type": "Any"}, {"lineNumber": 321, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 321, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 346, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 346, "col_offset": 40, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 346, "col_offset": 45, "nodeName": "remaining", "type": "Set[Any]"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "remaining", "type": "Set[Any]"}, {"lineNumber": 347, "col_offset": 30, "nodeName": "n", "type": "Any"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "remaining", "type": "Set[Any]"}, {"lineNumber": 349, "col_offset": 16, "nodeName": "remaining", "type": "Set[Any]"}, {"lineNumber": 350, "col_offset": 16, "nodeName": "ssa_path", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 350, "col_offset": 33, "nodeName": "i", "type": "Any"}, {"lineNumber": 350, "col_offset": 36, "nodeName": "j", "type": "Any"}, {"lineNumber": 351, "col_offset": 25, "nodeName": "oe", "type": "module"}, {"lineNumber": 346, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 347, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 347, "col_offset": 38, "nodeName": "ssa_path", "type": "List[Tuple[Any, Any]]"}]