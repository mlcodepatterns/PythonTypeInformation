[{"lineNumber": 49, "col_offset": 0, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "assert_contract_order", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "test_size_by_dict", "type": "Callable[[], Any]"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "test_flop_cost", "type": "Callable[[], Any]"}, {"lineNumber": 111, "col_offset": 0, "nodeName": "test_path_optimal", "type": "Callable[[], Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "test_path_greedy", "type": "Callable[[], Any]"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "test_memory_paths", "type": "Callable[[], Any]"}, {"lineNumber": 150, "col_offset": 0, "nodeName": "test_path_edge_cases", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 0, "nodeName": "test_optimal_edge_cases", "type": "Callable[[], Any]"}, {"lineNumber": 171, "col_offset": 0, "nodeName": "test_greedy_edge_cases", "type": "Callable[[], Any]"}, {"lineNumber": 184, "col_offset": 0, "nodeName": "test_can_optimize_outer_products", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 0, "nodeName": "test_large_path", "type": "Callable[[Any], Any]"}, {"lineNumber": 202, "col_offset": 0, "nodeName": "test_custom_random_greedy", "type": "Callable[[], Any]"}, {"lineNumber": 234, "col_offset": 0, "nodeName": "test_custom_branchbound", "type": "Callable[[], Any]"}, {"lineNumber": 255, "col_offset": 0, "nodeName": "test_parallel_random_greedy", "type": "Callable[[], Any]"}, {"lineNumber": 299, "col_offset": 0, "nodeName": "test_custom_path_optimizer", "type": "Callable[[], Any]"}, {"lineNumber": 318, "col_offset": 0, "nodeName": "test_custom_random_optimizer", "type": "Callable[[], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "ret", "type": "bool"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "pos", "type": "int"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "ret", "type": "Union[Any, bool]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "compute_size_by_dict", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "test_func", "type": "Callable[..., Any]"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "optimal", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "test_data", "type": "Tuple[List[Set[str]], Set[str], Dict[str, int]]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "test_func", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "greedy", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "test_data", "type": "Tuple[List[Set[str]], Set[str], Dict[str, int]]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "expression", "type": "str"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "path_ret", "type": "Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "path_ret", "type": "Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "path_ret", "type": "Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "path_ret", "type": "Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "path_ret", "type": "Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "expression", "type": "str"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "edge_test4", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "expression", "type": "str"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "dim_dict", "type": "Dict[str, int]"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "symbols", "type": "Union[str, unicode]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "dimension_dict", "type": "Dict[nothing, nothing]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "expression", "type": "Union[str, unicode]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "temperature", "type": "float"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "max_repeats", "type": "int"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "nbranch", "type": "int"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "cutoff_flops_factor", "type": "int"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "pool", "type": "concurrent.futures.process.ProcessPoolExecutor"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "max_repeats", "type": "int"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "max_time", "type": "float"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "parallel", "type": "int"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "parallel", "type": "bool"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "are_done", "type": "List[Any]"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "PathOptimizer", "type": "Type[opt_einsum.paths.PathOptimizer]"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "__call__", "type": "Callable[..., Any]"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "exp", "type": "Any"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 315, "col_offset": 11, "nodeName": "was_used", "type": "Any"}, {"lineNumber": 320, "col_offset": 31, "nodeName": "RandomOptimizer", "type": "Type[opt_einsum.path_random.RandomOptimizer]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "random_path", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "setup", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "exp", "type": "Any"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 353, "col_offset": 11, "nodeName": "was_used", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "ret", "type": "bool"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "func", "type": "Any"}, {"lineNumber": 65, "col_offset": 65, "nodeName": "max_size", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "benchmark", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "ind", "type": "str"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "val", "type": "int"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "val", "type": "int"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "helpers", "type": "module"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "v", "type": "str"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "paths", "type": "module"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "explicit_path_tests", "type": "Dict[str, Tuple[List[Set[str]], Set[str], Dict[str, int]]]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "assert_contract_order", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "test_func", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 37, "nodeName": "test_data", "type": "Tuple[List[Set[str]], Set[str], Dict[str, int]]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "assert_contract_order", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "test_func", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "test_data", "type": "Tuple[List[Set[str]], Set[str], Dict[str, int]]"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "paths", "type": "module"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "explicit_path_tests", "type": "Dict[str, Tuple[List[Set[str]], Set[str], Dict[str, int]]]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "assert_contract_order", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "test_func", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 37, "nodeName": "test_data", "type": "Tuple[List[Set[str]], Set[str], Dict[str, int]]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "assert_contract_order", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "test_func", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "test_data", "type": "Tuple[List[Set[str]], Set[str], Dict[str, int]]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "build_views", "type": "Callable[..., List[Any]]"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "expression", "type": "str"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "expression", "type": "str"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "expression", "type": "str"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 143, "col_offset": 32, "nodeName": "expression", "type": "str"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "expression", "type": "str"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "build_views", "type": "Callable[..., List[Any]]"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "expression", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "expression", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 156, "col_offset": 35, "nodeName": "order", "type": "Any"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "build_views", "type": "Callable[..., List[Any]]"}, {"lineNumber": 163, "col_offset": 40, "nodeName": "expression", "type": "str"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 164, "col_offset": 10, "nodeName": "path_str", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "expression", "type": "str"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "path", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 167, "col_offset": 10, "nodeName": "path_str", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 167, "col_offset": 21, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 167, "col_offset": 38, "nodeName": "expression", "type": "str"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "path", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "k", "type": "str"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "build_views", "type": "Callable[..., List[Any]]"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "expression", "type": "str"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 177, "col_offset": 10, "nodeName": "path_str", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 177, "col_offset": 38, "nodeName": "expression", "type": "str"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "path", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 180, "col_offset": 10, "nodeName": "path_str", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 180, "col_offset": 38, "nodeName": "expression", "type": "str"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 22, "nodeName": "path", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 186, "col_offset": 7, "nodeName": "b", "type": "Any"}, {"lineNumber": 186, "col_offset": 10, "nodeName": "c", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 194, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 195, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "build_views", "type": "Callable[..., List[Any]]"}, {"lineNumber": 196, "col_offset": 37, "nodeName": "expression", "type": "Union[unicode, str]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "expression", "type": "Union[unicode, str]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "eq", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "rand_equation", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "RandomGreedy", "type": "Type[opt_einsum.path_random.RandomGreedy]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 210, "col_offset": 10, "nodeName": "path_info", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 210, "col_offset": 39, "nodeName": "eq", "type": "Any"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "path", "type": "Any"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "path", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "largest_intermediate", "type": "decimal.Decimal"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "opt_cost", "type": "decimal.Decimal"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 223, "col_offset": 10, "nodeName": "path_info", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 223, "col_offset": 39, "nodeName": "eq", "type": "Any"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "path", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "path", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "largest_intermediate", "type": "decimal.Decimal"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "opt_cost", "type": "decimal.Decimal"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "eq", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "rand_equation", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "BranchBound", "type": "Type[opt_einsum.paths.BranchBound]"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 239, "col_offset": 10, "nodeName": "path_info", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 239, "col_offset": 22, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 239, "col_offset": 39, "nodeName": "eq", "type": "Any"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "path", "type": "Any"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "path", "type": "Any"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "largest_intermediate", "type": "decimal.Decimal"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "opt_cost", "type": "decimal.Decimal"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 248, "col_offset": 10, "nodeName": "path_info", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 248, "col_offset": 39, "nodeName": "eq", "type": "Any"}, {"lineNumber": 250, "col_offset": 11, "nodeName": "path", "type": "Any"}, {"lineNumber": 250, "col_offset": 19, "nodeName": "path", "type": "Any"}, {"lineNumber": 251, "col_offset": 11, "nodeName": "largest_intermediate", "type": "decimal.Decimal"}, {"lineNumber": 252, "col_offset": 11, "nodeName": "opt_cost", "type": "decimal.Decimal"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "ProcessPoolExecutor", "type": "Type[concurrent.futures.process.ProcessPoolExecutor]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "eq", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "rand_equation", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "RandomGreedy", "type": "Type[opt_einsum.path_random.RandomGreedy]"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 264, "col_offset": 10, "nodeName": "path_info", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 264, "col_offset": 22, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 264, "col_offset": 39, "nodeName": "eq", "type": "Any"}, {"lineNumber": 269, "col_offset": 11, "nodeName": "path", "type": "Any"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "path", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "parallel", "type": "Any"}, {"lineNumber": 270, "col_offset": 33, "nodeName": "pool", "type": "concurrent.futures.process.ProcessPoolExecutor"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "_executor", "type": "Any"}, {"lineNumber": 271, "col_offset": 34, "nodeName": "pool", "type": "concurrent.futures.process.ProcessPoolExecutor"}, {"lineNumber": 273, "col_offset": 11, "nodeName": "largest_intermediate", "type": "decimal.Decimal"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "opt_cost", "type": "decimal.Decimal"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 277, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 281, "col_offset": 10, "nodeName": "path_info", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 281, "col_offset": 22, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 281, "col_offset": 39, "nodeName": "eq", "type": "Any"}, {"lineNumber": 286, "col_offset": 11, "nodeName": "path", "type": "Any"}, {"lineNumber": 286, "col_offset": 19, "nodeName": "path", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 288, "col_offset": 11, "nodeName": "largest_intermediate", "type": "decimal.Decimal"}, {"lineNumber": 289, "col_offset": 11, "nodeName": "opt_cost", "type": "decimal.Decimal"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 292, "col_offset": 11, "nodeName": "_executor", "type": "Any"}, {"lineNumber": 293, "col_offset": 11, "nodeName": "_executor", "type": "Any"}, {"lineNumber": 293, "col_offset": 38, "nodeName": "pool", "type": "concurrent.futures.process.ProcessPoolExecutor"}, {"lineNumber": 296, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "are_done", "type": "List[Any]"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "paths", "type": "module"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "eq", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 307, "col_offset": 17, "nodeName": "rand_equation", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 310, "col_offset": 10, "nodeName": "contract", "type": "Callable[..., Any]"}, {"lineNumber": 310, "col_offset": 22, "nodeName": "eq", "type": "Any"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "NaiveOptimizer", "type": "Type[Any]"}, {"lineNumber": 313, "col_offset": 10, "nodeName": "contract", "type": "Callable[..., Any]"}, {"lineNumber": 313, "col_offset": 22, "nodeName": "eq", "type": "Any"}, {"lineNumber": 314, "col_offset": 11, "nodeName": "exp", "type": "Any"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "out", "type": "Any"}, {"lineNumber": 315, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 320, "col_offset": 31, "nodeName": "path_random", "type": "module"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "eq", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 345, "col_offset": 17, "nodeName": "rand_equation", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 348, "col_offset": 10, "nodeName": "contract", "type": "Callable[..., Any]"}, {"lineNumber": 348, "col_offset": 22, "nodeName": "eq", "type": "Any"}, {"lineNumber": 350, "col_offset": 16, "nodeName": "NaiveRandomOptimizer", "type": "Type[Any]"}, {"lineNumber": 351, "col_offset": 10, "nodeName": "contract", "type": "Callable[..., Any]"}, {"lineNumber": 351, "col_offset": 22, "nodeName": "eq", "type": "Any"}, {"lineNumber": 352, "col_offset": 11, "nodeName": "exp", "type": "Any"}, {"lineNumber": 352, "col_offset": 18, "nodeName": "out", "type": "Any"}, {"lineNumber": 353, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 15, "col_offset": 51, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 21, "col_offset": 53, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 53, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "benchmark", "type": "Any"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 58, "col_offset": 44, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 65, "col_offset": 51, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "oe", "type": "module"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 39, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "v", "type": "str"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "flop_count", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 54, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "flop_count", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 54, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "flop_count", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 56, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "flop_count", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 53, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "flop_count", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 55, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "flop_count", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 53, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "flop_count", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 57, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "oe", "type": "module"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "oe", "type": "module"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "helpers", "type": "module"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "oe", "type": "module"}, {"lineNumber": 136, "col_offset": 45, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "path_ret", "type": "Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "oe", "type": "module"}, {"lineNumber": 139, "col_offset": 45, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "path_ret", "type": "Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "oe", "type": "module"}, {"lineNumber": 143, "col_offset": 45, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "path_ret", "type": "Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "oe", "type": "module"}, {"lineNumber": 146, "col_offset": 45, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "path_ret", "type": "Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "helpers", "type": "module"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "oe", "type": "module"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 155, "col_offset": 61, "nodeName": "alg", "type": "Any"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "path_ret", "type": "Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "oe", "type": "module"}, {"lineNumber": 164, "col_offset": 51, "nodeName": "edge_test4", "type": "List[Any]"}, {"lineNumber": 167, "col_offset": 21, "nodeName": "oe", "type": "module"}, {"lineNumber": 167, "col_offset": 51, "nodeName": "edge_test4", "type": "List[Any]"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "k", "type": "str"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "helpers", "type": "module"}, {"lineNumber": 175, "col_offset": 64, "nodeName": "dim_dict", "type": "Dict[str, int]"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "oe", "type": "module"}, {"lineNumber": 177, "col_offset": 51, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "oe", "type": "module"}, {"lineNumber": 180, "col_offset": 51, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 186, "col_offset": 43, "nodeName": "_", "type": "int"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 194, "col_offset": 30, "nodeName": "symbols", "type": "Union[str, unicode]"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "helpers", "type": "module"}, {"lineNumber": 196, "col_offset": 64, "nodeName": "dimension_dict", "type": "Dict[nothing, nothing]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "oe", "type": "module"}, {"lineNumber": 199, "col_offset": 34, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "map", "type": "Callable"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 204, "col_offset": 30, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 206, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 206, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "RandomGreedy", "type": "Type[opt_einsum.path_random.RandomGreedy]"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "oe", "type": "module"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "oe", "type": "module"}, {"lineNumber": 210, "col_offset": 44, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 210, "col_offset": 60, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "sizes", "type": "List[Any]"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 216, "col_offset": 11, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 216, "col_offset": 38, "nodeName": "min", "type": "Callable"}, {"lineNumber": 216, "col_offset": 42, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "path_info", "type": "Union[List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]], opt_einsum.contract.PathInfo]"}, {"lineNumber": 217, "col_offset": 45, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "path_info", "type": "Union[List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]], opt_einsum.contract.PathInfo]"}, {"lineNumber": 218, "col_offset": 33, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "oe", "type": "module"}, {"lineNumber": 223, "col_offset": 44, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 223, "col_offset": 60, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "sizes", "type": "List[Any]"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 229, "col_offset": 37, "nodeName": "min", "type": "Callable"}, {"lineNumber": 229, "col_offset": 41, "nodeName": "sizes", "type": "List[Any]"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "path_info", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 230, "col_offset": 45, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "path_info", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 231, "col_offset": 33, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "map", "type": "Callable"}, {"lineNumber": 236, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 236, "col_offset": 30, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "oe", "type": "module"}, {"lineNumber": 239, "col_offset": 22, "nodeName": "oe", "type": "module"}, {"lineNumber": 239, "col_offset": 44, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 239, "col_offset": 60, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "path_info", "type": "Union[List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]], opt_einsum.contract.PathInfo]"}, {"lineNumber": 242, "col_offset": 45, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "path_info", "type": "Union[List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]], opt_einsum.contract.PathInfo]"}, {"lineNumber": 243, "col_offset": 33, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "oe", "type": "module"}, {"lineNumber": 248, "col_offset": 44, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 248, "col_offset": 60, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 250, "col_offset": 19, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 251, "col_offset": 11, "nodeName": "path_info", "type": "Union[List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]], opt_einsum.contract.PathInfo]"}, {"lineNumber": 251, "col_offset": 45, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 252, "col_offset": 11, "nodeName": "path_info", "type": "Union[List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]], opt_einsum.contract.PathInfo]"}, {"lineNumber": 252, "col_offset": 33, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 261, "col_offset": 17, "nodeName": "map", "type": "Callable"}, {"lineNumber": 261, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 261, "col_offset": 30, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "oe", "type": "module"}, {"lineNumber": 263, "col_offset": 57, "nodeName": "pool", "type": "concurrent.futures.process.ProcessPoolExecutor"}, {"lineNumber": 264, "col_offset": 22, "nodeName": "oe", "type": "module"}, {"lineNumber": 264, "col_offset": 44, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 264, "col_offset": 60, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 267, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "sizes", "type": "List[Any]"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 272, "col_offset": 38, "nodeName": "min", "type": "Callable"}, {"lineNumber": 272, "col_offset": 42, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 273, "col_offset": 11, "nodeName": "path_info", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 273, "col_offset": 45, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "path_info", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 274, "col_offset": 33, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 281, "col_offset": 22, "nodeName": "oe", "type": "module"}, {"lineNumber": 281, "col_offset": 44, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 281, "col_offset": 60, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 283, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 284, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "sizes", "type": "List[Any]"}, {"lineNumber": 286, "col_offset": 19, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 287, "col_offset": 38, "nodeName": "min", "type": "Callable"}, {"lineNumber": 287, "col_offset": 42, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 288, "col_offset": 11, "nodeName": "path_info", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 288, "col_offset": 45, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 289, "col_offset": 11, "nodeName": "path_info", "type": "Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]"}, {"lineNumber": 289, "col_offset": 33, "nodeName": "best", "type": "Dict[str, Any]"}, {"lineNumber": 292, "col_offset": 11, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 293, "col_offset": 11, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 295, "col_offset": 44, "nodeName": "f", "type": "Any"}, {"lineNumber": 295, "col_offset": 49, "nodeName": "_futures", "type": "collections.deque[Any]"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "oe", "type": "module"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "was_used", "type": "bool"}, {"lineNumber": 307, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 308, "col_offset": 17, "nodeName": "map", "type": "Callable"}, {"lineNumber": 308, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 308, "col_offset": 30, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 310, "col_offset": 10, "nodeName": "oe", "type": "module"}, {"lineNumber": 310, "col_offset": 27, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 313, "col_offset": 10, "nodeName": "oe", "type": "module"}, {"lineNumber": 313, "col_offset": 27, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 313, "col_offset": 43, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 320, "col_offset": 31, "nodeName": "oe", "type": "module"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "ssa_path", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "remaining", "type": "Set[Any]"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "was_used", "type": "bool"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "trial_fn", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 341, "col_offset": 23, "nodeName": "random_path", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "trial_args", "type": "Tuple[int, Any, Any, Any]"}, {"lineNumber": 345, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 346, "col_offset": 17, "nodeName": "map", "type": "Callable"}, {"lineNumber": 346, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 346, "col_offset": 30, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 348, "col_offset": 10, "nodeName": "oe", "type": "module"}, {"lineNumber": 348, "col_offset": 27, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 351, "col_offset": 10, "nodeName": "oe", "type": "module"}, {"lineNumber": 351, "col_offset": 27, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 351, "col_offset": 43, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 355, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 355, "col_offset": 15, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 15, "col_offset": 27, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 15, "col_offset": 38, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 21, "col_offset": 41, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "benchmark", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "ind", "type": "str"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "helpers", "type": "module"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "helpers", "type": "module"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "helpers", "type": "module"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "oe", "type": "module"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "oe", "type": "module"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "replace", "type": "Callable"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "oe", "type": "module"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 186, "col_offset": 48, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[opt_einsum.contract.PathInfo, List[Tuple[Tuple[Any, ...], Set[Any], Any, Any, Union[bool, str]]]]]]"}, {"lineNumber": 188, "col_offset": 43, "nodeName": "a", "type": "Any"}, {"lineNumber": 188, "col_offset": 46, "nodeName": "b", "type": "Any"}, {"lineNumber": 188, "col_offset": 49, "nodeName": "c", "type": "Any"}, {"lineNumber": 188, "col_offset": 52, "nodeName": "d", "type": "Any"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "get_symbol", "type": "Callable[[Any], Union[str, unicode]]"}, {"lineNumber": 193, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 193, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 194, "col_offset": 39, "nodeName": "cycle", "type": "Type[itertools.cycle[Any]]"}, {"lineNumber": 195, "col_offset": 26, "nodeName": "symbols", "type": "Union[str, unicode]"}, {"lineNumber": 195, "col_offset": 47, "nodeName": "t", "type": "int"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "oe", "type": "module"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 206, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "oe", "type": "module"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 216, "col_offset": 11, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 216, "col_offset": 42, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 217, "col_offset": 45, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 218, "col_offset": 33, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 229, "col_offset": 41, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 230, "col_offset": 45, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 231, "col_offset": 33, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 236, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 242, "col_offset": 45, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 243, "col_offset": 33, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 251, "col_offset": 45, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 252, "col_offset": 33, "nodeName": "optimizer", "type": "opt_einsum.paths.BranchBound"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 261, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 272, "col_offset": 42, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 273, "col_offset": 45, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 274, "col_offset": 33, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 287, "col_offset": 42, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 288, "col_offset": 45, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 289, "col_offset": 33, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "running", "type": "Any"}, {"lineNumber": 295, "col_offset": 31, "nodeName": "done", "type": "Any"}, {"lineNumber": 295, "col_offset": 49, "nodeName": "optimizer", "type": "opt_einsum.path_random.RandomGreedy"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 307, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 308, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 326, "col_offset": 27, "nodeName": "r", "type": "Any"}, {"lineNumber": 328, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "cost", "type": "Any"}, {"lineNumber": 335, "col_offset": 18, "nodeName": "size", "type": "Any"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "ssa_path_compute_cost", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 335, "col_offset": 62, "nodeName": "ssa_path", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 335, "col_offset": 72, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 335, "col_offset": 80, "nodeName": "output", "type": "Any"}, {"lineNumber": 335, "col_offset": 88, "nodeName": "size_dict", "type": "Any"}, {"lineNumber": 336, "col_offset": 19, "nodeName": "ssa_path", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 336, "col_offset": 29, "nodeName": "cost", "type": "Any"}, {"lineNumber": 336, "col_offset": 35, "nodeName": "size", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 340, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 341, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 342, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 342, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 342, "col_offset": 37, "nodeName": "output", "type": "Any"}, {"lineNumber": 342, "col_offset": 45, "nodeName": "size_dict", "type": "Any"}, {"lineNumber": 343, "col_offset": 19, "nodeName": "trial_fn", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 343, "col_offset": 29, "nodeName": "trial_args", "type": "Tuple[int, Any, Any, Any]"}, {"lineNumber": 345, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 346, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 355, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "pos", "type": "int"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "pos", "type": "int"}, {"lineNumber": 59, "col_offset": 45, "nodeName": "pos", "type": "int"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "oe", "type": "module"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "oe", "type": "module"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "oe", "type": "module"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "expression", "type": "str"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "oe", "type": "module"}, {"lineNumber": 188, "col_offset": 64, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "oe", "type": "module"}, {"lineNumber": 193, "col_offset": 48, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 193, "col_offset": 54, "nodeName": "num_symbols", "type": "Any"}, {"lineNumber": 194, "col_offset": 39, "nodeName": "itertools", "type": "module"}, {"lineNumber": 195, "col_offset": 34, "nodeName": "t", "type": "int"}, {"lineNumber": 195, "col_offset": 52, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 295, "col_offset": 31, "nodeName": "f", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 328, "col_offset": 28, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 328, "col_offset": 34, "nodeName": "n", "type": "Any"}, {"lineNumber": 329, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 329, "col_offset": 22, "nodeName": "remaining", "type": "Set[Any]"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 330, "col_offset": 19, "nodeName": "j", "type": "Any"}, {"lineNumber": 330, "col_offset": 23, "nodeName": "choice", "type": "Any"}, {"lineNumber": 331, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 332, "col_offset": 33, "nodeName": "i", "type": "Any"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 333, "col_offset": 33, "nodeName": "j", "type": "Any"}, {"lineNumber": 334, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "path_random", "type": "module"}, {"lineNumber": 195, "col_offset": 36, "nodeName": "t", "type": "int"}, {"lineNumber": 195, "col_offset": 58, "nodeName": "num_symbols", "type": "Any"}, {"lineNumber": 305, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 305, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 330, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 330, "col_offset": 40, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 330, "col_offset": 45, "nodeName": "remaining", "type": "Set[Any]"}, {"lineNumber": 331, "col_offset": 16, "nodeName": "remaining", "type": "Set[Any]"}, {"lineNumber": 331, "col_offset": 30, "nodeName": "n", "type": "Any"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "remaining", "type": "Set[Any]"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "remaining", "type": "Set[Any]"}, {"lineNumber": 334, "col_offset": 16, "nodeName": "ssa_path", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 334, "col_offset": 33, "nodeName": "i", "type": "Any"}, {"lineNumber": 334, "col_offset": 36, "nodeName": "j", "type": "Any"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "oe", "type": "module"}, {"lineNumber": 330, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 331, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 331, "col_offset": 38, "nodeName": "ssa_path", "type": "List[Tuple[Any, Any]]"}]