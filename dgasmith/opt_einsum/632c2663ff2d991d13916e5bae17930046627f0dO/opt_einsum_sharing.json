[{"lineNumber": 14, "col_offset": 0, "nodeName": "parse_equation", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "count_cached_ops", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "_alpha_canonicalize", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "_save_tensors", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "_memoize", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "transpose_cache_wrap", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "tensordot_cache_wrap", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "einsum_cache_wrap", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 145, "col_offset": 0, "nodeName": "get_func_shared", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 0, "nodeName": "to_backend_cache_wrap", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 178, "col_offset": 0, "nodeName": "build_expression_shared", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "_SHARING_STACK", "type": "List[Union[Dict[Union[Tuple[str, str, int], Tuple[str, int], Tuple[str, Any, str, Tuple[Any, ...]], Tuple[str, Any, int, Tuple[Any, ...]]], Any], Any]]"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "_cache_wrap", "type": "Dict[str, Callable[[Any, Any], Any]]"}, {"lineNumber": 142, "col_offset": 0, "nodeName": "_cached_funcs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 172, "col_offset": 0, "nodeName": "_to_backend", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "parts", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "output", "type": "Union[Any, str]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "rename", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "equation", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "cache", "type": "nothing"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "tensors", "type": "Tuple[Any, ...]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "cache", "type": "nothing"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "result", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "cached_transpose", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "cached_tensordot", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "cached_einsum", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "transpose_cache_wrap", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "tensordot_cache_wrap", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "einsum_cache_wrap", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "cached_to_backend", "type": "Callable[..., Any]"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "split", "type": "Any"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "split", "type": "Any"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "output", "type": "Union[Any, str]"}, {"lineNumber": 45, "col_offset": 7, "nodeName": "cache", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "cache", "type": "Dict[Union[Tuple[str, str, int], Tuple[str, int], Tuple[str, Any, str, Tuple[Any, ...]], Tuple[str, Any, int, Tuple[Any, ...]]], Any]"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "_SHARING_STACK", "type": "List[Union[Dict[Union[Tuple[str, str, int], Tuple[str, int], Tuple[str, Any, str, Tuple[Any, ...]], Tuple[str, Any, int, Tuple[Any, ...]]], Any], Any]]"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "_SHARING_STACK", "type": "List[Union[Dict[Union[Tuple[str, str, int], Tuple[str, int], Tuple[str, Any, str, Tuple[Any, ...]], Tuple[str, Any, int, Tuple[Any, ...]]], Any], Any]]"}, {"lineNumber": 84, "col_offset": 7, "nodeName": "key", "type": "Any"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "cache", "type": "nothing"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "fn", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "cache", "type": "nothing"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "axes", "type": "Tuple[Any, ...]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "key", "type": "Tuple[str, Any, int, Tuple[Any, ...]]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "axes", "type": "Tuple[Tuple[Any, ...], Tuple[Any, ...]]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "key", "type": "Tuple[str, Any, int, int, Tuple[Tuple[Any, ...], Tuple[Any, ...]]]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "canonical", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "canonical_ids", "type": "Tuple[Any, ...]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "canonical_inputs", "type": "str"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "canonical_equation", "type": "str"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "key", "type": "Tuple[str, Any, str, Tuple[Any, ...]]"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "_SHARING_STACK", "type": "List[Union[Dict[Union[Tuple[str, str, int], Tuple[str, int], Tuple[str, Any, str, Tuple[Any, ...]], Tuple[str, Any, int, Tuple[Any, ...]]], Any], Any]]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "key", "type": "Tuple[str, str, int]"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "to_backend_cache_wrap", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "to_torch", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "to_backend_cache_wrap", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "to_cupy", "type": "Any"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "_SHARING_STACK", "type": "List[Union[Dict[Union[Tuple[str, str, int], Tuple[str, int], Tuple[str, Any, str, Tuple[Any, ...]], Tuple[str, Any, int, Tuple[Any, ...]]], Any], Any]]"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "eq", "type": "Any"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "parts", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "cache", "type": "Union[Dict[Union[Tuple[str, str, int], Tuple[str, int], Tuple[str, Any, str, Tuple[Any, ...]], Tuple[str, Any, int, Tuple[Any, ...]]], Any], Any]"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "cache", "type": "Union[Dict[Union[Tuple[str, str, int], Tuple[str, int], Tuple[str, Any, str, Tuple[Any, ...]], Tuple[str, Any, int, Tuple[Any, ...]]], Any], Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "rename", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "cache", "type": "nothing"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "cache", "type": "nothing"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "key", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "_save_tensors", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "a", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "axes", "type": "Any"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "backend", "type": "Any"}, {"lineNumber": 98, "col_offset": 43, "nodeName": "axes", "type": "Tuple[Any, ...]"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "_memoize", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "key", "type": "Tuple[str, Any, int, Tuple[Any, ...]]"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "a", "type": "Any"}, {"lineNumber": 99, "col_offset": 43, "nodeName": "axes", "type": "Tuple[Any, ...]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "_save_tensors", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "axes", "type": "Any"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "Number", "type": "Type[numbers.Number]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "axes", "type": "Tuple[List[int], List[int]]"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "backend", "type": "Any"}, {"lineNumber": 113, "col_offset": 50, "nodeName": "axes", "type": "Tuple[Tuple[Any, ...], Tuple[Any, ...]]"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "_memoize", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "key", "type": "Tuple[str, Any, int, int, Tuple[Tuple[Any, ...], Tuple[Any, ...]]]"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "tensordot", "type": "Any"}, {"lineNumber": 114, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 114, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 114, "col_offset": 46, "nodeName": "axes", "type": "Tuple[Tuple[Any, ...], Tuple[Any, ...]]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "_save_tensors", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "output", "type": "Union[Any, str]"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "parse_equation", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 40, "nodeName": "equation", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "_alpha_canonicalize", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "backend", "type": "Any"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "canonical_equation", "type": "str"}, {"lineNumber": 130, "col_offset": 53, "nodeName": "canonical_ids", "type": "Tuple[Any, ...]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "_memoize", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "key", "type": "Tuple[str, Any, str, Tuple[Any, ...]]"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "einsum", "type": "Any"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "equation", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "get_func", "type": "Any"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "func", "type": "Any"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "backend", "type": "Any"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "backend", "type": "str"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "_memoize", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "key", "type": "Tuple[str, str, int]"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "to_backend", "type": "Any"}, {"lineNumber": 167, "col_offset": 41, "nodeName": "array", "type": "Any"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "_torch", "type": "Any"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "_cupy", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "build_expression", "type": "Any"}, {"lineNumber": 185, "col_offset": 32, "nodeName": "backend", "type": "Any"}, {"lineNumber": 185, "col_offset": 41, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 185, "col_offset": 49, "nodeName": "expr", "type": "Any"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "parts", "type": "Any"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 19, "col_offset": 29, "nodeName": "parts", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "_SHARING_STACK", "type": "List[Union[Dict[Union[Tuple[str, str, int], Tuple[str, int], Tuple[str, Any, str, Tuple[Any, ...]], Tuple[str, Any, int, Tuple[Any, ...]]], Any], Any]]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "_SHARING_STACK", "type": "List[Union[Dict[Union[Tuple[str, str, int], Tuple[str, int], Tuple[str, Any, str, Tuple[Any, ...]], Tuple[str, Any, int, Tuple[Any, ...]]], Any], Any]]"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "key", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "rename", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "get_symbol", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 70, "col_offset": 45, "nodeName": "equation", "type": "Any"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "key", "type": "Any"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "id", "type": "Callable[[Any], int]"}, {"lineNumber": 98, "col_offset": 39, "nodeName": "a", "type": "Any"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "numbers", "type": "module"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "id", "type": "Callable[[Any], int]"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "id", "type": "Callable[[Any], int]"}, {"lineNumber": 113, "col_offset": 46, "nodeName": "y", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "operands", "type": "Tuple[Any, ...]"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "id_", "type": "Any"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "input_", "type": "Any"}, {"lineNumber": 129, "col_offset": 49, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 129, "col_offset": 65, "nodeName": "canonical_inputs", "type": "str"}, {"lineNumber": 129, "col_offset": 83, "nodeName": "output", "type": "Union[Any, str]"}, {"lineNumber": 131, "col_offset": 48, "nodeName": "operands", "type": "Tuple[Any, ...]"}, {"lineNumber": 166, "col_offset": 37, "nodeName": "id", "type": "Callable[[Any], int]"}, {"lineNumber": 166, "col_offset": 40, "nodeName": "array", "type": "Any"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "keys", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 69, "col_offset": 42, "nodeName": "rename", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "rename", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "axes", "type": "Union[Tuple[List[int], List[int]], Any]"}, {"lineNumber": 112, "col_offset": 37, "nodeName": "axes", "type": "Union[Tuple[List[int], List[int]], Any]"}, {"lineNumber": 126, "col_offset": 39, "nodeName": "map", "type": "Callable"}, {"lineNumber": 126, "col_offset": 43, "nodeName": "id", "type": "Callable[[Any], int]"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "operands", "type": "Tuple[Any, ...]"}, {"lineNumber": 127, "col_offset": 48, "nodeName": "canonical", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 128, "col_offset": 60, "nodeName": "canonical", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "cache", "type": "Any"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "id", "type": "Callable[[Any], int]"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 111, "col_offset": 68, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 111, "col_offset": 95, "nodeName": "axes", "type": "Any"}, {"lineNumber": 127, "col_offset": 38, "nodeName": "_", "type": "Any"}, {"lineNumber": 127, "col_offset": 41, "nodeName": "id_", "type": "Any"}, {"lineNumber": 128, "col_offset": 47, "nodeName": "input_", "type": "Any"}, {"lineNumber": 128, "col_offset": 55, "nodeName": "_", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 111, "col_offset": 60, "nodeName": "axes", "type": "Any"}, {"lineNumber": 111, "col_offset": 73, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 111, "col_offset": 49, "nodeName": "shape", "type": "Any"}, {"lineNumber": 111, "col_offset": 79, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 111, "col_offset": 83, "nodeName": "shape", "type": "Any"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 111, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 111, "col_offset": 83, "nodeName": "y", "type": "Any"}]