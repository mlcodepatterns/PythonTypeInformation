[{"lineNumber": 39, "col_offset": 0, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "assert_contract_order", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "test_size_by_dict", "type": "Callable[[], Any]"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "test_flop_cost", "type": "Callable[[], Any]"}, {"lineNumber": 101, "col_offset": 0, "nodeName": "test_path_optimal", "type": "Callable[[], Any]"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "test_path_greedy", "type": "Callable[[], Any]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "test_memory_paths", "type": "Callable[[], Any]"}, {"lineNumber": 140, "col_offset": 0, "nodeName": "test_path_edge_cases", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 149, "col_offset": 0, "nodeName": "test_optimal_edge_cases", "type": "Callable[[], Any]"}, {"lineNumber": 161, "col_offset": 0, "nodeName": "test_greedy_edge_cases", "type": "Callable[[], Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "explicit_path_tests", "type": "Dict[str, Tuple[List[Set[str]], Set[str], Dict[str, int]]]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "path_edge_tests", "type": "List[Union[List[Union[str, Tuple[Tuple[int, int], Tuple[int, int]]]], List[Union[str, Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]]]]]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "ret", "type": "bool"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "pos", "type": "int"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "ret", "type": "Union[Any, bool]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "compute_size_by_dict", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "test_func", "type": "Callable[[Any, Any, Any, Any], List[Tuple[int, ...]]]"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "optimal", "type": "Callable[[Any, Any, Any, Any], List[Tuple[int, ...]]]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "test_data", "type": "Tuple[List[Set[str]], Set[str], Dict[str, int]]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "test_func", "type": "Callable[[Any, Any, Any, Any], List[Tuple[int, ...]]]"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "greedy", "type": "Callable[[Any, Any, Any, Any], List[Tuple[int, ...]]]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "test_data", "type": "Tuple[List[Set[str]], Set[str], Dict[str, int]]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "expression", "type": "str"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "path_ret", "type": "Tuple[Any, Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "path_ret", "type": "Tuple[Any, Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "path_ret", "type": "Tuple[Any, Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "path_ret", "type": "Tuple[Any, Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "path_ret", "type": "Tuple[Any, Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "expression", "type": "str"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "edge_test4", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "expression", "type": "str"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "dim_dict", "type": "Dict[str, int]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "ret", "type": "bool"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "func", "type": "Any"}, {"lineNumber": 55, "col_offset": 65, "nodeName": "max_size", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "benchmark", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "ind", "type": "str"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "val", "type": "int"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "val", "type": "int"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "helpers", "type": "module"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "v", "type": "str"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "paths", "type": "module"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "explicit_path_tests", "type": "Dict[str, Tuple[List[Set[str]], Set[str], Dict[str, int]]]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "assert_contract_order", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "test_func", "type": "Callable[[Any, Any, Any, Any], List[Tuple[int, ...]]]"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "test_data", "type": "Tuple[List[Set[str]], Set[str], Dict[str, int]]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "assert_contract_order", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "test_func", "type": "Callable[[Any, Any, Any, Any], List[Tuple[int, ...]]]"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "test_data", "type": "Tuple[List[Set[str]], Set[str], Dict[str, int]]"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "paths", "type": "module"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "explicit_path_tests", "type": "Dict[str, Tuple[List[Set[str]], Set[str], Dict[str, int]]]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "assert_contract_order", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "test_func", "type": "Callable[[Any, Any, Any, Any], List[Tuple[int, ...]]]"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "test_data", "type": "Tuple[List[Set[str]], Set[str], Dict[str, int]]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "assert_contract_order", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "test_func", "type": "Callable[[Any, Any, Any, Any], List[Tuple[int, ...]]]"}, {"lineNumber": 116, "col_offset": 37, "nodeName": "test_data", "type": "Tuple[List[Set[str]], Set[str], Dict[str, int]]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "build_views", "type": "Callable[..., List[Any]]"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "expression", "type": "str"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]]]"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "expression", "type": "str"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]]]"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "expression", "type": "str"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]]]"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "expression", "type": "str"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]]]"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "expression", "type": "str"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "build_views", "type": "Callable[..., List[Any]]"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "expression", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]]]"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "expression", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "order", "type": "Any"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "build_views", "type": "Callable[..., List[Any]]"}, {"lineNumber": 153, "col_offset": 40, "nodeName": "expression", "type": "str"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 154, "col_offset": 10, "nodeName": "path_str", "type": "Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]]]"}, {"lineNumber": 154, "col_offset": 38, "nodeName": "expression", "type": "str"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "path", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 157, "col_offset": 10, "nodeName": "path_str", "type": "Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]]]"}, {"lineNumber": 157, "col_offset": 38, "nodeName": "expression", "type": "str"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "path", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "k", "type": "str"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "build_views", "type": "Callable[..., List[Any]]"}, {"lineNumber": 165, "col_offset": 37, "nodeName": "expression", "type": "str"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 167, "col_offset": 10, "nodeName": "path_str", "type": "Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]"}, {"lineNumber": 167, "col_offset": 21, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]]]"}, {"lineNumber": 167, "col_offset": 38, "nodeName": "expression", "type": "str"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "path", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 170, "col_offset": 10, "nodeName": "path_str", "type": "Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "contract_path", "type": "Callable[..., Tuple[Any, Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]]]"}, {"lineNumber": 170, "col_offset": 38, "nodeName": "expression", "type": "str"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "check_path", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "path", "type": "Any"}, {"lineNumber": 13, "col_offset": 51, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 19, "col_offset": 53, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 43, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "benchmark", "type": "Any"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 48, "col_offset": 44, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 55, "col_offset": 51, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "oe", "type": "module"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "path_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "sizes_dict", "type": "Dict[str, int]"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "v", "type": "str"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "flop_count", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 54, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "flop_count", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 54, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "flop_count", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 56, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "flop_count", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 53, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "flop_count", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 55, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "flop_count", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 53, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "flop_count", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 57, "nodeName": "size_dict", "type": "Dict[str, int]"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "oe", "type": "module"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "oe", "type": "module"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "helpers", "type": "module"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "oe", "type": "module"}, {"lineNumber": 126, "col_offset": 45, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "path_ret", "type": "Tuple[Any, Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "oe", "type": "module"}, {"lineNumber": 129, "col_offset": 45, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "path_ret", "type": "Tuple[Any, Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]]"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "oe", "type": "module"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "path_ret", "type": "Tuple[Any, Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "oe", "type": "module"}, {"lineNumber": 136, "col_offset": 45, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "path_ret", "type": "Tuple[Any, Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "helpers", "type": "module"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "oe", "type": "module"}, {"lineNumber": 145, "col_offset": 45, "nodeName": "views", "type": "List[Any]"}, {"lineNumber": 145, "col_offset": 57, "nodeName": "alg", "type": "Any"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "path_ret", "type": "Tuple[Any, Union[str, List[Tuple[Tuple[Any, ...], Set[Any], str, Any, Union[bool, str]]]]]"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "oe", "type": "module"}, {"lineNumber": 154, "col_offset": 51, "nodeName": "edge_test4", "type": "List[Any]"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "oe", "type": "module"}, {"lineNumber": 157, "col_offset": 51, "nodeName": "edge_test4", "type": "List[Any]"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "k", "type": "str"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "helpers", "type": "module"}, {"lineNumber": 165, "col_offset": 64, "nodeName": "dim_dict", "type": "Dict[str, int]"}, {"lineNumber": 167, "col_offset": 21, "nodeName": "oe", "type": "module"}, {"lineNumber": 167, "col_offset": 51, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "oe", "type": "module"}, {"lineNumber": 170, "col_offset": 51, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 13, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 13, "col_offset": 27, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 13, "col_offset": 38, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 19, "col_offset": 29, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 19, "col_offset": 41, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "benchmark", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "ind", "type": "str"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "helpers", "type": "module"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "helpers", "type": "module"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "helpers", "type": "module"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "helpers", "type": "module"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "oe", "type": "module"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "oe", "type": "module"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "oe", "type": "module"}, {"lineNumber": 48, "col_offset": 38, "nodeName": "pos", "type": "int"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "pos", "type": "int"}, {"lineNumber": 49, "col_offset": 45, "nodeName": "pos", "type": "int"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "oe", "type": "module"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "oe", "type": "module"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "oe", "type": "module"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "oe", "type": "module"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "expression", "type": "str"}]