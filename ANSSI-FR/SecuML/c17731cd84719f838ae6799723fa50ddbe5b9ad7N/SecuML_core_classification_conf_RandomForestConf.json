[{"lineNumber": 24, "col_offset": 23, "nodeName": "ClassifierConf", "type": "Any"}, {"lineNumber": 168, "col_offset": 0, "nodeName": "registerClass", "type": "Any"}, {"lineNumber": 169, "col_offset": 49, "nodeName": "RandomForestConf", "type": "Type[RandomForestConf]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "model_class", "type": "Type[SecuML.core.classification.classifiers.RandomForest.RandomForest]"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "RandomForest", "type": "Type[SecuML.core.classification.classifiers.RandomForest.RandomForest]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "n_estimators", "type": "Any"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "n_estimators", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "min_weight_fraction_leaf", "type": "Any"}, {"lineNumber": 42, "col_offset": 40, "nodeName": "min_weight_fraction_leaf", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "max_leaf_nodes", "type": "Any"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "max_leaf_nodes", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "min_impurity_decrease", "type": "Any"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "min_impurity_decrease", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "bootstrap", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "bootstrap", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "oob_score", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "oob_score", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "hyper_conf", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "conf", "type": "RandomForestConf"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "conf", "type": "RandomForestConf"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "fields", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "fields", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "help_message", "type": "str"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "hyper_conf", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 31, "col_offset": 32, "nodeName": "self", "type": "RandomForestConf"}, {"lineNumber": 31, "col_offset": 38, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "families_supervision", "type": "Any"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "hyperparams_optim_conf", "type": "Any"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "logger", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "RandomForestConf"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "RandomForestConf"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "RandomForestConf"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "RandomForestConf"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "RandomForestConf"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "RandomForestConf"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "RandomForestConf"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "RandomForestConf"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "RandomForestConf"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "RandomForestConf"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "RandomForestConf"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "RandomForestConf"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "hyperparamConfFromJson", "type": "Any"}, {"lineNumber": 59, "col_offset": 59, "nodeName": "obj", "type": "Any"}, {"lineNumber": 59, "col_offset": 64, "nodeName": "logger", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "RandomForestConf", "type": "Type[RandomForestConf]"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "hyper_conf", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "logger", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "fieldsToExport", "type": "Any"}, {"lineNumber": 78, "col_offset": 47, "nodeName": "self", "type": "RandomForestConf"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "extend", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "generateParser", "type": "Any"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "parser", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "hyperparamConfFromArgs", "type": "Any"}, {"lineNumber": 150, "col_offset": 59, "nodeName": "args", "type": "Any"}, {"lineNumber": 150, "col_offset": 65, "nodeName": "logger", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "RandomForestConf", "type": "Type[RandomForestConf]"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "n_estimators", "type": "Any"}, {"lineNumber": 154, "col_offset": 32, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "min_weight_fraction_leaf", "type": "Any"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "max_leaf_nodes", "type": "Any"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "min_impurity_decrease", "type": "Any"}, {"lineNumber": 162, "col_offset": 32, "nodeName": "bootstrap", "type": "Any"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "oob_score", "type": "Any"}, {"lineNumber": 164, "col_offset": 32, "nodeName": "hyper_conf", "type": "Any"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "logger", "type": "Any"}, {"lineNumber": 168, "col_offset": 0, "nodeName": "getFactory", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "ClassifierConf", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "ClassifierConf", "type": "Any"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "obj", "type": "Any"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "obj", "type": "Any"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "obj", "type": "Any"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "obj", "type": "Any"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "obj", "type": "Any"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "obj", "type": "Any"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "obj", "type": "Any"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "obj", "type": "Any"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "obj", "type": "Any"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "obj", "type": "Any"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "obj", "type": "Any"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "obj", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "obj", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "ClassifierConf", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "fields", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "ClassifierConf", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 106, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "help_message", "type": "str"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "help_message", "type": "str"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "help_message", "type": "str"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "help_message", "type": "str"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "help_message", "type": "str"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "help_message", "type": "str"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "help_message", "type": "str"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "help_message", "type": "str"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 138, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "help_message", "type": "str"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 142, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "ClassifierConf", "type": "Any"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 154, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 162, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 168, "col_offset": 0, "nodeName": "ClassifierConfFactory", "type": "Any"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "primitive", "type": "Any"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "primitive", "type": "Any"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "primitive", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "primitive", "type": "Any"}, {"lineNumber": 83, "col_offset": 43, "nodeName": "primitive", "type": "Any"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "primitive", "type": "Any"}, {"lineNumber": 85, "col_offset": 50, "nodeName": "primitive", "type": "Any"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "primitive", "type": "Any"}, {"lineNumber": 87, "col_offset": 47, "nodeName": "primitive", "type": "Any"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "primitive", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "primitive", "type": "Any"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "exportFieldMethod", "type": "Type[SecuML.core.Conf.exportFieldMethod]"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "exportFieldMethod", "type": "Type[SecuML.core.Conf.exportFieldMethod]"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "exportFieldMethod", "type": "Type[SecuML.core.Conf.exportFieldMethod]"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "exportFieldMethod", "type": "Type[SecuML.core.Conf.exportFieldMethod]"}, {"lineNumber": 83, "col_offset": 43, "nodeName": "exportFieldMethod", "type": "Type[SecuML.core.Conf.exportFieldMethod]"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "exportFieldMethod", "type": "Type[SecuML.core.Conf.exportFieldMethod]"}, {"lineNumber": 85, "col_offset": 50, "nodeName": "exportFieldMethod", "type": "Type[SecuML.core.Conf.exportFieldMethod]"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "exportFieldMethod", "type": "Type[SecuML.core.Conf.exportFieldMethod]"}, {"lineNumber": 87, "col_offset": 47, "nodeName": "exportFieldMethod", "type": "Type[SecuML.core.Conf.exportFieldMethod]"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "exportFieldMethod", "type": "Type[SecuML.core.Conf.exportFieldMethod]"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "exportFieldMethod", "type": "Type[SecuML.core.Conf.exportFieldMethod]"}]