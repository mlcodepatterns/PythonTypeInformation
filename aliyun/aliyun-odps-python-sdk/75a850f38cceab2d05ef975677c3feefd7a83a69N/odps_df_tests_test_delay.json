[{"lineNumber": 24, "col_offset": 11, "nodeName": "TestBase", "type": "Type[odps.tests.core.TestBase]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "setup", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "testSyncExecute", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "testAsyncExecute", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "testPersistExecute", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "make_filter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "test_table_name", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "schema", "type": "odps.models.table.TableSchema"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "table", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "df", "type": "odps.df.core.DataFrame"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "delay", "type": "odps.df.delay.Delay"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "sub_futures", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "sub_future", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "waiter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "delay", "type": "odps.df.delay.Delay"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "sub_futures", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "future", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "delay", "type": "odps.df.delay.Delay"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "persist_table_name", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "future1", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "future2", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "df1", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "df2", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "result1", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "result2", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "tn", "type": "Callable[..., Any]"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "from_lists", "type": "Callable"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "delete_table", "type": "Any"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "test_table_name", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "create_table", "type": "Any"}, {"lineNumber": 31, "col_offset": 44, "nodeName": "test_table_name", "type": "Any"}, {"lineNumber": 31, "col_offset": 61, "nodeName": "schema", "type": "odps.models.table.TableSchema"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "DataFrame", "type": "Type[odps.df.core.DataFrame]"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "table", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "Delay", "type": "Type[odps.df.delay.Delay]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "cache", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "execute", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "execute", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "execute", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "f_df", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "Delay", "type": "Type[odps.df.delay.Delay]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "cache", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "execute", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "Delay", "type": "Type[odps.df.delay.Delay]"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "cache", "type": "Any"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "tn", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "from_lists", "type": "Callable"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "delete_table", "type": "Any"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "persist_table_name", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "create_table", "type": "Any"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "persist_table_name", "type": "Any"}, {"lineNumber": 89, "col_offset": 51, "nodeName": "schema", "type": "odps.models.table.TableSchema"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "persist", "type": "Any"}, {"lineNumber": 91, "col_offset": 55, "nodeName": "persist_table_name", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "persist", "type": "Any"}, {"lineNumber": 92, "col_offset": 55, "nodeName": "persist_table_name", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "execute", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "result", "type": "Any"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "result", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "_get_result", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "_get_result", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "Schema", "type": "Type[odps.models.table.TableSchema]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "odps", "type": "Any"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "odps", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "open_writer", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "data", "type": "List[List[Union[int, str]]]"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "self", "type": "Test"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "execute", "type": "Any"}, {"lineNumber": 43, "col_offset": 78, "nodeName": "i", "type": "int"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "delay", "type": "odps.df.delay.Delay"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 51, "col_offset": 65, "nodeName": "delay", "type": "odps.df.delay.Delay"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "delay", "type": "odps.df.delay.Delay"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "done", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "_get_result", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 65, "nodeName": "d", "type": "List[Union[int, str]]"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "val", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "df", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "f_df", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "execute", "type": "Any"}, {"lineNumber": 68, "col_offset": 73, "nodeName": "i", "type": "int"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "delay", "type": "odps.df.delay.Delay"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "future", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "done", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "Schema", "type": "Type[odps.models.table.TableSchema]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "odps", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "odps", "type": "Any"}, {"lineNumber": 91, "col_offset": 105, "nodeName": "delay", "type": "odps.df.delay.Delay"}, {"lineNumber": 92, "col_offset": 105, "nodeName": "delay", "type": "odps.df.delay.Delay"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "delay", "type": "odps.df.delay.Delay"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "future1", "type": "Any"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "future2", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "name", "type": "Any"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "self", "type": "Test"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "execute", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 100, "col_offset": 53, "nodeName": "d", "type": "List[Union[int, str]]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "name", "type": "Any"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "self", "type": "Test"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "execute", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 103, "col_offset": 53, "nodeName": "d", "type": "List[Union[int, str]]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "self", "type": "Test"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "table", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "self", "type": "Test"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "df", "type": "odps.df.core.DataFrame"}, {"lineNumber": 43, "col_offset": 67, "nodeName": "delay", "type": "odps.df.delay.Delay"}, {"lineNumber": 43, "col_offset": 83, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "self", "type": "Test"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "_get_result", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 77, "nodeName": "d", "type": "List[Union[int, str]]"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "sub_future", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "self", "type": "Test"}, {"lineNumber": 54, "col_offset": 42, "nodeName": "result", "type": "Any"}, {"lineNumber": 54, "col_offset": 71, "nodeName": "d", "type": "List[Union[int, str]]"}, {"lineNumber": 54, "col_offset": 76, "nodeName": "data", "type": "List[List[Union[int, str]]]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "sleep", "type": "Callable[[Union[float, int]], None]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "df", "type": "odps.df.core.DataFrame"}, {"lineNumber": 68, "col_offset": 62, "nodeName": "delay", "type": "odps.df.delay.Delay"}, {"lineNumber": 68, "col_offset": 78, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "execute", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "self", "type": "Test"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "done", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "Test"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "self", "type": "Test"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "self", "type": "Test"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "_get_result", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 77, "nodeName": "d", "type": "List[Union[int, str]]"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "future", "type": "Any"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "df", "type": "odps.df.core.DataFrame"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "c", "type": "Any"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "df1", "type": "Any"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "r", "type": "Any"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "r", "type": "Any"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "result1", "type": "Any"}, {"lineNumber": 100, "col_offset": 59, "nodeName": "d", "type": "List[Union[int, str]]"}, {"lineNumber": 100, "col_offset": 64, "nodeName": "data", "type": "List[List[Union[int, str]]]"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 101, "col_offset": 41, "nodeName": "c", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "df2", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "r", "type": "Any"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "r", "type": "Any"}, {"lineNumber": 103, "col_offset": 42, "nodeName": "result2", "type": "Any"}, {"lineNumber": 103, "col_offset": 59, "nodeName": "d", "type": "List[Union[int, str]]"}, {"lineNumber": 103, "col_offset": 64, "nodeName": "data", "type": "List[List[Union[int, str]]]"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "self", "type": "Test"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "self", "type": "Test"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "done", "type": "Any"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "f", "type": "Any"}, {"lineNumber": 46, "col_offset": 46, "nodeName": "sub_futures", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "self", "type": "Test"}, {"lineNumber": 48, "col_offset": 46, "nodeName": "result", "type": "Any"}, {"lineNumber": 48, "col_offset": 83, "nodeName": "d", "type": "List[Union[int, str]]"}, {"lineNumber": 48, "col_offset": 88, "nodeName": "data", "type": "List[List[Union[int, str]]]"}, {"lineNumber": 54, "col_offset": 42, "nodeName": "sub_future", "type": "Any"}, {"lineNumber": 54, "col_offset": 76, "nodeName": "self", "type": "Test"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "time", "type": "module"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "c", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "value", "type": "Any"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "cnt", "type": "int"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "self", "type": "Test"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "make_filter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "delay", "type": "odps.df.delay.Delay"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "future", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "self", "type": "Test"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "result", "type": "Any"}, {"lineNumber": 76, "col_offset": 83, "nodeName": "d", "type": "List[Union[int, str]]"}, {"lineNumber": 76, "col_offset": 88, "nodeName": "data", "type": "List[List[Union[int, str]]]"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "done", "type": "Any"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "f", "type": "Any"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "sub_futures", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "self", "type": "Test"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "c", "type": "Any"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "children", "type": "Any"}, {"lineNumber": 100, "col_offset": 64, "nodeName": "self", "type": "Test"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "c", "type": "Any"}, {"lineNumber": 101, "col_offset": 46, "nodeName": "children", "type": "Any"}, {"lineNumber": 103, "col_offset": 64, "nodeName": "self", "type": "Test"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "id", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "f", "type": "Any"}, {"lineNumber": 48, "col_offset": 88, "nodeName": "self", "type": "Test"}, {"lineNumber": 48, "col_offset": 109, "nodeName": "i", "type": "int"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "value", "type": "Any"}, {"lineNumber": 54, "col_offset": 89, "nodeName": "d", "type": "List[Union[int, str]]"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "exclude", "type": "Any"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "map", "type": "Any"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "id", "type": "Any"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "done", "type": "Any"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "f", "type": "Any"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "done", "type": "Any"}, {"lineNumber": 75, "col_offset": 45, "nodeName": "f", "type": "Any"}, {"lineNumber": 76, "col_offset": 88, "nodeName": "self", "type": "Test"}, {"lineNumber": 76, "col_offset": 109, "nodeName": "i", "type": "int"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "f", "type": "Any"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "id", "type": "Any"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "value", "type": "Any"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "value", "type": "Any"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 100, "col_offset": 77, "nodeName": "d", "type": "List[Union[int, str]]"}, {"lineNumber": 101, "col_offset": 46, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 103, "col_offset": 77, "nodeName": "d", "type": "List[Union[int, str]]"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "df", "type": "odps.df.core.DataFrame"}, {"lineNumber": 43, "col_offset": 32, "nodeName": "value", "type": "Any"}, {"lineNumber": 43, "col_offset": 50, "nodeName": "i", "type": "int"}, {"lineNumber": 48, "col_offset": 46, "nodeName": "sub_futures", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 101, "nodeName": "d", "type": "List[Union[int, str]]"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "f_df", "type": "Any"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "value", "type": "Any"}, {"lineNumber": 64, "col_offset": 62, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 64, "col_offset": 80, "nodeName": "waiter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 88, "nodeName": "cnt", "type": "int"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "df", "type": "odps.df.core.DataFrame"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "f", "type": "Any"}, {"lineNumber": 74, "col_offset": 51, "nodeName": "sub_futures", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 75, "col_offset": 50, "nodeName": "sub_futures", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "sub_futures", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 101, "nodeName": "d", "type": "List[Union[int, str]]"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "df", "type": "odps.df.core.DataFrame"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "df1", "type": "Any"}, {"lineNumber": 101, "col_offset": 46, "nodeName": "df2", "type": "Any"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "self", "type": "Test"}, {"lineNumber": 43, "col_offset": 32, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "f_df", "type": "Any"}, {"lineNumber": 64, "col_offset": 62, "nodeName": "functools", "type": "module"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "self", "type": "Test"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "self", "type": "Test"}, {"lineNumber": 48, "col_offset": 58, "nodeName": "i", "type": "int"}, {"lineNumber": 74, "col_offset": 63, "nodeName": "i", "type": "int"}, {"lineNumber": 75, "col_offset": 63, "nodeName": "i", "type": "int"}, {"lineNumber": 76, "col_offset": 58, "nodeName": "i", "type": "int"}]