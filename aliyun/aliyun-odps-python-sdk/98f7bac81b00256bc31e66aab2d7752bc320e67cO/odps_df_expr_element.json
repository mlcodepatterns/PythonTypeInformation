[{"lineNumber": 368, "col_offset": 0, "nodeName": "_map", "type": "Callable[..., Any]"}, {"lineNumber": 422, "col_offset": 0, "nodeName": "_hash", "type": "Callable[..., Any]"}, {"lineNumber": 436, "col_offset": 0, "nodeName": "_isnull", "type": "Callable[[Any], Any]"}, {"lineNumber": 450, "col_offset": 0, "nodeName": "_notnull", "type": "Callable[[Any], Any]"}, {"lineNumber": 464, "col_offset": 0, "nodeName": "_fillna", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 479, "col_offset": 0, "nodeName": "_isin", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 500, "col_offset": 0, "nodeName": "_notin", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 516, "col_offset": 0, "nodeName": "_between", "type": "Callable[..., Any]"}, {"lineNumber": 536, "col_offset": 0, "nodeName": "_scalar", "type": "Callable[..., Any]"}, {"lineNumber": 547, "col_offset": 0, "nodeName": "_ifelse", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 582, "col_offset": 0, "nodeName": "_switch", "type": "Callable[..., Any]"}, {"lineNumber": 639, "col_offset": 0, "nodeName": "switch", "type": "Callable[..., Any]"}, {"lineNumber": 674, "col_offset": 0, "nodeName": "_int_to_datetime", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "NodeMetaclass", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "__new__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "_get_type", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "_typed_classes", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "_base_class", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "is_seq", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "AnyOp", "type": "Type[AnyOp]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "node_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "name", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "input", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "iter_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "ElementWise", "type": "Type[ElementWise]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "accept", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "ElementWise", "type": "Type[ElementWise]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "_init", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "name", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "source_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "input_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "raw_input_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "accept", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "ElementOp", "type": "Type[ElementOp]"}, {"lineNumber": 151, "col_offset": 14, "nodeName": "ElementOp", "type": "Type[ElementOp]"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "ElementOp", "type": "Type[ElementOp]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "_init", "type": "Callable[..., Any]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "fill_value", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "ElementOp", "type": "Type[ElementOp]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "_init", "type": "Callable[..., Any]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "name", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "ElementOp", "type": "Type[ElementOp]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "_init", "type": "Callable[..., Any]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "name", "type": "Callable[[Any], Any]"}, {"lineNumber": 220, "col_offset": 14, "nodeName": "ElementOp", "type": "Type[ElementOp]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "_init", "type": "Callable[..., Any]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "_get_val", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "left", "type": "Callable[[Any], Any]"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "right", "type": "Callable[[Any], Any]"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "inclusive", "type": "Callable[[Any], Any]"}, {"lineNumber": 256, "col_offset": 13, "nodeName": "ElementOp", "type": "Type[ElementOp]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "name", "type": "Callable[[Any], Any]"}, {"lineNumber": 264, "col_offset": 13, "nodeName": "ElementOp", "type": "Type[ElementOp]"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "iter_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "name", "type": "Callable[[Any], Any]"}, {"lineNumber": 290, "col_offset": 10, "nodeName": "ElementOp", "type": "Type[ElementOp]"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "_init", "type": "Callable[..., Any]"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "right", "type": "Callable[[Any], Any]"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "include_lowest", "type": "Callable[[Any], Any]"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "include_under", "type": "Callable[[Any], Any]"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "include_over", "type": "Callable[[Any], Any]"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "name", "type": "Callable[[Any], Any]"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "ElementOp", "type": "Type[ElementOp]"}, {"lineNumber": 342, "col_offset": 11, "nodeName": "AnyOp", "type": "Type[AnyOp]"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "accept", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 350, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "__getattr__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 704, "col_offset": 0, "nodeName": "ifelse", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 704, "col_offset": 29, "nodeName": "_ifelse", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 705, "col_offset": 0, "nodeName": "ifelse", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 705, "col_offset": 23, "nodeName": "_ifelse", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 707, "col_offset": 0, "nodeName": "switch", "type": "Callable[..., Any]"}, {"lineNumber": 707, "col_offset": 24, "nodeName": "_switch", "type": "Callable[..., Any]"}, {"lineNumber": 709, "col_offset": 4, "nodeName": "int_number_sequence", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "with_metaclass", "type": "Any"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "AnyOpNodeMetaClass", "type": "Type[AnyOpNodeMetaClass]"}, {"lineNumber": 38, "col_offset": 51, "nodeName": "TypedExpr", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "__slots__", "type": "Tuple[()]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "__slots__", "type": "Tuple[()]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "_args", "type": "Tuple[str]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "__slots__", "type": "Tuple[()]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "_args", "type": "Tuple[str, str]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "node_name", "type": "str"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "__slots__", "type": "Tuple[()]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "__slots__", "type": "Tuple[()]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "_args", "type": "Tuple[str, str]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "_args", "type": "Tuple[str, str]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "_args", "type": "Tuple[str, str]"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "_args", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "_args", "type": "Tuple[str, str, str]"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "_args", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "__slots__", "type": "Tuple[()]"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "_slots", "type": "Tuple[str, str]"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "_args", "type": "Tuple[str]"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "name", "type": "None"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "rtype", "type": "Any"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "output_type", "type": "Any"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "collection_resources", "type": "Any"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "is_seq", "type": "bool"}, {"lineNumber": 412, "col_offset": 7, "nodeName": "is_seq", "type": "bool"}, {"lineNumber": 562, "col_offset": 4, "nodeName": "tps", "type": "Tuple[Any, Any]"}, {"lineNumber": 574, "col_offset": 7, "nodeName": "is_sequence", "type": "bool"}, {"lineNumber": 598, "col_offset": 4, "nodeName": "default", "type": "Any"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 622, "col_offset": 4, "nodeName": "output_type", "type": "Any"}, {"lineNumber": 630, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 631, "col_offset": 7, "nodeName": "is_seq", "type": "bool"}, {"lineNumber": 659, "col_offset": 4, "nodeName": "is_seq", "type": "bool"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "kw", "type": "Dict[str, Any]"}, {"lineNumber": 664, "col_offset": 7, "nodeName": "is_seq", "type": "bool"}, {"lineNumber": 688, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 701, "col_offset": 0, "nodeName": "add_method", "type": "Any"}, {"lineNumber": 701, "col_offset": 17, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 701, "col_offset": 31, "nodeName": "_element_methods", "type": "Dict[Any, Any]"}, {"lineNumber": 702, "col_offset": 0, "nodeName": "add_method", "type": "Any"}, {"lineNumber": 702, "col_offset": 17, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 702, "col_offset": 25, "nodeName": "_element_methods", "type": "Dict[Any, Any]"}, {"lineNumber": 704, "col_offset": 0, "nodeName": "BooleanSequenceExpr", "type": "Any"}, {"lineNumber": 705, "col_offset": 0, "nodeName": "BooleanScalar", "type": "Any"}, {"lineNumber": 707, "col_offset": 0, "nodeName": "CollectionExpr", "type": "Any"}, {"lineNumber": 709, "col_offset": 27, "nodeName": "int_number_sequences", "type": "Any"}, {"lineNumber": 709, "col_offset": 50, "nodeName": "int_number_scalars", "type": "Any"}, {"lineNumber": 710, "col_offset": 4, "nodeName": "to_datetime", "type": "Callable[[Any], Any]"}, {"lineNumber": 710, "col_offset": 38, "nodeName": "_int_to_datetime", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "six", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "_input", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "_inputs", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "_raw_inputs", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "input_types", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "_func", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "_func", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "f", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "_fill_value", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "_values", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "_name", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "_values", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "_name", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "attr", "type": "str"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "val", "type": "Any"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "val", "type": "Any"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "_name", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "it", "type": "nothing"}, {"lineNumber": 287, "col_offset": 15, "nodeName": "_name", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "arg", "type": "str"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "under", "type": "int"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "over", "type": "int"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "size", "type": "int"}, {"lineNumber": 319, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 327, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 335, "col_offset": 15, "nodeName": "_name", "type": "Any"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "gen_func", "type": "Callable[..., Any]"}, {"lineNumber": 383, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 383, "col_offset": 18, "nodeName": "func", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 383, "col_offset": 24, "nodeName": "FunctionWrapper", "type": "Any"}, {"lineNumber": 384, "col_offset": 11, "nodeName": "output_names", "type": "Any"}, {"lineNumber": 388, "col_offset": 11, "nodeName": "output_types", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "_func", "type": "Any"}, {"lineNumber": 392, "col_offset": 7, "nodeName": "rtype", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "rtype", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "rtype", "type": "Any"}, {"lineNumber": 397, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 398, "col_offset": 18, "nodeName": "validate_data_type", "type": "Any"}, {"lineNumber": 398, "col_offset": 43, "nodeName": "rtype", "type": "Any"}, {"lineNumber": 400, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 400, "col_offset": 18, "nodeName": "func", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 400, "col_offset": 24, "nodeName": "string_types", "type": "Any"}, {"lineNumber": 409, "col_offset": 27, "nodeName": "get_collection_resources", "type": "Any"}, {"lineNumber": 409, "col_offset": 58, "nodeName": "resources", "type": "None"}, {"lineNumber": 411, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 411, "col_offset": 24, "nodeName": "expr", "type": "Any"}, {"lineNumber": 411, "col_offset": 30, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 430, "col_offset": 7, "nodeName": "func", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 433, "col_offset": 11, "nodeName": "_map", "type": "Callable[..., Any]"}, {"lineNumber": 433, "col_offset": 16, "nodeName": "expr", "type": "Any"}, {"lineNumber": 444, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 444, "col_offset": 18, "nodeName": "expr", "type": "Any"}, {"lineNumber": 444, "col_offset": 24, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 458, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 458, "col_offset": 18, "nodeName": "expr", "type": "Any"}, {"lineNumber": 458, "col_offset": 24, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 473, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 473, "col_offset": 18, "nodeName": "expr", "type": "Any"}, {"lineNumber": 473, "col_offset": 24, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 491, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 491, "col_offset": 18, "nodeName": "values", "type": "Any"}, {"lineNumber": 491, "col_offset": 26, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 494, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 494, "col_offset": 18, "nodeName": "expr", "type": "Any"}, {"lineNumber": 494, "col_offset": 24, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 510, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 510, "col_offset": 18, "nodeName": "expr", "type": "Any"}, {"lineNumber": 510, "col_offset": 24, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 528, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 528, "col_offset": 18, "nodeName": "expr", "type": "Any"}, {"lineNumber": 528, "col_offset": 24, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 537, "col_offset": 7, "nodeName": "val", "type": "Any"}, {"lineNumber": 539, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 539, "col_offset": 18, "nodeName": "val", "type": "Any"}, {"lineNumber": 539, "col_offset": 23, "nodeName": "Expr", "type": "Any"}, {"lineNumber": 540, "col_offset": 15, "nodeName": "val", "type": "Any"}, {"lineNumber": 541, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 541, "col_offset": 18, "nodeName": "val", "type": "Any"}, {"lineNumber": 562, "col_offset": 11, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 562, "col_offset": 25, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "true_expr", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "false_expr", "type": "Any"}, {"lineNumber": 568, "col_offset": 18, "nodeName": "highest_precedence_data_type", "type": "Any"}, {"lineNumber": 598, "col_offset": 14, "nodeName": "_scalar", "type": "Callable[..., Any]"}, {"lineNumber": 603, "col_offset": 7, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "conditions", "type": "List[Any]"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "thens", "type": "List[Any]"}, {"lineNumber": 614, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 614, "col_offset": 18, "nodeName": "expr", "type": "Any"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "case", "type": "Any"}, {"lineNumber": 615, "col_offset": 15, "nodeName": "expr", "type": "Any"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "case", "type": "None"}, {"lineNumber": 621, "col_offset": 10, "nodeName": "thens", "type": "Any"}, {"lineNumber": 622, "col_offset": 18, "nodeName": "highest_precedence_data_type", "type": "Any"}, {"lineNumber": 627, "col_offset": 7, "nodeName": "case", "type": "Optional[Any]"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "is_seq", "type": "bool"}, {"lineNumber": 630, "col_offset": 13, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 632, "col_offset": 31, "nodeName": "output_type", "type": "Any"}, {"lineNumber": 634, "col_offset": 32, "nodeName": "output_type", "type": "Any"}, {"lineNumber": 635, "col_offset": 11, "nodeName": "Switch", "type": "Type[Switch]"}, {"lineNumber": 640, "col_offset": 11, "nodeName": "_switch", "type": "Callable[..., Any]"}, {"lineNumber": 659, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 659, "col_offset": 24, "nodeName": "expr", "type": "Any"}, {"lineNumber": 659, "col_offset": 30, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 662, "col_offset": 35, "nodeName": "int64", "type": "Any"}, {"lineNumber": 665, "col_offset": 27, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 667, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 669, "col_offset": 11, "nodeName": "Cut", "type": "Type[Cut]"}, {"lineNumber": 682, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 682, "col_offset": 18, "nodeName": "expr", "type": "Any"}, {"lineNumber": 682, "col_offset": 24, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "_map", "type": "Callable[..., Any]"}, {"lineNumber": 690, "col_offset": 11, "nodeName": "_isnull", "type": "Callable[[Any], Any]"}, {"lineNumber": 691, "col_offset": 12, "nodeName": "_notnull", "type": "Callable[[Any], Any]"}, {"lineNumber": 692, "col_offset": 11, "nodeName": "_fillna", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 693, "col_offset": 12, "nodeName": "_between", "type": "Callable[..., Any]"}, {"lineNumber": 694, "col_offset": 11, "nodeName": "_switch", "type": "Callable[..., Any]"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "_cut", "type": "Callable[..., Any]"}, {"lineNumber": 696, "col_offset": 9, "nodeName": "_isin", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 697, "col_offset": 10, "nodeName": "_notin", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 698, "col_offset": 9, "nodeName": "_hash", "type": "Callable[..., Any]"}, {"lineNumber": 701, "col_offset": 0, "nodeName": "utils", "type": "Any"}, {"lineNumber": 702, "col_offset": 0, "nodeName": "utils", "type": "Any"}, {"lineNumber": 710, "col_offset": 4, "nodeName": "int_number_sequence", "type": "Any"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "kv", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "__new__", "type": "Any"}, {"lineNumber": 35, "col_offset": 54, "nodeName": "mcs", "type": "Type[AnyOpNodeMetaClass]"}, {"lineNumber": 35, "col_offset": 59, "nodeName": "name", "type": "Any"}, {"lineNumber": 35, "col_offset": 65, "nodeName": "bases", "type": "Any"}, {"lineNumber": 35, "col_offset": 72, "nodeName": "kv", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "cls", "type": "Type[AnyOp]"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "_name", "type": "Any"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "visit_element_op", "type": "Any"}, {"lineNumber": 93, "col_offset": 40, "nodeName": "self", "type": "ElementOp"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "_init_attr", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "_init_attr", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "_init", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "_name", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "_name", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "_source_name", "type": "Any"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "_source_name", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "source_name", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "visit_function", "type": "Any"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "self", "type": "MappedExpr"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "_init_attr", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "_init", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "tp", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "_fill_value", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "_fill_value", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 177, "col_offset": 22, "nodeName": "_fill_value", "type": "Any"}, {"lineNumber": 177, "col_offset": 40, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "_init", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "IsIn"}, {"lineNumber": 188, "col_offset": 23, "nodeName": "_scalar", "type": "Callable[..., Any]"}, {"lineNumber": 188, "col_offset": 31, "nodeName": "_values", "type": "Any"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "_values", "type": "Any"}, {"lineNumber": 189, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "_values", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "_values", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "_init", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "NotIn"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "_scalar", "type": "Callable[..., Any]"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "_values", "type": "Any"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 208, "col_offset": 22, "nodeName": "_values", "type": "Any"}, {"lineNumber": 208, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "_values", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "_values", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "_init_attr", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "_init_attr", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "_init_attr", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "_init", "type": "Any"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "_args", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "val", "type": "Any"}, {"lineNumber": 236, "col_offset": 14, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "self", "type": "Between"}, {"lineNumber": 236, "col_offset": 28, "nodeName": "attr", "type": "Any"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "val", "type": "Any"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 239, "col_offset": 22, "nodeName": "val", "type": "Any"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 240, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "_get_val", "type": "Any"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "_get_val", "type": "Any"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "_get_val", "type": "Any"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 270, "col_offset": 21, "nodeName": "_conditions", "type": "Any"}, {"lineNumber": 282, "col_offset": 18, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 287, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "_init", "type": "Any"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "_args", "type": "Tuple[str, str, str, str, str, str, str]"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 308, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 309, "col_offset": 20, "nodeName": "value", "type": "Any"}, {"lineNumber": 310, "col_offset": 45, "nodeName": "over", "type": "int"}, {"lineNumber": 314, "col_offset": 11, "nodeName": "_labels", "type": "Any"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "_labels", "type": "Union[List[int], List[Any]]"}, {"lineNumber": 319, "col_offset": 15, "nodeName": "_right", "type": "Any"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "_include_lowest", "type": "Any"}, {"lineNumber": 327, "col_offset": 15, "nodeName": "_include_under", "type": "Any"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "_include_over", "type": "Any"}, {"lineNumber": 335, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "visit_function", "type": "Any"}, {"lineNumber": 347, "col_offset": 31, "nodeName": "self", "type": "Func"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "rtype", "type": "Any"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "rtype", "type": "Any"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "is_seq", "type": "Optional[Any]"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "is_seq", "type": "Optional[Union[Any, bool]]"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "kw", "type": "Dict[str, Any]"}, {"lineNumber": 384, "col_offset": 11, "nodeName": "func", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 388, "col_offset": 11, "nodeName": "func", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "rtype", "type": "Any"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "func", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 393, "col_offset": 16, "nodeName": "get_annotation_rtype", "type": "Any"}, {"lineNumber": 393, "col_offset": 43, "nodeName": "func", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 397, "col_offset": 21, "nodeName": "expr", "type": "Any"}, {"lineNumber": 398, "col_offset": 18, "nodeName": "types", "type": "Any"}, {"lineNumber": 400, "col_offset": 24, "nodeName": "six", "type": "Any"}, {"lineNumber": 402, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 402, "col_offset": 20, "nodeName": "func", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 402, "col_offset": 26, "nodeName": "Function", "type": "Any"}, {"lineNumber": 409, "col_offset": 27, "nodeName": "utils", "type": "Any"}, {"lineNumber": 413, "col_offset": 15, "nodeName": "MappedExpr", "type": "Type[MappedExpr]"}, {"lineNumber": 417, "col_offset": 15, "nodeName": "MappedExpr", "type": "Type[MappedExpr]"}, {"lineNumber": 433, "col_offset": 27, "nodeName": "func", "type": "Union[Callable[[Any], Any], Any]"}, {"lineNumber": 433, "col_offset": 39, "nodeName": "int64", "type": "Any"}, {"lineNumber": 445, "col_offset": 15, "nodeName": "IsNull", "type": "Type[IsNull]"}, {"lineNumber": 446, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 446, "col_offset": 20, "nodeName": "expr", "type": "Any"}, {"lineNumber": 446, "col_offset": 26, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 459, "col_offset": 15, "nodeName": "NotNull", "type": "Type[NotNull]"}, {"lineNumber": 460, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 460, "col_offset": 20, "nodeName": "expr", "type": "Any"}, {"lineNumber": 460, "col_offset": 26, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 474, "col_offset": 15, "nodeName": "FillNa", "type": "Type[FillNa]"}, {"lineNumber": 475, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 475, "col_offset": 20, "nodeName": "expr", "type": "Any"}, {"lineNumber": 475, "col_offset": 26, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "expr", "type": "Any"}, {"lineNumber": 492, "col_offset": 14, "nodeName": "values", "type": "Any"}, {"lineNumber": 492, "col_offset": 23, "nodeName": "_make_different_sources", "type": "Any"}, {"lineNumber": 492, "col_offset": 47, "nodeName": "expr", "type": "Any"}, {"lineNumber": 492, "col_offset": 53, "nodeName": "values", "type": "Any"}, {"lineNumber": 495, "col_offset": 15, "nodeName": "IsIn", "type": "Type[IsIn]"}, {"lineNumber": 496, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 496, "col_offset": 20, "nodeName": "expr", "type": "Any"}, {"lineNumber": 496, "col_offset": 26, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 511, "col_offset": 15, "nodeName": "NotIn", "type": "Type[NotIn]"}, {"lineNumber": 512, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 512, "col_offset": 20, "nodeName": "expr", "type": "Any"}, {"lineNumber": 512, "col_offset": 26, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 529, "col_offset": 15, "nodeName": "Between", "type": "Type[Between]"}, {"lineNumber": 531, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 531, "col_offset": 20, "nodeName": "expr", "type": "Any"}, {"lineNumber": 531, "col_offset": 26, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 541, "col_offset": 24, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 541, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 544, "col_offset": 15, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 563, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 563, "col_offset": 22, "nodeName": "true_expr", "type": "Any"}, {"lineNumber": 563, "col_offset": 33, "nodeName": "tps", "type": "Tuple[Any, Any]"}, {"lineNumber": 564, "col_offset": 20, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 565, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 565, "col_offset": 22, "nodeName": "false_expr", "type": "Any"}, {"lineNumber": 565, "col_offset": 34, "nodeName": "tps", "type": "Tuple[Any, Any]"}, {"lineNumber": 566, "col_offset": 21, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 568, "col_offset": 18, "nodeName": "utils", "type": "Any"}, {"lineNumber": 570, "col_offset": 18, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 570, "col_offset": 29, "nodeName": "expr", "type": "Any"}, {"lineNumber": 570, "col_offset": 35, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 571, "col_offset": 18, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 571, "col_offset": 29, "nodeName": "true_expr", "type": "Any"}, {"lineNumber": 571, "col_offset": 40, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 572, "col_offset": 18, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 572, "col_offset": 29, "nodeName": "false_expr", "type": "Any"}, {"lineNumber": 572, "col_offset": 41, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 575, "col_offset": 15, "nodeName": "IfElse", "type": "Type[IfElse]"}, {"lineNumber": 578, "col_offset": 15, "nodeName": "IfElse", "type": "Type[IfElse]"}, {"lineNumber": 598, "col_offset": 22, "nodeName": "get", "type": "Callable"}, {"lineNumber": 600, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 600, "col_offset": 11, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 601, "col_offset": 14, "nodeName": "ExpressionError", "type": "Any"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "conditions", "type": "Any"}, {"lineNumber": 604, "col_offset": 20, "nodeName": "thens", "type": "Any"}, {"lineNumber": 604, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 606, "col_offset": 22, "nodeName": "arg", "type": "Any"}, {"lineNumber": 607, "col_offset": 17, "nodeName": "arg", "type": "Any"}, {"lineNumber": 609, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 609, "col_offset": 11, "nodeName": "conditions", "type": "Any"}, {"lineNumber": 609, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 609, "col_offset": 30, "nodeName": "thens", "type": "Any"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "conditions", "type": "Any"}, {"lineNumber": 610, "col_offset": 20, "nodeName": "thens", "type": "Any"}, {"lineNumber": 612, "col_offset": 14, "nodeName": "ExpressionError", "type": "Any"}, {"lineNumber": 614, "col_offset": 25, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 614, "col_offset": 33, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 621, "col_offset": 19, "nodeName": "default", "type": "Any"}, {"lineNumber": 621, "col_offset": 40, "nodeName": "thens", "type": "Any"}, {"lineNumber": 622, "col_offset": 18, "nodeName": "utils", "type": "Any"}, {"lineNumber": 624, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 624, "col_offset": 24, "nodeName": "expr", "type": "Any"}, {"lineNumber": 624, "col_offset": 30, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 628, "col_offset": 17, "nodeName": "is_seq", "type": "bool"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 635, "col_offset": 25, "nodeName": "expr", "type": "Any"}, {"lineNumber": 635, "col_offset": 37, "nodeName": "case", "type": "Optional[Any]"}, {"lineNumber": 635, "col_offset": 55, "nodeName": "conditions", "type": "Any"}, {"lineNumber": 636, "col_offset": 25, "nodeName": "thens", "type": "Any"}, {"lineNumber": 636, "col_offset": 41, "nodeName": "default", "type": "Any"}, {"lineNumber": 636, "col_offset": 52, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 640, "col_offset": 26, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 640, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 662, "col_offset": 11, "nodeName": "labels", "type": "Any"}, {"lineNumber": 662, "col_offset": 35, "nodeName": "types", "type": "Any"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "kw", "type": "Dict[str, Any]"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "kw", "type": "Dict[str, Any]"}, {"lineNumber": 669, "col_offset": 22, "nodeName": "expr", "type": "Any"}, {"lineNumber": 669, "col_offset": 34, "nodeName": "bins", "type": "Any"}, {"lineNumber": 669, "col_offset": 47, "nodeName": "right", "type": "Any"}, {"lineNumber": 669, "col_offset": 62, "nodeName": "labels", "type": "Any"}, {"lineNumber": 670, "col_offset": 31, "nodeName": "include_lowest", "type": "Any"}, {"lineNumber": 670, "col_offset": 62, "nodeName": "include_under", "type": "Any"}, {"lineNumber": 671, "col_offset": 29, "nodeName": "include_over", "type": "Any"}, {"lineNumber": 671, "col_offset": 45, "nodeName": "kw", "type": "Dict[str, Any]"}, {"lineNumber": 683, "col_offset": 15, "nodeName": "IntToDatetime", "type": "Type[IntToDatetime]"}, {"lineNumber": 684, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 684, "col_offset": 20, "nodeName": "expr", "type": "Any"}, {"lineNumber": 684, "col_offset": 26, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "kv", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "_get_type", "type": "Any"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "cls", "type": "Type[AnyOp]"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "_get_type", "type": "Any"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "cls", "type": "Type[AnyOp]"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "_typed_classes", "type": "Any"}, {"lineNumber": 51, "col_offset": 47, "nodeName": "cls", "type": "Type[AnyOp]"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "_typed_classes", "type": "Any"}, {"lineNumber": 53, "col_offset": 41, "nodeName": "cls", "type": "Type[AnyOp]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "_input", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "self", "type": "ElementWise"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "it", "type": "Tuple[Any, Any]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "visitor", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "MappedExpr"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "MappedExpr"}, {"lineNumber": 105, "col_offset": 39, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "_inputs", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "_inputs", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "it", "type": "Any"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "it", "type": "Any"}, {"lineNumber": 127, "col_offset": 35, "nodeName": "_inputs", "type": "Any"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "visitor", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "FillNa"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "_fill_value", "type": "Any"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "validate_value_type", "type": "Any"}, {"lineNumber": 164, "col_offset": 43, "nodeName": "_fill_value", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "self", "type": "FillNa"}, {"lineNumber": 168, "col_offset": 31, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "can_implicit_cast", "type": "Any"}, {"lineNumber": 169, "col_offset": 50, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "_fill_value", "type": "Any"}, {"lineNumber": 186, "col_offset": 33, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 186, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 188, "col_offset": 31, "nodeName": "self", "type": "IsIn"}, {"lineNumber": 188, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "self", "type": "IsIn"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "self", "type": "IsIn"}, {"lineNumber": 190, "col_offset": 27, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "_values", "type": "Tuple[Any, ...]"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "_values", "type": "Any"}, {"lineNumber": 191, "col_offset": 40, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "self", "type": "IsIn"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "_values", "type": "Tuple[Any]"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 205, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "self", "type": "NotIn"}, {"lineNumber": 207, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 208, "col_offset": 22, "nodeName": "self", "type": "NotIn"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "self", "type": "NotIn"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 209, "col_offset": 33, "nodeName": "_values", "type": "Tuple[Any, ...]"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "_values", "type": "Any"}, {"lineNumber": 210, "col_offset": 40, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "self", "type": "NotIn"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "_values", "type": "Tuple[Any]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "Between"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "Between"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "Between"}, {"lineNumber": 228, "col_offset": 36, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 228, "col_offset": 44, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "self", "type": "Between"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 231, "col_offset": 26, "nodeName": "self", "type": "Between"}, {"lineNumber": 231, "col_offset": 32, "nodeName": "attr", "type": "str"}, {"lineNumber": 240, "col_offset": 19, "nodeName": "val", "type": "Any"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 270, "col_offset": 21, "nodeName": "self", "type": "Switch"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "_case", "type": "Any"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "condition", "type": "Any"}, {"lineNumber": 277, "col_offset": 27, "nodeName": "then", "type": "Any"}, {"lineNumber": 277, "col_offset": 35, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 277, "col_offset": 39, "nodeName": "_conditions", "type": "Any"}, {"lineNumber": 277, "col_offset": 57, "nodeName": "_thens", "type": "Any"}, {"lineNumber": 280, "col_offset": 18, "nodeName": "_default", "type": "Any"}, {"lineNumber": 282, "col_offset": 22, "nodeName": "_names", "type": "Callable[[], Any]"}, {"lineNumber": 282, "col_offset": 32, "nodeName": "_args", "type": "Callable[[], Any]"}, {"lineNumber": 283, "col_offset": 18, "nodeName": "it", "type": "nothing"}, {"lineNumber": 295, "col_offset": 32, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 295, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 297, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "_bins", "type": "Any"}, {"lineNumber": 298, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "self", "type": "Cut"}, {"lineNumber": 305, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 305, "col_offset": 26, "nodeName": "self", "type": "Cut"}, {"lineNumber": 305, "col_offset": 32, "nodeName": "arg", "type": "str"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "setattr", "type": "Callable[[Any, Union[bytearray, str, unicode], Any], None]"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "self", "type": "Cut"}, {"lineNumber": 306, "col_offset": 26, "nodeName": "arg", "type": "str"}, {"lineNumber": 308, "col_offset": 21, "nodeName": "_include_under", "type": "Any"}, {"lineNumber": 309, "col_offset": 20, "nodeName": "_include_over", "type": "Any"}, {"lineNumber": 310, "col_offset": 37, "nodeName": "under", "type": "int"}, {"lineNumber": 312, "col_offset": 11, "nodeName": "_labels", "type": "Any"}, {"lineNumber": 312, "col_offset": 61, "nodeName": "size", "type": "int"}, {"lineNumber": 313, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 314, "col_offset": 11, "nodeName": "self", "type": "Cut"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "self", "type": "Cut"}, {"lineNumber": 315, "col_offset": 27, "nodeName": "_scalar", "type": "Callable[..., Any]"}, {"lineNumber": 319, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 327, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "visitor", "type": "Any"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 352, "col_offset": 26, "nodeName": "item", "type": "Any"}, {"lineNumber": 352, "col_offset": 32, "nodeName": "string_types", "type": "Any"}, {"lineNumber": 353, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 356, "col_offset": 20, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 356, "col_offset": 40, "nodeName": "string", "type": "Any"}, {"lineNumber": 357, "col_offset": 20, "nodeName": "validate_data_type", "type": "Any"}, {"lineNumber": 357, "col_offset": 45, "nodeName": "rtype", "type": "Any"}, {"lineNumber": 358, "col_offset": 21, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 360, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 361, "col_offset": 21, "nodeName": "is_seq", "type": "Optional[Any]"}, {"lineNumber": 363, "col_offset": 19, "nodeName": "Func", "type": "Type[Func]"}, {"lineNumber": 387, "col_offset": 19, "nodeName": "output_names", "type": "Any"}, {"lineNumber": 389, "col_offset": 20, "nodeName": "rtype", "type": "Any"}, {"lineNumber": 393, "col_offset": 16, "nodeName": "utils", "type": "Any"}, {"lineNumber": 404, "col_offset": 9, "nodeName": "isclass", "type": "Callable[[object], bool]"}, {"lineNumber": 404, "col_offset": 25, "nodeName": "func", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 413, "col_offset": 37, "nodeName": "output_type", "type": "Any"}, {"lineNumber": 413, "col_offset": 56, "nodeName": "func", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 414, "col_offset": 37, "nodeName": "args", "type": "Tuple[()]"}, {"lineNumber": 414, "col_offset": 56, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 414, "col_offset": 70, "nodeName": "name", "type": "Optional[Any]"}, {"lineNumber": 415, "col_offset": 37, "nodeName": "resources", "type": "None"}, {"lineNumber": 415, "col_offset": 70, "nodeName": "collection_resources", "type": "Any"}, {"lineNumber": 417, "col_offset": 38, "nodeName": "output_type", "type": "Any"}, {"lineNumber": 417, "col_offset": 57, "nodeName": "func", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 418, "col_offset": 37, "nodeName": "args", "type": "Tuple[()]"}, {"lineNumber": 418, "col_offset": 56, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 418, "col_offset": 70, "nodeName": "name", "type": "Optional[Any]"}, {"lineNumber": 419, "col_offset": 37, "nodeName": "resources", "type": "None"}, {"lineNumber": 419, "col_offset": 70, "nodeName": "collection_resources", "type": "Any"}, {"lineNumber": 431, "col_offset": 25, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 431, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 433, "col_offset": 39, "nodeName": "types", "type": "Any"}, {"lineNumber": 445, "col_offset": 29, "nodeName": "expr", "type": "Any"}, {"lineNumber": 445, "col_offset": 46, "nodeName": "boolean", "type": "Any"}, {"lineNumber": 447, "col_offset": 15, "nodeName": "IsNull", "type": "Type[IsNull]"}, {"lineNumber": 459, "col_offset": 30, "nodeName": "expr", "type": "Any"}, {"lineNumber": 459, "col_offset": 47, "nodeName": "boolean", "type": "Any"}, {"lineNumber": 461, "col_offset": 15, "nodeName": "NotNull", "type": "Type[NotNull]"}, {"lineNumber": 474, "col_offset": 29, "nodeName": "expr", "type": "Any"}, {"lineNumber": 474, "col_offset": 47, "nodeName": "value", "type": "Any"}, {"lineNumber": 474, "col_offset": 65, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 476, "col_offset": 15, "nodeName": "FillNa", "type": "Type[FillNa]"}, {"lineNumber": 495, "col_offset": 27, "nodeName": "expr", "type": "Any"}, {"lineNumber": 495, "col_offset": 41, "nodeName": "values", "type": "Any"}, {"lineNumber": 495, "col_offset": 60, "nodeName": "boolean", "type": "Any"}, {"lineNumber": 497, "col_offset": 15, "nodeName": "IsIn", "type": "Type[IsIn]"}, {"lineNumber": 511, "col_offset": 28, "nodeName": "expr", "type": "Any"}, {"lineNumber": 511, "col_offset": 42, "nodeName": "values", "type": "Any"}, {"lineNumber": 511, "col_offset": 61, "nodeName": "boolean", "type": "Any"}, {"lineNumber": 513, "col_offset": 15, "nodeName": "NotIn", "type": "Type[NotIn]"}, {"lineNumber": 529, "col_offset": 30, "nodeName": "expr", "type": "Any"}, {"lineNumber": 529, "col_offset": 42, "nodeName": "left", "type": "Any"}, {"lineNumber": 529, "col_offset": 55, "nodeName": "right", "type": "Any"}, {"lineNumber": 530, "col_offset": 34, "nodeName": "inclusive", "type": "Any"}, {"lineNumber": 530, "col_offset": 56, "nodeName": "boolean", "type": "Any"}, {"lineNumber": 532, "col_offset": 15, "nodeName": "Between", "type": "Type[Between]"}, {"lineNumber": 542, "col_offset": 15, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 542, "col_offset": 20, "nodeName": "val", "type": "Any"}, {"lineNumber": 544, "col_offset": 29, "nodeName": "val", "type": "Any"}, {"lineNumber": 544, "col_offset": 46, "nodeName": "tp", "type": "None"}, {"lineNumber": 564, "col_offset": 34, "nodeName": "true_expr", "type": "Any"}, {"lineNumber": 566, "col_offset": 35, "nodeName": "false_expr", "type": "Any"}, {"lineNumber": 569, "col_offset": 14, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 569, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 575, "col_offset": 29, "nodeName": "expr", "type": "Any"}, {"lineNumber": 575, "col_offset": 41, "nodeName": "true_expr", "type": "Any"}, {"lineNumber": 575, "col_offset": 58, "nodeName": "false_expr", "type": "Any"}, {"lineNumber": 576, "col_offset": 33, "nodeName": "output_type", "type": "Any"}, {"lineNumber": 578, "col_offset": 29, "nodeName": "expr", "type": "Any"}, {"lineNumber": 578, "col_offset": 41, "nodeName": "true_expr", "type": "Any"}, {"lineNumber": 578, "col_offset": 58, "nodeName": "false_expr", "type": "Any"}, {"lineNumber": 579, "col_offset": 34, "nodeName": "output_type", "type": "Any"}, {"lineNumber": 598, "col_offset": 22, "nodeName": "kw", "type": "Dict[str, Any]"}, {"lineNumber": 601, "col_offset": 14, "nodeName": "errors", "type": "Any"}, {"lineNumber": 603, "col_offset": 56, "nodeName": "arg", "type": "Any"}, {"lineNumber": 603, "col_offset": 63, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 604, "col_offset": 33, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 610, "col_offset": 28, "nodeName": "_scalar", "type": "Callable[..., Any]"}, {"lineNumber": 610, "col_offset": 36, "nodeName": "conditions", "type": "Any"}, {"lineNumber": 610, "col_offset": 49, "nodeName": "_scalar", "type": "Callable[..., Any]"}, {"lineNumber": 610, "col_offset": 57, "nodeName": "thens", "type": "Any"}, {"lineNumber": 612, "col_offset": 14, "nodeName": "errors", "type": "Any"}, {"lineNumber": 618, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 619, "col_offset": 18, "nodeName": "ExpressionError", "type": "Any"}, {"lineNumber": 621, "col_offset": 49, "nodeName": "default", "type": "Any"}, {"lineNumber": 622, "col_offset": 55, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 628, "col_offset": 27, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 628, "col_offset": 38, "nodeName": "case", "type": "Optional[Any]"}, {"lineNumber": 628, "col_offset": 44, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 683, "col_offset": 36, "nodeName": "expr", "type": "Any"}, {"lineNumber": 683, "col_offset": 53, "nodeName": "datetime", "type": "Any"}, {"lineNumber": 685, "col_offset": 15, "nodeName": "IntToDatetime", "type": "Type[IntToDatetime]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "AnyOpNodeMetaClass", "type": "Type[AnyOpNodeMetaClass]"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "mcs", "type": "Type[AnyOpNodeMetaClass]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 44, "col_offset": 56, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 46, "col_offset": 50, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 51, "col_offset": 53, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 51, "col_offset": 61, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 53, "col_offset": 47, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 53, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "MappedExpr", "type": "Type[MappedExpr]"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "self", "type": "MappedExpr"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "_inputs", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "_inputs", "type": "Any"}, {"lineNumber": 127, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "it", "type": "Any"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "it", "type": "Any"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "_raw_inputs", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "FillNa", "type": "Type[FillNa]"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "self", "type": "FillNa"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "self", "type": "FillNa"}, {"lineNumber": 163, "col_offset": 48, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 163, "col_offset": 59, "nodeName": "_fill_value", "type": "Any"}, {"lineNumber": 163, "col_offset": 77, "nodeName": "Expr", "type": "Any"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "types", "type": "Any"}, {"lineNumber": 164, "col_offset": 43, "nodeName": "self", "type": "FillNa"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "can_implicit_cast", "type": "Any"}, {"lineNumber": 165, "col_offset": 54, "nodeName": "tp", "type": "Any"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 168, "col_offset": 45, "nodeName": "_fill_value", "type": "Any"}, {"lineNumber": 168, "col_offset": 75, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 169, "col_offset": 50, "nodeName": "_fill_value", "type": "Any"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 186, "col_offset": 14, "nodeName": "IsIn", "type": "Type[IsIn]"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "self", "type": "IsIn"}, {"lineNumber": 188, "col_offset": 48, "nodeName": "_input", "type": "Any"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "self", "type": "IsIn"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "self", "type": "IsIn"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 192, "col_offset": 30, "nodeName": "_values", "type": "Any"}, {"lineNumber": 192, "col_offset": 44, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "self", "type": "IsIn"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 205, "col_offset": 14, "nodeName": "NotIn", "type": "Type[NotIn]"}, {"lineNumber": 205, "col_offset": 21, "nodeName": "self", "type": "NotIn"}, {"lineNumber": 207, "col_offset": 48, "nodeName": "_input", "type": "Any"}, {"lineNumber": 209, "col_offset": 33, "nodeName": "self", "type": "NotIn"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "self", "type": "NotIn"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 211, "col_offset": 30, "nodeName": "_values", "type": "Any"}, {"lineNumber": 211, "col_offset": 44, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "self", "type": "NotIn"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 228, "col_offset": 14, "nodeName": "Between", "type": "Type[Between]"}, {"lineNumber": 228, "col_offset": 23, "nodeName": "self", "type": "Between"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "val", "type": "Any"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "setattr", "type": "Callable[[Any, Union[bytearray, str, unicode], Any], None]"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "self", "type": "Between"}, {"lineNumber": 233, "col_offset": 30, "nodeName": "attr", "type": "str"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "self", "type": "Switch"}, {"lineNumber": 277, "col_offset": 39, "nodeName": "self", "type": "Switch"}, {"lineNumber": 277, "col_offset": 57, "nodeName": "self", "type": "Switch"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "condition", "type": "Any"}, {"lineNumber": 279, "col_offset": 22, "nodeName": "then", "type": "Any"}, {"lineNumber": 280, "col_offset": 18, "nodeName": "self", "type": "Switch"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 295, "col_offset": 14, "nodeName": "Cut", "type": "Type[Cut]"}, {"lineNumber": 295, "col_offset": 19, "nodeName": "self", "type": "Cut"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "self", "type": "Cut"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 299, "col_offset": 17, "nodeName": "_bins", "type": "Any"}, {"lineNumber": 306, "col_offset": 31, "nodeName": "_scalar", "type": "Callable[..., Any]"}, {"lineNumber": 306, "col_offset": 39, "nodeName": "obj", "type": "Any"}, {"lineNumber": 308, "col_offset": 21, "nodeName": "self", "type": "Cut"}, {"lineNumber": 309, "col_offset": 20, "nodeName": "self", "type": "Cut"}, {"lineNumber": 312, "col_offset": 11, "nodeName": "self", "type": "Cut"}, {"lineNumber": 312, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 312, "col_offset": 44, "nodeName": "_labels", "type": "Any"}, {"lineNumber": 315, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 352, "col_offset": 32, "nodeName": "six", "type": "Any"}, {"lineNumber": 356, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 356, "col_offset": 40, "nodeName": "types", "type": "Any"}, {"lineNumber": 357, "col_offset": 20, "nodeName": "types", "type": "Any"}, {"lineNumber": 358, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 361, "col_offset": 31, "nodeName": "is_seq", "type": "Optional[Any]"}, {"lineNumber": 361, "col_offset": 55, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 362, "col_offset": 47, "nodeName": "is_seq", "type": "Optional[Union[bool, Any]]"}, {"lineNumber": 362, "col_offset": 33, "nodeName": "rtype", "type": "Any"}, {"lineNumber": 362, "col_offset": 74, "nodeName": "rtype", "type": "Any"}, {"lineNumber": 363, "col_offset": 35, "nodeName": "item", "type": "Any"}, {"lineNumber": 363, "col_offset": 49, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 363, "col_offset": 57, "nodeName": "kw", "type": "Dict[str, Any]"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 385, "col_offset": 19, "nodeName": "output_names", "type": "Any"}, {"lineNumber": 386, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 387, "col_offset": 19, "nodeName": "func", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 389, "col_offset": 29, "nodeName": "output_types", "type": "Any"}, {"lineNumber": 404, "col_offset": 9, "nodeName": "inspect", "type": "module"}, {"lineNumber": 413, "col_offset": 71, "nodeName": "expr", "type": "Any"}, {"lineNumber": 417, "col_offset": 72, "nodeName": "expr", "type": "Any"}, {"lineNumber": 445, "col_offset": 46, "nodeName": "types", "type": "Any"}, {"lineNumber": 447, "col_offset": 29, "nodeName": "expr", "type": "Any"}, {"lineNumber": 447, "col_offset": 47, "nodeName": "boolean", "type": "Any"}, {"lineNumber": 459, "col_offset": 47, "nodeName": "types", "type": "Any"}, {"lineNumber": 461, "col_offset": 30, "nodeName": "expr", "type": "Any"}, {"lineNumber": 461, "col_offset": 48, "nodeName": "boolean", "type": "Any"}, {"lineNumber": 474, "col_offset": 65, "nodeName": "expr", "type": "Any"}, {"lineNumber": 476, "col_offset": 29, "nodeName": "expr", "type": "Any"}, {"lineNumber": 476, "col_offset": 47, "nodeName": "value", "type": "Any"}, {"lineNumber": 476, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 495, "col_offset": 60, "nodeName": "types", "type": "Any"}, {"lineNumber": 497, "col_offset": 27, "nodeName": "expr", "type": "Any"}, {"lineNumber": 497, "col_offset": 41, "nodeName": "values", "type": "Any"}, {"lineNumber": 497, "col_offset": 61, "nodeName": "boolean", "type": "Any"}, {"lineNumber": 511, "col_offset": 61, "nodeName": "types", "type": "Any"}, {"lineNumber": 513, "col_offset": 28, "nodeName": "expr", "type": "Any"}, {"lineNumber": 513, "col_offset": 42, "nodeName": "values", "type": "Any"}, {"lineNumber": 513, "col_offset": 62, "nodeName": "boolean", "type": "Any"}, {"lineNumber": 530, "col_offset": 56, "nodeName": "types", "type": "Any"}, {"lineNumber": 532, "col_offset": 30, "nodeName": "expr", "type": "Any"}, {"lineNumber": 532, "col_offset": 42, "nodeName": "left", "type": "Any"}, {"lineNumber": 532, "col_offset": 55, "nodeName": "right", "type": "Any"}, {"lineNumber": 533, "col_offset": 34, "nodeName": "inclusive", "type": "Any"}, {"lineNumber": 533, "col_offset": 57, "nodeName": "boolean", "type": "Any"}, {"lineNumber": 542, "col_offset": 25, "nodeName": "_scalar", "type": "Callable[..., Any]"}, {"lineNumber": 542, "col_offset": 33, "nodeName": "it", "type": "Any"}, {"lineNumber": 542, "col_offset": 48, "nodeName": "it", "type": "Any"}, {"lineNumber": 542, "col_offset": 54, "nodeName": "val", "type": "Any"}, {"lineNumber": 569, "col_offset": 14, "nodeName": "true_expr", "type": "Any"}, {"lineNumber": 569, "col_offset": 31, "nodeName": "false_expr", "type": "Any"}, {"lineNumber": 603, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 603, "col_offset": 22, "nodeName": "arg", "type": "Any"}, {"lineNumber": 603, "col_offset": 27, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 606, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 606, "col_offset": 33, "nodeName": "arg", "type": "Any"}, {"lineNumber": 606, "col_offset": 40, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 606, "col_offset": 50, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 607, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 607, "col_offset": 28, "nodeName": "arg", "type": "Any"}, {"lineNumber": 607, "col_offset": 35, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 607, "col_offset": 45, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 619, "col_offset": 18, "nodeName": "errors", "type": "Any"}, {"lineNumber": 622, "col_offset": 55, "nodeName": "it", "type": "Any"}, {"lineNumber": 622, "col_offset": 68, "nodeName": "it", "type": "Any"}, {"lineNumber": 622, "col_offset": 74, "nodeName": "res", "type": "Any"}, {"lineNumber": 625, "col_offset": 12, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 625, "col_offset": 23, "nodeName": "it", "type": "Any"}, {"lineNumber": 625, "col_offset": 27, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 625, "col_offset": 45, "nodeName": "it", "type": "Any"}, {"lineNumber": 625, "col_offset": 51, "nodeName": "conditions", "type": "Any"}, {"lineNumber": 626, "col_offset": 12, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 626, "col_offset": 23, "nodeName": "it", "type": "Any"}, {"lineNumber": 626, "col_offset": 27, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 626, "col_offset": 45, "nodeName": "it", "type": "Any"}, {"lineNumber": 626, "col_offset": 51, "nodeName": "res", "type": "Any"}, {"lineNumber": 683, "col_offset": 53, "nodeName": "types", "type": "Any"}, {"lineNumber": 685, "col_offset": 36, "nodeName": "expr", "type": "Any"}, {"lineNumber": 685, "col_offset": 54, "nodeName": "datetime", "type": "Any"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "lstrip", "type": "Callable[..., str]"}, {"lineNumber": 84, "col_offset": 56, "nodeName": "arg", "type": "str"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 59, "nodeName": "self", "type": "FillNa"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 168, "col_offset": 45, "nodeName": "self", "type": "FillNa"}, {"lineNumber": 168, "col_offset": 75, "nodeName": "self", "type": "FillNa"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "input", "type": "Any"}, {"lineNumber": 169, "col_offset": 50, "nodeName": "self", "type": "FillNa"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 188, "col_offset": 48, "nodeName": "self", "type": "IsIn"}, {"lineNumber": 192, "col_offset": 30, "nodeName": "self", "type": "IsIn"}, {"lineNumber": 207, "col_offset": 48, "nodeName": "self", "type": "NotIn"}, {"lineNumber": 211, "col_offset": 30, "nodeName": "self", "type": "NotIn"}, {"lineNumber": 232, "col_offset": 39, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 232, "col_offset": 50, "nodeName": "val", "type": "Any"}, {"lineNumber": 232, "col_offset": 55, "nodeName": "Expr", "type": "Any"}, {"lineNumber": 233, "col_offset": 36, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 299, "col_offset": 17, "nodeName": "self", "type": "Cut"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "_include_under", "type": "Any"}, {"lineNumber": 300, "col_offset": 46, "nodeName": "_include_over", "type": "Any"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 310, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 310, "col_offset": 19, "nodeName": "_bins", "type": "Any"}, {"lineNumber": 312, "col_offset": 44, "nodeName": "self", "type": "Cut"}, {"lineNumber": 315, "col_offset": 40, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 315, "col_offset": 46, "nodeName": "size", "type": "int"}, {"lineNumber": 353, "col_offset": 85, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 353, "col_offset": 90, "nodeName": "item", "type": "Any"}, {"lineNumber": 360, "col_offset": 25, "nodeName": "arg", "type": "Any"}, {"lineNumber": 360, "col_offset": 82, "nodeName": "arg", "type": "Any"}, {"lineNumber": 360, "col_offset": 89, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 385, "col_offset": 19, "nodeName": "func", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 389, "col_offset": 29, "nodeName": "func", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 406, "col_offset": 22, "nodeName": "func", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 407, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 447, "col_offset": 47, "nodeName": "types", "type": "Any"}, {"lineNumber": 461, "col_offset": 48, "nodeName": "types", "type": "Any"}, {"lineNumber": 476, "col_offset": 66, "nodeName": "expr", "type": "Any"}, {"lineNumber": 497, "col_offset": 61, "nodeName": "types", "type": "Any"}, {"lineNumber": 513, "col_offset": 62, "nodeName": "types", "type": "Any"}, {"lineNumber": 533, "col_offset": 57, "nodeName": "types", "type": "Any"}, {"lineNumber": 542, "col_offset": 40, "nodeName": "tp", "type": "None"}, {"lineNumber": 603, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 603, "col_offset": 42, "nodeName": "arg", "type": "Any"}, {"lineNumber": 606, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 607, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 618, "col_offset": 74, "nodeName": "it", "type": "Any"}, {"lineNumber": 618, "col_offset": 80, "nodeName": "conditions", "type": "Any"}, {"lineNumber": 661, "col_offset": 10, "nodeName": "validate_value_type", "type": "Any"}, {"lineNumber": 661, "col_offset": 36, "nodeName": "it", "type": "Any"}, {"lineNumber": 661, "col_offset": 44, "nodeName": "it", "type": "Any"}, {"lineNumber": 685, "col_offset": 54, "nodeName": "types", "type": "Any"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "arg", "type": "str"}, {"lineNumber": 84, "col_offset": 63, "nodeName": "_args", "type": "Tuple[str]"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "input", "type": "Any"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "tp", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "self", "type": "FillNa"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "_fill_value", "type": "Any"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "input", "type": "Any"}, {"lineNumber": 233, "col_offset": 50, "nodeName": "val", "type": "Any"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "self", "type": "Cut"}, {"lineNumber": 300, "col_offset": 46, "nodeName": "self", "type": "Cut"}, {"lineNumber": 310, "col_offset": 19, "nodeName": "self", "type": "Cut"}, {"lineNumber": 360, "col_offset": 32, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 360, "col_offset": 43, "nodeName": "arg", "type": "Any"}, {"lineNumber": 360, "col_offset": 48, "nodeName": "Expr", "type": "Any"}, {"lineNumber": 360, "col_offset": 59, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 361, "col_offset": 59, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 361, "col_offset": 70, "nodeName": "arg", "type": "Any"}, {"lineNumber": 361, "col_offset": 75, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 361, "col_offset": 93, "nodeName": "arg", "type": "Any"}, {"lineNumber": 361, "col_offset": 100, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 618, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 618, "col_offset": 27, "nodeName": "it", "type": "Any"}, {"lineNumber": 618, "col_offset": 44, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 618, "col_offset": 56, "nodeName": "boolean", "type": "Any"}, {"lineNumber": 661, "col_offset": 10, "nodeName": "types", "type": "Any"}, {"lineNumber": 84, "col_offset": 63, "nodeName": "self", "type": "ElementWise"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "self", "type": "FillNa"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "input", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "self", "type": "FillNa"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "self", "type": "FillNa"}, {"lineNumber": 360, "col_offset": 73, "nodeName": "arg", "type": "Any"}, {"lineNumber": 618, "col_offset": 44, "nodeName": "it", "type": "Any"}, {"lineNumber": 618, "col_offset": 56, "nodeName": "types", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "self", "type": "FillNa"}]