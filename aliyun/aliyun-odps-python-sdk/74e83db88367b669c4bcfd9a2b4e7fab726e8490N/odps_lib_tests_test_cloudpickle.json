[{"lineNumber": 75, "col_offset": 0, "nodeName": "pickled_runner", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "run_pickled", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "_gen_nested_yield_obj", "type": "Callable[[], Any]"}, {"lineNumber": 127, "col_offset": 0, "nodeName": "_gen_from_import_func", "type": "Callable[[], Any]"}, {"lineNumber": 276, "col_offset": 0, "nodeName": "_gen_try_except_func", "type": "Callable[[], Any]"}, {"lineNumber": 301, "col_offset": 0, "nodeName": "_gen_nested_fun", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "DUMP_CODE", "type": "bool"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "fun", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 143, "col_offset": 3, "nodeName": "PY2", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "_gen_class_builder_func", "type": "Callable[[], Any]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "_gen_format_string_func", "type": "Callable[[], Any]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "_gen_build_unpack_func", "type": "Callable[[], Any]"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "_gen_matmul_func", "type": "Callable[[], Any]"}, {"lineNumber": 314, "col_offset": 11, "nodeName": "TestBase", "type": "Type[odps.tests.core.TestBase]"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "_invoke_other_python_pickle", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "testRangeObject", "type": "Callable[[Any], Any]"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "testNestedFunc", "type": "Callable[[Any], Any]"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "test3to2FormatString", "type": "Callable[[Any], Any]"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "test3to2BuildUnpack", "type": "Callable[[Any], Any]"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "test3to2TryExcept", "type": "Callable[[Any], Any]"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "test3to2NestedFunc", "type": "Callable[[Any], Any]"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "testNestedClassObj", "type": "Callable[[Any], Any]"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "test3to27NestedYieldObj", "type": "Callable[[Any], Any]"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "test26to27NestedYieldObj", "type": "Callable[[Any], Any]"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "test3to27NestedClassObj", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": -1, "nodeName": "replace", "type": "Callable"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "wrapper_kw", "type": "Dict[str, str]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "queue", "type": "multiprocessing.Queue[nothing]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "proc", "type": "multiprocessing.process.Process"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "out_closure", "type": "int"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "nested_method", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "__call__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "_FuncClass", "type": "Type[Any]"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "fun", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 3, "nodeName": "six", "type": "module"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "my_locs", "type": "Dict[str, object]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "_gen_class_builder_func", "type": "Optional[object]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "my_locs", "type": "Dict[str, object]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "_gen_format_string_func", "type": "Optional[object]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "merge_kws", "type": "Callable[..., Any]"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "my_locs", "type": "Dict[str, object]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "_gen_build_unpack_func", "type": "Optional[object]"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "my_locs", "type": "Dict[str, object]"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "_gen_matmul_func", "type": "Optional[object]"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "out_closure", "type": "Dict[Any, Any]"}, {"lineNumber": 298, "col_offset": 11, "nodeName": "_gen_fun", "type": "Callable[[Any], Any]"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "out_closure", "type": "int"}, {"lineNumber": 72, "col_offset": 62, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 72, "col_offset": 67, "nodeName": "DUMP_CODE", "type": "bool"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "wrapper", "type": "Optional[Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "impl", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "wrapper", "type": "Optional[Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "deserial", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "pickled", "type": "Any"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "loads", "type": "Callable[[str], Any]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "Queue", "type": "Type[multiprocessing.Queue[Any]]"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "Process", "type": "Type[multiprocessing.process.Process]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "start", "type": "Callable[[], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "join", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "inner_gain", "type": "int"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "out_closure", "type": "int"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "_gen_nested_class_obj", "type": "Callable[[], Any]"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "dedent", "type": "Callable"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "exec_", "type": "Any"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "py3_code", "type": "str"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "my_locs", "type": "Dict[str, object]"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "get", "type": "Callable"}, {"lineNumber": 179, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "out_closure", "type": "float"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "_format_fun", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "dedent", "type": "Callable"}, {"lineNumber": 197, "col_offset": 14, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "exec_", "type": "Any"}, {"lineNumber": 198, "col_offset": 14, "nodeName": "py36_code", "type": "str"}, {"lineNumber": 198, "col_offset": 36, "nodeName": "my_locs", "type": "Dict[str, object]"}, {"lineNumber": 199, "col_offset": 30, "nodeName": "get", "type": "Callable"}, {"lineNumber": 202, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "out_closure", "type": "Tuple[int, int, int]"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "_gen_fun", "type": "Callable[[Any], Any]"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "dedent", "type": "Callable"}, {"lineNumber": 240, "col_offset": 14, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "exec_", "type": "Any"}, {"lineNumber": 241, "col_offset": 14, "nodeName": "py36_code", "type": "str"}, {"lineNumber": 241, "col_offset": 36, "nodeName": "my_locs", "type": "Dict[str, object]"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "get", "type": "Callable"}, {"lineNumber": 245, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "out_closure", "type": "List[List[int]]"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "_gen_fun", "type": "Callable[[Any], Any]"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "dedent", "type": "Callable"}, {"lineNumber": 271, "col_offset": 14, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "exec_", "type": "Any"}, {"lineNumber": 272, "col_offset": 14, "nodeName": "py36_code", "type": "str"}, {"lineNumber": 272, "col_offset": 36, "nodeName": "my_locs", "type": "Dict[str, object]"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 277, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "ex", "type": "None"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "agg", "type": "int"}, {"lineNumber": 281, "col_offset": 14, "nodeName": "arg", "type": "int"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "agg", "type": "Any"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "nested_method", "type": "Callable[[Any], Any]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "paths", "type": "List[str]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "ts_name", "type": "str"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "tp_name", "type": "str"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "proc", "type": "subprocess.Popen[str]"}, {"lineNumber": 339, "col_offset": 15, "nodeName": "pickled", "type": "str"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "obj_serial", "type": "str"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "deserial", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "obj_serial", "type": "str"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "deserial", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "executable", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "py3_serial", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "executable", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "py3_serial", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "executable", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "py3_serial", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "executable", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "py3_serial", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "executable", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "py3_serial", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "executable", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "py3_serial", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "func", "type": "Type[Any]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "obj_serial", "type": "str"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "deserial", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "func", "type": "Type[Any]"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "py3_serial", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "func", "type": "Type[Any]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "py26_serial", "type": "Any"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "cls", "type": "Type[Any]"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "py3_serial", "type": "Any"}, {"lineNumber": 72, "col_offset": -1, "nodeName": "replace", "type": "Callable"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "__name__", "type": "str"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "pop", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "wrapper", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "wrapper", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "put", "type": "Any"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "pickle", "type": "module"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "b64decode", "type": "Callable[..., str]"}, {"lineNumber": 91, "col_offset": 60, "nodeName": "pickled", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "wrapper_kw", "type": "Dict[str, str]"}, {"lineNumber": 94, "col_offset": 32, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "multiprocessing", "type": "module"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "multiprocessing", "type": "module"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "pickled_runner", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 102, "nodeName": "wrapper_kw", "type": "Dict[str, str]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "proc", "type": "multiprocessing.process.Process"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "proc", "type": "multiprocessing.process.Process"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "queue", "type": "multiprocessing.Queue[nothing]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "_o_closure", "type": "int"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "out_closure", "type": "int"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "nest", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "BuildBase", "type": "Type[BuildBase]"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "BuildCls", "type": "Type[Any]"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "textwrap", "type": "module"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "six", "type": "module"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "globals", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "my_locs", "type": "Dict[str, object]"}, {"lineNumber": 179, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "textwrap", "type": "module"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "six", "type": "module"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "globals", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 199, "col_offset": 30, "nodeName": "my_locs", "type": "Dict[str, object]"}, {"lineNumber": 202, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "t", "type": "Tuple[int, ...]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "l", "type": "List[int]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "s", "type": "Set[int]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "m", "type": "Dict[str, int]"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "wk", "type": "Dict[Any, Any]"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "textwrap", "type": "module"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "six", "type": "module"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "globals", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "my_locs", "type": "Dict[str, object]"}, {"lineNumber": 245, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "c", "type": "Any"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "textwrap", "type": "module"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "six", "type": "module"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "globals", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "my_locs", "type": "Dict[str, object]"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "agg", "type": "Any"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "agg", "type": "Any"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 317, "col_offset": 17, "nodeName": "path", "type": "str"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 318, "col_offset": 20, "nodeName": "method_ref", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "method_ref", "type": "Any"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 320, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 321, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 322, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 324, "col_offset": 35, "nodeName": "out_file", "type": "file"}, {"lineNumber": 327, "col_offset": 15, "nodeName": "Popen", "type": "Type[subprocess.Popen[Any]]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "wait", "type": "Callable[[], int]"}, {"lineNumber": 342, "col_offset": 21, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 343, "col_offset": 19, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "obj_serial", "type": "str"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 347, "col_offset": 15, "nodeName": "_gen_nested_fun", "type": "Callable[[], Any]"}, {"lineNumber": 348, "col_offset": 21, "nodeName": "b64encode", "type": "Callable[..., str]"}, {"lineNumber": 349, "col_offset": 19, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 355, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "executable", "type": "Any"}, {"lineNumber": 358, "col_offset": 15, "nodeName": "_gen_from_import_func", "type": "Callable[[], Any]"}, {"lineNumber": 359, "col_offset": 21, "nodeName": "to_binary", "type": "Callable"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 364, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "executable", "type": "Any"}, {"lineNumber": 367, "col_offset": 15, "nodeName": "_gen_format_string_func", "type": "Optional[Union[object, Callable[[], Any]]]"}, {"lineNumber": 368, "col_offset": 21, "nodeName": "to_binary", "type": "Callable"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 373, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "executable", "type": "Any"}, {"lineNumber": 376, "col_offset": 15, "nodeName": "_gen_build_unpack_func", "type": "Optional[Union[object, Callable[[], Any]]]"}, {"lineNumber": 377, "col_offset": 21, "nodeName": "to_binary", "type": "Callable"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 383, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 384, "col_offset": 15, "nodeName": "executable", "type": "Any"}, {"lineNumber": 386, "col_offset": 15, "nodeName": "_gen_matmul_func", "type": "Optional[Union[Callable[[], Any], object]]"}, {"lineNumber": 387, "col_offset": 21, "nodeName": "to_binary", "type": "Callable"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 392, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 393, "col_offset": 15, "nodeName": "executable", "type": "Any"}, {"lineNumber": 395, "col_offset": 15, "nodeName": "_gen_try_except_func", "type": "Callable[[], Any]"}, {"lineNumber": 396, "col_offset": 21, "nodeName": "to_binary", "type": "Callable"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 401, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 402, "col_offset": 15, "nodeName": "executable", "type": "Any"}, {"lineNumber": 404, "col_offset": 15, "nodeName": "_gen_nested_fun", "type": "Callable[[], Any]"}, {"lineNumber": 405, "col_offset": 21, "nodeName": "to_binary", "type": "Callable"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 409, "col_offset": 15, "nodeName": "_gen_nested_yield_obj", "type": "Callable[[], Any]"}, {"lineNumber": 410, "col_offset": 21, "nodeName": "b64encode", "type": "Callable[..., str]"}, {"lineNumber": 411, "col_offset": 19, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "executable", "type": "Any"}, {"lineNumber": 422, "col_offset": 15, "nodeName": "_gen_nested_yield_obj", "type": "Callable[[], Any]"}, {"lineNumber": 423, "col_offset": 21, "nodeName": "to_binary", "type": "Callable"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "executable", "type": "Any"}, {"lineNumber": 435, "col_offset": 15, "nodeName": "_gen_nested_yield_obj", "type": "Callable[[], Any]"}, {"lineNumber": 436, "col_offset": 22, "nodeName": "to_binary", "type": "Callable"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 443, "col_offset": 12, "nodeName": "executable", "type": "Any"}, {"lineNumber": 449, "col_offset": 21, "nodeName": "to_binary", "type": "Callable"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "kw", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "wrapper", "type": "Optional[Any]"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "b64decode", "type": "Callable[..., str]"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "pickled", "type": "Any"}, {"lineNumber": 83, "col_offset": 57, "nodeName": "impl", "type": "Any"}, {"lineNumber": 83, "col_offset": 73, "nodeName": "DUMP_CODE", "type": "bool"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "wrapper", "type": "Any"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "deserial", "type": "Any"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "print_exc", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "base64", "type": "module"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 96, "col_offset": 64, "nodeName": "queue", "type": "multiprocessing.Queue[nothing]"}, {"lineNumber": 96, "col_offset": 71, "nodeName": "pickled", "type": "Any"}, {"lineNumber": 96, "col_offset": 80, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 96, "col_offset": 86, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "add_val", "type": "int"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "_NestClass", "type": "Type[Any]"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "sinh", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "val", "type": "int"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "__metaclass__", "type": "Type[BuildMeta]"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "BuildMeta", "type": "Type[BuildMeta]"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "a", "type": "int"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "out_closure", "type": "int"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "locals", "type": "Callable[[], Dict[str, object]]"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 184, "col_offset": 56, "nodeName": "arg", "type": "int"}, {"lineNumber": 184, "col_offset": 61, "nodeName": "out_closure", "type": "float"}, {"lineNumber": 197, "col_offset": 14, "nodeName": "locals", "type": "Callable[[], Dict[str, object]]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "merge_kws", "type": "Callable[..., Any]"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "t", "type": "Tuple[int, ...]"}, {"lineNumber": 217, "col_offset": 22, "nodeName": "l", "type": "List[int]"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "s", "type": "Set[int]"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "m", "type": "Dict[str, int]"}, {"lineNumber": 217, "col_offset": 31, "nodeName": "wk", "type": "Dict[Any, Any]"}, {"lineNumber": 240, "col_offset": 14, "nodeName": "locals", "type": "Callable[[], Dict[str, object]]"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "out_closure", "type": "List[List[int]]"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 253, "col_offset": 26, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 254, "col_offset": 19, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 254, "col_offset": 24, "nodeName": "c", "type": "Any"}, {"lineNumber": 271, "col_offset": 14, "nodeName": "locals", "type": "Callable[[], Dict[str, object]]"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 284, "col_offset": 18, "nodeName": "ex", "type": "KeyError"}, {"lineNumber": 287, "col_offset": 19, "nodeName": "out_closure", "type": "Dict[Any, Any]"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "agg", "type": "int"}, {"lineNumber": 292, "col_offset": 19, "nodeName": "out_closure", "type": "Dict[Any, Any]"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "agg", "type": "Any"}, {"lineNumber": 307, "col_offset": 19, "nodeName": "out_closure", "type": "int"}, {"lineNumber": 307, "col_offset": 33, "nodeName": "add_val", "type": "int"}, {"lineNumber": 311, "col_offset": 21, "nodeName": "_gen_nested_obj", "type": "Callable[[], Any]"}, {"lineNumber": 317, "col_offset": 26, "nodeName": "path", "type": "str"}, {"lineNumber": 317, "col_offset": 34, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "method_ref", "type": "Any"}, {"lineNumber": 320, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 320, "col_offset": 31, "nodeName": "gettempdir", "type": "Callable[[], str]"}, {"lineNumber": 320, "col_offset": 54, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 321, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 321, "col_offset": 31, "nodeName": "gettempdir", "type": "Callable[[], str]"}, {"lineNumber": 321, "col_offset": 54, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 322, "col_offset": 22, "nodeName": "CROSS_VAR_PICKLE_CODE", "type": "str"}, {"lineNumber": 322, "col_offset": 94, "nodeName": "method_ref", "type": "Any"}, {"lineNumber": 323, "col_offset": 64, "nodeName": "tp_name", "type": "str"}, {"lineNumber": 324, "col_offset": 13, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 324, "col_offset": 18, "nodeName": "ts_name", "type": "str"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 325, "col_offset": 27, "nodeName": "script_text", "type": "str"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 327, "col_offset": 15, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 327, "col_offset": 33, "nodeName": "executable", "type": "Any"}, {"lineNumber": 327, "col_offset": 45, "nodeName": "ts_name", "type": "str"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "proc", "type": "subprocess.Popen[str]"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 329, "col_offset": 30, "nodeName": "tp_name", "type": "str"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "SystemError", "type": "Type[SystemError]"}, {"lineNumber": 332, "col_offset": 39, "nodeName": "f", "type": "file"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "pickled", "type": "str"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "unlink", "type": "Callable[[Union[str, unicode]], None]"}, {"lineNumber": 335, "col_offset": 22, "nodeName": "tp_name", "type": "str"}, {"lineNumber": 337, "col_offset": 19, "nodeName": "pickled", "type": "str"}, {"lineNumber": 342, "col_offset": 27, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 344, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 344, "col_offset": 46, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 344, "col_offset": 51, "nodeName": "deserial", "type": "Any"}, {"lineNumber": 348, "col_offset": 21, "nodeName": "base64", "type": "module"}, {"lineNumber": 348, "col_offset": 38, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 348, "col_offset": 44, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "b64decode", "type": "Callable[..., str]"}, {"lineNumber": 349, "col_offset": 42, "nodeName": "obj_serial", "type": "str"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 350, "col_offset": 25, "nodeName": "deserial", "type": "Any"}, {"lineNumber": 350, "col_offset": 39, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 355, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 359, "col_offset": 31, "nodeName": "_invoke_other_python_pickle", "type": "Any"}, {"lineNumber": 359, "col_offset": 64, "nodeName": "executable", "type": "Any"}, {"lineNumber": 359, "col_offset": 76, "nodeName": "_gen_from_import_func", "type": "Callable[[], Any]"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 360, "col_offset": 25, "nodeName": "run_pickled", "type": "Callable[..., Any]"}, {"lineNumber": 360, "col_offset": 37, "nodeName": "py3_serial", "type": "Any"}, {"lineNumber": 360, "col_offset": 54, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 364, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 368, "col_offset": 31, "nodeName": "_invoke_other_python_pickle", "type": "Any"}, {"lineNumber": 368, "col_offset": 64, "nodeName": "executable", "type": "Any"}, {"lineNumber": 368, "col_offset": 76, "nodeName": "_gen_format_string_func", "type": "Optional[Union[object, Callable[[], Any]]]"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 369, "col_offset": 25, "nodeName": "run_pickled", "type": "Callable[..., Any]"}, {"lineNumber": 369, "col_offset": 37, "nodeName": "py3_serial", "type": "Any"}, {"lineNumber": 369, "col_offset": 54, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 373, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 377, "col_offset": 31, "nodeName": "_invoke_other_python_pickle", "type": "Any"}, {"lineNumber": 377, "col_offset": 64, "nodeName": "executable", "type": "Any"}, {"lineNumber": 377, "col_offset": 76, "nodeName": "_gen_build_unpack_func", "type": "Optional[Union[object, Callable[[], Any]]]"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "run_pickled", "type": "Callable[..., Any]"}, {"lineNumber": 378, "col_offset": 37, "nodeName": "py3_serial", "type": "Any"}, {"lineNumber": 378, "col_offset": 54, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 383, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 387, "col_offset": 31, "nodeName": "_invoke_other_python_pickle", "type": "Any"}, {"lineNumber": 387, "col_offset": 64, "nodeName": "executable", "type": "Any"}, {"lineNumber": 387, "col_offset": 76, "nodeName": "_gen_matmul_func", "type": "Optional[Union[Callable[[], Any], object]]"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 388, "col_offset": 25, "nodeName": "run_pickled", "type": "Callable[..., Any]"}, {"lineNumber": 388, "col_offset": 37, "nodeName": "py3_serial", "type": "Any"}, {"lineNumber": 388, "col_offset": 54, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 392, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 396, "col_offset": 31, "nodeName": "_invoke_other_python_pickle", "type": "Any"}, {"lineNumber": 396, "col_offset": 64, "nodeName": "executable", "type": "Any"}, {"lineNumber": 396, "col_offset": 76, "nodeName": "_gen_try_except_func", "type": "Callable[[], Any]"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 397, "col_offset": 25, "nodeName": "run_pickled", "type": "Callable[..., Any]"}, {"lineNumber": 397, "col_offset": 37, "nodeName": "py3_serial", "type": "Any"}, {"lineNumber": 397, "col_offset": 54, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 401, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 405, "col_offset": 31, "nodeName": "_invoke_other_python_pickle", "type": "Any"}, {"lineNumber": 405, "col_offset": 64, "nodeName": "executable", "type": "Any"}, {"lineNumber": 405, "col_offset": 76, "nodeName": "_gen_nested_fun", "type": "Callable[[], Any]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 406, "col_offset": 25, "nodeName": "run_pickled", "type": "Callable[..., Any]"}, {"lineNumber": 406, "col_offset": 37, "nodeName": "py3_serial", "type": "Any"}, {"lineNumber": 406, "col_offset": 54, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 410, "col_offset": 21, "nodeName": "base64", "type": "module"}, {"lineNumber": 410, "col_offset": 38, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 410, "col_offset": 44, "nodeName": "func", "type": "Type[Any]"}, {"lineNumber": 411, "col_offset": 25, "nodeName": "b64decode", "type": "Callable[..., str]"}, {"lineNumber": 411, "col_offset": 42, "nodeName": "obj_serial", "type": "str"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 412, "col_offset": 25, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 412, "col_offset": 46, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 417, "col_offset": 25, "nodeName": "get", "type": "Any"}, {"lineNumber": 418, "col_offset": 19, "nodeName": "executable", "type": "Any"}, {"lineNumber": 423, "col_offset": 31, "nodeName": "_invoke_other_python_pickle", "type": "Any"}, {"lineNumber": 423, "col_offset": 64, "nodeName": "executable", "type": "Any"}, {"lineNumber": 423, "col_offset": 76, "nodeName": "_gen_nested_yield_obj", "type": "Callable[[], Any]"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 424, "col_offset": 25, "nodeName": "run_pickled", "type": "Callable[..., Any]"}, {"lineNumber": 424, "col_offset": 37, "nodeName": "py3_serial", "type": "Any"}, {"lineNumber": 425, "col_offset": 25, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 430, "col_offset": 25, "nodeName": "get", "type": "Any"}, {"lineNumber": 431, "col_offset": 19, "nodeName": "executable", "type": "Any"}, {"lineNumber": 436, "col_offset": 32, "nodeName": "_invoke_other_python_pickle", "type": "Any"}, {"lineNumber": 436, "col_offset": 65, "nodeName": "executable", "type": "Any"}, {"lineNumber": 436, "col_offset": 77, "nodeName": "_gen_nested_yield_obj", "type": "Callable[[], Any]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 437, "col_offset": 25, "nodeName": "run_pickled", "type": "Callable[..., Any]"}, {"lineNumber": 437, "col_offset": 37, "nodeName": "py26_serial", "type": "Any"}, {"lineNumber": 438, "col_offset": 25, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 443, "col_offset": 25, "nodeName": "get", "type": "Any"}, {"lineNumber": 444, "col_offset": 19, "nodeName": "executable", "type": "Any"}, {"lineNumber": 448, "col_offset": 14, "nodeName": "_gen_class_builder_func", "type": "Optional[Union[Callable[[], Any], object]]"}, {"lineNumber": 449, "col_offset": 31, "nodeName": "_invoke_other_python_pickle", "type": "Any"}, {"lineNumber": 449, "col_offset": 64, "nodeName": "executable", "type": "Any"}, {"lineNumber": 449, "col_offset": 76, "nodeName": "_gen_class_builder_func", "type": "Optional[Union[Callable[[], Any], object]]"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 450, "col_offset": 25, "nodeName": "run_pickled", "type": "Callable[..., Any]"}, {"lineNumber": 450, "col_offset": 37, "nodeName": "py3_serial", "type": "Any"}, {"lineNumber": 451, "col_offset": 25, "nodeName": "b", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "v", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "base64", "type": "module"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "traceback", "type": "module"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 113, "col_offset": 55, "nodeName": "inner_gain", "type": "int"}, {"lineNumber": 115, "col_offset": 51, "nodeName": "inner_gain", "type": "int"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "nested_method", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 42, "nodeName": "add_val", "type": "int"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 207, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 212, "col_offset": 51, "nodeName": "arg", "type": "int"}, {"lineNumber": 214, "col_offset": 46, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 252, "col_offset": 32, "nodeName": "arg", "type": "int"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "_cl", "type": "Callable[[], Any]"}, {"lineNumber": 311, "col_offset": 41, "nodeName": "v", "type": "int"}, {"lineNumber": 317, "col_offset": 34, "nodeName": "sys", "type": "module"}, {"lineNumber": 320, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 320, "col_offset": 31, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 320, "col_offset": 91, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 321, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 321, "col_offset": 31, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 321, "col_offset": 91, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 322, "col_offset": 64, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 322, "col_offset": 75, "nodeName": "paths", "type": "List[str]"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "out_file", "type": "file"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "out_file", "type": "file"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 332, "col_offset": 17, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 332, "col_offset": 22, "nodeName": "tp_name", "type": "str"}, {"lineNumber": 333, "col_offset": 26, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 334, "col_offset": 16, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 338, "col_offset": 22, "nodeName": "SystemError", "type": "Type[SystemError]"}, {"lineNumber": 344, "col_offset": 34, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "base64", "type": "module"}, {"lineNumber": 355, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 359, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 364, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 368, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 373, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 377, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 383, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 387, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 392, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 396, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 401, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 405, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 411, "col_offset": 25, "nodeName": "base64", "type": "module"}, {"lineNumber": 417, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 423, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 430, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 436, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 443, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 449, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 42, "nodeName": "a", "type": "Any"}, {"lineNumber": 82, "col_offset": 47, "nodeName": "kw", "type": "Any"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "_o_closure", "type": "int"}, {"lineNumber": 113, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "_o_closure", "type": "int"}, {"lineNumber": 115, "col_offset": 41, "nodeName": "add_val", "type": "int"}, {"lineNumber": 115, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "nest", "type": "Any"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "a", "type": "int"}, {"lineNumber": 154, "col_offset": 46, "nodeName": "out_closure", "type": "int"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "a", "type": "int"}, {"lineNumber": 207, "col_offset": 38, "nodeName": "b", "type": "int"}, {"lineNumber": 208, "col_offset": 37, "nodeName": "v", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "out_closure", "type": "Tuple[int, int, int]"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "out_closure", "type": "Tuple[int, int, int]"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "out_closure", "type": "Tuple[int, int, int]"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 216, "col_offset": 38, "nodeName": "out_closure", "type": "Tuple[int, int, int]"}, {"lineNumber": 216, "col_offset": 66, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 317, "col_offset": 56, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 320, "col_offset": 95, "nodeName": "uuid4", "type": "Callable[[], uuid.UUID]"}, {"lineNumber": 321, "col_offset": 95, "nodeName": "uuid4", "type": "Callable[[], uuid.UUID]"}, {"lineNumber": 322, "col_offset": 64, "nodeName": "json", "type": "module"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 334, "col_offset": 16, "nodeName": "f", "type": "file"}, {"lineNumber": 412, "col_offset": 29, "nodeName": "deserial", "type": "Any"}, {"lineNumber": 412, "col_offset": 50, "nodeName": "func", "type": "Type[Any]"}, {"lineNumber": 417, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 425, "col_offset": 29, "nodeName": "func", "type": "Type[Any]"}, {"lineNumber": 430, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 438, "col_offset": 29, "nodeName": "func", "type": "Type[Any]"}, {"lineNumber": 443, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 451, "col_offset": 25, "nodeName": "cls", "type": "Type[Any]"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 41, "nodeName": "add_val", "type": "int"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "a", "type": "int"}, {"lineNumber": 154, "col_offset": 36, "nodeName": "add_val", "type": "int"}, {"lineNumber": 208, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 208, "col_offset": 31, "nodeName": "idx", "type": "int"}, {"lineNumber": 208, "col_offset": 44, "nodeName": "idx", "type": "int"}, {"lineNumber": 208, "col_offset": 49, "nodeName": "v", "type": "Any"}, {"lineNumber": 208, "col_offset": 54, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 208, "col_offset": 64, "nodeName": "args", "type": "Tuple[int, ...]"}, {"lineNumber": 317, "col_offset": 56, "nodeName": "path", "type": "str"}, {"lineNumber": 320, "col_offset": 95, "nodeName": "uuid", "type": "module"}, {"lineNumber": 321, "col_offset": 95, "nodeName": "uuid", "type": "module"}, {"lineNumber": 333, "col_offset": 26, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 424, "col_offset": 80, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 437, "col_offset": 81, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 450, "col_offset": 79, "nodeName": "b", "type": "Any"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 333, "col_offset": 26, "nodeName": "f", "type": "file"}, {"lineNumber": 450, "col_offset": 90, "nodeName": "a", "type": "Any"}, {"lineNumber": 450, "col_offset": 95, "nodeName": "kw", "type": "Any"}, {"lineNumber": 424, "col_offset": 84, "nodeName": "fun", "type": "Any"}, {"lineNumber": 424, "col_offset": 91, "nodeName": "a", "type": "Any"}, {"lineNumber": 424, "col_offset": 96, "nodeName": "kw", "type": "Any"}, {"lineNumber": 437, "col_offset": 85, "nodeName": "fun", "type": "Any"}, {"lineNumber": 437, "col_offset": 92, "nodeName": "a", "type": "Any"}, {"lineNumber": 437, "col_offset": 97, "nodeName": "kw", "type": "Any"}, {"lineNumber": 450, "col_offset": 79, "nodeName": "cls", "type": "Any"}]