[{"lineNumber": 29, "col_offset": 0, "nodeName": "_tokenize_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "LOCAL_TAG", "type": "str"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "NodeVisitor", "type": "Type[ast.NodeVisitor]"}, {"lineNumber": 204, "col_offset": 24, "nodeName": "ExprVisitor", "type": "Type[ExprVisitor]"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "ExprVisitor", "type": "Type[ExprVisitor]"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "ast", "type": "module"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "visit_Tuple", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "visit_List", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "toknum", "type": "int"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "tokval", "type": "str"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "_", "type": "Tuple[int, int]"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "_", "type": "Tuple[int, int]"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "_", "type": "str"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "generate_tokens", "type": "Callable[[Callable[[], str]], Generator[tokenize.TokenInfo, None, None]]"}, {"lineNumber": 30, "col_offset": 60, "nodeName": "reader", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "Add", "type": "Type[_ast.Add]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "Sub", "type": "Type[_ast.Sub]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "Mult", "type": "Type[_ast.Mult]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "Div", "type": "Type[_ast.Div]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "FloorDiv", "type": "Type[_ast.FloorDiv]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "mod", "type": "Type[_ast.mod]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "Pow", "type": "Type[_ast.Pow]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "Eq", "type": "Type[_ast.Eq]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "NotEq", "type": "Type[_ast.NotEq]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "Lt", "type": "Type[_ast.Lt]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "LtE", "type": "Type[_ast.LtE]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "Gt", "type": "Type[_ast.Gt]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "GtE", "type": "Type[_ast.GtE]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "In", "type": "Type[_ast.In]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "NotIn", "type": "Type[_ast.NotIn]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "UAdd", "type": "Type[_ast.UAdd]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "USub", "type": "Type[_ast.USub]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "Invert", "type": "Type[_ast.Invert]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "And", "type": "Type[_ast.And]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "Or", "type": "Type[_ast.Or]"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "sub", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "mul", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "truediv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "floordiv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "mod", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "pow", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "eq", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "ne", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "lt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "le", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "gt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "ge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "_isin", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "_notin", "type": "Any"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "neg", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "invert", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "and_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "or_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "env", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "reader", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "readline", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "rewrite", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "node_name", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "method", "type": "str"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "expr", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "left", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "right", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "kwargs", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "ops", "type": "Any"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "ops", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "comps", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "comparators", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "left", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "left", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "values", "type": "List[_ast.Compare]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "oprand", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "n", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "attr", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "attr", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "value", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "sub", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "lower", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "lower", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "upper", "type": "Any"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "upper", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "step", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "collection", "type": "Any"}, {"lineNumber": 207, "col_offset": 26, "nodeName": "collection", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "tokenize", "type": "module"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "toknum", "type": "int"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "OP", "type": "int"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "operator", "type": "module"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "operator", "type": "module"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "operator", "type": "module"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "operator", "type": "module"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "operator", "type": "module"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "operator", "type": "module"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "operator", "type": "module"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "operator", "type": "module"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "operator", "type": "module"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "operator", "type": "module"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "operator", "type": "module"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "operator", "type": "module"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "operator", "type": "module"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "ele", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "ele", "type": "Any"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "operator", "type": "module"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "operator", "type": "module"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "operator", "type": "module"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "operator", "type": "module"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "operator", "type": "module"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "CollectionVisitor"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "untokenize", "type": "Callable[[Iterable[Union[tokenize.TokenInfo, Sequence[Union[int, str, Tuple[int, int]]]]]], Any]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "expr", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "fix_missing_locations", "type": "Callable"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "node", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "node", "type": "Any"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "Expr", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "node", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "node_name", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "visitor", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "visitor", "type": "Any"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "node", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "body", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "expr", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "value", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "left", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "right", "type": "Any"}, {"lineNumber": 109, "col_offset": 48, "nodeName": "left", "type": "Any"}, {"lineNumber": 109, "col_offset": 54, "nodeName": "right", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "func", "type": "Any"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "func", "type": "Any"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "node", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "binop", "type": "_ast.BinOp"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "comp", "type": "Any"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "ops", "type": "Any"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "comps", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "new_node", "type": "_ast.Compare"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "left", "type": "Any"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "comp", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "binop", "type": "_ast.BinOp"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "values", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 28, "nodeName": "operand", "type": "Any"}, {"lineNumber": 144, "col_offset": 48, "nodeName": "oprand", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "LOCAL_TAG", "type": "str"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "local_name", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "id", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "get_named_object", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "id", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "node", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 176, "col_offset": 27, "nodeName": "Load", "type": "Type[_ast.Load]"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "resolved", "type": "Any"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "value", "type": "Any"}, {"lineNumber": 184, "col_offset": 14, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "slice", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "value", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "lower", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "lower", "type": "Any"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "upper", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "upper", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "step", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "lower", "type": "Any"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "upper", "type": "Any"}, {"lineNumber": 201, "col_offset": 35, "nodeName": "step", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 48, "nodeName": "env", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "CollectionVisitor"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "_get_field", "type": "Any"}, {"lineNumber": 210, "col_offset": 42, "nodeName": "obj_name", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 215, "col_offset": 46, "nodeName": "env", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "SequenceVisitor"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 219, "col_offset": 23, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 219, "col_offset": 38, "nodeName": "obj_name", "type": "Any"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "tokenize", "type": "module"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "tokval", "type": "str"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "tokval", "type": "str"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "LOCAL_TAG", "type": "str"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "tokval", "type": "str"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "toknum", "type": "int"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "NAME", "type": "int"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "tokval", "type": "str"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "toknum", "type": "int"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "expr", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "tokenize", "type": "module"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "_preparse", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "expr", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "ast", "type": "module"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "parse", "type": "Callable"}, {"lineNumber": 80, "col_offset": 51, "nodeName": "expr", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "node", "type": "Any"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "method", "type": "str"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "body", "type": "Any"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "SyntaxError", "type": "Type[SyntaxError]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "node", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "node", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "node", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "_op_handlers", "type": "Dict[Union[Type[_ast.Add], Type[_ast.Sub], Type[_ast.Mult], Type[_ast.Div], Type[_ast.FloorDiv], Type[_ast.mod], Type[_ast.Pow], Type[_ast.Eq], Type[_ast.NotEq], Type[_ast.Lt], Type[_ast.LtE], Type[_ast.Gt], Type[_ast.GtE], Type[_ast.In], Type[_ast.NotIn], Type[_ast.UAdd], Type[_ast.USub], Type[_ast.Invert], Type[_ast.And], Type[_ast.Or]], Any]"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "node", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "func", "type": "Any"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "ReprWrapper", "type": "Any"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "SyntaxError", "type": "Type[SyntaxError]"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "n", "type": "Any"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "n", "type": "Any"}, {"lineNumber": 116, "col_offset": 39, "nodeName": "args", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "kwargs", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "comps", "type": "Any"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "BinOp", "type": "Type[_ast.BinOp]"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 30, "nodeName": "binop", "type": "_ast.BinOp"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "Compare", "type": "Type[_ast.Compare]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "new_node", "type": "_ast.Compare"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "BoolOp", "type": "Type[_ast.BoolOp]"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "BinOp", "type": "Type[_ast.BinOp]"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 30, "nodeName": "binop", "type": "_ast.BinOp"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 143, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "_op_handlers", "type": "Dict[Union[Type[_ast.Add], Type[_ast.Sub], Type[_ast.Mult], Type[_ast.Div], Type[_ast.FloorDiv], Type[_ast.mod], Type[_ast.Pow], Type[_ast.Eq], Type[_ast.NotEq], Type[_ast.Lt], Type[_ast.LtE], Type[_ast.Gt], Type[_ast.GtE], Type[_ast.In], Type[_ast.NotIn], Type[_ast.UAdd], Type[_ast.USub], Type[_ast.Invert], Type[_ast.And], Type[_ast.Or]], Any]"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "id", "type": "Any"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "replace", "type": "Any"}, {"lineNumber": 148, "col_offset": 41, "nodeName": "LOCAL_TAG", "type": "str"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "env", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "id", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "node", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "e", "type": "Any"}, {"lineNumber": 167, "col_offset": 34, "nodeName": "e", "type": "Any"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "elts", "type": "Any"}, {"lineNumber": 176, "col_offset": 27, "nodeName": "ast", "type": "module"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "resolved", "type": "Any"}, {"lineNumber": 178, "col_offset": 37, "nodeName": "attr", "type": "Any"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 180, "col_offset": 64, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "node", "type": "Any"}, {"lineNumber": 184, "col_offset": 14, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "node", "type": "Any"}, {"lineNumber": 185, "col_offset": 21, "nodeName": "sub", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "node", "type": "Any"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "lower", "type": "Any"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "upper", "type": "Any"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 30, "nodeName": "step", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "collection", "type": "Any"}, {"lineNumber": 219, "col_offset": 23, "nodeName": "self", "type": "SequenceVisitor"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "tokenize", "type": "module"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "tokval", "type": "str"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "toknum", "type": "int"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "NAME", "type": "int"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "tokval", "type": "str"}, {"lineNumber": 40, "col_offset": 49, "nodeName": "tokval", "type": "str"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "_tokenize_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 54, "nodeName": "reader", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "ast", "type": "module"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "ExpressionError", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 116, "col_offset": 39, "nodeName": "node", "type": "Any"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "arg", "type": "Any"}, {"lineNumber": 117, "col_offset": 65, "nodeName": "kw", "type": "Any"}, {"lineNumber": 117, "col_offset": 71, "nodeName": "keywords", "type": "Any"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "ast", "type": "module"}, {"lineNumber": 125, "col_offset": 46, "nodeName": "left", "type": "Any"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "ast", "type": "module"}, {"lineNumber": 131, "col_offset": 60, "nodeName": "left", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "values", "type": "List[_ast.Compare]"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "ast", "type": "module"}, {"lineNumber": 134, "col_offset": 58, "nodeName": "values", "type": "List[_ast.Compare]"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "ast", "type": "module"}, {"lineNumber": 138, "col_offset": 33, "nodeName": "op", "type": "Any"}, {"lineNumber": 138, "col_offset": 47, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 138, "col_offset": 58, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "id", "type": "Any"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 149, "col_offset": 28, "nodeName": "local_name", "type": "Any"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "node", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "node", "type": "Any"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 180, "col_offset": 64, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 206, "col_offset": 14, "nodeName": "CollectionVisitor", "type": "Type[CollectionVisitor]"}, {"lineNumber": 206, "col_offset": 33, "nodeName": "self", "type": "CollectionVisitor"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "self", "type": "CollectionVisitor"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "SequenceVisitor", "type": "Type[SequenceVisitor]"}, {"lineNumber": 215, "col_offset": 31, "nodeName": "self", "type": "SequenceVisitor"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "tokenize", "type": "module"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "tokval", "type": "str"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 94, "col_offset": 88, "nodeName": "node_name", "type": "Any"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 109, "col_offset": 38, "nodeName": "op", "type": "Any"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "kw", "type": "Any"}, {"lineNumber": 117, "col_offset": 39, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 50, "nodeName": "value", "type": "Any"}, {"lineNumber": 117, "col_offset": 71, "nodeName": "node", "type": "Any"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "ops", "type": "Any"}, {"lineNumber": 125, "col_offset": 46, "nodeName": "node", "type": "Any"}, {"lineNumber": 125, "col_offset": 63, "nodeName": "comps", "type": "Any"}, {"lineNumber": 131, "col_offset": 48, "nodeName": "comp", "type": "Any"}, {"lineNumber": 131, "col_offset": 71, "nodeName": "op", "type": "Any"}, {"lineNumber": 134, "col_offset": 40, "nodeName": "And", "type": "Type[_ast.And]"}, {"lineNumber": 138, "col_offset": 33, "nodeName": "node", "type": "Any"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "op", "type": "Any"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "node", "type": "Any"}, {"lineNumber": 109, "col_offset": 38, "nodeName": "node", "type": "Any"}, {"lineNumber": 117, "col_offset": 39, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 117, "col_offset": 50, "nodeName": "kw", "type": "Any"}, {"lineNumber": 134, "col_offset": 40, "nodeName": "ast", "type": "module"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "node", "type": "Any"}]