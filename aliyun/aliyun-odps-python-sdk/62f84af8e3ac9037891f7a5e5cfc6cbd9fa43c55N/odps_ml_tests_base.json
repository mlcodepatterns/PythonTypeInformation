[{"lineNumber": 63, "col_offset": 0, "nodeName": "build_mock_expr_class", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "tmp_otm", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 0, "nodeName": "otm", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 177, "col_offset": 0, "nodeName": "_add_case", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "IONOSPHERE_TABLE", "type": "Any"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "AlgoCollectionExpr", "type": "Type[odps.ml.expr.core.AlgoCollectionExpr]"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "ODPSModelExpr", "type": "Type[odps.ml.expr.models.base.ODPSModelExpr]"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "TestDataMixIn", "type": "Type[odps.examples.tables.TestDataMixIn]"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "TestBase", "type": "Type[odps.tests.core.TestBase]"}, {"lineNumber": 182, "col_offset": 0, "nodeName": "_add_case", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "_add_case", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 185, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "tn", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "__slots__", "type": "Tuple[str, str]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "node_name", "type": "str"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "_algo", "type": "str"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "algo_meta", "type": "Dict[Any, Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "__slots__", "type": "Tuple[str, str]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "node_name", "type": "str"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "_algo", "type": "str"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "algo_meta", "type": "Dict[Any, Any]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "prefix", "type": "str"}, {"lineNumber": 170, "col_offset": 13, "nodeName": "TABLE_MODEL_PREFIX", "type": "str"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 0, "nodeName": "AlgoExprMixin", "type": "Type[odps.ml.expr.core.AlgoExprMixin]"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 68, "col_offset": 7, "nodeName": "output_type", "type": "str"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "DATA", "type": "str"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "s", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "dry_run", "type": "bool"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "lifecycle", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "verbose", "type": "bool"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "interactive", "type": "bool"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "exec_id", "type": "uuid.UUID"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "input_types", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "lifecycle", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "_case", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "ignores", "type": "Set[Any]"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "_case", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "old_dry_run", "type": "Any"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "dry_run", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "dry_run", "type": "bool"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "dry_run", "type": "Any"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "old_dry_run", "type": "Any"}, {"lineNumber": 171, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "TEMP_TABLE_PREFIX", "type": "str"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "prefix", "type": "str"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 174, "col_offset": 57, "nodeName": "key", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "_init_attr", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "append", "type": "Any"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "case", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "_init", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "_init_attr", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "_init_attr", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "_init", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "_init_attr", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "_init_attr", "type": "Any"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "PortType", "type": "Type[odps.ml.enums.PortType]"}, {"lineNumber": 69, "col_offset": 106, "nodeName": "class_exprs", "type": "Dict[Any, Any]"}, {"lineNumber": 71, "col_offset": 79, "nodeName": "class_exprs", "type": "Dict[Any, Any]"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "TEMP_TABLE_PREFIX", "type": "str"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "TABLE_MODEL_PREFIX", "type": "str"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "ml", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "options", "type": "odps.config.Config"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "options", "type": "odps.config.Config"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "options", "type": "odps.config.Config"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "filterwarnings", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "uuid4", "type": "Callable[[], uuid.UUID]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "sources", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "output_desc", "type": "Any"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "integer_types", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "output_types", "type": "List[str]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "output_types", "type": "List[str]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "idx", "type": "int"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "ot", "type": "str"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "output_types", "type": "List[str]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "expr_cls", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "init_args", "type": "Dict[Any, Any]"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "options", "type": "odps.config.Config"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "targets", "type": "Dict[Any, Any]"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "exist_offline_model", "type": "Any"}, {"lineNumber": 143, "col_offset": 41, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "ml", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "ml", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "create_ionosphere", "type": "Any"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "IONOSPHERE_TABLE", "type": "Any"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "roles", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "set_max_iter", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "persist", "type": "Any"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "ml", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "delete_table", "type": "Any"}, {"lineNumber": 160, "col_offset": 31, "nodeName": "table_name", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 171, "col_offset": 7, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "TEMP_TABLE_PREFIX", "type": "str"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "TABLE_MODEL_PREFIX", "type": "str"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 174, "col_offset": 33, "nodeName": "TABLE_MODEL_SEPARATOR", "type": "str"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "_cases", "type": "Any"}, {"lineNumber": 44, "col_offset": 55, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 44, "col_offset": 63, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "BaseMockAlgoCollectionExpr"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "BaseMockAlgoCollectionExpr"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 57, "col_offset": 46, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 57, "col_offset": 54, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "BaseMockModelExpr"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "BaseMockModelExpr"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "output_id", "type": "int"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "BaseMockAlgoCollectionExpr", "type": "Type[BaseMockAlgoCollectionExpr]"}, {"lineNumber": 69, "col_offset": 75, "nodeName": "BaseMockAlgoCollectionExpr", "type": "Type[BaseMockAlgoCollectionExpr]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "BaseMockModelExpr", "type": "Type[BaseMockModelExpr]"}, {"lineNumber": 71, "col_offset": 57, "nodeName": "BaseMockModelExpr", "type": "Type[BaseMockModelExpr]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "options", "type": "odps.config.Config"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "os", "type": "module"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 88, "col_offset": 51, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "uuid", "type": "module"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "sources", "type": "Any"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "Iterable", "type": "Type[Iterable[Any]]"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "sources", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "DATA", "type": "str"}, {"lineNumber": 96, "col_offset": 75, "nodeName": "MODEL", "type": "str"}, {"lineNumber": 96, "col_offset": 94, "nodeName": "o", "type": "Any"}, {"lineNumber": 96, "col_offset": 99, "nodeName": "sources", "type": "Union[Any, List[Any]]"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "six", "type": "module"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "DATA", "type": "str"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "build_mock_expr_class", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "input_types", "type": "List[str]"}, {"lineNumber": 105, "col_offset": 58, "nodeName": "idx", "type": "int"}, {"lineNumber": 105, "col_offset": 63, "nodeName": "ot", "type": "str"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "ot", "type": "str"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "DATA", "type": "str"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "schema", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 56, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "run_sql", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "ignores", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "k", "type": "Any"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "target_params", "type": "Any"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "v", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "assertDictEqual", "type": "Any"}, {"lineNumber": 138, "col_offset": 33, "nodeName": "targets", "type": "Dict[Any, Any]"}, {"lineNumber": 138, "col_offset": 42, "nodeName": "gen_params", "type": "Dict[Any, Optional[str]]"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "odps", "type": "Any"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "options", "type": "odps.config.Config"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "options", "type": "odps.config.Config"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "MLTestBase"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "options", "type": "odps.config.Config"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "odps", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "delete_offline_model", "type": "Any"}, {"lineNumber": 164, "col_offset": 43, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "prefix", "type": "str"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "BaseMockAlgoCollectionExpr", "type": "Type[BaseMockAlgoCollectionExpr]"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "self", "type": "BaseMockAlgoCollectionExpr"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "BaseMockModelExpr", "type": "Type[BaseMockModelExpr]"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "self", "type": "BaseMockModelExpr"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "ML_ARG_PREFIX", "type": "str"}, {"lineNumber": 65, "col_offset": 51, "nodeName": "idx", "type": "int"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "MLTestBase", "type": "Type[MLTestBase]"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "self", "type": "MLTestBase"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 96, "col_offset": 51, "nodeName": "o", "type": "Any"}, {"lineNumber": 96, "col_offset": 54, "nodeName": "CollectionExpr", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "PortType", "type": "Type[odps.ml.enums.PortType]"}, {"lineNumber": 96, "col_offset": 75, "nodeName": "PortType", "type": "Type[odps.ml.enums.PortType]"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "PortType", "type": "Type[odps.ml.enums.PortType]"}, {"lineNumber": 99, "col_offset": 46, "nodeName": "_", "type": "int"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "DATA", "type": "str"}, {"lineNumber": 101, "col_offset": 60, "nodeName": "MODEL", "type": "str"}, {"lineNumber": 101, "col_offset": 79, "nodeName": "ch", "type": "Any"}, {"lineNumber": 101, "col_offset": 85, "nodeName": "output_desc", "type": "Any"}, {"lineNumber": 106, "col_offset": 58, "nodeName": "exec_id", "type": "uuid.UUID"}, {"lineNumber": 106, "col_offset": 101, "nodeName": "action", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "PortType", "type": "Type[odps.ml.enums.PortType]"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "init_args", "type": "Dict[Any, Any]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "expr_cls", "type": "Any"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "odps", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "gen_params", "type": "Dict[Any, Optional[str]]"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "six", "type": "module"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "ignores", "type": "Set[Any]"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "v", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "targets", "type": "Dict[Any, Any]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "self", "type": "MLTestBase"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "self", "type": "MLTestBase"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "DataFrame", "type": "Type[odps.df.core.DataFrame]"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "LogisticRegression", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "df", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "MLTestBase"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "odps", "type": "Any"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 173, "col_offset": 36, "nodeName": "TEMP_TABLE_PREFIX", "type": "str"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "idx", "type": "int"}, {"lineNumber": 65, "col_offset": 58, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 99, "col_offset": 51, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 99, "col_offset": 57, "nodeName": "output_desc", "type": "Any"}, {"lineNumber": 101, "col_offset": 45, "nodeName": "ch", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "PortType", "type": "Type[odps.ml.enums.PortType]"}, {"lineNumber": 101, "col_offset": 60, "nodeName": "PortType", "type": "Type[odps.ml.enums.PortType]"}, {"lineNumber": 106, "col_offset": 75, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "next", "type": "Any"}, {"lineNumber": 109, "col_offset": 38, "nodeName": "init_args", "type": "Dict[Any, Any]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "self", "type": "MLTestBase"}, {"lineNumber": 114, "col_offset": 67, "nodeName": "table_name", "type": "Any"}, {"lineNumber": 114, "col_offset": 79, "nodeName": "lifecycle", "type": "Any"}, {"lineNumber": 120, "col_offset": 72, "nodeName": "v", "type": "Any"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 135, "col_offset": 84, "nodeName": "v", "type": "Any"}, {"lineNumber": 136, "col_offset": 50, "nodeName": "v", "type": "Any"}, {"lineNumber": 137, "col_offset": 24, "nodeName": "k", "type": "Any"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "get_table", "type": "Any"}, {"lineNumber": 153, "col_offset": 43, "nodeName": "IONOSPHERE_TABLE", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "classifiers", "type": "module"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "self", "type": "MLTestBase"}, {"lineNumber": 65, "col_offset": 64, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 65, "col_offset": 68, "nodeName": "input_types", "type": "List[str]"}, {"lineNumber": 106, "col_offset": 88, "nodeName": "msg", "type": "Any"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "six", "type": "module"}, {"lineNumber": 108, "col_offset": 48, "nodeName": "s", "type": "Any"}, {"lineNumber": 114, "col_offset": 79, "nodeName": "options", "type": "odps.config.Config"}, {"lineNumber": 120, "col_offset": 35, "nodeName": "k", "type": "Any"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "v", "type": "Any"}, {"lineNumber": 120, "col_offset": 43, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 120, "col_offset": 57, "nodeName": "gen_params", "type": "Any"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "k", "type": "Any"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "v", "type": "Any"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 130, "col_offset": 57, "nodeName": "gen_params", "type": "Any"}, {"lineNumber": 130, "col_offset": 93, "nodeName": "v", "type": "Any"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "k", "type": "Any"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "project", "type": "Any"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "odps", "type": "Any"}, {"lineNumber": 108, "col_offset": 54, "nodeName": "s", "type": "Any"}, {"lineNumber": 108, "col_offset": 59, "nodeName": "sources", "type": "Union[Any, List[Any]]"}, {"lineNumber": 120, "col_offset": 43, "nodeName": "six", "type": "module"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "six", "type": "module"}, {"lineNumber": 130, "col_offset": 72, "nodeName": "k", "type": "Any"}, {"lineNumber": 130, "col_offset": 81, "nodeName": "ignores", "type": "Set[Any]"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "odps", "type": "Any"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "self", "type": "MLTestBase"}, {"lineNumber": 108, "col_offset": 70, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 108, "col_offset": 81, "nodeName": "s", "type": "Any"}, {"lineNumber": 108, "col_offset": 84, "nodeName": "CollectionExpr", "type": "Any"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "self", "type": "MLTestBase"}]