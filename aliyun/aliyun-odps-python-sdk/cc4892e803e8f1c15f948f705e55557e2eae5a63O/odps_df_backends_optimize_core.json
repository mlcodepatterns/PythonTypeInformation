[{"lineNumber": 33, "col_offset": 16, "nodeName": "Backend", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "dag", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "root", "type": "Any"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "get_field", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "filter", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "filters", "type": "Tuple[Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "new_filter", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "compacted", "type": "Optional[Any]"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "compacted", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "compacted", "type": "Optional[Any]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "compacted", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "to_compact", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "changed", "type": "bool"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "field", "type": "Any"}, {"lineNumber": 207, "col_offset": 11, "nodeName": "changed", "type": "bool"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "changed", "type": "bool"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "retval", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "expr", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "collection", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "path", "type": "Any"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "changed", "type": "bool"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "fields", "type": "Any"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "fields", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "name_idxes", "type": "Any"}, {"lineNumber": 260, "col_offset": 21, "nodeName": "_name_indexes", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "cp", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "pp", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "traverse_until_source", "type": "Any"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "traverse_until_source", "type": "Any"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "substitute", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "expr", "type": "Any"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "to_sub", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "having", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "having", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "_having", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "predicates", "type": "Any"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "reduce", "type": "Callable"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "and_", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "FilterCollectionExpr", "type": "Any"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "input", "type": "Any"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "get_compact_filters", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "_sub", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "new_filter", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "_visit_need_compact_collection", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 56, "nodeName": "expr", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "expr", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "compacted", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "selects", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "field", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "_fields", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "_aggregations", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "_fields", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 62, "nodeName": "selects", "type": "List[Any]"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "expr", "type": "Any"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "ProjectCollectionExpr", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "_input", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "input", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "JoinCollectionExpr", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "_visit_need_compact_collection", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 44, "nodeName": "expr", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "_visit_need_compact_collection", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 44, "nodeName": "expr", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 158, "col_offset": 58, "nodeName": "_mapjoin", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "_visit_need_compact_collection", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 44, "nodeName": "expr", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "_compact", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "expr", "type": "Any"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "compacted", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "_sub", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 18, "nodeName": "expr", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "compacted", "type": "Any"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "expr", "type": "Any"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "traverse_until_source", "type": "Any"}, {"lineNumber": 173, "col_offset": 42, "nodeName": "expr", "type": "Any"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "_get_fields", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 38, "nodeName": "expr", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "broadcast_field", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "expr", "type": "Any"}, {"lineNumber": 215, "col_offset": 21, "nodeName": "collects", "type": "Tuple[Any, ...]"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "all_path", "type": "Any"}, {"lineNumber": 216, "col_offset": 34, "nodeName": "collection", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 243, "col_offset": 19, "nodeName": "retval", "type": "Any"}, {"lineNumber": 246, "col_offset": 17, "nodeName": "select_fields", "type": "Any"}, {"lineNumber": 246, "col_offset": 31, "nodeName": "collection", "type": "Any"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "to_str", "type": "Any"}, {"lineNumber": 255, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 257, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 257, "col_offset": 22, "nodeName": "collection", "type": "Any"}, {"lineNumber": 257, "col_offset": 34, "nodeName": "GroupByCollectionExpr", "type": "Any"}, {"lineNumber": 260, "col_offset": 21, "nodeName": "schema", "type": "Any"}, {"lineNumber": 261, "col_offset": 27, "nodeName": "name_idxes", "type": "Any"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "idx", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "idx", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "options", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "optimizes", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "optimizes", "type": "Any"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 60, "col_offset": 51, "nodeName": "parents", "type": "None"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "df", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "input", "type": "Any"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "GroupByCollectionExpr", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "optimize_banned", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "_broadcast_field", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 46, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 69, "col_offset": 62, "nodeName": "input", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "input", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "having", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "predicates", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "predicates", "type": "Any"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "_sub", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "expr", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "input", "type": "Any"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "input", "type": "Any"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "FilterCollectionExpr", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "filters", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "input", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "filters", "type": "Tuple[Any]"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "input", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "change_input", "type": "Any"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "filter", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "input", "type": "Any"}, {"lineNumber": 97, "col_offset": 47, "nodeName": "input", "type": "Any"}, {"lineNumber": 97, "col_offset": 54, "nodeName": "get_field", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 65, "nodeName": "dag", "type": "Any"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "operator", "type": "Any"}, {"lineNumber": 99, "col_offset": 43, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 100, "col_offset": 62, "nodeName": "schema", "type": "Any"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 103, "col_offset": 58, "nodeName": "filters", "type": "Tuple[Any, ...]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "filters", "type": "Tuple[Any, ...]"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "df", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "expr", "type": "Any"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "ProjectCollectionExpr", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "input", "type": "Any"}, {"lineNumber": 116, "col_offset": 39, "nodeName": "GroupByCollectionExpr", "type": "Any"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "optimize_banned", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "expr", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "_input", "type": "Any"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "_input", "type": "Any"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "from_lists", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "_sub", "type": "Callable[..., Any]"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "expr", "type": "Any"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "input", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "df", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "input", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 143, "col_offset": 50, "nodeName": "GroupedSequenceReduction", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "_input", "type": "Any"}, {"lineNumber": 144, "col_offset": 57, "nodeName": "CollectionExpr", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "df", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "df", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "input", "type": "Any"}, {"lineNumber": 158, "col_offset": 34, "nodeName": "JoinCollectionExpr", "type": "Any"}, {"lineNumber": 158, "col_offset": 58, "nodeName": "input", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "expr", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "valid", "type": "bool"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "it", "type": "nothing"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "to_compact", "type": "List[Any]"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 202, "col_offset": 30, "nodeName": "_broadcast_field", "type": "Callable[..., Any]"}, {"lineNumber": 202, "col_offset": 52, "nodeName": "field", "type": "Any"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "broadcast_field", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "changed", "type": "bool"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "substitute", "type": "Any"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "input", "type": "Any"}, {"lineNumber": 208, "col_offset": 40, "nodeName": "input", "type": "Any"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "expr", "type": "Any"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "it", "type": "Any"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "col", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "col_name", "type": "Any"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "field", "type": "Any"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "changed", "type": "bool"}, {"lineNumber": 247, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 247, "col_offset": 22, "nodeName": "collection", "type": "Any"}, {"lineNumber": 247, "col_offset": 34, "nodeName": "GroupByCollectionExpr", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "_having", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 250, "col_offset": 26, "nodeName": "_having", "type": "Any"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "utils", "type": "Any"}, {"lineNumber": 260, "col_offset": 21, "nodeName": "collection", "type": "Any"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "lower", "type": "Any"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "name_idxes", "type": "Any"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "name_idxes", "type": "Any"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "_get_fields", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 32, "nodeName": "collection", "type": "Any"}, {"lineNumber": 265, "col_offset": 44, "nodeName": "idx", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "df", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "prune", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "df", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "pushdown", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "accept", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "accept", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "options", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "expr", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "input", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 69, "col_offset": 46, "nodeName": "expr", "type": "Any"}, {"lineNumber": 69, "col_offset": 62, "nodeName": "expr", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "expr", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "expr", "type": "Any"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "having", "type": "Any"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "expr", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "expr", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "expr", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "expr", "type": "Any"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "expr", "type": "Any"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "FilterCollectionExpr", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "input", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "_compact_filters", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "col", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "filter", "type": "Any"}, {"lineNumber": 99, "col_offset": 43, "nodeName": "f", "type": "Any"}, {"lineNumber": 99, "col_offset": 59, "nodeName": "f", "type": "Any"}, {"lineNumber": 100, "col_offset": 62, "nodeName": "input", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "options", "type": "Any"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "expr", "type": "Any"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "input", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "expr", "type": "Any"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "expr", "type": "Any"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "Schema", "type": "Any"}, {"lineNumber": 125, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 126, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "expr", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "options", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "_aggregations", "type": "Any"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "_aggregations", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "options", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "options", "type": "Any"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "expr", "type": "Any"}, {"lineNumber": 158, "col_offset": 58, "nodeName": "expr", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "node", "type": "Any"}, {"lineNumber": 176, "col_offset": 36, "nodeName": "CollectionExpr", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 181, "col_offset": 26, "nodeName": "node", "type": "Any"}, {"lineNumber": 181, "col_offset": 32, "nodeName": "ProjectCollectionExpr", "type": "Any"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "optimize_banned", "type": "Any"}, {"lineNumber": 185, "col_offset": 26, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "valid", "type": "bool"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 191, "col_offset": 34, "nodeName": "node", "type": "Any"}, {"lineNumber": 200, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 200, "col_offset": 30, "nodeName": "field", "type": "Any"}, {"lineNumber": 200, "col_offset": 37, "nodeName": "SequenceExpr", "type": "Any"}, {"lineNumber": 202, "col_offset": 30, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "substitute", "type": "Any"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "field", "type": "Any"}, {"lineNumber": 205, "col_offset": 39, "nodeName": "broadcast_field", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "expr", "type": "Any"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "expr", "type": "Any"}, {"lineNumber": 208, "col_offset": 66, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 217, "col_offset": 27, "nodeName": "it", "type": "Any"}, {"lineNumber": 217, "col_offset": 33, "nodeName": "path", "type": "Any"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 223, "col_offset": 27, "nodeName": "source_name", "type": "Any"}, {"lineNumber": 223, "col_offset": 46, "nodeName": "name", "type": "Any"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "_get_field", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 224, "col_offset": 40, "nodeName": "collection", "type": "Any"}, {"lineNumber": 224, "col_offset": 52, "nodeName": "col_name", "type": "Any"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "is_renamed", "type": "Any"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "field", "type": "Any"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "field", "type": "Any"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "_sub", "type": "Callable[..., Any]"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "col", "type": "Any"}, {"lineNumber": 230, "col_offset": 31, "nodeName": "field", "type": "Any"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "col", "type": "Any"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "retval", "type": "Any"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "retval", "type": "Any"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "field", "type": "Any"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "substitute", "type": "Any"}, {"lineNumber": 240, "col_offset": 36, "nodeName": "collection", "type": "Any"}, {"lineNumber": 240, "col_offset": 48, "nodeName": "input", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "collection", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "fields", "type": "Any"}, {"lineNumber": 250, "col_offset": 26, "nodeName": "collection", "type": "Any"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "_name_to_exprs", "type": "Any"}, {"lineNumber": 258, "col_offset": 47, "nodeName": "name", "type": "Any"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 264, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "options", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "options", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "expr", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "node", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "node", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "filters", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 64, "nodeName": "filters", "type": "Tuple[Any]"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "expr", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "selects", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 75, "nodeName": "field", "type": "Any"}, {"lineNumber": 125, "col_offset": 53, "nodeName": "f", "type": "Any"}, {"lineNumber": 125, "col_offset": 64, "nodeName": "f", "type": "Any"}, {"lineNumber": 125, "col_offset": 69, "nodeName": "selects", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 53, "nodeName": "f", "type": "Any"}, {"lineNumber": 126, "col_offset": 65, "nodeName": "f", "type": "Any"}, {"lineNumber": 126, "col_offset": 70, "nodeName": "selects", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "expr", "type": "Any"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "expr", "type": "Any"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "_aggregations", "type": "Any"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "node", "type": "Any"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 185, "col_offset": 26, "nodeName": "itertools", "type": "module"}, {"lineNumber": 186, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "it", "type": "nothing"}, {"lineNumber": 186, "col_offset": 38, "nodeName": "SequenceReduction", "type": "Any"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "valid", "type": "bool"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "to_compact", "type": "List[Any]"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "expr", "type": "Any"}, {"lineNumber": 205, "col_offset": 60, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 208, "col_offset": 40, "nodeName": "to_compact", "type": "List[Any]"}, {"lineNumber": 208, "col_offset": 66, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 217, "col_offset": 41, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 217, "col_offset": 52, "nodeName": "it", "type": "Any"}, {"lineNumber": 217, "col_offset": 56, "nodeName": "Column", "type": "Any"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "it", "type": "Any"}, {"lineNumber": 223, "col_offset": 27, "nodeName": "col", "type": "Any"}, {"lineNumber": 223, "col_offset": 46, "nodeName": "col", "type": "Any"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "col", "type": "Any"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "rename", "type": "Any"}, {"lineNumber": 226, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 228, "col_offset": 28, "nodeName": "copy", "type": "Any"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 235, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 235, "col_offset": 30, "nodeName": "field", "type": "Any"}, {"lineNumber": 235, "col_offset": 37, "nodeName": "Scalar", "type": "Any"}, {"lineNumber": 235, "col_offset": 49, "nodeName": "_value", "type": "Any"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "collects", "type": "Tuple[Any, ...]"}, {"lineNumber": 238, "col_offset": 68, "nodeName": "field", "type": "Any"}, {"lineNumber": 240, "col_offset": 71, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "collection", "type": "Any"}, {"lineNumber": 262, "col_offset": 29, "nodeName": "lower", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "ColumnPruning", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "PredicatePushdown", "type": "Any"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "filters", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "_broadcast_field", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 53, "nodeName": "field", "type": "Any"}, {"lineNumber": 122, "col_offset": 60, "nodeName": "input", "type": "Any"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "expr", "type": "Any"}, {"lineNumber": 185, "col_offset": 44, "nodeName": "all_path", "type": "Any"}, {"lineNumber": 202, "col_offset": 60, "nodeName": "to_compact", "type": "List[Any]"}, {"lineNumber": 205, "col_offset": 60, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 219, "col_offset": 31, "nodeName": "it", "type": "Any"}, {"lineNumber": 219, "col_offset": 37, "nodeName": "path", "type": "Any"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "field", "type": "Any"}, {"lineNumber": 226, "col_offset": 41, "nodeName": "col", "type": "Any"}, {"lineNumber": 228, "col_offset": 28, "nodeName": "field", "type": "Any"}, {"lineNumber": 235, "col_offset": 49, "nodeName": "field", "type": "Any"}, {"lineNumber": 238, "col_offset": 20, "nodeName": "_broadcast_field", "type": "Callable[..., Any]"}, {"lineNumber": 238, "col_offset": 42, "nodeName": "field", "type": "Any"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "path", "type": "Any"}, {"lineNumber": 240, "col_offset": 48, "nodeName": "collects", "type": "Tuple[Any, ...]"}, {"lineNumber": 240, "col_offset": 71, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 262, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 122, "col_offset": 60, "nodeName": "expr", "type": "Any"}, {"lineNumber": 183, "col_offset": 28, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "n", "type": "Any"}, {"lineNumber": 183, "col_offset": 42, "nodeName": "Window", "type": "Any"}, {"lineNumber": 183, "col_offset": 54, "nodeName": "n", "type": "Any"}, {"lineNumber": 183, "col_offset": 59, "nodeName": "_fields", "type": "Any"}, {"lineNumber": 185, "col_offset": 44, "nodeName": "node", "type": "Any"}, {"lineNumber": 185, "col_offset": 58, "nodeName": "to_compact", "type": "List[Any]"}, {"lineNumber": 219, "col_offset": 45, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 219, "col_offset": 56, "nodeName": "it", "type": "Any"}, {"lineNumber": 219, "col_offset": 60, "nodeName": "CollectionExpr", "type": "Any"}, {"lineNumber": 238, "col_offset": 20, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 183, "col_offset": 59, "nodeName": "node", "type": "Any"}, {"lineNumber": 238, "col_offset": 50, "nodeName": "collects", "type": "Tuple[Any, ...]"}]