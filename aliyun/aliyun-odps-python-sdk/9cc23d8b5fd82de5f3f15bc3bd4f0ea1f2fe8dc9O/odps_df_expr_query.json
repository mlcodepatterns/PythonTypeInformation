[{"lineNumber": 28, "col_offset": 0, "nodeName": "_tokenize_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "LOCAL_TAG", "type": "str"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "NodeVisitor", "type": "Type[ast.NodeVisitor]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "_preparse", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "eval", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "visit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "visit_Module", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "visit_Expr", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "visit_BinOp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "visit_Compare", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "visit_BoolOp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "visit_UnaryOp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "visit_Name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "visit_NameConstant", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "visit_Num", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "visit_Str", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "visit_List", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "visit_Attribute", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "visit_Subscript", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "visit_Index", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "visit_Slice", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "ast", "type": "module"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "visit_Tuple", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "visit_List", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "toknum", "type": "int"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "tokval", "type": "str"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "_", "type": "Tuple[int, int]"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "_", "type": "Tuple[int, int]"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "_", "type": "str"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "generate_tokens", "type": "Callable[[Callable[[], str]], Generator[Tuple[int, str, Tuple[int, int], Tuple[int, int], str], None, None]]"}, {"lineNumber": 29, "col_offset": 60, "nodeName": "reader", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "Add", "type": "Type[_ast.Add]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "Sub", "type": "Type[_ast.Sub]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "Mult", "type": "Type[_ast.Mult]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "Div", "type": "Type[_ast.Div]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "FloorDiv", "type": "Type[_ast.FloorDiv]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "mod", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "Pow", "type": "Type[_ast.Pow]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "Eq", "type": "Type[_ast.Eq]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "NotEq", "type": "Type[_ast.NotEq]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "Lt", "type": "Type[_ast.Lt]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "LtE", "type": "Type[_ast.LtE]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "Gt", "type": "Type[_ast.Gt]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "GtE", "type": "Type[_ast.GtE]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "In", "type": "Type[_ast.In]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "NotIn", "type": "Type[_ast.NotIn]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "UAdd", "type": "Type[_ast.UAdd]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "USub", "type": "Type[_ast.USub]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "Invert", "type": "Type[_ast.Invert]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "And", "type": "Type[_ast.And]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "Or", "type": "Type[_ast.Or]"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "sub", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "mul", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "truediv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "floordiv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "mod", "type": "Type[_ast.mod]"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "pow", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "eq", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "ne", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "lt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "le", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "gt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "ge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "_isin", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "_notin", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "neg", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "invert", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "and_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "or_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "collection", "type": "Any"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "collection", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "env", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "reader", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "readline", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "new_expr", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "node", "type": "_ast.AST"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "node_name", "type": "str"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "__name__", "type": "str"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "method", "type": "str"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "expr", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "left", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "right", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "ops", "type": "Any"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "ops", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "comps", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "comparators", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "left", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "left", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "oprand", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "n", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "attr", "type": "Any"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "attr", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "value", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "sub", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "lower", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "lower", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "upper", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "upper", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "step", "type": "Any"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "tokenize", "type": "module"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "toknum", "type": "int"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "OP", "type": "int"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "operator", "type": "module"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "operator", "type": "module"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "operator", "type": "module"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "operator", "type": "module"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "operator", "type": "module"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "operator", "type": "module"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "operator", "type": "module"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "operator", "type": "module"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "operator", "type": "module"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "operator", "type": "module"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "operator", "type": "module"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "operator", "type": "module"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "operator", "type": "module"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "ele", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "ele", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "operator", "type": "module"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "operator", "type": "module"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "operator", "type": "module"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "operator", "type": "module"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "operator", "type": "module"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "untokenize", "type": "Callable[[Iterable[Tuple[int, str, Tuple[int, int], Tuple[int, int], str]]], str]"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "_preparse", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "expr", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "fix_missing_locations", "type": "Callable[[_ast.AST], _ast.AST]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "node", "type": "_ast.AST"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "node", "type": "_ast.AST"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "Expr", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "node", "type": "_ast.AST"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "__class__", "type": "Type[_ast.AST]"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "node_name", "type": "str"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "visitor", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "visitor", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "node", "type": "_ast.AST"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "body", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "expr", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "value", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "left", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "right", "type": "Any"}, {"lineNumber": 105, "col_offset": 48, "nodeName": "left", "type": "Any"}, {"lineNumber": 105, "col_offset": 54, "nodeName": "right", "type": "Any"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "node", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "binop", "type": "_ast.BinOp"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "comp", "type": "Any"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "ops", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "comps", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "left", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "comp", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "binop", "type": "_ast.BinOp"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "values", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 28, "nodeName": "operand", "type": "Any"}, {"lineNumber": 132, "col_offset": 48, "nodeName": "oprand", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "LOCAL_TAG", "type": "str"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "local_name", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "id", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "_get_field", "type": "Any"}, {"lineNumber": 140, "col_offset": 42, "nodeName": "id", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "node", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "Load", "type": "Type[_ast.Load]"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "resolved", "type": "Any"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "value", "type": "Any"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "slice", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "value", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "lower", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "lower", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "upper", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "upper", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "step", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 186, "col_offset": 21, "nodeName": "lower", "type": "Any"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "upper", "type": "Any"}, {"lineNumber": 186, "col_offset": 35, "nodeName": "step", "type": "Any"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "tokenize", "type": "module"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "tokval", "type": "str"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "tokval", "type": "str"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "LOCAL_TAG", "type": "str"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "tokval", "type": "str"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "toknum", "type": "int"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "NAME", "type": "int"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "tokval", "type": "str"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "toknum", "type": "int"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "expr", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "tokenize", "type": "module"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "ast", "type": "module"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "parse", "type": "Callable[..., _ast.Module]"}, {"lineNumber": 79, "col_offset": 51, "nodeName": "new_expr", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "node", "type": "_ast.AST"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "method", "type": "str"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "body", "type": "Any"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "SyntaxError", "type": "Type[SyntaxError]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "node", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "node", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "node", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "_op_handlers", "type": "Dict[Union[Type[_ast.Add], Type[_ast.Sub], Type[_ast.Mult], Type[_ast.Div], Type[_ast.FloorDiv], Type[_ast.mod], Type[_ast.Pow], Type[_ast.Eq], Type[_ast.NotEq], Type[_ast.Lt], Type[_ast.LtE], Type[_ast.Gt], Type[_ast.GtE], Type[_ast.In], Type[_ast.NotIn], Type[_ast.UAdd], Type[_ast.USub], Type[_ast.Invert], Type[_ast.And], Type[_ast.Or]], Any]"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "comps", "type": "Any"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "BinOp", "type": "Type[_ast.BinOp]"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "binop", "type": "_ast.BinOp"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "new_node", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "BoolOp", "type": "Type[_ast.BoolOp]"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "BinOp", "type": "Type[_ast.BinOp]"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "binop", "type": "_ast.BinOp"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 131, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "_op_handlers", "type": "Dict[Union[Type[_ast.Add], Type[_ast.Sub], Type[_ast.Mult], Type[_ast.Div], Type[_ast.FloorDiv], Type[_ast.mod], Type[_ast.Pow], Type[_ast.Eq], Type[_ast.NotEq], Type[_ast.Lt], Type[_ast.LtE], Type[_ast.Gt], Type[_ast.GtE], Type[_ast.In], Type[_ast.NotIn], Type[_ast.UAdd], Type[_ast.USub], Type[_ast.Invert], Type[_ast.And], Type[_ast.Or]], Any]"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "id", "type": "Any"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "replace", "type": "Any"}, {"lineNumber": 136, "col_offset": 41, "nodeName": "LOCAL_TAG", "type": "str"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "env", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "id", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "collection", "type": "Any"}, {"lineNumber": 140, "col_offset": 42, "nodeName": "node", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "e", "type": "Any"}, {"lineNumber": 152, "col_offset": 34, "nodeName": "e", "type": "Any"}, {"lineNumber": 152, "col_offset": 39, "nodeName": "elts", "type": "Any"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "ast", "type": "module"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "resolved", "type": "Any"}, {"lineNumber": 163, "col_offset": 37, "nodeName": "attr", "type": "Any"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 165, "col_offset": 64, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "node", "type": "Any"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "node", "type": "Any"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "sub", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "node", "type": "Any"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "lower", "type": "Any"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "upper", "type": "Any"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 30, "nodeName": "step", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "tokenize", "type": "module"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "tokval", "type": "str"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "toknum", "type": "int"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "NAME", "type": "int"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "tokval", "type": "str"}, {"lineNumber": 39, "col_offset": 49, "nodeName": "tokval", "type": "str"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "_tokenize_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 54, "nodeName": "reader", "type": "Any"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "ast", "type": "module"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "ExpressionError", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "ast", "type": "module"}, {"lineNumber": 112, "col_offset": 46, "nodeName": "left", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "Compare", "type": "Type[_ast.Compare]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "ast", "type": "module"}, {"lineNumber": 122, "col_offset": 58, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "ast", "type": "module"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "op", "type": "Any"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 126, "col_offset": 58, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "id", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "local_name", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "node", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 152, "col_offset": 39, "nodeName": "node", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 165, "col_offset": 64, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "self", "type": "ExprVisitor"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "tokenize", "type": "module"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "tokval", "type": "str"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 90, "col_offset": 88, "nodeName": "node_name", "type": "str"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "op", "type": "Any"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "ops", "type": "Any"}, {"lineNumber": 112, "col_offset": 46, "nodeName": "node", "type": "Any"}, {"lineNumber": 112, "col_offset": 63, "nodeName": "comps", "type": "Any"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "ast", "type": "module"}, {"lineNumber": 118, "col_offset": 71, "nodeName": "left", "type": "Any"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "And", "type": "Type[_ast.And]"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "node", "type": "Any"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "op", "type": "Any"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "node", "type": "Any"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "node", "type": "Any"}, {"lineNumber": 118, "col_offset": 59, "nodeName": "comp", "type": "Any"}, {"lineNumber": 119, "col_offset": 51, "nodeName": "op", "type": "Any"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "ast", "type": "module"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "node", "type": "Any"}]