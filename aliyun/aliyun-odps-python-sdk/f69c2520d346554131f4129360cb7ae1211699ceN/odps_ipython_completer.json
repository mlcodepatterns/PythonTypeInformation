[{"lineNumber": 172, "col_offset": 0, "nodeName": "load_ipython_extension", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "PROJECT_REGEX", "type": "Pattern[str]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "NAME_REGEX", "type": "Pattern[str]"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "BaseCompleter", "type": "Type[BaseCompleter]"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "TEMP_TABLE_PREFIX", "type": "Any"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "re", "type": "module"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "utils", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "_ipython", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "ipython", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "_regex_str", "type": "str"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "cursor_text", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "text_until_cursor", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "rooms", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "_ipython", "type": "Any"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "ipython", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "_regex_str", "type": "None"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "cursor_text", "type": "Any"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "text_until_cursor", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "full_line", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "line", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "call_tuple", "type": "None"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "odps_methods", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "odps_listers", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "m_name", "type": "Any"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "odps_methods", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "_methods", "type": "Dict[Any, `namedtuple-MethodType-use_prefix-list_method`]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "method_type", "type": "Type[`namedtuple-MethodType-use_prefix-list_method`]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "_regex_str", "type": "str"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "_regex", "type": "Pattern[str]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "_regex_str", "type": "str"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "full_line", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "cmatch", "type": "Match[str]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "odps_obj", "type": "str"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "get_cmd", "type": "str"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "arg_str", "type": "str"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "project", "type": "str"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "arg_body", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "pmatch", "type": "Match[str]"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "pmatch", "type": "Match[str]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "nmatch", "type": "Match[str]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "name_str", "type": "str"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "quote", "type": "None"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "name_str", "type": "str"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "register", "type": "Callable[[], Any]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "register", "type": "Callable[[], Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "RoomCompleter"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "RoomCompleter"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "set_hook", "type": "Any"}, {"lineNumber": 42, "col_offset": 51, "nodeName": "self", "type": "RoomCompleter"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "event", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "split", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "strip", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "n", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "rooms", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "BaseCompleter"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "BaseCompleter"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "build_regex", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "set_hook", "type": "Any"}, {"lineNumber": 64, "col_offset": 51, "nodeName": "self", "type": "BaseCompleter"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "event", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "event", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "get_list_call", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "cursor_text", "type": "Any"}, {"lineNumber": 69, "col_offset": 53, "nodeName": "full_line", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "call_tuple", "type": "None"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "m_name", "type": "str"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "m_name", "type": "str"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "prefix", "type": "str"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "ObjectCompleter"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "m_name", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "lister", "type": "Any"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "iter_methods", "type": "Callable[[], Any]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "arg_tuple", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "use_prefix", "type": "bool"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "ObjectCompleter"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "full_line", "type": "Any"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "cursor_str", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "match", "type": "Callable"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "cursor_str", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "cmatch", "type": "Match[str]"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "group", "type": "Callable"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "group", "type": "Callable"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "arg_start", "type": "int"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "arg_cursor", "type": "int"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "span", "type": "Callable[..., Tuple[int, int]]"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "full_line", "type": "Any"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "match", "type": "Callable"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "arg_body", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "project", "type": "str"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "match", "type": "Callable"}, {"lineNumber": 150, "col_offset": 34, "nodeName": "arg_str", "type": "str"}, {"lineNumber": 151, "col_offset": 43, "nodeName": "nmatch", "type": "Match[str]"}, {"lineNumber": 151, "col_offset": 55, "nodeName": "arg_str", "type": "str"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "quote", "type": "str"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "name_str", "type": "str"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "name_str", "type": "str"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "use_prefix", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "formatter", "type": "str"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "formatter", "type": "str"}, {"lineNumber": 169, "col_offset": 67, "nodeName": "quote", "type": "Optional[str]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "_ipython", "type": "Any"}, {"lineNumber": 42, "col_offset": 64, "nodeName": "_regex_str", "type": "str"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "cursor_text", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "completion_size", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "self", "type": "BaseCompleter"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "_ipython", "type": "Any"}, {"lineNumber": 64, "col_offset": 64, "nodeName": "_regex_str", "type": "None"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "self", "type": "BaseCompleter"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "m_name", "type": "str"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "m_name", "type": "str"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "odps_methods", "type": "Any"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "self", "type": "ObjectCompleter"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "getargspec", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "_methods", "type": "Dict[Any, `namedtuple-MethodType-use_prefix-list_method`]"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "method_type", "type": "Type[`namedtuple-MethodType-use_prefix-list_method`]"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "re", "type": "module"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "_regex_str", "type": "str"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "_regex", "type": "Pattern[str]"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "cmatch", "type": "Match[str]"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "cmatch", "type": "Match[str]"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "cmatch", "type": "Match[str]"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "arg_start", "type": "int"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "PROJECT_REGEX", "type": "Pattern[str]"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "group", "type": "Callable"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "NAME_REGEX", "type": "Pattern[str]"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "group", "type": "Callable"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "name_str", "type": "str"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 156, "col_offset": 38, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "name_str", "type": "str"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "name_str", "type": "str"}, {"lineNumber": 161, "col_offset": 18, "nodeName": "name_str", "type": "str"}, {"lineNumber": 161, "col_offset": 37, "nodeName": "name_str", "type": "str"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "ObjectCompleter", "type": "Type[ObjectCompleter]"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "ipython", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "RoomCompleter", "type": "Type[RoomCompleter]"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "ipython", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "RoomCompleter"}, {"lineNumber": 42, "col_offset": 64, "nodeName": "self", "type": "RoomCompleter"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "list_rooms", "type": "Any"}, {"lineNumber": 48, "col_offset": 44, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 48, "col_offset": 57, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "options", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "BaseCompleter"}, {"lineNumber": 64, "col_offset": 64, "nodeName": "self", "type": "BaseCompleter"}, {"lineNumber": 103, "col_offset": 45, "nodeName": "dir", "type": "Callable[..., List[str]]"}, {"lineNumber": 103, "col_offset": 49, "nodeName": "ODPS", "type": "Any"}, {"lineNumber": 105, "col_offset": 61, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "prefix", "type": "str"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "lister", "type": "None"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "lister_prefix", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "l", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "odps_listers", "type": "Any"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "lister", "type": "Any"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 43, "nodeName": "ODPS", "type": "Any"}, {"lineNumber": 125, "col_offset": 49, "nodeName": "lister", "type": "Any"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "arg_tuple", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "self", "type": "ObjectCompleter"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "m_name", "type": "Any"}, {"lineNumber": 127, "col_offset": 59, "nodeName": "use_prefix", "type": "bool"}, {"lineNumber": 127, "col_offset": 83, "nodeName": "lister", "type": "Any"}, {"lineNumber": 129, "col_offset": 76, "nodeName": "join", "type": "Callable"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "self", "type": "ObjectCompleter"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "group", "type": "Callable"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "pmatch", "type": "Match[str]"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "nmatch", "type": "Match[str]"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "name_str", "type": "str"}, {"lineNumber": 156, "col_offset": 38, "nodeName": "name_str", "type": "str"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "_methods", "type": "Union[Dict[Any, `namedtuple-MethodType-use_prefix-list_method`], Dict[str, `namedtuple-MethodType-use_prefix-list_method`]]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "formatter", "type": "str"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "odps_obj", "type": "str"}, {"lineNumber": 168, "col_offset": 52, "nodeName": "list_method", "type": "Any"}, {"lineNumber": 169, "col_offset": 39, "nodeName": "name_str", "type": "str"}, {"lineNumber": 169, "col_offset": 57, "nodeName": "project", "type": "str"}, {"lineNumber": 48, "col_offset": 44, "nodeName": "n", "type": "Any"}, {"lineNumber": 103, "col_offset": 58, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 105, "col_offset": 61, "nodeName": "m_name", "type": "str"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "m_name", "type": "Any"}, {"lineNumber": 111, "col_offset": 36, "nodeName": "replace", "type": "Any"}, {"lineNumber": 111, "col_offset": 51, "nodeName": "prefix", "type": "str"}, {"lineNumber": 129, "col_offset": 85, "nodeName": "iterkeys", "type": "Any"}, {"lineNumber": 129, "col_offset": 98, "nodeName": "_methods", "type": "Dict[Any, `namedtuple-MethodType-use_prefix-list_method`]"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "cmatch", "type": "Match[str]"}, {"lineNumber": 154, "col_offset": 35, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 154, "col_offset": 64, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "self", "type": "ObjectCompleter"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "get_cmd", "type": "str"}, {"lineNumber": 103, "col_offset": 67, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 75, "nodeName": "ODPS", "type": "Any"}, {"lineNumber": 103, "col_offset": 81, "nodeName": "m_name", "type": "str"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 111, "col_offset": 36, "nodeName": "m_name", "type": "Any"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 113, "col_offset": 40, "nodeName": "lister_prefix", "type": "Any"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "lister", "type": "Any"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "l", "type": "Any"}, {"lineNumber": 129, "col_offset": 85, "nodeName": "six", "type": "Any"}, {"lineNumber": 129, "col_offset": 98, "nodeName": "self", "type": "ObjectCompleter"}, {"lineNumber": 154, "col_offset": 35, "nodeName": "name_str", "type": "str"}, {"lineNumber": 154, "col_offset": 64, "nodeName": "name_str", "type": "str"}, {"lineNumber": 168, "col_offset": 52, "nodeName": "_methods", "type": "Union[Dict[Any, `namedtuple-MethodType-use_prefix-list_method`], Dict[str, `namedtuple-MethodType-use_prefix-list_method`]]"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "m_name", "type": "str"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "l", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "m_name", "type": "Any"}, {"lineNumber": 117, "col_offset": 38, "nodeName": "lister", "type": "Any"}, {"lineNumber": 168, "col_offset": 52, "nodeName": "self", "type": "ObjectCompleter"}, {"lineNumber": 168, "col_offset": 66, "nodeName": "get_cmd", "type": "str"}]