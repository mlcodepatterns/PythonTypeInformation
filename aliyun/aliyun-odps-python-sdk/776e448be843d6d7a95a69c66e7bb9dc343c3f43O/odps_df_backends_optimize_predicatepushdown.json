[{"lineNumber": 34, "col_offset": 24, "nodeName": "Backend", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "dag", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "root", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "predicates", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "filters", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "predicates", "type": "Any"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "_predicate", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "splits", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "rests", "type": "List[nothing]"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "left_filters", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "right_filters", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "splits", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "nodes", "type": "List[Any]"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "splits", "type": "List[Any]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "origins", "type": "Set[Any]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "col", "type": "Any"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "get_filter_field", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "get_field", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "get_field", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "predicates", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "traverse_until_source", "type": "Any"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "_split_filter_into_predicates", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 56, "nodeName": "expr", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "expr", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "expr", "type": "Any"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "FilterCollectionExpr", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "input", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "input", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "ProjectCollectionExpr", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "remain", "type": "None"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "expr", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "predicates", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "_split_predicates", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 40, "nodeName": "predicates", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "left_filters", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "right_filters", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "splits", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "collection", "type": "None"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "skip", "type": "bool"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "skip", "type": "bool"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "left_filters", "type": "List[Any]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "new_lhs", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "right_filters", "type": "List[Any]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "new_rhs", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "new_predicates", "type": "List[Any]"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "join", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "_predicate", "type": "List[Any]"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "new_predicates", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 18, "nodeName": "p", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "expr", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "_split_predicates", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "field", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 217, "col_offset": 22, "nodeName": "FilterCollectionExpr", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 218, "col_offset": 30, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "change_input", "type": "Any"}, {"lineNumber": 220, "col_offset": 21, "nodeName": "projection", "type": "Any"}, {"lineNumber": 220, "col_offset": 33, "nodeName": "input", "type": "Any"}, {"lineNumber": 220, "col_offset": 51, "nodeName": "filter_expr", "type": "Any"}, {"lineNumber": 220, "col_offset": 64, "nodeName": "get_filter_field", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 220, "col_offset": 82, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "change_input", "type": "Any"}, {"lineNumber": 226, "col_offset": 21, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 226, "col_offset": 32, "nodeName": "input", "type": "Any"}, {"lineNumber": 226, "col_offset": 44, "nodeName": "collection", "type": "Any"}, {"lineNumber": 226, "col_offset": 56, "nodeName": "get_join_field", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 226, "col_offset": 72, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 228, "col_offset": 22, "nodeName": "FilterCollectionExpr", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "collection", "type": "Any"}, {"lineNumber": 229, "col_offset": 24, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "change_input", "type": "Any"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "joined", "type": "Any"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "collection", "type": "Any"}, {"lineNumber": 231, "col_offset": 41, "nodeName": "filter_expr", "type": "Any"}, {"lineNumber": 231, "col_offset": 54, "nodeName": "get_field", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 231, "col_offset": 65, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "predicate", "type": "nothing"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "collection", "type": "nothing"}, {"lineNumber": 237, "col_offset": 37, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 237, "col_offset": 41, "nodeName": "predicates", "type": "List[Any]"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "filter_expr", "type": "Any"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "input", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "input", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "new_expr", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "_predicate", "type": "Any"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "sub", "type": "Callable[[], Any]"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "expr", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "input", "type": "Any"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "LateralViewCollectionExpr", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "udtf_columns", "type": "Set[Any]"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "lv", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "lateral_views", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "pushes", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "remains", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "predicates", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "remains", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "_push_down_through_projection", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 47, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 98, "col_offset": 58, "nodeName": "expr", "type": "Any"}, {"lineNumber": 98, "col_offset": 64, "nodeName": "input", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "remain", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "input", "type": "Any"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "InnerJoin", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "remains", "type": "List[int]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "predicates", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "expr", "type": "Any"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "InnerJoin", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "collection", "type": "Optional[Any]"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "filter", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "substitute", "type": "Any"}, {"lineNumber": 158, "col_offset": 33, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 158, "col_offset": 43, "nodeName": "new_lhs", "type": "Any"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "filter", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "substitute", "type": "Any"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 162, "col_offset": 43, "nodeName": "new_rhs", "type": "Any"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "rests", "type": "List[nothing]"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "splits", "type": "List[Any]"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "copy", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "join", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "substitute", "type": "Any"}, {"lineNumber": 168, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "join", "type": "Any"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "predicats", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "p", "type": "Any"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "nodes", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 187, "col_offset": 37, "nodeName": "And", "type": "Any"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "cls", "type": "Type[PredicatePushdown]"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 196, "col_offset": 36, "nodeName": "path", "type": "Any"}, {"lineNumber": 197, "col_offset": 20, "nodeName": "col", "type": "Any"}, {"lineNumber": 197, "col_offset": 27, "nodeName": "path", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 203, "col_offset": 28, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "_fields", "type": "Any"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "copy_sequence", "type": "Any"}, {"lineNumber": 208, "col_offset": 33, "nodeName": "field", "type": "Any"}, {"lineNumber": 208, "col_offset": 40, "nodeName": "input", "type": "Any"}, {"lineNumber": 208, "col_offset": 58, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 209, "col_offset": 33, "nodeName": "Column", "type": "Any"}, {"lineNumber": 209, "col_offset": 45, "nodeName": "input", "type": "Any"}, {"lineNumber": 209, "col_offset": 64, "nodeName": "input", "type": "Any"}, {"lineNumber": 211, "col_offset": 24, "nodeName": "get_project_field", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 211, "col_offset": 42, "nodeName": "input", "type": "Any"}, {"lineNumber": 211, "col_offset": 60, "nodeName": "source_name", "type": "Any"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "is_renamed", "type": "Any"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "change_input", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 215, "col_offset": 36, "nodeName": "input", "type": "Any"}, {"lineNumber": 215, "col_offset": 48, "nodeName": "input", "type": "Any"}, {"lineNumber": 215, "col_offset": 66, "nodeName": "get_project_field", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 215, "col_offset": 85, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "projection", "type": "Any"}, {"lineNumber": 218, "col_offset": 49, "nodeName": "schema", "type": "Any"}, {"lineNumber": 219, "col_offset": 52, "nodeName": "filter_node", "type": "Any"}, {"lineNumber": 220, "col_offset": 33, "nodeName": "projection", "type": "Any"}, {"lineNumber": 220, "col_offset": 82, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "node", "type": "Any"}, {"lineNumber": 226, "col_offset": 32, "nodeName": "expr", "type": "Any"}, {"lineNumber": 226, "col_offset": 72, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 229, "col_offset": 43, "nodeName": "schema", "type": "Any"}, {"lineNumber": 230, "col_offset": 35, "nodeName": "n", "type": "Any"}, {"lineNumber": 231, "col_offset": 65, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 234, "col_offset": 35, "nodeName": "n", "type": "Any"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "copy_sequence", "type": "Any"}, {"lineNumber": 236, "col_offset": 36, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 236, "col_offset": 47, "nodeName": "input", "type": "Any"}, {"lineNumber": 236, "col_offset": 59, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 236, "col_offset": 74, "nodeName": "_", "type": "int"}, {"lineNumber": 237, "col_offset": 54, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 237, "col_offset": 65, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "change_input", "type": "Any"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "predicate", "type": "nothing"}, {"lineNumber": 238, "col_offset": 36, "nodeName": "input", "type": "Any"}, {"lineNumber": 238, "col_offset": 48, "nodeName": "collection", "type": "nothing"}, {"lineNumber": 238, "col_offset": 60, "nodeName": "get_field", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 238, "col_offset": 71, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 240, "col_offset": 26, "nodeName": "FilterCollectionExpr", "type": "Any"}, {"lineNumber": 240, "col_offset": 47, "nodeName": "collection", "type": "nothing"}, {"lineNumber": 240, "col_offset": 59, "nodeName": "predicate", "type": "nothing"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "change_input", "type": "Any"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "union", "type": "Any"}, {"lineNumber": 241, "col_offset": 32, "nodeName": "collection", "type": "nothing"}, {"lineNumber": 241, "col_offset": 44, "nodeName": "filter_expr", "type": "Any"}, {"lineNumber": 241, "col_offset": 57, "nodeName": "get_field", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 241, "col_offset": 68, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "accept", "type": "Any"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "seq", "type": "nothing"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "p", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "predicates", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "filters", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "filters", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "get_compact_filters", "type": "Any"}, {"lineNumber": 70, "col_offset": 57, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "expr", "type": "Any"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "new_expr", "type": "Any"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "input", "type": "Any"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "pushes", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "and_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 50, "nodeName": "pushes", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "remain", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "substitute", "type": "Any"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "expr", "type": "Any"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "input", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "substitute", "type": "Any"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "_predicate", "type": "Any"}, {"lineNumber": 102, "col_offset": 49, "nodeName": "remain", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "sub", "type": "Callable[[], Any]"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "predicates", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "predicates", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "input", "type": "Any"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "UnionCollectionExpr", "type": "Any"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "expr", "type": "Any"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "expr", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "is_ancestor", "type": "Any"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "node", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "collection", "type": "Any"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "node", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "expr", "type": "Any"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 151, "col_offset": 36, "nodeName": "p", "type": "Any"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "p", "type": "Any"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "copy_sequence", "type": "Any"}, {"lineNumber": 156, "col_offset": 42, "nodeName": "f", "type": "Any"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 156, "col_offset": 59, "nodeName": "f", "type": "Any"}, {"lineNumber": 156, "col_offset": 64, "nodeName": "left_filters", "type": "List[Any]"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "left_filters", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 158, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "copy_sequence", "type": "Any"}, {"lineNumber": 160, "col_offset": 43, "nodeName": "f", "type": "Any"}, {"lineNumber": 160, "col_offset": 46, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 160, "col_offset": 60, "nodeName": "f", "type": "Any"}, {"lineNumber": 160, "col_offset": 65, "nodeName": "right_filters", "type": "List[Any]"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 161, "col_offset": 39, "nodeName": "right_filters", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 165, "col_offset": 30, "nodeName": "splits", "type": "List[Any]"}, {"lineNumber": 165, "col_offset": 44, "nodeName": "i", "type": "nothing"}, {"lineNumber": 165, "col_offset": 49, "nodeName": "rests", "type": "List[nothing]"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "expr", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "predicats", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "nodes", "type": "List[Any]"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "node", "type": "Any"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "node", "type": "Any"}, {"lineNumber": 196, "col_offset": 44, "nodeName": "all_path", "type": "Any"}, {"lineNumber": 196, "col_offset": 63, "nodeName": "input", "type": "Any"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 197, "col_offset": 46, "nodeName": "col", "type": "Any"}, {"lineNumber": 197, "col_offset": 51, "nodeName": "Column", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "origins", "type": "Set[Any]"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 200, "col_offset": 19, "nodeName": "origins", "type": "Set[Any]"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "joined", "type": "Any"}, {"lineNumber": 203, "col_offset": 28, "nodeName": "joined", "type": "Any"}, {"lineNumber": 203, "col_offset": 40, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "projection", "type": "Any"}, {"lineNumber": 208, "col_offset": 40, "nodeName": "projection", "type": "Any"}, {"lineNumber": 208, "col_offset": 58, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 209, "col_offset": 45, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 209, "col_offset": 64, "nodeName": "expr", "type": "Any"}, {"lineNumber": 211, "col_offset": 42, "nodeName": "projection", "type": "Any"}, {"lineNumber": 211, "col_offset": 60, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "rename", "type": "Any"}, {"lineNumber": 213, "col_offset": 45, "nodeName": "name", "type": "Any"}, {"lineNumber": 215, "col_offset": 36, "nodeName": "expr", "type": "Any"}, {"lineNumber": 215, "col_offset": 48, "nodeName": "projection", "type": "Any"}, {"lineNumber": 215, "col_offset": 85, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 218, "col_offset": 49, "nodeName": "input", "type": "Any"}, {"lineNumber": 219, "col_offset": 64, "nodeName": "col", "type": "Any"}, {"lineNumber": 229, "col_offset": 43, "nodeName": "collection", "type": "Any"}, {"lineNumber": 230, "col_offset": 37, "nodeName": "col", "type": "Any"}, {"lineNumber": 234, "col_offset": 37, "nodeName": "col", "type": "Any"}, {"lineNumber": 236, "col_offset": 47, "nodeName": "expr", "type": "Any"}, {"lineNumber": 236, "col_offset": 59, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 236, "col_offset": 79, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 237, "col_offset": 54, "nodeName": "union", "type": "Any"}, {"lineNumber": 237, "col_offset": 65, "nodeName": "union", "type": "Any"}, {"lineNumber": 238, "col_offset": 36, "nodeName": "expr", "type": "Any"}, {"lineNumber": 238, "col_offset": 71, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 240, "col_offset": 78, "nodeName": "schema", "type": "nothing"}, {"lineNumber": 241, "col_offset": 68, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 70, "col_offset": 57, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 70, "col_offset": 69, "nodeName": "filters", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "seq", "type": "nothing"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 40, "nodeName": "names", "type": "Any"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "operator", "type": "module"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 97, "col_offset": 36, "nodeName": "and_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "remains", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "expr", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "expr", "type": "Any"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "expr", "type": "Any"}, {"lineNumber": 102, "col_offset": 61, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "_predicate_on_same_collection", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "input", "type": "Any"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "input", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "collection", "type": "Union[bool, Any]"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "remains", "type": "List[int]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "substitute", "type": "Any"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "expr", "type": "Any"}, {"lineNumber": 115, "col_offset": 43, "nodeName": "input", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "substitute", "type": "Any"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "_predicate", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "sub", "type": "Callable[[], Any]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "_push_down_through_union", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 42, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 122, "col_offset": 58, "nodeName": "expr", "type": "Any"}, {"lineNumber": 122, "col_offset": 64, "nodeName": "input", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "substitute", "type": "Any"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "expr", "type": "Any"}, {"lineNumber": 123, "col_offset": 39, "nodeName": "input", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "p", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "collection", "type": "None"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "left_filters", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "right_filters", "type": "List[Any]"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "expr", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "expr", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 160, "col_offset": 46, "nodeName": "expr", "type": "Any"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "expr", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 165, "col_offset": 37, "nodeName": "i", "type": "nothing"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 172, "col_offset": 46, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 172, "col_offset": 57, "nodeName": "p", "type": "Any"}, {"lineNumber": 172, "col_offset": 60, "nodeName": "And", "type": "Any"}, {"lineNumber": 173, "col_offset": 45, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 173, "col_offset": 56, "nodeName": "p", "type": "Any"}, {"lineNumber": 173, "col_offset": 59, "nodeName": "And", "type": "Any"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "s", "type": "Any"}, {"lineNumber": 177, "col_offset": 37, "nodeName": "And", "type": "Any"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 178, "col_offset": 34, "nodeName": "s", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "s", "type": "Any"}, {"lineNumber": 196, "col_offset": 44, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "_column_origins", "type": "Any"}, {"lineNumber": 203, "col_offset": 40, "nodeName": "origins", "type": "Set[Any]"}, {"lineNumber": 207, "col_offset": 39, "nodeName": "_name_indexes", "type": "Any"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 213, "col_offset": 45, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 218, "col_offset": 49, "nodeName": "projection", "type": "Any"}, {"lineNumber": 240, "col_offset": 78, "nodeName": "collection", "type": "nothing"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "itertools", "type": "module"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "udtf_columns", "type": "Set[Any]"}, {"lineNumber": 83, "col_offset": 40, "nodeName": "schema", "type": "Any"}, {"lineNumber": 87, "col_offset": 48, "nodeName": "path", "type": "Any"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "col", "type": "Any"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "path", "type": "Any"}, {"lineNumber": 89, "col_offset": 40, "nodeName": "udtf_columns", "type": "Set[Any]"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 90, "col_offset": 38, "nodeName": "p", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 97, "col_offset": 36, "nodeName": "operator", "type": "module"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 102, "col_offset": 61, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "expr", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "_push_down_through_join", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 49, "nodeName": "predicate", "type": "Any"}, {"lineNumber": 111, "col_offset": 60, "nodeName": "expr", "type": "Any"}, {"lineNumber": 111, "col_offset": 66, "nodeName": "input", "type": "Any"}, {"lineNumber": 111, "col_offset": 73, "nodeName": "collection", "type": "Union[bool, Any]"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 115, "col_offset": 43, "nodeName": "expr", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "expr", "type": "Any"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "expr", "type": "Any"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "and_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 36, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 122, "col_offset": 42, "nodeName": "expr", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "_dag", "type": "Any"}, {"lineNumber": 123, "col_offset": 39, "nodeName": "expr", "type": "Any"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "splits", "type": "List[Any]"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "nodes", "type": "List[Any]"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "joined", "type": "Any"}, {"lineNumber": 199, "col_offset": 47, "nodeName": "col", "type": "Any"}, {"lineNumber": 207, "col_offset": 39, "nodeName": "schema", "type": "Any"}, {"lineNumber": 207, "col_offset": 71, "nodeName": "col", "type": "Any"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "_column_origins", "type": "Any"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "all_path", "type": "Any"}, {"lineNumber": 53, "col_offset": 57, "nodeName": "input", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "itertools", "type": "module"}, {"lineNumber": 83, "col_offset": 40, "nodeName": "lv", "type": "Any"}, {"lineNumber": 87, "col_offset": 56, "nodeName": "all_path", "type": "Any"}, {"lineNumber": 87, "col_offset": 67, "nodeName": "input", "type": "Any"}, {"lineNumber": 88, "col_offset": 47, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 88, "col_offset": 58, "nodeName": "col", "type": "Any"}, {"lineNumber": 88, "col_offset": 63, "nodeName": "Column", "type": "Any"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "pushes", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "remains", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "remains", "type": "List[int]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "operator", "type": "module"}, {"lineNumber": 119, "col_offset": 36, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "self", "type": "PredicatePushdown"}, {"lineNumber": 207, "col_offset": 39, "nodeName": "projection", "type": "Any"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "joined", "type": "Any"}, {"lineNumber": 224, "col_offset": 47, "nodeName": "col", "type": "Any"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "expr", "type": "Any"}, {"lineNumber": 53, "col_offset": 57, "nodeName": "expr", "type": "Any"}, {"lineNumber": 74, "col_offset": 47, "nodeName": "all_path", "type": "Any"}, {"lineNumber": 74, "col_offset": 62, "nodeName": "input", "type": "Any"}, {"lineNumber": 87, "col_offset": 56, "nodeName": "p", "type": "Any"}, {"lineNumber": 118, "col_offset": 55, "nodeName": "predicates", "type": "Any"}, {"lineNumber": 118, "col_offset": 73, "nodeName": "i", "type": "int"}, {"lineNumber": 118, "col_offset": 78, "nodeName": "remains", "type": "List[int]"}, {"lineNumber": 74, "col_offset": 47, "nodeName": "input", "type": "Any"}, {"lineNumber": 74, "col_offset": 62, "nodeName": "input", "type": "Any"}, {"lineNumber": 118, "col_offset": 66, "nodeName": "i", "type": "int"}]