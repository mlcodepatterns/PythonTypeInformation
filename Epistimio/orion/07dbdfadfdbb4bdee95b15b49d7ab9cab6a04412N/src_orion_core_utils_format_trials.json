[{"lineNumber": 16, "col_offset": 0, "nodeName": "trial_to_tuple", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "tuple_to_trial", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "get_trial_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "standard_param_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "trial_keys", "type": "Set[Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "space_keys", "type": "Set[Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "params", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "results", "type": "Dict[str, Optional[Union[Any, List[Any], Tuple[Any, ...]]]]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "lie", "type": "Any"}, {"lineNumber": 57, "col_offset": 10, "nodeName": "lie", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "objective", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "objective", "type": "Any"}, {"lineNumber": 60, "col_offset": 7, "nodeName": "lie", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "grad", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "results", "type": "Dict[str, Optional[Union[Any, List[Any], Tuple[Any, ...]]]]"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "value", "type": "Any"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 25, "col_offset": 7, "nodeName": "trial_keys", "type": "Set[Any]"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "space_keys", "type": "Set[Any]"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "dim", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "Trial", "type": "Any"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 57, "col_offset": 10, "nodeName": "trial", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "trial", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "value", "type": "Any"}, {"lineNumber": 62, "col_offset": 9, "nodeName": "objective", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "results", "type": "Dict[str, Optional[Union[Any, List[Any], Tuple[Any, ...]]]]"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "trial", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "results", "type": "Dict[str, Optional[Union[Any, List[Any], Tuple[Any, ...]]]]"}, {"lineNumber": 70, "col_offset": 47, "nodeName": "grad", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "replace", "type": "Any"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "param", "type": "Any"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "param", "type": "Any"}, {"lineNumber": 22, "col_offset": 42, "nodeName": "param", "type": "Any"}, {"lineNumber": 22, "col_offset": 51, "nodeName": "params", "type": "Any"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "keys", "type": "Any"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "space", "type": "Any"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "values", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "params", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "results", "type": "Dict[str, Optional[Union[Any, List[Any], Tuple[Any, ...]]]]"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "lie", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "value", "type": "Any"}, {"lineNumber": 67, "col_offset": 46, "nodeName": "result", "type": "Any"}, {"lineNumber": 67, "col_offset": 56, "nodeName": "results", "type": "Any"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "value", "type": "Any"}, {"lineNumber": 22, "col_offset": 51, "nodeName": "trial", "type": "Any"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "space", "type": "Any"}, {"lineNumber": 29, "col_offset": -1, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "id", "type": "Any"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "name", "type": "Any"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "space", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "params", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "results", "type": "Dict[str, Optional[Union[Any, List[Any], Tuple[Any, ...]]]]"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "objective", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "results", "type": "Dict[str, Optional[Union[Any, List[Any], Tuple[Any, ...]]]]"}, {"lineNumber": 67, "col_offset": 56, "nodeName": "trial", "type": "Any"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "type", "type": "Any"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "grad", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "lstrip", "type": "Any"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "trial", "type": "Any"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 29, "col_offset": 42, "nodeName": "trial_keys", "type": "Set[Any]"}, {"lineNumber": 29, "col_offset": 55, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 29, "col_offset": 62, "nodeName": "space_keys", "type": "Set[Any]"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 31, "col_offset": 42, "nodeName": "keys", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "name", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "type", "type": "Any"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "result", "type": "Any"}, {"lineNumber": 31, "col_offset": 42, "nodeName": "space", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "dim", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "dim", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "lstrip", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "name", "type": "Any"}]