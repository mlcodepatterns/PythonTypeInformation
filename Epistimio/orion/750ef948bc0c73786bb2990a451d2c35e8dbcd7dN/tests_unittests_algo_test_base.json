[{"lineNumber": 9, "col_offset": 0, "nodeName": "test_init", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "test_configuration", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "test_space_setter", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "test_state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "test_is_done_cardinality", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 0, "nodeName": "test_is_done_max_trials", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "nested_algo", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "algo", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "nested_algo", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "algo", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "configuration", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "nested_algo", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "nested_algo2", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "algo", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "space", "type": "str"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "nested_algo", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "algo", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "space", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "algo", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "is_done", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "space", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "algo", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "space", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "algo", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "max_trials", "type": "int"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "is_done", "type": "Any"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "dumbalgo", "type": "Any"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "space", "type": "Any"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "value", "type": "Any"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "judgement", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "suspend", "type": "Any"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "done", "type": "Any"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "subone", "type": "Any"}, {"lineNumber": 19, "col_offset": 35, "nodeName": "BaseAlgorithm", "type": "Any"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "space", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "value", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "dumbalgo", "type": "Any"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "algo", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "dumbalgo", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "algo", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "space", "type": "str"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "space", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "value", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "space", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "judgement", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "dumbalgo", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "suggest", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "observe", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "observe", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "delattr", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "dumbalgo", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "Space", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "register", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "dumbalgo", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "space", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "suggest", "type": "Any"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "algo", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "Space", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "register", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "dumbalgo", "type": "Any"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "space", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "suggest", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "is_done", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "delattr", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "dumbalgo", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "Space", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "register", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "dumbalgo", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "space", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "suggest", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "is_done", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "dumbalgo", "type": "Any"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "algo", "type": "Any"}, {"lineNumber": 11, "col_offset": 31, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 12, "col_offset": 39, "nodeName": "nested_algo", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "algo", "type": "Any"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "algo", "type": "Any"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "algo", "type": "Any"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "algo", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "algo", "type": "Any"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "algo", "type": "Any"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "algo", "type": "Any"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "subone", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "subone", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "subone", "type": "Any"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 28, "col_offset": 39, "nodeName": "nested_algo", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 64, "col_offset": 38, "nodeName": "nested_algo", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 64, "col_offset": 58, "nodeName": "nested_algo2", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "algo", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "naedw", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "naedw", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "naekei", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "naekei", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "nested_algo", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "algo", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "algo", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "algo", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "monkeypatch", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "space", "type": "Any"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "Integer", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "algo", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "observe", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "space", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "Real", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "algo", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "observe", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "algo", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "monkeypatch", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "space", "type": "Any"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "Real", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "algo", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "observe", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "algo", "type": "Any"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "algo", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "algo", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "algo", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "algo", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "algo", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "algo", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "algo", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "algo", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "algo", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "algo", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "algo", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "algo", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "algo", "type": "Any"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "algo", "type": "Any"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "algo", "type": "Any"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "algo", "type": "Any"}]