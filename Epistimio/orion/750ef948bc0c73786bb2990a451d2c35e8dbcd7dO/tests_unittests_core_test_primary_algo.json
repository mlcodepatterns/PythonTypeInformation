[{"lineNumber": 10, "col_offset": 0, "nodeName": "palgo", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "test_init_and_configuration", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "test_space_can_only_retrieved", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "test_suggest", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "test_observe", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "test_isdone", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "test_shouldsuspend", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "test_score", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "test_judge", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "PrimaryAlgo", "type": "Any"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "space", "type": "Any"}, {"lineNumber": 20, "col_offset": 31, "nodeName": "algo_config", "type": "Dict[str, Dict[str, Union[Any, Dict[str, Dict[Any, Any]]]]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "possible_values", "type": "List[Tuple[int]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "done", "type": "int"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "suspend", "type": "int"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "scoring", "type": "int"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "judgement", "type": "str"}, {"lineNumber": 14, "col_offset": 17, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 33, "col_offset": 43, "nodeName": "dumbalgo", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "configuration", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "space", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "space", "type": "int"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "observe", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "_points", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "_results", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "is_done", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "_times_called_is_done", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "should_suspend", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "_times_called_suspend", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "_score_point", "type": "Any"}, {"lineNumber": 95, "col_offset": 47, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "_judge_point", "type": "Any"}, {"lineNumber": 103, "col_offset": 47, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "_measurements", "type": "Any"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "suggest", "type": "Any"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "suggest", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "suggest", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 72, "col_offset": 43, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "observe", "type": "Any"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "observe", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "score", "type": "Any"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "judge", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 105, "col_offset": 27, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "judge", "type": "Any"}, {"lineNumber": 15, "col_offset": 31, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "palgo", "type": "Any"}]