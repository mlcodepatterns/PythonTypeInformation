[{"lineNumber": 26, "col_offset": 0, "nodeName": "test_accept_empty", "type": "Callable[[], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "test_parameter_not_modified", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "test_to_numpy", "type": "Callable[[], Any]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "test_train_regressor", "type": "Callable[[], Any]"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "test_train_regressor_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "test_train_regressor_invalid", "type": "Callable[[], Any]"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "test_make_grid", "type": "Callable[[], Any]"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "test_make_grid_predictor", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "test_compute_variance", "type": "Callable[[], Any]"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "test_lpi_results", "type": "Callable[[], Any]"}, {"lineNumber": 153, "col_offset": 0, "nodeName": "test_lpi_with_categorical_data", "type": "Callable[[], Any]"}, {"lineNumber": 173, "col_offset": 0, "nodeName": "test_lpi_with_multidim_data", "type": "Callable[[], Any]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "space", "type": "Any"}, {"lineNumber": 15, "col_offset": 7, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "build", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "empty_frame", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "empty_frame", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "original", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "array", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "array", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "array", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "array", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "trials", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "best_point", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "grid", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "trials", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "best_point", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "grid", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "grid", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "variances", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 15, "col_offset": 7, "nodeName": "pd", "type": "Any"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "lpi", "type": "Any"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "empty_frame", "type": "Any"}, {"lineNumber": 29, "col_offset": 31, "nodeName": "space", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "lpi", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "empty_frame", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "space", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "lpi", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "space", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "original", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "space", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "space", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "train_regressor", "type": "Any"}, {"lineNumber": 64, "col_offset": 49, "nodeName": "array", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "AdaBoostRegressor", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "train_regressor", "type": "Any"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "array", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "BaggingRegressor", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "train_regressor", "type": "Any"}, {"lineNumber": 68, "col_offset": 51, "nodeName": "array", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "ExtraTreesRegressor", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "train_regressor", "type": "Any"}, {"lineNumber": 70, "col_offset": 57, "nodeName": "array", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "GradientBoostingRegressor", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "train_regressor", "type": "Any"}, {"lineNumber": 72, "col_offset": 53, "nodeName": "array", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "space", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "train_regressor", "type": "Any"}, {"lineNumber": 79, "col_offset": 53, "nodeName": "array", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "space", "type": "Any"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "exc", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "match", "type": "Any"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "space", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "train_regressor", "type": "Any"}, {"lineNumber": 95, "col_offset": 53, "nodeName": "trials", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "trials", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "make_grid", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "best_point", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "space", "type": "Any"}, {"lineNumber": 97, "col_offset": 40, "nodeName": "model", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "space", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "train_regressor", "type": "Any"}, {"lineNumber": 111, "col_offset": 53, "nodeName": "trials", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "trials", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "make_grid", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "best_point", "type": "Any"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "space", "type": "Any"}, {"lineNumber": 118, "col_offset": 40, "nodeName": "model", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "grid", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "grid", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "grid", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "compute_variances", "type": "Any"}, {"lineNumber": 137, "col_offset": 34, "nodeName": "grid", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "lpi", "type": "Any"}, {"lineNumber": 146, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "space", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "build", "type": "Any"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "lpi", "type": "Any"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "space", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "build", "type": "Any"}, {"lineNumber": 186, "col_offset": 14, "nodeName": "lpi", "type": "Any"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "space", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "SpaceBuilder", "type": "Any"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "pd", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "pd", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "copy", "type": "module"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "array", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "array", "type": "Any"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "array", "type": "Any"}, {"lineNumber": 57, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "array", "type": "Any"}, {"lineNumber": 58, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 87, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "train_regressor", "type": "Any"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "array", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "exc", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "best_point", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 101, "col_offset": 46, "nodeName": "best_point", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 115, "col_offset": 9, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 121, "col_offset": 47, "nodeName": "predict", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 122, "col_offset": 47, "nodeName": "predict", "type": "Any"}, {"lineNumber": 125, "col_offset": 9, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 125, "col_offset": 37, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "variances", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "variances", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "variances", "type": "Any"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "var", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "variances", "type": "Any"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "var", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 148, "col_offset": 37, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "loc", "type": "Any"}, {"lineNumber": 150, "col_offset": 37, "nodeName": "loc", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "loc", "type": "Any"}, {"lineNumber": 170, "col_offset": 37, "nodeName": "loc", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "loc", "type": "Any"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "loc", "type": "Any"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "loc", "type": "Any"}, {"lineNumber": 191, "col_offset": 40, "nodeName": "loc", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "loc", "type": "Any"}, {"lineNumber": 192, "col_offset": 40, "nodeName": "loc", "type": "Any"}, {"lineNumber": 193, "col_offset": 11, "nodeName": "loc", "type": "Any"}, {"lineNumber": 193, "col_offset": 40, "nodeName": "loc", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "columns", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "index", "type": "Any"}, {"lineNumber": 32, "col_offset": 42, "nodeName": "keys", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "columns", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "index", "type": "Any"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "keys", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "pd", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 87, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "argmin", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "grid", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "grid", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "grid", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 105, "col_offset": 31, "nodeName": "grid", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "argmin", "type": "Any"}, {"lineNumber": 115, "col_offset": 9, "nodeName": "testing", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 116, "col_offset": 35, "nodeName": "best_point", "type": "Any"}, {"lineNumber": 116, "col_offset": 51, "nodeName": "predict", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "grid", "type": "Any"}, {"lineNumber": 121, "col_offset": 47, "nodeName": "model", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "grid", "type": "Any"}, {"lineNumber": 122, "col_offset": 47, "nodeName": "model", "type": "Any"}, {"lineNumber": 125, "col_offset": 9, "nodeName": "testing", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "arange", "type": "Any"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "numpy", "type": "module"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "numpy", "type": "module"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "columns", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "index", "type": "Any"}, {"lineNumber": 148, "col_offset": 42, "nodeName": "keys", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "SpaceBuilder", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "columns", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "index", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "SpaceBuilder", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "columns", "type": "Any"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "index", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 32, "col_offset": 42, "nodeName": "space", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "space", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "numpy", "type": "module"}, {"lineNumber": 96, "col_offset": 37, "nodeName": "trials", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "numpy", "type": "module"}, {"lineNumber": 112, "col_offset": 37, "nodeName": "trials", "type": "Any"}, {"lineNumber": 115, "col_offset": 9, "nodeName": "numpy", "type": "module"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 116, "col_offset": 51, "nodeName": "model", "type": "Any"}, {"lineNumber": 116, "col_offset": 65, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 121, "col_offset": 61, "nodeName": "grid", "type": "Any"}, {"lineNumber": 122, "col_offset": 61, "nodeName": "grid", "type": "Any"}, {"lineNumber": 125, "col_offset": 9, "nodeName": "numpy", "type": "module"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "grid", "type": "Any"}, {"lineNumber": 126, "col_offset": 51, "nodeName": "grid", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 148, "col_offset": 42, "nodeName": "space", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 150, "col_offset": 37, "nodeName": "results", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 170, "col_offset": 37, "nodeName": "results", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "results", "type": "Any"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 191, "col_offset": 40, "nodeName": "results", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 192, "col_offset": 40, "nodeName": "results", "type": "Any"}, {"lineNumber": 193, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 193, "col_offset": 40, "nodeName": "results", "type": "Any"}, {"lineNumber": 116, "col_offset": 65, "nodeName": "best_point", "type": "Any"}]