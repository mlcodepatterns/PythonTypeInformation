[{"lineNumber": 16, "col_offset": 22, "nodeName": "Cmd", "type": "Type[cmd.Cmd]"}, {"lineNumber": 16, "col_offset": 22, "nodeName": "cmd", "type": "module"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "intro", "type": "str"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "prompt", "type": "str"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "branch_builder", "type": "Any"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "branch_builder", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "arg", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "self", "type": "BranchingPrompt"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "BranchingPrompt"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "cmdloop", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "dimension_status", "type": "Any"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "key", "type": "Any"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "value", "type": "Any"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "get_dimension_status", "type": "Any"}, {"lineNumber": 46, "col_offset": 80, "nodeName": "name", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "dimension_status", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "key", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "k", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "conflicts_dict", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "IndexError", "type": "Type[IndexError]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "Cmd", "type": "Type[cmd.Cmd]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "BranchingPrompt"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "arg", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "_print_conflicts_message", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 62, "nodeName": "solved_conflicts", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "_print_conflicts_message", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 64, "nodeName": "conflicts", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "_print_dimension_status", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "arg", "type": "Any"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "branch_builder", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "key", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "value", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "value", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "values", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "preprint_message", "type": "Any"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "split", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "arg", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "change_experiment_name", "type": "Any"}, {"lineNumber": 81, "col_offset": 55, "nodeName": "arg", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "split", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "add_dimension", "type": "Any"}, {"lineNumber": 89, "col_offset": 46, "nodeName": "name", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "cmd", "type": "module"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "self", "type": "BranchingPrompt"}, {"lineNumber": 40, "col_offset": 62, "nodeName": "branch_builder", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "BranchingPrompt"}, {"lineNumber": 41, "col_offset": 64, "nodeName": "branch_builder", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "BranchingPrompt"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "self", "type": "BranchingPrompt"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 58, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 61, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 61, "col_offset": 122, "nodeName": "value", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "conflicts_dict", "type": "Any"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "arg", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "branch_builder", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "arg", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "branch_builder", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 62, "nodeName": "self", "type": "BranchingPrompt"}, {"lineNumber": 41, "col_offset": 64, "nodeName": "self", "type": "BranchingPrompt"}, {"lineNumber": 58, "col_offset": 53, "nodeName": "value", "type": "Any"}, {"lineNumber": 61, "col_offset": 53, "nodeName": "value", "type": "Any"}, {"lineNumber": 61, "col_offset": 65, "nodeName": "get_old_dimension_value", "type": "Any"}, {"lineNumber": 61, "col_offset": 109, "nodeName": "name", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "conflicts_dict", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "BranchingPrompt"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "self", "type": "BranchingPrompt"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "conflicts_message", "type": "Dict[str, str]"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "conflicts_message", "type": "Dict[str, str]"}, {"lineNumber": 61, "col_offset": 65, "nodeName": "branch_builder", "type": "Any"}, {"lineNumber": 61, "col_offset": 109, "nodeName": "value", "type": "Any"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "conflicts_dict", "type": "Any"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "k", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "k", "type": "Any"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "self", "type": "BranchingPrompt"}, {"lineNumber": 58, "col_offset": 41, "nodeName": "key", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "self", "type": "BranchingPrompt"}, {"lineNumber": 61, "col_offset": 41, "nodeName": "key", "type": "Any"}, {"lineNumber": 61, "col_offset": 65, "nodeName": "self", "type": "BranchingPrompt"}, {"lineNumber": 67, "col_offset": 56, "nodeName": "k", "type": "Any"}, {"lineNumber": 68, "col_offset": 59, "nodeName": "conflicts_dict", "type": "Any"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "conflicts_message", "type": "Dict[str, str]"}, {"lineNumber": 68, "col_offset": 74, "nodeName": "k", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 72, "col_offset": 67, "nodeName": "name", "type": "Any"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 74, "col_offset": 67, "nodeName": "name", "type": "Any"}, {"lineNumber": 74, "col_offset": 128, "nodeName": "v", "type": "Any"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "self", "type": "BranchingPrompt"}, {"lineNumber": 68, "col_offset": 49, "nodeName": "k", "type": "Any"}, {"lineNumber": 72, "col_offset": 67, "nodeName": "v", "type": "Any"}, {"lineNumber": 74, "col_offset": 67, "nodeName": "v", "type": "Any"}, {"lineNumber": 74, "col_offset": 75, "nodeName": "get_old_dimension_value", "type": "Any"}, {"lineNumber": 74, "col_offset": 119, "nodeName": "name", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "conflicts_message", "type": "Dict[str, str]"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "conflicts_message", "type": "Dict[str, str]"}, {"lineNumber": 74, "col_offset": 75, "nodeName": "branch_builder", "type": "Any"}, {"lineNumber": 74, "col_offset": 119, "nodeName": "v", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "self", "type": "BranchingPrompt"}, {"lineNumber": 72, "col_offset": 57, "nodeName": "k", "type": "Any"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "self", "type": "BranchingPrompt"}, {"lineNumber": 74, "col_offset": 57, "nodeName": "k", "type": "Any"}, {"lineNumber": 74, "col_offset": 75, "nodeName": "self", "type": "BranchingPrompt"}]