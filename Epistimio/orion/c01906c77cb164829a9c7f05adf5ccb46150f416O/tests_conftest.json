[{"lineNumber": 118, "col_offset": 0, "nodeName": "empty_config", "type": "Callable[[], Any]"}, {"lineNumber": 128, "col_offset": 0, "nodeName": "test_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 0, "nodeName": "dumbalgo", "type": "Callable[[], Any]"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "categorical_values", "type": "Callable[[], Any]"}, {"lineNumber": 152, "col_offset": 0, "nodeName": "exp_config_file", "type": "Callable[[], Any]"}, {"lineNumber": 159, "col_offset": 0, "nodeName": "exp_config", "type": "Callable[[], Any]"}, {"lineNumber": 178, "col_offset": 0, "nodeName": "database", "type": "Callable[[], Any]"}, {"lineNumber": 187, "col_offset": 0, "nodeName": "clean_db", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 201, "col_offset": 0, "nodeName": "null_db_instances", "type": "Callable[[], Any]"}, {"lineNumber": 210, "col_offset": 0, "nodeName": "seed", "type": "Callable[[], Any]"}, {"lineNumber": 219, "col_offset": 0, "nodeName": "version_XYZ", "type": "Callable[[Any], Any]"}, {"lineNumber": 231, "col_offset": 0, "nodeName": "create_db_instance", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 251, "col_offset": 0, "nodeName": "script_path", "type": "Callable[[], Any]"}, {"lineNumber": 257, "col_offset": 0, "nodeName": "mock_infer_versioning_metadata", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "BaseAlgorithm", "type": "Any"}, {"lineNumber": 114, "col_offset": 0, "nodeName": "append", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "DumbAlgo", "type": "Type[DumbAlgo]"}, {"lineNumber": 115, "col_offset": 0, "nodeName": "append", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "DEF_CONFIG_FILES_PATHS", "type": "List[nothing]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "empty_config", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "DumbAlgo", "type": "Type[DumbAlgo]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "exp_config", "type": "List[Any]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "database", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "orion_test", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "instance", "type": "None"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "instance", "type": "None"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "instance", "type": "None"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "instance", "type": "None"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "rng", "type": "Any"}, {"lineNumber": 216, "col_offset": 11, "nodeName": "rng", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "non_patched_fetch_metadata", "type": "Any"}, {"lineNumber": 222, "col_offset": 33, "nodeName": "fetch_metadata", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "db", "type": "Any"}, {"lineNumber": 247, "col_offset": 9, "nodeName": "_db", "type": "Any"}, {"lineNumber": 248, "col_offset": 11, "nodeName": "db", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "_times_called_suspend", "type": "int"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "_times_called_is_done", "type": "int"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "_num", "type": "int"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "_index", "type": "int"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "_points", "type": "List[Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "_results", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "_score_point", "type": "None"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "_judge_point", "type": "None"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "_measurements", "type": "None"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "possible_values", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "_index", "type": "Union[Any, int]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "_index", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "_suggested", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "_num", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "done", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "_num", "type": "Union[int, Any]"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "num", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "rval", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "_suggested", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "rval", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "rval", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "_points", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "points", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "_results", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "results", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "_score_point", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "point", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "_judge_point", "type": "Any"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "point", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "_measurements", "type": "Any"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "measurements", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "judgement", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "_times_called_suspend", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "suspend", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "_times_called_is_done", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "done", "type": "Any"}, {"lineNumber": 114, "col_offset": 0, "nodeName": "types", "type": "Any"}, {"lineNumber": 115, "col_offset": 0, "nodeName": "typenames", "type": "Any"}, {"lineNumber": 115, "col_offset": 39, "nodeName": "lower", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "core", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "build_config", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "core", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "resolve_config", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "load_yaml", "type": "Any"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "config_file", "type": "str"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 163, "col_offset": 58, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "exp_config", "type": "List[Any]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "t_dict", "type": "Any"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "exp_config", "type": "List[Any]"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "MongoClient", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "client", "type": "Any"}, {"lineNumber": 183, "col_offset": 10, "nodeName": "database", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "close", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "drop", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "insert_many", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "drop", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "drop", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "insert_many", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "drop", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "insert_many", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "drop", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "insert_many", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "Storage", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "Legacy", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "Database", "type": "Any"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "MongoDB", "type": "Any"}, {"lineNumber": 214, "col_offset": 10, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "seed", "type": "int"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "seed", "type": "int"}, {"lineNumber": 222, "col_offset": 33, "nodeName": "resolve_config", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "setattr", "type": "Any"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "resolve_config", "type": "Any"}, {"lineNumber": 228, "col_offset": 58, "nodeName": "fetch_metadata", "type": "Callable[[Any], Any]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "db", "type": "Any"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 247, "col_offset": 9, "nodeName": "db", "type": "Any"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "vcs", "type": "Dict[str, Optional[Union[str, bool]]]"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "vcs", "type": "Dict[str, Optional[Union[str, bool]]]"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "setattr", "type": "Any"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "resolve_config", "type": "Any"}, {"lineNumber": 269, "col_offset": 69, "nodeName": "fixed_dictionary", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "value", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "space", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "seed", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "_index", "type": "Any"}, {"lineNumber": 57, "col_offset": 51, "nodeName": "_suggested", "type": "Any"}, {"lineNumber": 57, "col_offset": 75, "nodeName": "_num", "type": "Any"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "done", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "num", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "_index", "type": "Union[int, Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 0, "nodeName": "OptimizationAlgorithm", "type": "Any"}, {"lineNumber": 115, "col_offset": 0, "nodeName": "OptimizationAlgorithm", "type": "Any"}, {"lineNumber": 115, "col_offset": 39, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "orion", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "core", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "orion", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "empty_config", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 162, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 166, "col_offset": 31, "nodeName": "exp_config", "type": "List[Any]"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "to_dict", "type": "Any"}, {"lineNumber": 170, "col_offset": 44, "nodeName": "join", "type": "Callable"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "populate_parser_fields", "type": "Any"}, {"lineNumber": 172, "col_offset": 31, "nodeName": "config", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "experiments", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "experiments", "type": "Any"}, {"lineNumber": 191, "col_offset": 37, "nodeName": "exp_config", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "lying_trials", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "trials", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "trials", "type": "Any"}, {"lineNumber": 194, "col_offset": 32, "nodeName": "exp_config", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "workers", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "workers", "type": "Any"}, {"lineNumber": 196, "col_offset": 33, "nodeName": "exp_config", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "resources", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "resources", "type": "Any"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "exp_config", "type": "Any"}, {"lineNumber": 214, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "non_patched_fetch_metadata", "type": "Any"}, {"lineNumber": 225, "col_offset": 46, "nodeName": "cmdargs", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "monkeypatch", "type": "Any"}, {"lineNumber": 243, "col_offset": 13, "nodeName": "Storage", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "db", "type": "Any"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 254, "col_offset": 24, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 254, "col_offset": 40, "nodeName": "__file__", "type": "str"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "vcs", "type": "Dict[str, Optional[Union[str, bool]]]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "vcs", "type": "Dict[str, Optional[Union[str, bool]]]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "vcs", "type": "Dict[str, Optional[Union[str, bool]]]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "vcs", "type": "Dict[str, Optional[Union[str, bool]]]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "vcs", "type": "Dict[str, Optional[Union[str, bool]]]"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "monkeypatch", "type": "Any"}, {"lineNumber": 39, "col_offset": 52, "nodeName": "value", "type": "Any"}, {"lineNumber": 40, "col_offset": 47, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 40, "col_offset": 66, "nodeName": "judgement", "type": "Any"}, {"lineNumber": 41, "col_offset": 47, "nodeName": "suspend", "type": "Any"}, {"lineNumber": 42, "col_offset": 44, "nodeName": "done", "type": "Any"}, {"lineNumber": 43, "col_offset": 44, "nodeName": "seed", "type": "Any"}, {"lineNumber": 44, "col_offset": 41, "nodeName": "nested_algo", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "seed", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 75, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "rval", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "possible_values", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 115, "col_offset": 39, "nodeName": "DumbAlgo", "type": "Type[DumbAlgo]"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "orion", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 131, "col_offset": 47, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 131, "col_offset": 63, "nodeName": "__file__", "type": "str"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 155, "col_offset": 56, "nodeName": "__file__", "type": "str"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "safe_load_all", "type": "Callable[[Union[bytes, IO[bytes], str, IO[str]]], Iterator[Any]]"}, {"lineNumber": 164, "col_offset": 45, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "exp_config", "type": "List[Any]"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 170, "col_offset": 44, "nodeName": "path", "type": "module"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "__file__", "type": "str"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "database", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "database", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "database", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "database", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "database", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "database", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "database", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "database", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "database", "type": "Any"}, {"lineNumber": 214, "col_offset": 10, "nodeName": "numpy", "type": "module"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 243, "col_offset": 46, "nodeName": "config", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 245, "col_offset": 13, "nodeName": "Storage", "type": "Any"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 254, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "DumbAlgo", "type": "Type[DumbAlgo]"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "rval", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 131, "col_offset": 47, "nodeName": "path", "type": "module"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "path", "type": "module"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "yaml", "type": "module"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "Trial", "type": "Any"}, {"lineNumber": 170, "col_offset": 44, "nodeName": "os", "type": "module"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 171, "col_offset": 39, "nodeName": "config", "type": "Any"}, {"lineNumber": 254, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "min", "type": "Callable"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "_index", "type": "Union[int, Any]"}, {"lineNumber": 131, "col_offset": 47, "nodeName": "os", "type": "module"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "os", "type": "module"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "path", "type": "module"}, {"lineNumber": 162, "col_offset": 43, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 162, "col_offset": 59, "nodeName": "__file__", "type": "str"}, {"lineNumber": 167, "col_offset": 35, "nodeName": "t_dict", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 162, "col_offset": 43, "nodeName": "path", "type": "module"}, {"lineNumber": 76, "col_offset": 58, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 62, "nodeName": "possible_values", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 43, "nodeName": "os", "type": "module"}, {"lineNumber": 76, "col_offset": 62, "nodeName": "self", "type": "DumbAlgo"}]