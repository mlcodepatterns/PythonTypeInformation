[{"lineNumber": 27, "col_offset": 0, "nodeName": "pytest_addoption", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "pytest_configure", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "shield_from_user_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "_pop_out_yaml_from_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 0, "nodeName": "empty_config", "type": "Callable[[], Any]"}, {"lineNumber": 199, "col_offset": 0, "nodeName": "test_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 210, "col_offset": 0, "nodeName": "dumbalgo", "type": "Callable[[], Any]"}, {"lineNumber": 216, "col_offset": 0, "nodeName": "categorical_values", "type": "Callable[[], Any]"}, {"lineNumber": 232, "col_offset": 0, "nodeName": "exp_config_file", "type": "Callable[[], Any]"}, {"lineNumber": 243, "col_offset": 0, "nodeName": "exp_config", "type": "Callable[[], Any]"}, {"lineNumber": 269, "col_offset": 0, "nodeName": "database", "type": "Callable[[], Any]"}, {"lineNumber": 278, "col_offset": 0, "nodeName": "mock_database", "type": "Callable[[], Any]"}, {"lineNumber": 289, "col_offset": 0, "nodeName": "clean_db", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 303, "col_offset": 0, "nodeName": "null_db_instances", "type": "Callable[[], Any]"}, {"lineNumber": 313, "col_offset": 0, "nodeName": "seed", "type": "Callable[[], Any]"}, {"lineNumber": 322, "col_offset": 0, "nodeName": "version_XYZ", "type": "Callable[[Any], Any]"}, {"lineNumber": 344, "col_offset": 0, "nodeName": "script_path", "type": "Callable[[], Any]"}, {"lineNumber": 352, "col_offset": 0, "nodeName": "mock_infer_versioning_metadata", "type": "Callable[[Any], Any]"}, {"lineNumber": 369, "col_offset": 0, "nodeName": "setup_pickleddb_database", "type": "Callable[[], Any]"}, {"lineNumber": 383, "col_offset": 0, "nodeName": "storage", "type": "Callable[[Any], Any]"}, {"lineNumber": 389, "col_offset": 0, "nodeName": "with_user_userxyz", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "BaseAlgorithm", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "seed", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "set_state", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "suggest", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "observe", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "judge", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "should_suspend", "type": "Callable[[Any], Any]"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "is_done", "type": "Callable[[Any], Any]"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "fixed_dictionary", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 185, "col_offset": 0, "nodeName": "append", "type": "Any"}, {"lineNumber": 185, "col_offset": 35, "nodeName": "DumbAlgo", "type": "Type[DumbAlgo]"}, {"lineNumber": 186, "col_offset": 0, "nodeName": "append", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "DEF_CONFIG_FILES_PATHS", "type": "List[nothing]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 195, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 207, "col_offset": 11, "nodeName": "empty_config", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "DumbAlgo", "type": "Type[DumbAlgo]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "exp_config", "type": "List[Any]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "database", "type": "Any"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "orion_test", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "storage", "type": "Dict[str, Union[str, Dict[str, str]]]"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "instance", "type": "None"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "instance", "type": "None"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "instance", "type": "None"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "instance", "type": "None"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "instance", "type": "None"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "rng", "type": "Any"}, {"lineNumber": 319, "col_offset": 11, "nodeName": "rng", "type": "Any"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "non_patched_fetch_metadata", "type": "Any"}, {"lineNumber": 325, "col_offset": 33, "nodeName": "fetch_metadata", "type": "Any"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "non_patched_update_metadata", "type": "Any"}, {"lineNumber": 334, "col_offset": 34, "nodeName": "update_metadata", "type": "Any"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "temporary_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 376, "col_offset": 37, "nodeName": "name", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "addoption", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "addinivalue_line", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "addinivalue_line", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "addinivalue_line", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "_pop_out_yaml_from_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "config", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "keys", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "keys", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "_times_called_suspend", "type": "int"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "_times_called_is_done", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "_num", "type": "int"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "_index", "type": "int"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "_points", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "_suggested", "type": "None"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "_results", "type": "List[Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "_score_point", "type": "None"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "_judge_point", "type": "None"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "_measurements", "type": "None"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "possible_values", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "_index", "type": "Union[Any, int]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "_state_dict", "type": "Any"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "_state_dict", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "_index", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "_suggested", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "_num", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "done", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "_num", "type": "Union[int, Any]"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "num", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "rval", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "_suggested", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 26, "nodeName": "rval", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "rval", "type": "List[Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "_points", "type": "List[Any]"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "points", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "_results", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "results", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "_score_point", "type": "Any"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "point", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "_judge_point", "type": "Any"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "point", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "_measurements", "type": "Any"}, {"lineNumber": 168, "col_offset": 29, "nodeName": "measurements", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "judgement", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "_times_called_suspend", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "suspend", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "_times_called_is_done", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "done", "type": "Any"}, {"lineNumber": 185, "col_offset": 0, "nodeName": "types", "type": "Any"}, {"lineNumber": 186, "col_offset": 0, "nodeName": "typenames", "type": "Any"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "lower", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "core", "type": "Any"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "build_config", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "core", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "resolve_config", "type": "Any"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "load_yaml", "type": "Any"}, {"lineNumber": 205, "col_offset": 27, "nodeName": "config_file", "type": "str"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 253, "col_offset": 9, "nodeName": "f", "type": "file"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "exp_config", "type": "List[Any]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 256, "col_offset": 11, "nodeName": "t_dict", "type": "Any"}, {"lineNumber": 256, "col_offset": 21, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 259, "col_offset": 18, "nodeName": "exp_config", "type": "List[Any]"}, {"lineNumber": 272, "col_offset": 13, "nodeName": "MongoClient", "type": "Any"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "client", "type": "Any"}, {"lineNumber": 274, "col_offset": 10, "nodeName": "database", "type": "Any"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "close", "type": "Any"}, {"lineNumber": 285, "col_offset": 40, "nodeName": "state", "type": "Any"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "drop", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "insert_many", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "drop", "type": "Any"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "drop", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "insert_many", "type": "Any"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "drop", "type": "Any"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "insert_many", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "drop", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "insert_many", "type": "Any"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "Storage", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "Legacy", "type": "Any"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "Database", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "MongoDB", "type": "Any"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "PickledDB", "type": "Any"}, {"lineNumber": 317, "col_offset": 10, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 317, "col_offset": 35, "nodeName": "seed", "type": "int"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 318, "col_offset": 22, "nodeName": "seed", "type": "int"}, {"lineNumber": 325, "col_offset": 33, "nodeName": "resolve_config", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 330, "col_offset": 15, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "setattr", "type": "Any"}, {"lineNumber": 332, "col_offset": 24, "nodeName": "resolve_config", "type": "Any"}, {"lineNumber": 332, "col_offset": 58, "nodeName": "fetch_metadata", "type": "Callable[..., Any]"}, {"lineNumber": 334, "col_offset": 34, "nodeName": "resolve_config", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 339, "col_offset": 15, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "setattr", "type": "Any"}, {"lineNumber": 341, "col_offset": 24, "nodeName": "resolve_config", "type": "Any"}, {"lineNumber": 341, "col_offset": 59, "nodeName": "update_metadata", "type": "Callable[[Any], Any]"}, {"lineNumber": 347, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "vcs", "type": "Dict[str, Optional[Union[str, bool]]]"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "vcs", "type": "Dict[str, Optional[Union[str, bool]]]"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "setattr", "type": "Any"}, {"lineNumber": 366, "col_offset": 24, "nodeName": "resolve_config", "type": "Any"}, {"lineNumber": 366, "col_offset": 69, "nodeName": "fixed_dictionary", "type": "Callable[[Any], Any]"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "update_singletons", "type": "Any"}, {"lineNumber": 373, "col_offset": 21, "nodeName": "NamedTemporaryFile", "type": "Callable[..., tempfile._TemporaryFileWrapper]"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 376, "col_offset": 37, "nodeName": "temporary_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "setup_storage", "type": "Any"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "setattr", "type": "Any"}, {"lineNumber": 392, "col_offset": 24, "nodeName": "getpass", "type": "module"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "parser", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "core", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "_config", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "_subconfigs", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "_pop_out_yaml_from_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "value", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "space", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "seed", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "set_state", "type": "Any"}, {"lineNumber": 132, "col_offset": 40, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "num", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "_index", "type": "Union[int, Any]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "observe", "type": "Any"}, {"lineNumber": 156, "col_offset": 38, "nodeName": "points", "type": "Any"}, {"lineNumber": 156, "col_offset": 46, "nodeName": "results", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 185, "col_offset": 0, "nodeName": "OptimizationAlgorithm", "type": "Any"}, {"lineNumber": 186, "col_offset": 0, "nodeName": "OptimizationAlgorithm", "type": "Any"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "orion", "type": "Any"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "core", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "orion", "type": "Any"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "empty_config", "type": "Any"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 246, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 254, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 256, "col_offset": 31, "nodeName": "exp_config", "type": "List[Any]"}, {"lineNumber": 257, "col_offset": 27, "nodeName": "to_dict", "type": "Any"}, {"lineNumber": 260, "col_offset": 44, "nodeName": "join", "type": "Callable"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "populate_space", "type": "Any"}, {"lineNumber": 263, "col_offset": 32, "nodeName": "config", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 285, "col_offset": 9, "nodeName": "OrionState", "type": "Any"}, {"lineNumber": 286, "col_offset": 14, "nodeName": "state", "type": "Any"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "experiments", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "experiments", "type": "Any"}, {"lineNumber": 293, "col_offset": 37, "nodeName": "exp_config", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "lying_trials", "type": "Any"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "trials", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "trials", "type": "Any"}, {"lineNumber": 296, "col_offset": 32, "nodeName": "exp_config", "type": "Any"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "workers", "type": "Any"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "workers", "type": "Any"}, {"lineNumber": 298, "col_offset": 33, "nodeName": "exp_config", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "resources", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "resources", "type": "Any"}, {"lineNumber": 300, "col_offset": 35, "nodeName": "exp_config", "type": "Any"}, {"lineNumber": 317, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 328, "col_offset": 19, "nodeName": "non_patched_fetch_metadata", "type": "Any"}, {"lineNumber": 328, "col_offset": 46, "nodeName": "user", "type": "Any"}, {"lineNumber": 328, "col_offset": 52, "nodeName": "user_args", "type": "Any"}, {"lineNumber": 328, "col_offset": 63, "nodeName": "user_script_config", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "monkeypatch", "type": "Any"}, {"lineNumber": 337, "col_offset": 19, "nodeName": "non_patched_update_metadata", "type": "Any"}, {"lineNumber": 337, "col_offset": 47, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "monkeypatch", "type": "Any"}, {"lineNumber": 347, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "vcs", "type": "Dict[str, Optional[Union[str, bool]]]"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "vcs", "type": "Dict[str, Optional[Union[str, bool]]]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "vcs", "type": "Dict[str, Optional[Union[str, bool]]]"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "vcs", "type": "Dict[str, Optional[Union[str, bool]]]"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "vcs", "type": "Dict[str, Optional[Union[str, bool]]]"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "monkeypatch", "type": "Any"}, {"lineNumber": 373, "col_offset": 21, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "temporary_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 386, "col_offset": 10, "nodeName": "get_storage", "type": "Any"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "monkeypatch", "type": "Any"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "orion", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "_subconfigs", "type": "Any"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "value", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "judgement", "type": "Any"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "suspend", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "done", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "seed", "type": "Any"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "nested_algo", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "seed", "type": "Any"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "DumbAlgo", "type": "Type[DumbAlgo]"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "_state_dict", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "_index", "type": "Any"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "_suggested", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "_num", "type": "Any"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "done", "type": "Any"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 143, "col_offset": 18, "nodeName": "rval", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "possible_values", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "DumbAlgo", "type": "Type[DumbAlgo]"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "orion", "type": "Any"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "path", "type": "module"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 203, "col_offset": 40, "nodeName": "__file__", "type": "str"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "path", "type": "module"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 236, "col_offset": 40, "nodeName": "__file__", "type": "str"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "join", "type": "Callable"}, {"lineNumber": 254, "col_offset": 26, "nodeName": "safe_load_all", "type": "Callable[[Union[str, IO[str]]], Iterator[Any]]"}, {"lineNumber": 254, "col_offset": 45, "nodeName": "f", "type": "file"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "exp_config", "type": "List[Any]"}, {"lineNumber": 257, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 260, "col_offset": 44, "nodeName": "path", "type": "module"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 261, "col_offset": 28, "nodeName": "__file__", "type": "str"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 285, "col_offset": 28, "nodeName": "storage", "type": "Dict[str, Union[str, Dict[str, str]]]"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "database", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "database", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "database", "type": "Any"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "database", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "database", "type": "Any"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "database", "type": "Any"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "database", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "database", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "database", "type": "Any"}, {"lineNumber": 317, "col_offset": 10, "nodeName": "numpy", "type": "module"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 347, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "path", "type": "module"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 348, "col_offset": 40, "nodeName": "__file__", "type": "str"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "_config", "type": "Any"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "config", "type": "Any"}, {"lineNumber": 65, "col_offset": 53, "nodeName": "key", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "DumbAlgo", "type": "Type[DumbAlgo]"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "DumbAlgo", "type": "Type[DumbAlgo]"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "rval", "type": "List[Any]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "DumbAlgo", "type": "Type[DumbAlgo]"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "path", "type": "module"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 254, "col_offset": 26, "nodeName": "yaml", "type": "module"}, {"lineNumber": 257, "col_offset": 27, "nodeName": "Trial", "type": "Any"}, {"lineNumber": 260, "col_offset": 44, "nodeName": "os", "type": "module"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 261, "col_offset": 39, "nodeName": "config", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "key", "type": "Any"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "min", "type": "Callable"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "_index", "type": "Union[int, Any]"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 248, "col_offset": 28, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 248, "col_offset": 44, "nodeName": "__file__", "type": "str"}, {"lineNumber": 257, "col_offset": 35, "nodeName": "t_dict", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "self", "type": "DumbAlgo"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 248, "col_offset": 28, "nodeName": "path", "type": "module"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "possible_values", "type": "List[Any]"}, {"lineNumber": 248, "col_offset": 28, "nodeName": "os", "type": "module"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "self", "type": "DumbAlgo"}]