[{"lineNumber": 11, "col_offset": 0, "nodeName": "fixed_suggestion", "type": "Callable[[], Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "space", "type": "Callable[[], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "palgo", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "space", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "categories", "type": "Dict[Union[int, str], float]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "dim", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "dim", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "dim", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "space", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "Space", "type": "Any"}, {"lineNumber": 22, "col_offset": 10, "nodeName": "Categorical", "type": "Any"}, {"lineNumber": 22, "col_offset": 30, "nodeName": "categories", "type": "Dict[Union[int, str], float]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "register", "type": "Any"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "dim", "type": "Any"}, {"lineNumber": 24, "col_offset": 10, "nodeName": "Integer", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "register", "type": "Any"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "dim", "type": "Any"}, {"lineNumber": 26, "col_offset": 10, "nodeName": "Real", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "register", "type": "Any"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "dim", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "PrimaryAlgo", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "space", "type": "Any"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "algo_config", "type": "Dict[str, Dict[str, Union[Dict[str, Dict[Any, Any]], Any]]]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "value", "type": "Tuple[int]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "done", "type": "int"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "suspend", "type": "int"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "scoring", "type": "int"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "judgement", "type": "str"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "space", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "space", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "space", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "dumbalgo", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "configuration", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "space", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "space", "type": "int"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "observe", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "_points", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "_results", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "is_done", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "_times_called_is_done", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "should_suspend", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "_times_called_suspend", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "_score_point", "type": "Any"}, {"lineNumber": 114, "col_offset": 47, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "_judge_point", "type": "Any"}, {"lineNumber": 122, "col_offset": 47, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "_measurements", "type": "Any"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "suggest", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "suggest", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "suggest", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "observe", "type": "Any"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "observe", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "score", "type": "Any"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "judge", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "judge", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "fixed_suggestion", "type": "Any"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "palgo", "type": "Any"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "palgo", "type": "Any"}]