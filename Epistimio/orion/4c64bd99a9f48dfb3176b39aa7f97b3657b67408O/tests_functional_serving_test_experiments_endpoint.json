[{"lineNumber": 31, "col_offset": 0, "nodeName": "client", "type": "Callable[[], Any]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "_add_experiment", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "test_no_experiments", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "test_send_name_and_versions", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "test_latest_versions", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "current_id", "type": "int"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "storage", "type": "Dict[str, Union[Dict[str, str], str]]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "create_experiment", "type": "Any"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "simulate_get", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "json", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "status", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "_add_experiment", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "_add_experiment", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "simulate_get", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "json", "type": "Any"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "expected", "type": "List[Dict[str, Union[int, str]]]"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "status", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "_add_experiment", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "_add_experiment", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "_add_experiment", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "simulate_get", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "json", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "expected", "type": "List[Dict[str, Union[int, str]]]"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "status", "type": "Any"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "OrionState", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "client", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "client", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "client", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "storage", "type": "Dict[str, Union[Dict[str, str], str]]"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "TestClient", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "get_storage", "type": "Any"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "testing", "type": "Any"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "WebApi", "type": "Any"}, {"lineNumber": 36, "col_offset": 52, "nodeName": "storage", "type": "Dict[str, Union[Dict[str, str], str]]"}]