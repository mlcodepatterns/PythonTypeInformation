[{"lineNumber": 30, "col_offset": 0, "nodeName": "flatten_params", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 0, "nodeName": "to_numpy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 0, "nodeName": "flatten_numpy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "train_regressor", "type": "Callable[..., Any]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "_regressors_", "type": "Dict[str, Any]"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "AdaBoostRegressor", "type": "Any"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "BaggingRegressor", "type": "Any"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "ExtraTreesRegressor", "type": "Any"}, {"lineNumber": 25, "col_offset": 33, "nodeName": "GradientBoostingRegressor", "type": "Any"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "keys", "type": "Set[Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "flattened_keys", "type": "Set[Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "flattened_params", "type": "List[Union[str, Any]]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "params", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "flattened_params", "type": "List[Union[str, Any]]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "flattened_points", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "regressor", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 75, "col_offset": 7, "nodeName": "params", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 130, "col_offset": 7, "nodeName": "regressor_name", "type": "Any"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "_regressors_", "type": "Dict[str, Any]"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "fit", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "keys", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "flattened_keys", "type": "Set[Any]"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "flattened_points", "type": "numpy.ndarray"}, {"lineNumber": 131, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "_regressors_", "type": "Dict[str, Any]"}, {"lineNumber": 136, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "regressor", "type": "Any"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 137, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "flattened_keys", "type": "Set[Any]"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "param", "type": "Any"}, {"lineNumber": 80, "col_offset": 56, "nodeName": "keys", "type": "Set[Any]"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "dim", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "trials", "type": "Any"}, {"lineNumber": 104, "col_offset": 9, "nodeName": "transform", "type": "Any"}, {"lineNumber": 104, "col_offset": 51, "nodeName": "point", "type": "Any"}, {"lineNumber": 104, "col_offset": 60, "nodeName": "trials_array", "type": "Any"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "trials_array", "type": "Any"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "regressor_name", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "build_required_space", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "space", "type": "Any"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "param", "type": "Any"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "flattened_keys", "type": "Set[Any]"}, {"lineNumber": 84, "col_offset": 45, "nodeName": "param", "type": "Any"}, {"lineNumber": 84, "col_offset": 54, "nodeName": "keys", "type": "Set[Any]"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "space", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "param", "type": "Any"}, {"lineNumber": 104, "col_offset": 9, "nodeName": "flattened_space", "type": "Any"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "point", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "param", "type": "Any"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "index", "type": "Tuple[Any, ...]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "flattened_params", "type": "List[Union[str, Any]]"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "product", "type": "Callable"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "itertools", "type": "module"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "keys", "type": "Any"}, {"lineNumber": 88, "col_offset": 48, "nodeName": "map", "type": "Callable"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 88, "col_offset": 59, "nodeName": "shape", "type": "Any"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "space", "type": "Any"}, {"lineNumber": 88, "col_offset": 59, "nodeName": "dim", "type": "Any"}]