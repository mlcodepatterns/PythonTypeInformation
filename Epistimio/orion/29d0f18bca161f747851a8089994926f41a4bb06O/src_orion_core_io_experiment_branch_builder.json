[{"lineNumber": 19, "col_offset": 0, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 19, "col_offset": 6, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 6, "nodeName": "logging", "type": "module"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "is_solved", "type": "bool"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "dimension", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "dimension", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "status", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "status", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "experiment_config", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "experiment_config", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "conflicting_config", "type": "Any"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "conflicting_config", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "conflicts", "type": "List[Conflict]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "commandline_keywords", "type": "Dict[str, List[Any]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "branching_name", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "arg", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "user_args", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "experiment_args", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "experiment_space", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "conflicting_space", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "dim", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "dim", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "keyword", "type": "str"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "commandline_keywords", "type": "Dict[str, List[Any]]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "_name", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "status", "type": "List[str]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "_name", "type": "Any"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "old_conflict", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "new_conflict", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "is_solved", "type": "bool"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "is_solved", "type": "bool"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "prefixed_name", "type": "str"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "index", "type": "int"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "adaptors", "type": "List[None]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "operation", "type": "Union[Any, str]"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "names", "type": "List[Any]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "arg", "type": "Any"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "names", "type": "List[Any]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "prefix", "type": "str"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "filtered_conflicts", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "is_solved", "type": "bool"}, {"lineNumber": 208, "col_offset": 29, "nodeName": "is_solved", "type": "bool"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "prefixed_name", "type": "str"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "conflicts", "type": "List[Any]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "index", "type": "int"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "operation", "type": "Any"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "Conflict"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Conflict"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "Conflict"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "_add_adaptor", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "_rename_adaptor", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 46, "nodeName": "_remove_adaptor", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 53, "col_offset": 44, "nodeName": "add_dimension", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 44, "nodeName": "remove_dimension", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "rename_dimension", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "_interpret_commandline", "type": "Callable[[], Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "_build_spaces", "type": "Callable[[], Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "_find_conflicts", "type": "Callable[[], Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "_solve_commandline_conflicts", "type": "Callable[[], Any]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "pop", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "branching_name", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "keyword", "type": "str"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "commandline_keywords", "type": "Dict[str, List[Any]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "build_from", "type": "Any"}, {"lineNumber": 82, "col_offset": 58, "nodeName": "experiment_args", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "build_from", "type": "Any"}, {"lineNumber": 83, "col_offset": 59, "nodeName": "user_args", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "values", "type": "Any"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "values", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "dimension", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "arg", "type": "Any"}, {"lineNumber": 113, "col_offset": 46, "nodeName": "arg", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "_do_basic", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "_do_basic", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "_get_names", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "name", "type": "Any"}, {"lineNumber": 124, "col_offset": 43, "nodeName": "status", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "_get_names", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 37, "nodeName": "arg", "type": "Any"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "status", "type": "List[str]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "old", "type": "Any"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "new", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "old_index", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "missing_conflicts", "type": "Any"}, {"lineNumber": 138, "col_offset": 39, "nodeName": "_assert_has_status", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 63, "nodeName": "old", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "new_index", "type": "Any"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "new_conflicts", "type": "Any"}, {"lineNumber": 139, "col_offset": 35, "nodeName": "_assert_has_status", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 59, "nodeName": "new", "type": "Any"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "missing_conflicts", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "new_conflicts", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "old_conflict", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "new_conflict", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "_put_operation", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 150, "col_offset": 76, "nodeName": "prefixed_name", "type": "str"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "conflicts", "type": "List[Conflict]"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 155, "col_offset": 19, "nodeName": "experiment_space", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "filter_conflicts", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "filter_conflicts", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "filter_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "conflicts", "type": "List[Conflict]"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "split", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "filter_conflicts", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "_mark_as", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "status", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "conflicts", "type": "Any"}, {"lineNumber": 206, "col_offset": 27, "nodeName": "_assert_has_status", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 206, "col_offset": 51, "nodeName": "name", "type": "Any"}, {"lineNumber": 206, "col_offset": 57, "nodeName": "status", "type": "Any"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "conflicts", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 213, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 215, "col_offset": 71, "nodeName": "prefixed_name", "type": "str"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "index", "type": "int"}, {"lineNumber": 217, "col_offset": 22, "nodeName": "conflicts", "type": "List[Any]"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "operation_name", "type": "Any"}, {"lineNumber": 220, "col_offset": 33, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 223, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "status", "type": "Any"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 46, "col_offset": 46, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 54, "col_offset": 44, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "conflicting_config", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "change_experiment_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 40, "nodeName": "branching_name", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "conflicting_config", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "conflicting_config", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "experiment_config", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "conflicting_space", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "experiment_space", "type": "Any"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "experiment_space", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "conflicting_space", "type": "Any"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "commandline_keywords", "type": "Dict[str, List[Any]]"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "value", "type": "List[Any]"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "experiment_config", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "conflicting_config", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "_mark_as_solved", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 125, "col_offset": 44, "nodeName": "_name", "type": "Any"}, {"lineNumber": 125, "col_offset": 51, "nodeName": "status", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "_put_operation", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "operation", "type": "Any"}, {"lineNumber": 126, "col_offset": 44, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "_mark_as", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "arg", "type": "Any"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "status", "type": "List[str]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "_remove_from_operations", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 41, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 138, "col_offset": 39, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 139, "col_offset": 35, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "old_index", "type": "Any"}, {"lineNumber": 142, "col_offset": 37, "nodeName": "new_index", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 146, "col_offset": 39, "nodeName": "old_conflict", "type": "Any"}, {"lineNumber": 146, "col_offset": 53, "nodeName": "new_conflict", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "index", "type": "int"}, {"lineNumber": 155, "col_offset": 19, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "experiment_space", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "arg", "type": "Any"}, {"lineNumber": 181, "col_offset": 22, "nodeName": "special_keywords", "type": "Dict[str, str]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "names", "type": "List[Any]"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "names", "type": "List[Any]"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 206, "col_offset": 27, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "index", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "filter_conflicts_with_status", "type": "Callable[[Any], Any]"}, {"lineNumber": 214, "col_offset": 59, "nodeName": "status", "type": "Any"}, {"lineNumber": 220, "col_offset": 33, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 224, "col_offset": 51, "nodeName": "args", "type": "Any"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "operation", "type": "Any"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "value", "type": "Any"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "re", "type": "module"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "re", "type": "module"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "re", "type": "module"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "keyword", "type": "str"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "arg", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "SpaceBuilder", "type": "Any"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "SpaceBuilder", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "dim", "type": "Any"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "dim", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "dim", "type": "Any"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 104, "col_offset": 55, "nodeName": "keyword", "type": "str"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "findall", "type": "Callable[..., List[Any]]"}, {"lineNumber": 105, "col_offset": 61, "nodeName": "dimension", "type": "Any"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 156, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 161, "col_offset": 47, "nodeName": "is_solved", "type": "Any"}, {"lineNumber": 161, "col_offset": 62, "nodeName": "wants_solved", "type": "Any"}, {"lineNumber": 164, "col_offset": 47, "nodeName": "status", "type": "Any"}, {"lineNumber": 164, "col_offset": 59, "nodeName": "status", "type": "Any"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 172, "col_offset": 44, "nodeName": "operation", "type": "Union[Any, str]"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 181, "col_offset": 22, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "_extend_special_keywords", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 182, "col_offset": 46, "nodeName": "arg", "type": "Any"}, {"lineNumber": 182, "col_offset": 51, "nodeName": "names", "type": "List[Any]"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "arg", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "names", "type": "List[Any]"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "map", "type": "Callable"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "split", "type": "Any"}, {"lineNumber": 200, "col_offset": 26, "nodeName": "map", "type": "Callable"}, {"lineNumber": 200, "col_offset": 62, "nodeName": "filtered_conflicts", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "operation_name", "type": "Any"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 223, "col_offset": 39, "nodeName": "operation_name", "type": "Any"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 230, "col_offset": 31, "nodeName": "value", "type": "Any"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "arg", "type": "Any"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "is_solved", "type": "bool"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 74, "col_offset": 62, "nodeName": "arg", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "args", "type": "Any"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "replace", "type": "Any"}, {"lineNumber": 75, "col_offset": 56, "nodeName": "keyword", "type": "str"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "values", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "conflicts", "type": "List[Conflict]"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "Conflict", "type": "Type[Conflict]"}, {"lineNumber": 94, "col_offset": 54, "nodeName": "dim", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "conflicts", "type": "List[Conflict]"}, {"lineNumber": 100, "col_offset": 38, "nodeName": "Conflict", "type": "Type[Conflict]"}, {"lineNumber": 100, "col_offset": 58, "nodeName": "dim", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "cl_keywords_functions", "type": "Dict[str, Callable[[Any], Any]]"}, {"lineNumber": 106, "col_offset": 53, "nodeName": "value", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "map", "type": "Callable"}, {"lineNumber": 150, "col_offset": 53, "nodeName": "conflicts", "type": "List[Conflict]"}, {"lineNumber": 161, "col_offset": 47, "nodeName": "c", "type": "Any"}, {"lineNumber": 164, "col_offset": 47, "nodeName": "c", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "adaptors", "type": "List[None]"}, {"lineNumber": 173, "col_offset": 68, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "_extend_wildcard", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 184, "col_offset": 38, "nodeName": "arg", "type": "Any"}, {"lineNumber": 184, "col_offset": 43, "nodeName": "names", "type": "List[Any]"}, {"lineNumber": 184, "col_offset": 50, "nodeName": "status", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "arg", "type": "Any"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "filter_conflicts_with_status", "type": "Callable[[Any], Any]"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "arg", "type": "Any"}, {"lineNumber": 198, "col_offset": 51, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 199, "col_offset": 63, "nodeName": "prefix", "type": "str"}, {"lineNumber": 199, "col_offset": 75, "nodeName": "status", "type": "Any"}, {"lineNumber": 199, "col_offset": 87, "nodeName": "status", "type": "Any"}, {"lineNumber": 215, "col_offset": 21, "nodeName": "map", "type": "Callable"}, {"lineNumber": 215, "col_offset": 53, "nodeName": "conflicts", "type": "List[Any]"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 229, "col_offset": 45, "nodeName": "operation", "type": "Any"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "old", "type": "Any"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "new", "type": "Any"}, {"lineNumber": 231, "col_offset": 23, "nodeName": "arg", "type": "Any"}, {"lineNumber": 231, "col_offset": 30, "nodeName": "value", "type": "Any"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "is_solved", "type": "bool"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "is_solved", "type": "bool"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "arg", "type": "Any"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "remove", "type": "Callable"}, {"lineNumber": 238, "col_offset": 50, "nodeName": "arg", "type": "Any"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "arg", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "experiment_space", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "conflicts", "type": "List[Conflict]"}, {"lineNumber": 91, "col_offset": 42, "nodeName": "Conflict", "type": "Type[Conflict]"}, {"lineNumber": 91, "col_offset": 62, "nodeName": "dim", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "cl_keywords_re", "type": "Dict[str, Pattern[str]]"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 106, "col_offset": 43, "nodeName": "keyword", "type": "str"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 150, "col_offset": 53, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "_operations_mapping", "type": "Dict[str, Callable[[Any], Any]]"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 191, "col_offset": 40, "nodeName": "name", "type": "Any"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 198, "col_offset": 51, "nodeName": "name", "type": "Any"}, {"lineNumber": 199, "col_offset": 75, "nodeName": "c", "type": "Any"}, {"lineNumber": 200, "col_offset": 40, "nodeName": "name", "type": "Any"}, {"lineNumber": 215, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "operation_name", "type": "Any"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "old", "type": "Any"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "new", "type": "Any"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "remove", "type": "Callable"}, {"lineNumber": 234, "col_offset": 58, "nodeName": "value", "type": "Any"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 236, "col_offset": 40, "nodeName": "operation", "type": "Any"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "commandline_keywords", "type": "Dict[str, List[Any]]"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "index", "type": "Any"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "arg", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 105, "col_offset": 44, "nodeName": "keyword", "type": "str"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "dimension", "type": "Any"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 173, "col_offset": 57, "nodeName": "operation", "type": "Union[Any, str]"}, {"lineNumber": 191, "col_offset": 40, "nodeName": "dimension", "type": "Any"}, {"lineNumber": 193, "col_offset": 30, "nodeName": "special_keywords", "type": "Dict[str, str]"}, {"lineNumber": 198, "col_offset": 51, "nodeName": "dimension", "type": "Any"}, {"lineNumber": 200, "col_offset": 40, "nodeName": "dimension", "type": "Any"}, {"lineNumber": 215, "col_offset": 35, "nodeName": "dimension", "type": "Any"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "keyword", "type": "str"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "c", "type": "Any"}, {"lineNumber": 191, "col_offset": 40, "nodeName": "c", "type": "Any"}, {"lineNumber": 193, "col_offset": 30, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 193, "col_offset": 52, "nodeName": "arg", "type": "Any"}, {"lineNumber": 198, "col_offset": 51, "nodeName": "c", "type": "Any"}, {"lineNumber": 200, "col_offset": 40, "nodeName": "c", "type": "Any"}, {"lineNumber": 215, "col_offset": 35, "nodeName": "c", "type": "Any"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 238, "col_offset": 32, "nodeName": "operation", "type": "Any"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 234, "col_offset": 40, "nodeName": "operation", "type": "Any"}]