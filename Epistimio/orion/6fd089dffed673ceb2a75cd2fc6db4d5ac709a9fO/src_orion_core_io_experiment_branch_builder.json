[{"lineNumber": 18, "col_offset": 0, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 18, "col_offset": 6, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "__name__", "type": "str"}, {"lineNumber": 18, "col_offset": 6, "nodeName": "logging", "type": "module"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "is_solved", "type": "bool"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "dimension", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "dimension", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "status", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "status", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "experiment_config", "type": "Any"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "experiment_config", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "conflicting_config", "type": "Any"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "conflicting_config", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "conflicts", "type": "List[Conflict]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "branching_name", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "user_args", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "experiment_args", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "experiment_space", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "conflicting_space", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "dim", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "dim", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "old_conflict", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "new_conflict", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "is_solved", "type": "bool"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "is_solved", "type": "bool"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "prefixed_name", "type": "str"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "index", "type": "int"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "adaptors", "type": "List[None]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "operation", "type": "Union[Any, str]"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "is_solved", "type": "Any"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "is_solved", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "prefixed_name", "type": "str"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "conflicts", "type": "List[Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "index", "type": "int"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "operation", "type": "Any"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "Conflict"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "Conflict"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Conflict"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "_add_adaptor", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "_rename_adaptor", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "_remove_adaptor", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "_build_spaces", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "_find_conflicts", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "pop", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "branching_name", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "build_from", "type": "Any"}, {"lineNumber": 58, "col_offset": 58, "nodeName": "experiment_args", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "build_from", "type": "Any"}, {"lineNumber": 59, "col_offset": 59, "nodeName": "user_args", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "values", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "values", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "arg", "type": "Any"}, {"lineNumber": 83, "col_offset": 46, "nodeName": "arg", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "_mark_as_solved", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 40, "nodeName": "name", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "_put_operation", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "_mark_as_solved", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 40, "nodeName": "name", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "_put_operation", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "old", "type": "Any"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "new", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "old_index", "type": "int"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "missing_conflicts", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 39, "nodeName": "_assert_has_status", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 63, "nodeName": "old", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "new_index", "type": "int"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "new_conflicts", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "_assert_has_status", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 100, "col_offset": 59, "nodeName": "new", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "missing_conflicts", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "new_conflicts", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "old_conflict", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "new_conflict", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "_put_operation", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "_mark_as", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "arg", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "_remove_from_operations", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 37, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 115, "col_offset": 76, "nodeName": "prefixed_name", "type": "str"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "conflicts", "type": "List[Conflict]"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "experiment_space", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "filter_conflicts", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "filter_conflicts", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 132, "col_offset": 22, "nodeName": "filter_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "conflicts", "type": "List[Conflict]"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "_mark_as", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 143, "col_offset": 35, "nodeName": "status", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "index", "type": "int"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "conflicts", "type": "List[Any]"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "_assert_has_status", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 146, "col_offset": 51, "nodeName": "name", "type": "Any"}, {"lineNumber": 146, "col_offset": 57, "nodeName": "status", "type": "Any"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "conflicts", "type": "List[Any]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 155, "col_offset": 71, "nodeName": "prefixed_name", "type": "str"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "index", "type": "int"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "conflicts", "type": "List[Any]"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "operation_name", "type": "Any"}, {"lineNumber": 160, "col_offset": 33, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "status", "type": "Any"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "conflicting_config", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "change_experiment_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "branching_name", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "conflicting_config", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "experiment_config", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "conflicting_space", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "experiment_space", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "experiment_space", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "conflicting_space", "type": "Any"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "experiment_config", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "conflicting_config", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 99, "col_offset": 39, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "old_index", "type": "int"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "new_index", "type": "int"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 107, "col_offset": 39, "nodeName": "old_conflict", "type": "Any"}, {"lineNumber": 107, "col_offset": 53, "nodeName": "new_conflict", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "index", "type": "int"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "experiment_space", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "index", "type": "int"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "filter_conflicts_with_status", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 59, "nodeName": "status", "type": "Any"}, {"lineNumber": 160, "col_offset": 33, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 164, "col_offset": 51, "nodeName": "args", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "operation", "type": "Any"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "value", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "SpaceBuilder", "type": "Any"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "SpaceBuilder", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "dim", "type": "Any"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "dim", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "dim", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 121, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "is_solved", "type": "Any"}, {"lineNumber": 126, "col_offset": 62, "nodeName": "wants_solved", "type": "Any"}, {"lineNumber": 129, "col_offset": 47, "nodeName": "status", "type": "Any"}, {"lineNumber": 129, "col_offset": 59, "nodeName": "status", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 137, "col_offset": 44, "nodeName": "operation", "type": "Union[str, Any]"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "operation_name", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 163, "col_offset": 39, "nodeName": "operation_name", "type": "Any"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "value", "type": "Any"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "arg", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "is_solved", "type": "bool"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "values", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "conflicts", "type": "List[Conflict]"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "Conflict", "type": "Type[Conflict]"}, {"lineNumber": 70, "col_offset": 54, "nodeName": "dim", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "conflicts", "type": "List[Conflict]"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "Conflict", "type": "Type[Conflict]"}, {"lineNumber": 76, "col_offset": 58, "nodeName": "dim", "type": "Any"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "map", "type": "Callable"}, {"lineNumber": 115, "col_offset": 53, "nodeName": "conflicts", "type": "List[Conflict]"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "c", "type": "Any"}, {"lineNumber": 129, "col_offset": 47, "nodeName": "c", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "adaptors", "type": "List[None]"}, {"lineNumber": 138, "col_offset": 68, "nodeName": "conflict", "type": "Any"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "map", "type": "Callable"}, {"lineNumber": 155, "col_offset": 53, "nodeName": "conflicts", "type": "List[Any]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 169, "col_offset": 45, "nodeName": "operation", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "old", "type": "Any"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "new", "type": "Any"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "arg", "type": "Any"}, {"lineNumber": 171, "col_offset": 30, "nodeName": "value", "type": "Any"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "is_solved", "type": "bool"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "is_solved", "type": "bool"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "arg", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "remove", "type": "Callable"}, {"lineNumber": 178, "col_offset": 50, "nodeName": "arg", "type": "Any"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "experiment_space", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "conflicts", "type": "List[Conflict]"}, {"lineNumber": 67, "col_offset": 42, "nodeName": "Conflict", "type": "Type[Conflict]"}, {"lineNumber": 67, "col_offset": 62, "nodeName": "dim", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 115, "col_offset": 53, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "_operations_mapping", "type": "Dict[str, Callable[[Any], Any]]"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "operation_name", "type": "Any"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "old", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "new", "type": "Any"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "remove", "type": "Callable"}, {"lineNumber": 174, "col_offset": 58, "nodeName": "value", "type": "Any"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 176, "col_offset": 40, "nodeName": "operation", "type": "Any"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "dimension", "type": "Any"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 138, "col_offset": 57, "nodeName": "operation", "type": "Union[str, Any]"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "dimension", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "c", "type": "Any"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "c", "type": "Any"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "operations", "type": "Dict[Union[Any, str], Union[List[Any], List[Tuple[Any, Any]]]]"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 178, "col_offset": 32, "nodeName": "operation", "type": "Any"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "self", "type": "ExperimentBranchBuilder"}, {"lineNumber": 174, "col_offset": 40, "nodeName": "operation", "type": "Any"}]