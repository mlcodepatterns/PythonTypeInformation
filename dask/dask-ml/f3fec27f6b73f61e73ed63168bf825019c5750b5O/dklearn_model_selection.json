[{"lineNumber": 24, "col_offset": 19, "nodeName": "BaseEstimator", "type": "Any"}, {"lineNumber": 24, "col_offset": 34, "nodeName": "MetaEstimatorMixin", "type": "Any"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "BaseSearchCV", "type": "Type[BaseSearchCV]"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "BaseSearchCV", "type": "Type[BaseSearchCV]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "array", "type": "Any"}, {"lineNumber": 188, "col_offset": 7, "nodeName": "splits", "type": "bool"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "array_means", "type": "Any"}, {"lineNumber": 193, "col_offset": 36, "nodeName": "array_means", "type": "Any"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "array_stds", "type": "Any"}, {"lineNumber": 199, "col_offset": 7, "nodeName": "rank", "type": "bool"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "iid", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "iid", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "refit", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "refit", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "cv", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "cv", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "error_score", "type": "Any"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "error_score", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "return_train_score", "type": "Any"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "return_train_score", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "get", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "_estimator_type", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "cv", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "scorer_", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "candidate_params", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "n_candidates", "type": "int"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "keys", "type": "List[List[Tuple[Any, int]]]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "candidate_params", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "dask_graph_", "type": "Any"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "dsk", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "dask_keys_", "type": "List[List[Tuple[Any, int]]]"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "keys", "type": "List[List[Tuple[Any, int]]]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "get", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "return_train_score", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "test_sample_counts", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "return_train_score", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "best_index", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "best_parameters", "type": "Any"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "candidate_params", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "cv_results_", "type": "Dict[str, Any]"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "best_index_", "type": "Any"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "best_index", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "n_splits_", "type": "Any"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "n_splits", "type": "Any"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "refit", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 187, "col_offset": 54, "nodeName": "n_candidates", "type": "int"}, {"lineNumber": 187, "col_offset": 68, "nodeName": "n_splits", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "split_i", "type": "int"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "average", "type": "Any"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "array", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 195, "col_offset": 17, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "param_grid", "type": "Any"}, {"lineNumber": 214, "col_offset": 26, "nodeName": "param_grid", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "param_distributions", "type": "Any"}, {"lineNumber": 230, "col_offset": 35, "nodeName": "param_distributions", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "n_iter", "type": "Any"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "n_iter", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 232, "col_offset": 28, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "check_is_fitted", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "refit", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "_check_is_fitted", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "best_estimator_", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "_check_is_fitted", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "predict", "type": "Any"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "X", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "_check_is_fitted", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "X", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "_check_is_fitted", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "predict_log_proba", "type": "Any"}, {"lineNumber": 79, "col_offset": 54, "nodeName": "X", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "_check_is_fitted", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "decision_function", "type": "Any"}, {"lineNumber": 84, "col_offset": 54, "nodeName": "X", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "_check_is_fitted", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "transform", "type": "Any"}, {"lineNumber": 89, "col_offset": 46, "nodeName": "X", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "_check_is_fitted", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "transform", "type": "Any"}, {"lineNumber": 94, "col_offset": 46, "nodeName": "Xt", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "check_cv", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "cv", "type": "Any"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "check_scoring", "type": "Any"}, {"lineNumber": 99, "col_offset": 37, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "candidate_params", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "groups", "type": "Any"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "indexable", "type": "Any"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 105, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 105, "col_offset": 39, "nodeName": "groups", "type": "Any"}, {"lineNumber": 108, "col_offset": 9, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "n_splits", "type": "Any"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "initialize_dask_graph", "type": "Any"}, {"lineNumber": 108, "col_offset": 59, "nodeName": "X", "type": "Any"}, {"lineNumber": 108, "col_offset": 62, "nodeName": "y", "type": "Any"}, {"lineNumber": 108, "col_offset": 65, "nodeName": "cv", "type": "Any"}, {"lineNumber": 108, "col_offset": 69, "nodeName": "groups", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "est", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 126, "col_offset": 14, "nodeName": "get", "type": "Any"}, {"lineNumber": 126, "col_offset": 62, "nodeName": "threaded_get", "type": "Any"}, {"lineNumber": 127, "col_offset": 14, "nodeName": "get", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "dsk", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "keys", "type": "List[List[Tuple[Any, int]]]"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "_store", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "test_scores", "type": "Any"}, {"lineNumber": 141, "col_offset": 51, "nodeName": "n_splits", "type": "Any"}, {"lineNumber": 141, "col_offset": 61, "nodeName": "n_candidates", "type": "int"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "candidate_params", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "cand_i", "type": "int"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 158, "col_offset": 40, "nodeName": "candidate_params", "type": "List[Any]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "param_results", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "best", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "best_estimator_", "type": "Any"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "best", "type": "Any"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "n_splits", "type": "Any"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 52, "nodeName": "weights", "type": "Any"}, {"lineNumber": 195, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "average", "type": "Any"}, {"lineNumber": 200, "col_offset": 40, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "_check_param_grid", "type": "Any"}, {"lineNumber": 213, "col_offset": 26, "nodeName": "param_grid", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "GridSearchCV"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "ParameterGrid", "type": "Any"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "param_grid", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "self", "type": "RandomizedSearchCV"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "RandomizedSearchCV"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "RandomizedSearchCV"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "ParameterSampler", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "param_distributions", "type": "Any"}, {"lineNumber": 237, "col_offset": 38, "nodeName": "n_iter", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "cv_results_", "type": "Any"}, {"lineNumber": 45, "col_offset": 42, "nodeName": "best_index_", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "cv_results_", "type": "Any"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "best_index_", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 56, "col_offset": 41, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 56, "col_offset": 62, "nodeName": "method_name", "type": "Any"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "NotFittedError", "type": "Any"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "msg", "type": "str"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "check_is_fitted", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "best_estimator_", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "best_estimator_", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "best_estimator_", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "best_estimator_", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "best_estimator_", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "best_estimator_", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 99, "col_offset": 37, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 99, "col_offset": 61, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "_get_param_iterator", "type": "Any"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "do_fit_and_score", "type": "Any"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "dsk", "type": "Any"}, {"lineNumber": 113, "col_offset": 42, "nodeName": "est", "type": "Any"}, {"lineNumber": 113, "col_offset": 47, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 113, "col_offset": 56, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 113, "col_offset": 65, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 114, "col_offset": 45, "nodeName": "n_splits", "type": "Any"}, {"lineNumber": 114, "col_offset": 55, "nodeName": "scorer_", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 126, "col_offset": 14, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "get", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "train_scores", "type": "Any"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "test_scores", "type": "Any"}, {"lineNumber": 131, "col_offset": 39, "nodeName": "test_sample_counts", "type": "Any"}, {"lineNumber": 131, "col_offset": 60, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "test_scores", "type": "Any"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "test_sample_counts", "type": "Any"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 38, "nodeName": "test_sample_counts", "type": "Any"}, {"lineNumber": 139, "col_offset": 75, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "_store", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 145, "col_offset": 43, "nodeName": "train_scores", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "n_splits", "type": "Any"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "n_candidates", "type": "int"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "flatnonzero", "type": "Any"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "best_index", "type": "Any"}, {"lineNumber": 154, "col_offset": 36, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 154, "col_offset": 44, "nodeName": "MaskedArray", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "value", "type": "Any"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "items", "type": "Any"}, {"lineNumber": 163, "col_offset": 59, "nodeName": "value", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "array", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 190, "col_offset": 58, "nodeName": "array", "type": "Any"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "key_name", "type": "str"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 52, "nodeName": "weights", "type": "Any"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "key_name", "type": "str"}, {"lineNumber": 200, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "rankdata", "type": "Any"}, {"lineNumber": 201, "col_offset": 56, "nodeName": "int32", "type": "Any"}, {"lineNumber": 208, "col_offset": 53, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 209, "col_offset": 24, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 209, "col_offset": 37, "nodeName": "iid", "type": "Any"}, {"lineNumber": 209, "col_offset": 48, "nodeName": "refit", "type": "Any"}, {"lineNumber": 209, "col_offset": 58, "nodeName": "cv", "type": "Any"}, {"lineNumber": 210, "col_offset": 28, "nodeName": "error_score", "type": "Any"}, {"lineNumber": 210, "col_offset": 60, "nodeName": "return_train_score", "type": "Any"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "self", "type": "GridSearchCV"}, {"lineNumber": 225, "col_offset": 59, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 226, "col_offset": 37, "nodeName": "iid", "type": "Any"}, {"lineNumber": 226, "col_offset": 48, "nodeName": "refit", "type": "Any"}, {"lineNumber": 226, "col_offset": 58, "nodeName": "cv", "type": "Any"}, {"lineNumber": 227, "col_offset": 28, "nodeName": "error_score", "type": "Any"}, {"lineNumber": 227, "col_offset": 60, "nodeName": "return_train_score", "type": "Any"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "self", "type": "RandomizedSearchCV"}, {"lineNumber": 237, "col_offset": 38, "nodeName": "self", "type": "RandomizedSearchCV"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 45, "nodeName": "is_classifier", "type": "Any"}, {"lineNumber": 98, "col_offset": 59, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 99, "col_offset": 61, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 112, "col_offset": 48, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 114, "col_offset": 55, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 115, "col_offset": 48, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 116, "col_offset": 56, "nodeName": "return_train_score", "type": "Any"}, {"lineNumber": 117, "col_offset": 49, "nodeName": "error_score", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "keys", "type": "List[List[Tuple[Any, int]]]"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "_globals", "type": "Any"}, {"lineNumber": 131, "col_offset": 65, "nodeName": "out", "type": "Any"}, {"lineNumber": 133, "col_offset": 51, "nodeName": "out", "type": "Any"}, {"lineNumber": 139, "col_offset": 58, "nodeName": "n_splits", "type": "Any"}, {"lineNumber": 143, "col_offset": 45, "nodeName": "iid", "type": "Any"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "test_sample_counts", "type": "numpy.ndarray"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 44, "nodeName": "empty", "type": "Any"}, {"lineNumber": 155, "col_offset": 53, "nodeName": "n_candidates", "type": "int"}, {"lineNumber": 157, "col_offset": 50, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 176, "col_offset": 42, "nodeName": "best_parameters", "type": "Any"}, {"lineNumber": 177, "col_offset": 52, "nodeName": "y", "type": "Any"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "fit", "type": "Any"}, {"lineNumber": 177, "col_offset": 29, "nodeName": "X", "type": "Any"}, {"lineNumber": 177, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "fit", "type": "Any"}, {"lineNumber": 178, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "float64", "type": "Any"}, {"lineNumber": 195, "col_offset": 37, "nodeName": "array", "type": "Any"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "array_means", "type": "Any"}, {"lineNumber": 201, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 208, "col_offset": 14, "nodeName": "GridSearchCV", "type": "Type[GridSearchCV]"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "self", "type": "GridSearchCV"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 225, "col_offset": 14, "nodeName": "RandomizedSearchCV", "type": "Type[RandomizedSearchCV]"}, {"lineNumber": 225, "col_offset": 34, "nodeName": "self", "type": "RandomizedSearchCV"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "self", "type": "RandomizedSearchCV"}, {"lineNumber": 56, "col_offset": 41, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 56, "col_offset": 46, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "clone", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 116, "col_offset": 56, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 117, "col_offset": 49, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "n", "type": "int"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "context", "type": "Any"}, {"lineNumber": 143, "col_offset": 45, "nodeName": "self", "type": "BaseSearchCV"}, {"lineNumber": 148, "col_offset": 36, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 155, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "param_results", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 163, "col_offset": 49, "nodeName": "cand_i", "type": "int"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "best", "type": "Any"}, {"lineNumber": 177, "col_offset": 37, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "best", "type": "Any"}, {"lineNumber": 178, "col_offset": 39, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 190, "col_offset": 67, "nodeName": "split_i", "type": "int"}, {"lineNumber": 195, "col_offset": 45, "nodeName": "array_means", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "s", "type": "Any"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "n", "type": "int"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "s", "type": "Any"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 119, "col_offset": 40, "nodeName": "n_splits", "type": "Any"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "dask", "type": "Any"}, {"lineNumber": 190, "col_offset": 36, "nodeName": "split_i", "type": "int"}, {"lineNumber": 190, "col_offset": 45, "nodeName": "key_name", "type": "str"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 195, "col_offset": 60, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 195, "col_offset": 60, "nodeName": "np", "type": "module"}]