[{"lineNumber": 15, "col_offset": 0, "nodeName": "test_it_works", "type": "Callable[[], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "test_no_method_raises", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "test_predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "test_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "test_multiclass", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "clf", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "clf", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "base", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "wrap", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "base", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "wrap", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "clf", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 16, "col_offset": 10, "nodeName": "ParallelPostFit", "type": "Type[dask_ml.wrappers.ParallelPostFit]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 18, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "make_classification", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 21, "col_offset": 38, "nodeName": "Array", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 22, "col_offset": 44, "nodeName": "Array", "type": "Any"}, {"lineNumber": 26, "col_offset": 10, "nodeName": "ParallelPostFit", "type": "Type[dask_ml.wrappers.ParallelPostFit]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "make_classification", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 30, "col_offset": 42, "nodeName": "m", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "match", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 38, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "make_classification", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 40, "col_offset": 7, "nodeName": "kind", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "LogisticRegression", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "ParallelPostFit", "type": "Type[dask_ml.wrappers.ParallelPostFit]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "X", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "X", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "assert_estimator_equal", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "base", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "X", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "predict", "type": "Any"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "assert_eq_ar", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "result", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "expected", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "X", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "assert_eq_ar", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "result", "type": "Any"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "expected", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 65, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "make_classification", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 67, "col_offset": 7, "nodeName": "kind", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "ParallelPostFit", "type": "Type[dask_ml.wrappers.ParallelPostFit]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "X", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "X", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "assert_estimator_equal", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 79, "col_offset": 43, "nodeName": "base", "type": "Any"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "transform", "type": "Any"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "X", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "assert_eq_ar", "type": "Any"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "result", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "expected", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 87, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "make_classification", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "from_array", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "X", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "from_array", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 90, "col_offset": 10, "nodeName": "ParallelPostFit", "type": "Type[dask_ml.wrappers.ParallelPostFit]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "X", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "predict", "type": "Any"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "Array", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "assert_eq_ar", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "result", "type": "Any"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "expected", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "X", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "Array", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "assert_eq_ar", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "result", "type": "Any"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "expected", "type": "Any"}, {"lineNumber": 16, "col_offset": 26, "nodeName": "GradientBoostingClassifier", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "clf", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 21, "col_offset": 38, "nodeName": "da", "type": "Any"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 40, "nodeName": "X", "type": "Any"}, {"lineNumber": 22, "col_offset": 44, "nodeName": "da", "type": "Any"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "LinearRegression", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "clf", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "X", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "m", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "compute", "type": "Any"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 42, "col_offset": 9, "nodeName": "kind", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "LogisticRegression", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "base", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "wrap", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "wrap", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "wrap", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "base", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "wrap", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "base", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "compute", "type": "Any"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "kind", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "base", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "wrap", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "wrap", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "base", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "wrap", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "da", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "da", "type": "Any"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "LogisticRegression", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "clf", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "clf", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "da", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "clf", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "da", "type": "Any"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "clf", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "clf", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "clf", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "dask", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "from_dask_array", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "from_dask_array", "type": "Any"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "dask", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "from_dask_array", "type": "Any"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "from_dask_array", "type": "Any"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "clf", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "clf", "type": "dask_ml.wrappers.ParallelPostFit"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "dd", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "dd", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "dd", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "dd", "type": "Any"}]