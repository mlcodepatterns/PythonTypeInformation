[{"lineNumber": 25, "col_offset": 0, "nodeName": "get_scorer", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "check_scoring", "type": "Callable[..., Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "accuracy_scorer", "type": "Any"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "r2_scorer", "type": "Any"}, {"lineNumber": 12, "col_offset": 18, "nodeName": "make_scorer", "type": "Any"}, {"lineNumber": 12, "col_offset": 30, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 13, "col_offset": 32, "nodeName": "make_scorer", "type": "Any"}, {"lineNumber": 13, "col_offset": 44, "nodeName": "mean_squared_error", "type": "Any"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "make_scorer", "type": "Any"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "r2_score", "type": "Any"}, {"lineNumber": 18, "col_offset": 10, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "scorer", "type": "Any"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "accuracy_scorer", "type": "Any"}, {"lineNumber": 20, "col_offset": 27, "nodeName": "neg_mean_squared_error_scorer", "type": "Any"}, {"lineNumber": 21, "col_offset": 7, "nodeName": "r2_scorer", "type": "Any"}, {"lineNumber": 40, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "string_types", "type": "Tuple[Type[str]]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "scorer", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "sklearn_check_scoring", "type": "Any"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 55, "col_offset": 7, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "six", "type": "module"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "scorer", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 54, "col_offset": 45, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 54, "col_offset": 56, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "SCORERS", "type": "Dict[Any, Any]"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "module", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "module", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 66, "col_offset": 46, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 45, "col_offset": 59, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 46, "col_offset": 59, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 46, "col_offset": 66, "nodeName": "SCORERS", "type": "Dict[Any, Any]"}]