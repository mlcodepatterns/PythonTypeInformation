[{"lineNumber": 34, "col_offset": 0, "nodeName": "test_slice_columns", "type": "Callable[[], Any]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "test_handle_zeros_in_scale", "type": "Callable[[], Any]"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "test_assert_estimator_passes", "type": "Callable[[], Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "test_assert_estimator_different_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "test_assert_estimator_different_scalers", "type": "Callable[[], Any]"}, {"lineNumber": 116, "col_offset": 0, "nodeName": "test_check_random_state", "type": "Callable[[], Any]"}, {"lineNumber": 140, "col_offset": 0, "nodeName": "test_get_chunks_min", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 0, "nodeName": "test_get_chunks_raises", "type": "Callable[[], Any]"}, {"lineNumber": 158, "col_offset": 0, "nodeName": "test_check_array_raises", "type": "Callable[[], Any]"}, {"lineNumber": 180, "col_offset": 0, "nodeName": "test_check_array_1d", "type": "Callable[[], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "df", "type": "Any"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "s", "type": "Any"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "a", "type": "Any"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "Foo", "type": "Type[`namedtuple-Foo-a_-b_-c_-d_`]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "Bar", "type": "Type[`namedtuple-Bar-a_-b_-d_-e_`]"}, {"lineNumber": 25, "col_offset": 5, "nodeName": "from_pandas", "type": "Any"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "T", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "from_pandas", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "from_array", "type": "Any"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "X", "type": "Any"}, {"lineNumber": 28, "col_offset": 3, "nodeName": "y", "type": "Any"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "make_classification", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 30, "col_offset": 6, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 31, "col_offset": 6, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "columns", "type": "List[int]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "df2", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "X2", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "s2", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "a2", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "values", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "l", "type": "`namedtuple-Foo-a_-b_-c_-d_`"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "r", "type": "`namedtuple-Foo-a_-b_-c_-d_`"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "l", "type": "`namedtuple-Foo-a_-b_-c_-d_`"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "r", "type": "`namedtuple-Bar-a_-b_-d_-e_`"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "l", "type": "`namedtuple-Foo-a_-b_-c_-d_`"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "r", "type": "`namedtuple-Foo-a_-b_-c_-d_`"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "l", "type": "`namedtuple-Foo-a_-b_-c_-d_`"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "r", "type": "`namedtuple-Foo-a_-b_-c_-d_`"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "l", "type": "`namedtuple-Foo-a_-b_-c_-d_`"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "r", "type": "`namedtuple-Foo-a_-b_-c_-d_`"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "rs", "type": "Optional[int]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "rs", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "result", "type": "Tuple[Any, ...]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "expected", "type": "Tuple[int, int]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 25, "col_offset": 5, "nodeName": "dd", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "dd", "type": "Any"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "Series", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "da", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "slice_columns", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "df", "type": "Any"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "columns", "type": "List[int]"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "slice_columns", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "X", "type": "Any"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "columns", "type": "List[int]"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "columns", "type": "List[int]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "assert_eq_df", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "assert_eq_ar", "type": "Any"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "handle_zeros_in_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "s", "type": "Any"}, {"lineNumber": 46, "col_offset": 9, "nodeName": "handle_zeros_in_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "handle_zeros_in_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "result", "type": "Any"}, {"lineNumber": 54, "col_offset": 42, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "Series", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "handle_zeros_in_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "assert_series_equal", "type": "Any"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "result", "type": "Any"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "expected", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "from_array", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "values", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "expected", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "handle_zeros_in_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "assert_eq_ar", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "result", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "expected", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "from_dask_array", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "Series", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "expected", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "handle_zeros_in_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "assert_eq_df", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "result", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "expected", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "Foo", "type": "Type[`namedtuple-Foo-a_-b_-c_-d_`]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "Foo", "type": "Type[`namedtuple-Foo-a_-b_-c_-d_`]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assert_estimator_equal", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "l", "type": "`namedtuple-Foo-a_-b_-c_-d_`"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "r", "type": "`namedtuple-Foo-a_-b_-c_-d_`"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "Foo", "type": "Type[`namedtuple-Foo-a_-b_-c_-d_`]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "Bar", "type": "Type[`namedtuple-Bar-a_-b_-d_-e_`]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "Foo", "type": "Type[`namedtuple-Foo-a_-b_-c_-d_`]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "Foo", "type": "Type[`namedtuple-Foo-a_-b_-c_-d_`]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "Foo", "type": "Type[`namedtuple-Foo-a_-b_-c_-d_`]"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "Foo", "type": "Type[`namedtuple-Foo-a_-b_-c_-d_`]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "Foo", "type": "Type[`namedtuple-Foo-a_-b_-c_-d_`]"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "Foo", "type": "Type[`namedtuple-Foo-a_-b_-c_-d_`]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "check_random_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 32, "nodeName": "rs", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "rs", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "result", "type": "Tuple[Any, ...]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "expected", "type": "Tuple[int, int]"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "check_chunks", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "result", "type": "Tuple[Any, ...]"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "expected", "type": "Tuple[int, int]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 160, "col_offset": 37, "nodeName": "m", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "match", "type": "Any"}, {"lineNumber": 181, "col_offset": 10, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "arr", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "check_matching_blocks", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "pd", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "columns", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "compute", "type": "Any"}, {"lineNumber": 40, "col_offset": 40, "nodeName": "compute", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "compute", "type": "Any"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "compute", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "tm", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "da", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "dd", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assert_estimator_equal", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "l", "type": "`namedtuple-Foo-a_-b_-c_-d_`"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "r", "type": "`namedtuple-Bar-a_-b_-d_-e_`"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assert_estimator_equal", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "l", "type": "`namedtuple-Foo-a_-b_-c_-d_`"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "r", "type": "`namedtuple-Foo-a_-b_-c_-d_`"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assert_estimator_equal", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "l", "type": "`namedtuple-Foo-a_-b_-c_-d_`"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "r", "type": "`namedtuple-Foo-a_-b_-c_-d_`"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 112, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assert_estimator_equal", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "l", "type": "`namedtuple-Foo-a_-b_-c_-d_`"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "r", "type": "`namedtuple-Foo-a_-b_-c_-d_`"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "check_random_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "rs", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "result", "type": "Any"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 125, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "check_random_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 9, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "check_chunks", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "result", "type": "Tuple[Any, ...]"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "expected", "type": "Tuple[int, int]"}, {"lineNumber": 142, "col_offset": 60, "nodeName": "chunks", "type": "Any"}, {"lineNumber": 148, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "check_chunks", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 151, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "check_chunks", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "check_chunks", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 160, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "check_array", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "m", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "_num_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 181, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "check_matching_blocks", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "pd", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "df2", "type": "Any"}, {"lineNumber": 40, "col_offset": 40, "nodeName": "df2", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "X", "type": "Any"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "X2", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "compute", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "compute", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "pd", "type": "Any"}, {"lineNumber": 112, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "random", "type": "Any"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "da", "type": "Any"}, {"lineNumber": 125, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 134, "col_offset": 9, "nodeName": "mock", "type": "module"}, {"lineNumber": 135, "col_offset": 67, "nodeName": "chunks", "type": "Any"}, {"lineNumber": 148, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 151, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "da", "type": "Any"}, {"lineNumber": 160, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 181, "col_offset": 10, "nodeName": "da", "type": "Any"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 238, "col_offset": 31, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "df", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "s2", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "a2", "type": "Any"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "da", "type": "Any"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 25, "col_offset": 38, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "columns", "type": "List[int]"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "np", "type": "module"}]