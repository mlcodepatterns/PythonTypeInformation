[{"lineNumber": 96, "col_offset": 11, "nodeName": "BaseEstimator", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "family", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "_get_solver_kwargs", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "_check_array", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "_GLM", "type": "Type[_GLM]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "family", "type": "Callable[[Any], Any]"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "predict", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "predict_proba", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "score", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "_GLM", "type": "Type[_GLM]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "family", "type": "Callable[[Any], Any]"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "predict", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "score", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 329, "col_offset": 24, "nodeName": "_GLM", "type": "Type[_GLM]"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "family", "type": "Callable[[Any], Any]"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "predict", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "get_deviance", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "dedent", "type": "Callable"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "textwrap", "type": "module"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "dual", "type": "Any"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "dual", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "tol", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "tol", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "C", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "C", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "fit_intercept", "type": "Any"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "fit_intercept", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "intercept_scaling", "type": "Any"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "intercept_scaling", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "class_weight", "type": "Any"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "class_weight", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "solver", "type": "Any"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "solver", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "max_iter", "type": "Any"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "max_iter", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "multi_class", "type": "Any"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "multi_class", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "warm_start", "type": "Any"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "warm_start", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "solver_kwargs", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "solver_kwargs", "type": "Any"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "solver_kwargs", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "fit_kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "solver_kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "_coef", "type": "Any"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "fit_intercept", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "fit_intercept", "type": "Any"}, {"lineNumber": 203, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "Logistic", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "X_", "type": "Any"}, {"lineNumber": 269, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "X_", "type": "Any"}, {"lineNumber": 330, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "Poisson", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "X_", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "LinearRegression"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "LinearRegression"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "LinearRegression"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "LinearRegression"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "LinearRegression"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "LinearRegression"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "LinearRegression"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "LinearRegression"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "LinearRegression"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "LinearRegression"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "LinearRegression"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "LinearRegression"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "LinearRegression"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "LinearRegression"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "LinearRegression"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "max_iter", "type": "Any"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "family", "type": "None"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "tol", "type": "Any"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "solver", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "solver", "type": "Any"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "solver", "type": "Any"}, {"lineNumber": 165, "col_offset": 30, "nodeName": "solvers", "type": "Set[str]"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "_check_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 183, "col_offset": 30, "nodeName": "X", "type": "Any"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "_get_solver_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 187, "col_offset": 54, "nodeName": "X", "type": "Any"}, {"lineNumber": 187, "col_offset": 57, "nodeName": "y", "type": "Any"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "intercept_", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 192, "col_offset": 25, "nodeName": "_coef", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "self", "type": "LinearRegression"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "check_array", "type": "Any"}, {"lineNumber": 199, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 203, "col_offset": 14, "nodeName": "_base_doc", "type": "str"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "families", "type": "Any"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "_check_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 247, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 265, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 269, "col_offset": 14, "nodeName": "_base_doc", "type": "str"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "families", "type": "Any"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "_check_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "dot", "type": "Any"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "X_", "type": "Any"}, {"lineNumber": 300, "col_offset": 23, "nodeName": "_coef", "type": "Any"}, {"lineNumber": 326, "col_offset": 15, "nodeName": "r2_score", "type": "Any"}, {"lineNumber": 326, "col_offset": 24, "nodeName": "y", "type": "Any"}, {"lineNumber": 330, "col_offset": 14, "nodeName": "_base_doc", "type": "str"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "families", "type": "Any"}, {"lineNumber": 360, "col_offset": 13, "nodeName": "_check_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 360, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 361, "col_offset": 15, "nodeName": "exp", "type": "Any"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "poisson_deviance", "type": "Any"}, {"lineNumber": 364, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "C", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "solver_kwargs", "type": "Any"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 166, "col_offset": 65, "nodeName": "solvers", "type": "Set[str]"}, {"lineNumber": 166, "col_offset": 74, "nodeName": "solver", "type": "Any"}, {"lineNumber": 167, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "msg", "type": "str"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "_solvers", "type": "Any"}, {"lineNumber": 187, "col_offset": 62, "nodeName": "solver_kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "_coef", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 190, "col_offset": 30, "nodeName": "_coef", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 192, "col_offset": 25, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "add_intercept", "type": "Any"}, {"lineNumber": 197, "col_offset": 30, "nodeName": "X", "type": "Any"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "dedent", "type": "Callable"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 248, "col_offset": 23, "nodeName": "dot", "type": "Any"}, {"lineNumber": 248, "col_offset": 27, "nodeName": "X_", "type": "Any"}, {"lineNumber": 248, "col_offset": 31, "nodeName": "_coef", "type": "Any"}, {"lineNumber": 265, "col_offset": 33, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 46, "nodeName": "X", "type": "Any"}, {"lineNumber": 271, "col_offset": 17, "nodeName": "dedent", "type": "Callable"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "self", "type": "LinearRegression"}, {"lineNumber": 300, "col_offset": 23, "nodeName": "self", "type": "LinearRegression"}, {"lineNumber": 326, "col_offset": 27, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 326, "col_offset": 40, "nodeName": "X", "type": "Any"}, {"lineNumber": 332, "col_offset": 17, "nodeName": "dedent", "type": "Callable"}, {"lineNumber": 360, "col_offset": 13, "nodeName": "self", "type": "PoissonRegression"}, {"lineNumber": 361, "col_offset": 19, "nodeName": "dot", "type": "Any"}, {"lineNumber": 361, "col_offset": 23, "nodeName": "X_", "type": "Any"}, {"lineNumber": 361, "col_offset": 27, "nodeName": "_coef", "type": "Any"}, {"lineNumber": 364, "col_offset": 35, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 364, "col_offset": 48, "nodeName": "X", "type": "Any"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "fit_kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "fit_kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "fit_kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "fit_kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 166, "col_offset": 74, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "algorithms", "type": "Any"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "solver", "type": "Any"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 190, "col_offset": 30, "nodeName": "self", "type": "_GLM"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "textwrap", "type": "module"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 248, "col_offset": 31, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 265, "col_offset": 33, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 271, "col_offset": 17, "nodeName": "textwrap", "type": "module"}, {"lineNumber": 326, "col_offset": 27, "nodeName": "self", "type": "LinearRegression"}, {"lineNumber": 332, "col_offset": 17, "nodeName": "textwrap", "type": "module"}, {"lineNumber": 361, "col_offset": 27, "nodeName": "self", "type": "PoissonRegression"}, {"lineNumber": 364, "col_offset": 35, "nodeName": "self", "type": "PoissonRegression"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "self", "type": "_GLM"}]