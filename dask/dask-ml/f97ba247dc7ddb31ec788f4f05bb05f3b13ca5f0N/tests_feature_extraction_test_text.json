[{"lineNumber": 53, "col_offset": 0, "nodeName": "test_hashing_vectorizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "test_transforms_other", "type": "Callable[[], Any]"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "test_transform_raises", "type": "Callable[[], Any]"}, {"lineNumber": 105, "col_offset": 0, "nodeName": "test_correct_meta", "type": "Callable[[], Any]"}, {"lineNumber": 164, "col_offset": 0, "nodeName": "test_count_vectorizer_remote_vocabulary", "type": "Callable[[], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "vect_ref", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "X_ref", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "X_da", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "vect_ref", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "vect", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "X_ref", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "X_da", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "X_a", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "X_b", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "vect", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "vect", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "m1", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "r1", "type": "Any"}, {"lineNumber": 121, "col_offset": 7, "nodeName": "give_vocabulary", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "m2", "type": "Any"}, {"lineNumber": 130, "col_offset": 7, "nodeName": "distributed", "type": "Any"}, {"lineNumber": 135, "col_offset": 7, "nodeName": "give_vocabulary", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "m1", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "vocabulary", "type": "Any"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "vocabulary_", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "r1", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "from_sequence", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "JUNK_FOOD_DOCS", "type": "Tuple[str, str, str, str, str, str]"}, {"lineNumber": 35, "col_offset": 7, "nodeName": "container", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "_hasher", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "assert_estimator_equal", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "vect_ref", "type": "Any"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "vect", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "X_da", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "Array", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "map_blocks", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "result", "type": "Any"}, {"lineNumber": 50, "col_offset": 42, "nodeName": "expected", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "from_sequence", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "JUNK_FOOD_DOCS", "type": "Tuple[str, str, str, str, str, str]"}, {"lineNumber": 56, "col_offset": 7, "nodeName": "container", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "HashingVectorizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "HashingVectorizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "assert_estimator_equal", "type": "Any"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "vect_ref", "type": "Any"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "vect", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "X_da", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "Array", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "map_blocks", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "result", "type": "Any"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "expected", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "HashingVectorizer", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "HashingVectorizer", "type": "Any"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "JUNK_FOOD_DOCS", "type": "Tuple[str, str, str, str, str, str]"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "JUNK_FOOD_DOCS", "type": "Tuple[str, str, str, str, str, str]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "assert_estimator_equal", "type": "Any"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "a", "type": "Any"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "HashingVectorizer", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "from_sequence", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "JUNK_FOOD_DOCS", "type": "Tuple[str, str, str, str, str, str]"}, {"lineNumber": 96, "col_offset": 9, "nodeName": "to_dataframe", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "HashingVectorizer", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "from_pandas", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "X", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "_meta", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 117, "col_offset": 9, "nodeName": "CountVectorizer", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "from_sequence", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "JUNK_FOOD_DOCS", "type": "Tuple[str, str, str, str, str, str]"}, {"lineNumber": 119, "col_offset": 9, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "JUNK_FOOD_DOCS", "type": "Tuple[str, str, str, str, str, str]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "vocabulary", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "vocabulary_", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "m1", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "r1", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "vocabulary", "type": "None"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "CountVectorizer", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "client", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "client", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "r2", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "r2", "type": "Any"}, {"lineNumber": 140, "col_offset": 9, "nodeName": "client", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "exclude", "type": "Set[str]"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "give_vocabulary", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "r3", "type": "Any"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "give_vocabulary", "type": "Any"}, {"lineNumber": 165, "col_offset": 9, "nodeName": "fit", "type": "Any"}, {"lineNumber": 165, "col_offset": 63, "nodeName": "JUNK_FOOD_DOCS", "type": "Tuple[str, str, str, str, str, str]"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "m1", "type": "Any"}, {"lineNumber": 167, "col_offset": 9, "nodeName": "transform", "type": "Any"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "JUNK_FOOD_DOCS", "type": "Tuple[str, str, str, str, str, str]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "from_sequence", "type": "Any"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "JUNK_FOOD_DOCS", "type": "Tuple[str, str, str, str, str, str]"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "client", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "r2", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "db", "type": "Any"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "container", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "values", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "vect", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "vect_ref", "type": "Any"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "compute", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "vect", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "da", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "compute", "type": "Any"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "X_da", "type": "Any"}, {"lineNumber": 48, "col_offset": 58, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "X_ref", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "db", "type": "Any"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "container", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "values", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "text", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "text", "type": "module"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "vect_ref", "type": "Any"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "compute", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "vect", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "da", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "compute", "type": "Any"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "X_da", "type": "Any"}, {"lineNumber": 72, "col_offset": 58, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "X_ref", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "text", "type": "module"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "a", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 89, "col_offset": 49, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "text", "type": "module"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "db", "type": "Any"}, {"lineNumber": 96, "col_offset": 9, "nodeName": "b", "type": "Any"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "transform", "type": "Any"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "df", "type": "Any"}, {"lineNumber": 101, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "transform", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "values", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "text", "type": "module"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "dd", "type": "Any"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "Series", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "vect", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "result", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "_meta", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "_meta", "type": "Any"}, {"lineNumber": 117, "col_offset": 9, "nodeName": "text", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "db", "type": "Any"}, {"lineNumber": 119, "col_offset": 9, "nodeName": "m1", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "m1", "type": "Any"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "CountVectorizer", "type": "Any"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "transform", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "JUNK_FOOD_DOCS", "type": "Tuple[str, str, str, str, str, str]"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "text", "type": "module"}, {"lineNumber": 128, "col_offset": 68, "nodeName": "vocabulary", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "Client", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "dummy_context", "type": "Any"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "transform", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 138, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "exclude", "type": "Set[str]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assert_estimator_equal", "type": "Any"}, {"lineNumber": 147, "col_offset": 31, "nodeName": "m1", "type": "Any"}, {"lineNumber": 147, "col_offset": 35, "nodeName": "m2", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "r2", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "Array", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "_meta", "type": "Any"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "transform", "type": "Any"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "r3", "type": "Any"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "Array", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "_meta", "type": "Any"}, {"lineNumber": 154, "col_offset": 36, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "r4", "type": "Any"}, {"lineNumber": 167, "col_offset": 9, "nodeName": "m1", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "db", "type": "Any"}, {"lineNumber": 170, "col_offset": 9, "nodeName": "Client", "type": "Any"}, {"lineNumber": 171, "col_offset": 9, "nodeName": "remote_vocabulary", "type": "Any"}, {"lineNumber": 171, "col_offset": 31, "nodeName": "scatter", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "CountVectorizer", "type": "Any"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "transform", "type": "Any"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "r2", "type": "Any"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "Array", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "_meta", "type": "Any"}, {"lineNumber": 178, "col_offset": 36, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "CountVectorizer", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "vocabulary_", "type": "Any"}, {"lineNumber": 185, "col_offset": 32, "nodeName": "remote_vocabulary", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "to_dataframe", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 48, "col_offset": 58, "nodeName": "X_da", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "to_dataframe", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "feature_extraction", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "feature_extraction", "type": "module"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 72, "col_offset": 39, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 72, "col_offset": 58, "nodeName": "X_da", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "feature_extraction", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "feature_extraction", "type": "module"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "X_a", "type": "Any"}, {"lineNumber": 89, "col_offset": 49, "nodeName": "X_b", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "feature_extraction", "type": "module"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "vect", "type": "Any"}, {"lineNumber": 101, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "vect", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "df", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "feature_extraction", "type": "module"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "pd", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 117, "col_offset": 9, "nodeName": "feature_extraction", "type": "Any"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "text", "type": "Any"}, {"lineNumber": 123, "col_offset": 72, "nodeName": "vocabulary", "type": "Any"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "m1", "type": "Any"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "feature_extraction", "type": "module"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "m2", "type": "Any"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "m2", "type": "Any"}, {"lineNumber": 147, "col_offset": 47, "nodeName": "exclude", "type": "Set[str]"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "da", "type": "Any"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "r2", "type": "Any"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 150, "col_offset": 38, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 150, "col_offset": 52, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "m2", "type": "Any"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "da", "type": "Any"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "r3", "type": "Any"}, {"lineNumber": 154, "col_offset": 36, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 155, "col_offset": 38, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 155, "col_offset": 52, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 158, "col_offset": 34, "nodeName": "b", "type": "Any"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "r4", "type": "Any"}, {"lineNumber": 159, "col_offset": 34, "nodeName": "Array", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "_meta", "type": "Any"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 165, "col_offset": 9, "nodeName": "CountVectorizer", "type": "Any"}, {"lineNumber": 171, "col_offset": 31, "nodeName": "client", "type": "Any"}, {"lineNumber": 171, "col_offset": 47, "nodeName": "vocabulary", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "text", "type": "module"}, {"lineNumber": 173, "col_offset": 23, "nodeName": "remote_vocabulary", "type": "Any"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "m", "type": "Any"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "da", "type": "Any"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "r2", "type": "Any"}, {"lineNumber": 178, "col_offset": 36, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 179, "col_offset": 52, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "text", "type": "module"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "remote_vocabulary", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "m", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "vect", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "blocks", "type": "Any"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "dask_ml", "type": "module"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "blocks", "type": "Any"}, {"lineNumber": 72, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "dask_ml", "type": "module"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "dask_ml", "type": "module"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "dask_ml", "type": "module"}, {"lineNumber": 117, "col_offset": 9, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "feature_extraction", "type": "Any"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "dask_ml", "type": "module"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 38, "nodeName": "r1", "type": "Any"}, {"lineNumber": 154, "col_offset": 36, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 38, "nodeName": "r1", "type": "Any"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "m2", "type": "Any"}, {"lineNumber": 159, "col_offset": 34, "nodeName": "da", "type": "Any"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "r4", "type": "Any"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 161, "col_offset": 42, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 161, "col_offset": 56, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 165, "col_offset": 9, "nodeName": "text", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "feature_extraction", "type": "module"}, {"lineNumber": 178, "col_offset": 36, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "r1", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "feature_extraction", "type": "module"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "to_dataframe", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "X_da", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "to_dataframe", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "X_da", "type": "Any"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 150, "col_offset": 52, "nodeName": "compute", "type": "Any"}, {"lineNumber": 155, "col_offset": 52, "nodeName": "compute", "type": "Any"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 42, "nodeName": "r1", "type": "Any"}, {"lineNumber": 165, "col_offset": 9, "nodeName": "feature_extraction", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "dask_ml", "type": "module"}, {"lineNumber": 179, "col_offset": 52, "nodeName": "compute", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "dask_ml", "type": "module"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 150, "col_offset": 52, "nodeName": "r2", "type": "Any"}, {"lineNumber": 155, "col_offset": 52, "nodeName": "r3", "type": "Any"}, {"lineNumber": 161, "col_offset": 56, "nodeName": "compute", "type": "Any"}, {"lineNumber": 165, "col_offset": 9, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 179, "col_offset": 52, "nodeName": "r2", "type": "Any"}, {"lineNumber": 161, "col_offset": 56, "nodeName": "r4", "type": "Any"}]