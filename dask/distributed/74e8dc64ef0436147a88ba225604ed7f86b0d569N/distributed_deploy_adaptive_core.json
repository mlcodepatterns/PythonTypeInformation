[{"lineNumber": 12, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 12, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 120, "col_offset": 53, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 127, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 138, "col_offset": 52, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "inf", "type": "float"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "minimum", "type": "int"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "minimum", "type": "int"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "maximum", "type": "int"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "maximum", "type": "int"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "wait_count", "type": "int"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "wait_count", "type": "int"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "interval", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "periodic_callback", "type": "None"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "interval", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "close_counts", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "_adapting", "type": "bool"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "log", "type": "collections.deque[Any]"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "periodic_callback", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "n", "type": "int"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "plan", "type": "Set[nothing]"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "plan", "type": "Set[nothing]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "requested", "type": "Set[nothing]"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "requested", "type": "Set[nothing]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "observed", "type": "Set[nothing]"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "observed", "type": "Set[nothing]"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "_adapting", "type": "bool"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "_adapting", "type": "bool"}, {"lineNumber": 76, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "math", "type": "module"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 81, "col_offset": 64, "nodeName": "interval", "type": "str"}, {"lineNumber": 81, "col_offset": 78, "nodeName": "interval", "type": "str"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "periodic_callback", "type": "tornado.ioloop.PeriodicCallback"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "plan", "type": "Set[nothing]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "requested", "type": "Set[nothing]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "observed", "type": "Set[nothing]"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 105, "col_offset": 52, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "periodic_callback", "type": "None"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "n", "type": "int"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "maximum", "type": "int"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "maximum", "type": "int"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "n", "type": "int"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "minimum", "type": "int"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "minimum", "type": "int"}, {"lineNumber": 138, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "target", "type": "int"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "target", "type": "int"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "recommendations", "type": "Dict[Any, Any]"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "status", "type": "Any"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "OSError", "type": "Type[OSError]"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "_adapting", "type": "bool"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "parse_timedelta", "type": "Any"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "interval", "type": "str"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "PeriodicCallback", "type": "Type[tornado.ioloop.PeriodicCallback]"}, {"lineNumber": 91, "col_offset": 54, "nodeName": "adapt", "type": "Callable[[], None]"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "collections", "type": "module"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "collections", "type": "module"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "stop", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "observed", "type": "Set[nothing]"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "target", "type": "int"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "target", "type": "Callable[[], int]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "plan", "type": "Set[nothing]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "target", "type": "int"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "status", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "status", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "status", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "start", "type": "Any"}, {"lineNumber": 91, "col_offset": 54, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 91, "col_offset": 66, "nodeName": "interval", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "add_callback", "type": "Any"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "f", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "periodic_callback", "type": "Any"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "close_counts", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 26, "nodeName": "plan", "type": "Set[nothing]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 152, "col_offset": 41, "nodeName": "target", "type": "int"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "target", "type": "int"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "not_yet_arrived", "type": "Set[nothing]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "to_close", "type": "Set[Any]"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "not_yet_arrived", "type": "Set[nothing]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "firmly_close", "type": "Set[Any]"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "w", "type": "Any"}, {"lineNumber": 165, "col_offset": 21, "nodeName": "to_close", "type": "Set[Any]"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "k", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "firmly_close", "type": "Set[Any]"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "safe_target", "type": "Callable[[], int]"}, {"lineNumber": 192, "col_offset": 36, "nodeName": "recommendations", "type": "Callable[[int], Dict[Any, Any]]"}, {"lineNumber": 192, "col_offset": 57, "nodeName": "target", "type": "int"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "recommendations", "type": "Dict[Any, Any]"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "recommendations", "type": "Dict[Any, Any]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "stop", "type": "Callable[[], Any]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "periodic_callback", "type": "Any"}, {"lineNumber": 91, "col_offset": 66, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "loop", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "add_callback", "type": "Any"}, {"lineNumber": 95, "col_offset": 46, "nodeName": "f", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "close_counts", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "plan", "type": "Set[nothing]"}, {"lineNumber": 155, "col_offset": 30, "nodeName": "requested", "type": "Set[nothing]"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "observed", "type": "Set[nothing]"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "target", "type": "int"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "L", "type": "List[Any]"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "close_counts", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 192, "col_offset": 36, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "log", "type": "collections.deque[Any]"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "scale_up", "type": "Any"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "scale_down", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 205, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 205, "col_offset": 66, "nodeName": "e", "type": "OSError"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 32, "nodeName": "L", "type": "List[Any]"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "close_counts", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 167, "col_offset": 43, "nodeName": "wait_count", "type": "int"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 195, "col_offset": 33, "nodeName": "time", "type": "Any"}, {"lineNumber": 195, "col_offset": 41, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 195, "col_offset": 46, "nodeName": "recommendations", "type": "Dict[Any, Any]"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 201, "col_offset": 38, "nodeName": "recommendations", "type": "Dict[Any, Any]"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 203, "col_offset": 40, "nodeName": "recommendations", "type": "Dict[Any, Any]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "current", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "plan", "type": "Set[nothing]"}, {"lineNumber": 160, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "to_close", "type": "Set[Any]"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "workers_to_close", "type": "Callable[[int], List[Any]]"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "to_close", "type": "Set[Any]"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 166, "col_offset": 34, "nodeName": "w", "type": "Any"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "close_counts", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 167, "col_offset": 43, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "add", "type": "Callable"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "w", "type": "Any"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "firmly_close", "type": "Set[Any]"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "k", "type": "Any"}, {"lineNumber": 171, "col_offset": 49, "nodeName": "to_close", "type": "Set[Any]"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "close_counts", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 175, "col_offset": 53, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 175, "col_offset": 58, "nodeName": "firmly_close", "type": "Set[Any]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "IOLoop", "type": "Type[tornado.ioloop.IOLoop]"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 161, "col_offset": 55, "nodeName": "target", "type": "int"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 167, "col_offset": 37, "nodeName": "w", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "firmly_close", "type": "Set[Any]"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "self", "type": "AdaptiveCore"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "k", "type": "Any"}]