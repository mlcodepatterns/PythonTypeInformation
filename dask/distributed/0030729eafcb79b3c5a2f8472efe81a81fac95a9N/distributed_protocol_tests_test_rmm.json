[{"lineNumber": 4, "col_offset": 0, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 5, "col_offset": 0, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "rmm", "type": "Any"}, {"lineNumber": 4, "col_offset": 8, "nodeName": "importorskip", "type": "Any"}, {"lineNumber": 5, "col_offset": 7, "nodeName": "importorskip", "type": "Any"}, {"lineNumber": 6, "col_offset": 6, "nodeName": "importorskip", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "x_np", "type": "Any"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "y_np", "type": "Any"}, {"lineNumber": 4, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 5, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 6, "col_offset": 6, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "arange", "type": "Any"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "size", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "DeviceBuffer", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 17, "col_offset": 19, "nodeName": "x_np", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "header", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "frames", "type": "Any"}, {"lineNumber": 19, "col_offset": 21, "nodeName": "serialize", "type": "Callable[..., Optional[Tuple[Any, Any]]]"}, {"lineNumber": 19, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "header", "type": "Any"}, {"lineNumber": 20, "col_offset": 28, "nodeName": "frames", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "copy_to_host", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "all", "type": "Any"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 12, "col_offset": 19, "nodeName": "rmm", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "skip", "type": "Any"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "rmm", "type": "Any"}, {"lineNumber": 16, "col_offset": 30, "nodeName": "size", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 19, "col_offset": 46, "nodeName": "serializers", "type": "Any"}, {"lineNumber": 20, "col_offset": 50, "nodeName": "serializers", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 23, "col_offset": 7, "nodeName": "serializers", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "as_cuda_array", "type": "Any"}, {"lineNumber": 17, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "header", "type": "Any"}, {"lineNumber": 26, "col_offset": 9, "nodeName": "serializers", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "x_np", "type": "Any"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "y_np", "type": "Any"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 25, "col_offset": 62, "nodeName": "f", "type": "Any"}, {"lineNumber": 25, "col_offset": 67, "nodeName": "frames", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "header", "type": "Any"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 28, "col_offset": 30, "nodeName": "f", "type": "Any"}, {"lineNumber": 28, "col_offset": 33, "nodeName": "memoryview", "type": "Type[memoryview]"}, {"lineNumber": 28, "col_offset": 49, "nodeName": "f", "type": "Any"}, {"lineNumber": 28, "col_offset": 54, "nodeName": "frames", "type": "Any"}]