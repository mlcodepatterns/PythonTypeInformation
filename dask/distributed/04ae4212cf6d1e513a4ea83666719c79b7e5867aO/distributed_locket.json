[{"lineNumber": 72, "col_offset": 0, "nodeName": "lock_file", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "_create_lock_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "_acquire_non_blocking", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "_lock_file_blocking", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "_lock_file_non_blocking", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "_unlock_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "_locks_lock", "type": "threading.Lock"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "_locks", "type": "weakref.WeakValueDictionary[nothing, nothing]"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "acquire", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "release", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "acquire", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "release", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "acquire", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "release", "type": "Callable[[Any], Any]"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "acquire", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "release", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "__enter__", "type": "Callable[[Any], Any]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "__exit__", "type": "Callable[..., Any]"}, {"lineNumber": 16, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "_lock_file_blocking_available", "type": "bool"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "Lock", "type": "Type[threading.Lock]"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "WeakValueDictionary", "type": "Type[weakref.WeakValueDictionary[Any, Any]]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "thread_lock", "type": "_ThreadLock"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "file_lock", "type": "_LockFile"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "start_time", "type": "float"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "_lock_file_non_blocking", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "_unlock_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "threading", "type": "module"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "weakref", "type": "module"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "acquire", "type": "Callable[..., bool]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "lock", "type": "None"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "_Locker", "type": "Type[_Locker]"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "lock", "type": "_LockSet"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "_ThreadLock", "type": "Type[_ThreadLock]"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "path", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "_LockFile", "type": "Type[_LockFile]"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "path", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "_LockSet", "type": "Type[_LockSet]"}, {"lineNumber": 95, "col_offset": 7, "nodeName": "retry_period", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "retry_period", "type": "float"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "success", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "success", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "_locks", "type": "Any"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "locks", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "acquired_locks", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "lock", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "_path", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "path", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "_lock", "type": "threading.Lock"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "_path", "type": "Any"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "path", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "_file", "type": "None"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "_thread_lock", "type": "threading.Lock"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "_file", "type": "None"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "_lock", "type": "Any"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "lock", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "_timeout", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "timeout", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "_retry_period", "type": "Any"}, {"lineNumber": 185, "col_offset": 29, "nodeName": "retry_period", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "self", "type": "_Locker"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "_kernel32", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "_WinAPI_LockFile", "type": "Any"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "LockFile", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "restype", "type": "Type[ctypes.c_long]"}, {"lineNumber": 26, "col_offset": 35, "nodeName": "BOOL", "type": "Type[ctypes.c_long]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "argtypes", "type": "List[Union[Type[ctypes.c_void_p], Type[ctypes.c_ulong]]]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "_WinAPI_UnlockFile", "type": "Any"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "UnlockFile", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "restype", "type": "Type[ctypes.c_long]"}, {"lineNumber": 30, "col_offset": 37, "nodeName": "BOOL", "type": "Type[ctypes.c_long]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "argtypes", "type": "List[Union[Type[ctypes.c_void_p], Type[ctypes.c_ulong]]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "_lock_file_blocking_available", "type": "bool"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "flock", "type": "Callable[[Union[int, _types.HasFileno], int], None]"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "LOCK_EX", "type": "int"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "flock", "type": "Callable[[Union[int, _types.HasFileno], int], None]"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "LOCK_UN", "type": "int"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "_locks_lock", "type": "threading.Lock"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "path", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "lock", "type": "None"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "lock", "type": "_LockSet"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "lock", "type": "_LockSet"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "release", "type": "Callable[[], None]"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "thread_lock", "type": "_ThreadLock"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "file_lock", "type": "_LockFile"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "time", "type": "module"}, {"lineNumber": 100, "col_offset": 18, "nodeName": "acquire", "type": "Callable[[], Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "_LockSet"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "lock", "type": "Any"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "_locks", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "_locks", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "_ThreadLock"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "_ThreadLock"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "Lock", "type": "Type[threading.Lock]"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "timeout", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "release", "type": "Callable[[], None]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "_LockFile"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "_LockFile"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "_LockFile"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "Lock", "type": "Type[threading.Lock]"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "_file", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "_file", "type": "file"}, {"lineNumber": 161, "col_offset": 31, "nodeName": "_lock_file_blocking_available", "type": "bool"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "_unlock_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "_file", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "close", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "_LockFile"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "_Locker"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "_Locker"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "_Locker"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "acquire", "type": "Any"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "_timeout", "type": "Any"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "_retry_period", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "release", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "acquire", "type": "Callable[[], Any]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "release", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "WinDLL", "type": "Any"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "_kernel32", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "_WinAPI_LockFile", "type": "Any"}, {"lineNumber": 26, "col_offset": 35, "nodeName": "wintypes", "type": "module"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "_WinAPI_LockFile", "type": "Any"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "_kernel32", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "_WinAPI_UnlockFile", "type": "Any"}, {"lineNumber": 30, "col_offset": 37, "nodeName": "wintypes", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "_WinAPI_UnlockFile", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "fcntl", "type": "module"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "fileno", "type": "Any"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "fcntl", "type": "module"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "flock", "type": "Callable[[Union[int, _types.HasFileno], int], None]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "fcntl", "type": "module"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "fileno", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "fcntl", "type": "module"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "_locks", "type": "weakref.WeakValueDictionary[nothing, nothing]"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "_create_lock_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "path", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "_locks", "type": "weakref.WeakValueDictionary[nothing, nothing]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "_locks_lock", "type": "threading.Lock"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "self", "type": "_LockSet"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "acquired_lock", "type": "nothing"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "self", "type": "_LockSet"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "release", "type": "Any"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "threading", "type": "module"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "acquire", "type": "Callable[..., bool]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "_acquire_non_blocking", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "_lock", "type": "threading.Lock"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "threading", "type": "module"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "self", "type": "_LockFile"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "self", "type": "_LockFile"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "_path", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "timeout", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "_lock_file_blocking", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 32, "nodeName": "_file", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "_acquire_non_blocking", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "self", "type": "_LockFile"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "_file", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "_lock", "type": "Any"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "self", "type": "_Locker"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "self", "type": "_Locker"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "_lock", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "_Locker"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "_Locker"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "ctypes", "type": "module"}, {"lineNumber": 26, "col_offset": 35, "nodeName": "ctypes", "type": "module"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "HANDLE", "type": "Type[ctypes.c_void_p]"}, {"lineNumber": 30, "col_offset": 37, "nodeName": "ctypes", "type": "module"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "HANDLE", "type": "Type[ctypes.c_void_p]"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "_WinAPI_LockFile", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "err", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "_WinAPI_UnlockFile", "type": "Any"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "file_", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "fcntl", "type": "module"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "fileno", "type": "Any"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "LOCK_EX", "type": "int"}, {"lineNumber": 56, "col_offset": 56, "nodeName": "LOCK_NB", "type": "int"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "file_", "type": "Any"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "path", "type": "Any"}, {"lineNumber": 103, "col_offset": 14, "nodeName": "timeout", "type": "Any"}, {"lineNumber": 104, "col_offset": 43, "nodeName": "timeout", "type": "Any"}, {"lineNumber": 105, "col_offset": 18, "nodeName": "LockError", "type": "Type[LockError]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "sleep", "type": "Callable[[Union[float, int]], None]"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "retry_period", "type": "Union[Any, float]"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "acquire", "type": "Any"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "timeout", "type": "Any"}, {"lineNumber": 118, "col_offset": 38, "nodeName": "retry_period", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "lock", "type": "Any"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 121, "col_offset": 42, "nodeName": "acquired_locks", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "lock", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "_lock", "type": "threading.Lock"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "timeout", "type": "Any"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "retry_period", "type": "Any"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "_path", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "_ThreadLock"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "self", "type": "_LockFile"}, {"lineNumber": 162, "col_offset": 32, "nodeName": "self", "type": "_LockFile"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "timeout", "type": "Any"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "retry_period", "type": "Any"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "_path", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "_LockFile"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "_Locker"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "_Locker"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "wintypes", "type": "module"}, {"lineNumber": 27, "col_offset": 64, "nodeName": "DWORD", "type": "Type[ctypes.c_ulong]"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "wintypes", "type": "module"}, {"lineNumber": 31, "col_offset": 66, "nodeName": "DWORD", "type": "Type[ctypes.c_ulong]"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "get_osfhandle", "type": "Callable[[int], int]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "get_last_error", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "err", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "get_osfhandle", "type": "Callable[[int], int]"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "file_", "type": "Any"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "fcntl", "type": "module"}, {"lineNumber": 56, "col_offset": 56, "nodeName": "fcntl", "type": "module"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "start_time", "type": "float"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 105, "col_offset": 55, "nodeName": "path", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "time", "type": "module"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "lock", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "acquired_locks", "type": "List[Any]"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "release", "type": "nothing"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "self", "type": "_ThreadLock"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "self", "type": "_ThreadLock"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "self", "type": "_LockFile"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "ctypes", "type": "module"}, {"lineNumber": 27, "col_offset": 64, "nodeName": "wintypes", "type": "module"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "ctypes", "type": "module"}, {"lineNumber": 31, "col_offset": 66, "nodeName": "wintypes", "type": "module"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "msvcrt", "type": "module"}, {"lineNumber": 36, "col_offset": 56, "nodeName": "fileno", "type": "Any"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "ctypes", "type": "module"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "WinError", "type": "Any"}, {"lineNumber": 43, "col_offset": 42, "nodeName": "err", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "msvcrt", "type": "module"}, {"lineNumber": 47, "col_offset": 52, "nodeName": "fileno", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "acquired_lock", "type": "nothing"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "acquire", "type": "Callable[..., bool]"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "_lock_file_non_blocking", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 56, "nodeName": "_file", "type": "Any"}, {"lineNumber": 27, "col_offset": 64, "nodeName": "ctypes", "type": "module"}, {"lineNumber": 31, "col_offset": 66, "nodeName": "ctypes", "type": "module"}, {"lineNumber": 36, "col_offset": 56, "nodeName": "file_", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "ctypes", "type": "module"}, {"lineNumber": 47, "col_offset": 52, "nodeName": "file_", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "time", "type": "module"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "_lock", "type": "threading.Lock"}, {"lineNumber": 165, "col_offset": 56, "nodeName": "self", "type": "_LockFile"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "self", "type": "_ThreadLock"}]