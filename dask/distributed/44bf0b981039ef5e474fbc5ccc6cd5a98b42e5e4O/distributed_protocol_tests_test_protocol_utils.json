[{"lineNumber": 41, "col_offset": 0, "nodeName": "test_pack_frames", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "data", "type": "bytes"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "expected", "type": "List[bytes]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "i", "type": "Any"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "writeables", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "frames", "type": "List[bytes]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "b", "type": "bytes"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "frames2", "type": "List[memoryview]"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "writeable", "type": "Any"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "merge_frames", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "header", "type": "Dict[str, Any]"}, {"lineNumber": 28, "col_offset": 34, "nodeName": "frames", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "join", "type": "Callable[[Iterable[bytes]], bytes]"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "frames", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "data", "type": "bytes"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 38, "col_offset": 46, "nodeName": "expected", "type": "List[bytes]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "pack_frames", "type": "Callable[[Any], bytes]"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "frames", "type": "List[bytes]"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "b", "type": "bytes"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "bytes", "type": "Type[bytes]"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "unpack_frames", "type": "Callable[[Any], List[memoryview]]"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "b", "type": "bytes"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "frames", "type": "List[bytes]"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "frames2", "type": "List[memoryview]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "data", "type": "bytes"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "map", "type": "Callable"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "is_writeable", "type": "Callable[[Any], bool]"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "result", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "e", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "expected", "type": "List[bytes]"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "data", "type": "bytes"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "i", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "r", "type": "Any"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "e", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "writeables", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 71, "nodeName": "e", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "map", "type": "Callable"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "ensure_bytes", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "result", "type": "Any"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "i", "type": "Any"}, {"lineNumber": 37, "col_offset": 47, "nodeName": "header", "type": "Dict[str, Any]"}]