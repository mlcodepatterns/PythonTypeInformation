[{"lineNumber": 36, "col_offset": 0, "nodeName": "test_fractional_timer", "type": "Callable[[], Any]"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "test_gc_diagnosis_cpu_time", "type": "Callable[[], Any]"}, {"lineNumber": 115, "col_offset": 0, "nodeName": "test_gc_diagnosis_rss_win", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "make_refcycle", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "timer", "type": "RandomTimer"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "ft", "type": "distributed.utils_perf.FractionalTimer"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 72, "col_offset": 7, "nodeName": "callbacks", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "diag", "type": "distributed.utils_perf.GCDiagnosis"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "N_SAMPLES", "type": "int"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "diag", "type": "distributed.utils_perf.GCDiagnosis"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "last", "type": "float"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "timings", "type": "List[float]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "durations", "type": "Tuple[List[nothing], List[nothing]]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "i_durations", "type": "itertools.cycle[nothing]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "random", "type": "random.Random"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "dt", "type": "float"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "last", "type": "float"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "dt", "type": "float"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "last", "type": "float"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "running_fraction", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "RandomTimer", "type": "Type[RandomTimer]"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "FractionalTimer", "type": "Type[distributed.utils_perf.FractionalTimer]"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "N", "type": "int"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "running_fraction", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "start_timing", "type": "Callable[[], None]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "stop_timing", "type": "Callable[[], None]"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "running_fraction", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "check_fraction", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "timer", "type": "RandomTimer"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "ft", "type": "distributed.utils_perf.FractionalTimer"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "disable_gc_diagnosis", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 7, "nodeName": "gc", "type": "module"}, {"lineNumber": 75, "col_offset": 84, "nodeName": "sio", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "GCDiagnosis", "type": "Type[distributed.utils_perf.GCDiagnosis]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "diag", "type": "distributed.utils_perf.GCDiagnosis"}, {"lineNumber": 90, "col_offset": 60, "nodeName": "sio", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "lines", "type": "Any"}, {"lineNumber": 104, "col_offset": 60, "nodeName": "sio", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "GCDiagnosis", "type": "Type[distributed.utils_perf.GCDiagnosis]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "l", "type": "List[Union[str, list]]"}, {"lineNumber": 124, "col_offset": 46, "nodeName": "sio", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "lines", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "RandomTimer"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "RandomTimer"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "RandomTimer"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "RandomTimer"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "cycle", "type": "Type[itertools.cycle[Any]]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "RandomTimer"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "Random", "type": "Type[random.Random]"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "expovariate", "type": "Callable[[Union[float, int]], float]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "RandomTimer"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "last", "type": "float"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 32, "col_offset": 54, "nodeName": "dt", "type": "float"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "self", "type": "RandomTimer"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "ft", "type": "distributed.utils_perf.FractionalTimer"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "actual", "type": "Any"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "N", "type": "int"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "timer", "type": "RandomTimer"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "start_timing", "type": "Callable[[], None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "stop_timing", "type": "Callable[[], None]"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "timings", "type": "List[nothing]"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "N", "type": "int"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "ft", "type": "distributed.utils_perf.FractionalTimer"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "ft", "type": "distributed.utils_perf.FractionalTimer"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "ft", "type": "distributed.utils_perf.FractionalTimer"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "timings", "type": "List[nothing]"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "ft", "type": "distributed.utils_perf.FractionalTimer"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "N", "type": "int"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "start_timing", "type": "Callable[[], None]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "stop_timing", "type": "Callable[[], None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "check_fraction", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "timer", "type": "RandomTimer"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "ft", "type": "distributed.utils_perf.FractionalTimer"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 41, "nodeName": "callbacks", "type": "Any"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "captured_logger", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "disable", "type": "Callable[[], None]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "collect", "type": "Callable[..., int]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "enable", "type": "Any"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "enable_gc_diagnosis_and_log", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "diag", "type": "distributed.utils_perf.GCDiagnosis"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "N_SAMPLES", "type": "int"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "collect", "type": "Callable[..., int]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "splitlines", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "match", "type": "Callable"}, {"lineNumber": 104, "col_offset": 9, "nodeName": "enable_gc_diagnosis_and_log", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "diag", "type": "distributed.utils_perf.GCDiagnosis"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "t1", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "dt", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "l", "type": "List[Union[str, list]]"}, {"lineNumber": 124, "col_offset": 9, "nodeName": "enable_gc_diagnosis_and_log", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "diag", "type": "distributed.utils_perf.GCDiagnosis"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "make_refcycle", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "collect", "type": "Callable[..., int]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "make_refcycle", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "collect", "type": "Callable[..., int]"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "splitlines", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "match", "type": "Callable"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "itertools", "type": "module"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "random", "type": "module"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "random", "type": "random.Random"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "timings", "type": "List[float]"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "self", "type": "RandomTimer"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "approx", "type": "Any"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "expected", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "ft", "type": "distributed.utils_perf.FractionalTimer"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "ft", "type": "distributed.utils_perf.FractionalTimer"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "timer", "type": "RandomTimer"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "timer", "type": "RandomTimer"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "N", "type": "int"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "ft", "type": "distributed.utils_perf.FractionalTimer"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "ft", "type": "distributed.utils_perf.FractionalTimer"}, {"lineNumber": 73, "col_offset": 41, "nodeName": "gc", "type": "module"}, {"lineNumber": 75, "col_offset": 57, "nodeName": "level", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "gc", "type": "module"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "gc", "type": "module"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "diag", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "sio", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "disable", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "enable", "type": "Callable[[], None]"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "diag", "type": "distributed.utils_perf.GCDiagnosis"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "collect", "type": "Callable[..., int]"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "gc", "type": "module"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "lines", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "re", "type": "module"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "lines", "type": "Any"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "N_SAMPLES", "type": "int"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "thread_time", "type": "Callable[[], Any]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "collect", "type": "Callable[..., int]"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "t1", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "run_for", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "dt", "type": "Any"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "nbytes", "type": "int"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "l", "type": "List[Union[str, list]]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "gc", "type": "module"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "gc", "type": "module"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "lines", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "re", "type": "module"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "lines", "type": "Any"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "self", "type": "RandomTimer"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "RandomTimer"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "durations", "type": "Tuple[List[nothing], List[nothing]]"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "diag", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "gc", "type": "module"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "gc", "type": "module"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "sio", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "diag", "type": "distributed.utils_perf.GCDiagnosis"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "gc", "type": "module"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "thread_time", "type": "Callable[[], Any]"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "thread_time", "type": "Callable[[], Any]"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "sio", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "sio", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "RandomTimer"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "durations", "type": "Tuple[List[nothing], List[nothing]]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "sio", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "sio", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "next", "type": "Callable"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "i_durations", "type": "itertools.cycle[nothing]"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "timer", "type": "RandomTimer"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "N", "type": "int"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "durations", "type": "Tuple[List[nothing], List[nothing]]"}, {"lineNumber": 45, "col_offset": 42, "nodeName": "durations", "type": "Tuple[List[nothing], List[nothing]]"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "self", "type": "RandomTimer"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "timer", "type": "RandomTimer"}, {"lineNumber": 45, "col_offset": 36, "nodeName": "N", "type": "int"}, {"lineNumber": 45, "col_offset": 42, "nodeName": "timer", "type": "RandomTimer"}, {"lineNumber": 45, "col_offset": 62, "nodeName": "N", "type": "int"}]