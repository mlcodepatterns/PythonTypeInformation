[{"lineNumber": 26, "col_offset": 4, "nodeName": "gzip_decompress", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "gzip_compress", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "isqueue", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "invalidate_caches", "type": "Callable[[], Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "cache_from_source", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "iscoroutinefunction", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "PYPY", "type": "bool"}, {"lineNumber": 87, "col_offset": 0, "nodeName": "WINDOWS", "type": "bool"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "reload", "type": "Callable[[module], module]"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "reload", "type": "Callable[[module], module]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "unicode", "type": "Type[unicode]"}, {"lineNumber": 16, "col_offset": 14, "nodeName": "unicode", "type": "Type[unicode]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "PY2", "type": "bool"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "PY3", "type": "bool"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "ConnectionRefusedError", "type": "Type[OSError]"}, {"lineNumber": 19, "col_offset": 29, "nodeName": "OSError", "type": "Type[OSError]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "FileExistsError", "type": "Type[OSError]"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "OSError", "type": "Type[OSError]"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "logging_names", "type": "Dict[Union[int, str], Union[str, int]]"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "_levelNames", "type": "Dict[Union[int, str], Union[str, int]]"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 97, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 102, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 8, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "f", "type": "gzip.GzipFile"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "bio", "type": "_io.BytesIO"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "f", "type": "gzip.GzipFile"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "result", "type": "str"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "result", "type": "str"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "logging", "type": "module"}, {"lineNumber": 59, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 86, "col_offset": 7, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "platform", "type": "str"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "JSONDecodeError", "type": "Type[ValueError]"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "__call__", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "detach", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "peek", "type": "Callable[[Any], Any]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "alive", "type": "Callable[[Any], Any]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "atexit", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "atexit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "__repr__", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "_select_for_exit", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "_exitfunc", "type": "Callable[[Any], Any]"}, {"lineNumber": 8, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "GzipFile", "type": "Type[gzip.GzipFile]"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "close", "type": "Callable[[], Any]"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "BytesIO", "type": "Type[_io.BytesIO]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "GzipFile", "type": "Type[gzip.GzipFile]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "write", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "b", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "close", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "seek", "type": "Callable[..., int]"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "ext", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "path", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 59, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "sys", "type": "module"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "__slots__", "type": "Tuple[()]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "_registry", "type": "Dict[Any, Any]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "_shutdown", "type": "bool"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "_index_iter", "type": "Iterator[int]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "_dirty", "type": "bool"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "_registered_with_atexit", "type": "bool"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "gzip", "type": "module"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "f", "type": "gzip.GzipFile"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "f", "type": "gzip.GzipFile"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "gzip", "type": "module"}, {"lineNumber": 34, "col_offset": 34, "nodeName": "bio", "type": "_io.BytesIO"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "f", "type": "gzip.GzipFile"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "f", "type": "gzip.GzipFile"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "bio", "type": "_io.BytesIO"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "bio", "type": "_io.BytesIO"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "o", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "o", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "__module__", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 86, "col_offset": 7, "nodeName": "python_implementation", "type": "Callable[[], str]"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "count", "type": "Callable[..., Iterator[int]]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "__slots__", "type": "Tuple[str, str, str, str, str, str]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "info", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "weakref", "type": "_weakref.ReferenceType[nothing]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "func", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "func", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "kwargs", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "atexit", "type": "bool"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "index", "type": "int"}, {"lineNumber": 149, "col_offset": 35, "nodeName": "info", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "_dirty", "type": "bool"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "info", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "info", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "info", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "info", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "info", "type": "Any"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "info", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "info", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "L", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "reenable_gc", "type": "bool"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "BytesIO", "type": "Type[_io.BytesIO]"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "b", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "o", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 86, "col_offset": 7, "nodeName": "platform", "type": "module"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "_registered_with_atexit", "type": "bool"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "_registered_with_atexit", "type": "bool"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "_Info", "type": "Type[Any]"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "info", "type": "Any"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "ref", "type": "Type[_weakref.ReferenceType[Any]]"}, {"lineNumber": 143, "col_offset": 31, "nodeName": "obj", "type": "Any"}, {"lineNumber": 143, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "info", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "info", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "info", "type": "Any"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "info", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "info", "type": "Any"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "next", "type": "Callable"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "_index_iter", "type": "Iterator[int]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "_registry", "type": "Dict[Any, Any]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "finalize", "type": "Any"}, {"lineNumber": 155, "col_offset": 19, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 155, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "info", "type": "Any"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 162, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "info", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 170, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "info", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "obj", "type": "Any"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "_registry", "type": "Any"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 183, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "atexit", "type": "Any"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "atexit", "type": "bool"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 193, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "info", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "obj", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "f", "type": "Any"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "_registry", "type": "Dict[Any, Any]"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "_shutdown", "type": "bool"}, {"lineNumber": 240, "col_offset": 19, "nodeName": "reenable_gc", "type": "bool"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "register", "type": "Callable"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "_exitfunc", "type": "Callable[[], Any]"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "finalize", "type": "Any"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 19, "nodeName": "_registry", "type": "Dict[Any, Any]"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "_shutdown", "type": "bool"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "func", "type": "Any"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "_registry", "type": "Dict[Any, Any]"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "weakref", "type": "_weakref.ReferenceType[nothing]"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "obj", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 164, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "obj", "type": "Any"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "func", "type": "Any"}, {"lineNumber": 165, "col_offset": 40, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "_registry", "type": "Dict[Any, Any]"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "weakref", "type": "_weakref.ReferenceType[nothing]"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "obj", "type": "Any"}, {"lineNumber": 173, "col_offset": 29, "nodeName": "func", "type": "Any"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "_registry", "type": "Any"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "info", "type": "Any"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "info", "type": "Any"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "_registry", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "info", "type": "Any"}, {"lineNumber": 190, "col_offset": 30, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 190, "col_offset": 35, "nodeName": "value", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "_registry", "type": "Dict[Any, Any]"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "weakref", "type": "_weakref.ReferenceType[nothing]"}, {"lineNumber": 204, "col_offset": 18, "nodeName": "f", "type": "Any"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "i", "type": "Any"}, {"lineNumber": 204, "col_offset": 63, "nodeName": "atexit", "type": "bool"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "L", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 206, "col_offset": 36, "nodeName": "L", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "cls", "type": "Type[Any]"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "pending", "type": "None"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "finalize", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "atexit", "type": "module"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "info", "type": "Any"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "info", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "_registry", "type": "Dict[Any, Any]"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "info", "type": "Any"}, {"lineNumber": 165, "col_offset": 40, "nodeName": "info", "type": "Any"}, {"lineNumber": 165, "col_offset": 51, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "info", "type": "Any"}, {"lineNumber": 173, "col_offset": 29, "nodeName": "info", "type": "Any"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "info", "type": "Any"}, {"lineNumber": 173, "col_offset": 51, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "info", "type": "Any"}, {"lineNumber": 196, "col_offset": 53, "nodeName": "__name__", "type": "str"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "__name__", "type": "str"}, {"lineNumber": 199, "col_offset": 52, "nodeName": "__name__", "type": "str"}, {"lineNumber": 204, "col_offset": 29, "nodeName": "f", "type": "Any"}, {"lineNumber": 204, "col_offset": 32, "nodeName": "i", "type": "Any"}, {"lineNumber": 204, "col_offset": 38, "nodeName": "items", "type": "Callable"}, {"lineNumber": 204, "col_offset": 63, "nodeName": "i", "type": "Any"}, {"lineNumber": 205, "col_offset": 36, "nodeName": "index", "type": "Any"}, {"lineNumber": 206, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 206, "col_offset": 30, "nodeName": "i", "type": "Any"}, {"lineNumber": 217, "col_offset": 23, "nodeName": "isenabled", "type": "Callable[[], bool]"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "reenable_gc", "type": "bool"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "f", "type": "Any"}, {"lineNumber": 241, "col_offset": 20, "nodeName": "enable", "type": "Callable[[], None]"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "info", "type": "Any"}, {"lineNumber": 157, "col_offset": 48, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 51, "nodeName": "info", "type": "Any"}, {"lineNumber": 173, "col_offset": 51, "nodeName": "info", "type": "Any"}, {"lineNumber": 196, "col_offset": 74, "nodeName": "id", "type": "Callable[[Any], int]"}, {"lineNumber": 196, "col_offset": 77, "nodeName": "self", "type": "Any"}, {"lineNumber": 199, "col_offset": 42, "nodeName": "id", "type": "Callable[[Any], int]"}, {"lineNumber": 199, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 199, "col_offset": 72, "nodeName": "id", "type": "Callable[[Any], int]"}, {"lineNumber": 199, "col_offset": 75, "nodeName": "obj", "type": "Any"}, {"lineNumber": 204, "col_offset": 38, "nodeName": "_registry", "type": "Dict[Any, Any]"}, {"lineNumber": 217, "col_offset": 23, "nodeName": "gc", "type": "module"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "disable", "type": "Callable[[], None]"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "pending", "type": "List[Any]"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "_dirty", "type": "bool"}, {"lineNumber": 225, "col_offset": 31, "nodeName": "pending", "type": "List[Any]"}, {"lineNumber": 227, "col_offset": 28, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 234, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 236, "col_offset": 31, "nodeName": "f", "type": "Any"}, {"lineNumber": 236, "col_offset": 40, "nodeName": "_registry", "type": "Dict[Any, Any]"}, {"lineNumber": 241, "col_offset": 20, "nodeName": "gc", "type": "module"}, {"lineNumber": 157, "col_offset": 48, "nodeName": "info", "type": "Any"}, {"lineNumber": 196, "col_offset": 53, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 196, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 199, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 199, "col_offset": 52, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 199, "col_offset": 57, "nodeName": "obj", "type": "Any"}, {"lineNumber": 204, "col_offset": 38, "nodeName": "cls", "type": "Type[Any]"}, {"lineNumber": 205, "col_offset": 36, "nodeName": "item", "type": "Any"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "gc", "type": "module"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "pending", "type": "None"}, {"lineNumber": 223, "col_offset": 38, "nodeName": "_select_for_exit", "type": "Callable[[], Any]"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "finalize", "type": "Any"}, {"lineNumber": 227, "col_offset": 28, "nodeName": "pending", "type": "List[Any]"}, {"lineNumber": 233, "col_offset": 28, "nodeName": "f", "type": "Any"}, {"lineNumber": 236, "col_offset": 40, "nodeName": "cls", "type": "Type[Any]"}, {"lineNumber": 223, "col_offset": 38, "nodeName": "cls", "type": "Type[Any]"}, {"lineNumber": 235, "col_offset": 28, "nodeName": "excepthook", "type": "Callable[[Type[BaseException], BaseException, types.TracebackType], Any]"}, {"lineNumber": 235, "col_offset": 28, "nodeName": "sys", "type": "module"}, {"lineNumber": 235, "col_offset": 44, "nodeName": "exc_info", "type": "Callable[[], Union[Tuple[Type[BaseException], BaseException, types.TracebackType], Tuple[None, None, None]]]"}, {"lineNumber": 235, "col_offset": 44, "nodeName": "sys", "type": "module"}]