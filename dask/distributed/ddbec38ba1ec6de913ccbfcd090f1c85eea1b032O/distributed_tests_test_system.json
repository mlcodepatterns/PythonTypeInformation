[{"lineNumber": 12, "col_offset": 0, "nodeName": "test_cpu_count", "type": "Callable[[], Any]"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "test_cpu_count_cgroups", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "test_memory_limit", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "test_memory_limit_cgroups", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "test_rlimit", "type": "Callable[[], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "mycpu_count", "type": "Callable[[], Any]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "count", "type": "Any"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "cpu_affinity", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "dirname", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "count", "type": "Any"}, {"lineNumber": 50, "col_offset": 7, "nodeName": "dirname", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "limit", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "builtin_open", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "open", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "limit", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "resource", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "new_limit", "type": "Any"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "cpu_count", "type": "Callable[[], Any]"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "count", "type": "Any"}, {"lineNumber": 14, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "count", "type": "Any"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "count", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "setattr", "type": "Any"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 25, "col_offset": 41, "nodeName": "mycpu_count", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "setattr", "type": "Any"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "psutil", "type": "Any"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "MyProcess", "type": "Type[Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "builtin_open", "type": "Any"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "open", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "cpu_count", "type": "Callable[[], Any]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "memory_limit", "type": "Callable[[], Any]"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "limit", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "limit", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "total", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "limit", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "builtins", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "setattr", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "builtins", "type": "Any"}, {"lineNumber": 73, "col_offset": 42, "nodeName": "myopen", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "setattr", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "sys", "type": "module"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "memory_limit", "type": "Callable[[], Any]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "limit", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "importorskip", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "OSError", "type": "Type[OSError]"}, {"lineNumber": 15, "col_offset": 20, "nodeName": "cpu_count", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "monkeypatch", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "monkeypatch", "type": "Any"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "builtins", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "setattr", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "builtins", "type": "Any"}, {"lineNumber": 46, "col_offset": 46, "nodeName": "myopen", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "setattr", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "sys", "type": "module"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "count", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "count", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "path", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "builtin_open", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "path", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "monkeypatch", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "monkeypatch", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "memory_limit", "type": "Callable[[], Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "setrlimit", "type": "Any"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "RLIMIT_RSS", "type": "Any"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "new_limit", "type": "Any"}, {"lineNumber": 15, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 36, "col_offset": 51, "nodeName": "dirname", "type": "Any"}, {"lineNumber": 37, "col_offset": 52, "nodeName": "dirname", "type": "Any"}, {"lineNumber": 36, "col_offset": 60, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 37, "col_offset": 61, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "path", "type": "Any"}, {"lineNumber": 42, "col_offset": 23, "nodeName": "paths", "type": "Dict[Any, _io.StringIO]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "builtin_open", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "path", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "monkeypatch", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "monkeypatch", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "virtual_memory", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 71, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "resource", "type": "Any"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "resource", "type": "Any"}, {"lineNumber": 86, "col_offset": 49, "nodeName": "new_limit", "type": "Any"}, {"lineNumber": 86, "col_offset": 60, "nodeName": "new_limit", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "memory_limit", "type": "Callable[[], Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "skip", "type": "Any"}, {"lineNumber": 36, "col_offset": 60, "nodeName": "io", "type": "module"}, {"lineNumber": 37, "col_offset": 61, "nodeName": "io", "type": "module"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "path", "type": "Any"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 44, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "psutil", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "io", "type": "module"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "paths", "type": "Dict[Any, _io.StringIO]"}]