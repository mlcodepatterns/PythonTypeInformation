[{"lineNumber": 19, "col_offset": 3, "nodeName": "_HAS_SKLEARN", "type": "bool"}, {"lineNumber": 24, "col_offset": 3, "nodeName": "_HAS_XGBOOST", "type": "bool"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "pytestmark", "type": "Any"}, {"lineNumber": 34, "col_offset": 62, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "BoostedTreeClassificationBostonHousingScikitNumericTest", "type": "Type[BoostedTreeClassificationBostonHousingScikitNumericTest]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "BoostedTreeClassificationBostonHousingScikitNumericTest", "type": "Type[BoostedTreeClassificationBostonHousingScikitNumericTest]"}, {"lineNumber": 168, "col_offset": 63, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "BoostedTreeClassificationBostonHousingXGboostNumericTest", "type": "Type[BoostedTreeClassificationBostonHousingXGboostNumericTest]"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "BoostedTreeClassificationBostonHousingXGboostNumericTest", "type": "Type[BoostedTreeClassificationBostonHousingXGboostNumericTest]"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "skip", "type": "Any"}, {"lineNumber": 34, "col_offset": 62, "nodeName": "unittest", "type": "module"}, {"lineNumber": 168, "col_offset": 63, "nodeName": "unittest", "type": "module"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "mark", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "output_name", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "product", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "output_name", "type": "str"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "product", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "xgb_model", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "product", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 232, "col_offset": 27, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 237, "col_offset": 29, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "output_name", "type": "str"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 269, "col_offset": 27, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 271, "col_offset": 29, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "output_name", "type": "str"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "load_boston", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "Type[BoostedTreeClassificationBostonHousingScikitNumericTest]"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "Type[BoostedTreeClassificationBostonHousingScikitNumericTest]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "Type[BoostedTreeClassificationBostonHousingScikitNumericTest]"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Type[BoostedTreeClassificationBostonHousingScikitNumericTest]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "GradientBoostingClassifier", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "X", "type": "Any"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "target", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 71, "col_offset": 51, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 71, "col_offset": 71, "nodeName": "output_name", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "priors", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "metrics", "type": "Dict[str, int]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "_train_convert_evaluate_assert", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "product", "type": "Callable"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "it", "type": "int"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "arg", "type": "Dict[nothing, nothing]"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "load_boston", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "Type[BoostedTreeMultiClassClassificationBostonHousingScikitNumericTest]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "Type[BoostedTreeMultiClassClassificationBostonHousingScikitNumericTest]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "Type[BoostedTreeMultiClassClassificationBostonHousingScikitNumericTest]"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "Type[BoostedTreeMultiClassClassificationBostonHousingScikitNumericTest]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "_train_convert_evaluate_assert", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "product", "type": "Callable"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "it", "type": "int"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "arg", "type": "Dict[nothing, nothing]"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "XGBClassifier", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "X", "type": "Any"}, {"lineNumber": 185, "col_offset": 30, "nodeName": "target", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "xgb_model", "type": "Any"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 189, "col_offset": 43, "nodeName": "output_name", "type": "str"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 210, "col_offset": 18, "nodeName": "product", "type": "Callable"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "it", "type": "int"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "arg", "type": "Dict[nothing, nothing]"}, {"lineNumber": 214, "col_offset": 23, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 214, "col_offset": 33, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "load_boston", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "Type[BoostedTreeBinaryClassificationBostonHousingXGboostNumericTest]"}, {"lineNumber": 233, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "Type[BoostedTreeBinaryClassificationBostonHousingXGboostNumericTest]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "Type[BoostedTreeBinaryClassificationBostonHousingXGboostNumericTest]"}, {"lineNumber": 237, "col_offset": 29, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "Type[BoostedTreeBinaryClassificationBostonHousingXGboostNumericTest]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "_train_convert_evaluate_assert", "type": "Callable[..., Any]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "_classifier_stress_test", "type": "Any"}, {"lineNumber": 260, "col_offset": 22, "nodeName": "load_boston", "type": "Any"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "Type[BoostedTreeMultiClassClassificationBostonHousingXGboostNumericTest]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "Type[BoostedTreeMultiClassClassificationBostonHousingXGboostNumericTest]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "Type[BoostedTreeMultiClassClassificationBostonHousingXGboostNumericTest]"}, {"lineNumber": 271, "col_offset": 29, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "Type[BoostedTreeMultiClassClassificationBostonHousingXGboostNumericTest]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "_train_convert_evaluate_assert", "type": "Callable[..., Any]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "_classifier_stress_test", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "BoostedTreeBinaryClassificationBostonHousingScikitNumericTest"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "metrics", "type": "Dict[str, int]"}, {"lineNumber": 67, "col_offset": 68, "nodeName": "scikit_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "self", "type": "BoostedTreeBinaryClassificationBostonHousingScikitNumericTest"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "self", "type": "BoostedTreeBinaryClassificationBostonHousingScikitNumericTest"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "skl_converter", "type": "module"}, {"lineNumber": 71, "col_offset": 51, "nodeName": "self", "type": "BoostedTreeBinaryClassificationBostonHousingScikitNumericTest"}, {"lineNumber": 71, "col_offset": 71, "nodeName": "self", "type": "BoostedTreeBinaryClassificationBostonHousingScikitNumericTest"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 73, "col_offset": 64, "nodeName": "n_classes_", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "init_", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "init_", "type": "Any"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "log", "type": "Any"}, {"lineNumber": 79, "col_offset": 47, "nodeName": "priors", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "_is_macos", "type": "Callable[[], bool]"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "X", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "predict", "type": "Any"}, {"lineNumber": 84, "col_offset": 52, "nodeName": "X", "type": "Any"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "evaluate_classifier", "type": "Callable[..., Dict[str, int]]"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "spec", "type": "Any"}, {"lineNumber": 87, "col_offset": 48, "nodeName": "df", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "_check_metrics", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "metrics", "type": "Dict[str, int]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "BoostedTreeBinaryClassificationBostonHousingScikitNumericTest"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "itertools", "type": "module"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 111, "col_offset": 49, "nodeName": "p", "type": "Tuple[Any, ...]"}, {"lineNumber": 111, "col_offset": 54, "nodeName": "product", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "_train_convert_evaluate_assert", "type": "Any"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "digitize", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "BoostedTreeMultiClassClassificationBostonHousingScikitNumericTest"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "itertools", "type": "module"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 159, "col_offset": 49, "nodeName": "p", "type": "Tuple[Any, ...]"}, {"lineNumber": 159, "col_offset": 54, "nodeName": "product", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "_train_convert_evaluate_assert", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "BoostedTreeClassificationBostonHousingXGboostNumericTest"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "xgboost", "type": "Any"}, {"lineNumber": 184, "col_offset": 44, "nodeName": "xgboost_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "xgb_model", "type": "Any"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "self", "type": "BoostedTreeBinaryClassificationBostonHousingXGboostNumericTest"}, {"lineNumber": 185, "col_offset": 30, "nodeName": "self", "type": "BoostedTreeBinaryClassificationBostonHousingXGboostNumericTest"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "xgb_converter", "type": "module"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "self", "type": "BoostedTreeBinaryClassificationBostonHousingXGboostNumericTest"}, {"lineNumber": 189, "col_offset": 43, "nodeName": "self", "type": "BoostedTreeBinaryClassificationBostonHousingXGboostNumericTest"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "_is_macos", "type": "Callable[[], bool]"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 194, "col_offset": 30, "nodeName": "X", "type": "Any"}, {"lineNumber": 195, "col_offset": 28, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 195, "col_offset": 52, "nodeName": "X", "type": "Any"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "evaluate_classifier_with_probabilities", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "spec", "type": "Any"}, {"lineNumber": 200, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 210, "col_offset": 18, "nodeName": "itertools", "type": "module"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 211, "col_offset": 49, "nodeName": "p", "type": "Tuple[Any, ...]"}, {"lineNumber": 211, "col_offset": 54, "nodeName": "product", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "_train_convert_evaluate_assert", "type": "Callable[..., Any]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "BoostedTreeBinaryClassificationBostonHousingXGboostNumericTest"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 266, "col_offset": 17, "nodeName": "digitize", "type": "Any"}, {"lineNumber": 266, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "BoostedTreeMultiClassClassificationBostonHousingXGboostNumericTest"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 52, "col_offset": 51, "nodeName": "mean", "type": "Any"}, {"lineNumber": 73, "col_offset": 64, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 47, "nodeName": "init_", "type": "Any"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "_macos_version", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "pd", "type": "Any"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "self", "type": "BoostedTreeBinaryClassificationBostonHousingScikitNumericTest"}, {"lineNumber": 83, "col_offset": 46, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 84, "col_offset": 52, "nodeName": "self", "type": "BoostedTreeBinaryClassificationBostonHousingScikitNumericTest"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "self", "type": "BoostedTreeBinaryClassificationBostonHousingScikitNumericTest"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "values", "type": "Callable"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "p", "type": "Tuple[Any, ...]"}, {"lineNumber": 113, "col_offset": 71, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 113, "col_offset": 75, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 50, "nodeName": "arg", "type": "Dict[nothing, nothing]"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 37, "nodeName": "values", "type": "Callable"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 159, "col_offset": 41, "nodeName": "p", "type": "Tuple[Any, ...]"}, {"lineNumber": 161, "col_offset": 71, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 161, "col_offset": 75, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 50, "nodeName": "arg", "type": "Dict[nothing, nothing]"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "_macos_version", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "pd", "type": "Any"}, {"lineNumber": 194, "col_offset": 30, "nodeName": "self", "type": "BoostedTreeBinaryClassificationBostonHousingXGboostNumericTest"}, {"lineNumber": 194, "col_offset": 46, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 195, "col_offset": 28, "nodeName": "xgb_model", "type": "Any"}, {"lineNumber": 195, "col_offset": 52, "nodeName": "self", "type": "BoostedTreeBinaryClassificationBostonHousingXGboostNumericTest"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 197, "col_offset": 60, "nodeName": "cur_vals", "type": "Any"}, {"lineNumber": 197, "col_offset": 72, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "self", "type": "BoostedTreeBinaryClassificationBostonHousingXGboostNumericTest"}, {"lineNumber": 202, "col_offset": 30, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "self", "type": "BoostedTreeBinaryClassificationBostonHousingXGboostNumericTest"}, {"lineNumber": 203, "col_offset": 28, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 210, "col_offset": 37, "nodeName": "values", "type": "Callable"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 211, "col_offset": 41, "nodeName": "p", "type": "Tuple[Any, ...]"}, {"lineNumber": 213, "col_offset": 71, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 213, "col_offset": 75, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "self", "type": "BoostedTreeClassificationBostonHousingXGboostNumericTest"}, {"lineNumber": 215, "col_offset": 50, "nodeName": "arg", "type": "Dict[nothing, nothing]"}, {"lineNumber": 233, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 236, "col_offset": 27, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 236, "col_offset": 51, "nodeName": "mean", "type": "Any"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 266, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 60, "col_offset": 48, "nodeName": "params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 60, "col_offset": 56, "nodeName": "metrics", "type": "Dict[str, int]"}, {"lineNumber": 79, "col_offset": 47, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 83, "col_offset": 46, "nodeName": "self", "type": "BoostedTreeBinaryClassificationBostonHousingScikitNumericTest"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "options", "type": "Dict[Any, Any]"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 135, "col_offset": 32, "nodeName": "histogram", "type": "Any"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "t", "type": "Any"}, {"lineNumber": 158, "col_offset": 37, "nodeName": "options", "type": "Dict[Any, Any]"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 177, "col_offset": 48, "nodeName": "params", "type": "Any"}, {"lineNumber": 177, "col_offset": 56, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 194, "col_offset": 46, "nodeName": "self", "type": "BoostedTreeBinaryClassificationBostonHousingXGboostNumericTest"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 197, "col_offset": 45, "nodeName": "cur_vals", "type": "Any"}, {"lineNumber": 210, "col_offset": 37, "nodeName": "options", "type": "Dict[Any, Any]"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 233, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 266, "col_offset": 32, "nodeName": "histogram", "type": "Any"}, {"lineNumber": 266, "col_offset": 45, "nodeName": "t", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 52, "col_offset": 51, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "options", "type": "Dict[Any, Any]"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 135, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "options", "type": "Dict[Any, Any]"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "xgb_model", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "options", "type": "Dict[Any, Any]"}, {"lineNumber": 233, "col_offset": 17, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 236, "col_offset": 51, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 266, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 53, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 266, "col_offset": 53, "nodeName": "num_classes", "type": "int"}]